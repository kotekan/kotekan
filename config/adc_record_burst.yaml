##########################################
#
# adc_record.yaml
#
# A config which allows for the recording of one
# stream of ADC data from ICEBoards on systems without enough disk IO to
# record continuously.  Instead this records data to a RAM buffer and then
# stops capturing data while it's written to disk slowly
#
# Author: Andre Renard
#
##########################################
---
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: INFO

# Note that for ADC mode the "samples" variable
# doesn't really make sense here.  Since there are
# 2048 ADC samples in the 2.56 us the other modes consider to be a "sample"
samples_per_data_set: 65536
sample_block_size: 2048

# Set this value to the maximum allowed by the system RAM.
# Each frame is ~135 MB, and stores about 168ms of data.
buffer_depth: 105
cpu_affinity: [2,3]
instrument_name: mcgill_lab_test

# Telescope
telescope:
  name: ICETelescope
  require_gps: false
  query_gps: true # If fpga_master provides GPS time set to true
  gps_host: 127.0.0.1 # Set this to the fpga_master host
  num_local_freq: 1 # This value doesn't apply to ADC capture

# Pool
main_pool:
  kotekan_metadata_pool: chimeMetadata
  num_metadata_objects: 2 * buffer_depth + 10

# Buffers
adc_buffer:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: samples_per_data_set * sample_block_size
  metadata_pool: main_pool

lost_samples_buffer:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: samples_per_data_set
  metadata_pool: main_pool

# Stages

# The core mapping here is setup for a 6 core CPU with 12 threads (vcores)
# and setup to use the first 4 real cores (8 vcores)
dpdk:
  kotekan_stage: dpdkCore
  # Format is index = lcore, value = cpu core
  lcore_cpu_map: [0]
  master_lcore_cpu: 1
  fpga_packet_size: 4160
  samples_per_packet: 2
  capture_n_frames: buffer_depth
  alignment: samples_per_data_set * 100
  # Format is index = lcore, value = array of port IDs
  # so [[0,1],[2,3]] maps lcore 0 to service ports 0 and 1,
  # and lcore 1 to service ports 2 and 3.
  lcore_port_map:
    - [0]
  # One handler must be given per port on the system.
  handlers:
    - dpdk_handler: iceBoardStandard
      out_buf: adc_buffer
      lost_samples_buf: lost_samples_buffer
    # Uncomment if you have more than one uio port active
    #- dpdk_handler: none
    #- dpdk_handler: none
    #- dpdk_handler: none
    #- dpdk_handler: none
    #- dpdk_handler: none
    #- dpdk_handler: none
    #- dpdk_handler: none

zero_samples:
  kotekan_stage: zeroSamples
  out_buf: adc_buffer
  lost_samples_buf: lost_samples_buffer
  zero_value: 0 # Should be set to 255?

metadata_dump:
  kotekan_stage: chimeMetadataDump
  in_buf: adc_buffer

raw_file_write:
  kotekan_stage: rawFileWrite
  in_buf: adc_buffer
  # *** Change this value for each run ***
  base_dir: /data
  file_name: adc_data
  file_ext: raw
  exit_after_n_files: buffer_depth
