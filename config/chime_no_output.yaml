##########################################
#
# chime_no_output.yaml
#
# CHIME config to exercise full GPU functionality (N2 + FRB),
# without generating any output.
# Easily adapted to provide validation on N2 data.
#
# Author: Keith Vanderlinde
#
##########################################
---
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: info
udp_packet_size: 4928
udp_frb_packet_size: 4264
udp_frb_header_size: 168
num_links: 4
freq_array: [4,7,10,16]
timesamples_per_packet: 2
timesamples_per_frb_packet: 16
num_elements: 2048
num_local_freq: 1
num_total_freq: 4
block_size: 32
samples_per_data_set: 49152
downsample_time: 3
downsample_freq: 8
factor_upchan: 128
factor_upchan_out: 16
num_beams: 4
num_frb_total_beams: 1024
num_data_sets: 1
num_gpus: 4
buffer_depth: 8
num_gpu_frames: 16
cpu_affinity: [2,3,8,9]
sizeof_float: 4
reorder_map: [51,50,49,48,115,114,113,112,55,54,53,52,119,118,117,116,59,58,57,56,123,122,121,120,63,62,61,60,127,126,125,124,0,1,2,3,64,65,66,67,4,5,6,7,68,69,70,71,8,9,10,11,72,73,74,75,12,13,14,15,76,77,78,79,140,141,142,143,204,205,206,207,136,137,138,139,200,201,202,203,132,133,134,135,196,197,198,199,128,129,130,131,192,193,194,195,191,190,189,188,255,254,253,252,187,186,185,184,251,250,249,248,183,182,181,180,247,246,245,244,179,178,177,176,243,242,241,240,291,290,289,288,355,354,353,352,292,293,294,295,356,357,358,359,296,297,298,299,360,361,362,363,300,301,302,303,364,365,366,367,275,274,273,272,339,338,337,336,279,278,277,276,343,342,341,340,283,282,281,280,347,346,345,344,287,286,285,284,351,350,349,348,396,397,398,399,460,461,462,463,392,393,394,395,456,457,458,459,388,389,390,391,452,453,454,455,384,385,386,387,448,449,450,451,428,429,430,431,492,493,494,495,424,425,426,427,488,489,490,491,420,421,422,423,484,485,486,487,416,417,418,419,480,481,482,483,35,34,33,32,99,98,97,96,39,38,37,36,103,102,101,100,43,42,41,40,107,106,105,104,47,46,45,44,111,110,109,108,16,17,18,19,80,81,82,83,20,21,22,23,84,85,86,87,24,25,26,27,88,89,90,91,28,29,30,31,92,93,94,95,156,157,158,159,220,221,222,223,152,153,154,155,216,217,218,219,148,149,150,151,212,213,214,215,144,145,146,147,208,209,210,211,175,174,173,172,239,238,237,236,171,170,169,168,235,234,233,232,167,166,165,164,231,230,229,228,163,162,161,160,227,226,225,224,307,306,305,304,371,370,369,368,311,310,309,308,375,374,373,372,315,314,313,312,379,378,377,376,319,318,317,316,383,382,381,380,259,258,257,256,323,322,321,320,263,262,261,260,327,326,325,324,267,266,265,264,331,330,329,328,271,270,269,268,335,334,333,332,412,413,414,415,476,477,478,479,408,409,410,411,472,473,474,475,404,405,406,407,468,469,470,471,400,401,402,403,464,465,466,467,444,445,446,447,508,509,510,511,440,441,442,443,504,505,506,507,436,437,438,439,500,501,502,503,432,433,434,435,496,497,498,499]


# Keeping and eye on status
buffer_status:
  kotekan_process: bufferStatus
  time_delay: 1000000

  # Pool
main_pool:
    kotekan_metadata_pool: chimeMetadata
    num_metadata_objects: 15 * buffer_depth

# Buffers
gpu_input_buffers:
    num_frames: buffer_depth
    frame_size: samples_per_data_set * num_elements * num_local_freq * num_data_sets
    metadata_pool: main_pool
    gpu_input_buffer_0:
        kotekan_buffer: standard
    gpu_input_buffer_1:
        kotekan_buffer: standard
    gpu_input_buffer_2:
        kotekan_buffer: standard
    gpu_input_buffer_3:
        kotekan_buffer: standard

beamform_output_buffesrs:
    num_frames: buffer_depth
    frame_size: num_data_sets * (samples_per_data_set/downsample_time/downsample_freq) * num_frb_total_beams * sizeof_float
    metadata_pool: main_pool
    beamform_output_buffer_0:
        kotekan_buffer: standard
    beamform_output_buffer_1:
        kotekan_buffer: standard
    beamform_output_buffer_2:
        kotekan_buffer: standard
    beamform_output_buffer_3:
        kotekan_buffer: standard

frb_output_buffer:
    num_frames: buffer_depth
    frame_size: udp_frb_packet_size*8*256
    metadata_pool: main_pool
    kotekan_buffer: standard

gpu_output_buffers:
    num_frames: buffer_depth
    frame_size: 4 * num_data_sets * num_local_freq * ((num_elements * num_elements) + (num_elements * block_size))
    metadata_pool: main_pool
    gpu_output_buffer_0:
        kotekan_buffer: standard
    gpu_output_buffer_1:
        kotekan_buffer: standard
    gpu_output_buffer_2:
        kotekan_buffer: standard
    gpu_output_buffer_3:
        kotekan_buffer: standard

file_output_buffers:
    num_frames: buffer_depth
    frame_size: 4 * num_data_sets * num_local_freq * ((num_elements * num_elements) + (num_elements * block_size))
    metadata_pool: main_pool
    file_output_buffer_0:
        kotekan_buffer: standard
    file_output_buffer_1:
        kotekan_buffer: standard
    file_output_buffer_2:
        kotekan_buffer: standard
    file_output_buffer_3:
        kotekan_buffer: standard

dpdk:
  kotekan_process: dpdkWrapper
  mode: shuffle4
  num_lcores: 4
  link_map: [0,1,2,3]
  network_out_buf_0: gpu_input_buffer_0
  network_out_buf_1: gpu_input_buffer_1
  network_out_buf_2: gpu_input_buffer_2
  network_out_buf_3: gpu_input_buffer_3

# Adds endpoints /inspect_frame/gpu_input_buffer_*
inspect_input:
  # Frames are 2048 bytes, so 524288 = 256 frames
  len: 524288
  inspect_0:
    kotekan_process: restInspectFrame
    in_buf: gpu_input_buffer_0
  inspect_1:
    kotekan_process: restInspectFrame
    in_buf: gpu_input_buffer_1
  inspect_2:
    kotekan_process: restInspectFrame
    in_buf: gpu_input_buffer_2
  inspect_3:
    kotekan_process: restInspectFrame
    in_buf: gpu_input_buffer_3

#gen_data:
#  type: const
#  value: 153
#  test_data_gen_0:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_0
#  test_data_gen_1:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_1
#  test_data_gen_2:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_2
#  test_data_gen_3:
#    kotekan_process: testDataGen
#    network_out_buf: gpu_input_buffer_3

gpu:
  kernel_path: "../lib/hsa/kernels/"
  gain_dir: "/etc/kotekan/"
  commands:
  - name: hsaInputData
  - name: hsaPresumZero
  - name: hsaOutputDataZero
  - name: hsaBarrier
  - name: hsaPresumKernel
  - name: hsaCorrelatorKernel
  - name: hsaBeamformReorder
  - name: hsaBeamformKernel
  - name: hsaBeamformTranspose
  - name: hsaBeamformUpchan
  - name: hsaBeamformOutputData
  - name: hsaOutputData
  enable_delay: true
  delay_max_fraction: 0.5
  link_map: [0,1,2,3]
  num_gpus: 4
  block_size: 32
  buffer_depth: 4
  n_intg: 24576
  frame_arrival_period: samples_per_data_set / 390625
  gpu_0:
    kotekan_process: hsaProcess
    gpu_id: 0
    in_buffers:
      network_buf: gpu_input_buffer_0
    out_buffers:
      output_buf: gpu_output_buffer_0
      beamform_output_buf: beamform_output_buffer_0
  gpu_1:
    kotekan_process: hsaProcess
    gpu_id: 1
    in_buffers:
      network_buf: gpu_input_buffer_1
    out_buffers:
      output_buf: gpu_output_buffer_1
      beamform_output_buf: beamform_output_buffer_1
  gpu_2:
    kotekan_process: hsaProcess
    gpu_id: 2
    in_buffers:
      network_buf: gpu_input_buffer_2
    out_buffers:
      output_buf: gpu_output_buffer_2
      beamform_output_buf: beamform_output_buffer_2
  gpu_3:
    kotekan_process: hsaProcess
    gpu_id: 3
    in_buffers:
      network_buf: gpu_input_buffer_3
    out_buffers:
      output_buf: gpu_output_buffer_3
      beamform_output_buf: beamform_output_buffer_3

#postprocess:
#  kotekan_process: frbPostProcess
#  network_input_buffer_0: beamform_output_buffer_0
#  network_input_buffer_1: beamform_output_buffer_1
#  network_input_buffer_2: beamform_output_buffer_2
#  network_input_buffer_3: beamform_output_buffer_3
#  frb_out_buf: frb_output_buffer

#check_data:
#  real: 98304
#  imag: 0
#  const_data_check_0:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_0
#  const_data_check_1:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_1
#  const_data_check_2:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_2
#  const_data_check_3:
#    kotekan_process: constDataCheck
#    buf: gpu_output_buffer_3

accumulate:
    acc_0:
        kotekan_process: accumulate
        in_buf: gpu_output_buffer_0
        out_buf: file_output_buffer_0
    acc_1:
        kotekan_process: accumulate
        in_buf: gpu_output_buffer_1
        out_buf: file_output_buffer_1
    acc_2:
        kotekan_process: accumulate
        in_buf: gpu_output_buffer_2
        out_buf: file_output_buffer_2
    acc_3:
        kotekan_process: accumulate
        in_buf: gpu_output_buffer_3
        out_buf: file_output_buffer_3

# Adds endpoints /inspect_frame/file_output_buffer_*
inspect_output:
  # sets length to frame_size of file_output_buffer_0
  len: 0
  inspect_0:
    kotekan_process: restInspectFrame
    in_buf: file_output_buffer_0
  inspect_1:
    kotekan_process: restInspectFrame
    in_buf: file_output_buffer_1
  inspect_2:
    kotekan_process: restInspectFrame
    in_buf: file_output_buffer_2
  inspect_3:
    kotekan_process: restInspectFrame
    in_buf: file_output_buffer_3

debug_plots:
    plot_0:
        kotekan_process: pyPlotN2
        in_buf: gpu_output_buffer_0
        gpu_id: 0
    plot_1:
        kotekan_process: pyPlotN2
        in_buf: gpu_output_buffer_1
        gpu_id: 1
    plot_2:
        kotekan_process: pyPlotN2
        in_buf: gpu_output_buffer_2
        gpu_id: 2
    plot_3:
        kotekan_process: pyPlotN2
        in_buf: gpu_output_buffer_3
        gpu_id: 3



