# -*-yaml-*-

# CHORD upchannelizer setup

################################################################################

# Upchannelizer setup

# TODO: Remove this
upchannelization_factor: 4

# This mapping is defined in Seth Siegel's `ice_rfsoc_comparison_dm_2000_tint_1_gamma_0_tsys_30K_tsky.yaml`.
# (This is the "worst case" mapping.)
#     - 0: 64
#     - 341.65: 32
#     - 442.01: 16
#     - 568.66: 8
#     - 714.99: 4
#     - 907.41: 2
#     - 1168.77: 1
#
# This mapping is defined in Seth Siegel's `ice_rfsoc_comparison_dm_750_tint_1_gamma_0_tsys_30K_tsky.yaml`.
# (This is the "default" mapping.)
#     - 0: 8
#     - 607.9: 4
#     - 790.57: 2
#     - 1032.16: 1



# We are using the "worst case" mapping:
upchannelization_factor_mapping:
    -    0: 64                  # Fmin = 0
    - 1750: 32                  # Fmin = 2
    - 2264: 16                  # Fmin = 46
    - 2912:  8                  # Fmin = 86
    - 3661:  4                  # Fmin = 133
    - 4646:  2                  # Fmin = 195
    - 5985:  1                  # Fmin = 279

# Notes:
#  U  | lowest local channel | first global channel |    frequency
#     | (see upchan table)   | (see channel table)  |
# -----------------------------------------------------------------
#  64 |                    0 |                 1536 |  300.0 MHz
#  32 |                    2 |                 1792 |  350.0 MHz
#  16 |                    6 |                 2304 |  450.0 MHz
#   8 |                   11 |                 2944 |  575.0 MHz
#   4 |                   17 |                 3712 |  725.0 MHz
#   2 |                   25 |                 4736 |  925.0 MHz
#   1 |                   35 |                 6016 | 1175.0 MHz





# The GPU-local (not global) channel index range for each upchannelization factor

# actual = 2, scaled = 128
upchan_U64_max_num_channels: 4
upchan_U64_min_channel: 0
upchan_U64_max_channel: 2
upchan_U64_min_output_channel: upchan_all_min_output_channel
upchan_U64_max_output_channel: upchan_U64_min_output_channel + (upchan_U64_max_channel - upchan_U64_min_channel) * 64

# actual = 4, scaled = 128
upchan_U32_max_num_channels: 8
upchan_U32_min_channel: 2
upchan_U32_max_channel: 6
upchan_U32_min_output_channel: upchan_U64_max_output_channel
upchan_U32_max_output_channel: upchan_U32_min_output_channel + (upchan_U32_max_channel - upchan_U32_min_channel) * 32

# actual = 5, scaled = 80
upchan_U16_max_num_channels: 8
upchan_U16_min_channel: 6
upchan_U16_max_channel: 11
upchan_U16_min_output_channel: upchan_U32_max_output_channel
upchan_U16_max_output_channel: upchan_U16_min_output_channel + (upchan_U16_max_channel - upchan_U16_min_channel) * 16

# actual = 6, scaled = 48
upchan_U8_max_num_channels: 8
upchan_U8_min_channel: 11
upchan_U8_max_channel: 17
upchan_U8_min_output_channel: upchan_U16_max_output_channel
upchan_U8_max_output_channel: upchan_U8_min_output_channel + (upchan_U8_max_channel - upchan_U8_min_channel) * 8

# actual = 8, scaled = 32
upchan_U4_max_num_channels: 16
upchan_U4_min_channel: 17
upchan_U4_max_channel: 25
upchan_U4_min_output_channel: upchan_U8_max_output_channel
upchan_U4_max_output_channel: upchan_U4_min_output_channel + (upchan_U4_max_channel - upchan_U4_min_channel) * 4

# actual = 10, scaled = 20
upchan_U2_max_num_channels: 16
upchan_U2_min_channel: 25
upchan_U2_max_channel: 35
upchan_U2_min_output_channel: upchan_U4_max_output_channel
upchan_U2_max_output_channel: upchan_U2_min_output_channel + (upchan_U2_max_channel - upchan_U2_min_channel) * 2

# actual = 13, scaled = 13
upchan_U1_max_num_channels: 16
upchan_U1_min_channel: 35
upchan_U1_max_channel: 48
upchan_U1_min_output_channel: upchan_U2_max_output_channel
upchan_U1_max_output_channel: upchan_U1_min_output_channel + (upchan_U1_max_channel - upchan_U1_min_channel) * 1

upchan_all_max_num_output_channels: 128
upchan_all_min_output_channel: 0
upchan_all_max_output_channel: upchan_U1_max_output_channel

# Upchannelization gains
upchan_U2_gains: [1, 1]
upchan_U4_gains: [1, 1, 1, 1]
upchan_U8_gains: [1, 1, 1, 1, 1, 1, 1, 1]
upchan_U16_gains: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
upchan_U32_gains: [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
]
upchan_U64_gains: [
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
    1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
]

################################################################################

# Buffers

# Gains

host_upchan_U2_gain_buffer:
    kotekan_buffer: standard
    num_frames: 1
    frame_size: sizeof_float16 * upchan_U2_max_num_channels * 2
    metadata_pool: main_pool

host_upchan_U4_gain_buffer:
    kotekan_buffer: standard
    num_frames: 1
    frame_size: sizeof_float16 * upchan_U4_max_num_channels * 4
    metadata_pool: main_pool

host_upchan_U8_gain_buffer:
    kotekan_buffer: standard
    num_frames: 1
    frame_size: sizeof_float16 * upchan_U8_max_num_channels * 8
    metadata_pool: main_pool

host_upchan_U16_gain_buffer:
    kotekan_buffer: standard
    num_frames: 1
    frame_size: sizeof_float16 * upchan_U16_max_num_channels * 16
    metadata_pool: main_pool

host_upchan_U32_gain_buffer:
    kotekan_buffer: standard
    num_frames: 1
    frame_size: sizeof_float16 * upchan_U32_max_num_channels * 32
    metadata_pool: main_pool

host_upchan_U64_gain_buffer:
    kotekan_buffer: standard
    num_frames: 1
    frame_size: sizeof_float16 * upchan_U64_max_num_channels * 64
    metadata_pool: main_pool

# Voltages

host_upchan_U2_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (upchan_U2_max_num_channels * 2) * (num_times / 2)
    metadata_pool: main_pool
host_upchan_U2_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (upchan_U2_max_num_channels * 2) * (num_times / 2)
    metadata_pool: main_pool

host_upchan_U4_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (upchan_U4_max_num_channels * 4) * (num_times / 4)
    metadata_pool: main_pool
host_upchan_U4_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (upchan_U4_max_num_channels * 4) * (num_times / 4)
    metadata_pool: main_pool

host_upchan_U8_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (upchan_U8_max_num_channels * 8) * (num_times / 8)
    metadata_pool: main_pool
host_upchan_U8_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (upchan_U8_max_num_channels * 8) * (num_times / 8)
    metadata_pool: main_pool

host_upchan_U16_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (upchan_U16_max_num_channels * 16) * (num_times / 16)
    metadata_pool: main_pool
host_upchan_U16_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (upchan_U16_max_num_channels * 16) * (num_times / 16)
    metadata_pool: main_pool

host_upchan_U32_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (upchan_U32_max_num_channels * 32) * (num_times / 32)
    metadata_pool: main_pool
host_upchan_U32_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (upchan_U32_max_num_channels * 32) * (num_times / 32)
    metadata_pool: main_pool

host_upchan_U64_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (upchan_U64_max_num_channels * 64) * (num_times / 64)
    metadata_pool: main_pool
host_upchan_U64_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (upchan_U64_max_num_channels * 64) * (num_times / 64)
    metadata_pool: main_pool

################################################################################

# Stages

run_upchan_U2:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_U2_gain_buffer_in: host_upchan_U2_gain_buffer
        out_buffers:
            host_upchan_U2_voltage_ringbuffer_out: host_upchan_U2_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_U2_gain_buffer_in
          gpu_mem: upchan_U2_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_chord_U2
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_U2_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_U2_gain_buffer
          gpu_mem_output_voltage: upchan_U2_voltage_buffer
          Fmin: upchan_U2_min_channel
          Fmax: upchan_U2_max_channel

run_upchan_U4:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_U4_gain_buffer_in: host_upchan_U4_gain_buffer
        out_buffers:
            host_upchan_U4_voltage_ringbuffer_out: host_upchan_U4_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_U4_gain_buffer_in
          gpu_mem: upchan_U4_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_chord_U4
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_U4_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_U4_gain_buffer
          gpu_mem_output_voltage: upchan_U4_voltage_buffer
          Fmin: upchan_U4_min_channel
          Fmax: upchan_U4_max_channel

run_upchan_U8:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_U8_gain_buffer_in: host_upchan_U8_gain_buffer
        out_buffers:
            host_upchan_U8_voltage_ringbuffer_out: host_upchan_U8_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_U8_gain_buffer_in
          gpu_mem: upchan_U8_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_chord_U8
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_U8_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_U8_gain_buffer
          gpu_mem_output_voltage: upchan_U8_voltage_buffer
          Fmin: upchan_U8_min_channel
          Fmax: upchan_U8_max_channel

run_upchan_U16:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_U16_gain_buffer_in: host_upchan_U16_gain_buffer
        out_buffers:
            host_upchan_U16_voltage_ringbuffer_out: host_upchan_U16_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_U16_gain_buffer_in
          gpu_mem: upchan_U16_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_chord_U16
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_U16_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_U16_gain_buffer
          gpu_mem_output_voltage: upchan_U16_voltage_buffer
          Fmin: upchan_U16_min_channel
          Fmax: upchan_U16_max_channel

run_upchan_U32:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_U32_gain_buffer_in: host_upchan_U32_gain_buffer
        out_buffers:
            host_upchan_U32_voltage_ringbuffer_out: host_upchan_U32_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_U32_gain_buffer_in
          gpu_mem: upchan_U32_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_chord_U32
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_U32_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_U32_gain_buffer
          gpu_mem_output_voltage: upchan_U32_voltage_buffer
          Fmin: upchan_U32_min_channel
          Fmax: upchan_U32_max_channel

run_upchan_U64:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_U64_gain_buffer_in: host_upchan_U64_gain_buffer
        out_buffers:
            host_upchan_U64_voltage_ringbuffer_out: host_upchan_U64_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_U64_gain_buffer_in
          gpu_mem: upchan_U64_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_chord_U64
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_U64_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_U64_gain_buffer
          gpu_mem_output_voltage: upchan_U64_voltage_buffer
          Fmin: upchan_U64_min_channel
          Fmax: upchan_U64_max_channel
