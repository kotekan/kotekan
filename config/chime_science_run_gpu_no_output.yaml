##########################################
#
# chime_science_run_gpu.yaml
#
# Config to support the CHIME project with 2048 elements, and 1024 frequencies.
#
# This config contains the following main components:
#
# - Packet capture from the ICE boards including FPGA flag handling and normalization
# - N^2 kernels and output for various data projects to receiver systems
# - FRB FFT Fan beam and packet Tx, with Valves protecting input buffers from overflowing
# - Tracking 10 coherent beam system and packet Tx, with Valves protecting input buffers from
#   overflowing
# - RFI detection and summary stats system (only reports on RFI, no normalization yet)
# - Extracts 21cm absorber data from FRB pipeline. This is referred to as the High Frequency Beam
#   (HFB) below.
#
# This component is intended to be run on the GPU nodes.
#
# Author: Andre Renard
#
##########################################
---
########################
#### Global options ####
########################
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: info
num_elements: 2048
num_local_freq: 1
num_data_sets: 1
samples_per_data_set: 49152
buffer_depth: 12
baseband_buffer_depth: 272 # 272 = ~33 seconds after accounting for active frames
vbuffer_depth: 32
num_links: 4
timesamples_per_packet: 2
cpu_affinity: [2,3,8,9]
block_size: 32
num_gpus: 4
link_map: [0,1,2,3]

# Constants
sizeof_float: 4
sizeof_int: 4
sizeof_short: 2

# N2 global options
num_ev: 4
# This option now does very little. You probably want to look at
# visAccumulate:integration_time
num_gpu_frames: 128
# Sets the number of sub frames for shorter than ~120ms N2 output
# Please note this requires changing the number of commands in the
# GPU section, and the accumulate value for `samples_per_data_set`
num_sub_frames: 4

# FRB global options
downsample_time: 3
downsample_freq: 8
factor_upchan: 128
factor_upchan_out: 16
num_frb_total_beams: 1024
frb_missing_gains: [1.0,1.0]
frb_scaling: 0.05 #1.0

# Tracking beams global options
feed_sep_NS: 0.3048
feed_sep_EW: 22.0
# Latitude and longitude converted from final geocentric (XYZ) position as calculated
# in https://bao.chimenet.ca/doc/documents/1327 via NGS NOAA website.
inst_lat: 49.32070922
inst_long: -119.62367743
num_beams: 12
num_pol: 2

# RFI global options
sk_step: 256
rfi_combined: True
rfi_sigma_cut: 5
trunc_bias_switch: True

####################
#### Telescope #####
####################
telescope:
  name: CHIMETelescope
  require_gps: false # Still run the config if fpga_master is down.
  query_gps: true
  query_frequency_map: true
  require_frequency_map: false
  allow_default_frequency_map: true

##########################
#### Dataset manager #####
##########################
dataset_manager:
  # This enables the dataset broker use in GPU kotekan and the RFI server.
  use_dataset_broker: False
  ds_broker_host: "10.1.50.11" # recv1
  ds_broker_port: 12050

##################################
#### Updatable Config section ####
##################################
updatable_config:
  frb_gain:
    kotekan_update_endpoint: json
    frb_gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_FRB
  UT1_UTC_offset:
    kotekan_update_endpoint: json
    UT1_UTC_val: -0.01771538093532198585 
  tracking_gain:
    0:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    1:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    2:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    3:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    4:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    5:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    6:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    7:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    8:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    9:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    10:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
    11:
      kotekan_update_endpoint: json
      gain_dir: /mnt/frb-archiver/daily_gain_solutions/Latest_PSR
  tracking_pointing:
    0:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    1:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    2:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    3:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    4:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    5:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    6:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    7:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    8:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    9:
      kotekan_update_endpoint: json
      ra: 53.6197236741
      dec: 54.6433973569
      scaling: 48
    10:
      kotekan_update_endpoint: json
      ra: 53.71589670329115762115
      dec: 54.65987557106205230184
      scaling: 48
    11:
      kotekan_update_endpoint: json
      ra: 53.71589670329115762115
      dec: 54.65987557106205230184 
      scaling: 48
  bad_inputs:
    kotekan_update_endpoint: json
    # These inputs are assumed to be in cylinder order
    bad_inputs: [  46,   84,  107,  136,  142,  256,  257,  319,  348,  357,  369,
                  370,  453,  550,  551,  579,  638,  688,  739,  742,  768,  784,
                  807,  855,  944,  960,  967,  971,  981,  986, 1005, 1010, 1020,
                 1023, 1058, 1141, 1166, 1225, 1280, 1281, 1285, 1311, 1314, 1343,
                 1380, 1381, 1479, 1521, 1523, 1543, 1642, 1684, 1687, 1738, 1792,
                 1794, 1910, 1912, 1943, 1945, 1950, 1982, 1984, 1987, 2032, 2034]
    start_time: 1535048997.
    update_id: "initial_flags"
  rfi_zeroing_toggle:
    kotekan_update_endpoint: json
    rfi_zeroing: True
  rfi_sk_record:
    kotekan_update_endpoint: json
    output_dir: /mnt/gong/RFI/20200409_sk/
    write_to_disk: false
  rfi_var_record:
    kotekan_update_endpoint: json
    output_dir: /mnt/gong/RFI/20200409_var/
    write_to_disk: false
  rfi_pkt_loss_record:
    kotekan_update_endpoint: json
    output_dir: /mnt/gong/RFI/20200409_pkt_loss/
    write_to_disk: false
  rfi_var_element_index:
    kotekan_update_endpoint: json
    # This element should be given in cylinder input order,
    # not correlator/FPGA input order.
    element_index: 500
  gating:
    psr0_config:
      kotekan_update_endpoint: "json"
      enabled: false
      # B0329 (2018/11/14)
      pulsar_name: "B0329"
      pulse_width: 0.0314
      dm: 26.7641
      segment: 18000.
      rot_freq: 1.39954153872
      t_ref: [58437.4583333332,]
      phase_ref: [1446745468.8439252,]
      coeff:
        [[
          3.428779943504219e-10,
          0.0011253963075329334,
          -1.1565642124857199e-07,
          1.1347089844281842e-10,
          1.1882399863116445e-13,
          -1.0867680647236115e-16,
          -7.594309559679319e-20,
          5.042548967792808e-23,
          2.745973613190195e-26,
          -2.279050323988331e-29,
          -1.1771713330451292e-32,
          3.948826407949732e-35,
        ],]
  rfi_zeroing_second_stage:
    enable:
      kotekan_update_endpoint: json
      rfi_zeroing: true
    thresholds:
      kotekan_update_endpoint: json
      thresholds:
        - threshold: 3.0
          fraction: 0.13


###########################
##### Pipeline buffers ####
###########################

# Main CHIME Metadata Pool
main_pool:
  kotekan_metadata_pool: chimeMetadata
  num_metadata_objects: 30 * buffer_depth + 5 * baseband_buffer_depth
                        + 100 * 8 * buffer_depth # This part is for the sk/var output.

# HFB Metadata Pool
hfb_pool:
  kotekan_metadata_pool: HFBMetadata
  num_metadata_objects: 30 * buffer_depth

# Baseband metadata pool
baseband_pool:
  kotekan_metadata_pool: BasebandMetadata
  num_metadata_objects: 30 * buffer_depth * 96

# Input data buffers from the DPDK stage
network_buffers:
  num_frames: baseband_buffer_depth
  frame_size: samples_per_data_set * num_elements * num_local_freq * num_data_sets
  metadata_pool: main_pool
  network_buffer_0:
    kotekan_buffer: standard
  network_buffer_1:
    kotekan_buffer: standard
  network_buffer_2:
    kotekan_buffer: standard
  network_buffer_3:
    kotekan_buffer: standard

gpu_n2_buffers:
  # We need a longer output buffer depth because the
  # output now comes in chunks of 4 at once.
  num_frames: buffer_depth * 2
  frame_size: 4 * num_data_sets * num_local_freq
              * ((num_elements * num_elements) + (num_elements * block_size))
  metadata_pool: main_pool
  gpu_n2_output_buffer_0:
    kotekan_buffer: standard
  gpu_n2_output_buffer_1:
    kotekan_buffer: standard
  gpu_n2_output_buffer_2:
    kotekan_buffer: standard
  gpu_n2_output_buffer_3:
    kotekan_buffer: standard
  valve_buffer_0:
    kotekan_buffer: standard
  valve_buffer_1:
    kotekan_buffer: standard
  valve_buffer_2:
    kotekan_buffer: standard
  valve_buffer_3:
    kotekan_buffer: standard
  rfi_vis_buffer_0:
    kotekan_buffer: standard
  rfi_vis_buffer_1:
    kotekan_buffer: standard
  rfi_vis_buffer_2:
    kotekan_buffer: standard
  rfi_vis_buffer_3:
    kotekan_buffer: standard

gpu_beamform_output_buffers:
  num_frames: buffer_depth
  frame_size: num_data_sets * (samples_per_data_set/downsample_time/downsample_freq)
              * num_frb_total_beams * sizeof_float
  metadata_pool: main_pool
  gpu_beamform_output_buffer_0:
    kotekan_buffer: standard
  gpu_beamform_output_buffer_1:
    kotekan_buffer: standard
  gpu_beamform_output_buffer_2:
    kotekan_buffer: standard
  gpu_beamform_output_buffer_3:
    kotekan_buffer: standard
  gpu_beamform_output_valved_buffer_0:
    kotekan_buffer: standard
  gpu_beamform_output_valved_buffer_1:
    kotekan_buffer: standard
  gpu_beamform_output_valved_buffer_2:
    kotekan_buffer: standard
  gpu_beamform_output_valved_buffer_3:
    kotekan_buffer: standard

# HFB Data Buffers
gpu_beamform_hfb_output_buffers:
  num_frames: buffer_depth
  frame_size: num_data_sets * factor_upchan * num_frb_total_beams * sizeof_float
  metadata_pool: main_pool
  gpu_beamform_hfb_output_buffer_0:
    kotekan_buffer: standard
  gpu_beamform_hfb_output_buffer_1:
    kotekan_buffer: standard
  gpu_beamform_hfb_output_buffer_2:
    kotekan_buffer: standard
  gpu_beamform_hfb_output_buffer_3:
    kotekan_buffer: standard

cpu_hfb_output_buffers:
  num_frames: 8
  metadata_pool: hfb_pool
  beamform_hfb_output_buffer_0:
    kotekan_buffer: hfb
  beamform_hfb_output_buffer_1:
    kotekan_buffer: hfb
  beamform_hfb_output_buffer_2:
    kotekan_buffer: hfb
  beamform_hfb_output_buffer_3:
    kotekan_buffer: hfb

gain_frb_buffers:
  num_frames: 5
  frame_size: 2048 * 2 * sizeof_float
  metadata_pool: main_pool
  gain_frb_buffer_0:
    kotekan_buffer: standard
  gain_frb_buffer_1:
    kotekan_buffer: standard
  gain_frb_buffer_2:
    kotekan_buffer: standard
  gain_frb_buffer_3:
    kotekan_buffer: standard

gain_tracking_buffers:
  num_frames: 5
  frame_size: 2048 * 2 * num_beams * sizeof_float
  metadata_pool: main_pool
  gain_tracking_buffer_0:
    kotekan_buffer: standard
  gain_tracking_buffer_1:
    kotekan_buffer: standard
  gain_tracking_buffer_2:
    kotekan_buffer: standard
  gain_tracking_buffer_3:
    kotekan_buffer: standard

tracking_phase_buffers:
  num_frames: 10
  frame_size: num_elements * num_beams * 2 * sizeof_float + num_beams * sizeof_float
  tracking_phase_0:
    kotekan_buffer: standard
  tracking_phase_1:
    kotekan_buffer: standard
  tracking_phase_2:
    kotekan_buffer: standard
  tracking_phase_3:
    kotekan_buffer: standard    

tracking_output_buffers:
  num_frames: buffer_depth
  frame_size: samples_per_data_set * num_beams * num_pol
  metadata_pool: main_pool
  beamform_tracking_output_buffer_0:
    kotekan_buffer: standard
  beamform_tracking_output_buffer_1:
    kotekan_buffer: standard
  beamform_tracking_output_buffer_2:
    kotekan_buffer: standard
  beamform_tracking_output_buffer_3:
    kotekan_buffer: standard
  beamform_tracking_output_valved_buffer_0:
    kotekan_buffer: standard
  beamform_tracking_output_valved_buffer_1:
    kotekan_buffer: standard
  beamform_tracking_output_valved_buffer_2:
    kotekan_buffer: standard
  beamform_tracking_output_valved_buffer_3:
    kotekan_buffer: standard

# The vis buffer metadata pool
vis_pool:
  kotekan_metadata_pool: VisMetadata
  num_metadata_objects: 200 * buffer_depth

# Buffers
vis_int_buffers:
  metadata_pool: vis_pool
  num_frames: 11
  visbuf_5s_0:
    kotekan_buffer: vis
  visbuf_5s_1:
    kotekan_buffer: vis
  visbuf_5s_2:
    kotekan_buffer: vis
  visbuf_5s_3:
    kotekan_buffer: vis
  visbuf_5s_merge:
    kotekan_buffer: vis
  visbuf_10s_0:
    kotekan_buffer: vis
  visbuf_10s_1:
    kotekan_buffer: vis
  visbuf_10s_2:
    kotekan_buffer: vis
  visbuf_10s_3:
    kotekan_buffer: vis

vis_buffers:
  metadata_pool: vis_pool
  num_frames: buffer_depth
  visbuf_10s_merge:
    kotekan_buffer: vis
  visbuf_eig_10s_merge:
    kotekan_buffer: vis
  # Buffers for gated
  visbuf_psr0_5s_0:
    kotekan_buffer: vis
  visbuf_psr0_5s_1:
    kotekan_buffer: vis
  visbuf_psr0_5s_2:
    kotekan_buffer: vis
  visbuf_psr0_5s_3:
    kotekan_buffer: vis
  visbuf_psr0_5s_merge:
    kotekan_buffer: vis
  # Increase the buffer depth for the pre-send buffers
  visbuf_5s_26m:
    kotekan_buffer: vis
    num_prod: 4096
    num_frames: 10 * buffer_depth
  visbuf_psr0_5s_26m:
    kotekan_buffer: vis
    num_prod: 4096
    num_frames: 10 * buffer_depth

gpu_rfi_output_buffers:
  num_frames: buffer_depth * 50
  frame_size: sizeof_float * num_local_freq * samples_per_data_set / sk_step
  metadata_pool: main_pool
  gpu_rfi_output_buffer_0:
    kotekan_buffer: standard
  gpu_rfi_output_buffer_1:
    kotekan_buffer: standard
  gpu_rfi_output_buffer_2:
    kotekan_buffer: standard
  gpu_rfi_output_buffer_3:
    kotekan_buffer: standard

gpu_rfi_valve_buffers:
  num_frames: buffer_depth
  frame_size: sizeof_float * num_local_freq * samples_per_data_set / sk_step
  metadata_pool: main_pool
  rfi_valve_buffer_0:
    kotekan_buffer: standard
  rfi_valve_buffer_1:
    kotekan_buffer: standard
  rfi_valve_buffer_2:
    kotekan_buffer: standard
  rfi_valve_buffer_3:
    kotekan_buffer: standard

gpu_rfi_mask_output_buffers:
  num_frames: buffer_depth
  frame_size: num_local_freq * samples_per_data_set / sk_step
  metadata_pool: main_pool
  gpu_rfi_mask_output_buffer_0:
    kotekan_buffer: standard
  gpu_rfi_mask_output_buffer_1:
    kotekan_buffer: standard
  gpu_rfi_mask_output_buffer_2:
    kotekan_buffer: standard
  gpu_rfi_mask_output_buffer_3:
    kotekan_buffer: standard

gpu_rfi_bad_input_buffers:
  num_frames: buffer_depth
  frame_size: sizeof_float * num_elements * num_local_freq
  metadata_pool: main_pool
  gpu_rfi_bad_input_buffer_0:
    kotekan_buffer: standard
  gpu_rfi_bad_input_buffer_1:
    kotekan_buffer: standard
  gpu_rfi_bad_input_buffer_2:
    kotekan_buffer: standard
  gpu_rfi_bad_input_buffer_3:
    kotekan_buffer: standard

# Bad inputs buffer
bad_input_buffer:
  num_frames: buffer_depth
  frame_size: num_elements
  metadata_pool: main_pool
  bad_inputs_buffer:
    kotekan_buffer: standard

rfi_var_output_buffers:
  num_frames: buffer_depth * 50
  frame_size: num_local_freq * samples_per_data_set / sk_step * sizeof_float
  metadata_pool: main_pool
  gpu_rfi_var_output_buffer_0:
    kotekan_buffer: standard
  gpu_rfi_var_output_buffer_1:
    kotekan_buffer: standard
  gpu_rfi_var_output_buffer_2:
    kotekan_buffer: standard
  gpu_rfi_var_output_buffer_3:
    kotekan_buffer: standard

lost_samples_buffer:
  kotekan_buffer: standard
  num_frames: 2 * buffer_depth
  frame_size: samples_per_data_set
  metadata_pool: main_pool

rfi_compressed_lost_samples_buf:
  kotekan_buffer: standard
  num_frames: buffer_depth * 50
  frame_size: sizeof_int * samples_per_data_set / sk_step
  metadata_pool: main_pool

rfi_compressed_lost_samples_buffers:
  num_frames: buffer_depth * 2
  frame_size: sizeof_int * samples_per_data_set / sk_step
  metadata_pool: main_pool
  rfi_compressed_lost_samples_buf_0:
    kotekan_buffer: standard
  rfi_compressed_lost_samples_buf_1:
    kotekan_buffer: standard
  rfi_compressed_lost_samples_buf_2:
    kotekan_buffer: standard
  rfi_compressed_lost_samples_buf_3:
    kotekan_buffer: standard

hfb_compressed_lost_samples_buffers:
  num_frames: buffer_depth * 2
  frame_size: sizeof_int * samples_per_data_set / (factor_upchan * downsample_time)
  metadata_pool: main_pool
  hfb_compressed_lost_samples_buf_0:
    kotekan_buffer: standard
  hfb_compressed_lost_samples_buf_1:
    kotekan_buffer: standard
  hfb_compressed_lost_samples_buf_2:
    kotekan_buffer: standard
  hfb_compressed_lost_samples_buf_3:
    kotekan_buffer: standard


##########################
#### Pipeline Stages #####
##########################

# Main data capture stage
dpdk:
  kotekan_stage: dpdkCore
  # Format is index = lcore, value = cpu core
  lcore_cpu_map: [0,1,6,7]
  master_lcore_cpu: 2
  status_cadence: 60
  alignment: samples_per_data_set * num_data_sets
  # Format is index = lcore, value = array of port IDs
  # so [[0,1],[2,3]] maps lcore 0 to service ports 0 and 1,
  # and lcore 1 to service ports 2 and 3.
  lcore_port_map:
    - [0]
    - [1]
    - [2]
    - [3]
  # One handler must be given per port.
  handlers:
    - dpdk_handler: iceBoardShuffle
    - dpdk_handler: iceBoardShuffle
    - dpdk_handler: iceBoardShuffle
    - dpdk_handler: iceBoardShuffle
  out_bufs:
    - network_buffer_0
    - network_buffer_1
    - network_buffer_2
    - network_buffer_3
  lost_samples_buf: lost_samples_buffer

# Zero out lost samples recorded at the DPDK stage
zero_samples:
  duplicate_ls_buffer: False
  lost_samples_buf: lost_samples_buffer
  zero_0:
    kotekan_stage: zeroSamples
    out_buf: network_buffer_0
  zero_1:
    kotekan_stage: zeroSamples
    out_buf: network_buffer_1
  zero_2:
    kotekan_stage: zeroSamples
    out_buf: network_buffer_2
  zero_3:
    kotekan_stage: zeroSamples
    out_buf: network_buffer_3

# Baseband capture and dump system
baseband_output_buffers:
  num_frames: 11 * 96 # baseband_buffer_depth
  frame_size: samples_per_data_set * num_elements * num_local_freq * num_data_sets / 96
  metadata_pool: baseband_pool
  baseband_output_buffer_0:
    kotekan_buffer: standard
  baseband_output_buffer_1:
    kotekan_buffer: standard
  baseband_output_buffer_2:
    kotekan_buffer: standard
  baseband_output_buffer_3:
    kotekan_buffer: standard
  baseband_output_buffer_merged:
    kotekan_buffer: standard
    num_frames: 12

baseband:
  max_dump_samples:  546875 #1.4s
  num_frames_buffer: baseband_buffer_depth - 10
  baseband0:
    kotekan_stage: basebandReadout
    in_buf: network_buffer_0
    out_buf: baseband_output_buffer_0
  baseband1:
    kotekan_stage: basebandReadout
    in_buf: network_buffer_1
    out_buf: baseband_output_buffer_1
  baseband2:
    kotekan_stage: basebandReadout
    in_buf: network_buffer_2
    out_buf: baseband_output_buffer_2
  baseband3:
    kotekan_stage: basebandReadout
    in_buf: network_buffer_3
    out_buf: baseband_output_buffer_3

baseband_merge:
  kotekan_stage: bufferMerge
  timeout: 0.1
  in_bufs:
    - baseband_output_buffer_0
    - baseband_output_buffer_1
    - baseband_output_buffer_2
    - baseband_output_buffer_3
  out_buf: baseband_output_buffer_merged

# Transmit baseband data to the baseband receiver
baseband_send:
  server_ip: 10.6.213.19 # cfDn9
  reconnect_time: 60
  send_timeout: 600 # 10 minutes
  log_level: warn
  # Keep data in memory even if the receiver node is down
  # Baseband readout handles back pressure management
  drop_frames: false
  baseband_send_0:
    #kotekan_stage: bufferSend
    server_port: 11027
    buf: baseband_output_buffer_merged

# Buffer bad input updates
# 1) Reorder list
# 2) Zero bad inputs mask
# 3) Add current bad input mask
buffer_bad_input_update:
  kotekan_stage: bufferBadInputs
  updatable_config:
    bad_inputs: /updatable_config/bad_inputs
  out_buf: bad_inputs_buffer

# Compress lost samples buffer for HFB
hfb_compress_lost_samples:
  kotekan_stage: compressLostSamples
  compression_factor: factor_upchan * downsample_time
  zero_all_in_group: true
  in_buf: lost_samples_buffer
  out_buf: hfb_compressed_lost_samples_buf_0

hfb_copy_compress_lost_samples_buffers:
  kotekan_stage: bufferCopy
  in_buf: hfb_compressed_lost_samples_buf_0
  out_bufs:
    - hfb_compressed_lost_samples_buf_1
    - hfb_compressed_lost_samples_buf_2
    - hfb_compressed_lost_samples_buf_3

# Compress lost samples buffer for RFI
rfi_compress_lost_samples:
  kotekan_stage: compressLostSamples
  compression_factor: sk_step
  zero_all_in_group: false
  in_buf: lost_samples_buffer
  out_buf: rfi_compressed_lost_samples_buf

rfi_copy_compress_lost_samples_buffers:
  kotekan_stage: bufferCopy
  in_buf: rfi_compressed_lost_samples_buf
  out_bufs:
    - rfi_compressed_lost_samples_buf_0
    - rfi_compressed_lost_samples_buf_1
    - rfi_compressed_lost_samples_buf_2
    - rfi_compressed_lost_samples_buf_3

# GPU processing section
gpu:
  kernel_path: "/var/lib/kotekan/hsa_kernels/"
  commands: &command_list
    # Copy in queue
    - name: hsaInputData
    - name: hsaHostToDeviceCopy
      in_buf: rfi_compressed_lost_samples_buf
      gpu_memory_name: rfi_compressed_lost_samples
    - name: hsaHostToDeviceCopy
      in_buf: hfb_compressed_lost_samples_buf
      gpu_memory_name: hfb_compressed_lost_samples
    - name: hsaHostToDeviceCopy
      in_buf: tracking_phase_buf
      gpu_memory_name: beamform_phase      
    - name: hsaPresumZero
      sub_frame_index: 0
    - name: hsaPresumZero
      sub_frame_index: 1
    - name: hsaPresumZero
      sub_frame_index: 2
    - name: hsaPresumZero
      sub_frame_index: 3
    - name: hsaOutputDataZero
      sub_frame_index: 0
    - name: hsaOutputDataZero
      sub_frame_index: 1
    - name: hsaOutputDataZero
      sub_frame_index: 2
    - name: hsaOutputDataZero
      sub_frame_index: 3
    - name: hsaAsyncCopyGain
    #- name: hsaTrackingUpdatePhase
    - name: hsaRfiUpdateBadInputs #Updates the bad input list
    # Barrier between copy in and kernels
    - name: hsaBarrier
    # Kernel queue
    - name: hsaBeamformReorder
    - name: hsaBeamformKernel
    - name: hsaBeamformTranspose
    - name: hsaBeamformUpchanHFB
    - name: hsaBeamformHFBSum
    - name: hsaTrackingBeamform
    - name: hsaRfiTimeSum
    - name: hsaRfiBadInput
    - name: hsaRfiInputSum
    - name: hsaRfiZeroData
    - name: hsaPresumKernel
      sub_frame_index: 0
    - name: hsaPresumKernel
      sub_frame_index: 1
    - name: hsaPresumKernel
      sub_frame_index: 2
    - name: hsaPresumKernel
      sub_frame_index: 3
    - name: hsaCorrelatorKernel
      sub_frame_index: 0
    - name: hsaCorrelatorKernel
      sub_frame_index: 1
    - name: hsaCorrelatorKernel
      sub_frame_index: 2
    - name: hsaCorrelatorKernel
      sub_frame_index: 3
    #Copy out queue
    - name: hsaRfiBadInputOutput
    - name: hsaRfiOutput
    - name: hsaRfiVarOutput
    - name: hsaTrackingBeamformOutput
    - name: hsaBeamformOutputData
    - name: hsaBeamformHFBOutputData
    - name: hsaOutputData
      sub_frame_index: 0
    - name: hsaOutputData
      sub_frame_index: 1
    - name: hsaOutputData
      sub_frame_index: 2
    - name: hsaOutputData
      sub_frame_index: 3
    - name: hsaRfiMaskOutput
  enable_delay: true
  cpu_affinity: [2, 3, 8, 9]
  delay_max_fraction: 2.0
  block_size: 32
  buffer_depth: 4
  # How many sub frames to devide the N2 products into.
  n_intg: 24576 / num_sub_frames
  profiling: true
  frame_arrival_period: samples_per_data_set / 390625
  updatable_config:
    tracking_pt: /updatable_config/tracking_pointing
    rfi_zeroing_toggle: /updatable_config/rfi_zeroing_toggle
    rfi_var_element_index: /updatable_config/rfi_var_element_index
  gpu_0:
    kotekan_stage: hsaProcess
    gpu_id: 0
    ew_spacing: [-0.4,0,0.4,0.8]
    northmost_beam: 60.0
    commands: *command_list
    in_buffers:
      network_buf: network_buffer_0
      gain_frb_buf: gain_frb_buffer_0
      gain_tracking_buf: gain_tracking_buffer_0
      lost_samples_buf: lost_samples_buffer
      bad_inputs_buf: bad_inputs_buffer
      rfi_compressed_lost_samples_buf: rfi_compressed_lost_samples_buf_0
      hfb_compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_0
      tracking_phase_buf: tracking_phase_0
    out_buffers:
      output_buf: gpu_n2_output_buffer_0
      beamform_output_buf: gpu_beamform_output_buffer_0
      beamform_tracking_output_buf: beamform_tracking_output_buffer_0
      beamform_hfb_output_buf: gpu_beamform_hfb_output_buffer_0
      rfi_bad_input_buf: gpu_rfi_bad_input_buffer_0
      rfi_output_buf: gpu_rfi_output_buffer_0
      rfi_mask_output_buf: gpu_rfi_mask_output_buffer_0
      rfi_var_output_buf: gpu_rfi_var_output_buffer_0
  gpu_1:
    kotekan_stage: hsaProcess
    gpu_id: 1
    ew_spacing: [-0.4,0,0.4,0.8]
    northmost_beam: 60.0
    commands: *command_list
    in_buffers:
      network_buf: network_buffer_1
      gain_frb_buf: gain_frb_buffer_1
      gain_tracking_buf: gain_tracking_buffer_1
      lost_samples_buf: lost_samples_buffer
      bad_inputs_buf: bad_inputs_buffer
      rfi_compressed_lost_samples_buf: rfi_compressed_lost_samples_buf_1
      hfb_compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_1
      tracking_phase_buf: tracking_phase_1
    out_buffers:
      output_buf: gpu_n2_output_buffer_1
      beamform_output_buf: gpu_beamform_output_buffer_1
      beamform_tracking_output_buf: beamform_tracking_output_buffer_1
      beamform_hfb_output_buf: gpu_beamform_hfb_output_buffer_1
      rfi_bad_input_buf: gpu_rfi_bad_input_buffer_1
      rfi_output_buf: gpu_rfi_output_buffer_1
      rfi_mask_output_buf: gpu_rfi_mask_output_buffer_1
      rfi_var_output_buf: gpu_rfi_var_output_buffer_1
  gpu_2:
    kotekan_stage: hsaProcess
    gpu_id: 2
    ew_spacing: [-0.4,0,0.4,0.8]
    northmost_beam: 60.0
    commands: *command_list
    in_buffers:
      network_buf: network_buffer_2
      gain_frb_buf: gain_frb_buffer_2
      gain_tracking_buf: gain_tracking_buffer_2
      lost_samples_buf: lost_samples_buffer
      bad_inputs_buf: bad_inputs_buffer
      rfi_compressed_lost_samples_buf: rfi_compressed_lost_samples_buf_2
      hfb_compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_2
      tracking_phase_buf: tracking_phase_2
    out_buffers:
      output_buf: gpu_n2_output_buffer_2
      beamform_output_buf: gpu_beamform_output_buffer_2
      beamform_tracking_output_buf: beamform_tracking_output_buffer_2
      beamform_hfb_output_buf: gpu_beamform_hfb_output_buffer_2
      rfi_bad_input_buf: gpu_rfi_bad_input_buffer_2
      rfi_output_buf: gpu_rfi_output_buffer_2
      rfi_mask_output_buf: gpu_rfi_mask_output_buffer_2
      rfi_var_output_buf: gpu_rfi_var_output_buffer_2
  gpu_3:
    kotekan_stage: hsaProcess
    gpu_id: 3
    ew_spacing: [-0.4,0,0.4,0.8]
    northmost_beam: 60.0
    commands: *command_list
    in_buffers:
      network_buf: network_buffer_3
      gain_frb_buf: gain_frb_buffer_3
      gain_tracking_buf: gain_tracking_buffer_3
      lost_samples_buf: lost_samples_buffer
      bad_inputs_buf: bad_inputs_buffer
      rfi_compressed_lost_samples_buf: rfi_compressed_lost_samples_buf_3
      hfb_compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_3
      tracking_phase_buf: tracking_phase_3
    out_buffers:
      output_buf: gpu_n2_output_buffer_3
      beamform_output_buf: gpu_beamform_output_buffer_3
      beamform_tracking_output_buf: beamform_tracking_output_buffer_3
      beamform_hfb_output_buf: gpu_beamform_hfb_output_buffer_3
      rfi_bad_input_buf: gpu_rfi_bad_input_buffer_3
      rfi_output_buf: gpu_rfi_output_buffer_3
      rfi_mask_output_buf: gpu_rfi_mask_output_buffer_3
      rfi_var_output_buf: gpu_rfi_var_output_buffer_3

# Integrate frames of HFB data from each GPU to ~10s cadence
hyper_fine_beam:
  num_frames_to_integrate: 80
  good_samples_threshold: 0.95
  log_level: info
  integrate_hfb_data_0:
    kotekan_stage: HFBAccumulate
    hfb_input_buf: gpu_beamform_hfb_output_buffer_0
    hfb_output_buf: beamform_hfb_output_buffer_0
    compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_0
  integrate_hfb_data_1:
    kotekan_stage: HFBAccumulate
    hfb_input_buf: gpu_beamform_hfb_output_buffer_1
    hfb_output_buf: beamform_hfb_output_buffer_1
    compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_1
  integrate_hfb_data_2:
    kotekan_stage: HFBAccumulate
    hfb_input_buf: gpu_beamform_hfb_output_buffer_2
    hfb_output_buf: beamform_hfb_output_buffer_2
    compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_2
  integrate_hfb_data_3:
    kotekan_stage: HFBAccumulate
    hfb_input_buf: gpu_beamform_hfb_output_buffer_3
    hfb_output_buf: beamform_hfb_output_buffer_3
    compressed_lost_samples_buf: hfb_compressed_lost_samples_buf_3

# Transmit HFB data to Bongo
buffer_send_hfb:
  server_ip: 10.1.50.13
  server_port: 11027
  reconnect_time: 20
  log_level: error
  hfb_0:
    #kotekan_stage: bufferSend
    buf: beamform_hfb_output_buffer_0
  hfb_1:
    #kotekan_stage: bufferSend
    buf: beamform_hfb_output_buffer_1
  hfb_2:
    #kotekan_stage: bufferSend
    buf: beamform_hfb_output_buffer_2
  hfb_3:
    #kotekan_stage: bufferSend
    buf: beamform_hfb_output_buffer_3

# This set of stages takes information from the packet loss mask
# and RFI mask and updates the metadata in the output N2 buffers
# before they are read by other down stream stages.
rfi_update_metadata:
  update_metadata_0:
    kotekan_stage: rfiUpdateMetadata
    rfi_mask_buf: gpu_rfi_mask_output_buffer_0
    lost_samples_buf: lost_samples_buffer
    gpu_correlation_buf: gpu_n2_output_buffer_0
  update_metadata_1:
    kotekan_stage: rfiUpdateMetadata
    rfi_mask_buf: gpu_rfi_mask_output_buffer_1
    lost_samples_buf: lost_samples_buffer
    gpu_correlation_buf: gpu_n2_output_buffer_1
  update_metadata_2:
    kotekan_stage: rfiUpdateMetadata
    rfi_mask_buf: gpu_rfi_mask_output_buffer_2
    lost_samples_buf: lost_samples_buffer
    gpu_correlation_buf: gpu_n2_output_buffer_2
  update_metadata_3:
    kotekan_stage: rfiUpdateMetadata
    rfi_mask_buf: gpu_rfi_mask_output_buffer_3
    lost_samples_buf: lost_samples_buffer
    gpu_correlation_buf: gpu_n2_output_buffer_3

####  Gain update system for FRB and Tracking ####
read_gain:
  updatable_config:
    gain_frb: /updatable_config/frb_gain
    gain_tracking: /updatable_config/tracking_gain
  read_gain0:
    kotekan_stage: ReadGain
    in_buf: network_buffer_0
    gain_frb_buf: gain_frb_buffer_0
    gain_tracking_buf: gain_tracking_buffer_0
  read_gain1:
    kotekan_stage: ReadGain
    in_buf: network_buffer_1
    gain_frb_buf: gain_frb_buffer_1
    gain_tracking_buf: gain_tracking_buffer_1
  read_gain2:
    kotekan_stage: ReadGain
    in_buf: network_buffer_2
    gain_frb_buf: gain_frb_buffer_2
    gain_tracking_buf: gain_tracking_buffer_2
  read_gain3:
    kotekan_stage: ReadGain
    in_buf: network_buffer_3
    gain_frb_buf: gain_frb_buffer_3
    gain_tracking_buf: gain_tracking_buffer_3

#### Generate tracking beamformer phases ####
tracking_phases_new:
  updatable_config:
    UT1_UTC: /updatable_config/UT1_UTC_offset
    tracking_pt: /updatable_config/tracking_pointing
  log_level: WARN
  num_local_beams: 1
  beam_offset: 11
  tracking_phases_0:
    kotekan_stage: FloatPhaseUpdate
    log_level: INFO
    in_buf: network_buffer_0
    gains_buf: gain_tracking_buffer_0
    out_buf: tracking_phase_0
  tracking_phases_1:
    kotekan_stage: FloatPhaseUpdate
    in_buf: network_buffer_1
    gains_buf: gain_tracking_buffer_1
    out_buf: tracking_phase_1
  tracking_phases_2:
    kotekan_stage: FloatPhaseUpdate
    in_buf: network_buffer_2
    gains_buf: gain_tracking_buffer_2
    out_buf: tracking_phase_2
  tracking_phases_3:
    kotekan_stage: FloatPhaseUpdate
    in_buf: network_buffer_3
    gains_buf: gain_tracking_buffer_3
    out_buf: tracking_phase_3

tracking_phases_old:
  updatable_config:
    UT1_UTC: /updatable_config/UT1_UTC_offset
    tracking_pt: /updatable_config/tracking_pointing
  log_level: WARN
  num_local_beams: 11
  beam_offset: 0
  tracking_phases_0:
    kotekan_stage: OldPhaseUpdate
    log_level: INFO
    in_buf: network_buffer_0
    gains_buf: gain_tracking_buffer_0
    out_buf: tracking_phase_0
  tracking_phases_1:
    kotekan_stage: OldPhaseUpdate
    in_buf: network_buffer_1
    gains_buf: gain_tracking_buffer_1
    out_buf: tracking_phase_1
  tracking_phases_2:
    kotekan_stage: OldPhaseUpdate
    in_buf: network_buffer_2
    gains_buf: gain_tracking_buffer_2
    out_buf: tracking_phase_2
  tracking_phases_3:
    kotekan_stage: OldPhaseUpdate
    in_buf: network_buffer_3
    gains_buf: gain_tracking_buffer_3
    out_buf: tracking_phase_3

# Write out the phases
phase_write:
  #kotekan_stage: rawFileWrite
  in_buf: tracking_phase_0
  base_dir: /root/andre/phase_dump
  file_name: phase_0
  file_ext: .dat
  num_frames_per_file: 100


#### FRB GPU Post processing and Tx ####
frb_valve:
  # To introduce random drops, replace Valve with TestDropFrames
  # Specify probability with `drop_frame_change`
  frb_valve_0:
    kotekan_stage: Valve
    in_buf: gpu_beamform_output_buffer_0
    out_buf: gpu_beamform_output_valved_buffer_0
  frb_valve_1:
    kotekan_stage: Valve
    in_buf: gpu_beamform_output_buffer_1
    out_buf: gpu_beamform_output_valved_buffer_1
  frb_valve_2:
    kotekan_stage: Valve
    in_buf: gpu_beamform_output_buffer_2
    out_buf: gpu_beamform_output_valved_buffer_2
  frb_valve_3:
    kotekan_stage: Valve
    in_buf: gpu_beamform_output_buffer_3
    out_buf: gpu_beamform_output_valved_buffer_3

frb:
  factor_upchan_out: 16
  num_beams_per_frb_packet: 4
  timesamples_per_frb_packet: 16
  cpu_affinity: [5,11]
  frb_packet_header_size: 32
  frb_output_buffer:
    num_frames: buffer_depth + 4
    frame_size: 8 * 256 * (num_beams_per_frb_packet * num_gpus
      * factor_upchan_out * timesamples_per_frb_packet
      + frb_packet_header_size + sizeof_short * num_beams_per_frb_packet + sizeof_short * num_gpus
      + sizeof_float * num_beams_per_frb_packet * num_gpus
      + sizeof_float * num_beams_per_frb_packet * num_gpus)
    metadata_pool: main_pool
    kotekan_buffer: standard
  postprocess:
    log_level: warn
    kotekan_stage: frbPostProcess
    incoherent_beams: [0,256,512,768]
    #incoherent_truncation: 25.
    lost_samples_buf: lost_samples_buffer
    frb_out_buf: frb_output_buffer
    in_buf_0: gpu_beamform_output_valved_buffer_0
    in_buf_1: gpu_beamform_output_valved_buffer_1
    in_buf_2: gpu_beamform_output_valved_buffer_2
    in_buf_3: gpu_beamform_output_valved_buffer_3
    out_buf: frb_output_buffer
  network_send:
    #kotekan_stage: frbNetworkProcess
    in_buf: frb_output_buffer
    udp_frb_packet_size: (frb_packet_header_size
      + sizeof_short * num_beams_per_frb_packet
      + sizeof_short * num_gpus
      + sizeof_float * num_beams_per_frb_packet * num_gpus
      + sizeof_float * num_beams_per_frb_packet * num_gpus)
      + (num_beams_per_frb_packet * num_gpus
         * factor_upchan_out * timesamples_per_frb_packet)
    udp_frb_port_number: 1313
    number_of_nodes: 256
    packets_per_stream: 8
    number_of_subnets: 4
    #column_mode: true
    beam_offset: 0
    time_interval: 125829120
    ping_dead_threshold: 30
    L1_node_ips:
      # Rack 1
      - 10.6.201.10
      - 10.7.201.10
      - 10.6.201.11
      - 10.7.201.11
      - 10.6.201.12
      - 10.7.201.12
      - 10.6.201.13
      - 10.7.201.13
      - 10.6.201.14
      - 10.7.201.14
      - 10.6.201.15
      - 10.7.201.15
      - 10.6.201.16
      - 10.7.201.16
      - 10.6.201.17
      - 10.7.201.17
      - 10.6.201.18
      - 10.7.201.18
      - 10.6.201.19
      - 10.7.201.19
      # Rack 2
      - 10.8.202.10
      - 10.9.202.10
      - 10.8.202.11
      - 10.9.202.11
      - 10.8.202.12
      - 10.9.202.12
      - 10.8.202.13
      - 10.9.202.13
      - 10.8.202.14
      - 10.9.202.14
      - 10.8.202.15
      - 10.9.202.15
      - 10.8.202.16
      - 10.9.202.16
      - 10.8.202.17
      - 10.9.202.17
      - 10.8.202.18
      - 10.9.202.18
      - 10.8.202.19
      - 10.9.202.19
      # Rack 3
      - 10.6.203.10
      - 10.7.203.10
      - 10.6.203.11
      - 10.7.203.11
      - 10.6.203.12
      - 10.7.203.12
      - 10.6.203.13
      - 10.7.203.13
      - 10.6.203.14
      - 10.7.203.14
      - 10.6.203.15
      - 10.7.203.15
      - 10.6.203.16
      - 10.7.203.16
      - 10.6.203.17
      - 10.7.203.17
      - 10.6.203.18
      - 10.7.203.18
      - 10.6.203.19
      - 10.7.203.19
      # Rack 4
      - 10.8.204.10
      - 10.9.204.10
      - 10.8.204.11
      - 10.9.204.11
      - 10.8.204.12
      - 10.9.204.12
      - 10.8.204.13
      - 10.9.204.13
      - 10.8.204.14
      - 10.9.204.14
      - 10.8.204.15
      - 10.9.204.15
      - 10.8.204.16
      - 10.9.204.16
      - 10.8.204.17
      - 10.9.204.17
      - 10.8.204.18
      - 10.9.204.18
      - 10.8.204.19
      - 10.9.204.19
      # Rack 5
      - 10.6.205.10
      - 10.7.205.10
      - 10.6.205.11
      - 10.7.205.11
      - 10.6.205.12
      - 10.7.205.12
      - 10.6.205.13
      - 10.7.205.13
      - 10.6.205.14
      - 10.7.205.14
      - 10.6.205.15
      - 10.7.205.15
      - 10.6.205.16
      - 10.7.205.16
      - 10.6.205.17
      - 10.7.205.17
      - 10.6.205.18
      - 10.7.205.18
      - 10.6.205.19
      - 10.7.205.19
      # Rack 6
      - 10.8.206.10
      - 10.9.206.10
      - 10.8.206.11
      - 10.9.206.11
      - 10.8.206.12
      - 10.9.206.12
      - 10.8.206.13
      - 10.9.206.13
      - 10.8.206.14
      - 10.9.206.14
      - 10.8.206.15
      - 10.9.206.15
      - 10.8.206.16
      - 10.9.206.16
      - 10.8.206.17
      - 10.9.206.17
      - 10.8.206.18
      - 10.9.206.18
      - 10.8.206.19
      - 10.9.206.19
      # Rack 7
      - 10.6.207.10
      - 10.7.207.10
      - 10.6.207.11
      - 10.7.207.11
      - 10.6.207.12
      - 10.7.207.12
      - 10.6.207.13
      - 10.7.207.13
      - 10.6.207.14
      - 10.7.207.14
      - 10.6.207.15
      - 10.7.207.15
      - 10.6.207.16
      - 10.7.207.16
      - 10.6.207.17
      - 10.7.207.17
      - 10.6.207.18
      - 10.7.207.18
      - 10.6.207.19
      - 10.7.207.19
      # Rack 8
      - 10.8.208.10
      - 10.9.208.10
      - 10.8.208.11
      - 10.9.208.11
      - 10.8.208.12
      - 10.9.208.12
      - 10.8.208.13
      - 10.9.208.13
      - 10.8.208.14
      - 10.9.208.14
      - 10.8.208.15
      - 10.9.208.15
      - 10.8.208.16
      - 10.9.208.16
      - 10.8.208.17
      - 10.9.208.17
      - 10.8.208.18
      - 10.9.208.18
      - 10.8.208.19
      - 10.9.208.19
      # Rack 9
      - 10.6.209.10
      - 10.7.209.10
      - 10.6.209.11
      - 10.7.209.11
      - 10.6.209.12
      - 10.7.209.12
      - 10.6.209.13
      - 10.7.209.13
      - 10.6.209.14
      - 10.7.209.14
      - 10.6.209.15
      - 10.7.209.15
      - 10.6.209.16
      - 10.7.209.16
      - 10.6.209.17
      - 10.7.209.17
      - 10.6.209.18
      - 10.7.209.18
      - 10.6.209.19
      - 10.7.209.19
      # Rack A
      - 10.8.210.10
      - 10.9.210.10
      - 10.8.210.11
      - 10.9.210.11
      - 10.8.210.12
      - 10.9.210.12
      - 10.8.210.13
      - 10.9.210.13
      - 10.8.210.14
      - 10.9.210.14
      - 10.8.210.15
      - 10.9.210.15
      - 10.8.210.16
      - 10.9.210.16
      - 10.8.210.17
      - 10.9.210.17
      - 10.8.210.18
      - 10.9.210.18
      - 10.8.210.19
      - 10.9.210.19
      # Rack B
      - 10.6.211.10
      - 10.7.211.10
      - 10.6.211.11
      - 10.7.211.11
      - 10.6.211.12
      - 10.7.211.12
      - 10.6.211.13
      - 10.7.211.13
      - 10.6.211.14
      - 10.7.211.14
      - 10.6.211.15
      - 10.7.211.15
      - 10.6.211.16
      - 10.7.211.16
      - 10.6.211.17
      - 10.7.211.17
      - 10.6.211.18
      - 10.7.211.18
      - 10.6.211.19
      - 10.7.211.19
      # Rack C
      - 10.8.212.10
      - 10.9.212.10
      - 10.8.212.11
      - 10.9.212.11
      - 10.8.212.12
      - 10.9.212.12
      - 10.8.212.13
      - 10.9.212.13
      - 10.8.212.14
      - 10.9.212.14
      - 10.8.212.15
      - 10.9.212.15
      - 10.8.212.16
      - 10.9.212.16
      - 10.8.212.17
      - 10.9.212.17
      - 10.8.212.18
      - 10.9.212.18
      - 10.8.212.19
      - 10.9.212.19
      # Rack D
      - 10.6.213.10
      - 10.7.213.10
      - 10.6.213.11
      - 10.7.213.11
      - 10.6.213.12
      - 10.7.213.12
      - 10.6.213.13
      - 10.7.213.13
      - 10.6.213.14
      - 10.7.213.14
      - 10.6.213.15
      - 10.7.213.15
      - 10.6.213.16
      - 10.7.213.16
      - 10.6.213.17
      - 10.7.213.17
      # cfDn8
      # cfDn9

#### Tracking beams GPU Post processing and Tx ####
tracking_valve:
  # To introduce random drops, replace Valve with TestDropFrames
  # Specify probability with `drop_frame_change`
  tracking_valve_0:
    kotekan_stage: Valve
    in_buf: beamform_tracking_output_buffer_0
    out_buf: beamform_tracking_output_valved_buffer_0
  tracking_valve_1:
    kotekan_stage: Valve
    in_buf: beamform_tracking_output_buffer_1
    out_buf: beamform_tracking_output_valved_buffer_1
  tracking_valve_2:
    kotekan_stage: Valve
    in_buf: beamform_tracking_output_buffer_2
    out_buf: beamform_tracking_output_valved_buffer_2
  tracking_valve_3:
    kotekan_stage: Valve
    in_buf: beamform_tracking_output_buffer_3
    out_buf: beamform_tracking_output_valved_buffer_3

pulsar:
  timesamples_per_pulsar_packet: 625
  udp_pulsar_packet_size: 5032
  num_packet_per_stream: 80
  num_pulsar_beams: 10
  num_stream: 10
  cpu_affinity: [5,11]
  pulsar_output_buffer:
    num_frames: buffer_depth + 4
    frame_size: udp_pulsar_packet_size * num_stream * num_packet_per_stream
    metadata_pool: main_pool
    kotekan_buffer: standard
  postprocess:
    kotekan_stage: pulsarPostProcess
    network_input_buffer_0: beamform_tracking_output_valved_buffer_0
    network_input_buffer_1: beamform_tracking_output_valved_buffer_1
    network_input_buffer_2: beamform_tracking_output_valved_buffer_2
    network_input_buffer_3: beamform_tracking_output_valved_buffer_3
    pulsar_out_buf: pulsar_output_buffer
  network_send:
    #kotekan_stage: pulsarNetworkProcess
    pulsar_out_buf: pulsar_output_buffer
    udp_pulsar_port_number: 1414
    number_of_nodes: 256
    number_of_subnets: 2
    pulsar_node_ips:
      - 10.15.50.10
      - 10.16.50.11
      - 10.15.50.12
      - 10.16.50.13
      - 10.15.50.14
      - 10.16.50.15
      - 10.15.50.16
      - 10.16.50.17
      - 10.15.50.18
      - 10.16.50.19

##############################
#### Extra tracking beams ####
##############################

beam_metadata_pool:
  kotekan_metadata_pool: BeamMetadata
  num_metadata_objects: (6 * 4 + 16) * 4

extra_tracking_buffers:
  metadata_pool: beam_metadata_pool
  frame_size: samples_per_data_set * num_pol
  num_frames: 8
  beam_buffer_10_0:
    kotekan_buffer: standard
  beam_buffer_10_1:
    kotekan_buffer: standard
  beam_buffer_10_2:
    kotekan_buffer: standard
  beam_buffer_10_3:
    kotekan_buffer: standard
  beam_buffer_10_merged:
    kotekan_buffer: standard
    num_frames: 20
  beam_buffer_11_0:
    kotekan_buffer: standard
  beam_buffer_11_1:
    kotekan_buffer: standard
  beam_buffer_11_2:
    kotekan_buffer: standard
  beam_buffer_11_3:
    kotekan_buffer: standard
  beam_buffer_11_merged:
    kotekan_buffer: standard
    num_frames: 20

extra_tracking_beams:
  cpu_affinity: [5,11]
  beam_extract_10:
    extract_beam: 10
    beam_extract_10_0:
      kotekan_stage: BeamExtract
      #log_level: DEBUG2
      in_buf: beamform_tracking_output_valved_buffer_0
      out_buf: beam_buffer_10_0
    beam_extract_10_1:
      kotekan_stage: BeamExtract
      #log_level: DEBUG2
      in_buf: beamform_tracking_output_valved_buffer_1
      out_buf: beam_buffer_10_1
    beam_extract_10_2:
      kotekan_stage: BeamExtract
      #log_level: DEBUG2
      in_buf: beamform_tracking_output_valved_buffer_2
      out_buf: beam_buffer_10_2
    beam_extract_10_3:
      kotekan_stage: BeamExtract
      #log_level: DEBUG2
      in_buf: beamform_tracking_output_valved_buffer_3
      out_buf: beam_buffer_10_3
    beam_merge_10:
      kotekan_stage: bufferMerge
      timeout: 0.1
      in_bufs:
        - beam_buffer_10_0
        - beam_buffer_10_1
        - beam_buffer_10_2
        - beam_buffer_10_3
      out_buf: beam_buffer_10_merged
    beam_send_10:
      kotekan_stage: bufferSend
      buf: beam_buffer_10_merged
      # outrigger-gating
      server_ip: 10.1.50.52
      server_port: 10030
      log_level: error
      reconnect_time: 10
  beam_extract_11:
    extract_beam: 11
    beam_extract_11_0:
      kotekan_stage: BeamExtract
      in_buf: beamform_tracking_output_valved_buffer_0
      out_buf: beam_buffer_11_0
    beam_extract_11_1:
      kotekan_stage: BeamExtract
      in_buf: beamform_tracking_output_valved_buffer_1
      out_buf: beam_buffer_11_1
    beam_extract_11_2:
      kotekan_stage: BeamExtract
      in_buf: beamform_tracking_output_valved_buffer_2
      out_buf: beam_buffer_11_2
    beam_extract_11_3:
      kotekan_stage: BeamExtract
      in_buf: beamform_tracking_output_valved_buffer_3
      out_buf: beam_buffer_11_3
    beam_merge_11:
      kotekan_stage: bufferMerge
      timeout: 0.1
      in_bufs:
        - beam_buffer_11_0
        - beam_buffer_11_1
        - beam_buffer_11_2
        - beam_buffer_11_3
      out_buf: beam_buffer_11_merged
    beam_send_11:
      kotekan_stage: bufferSend
      buf: beam_buffer_11_merged
      # outrigger-gating
      server_ip: 10.1.50.52
      server_port: 10035
      log_level: error
      reconnect_time: 10

#### N2 GPU Post processing ####
valve:
  valve0:
    kotekan_stage: Valve
    in_buf: gpu_n2_output_buffer_0
    out_buf: valve_buffer_0
  valve1:
    kotekan_stage: Valve
    in_buf: gpu_n2_output_buffer_1
    out_buf: valve_buffer_1
  valve2:
    kotekan_stage: Valve
    in_buf: gpu_n2_output_buffer_2
    out_buf: valve_buffer_2
  valve3:
    kotekan_stage: Valve
    in_buf: gpu_n2_output_buffer_3
    out_buf: valve_buffer_3

rfi_valve:
  valve0:
    kotekan_stage: Valve
    in_buf: gpu_rfi_output_buffer_0
    out_buf: rfi_valve_buffer_0
  valve1:
    kotekan_stage: Valve
    in_buf: gpu_rfi_output_buffer_1
    out_buf: rfi_valve_buffer_1
  valve2:
    kotekan_stage: Valve
    in_buf: gpu_rfi_output_buffer_2
    out_buf: rfi_valve_buffer_2
  valve3:
    kotekan_stage: Valve
    in_buf: gpu_rfi_output_buffer_3
    out_buf: rfi_valve_buffer_3

# Perform a second pass at RFI excision
rfi_stage2:
  updatable_config:
    enable: "/updatable_config/rfi_zeroing_second_stage/enable"
    thresholds: "/updatable_config/rfi_zeroing_second_stage/thresholds"
  rfi0:
    kotekan_stage: RfiFrameDrop
    in_buf_vis: valve_buffer_0
    in_buf_sk: rfi_valve_buffer_0
    out_buf: rfi_vis_buffer_0
  rfi1:
    kotekan_stage: RfiFrameDrop
    in_buf_vis: valve_buffer_1
    in_buf_sk: rfi_valve_buffer_1
    out_buf: rfi_vis_buffer_1
  rfi2:
    kotekan_stage: RfiFrameDrop
    in_buf_vis: valve_buffer_2
    in_buf_sk: rfi_valve_buffer_2
    out_buf: rfi_vis_buffer_2
  rfi3:
    kotekan_stage: RfiFrameDrop
    in_buf_vis: valve_buffer_3
    in_buf_sk: rfi_valve_buffer_3
    out_buf: rfi_vis_buffer_3

vis_accumulate:
  # This sets a ~5s cadence which should exactly sync up with what the absorber acquisition is doing
  num_gpu_frames: 160
  samples_per_data_set: 12288
  low_sample_fraction: 0.1
  updatable_config:
    psr0: "/updatable_config/gating/psr0_config"
  acc0:
    kotekan_stage: visAccumulate
    in_buf: rfi_vis_buffer_0
    out_buf: visbuf_5s_0
    gating:
      psr0:
        mode: pulsar
        buf: visbuf_psr0_5s_0
  acc1:
    kotekan_stage: visAccumulate
    in_buf: rfi_vis_buffer_1
    out_buf: visbuf_5s_1
    gating:
      psr0:
        mode: pulsar
        buf: visbuf_psr0_5s_1
  acc2:
    kotekan_stage: visAccumulate
    in_buf: rfi_vis_buffer_2
    out_buf: visbuf_5s_2
    gating:
      psr0:
        mode: pulsar
        buf: visbuf_psr0_5s_2
  acc3:
    kotekan_stage: visAccumulate
    in_buf: rfi_vis_buffer_3
    out_buf: visbuf_5s_3
    gating:
      psr0:
        mode: pulsar
        buf: visbuf_psr0_5s_3

#### Perform all extra time integration and calculate eigenvalues ####
vis_merge_5s:
  kotekan_stage: bufferMerge
  timeout: 0.1
  in_bufs:
    - visbuf_5s_0
    - visbuf_5s_1
    - visbuf_5s_2
    - visbuf_5s_3
  out_buf: visbuf_5s_merge

vis_merge_gated_psr0:
  kotekan_stage: bufferMerge
  timeout: 0.1
  in_bufs:
    - visbuf_psr0_5s_0
    - visbuf_psr0_5s_1
    - visbuf_psr0_5s_2
    - visbuf_psr0_5s_3
  out_buf: visbuf_psr0_5s_merge

vis_int_10s:
  num_samples: 2
  int0:
    kotekan_stage: timeDownsample
    in_buf: visbuf_5s_0
    out_buf: visbuf_10s_0
  int1:
    kotekan_stage: timeDownsample
    in_buf: visbuf_5s_1
    out_buf: visbuf_10s_1
  int2:
    kotekan_stage: timeDownsample
    in_buf: visbuf_5s_2
    out_buf: visbuf_10s_2
  int3:
    kotekan_stage: timeDownsample
    in_buf: visbuf_5s_3
    out_buf: visbuf_10s_3

vis_merge_10s:
  kotekan_stage: bufferMerge
  timeout: 0.1
  in_bufs:
    - visbuf_10s_0
    - visbuf_10s_1
    - visbuf_10s_2
    - visbuf_10s_3
  out_buf: visbuf_10s_merge

eigcalc:
  kotekan_stage: EigenVisIter
  cpu_affinity: [4]
  log_level: warn

  in_buf: visbuf_10s_merge
  out_buf: visbuf_eig_10s_merge

  # Convergence config
  tol_eval: 0.00001
  tol_evec: 0.0001
  max_iterations: 19
  num_ev_conv: 2
  krylov: 2
  subspace: 1

  # Masking config
  bands_filled: [ [0, 30], [251, 262] ]
  exclude_inputs: [  46,   84,  107,  136,  142,  256,  257,  319,  348,  357,  369,
                    370,  453,  550,  551,  579,  638,  688,  739,  742,  768,  784,
                    807,  855,  944,  960,  967,  971,  981,  986, 1005, 1010, 1020,
                   1023, 1058, 1141, 1166, 1225, 1280, 1281, 1285, 1311, 1314, 1343,
                   1380, 1381, 1479, 1521, 1523, 1543, 1642, 1684, 1687, 1738, 1792,
                   1794, 1910, 1912, 1943, 1945, 1950, 1982, 1984, 1987, 2032, 2034]

vis_debug:
  kotekan_stage: visDebug
  in_buf: visbuf_eig_10s_merge

# Generate the 26m stream
26m_subset:
  kotekan_stage: prodSubset
  in_buf: visbuf_5s_merge
  out_buf: visbuf_5s_26m
  prod_subset_type: have_inputs
  input_list: [1225, 1521]  # 26m channels

# Generate the 26m gated stream
26m_psr0_subset:
  kotekan_stage: prodSubset
  in_buf: visbuf_psr0_5s_merge
  out_buf: visbuf_psr0_5s_26m
  prod_subset_type: have_inputs
  input_list: [1225, 1521]  # 26m channels

# Transmit all the data to the receiver node
buffer_send:
  server_ip: 10.1.50.12
  reconnect_time: 20
  log_level: warn
  n2:
    #kotekan_stage: bufferSend
    buf: visbuf_eig_10s_merge
    server_port: 11024
  26m:
    #kotekan_stage: bufferSend
    buf: visbuf_5s_26m
    server_port: 11025
  26m_psr0:
    #kotekan_stage: bufferSend
    buf: visbuf_psr0_5s_26m
    server_port: 11026


#### RFI post processing and TX ####
rfi_broadcast:
  total_links: 1
  destination_protocol: UDP
  destination_ip: 10.1.13.1
  frames_per_packet: 1
  gpu_0:
    #kotekan_stage: rfiBroadcast
    rfi_in: gpu_rfi_output_buffer_0
    rfi_mask: gpu_rfi_mask_output_buffer_0
    destination_port: 41215
  gpu_1:
    #kotekan_stage: rfiBroadcast
    rfi_in: gpu_rfi_output_buffer_1
    rfi_mask: gpu_rfi_mask_output_buffer_1
    destination_port: 41216
  gpu_2:
    #kotekan_stage: rfiBroadcast
    rfi_in: gpu_rfi_output_buffer_2
    rfi_mask: gpu_rfi_mask_output_buffer_2
    destination_port: 41217
  gpu_3:
    #kotekan_stage: rfiBroadcast
    rfi_in: gpu_rfi_output_buffer_3
    rfi_mask: gpu_rfi_mask_output_buffer_3
    destination_port: 41218

rfi_bad_input_finder:
  destination_ip: 10.1.13.1
  destination_port: 41219
  bi_frames_per_packet: 10
  gpu_0:
    #kotekan_stage: rfiBadInputFinder
    rfi_in: gpu_rfi_bad_input_buffer_0
  gpu_1:
    #kotekan_stage: rfiBadInputFinder
    rfi_in: gpu_rfi_bad_input_buffer_1
  gpu_2:
    #kotekan_stage: rfiBadInputFinder
    rfi_in: gpu_rfi_bad_input_buffer_2
  gpu_3:
    #kotekan_stage: rfiBadInputFinder
    rfi_in: gpu_rfi_bad_input_buffer_3

rfi_sk_record:
  total_links: 1
  updatable_config: "/updatable_config/rfi_sk_record"
  gpu_0:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_output_buffer_0
  gpu_1:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_output_buffer_1
  gpu_2:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_output_buffer_2
  gpu_3:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_output_buffer_3

rfi_pkt_loss_record:
  total_links: 1
  updatable_config: "/updatable_config/rfi_pkt_loss_record"
  gpu_0:
    kotekan_stage: rfiRecord
    rfi_in: rfi_compressed_lost_samples_buf

rfi_var_record:
  total_links: 1
  updatable_config: "/updatable_config/rfi_var_record"
  gpu_0:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_var_output_buffer_0
  gpu_1:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_var_output_buffer_1
  gpu_2:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_var_output_buffer_2
  gpu_3:
    kotekan_stage: rfiRecord
    rfi_in: gpu_rfi_var_output_buffer_3

#### Monitoring and debug stages ####

buffer_status:
  kotekan_stage: bufferStatus
  time_delay: 30000000
  print_status: false

monitor:
  kotekan_stage: monitorBuffer
  bufs:
    - network_buffer_0
    - network_buffer_1
    - network_buffer_2
    - network_buffer_3
  timeout: 5
  fill_threshold: 0.98

# This seems to find the lockup condition
monitor_2:
  kotekan_stage: monitorBuffer
  bufs:
    - beamform_tracking_output_buffer_0
    - beamform_tracking_output_buffer_1
    - beamform_tracking_output_buffer_2
    - beamform_tracking_output_buffer_3
    - lost_samples_buffer
  timeout: 10
  fill_threshold: 0.80


############################
#### Fixed reorder maps ####
############################

# FRB reorder map
# TODO: can this be generated from the input_reorder data below?
reorder_map: [32,33,34,35,40,41,42,43,48,49,50,51,56,57,58,59,96,97,98,99,
              104,105,106,107,112,113,114,115,120,121,122,123,67,66,65,64,
              75,74,73,72,83,82,81,80,91,90,89,88,3,2,1,0,11,10,9,8,19,18,
              17,16,27,26,25,24,152,153,154,155,144,145,146,147,136,137,138,
              139,128,129,130,131,216,217,218,219,208,209,210,211,200,201,
              202,203,192,193,194,195,251,250,249,248,243,242,241,240,235,
              234,233,232,227,226,225,224,187,186,185,184,179,178,177,176,
              171,170,169,168,163,162,161,160,355,354,353,352,363,362,361,
              360,371,370,369,368,379,378,377,376,291,290,289,288,299,298,
              297,296,307,306,305,304,315,314,313,312,259,258,257,256,264,
              265,266,267,272,273,274,275,280,281,282,283,323,322,321,320,
              331,330,329,328,339,338,337,336,347,346,345,344,408,409,410,
              411,400,401,402,403,392,393,394,395,384,385,386,387,472,473,
              474,475,464,465,466,467,456,457,458,459,448,449,450,451,440,
              441,442,443,432,433,434,435,424,425,426,427,416,417,418,419,
              504,505,506,507,496,497,498,499,488,489,490,491,480,481,482,
              483,36,37,38,39,44,45,46,47,52,53,54,55,60,61,62,63,100,101,
              102,103,108,109,110,111,116,117,118,119,124,125,126,127,71,70,
              69,68,79,78,77,76,87,86,85,84,95,94,93,92,7,6,5,4,15,14,13,12,
              23,22,21,20,31,30,29,28,156,157,158,159,148,149,150,151,140,
              141,142,143,132,133,134,135,220,221,222,223,212,213,214,215,
              204,205,206,207,196,197,198,199,255,254,253,252,247,246,245,
              244,239,238,237,236,231,230,229,228,191,190,189,188,183,182,
              181,180,175,174,173,172,167,166,165,164,359,358,357,356,367,
              366,365,364,375,374,373,372,383,382,381,380,295,294,293,292,
              303,302,301,300,311,310,309,308,319,318,317,316,263,262,261,
              260,268,269,270,271,276,277,278,279,284,285,286,287,327,326,
              325,324,335,334,333,332,343,342,341,340,351,350,349,348,412,
              413,414,415,404,405,406,407,396,397,398,399,388,389,390,391,
              476,477,478,479,468,469,470,471,460,461,462,463,452,453,454,
              455,444,445,446,447,436,437,438,439,428,429,430,431,420,421,
              422,423,508,509,510,511,500,501,502,503,492,493,494,495,484,
              485,486,487]

# Information for input reordering, packed as
#   (adc_id, chan_id, correlator_input)
# The first is for the reordering, the last two are for making the index map
input_reorder:
  - [ 128,    0, FCC000812]
  - [ 129,    1, FCC000813]
  - [ 130,    2, FCC000814]
  - [ 131,    3, FCC000815]
  - [ 132,    4, FCC000808]
  - [ 133,    5, FCC000809]
  - [ 134,    6, FCC000810]
  - [ 135,    7, FCC000811]
  - [ 136,    8, FCC000804]
  - [ 137,    9, FCC000805]
  - [ 138,   10, FCC000806]
  - [ 139,   11, FCC000807]
  - [ 140,   12, FCC000800]
  - [ 141,   13, FCC000801]
  - [ 142,   14, FCC000802]
  - [ 143,   15, FCC000803]
  - [ 160,   16, FCC001012]
  - [ 161,   17, FCC001013]
  - [ 162,   18, FCC001014]
  - [ 163,   19, FCC001015]
  - [ 164,   20, FCC001008]
  - [ 165,   21, FCC001009]
  - [ 166,   22, FCC001010]
  - [ 167,   23, FCC001011]
  - [ 168,   24, FCC001004]
  - [ 169,   25, FCC001005]
  - [ 170,   26, FCC001006]
  - [ 171,   27, FCC001007]
  - [ 172,   28, FCC001000]
  - [ 173,   29, FCC001001]
  - [ 174,   30, FCC001002]
  - [ 175,   31, FCC001003]
  - [ 192,   32, FCC001212]
  - [ 193,   33, FCC001213]
  - [ 194,   34, FCC001214]
  - [ 195,   35, FCC001215]
  - [ 196,   36, FCC001208]
  - [ 197,   37, FCC001209]
  - [ 198,   38, FCC001210]
  - [ 199,   39, FCC001211]
  - [ 200,   40, FCC001204]
  - [ 201,   41, FCC001205]
  - [ 202,   42, FCC001206]
  - [ 203,   43, FCC001207]
  - [ 204,   44, FCC001200]
  - [ 205,   45, FCC001201]
  - [ 206,   46, FCC001202]
  - [ 207,   47, FCC001203]
  - [ 224,   48, FCC001412]
  - [ 225,   49, FCC001413]
  - [ 226,   50, FCC001414]
  - [ 227,   51, FCC001415]
  - [ 228,   52, FCC001408]
  - [ 229,   53, FCC001409]
  - [ 230,   54, FCC001410]
  - [ 231,   55, FCC001411]
  - [ 232,   56, FCC001404]
  - [ 233,   57, FCC001405]
  - [ 234,   58, FCC001406]
  - [ 235,   59, FCC001407]
  - [ 236,   60, FCC001400]
  - [ 237,   61, FCC001401]
  - [ 238,   62, FCC001402]
  - [ 239,   63, FCC001403]
  - [ 384,   64, FCC010812]
  - [ 385,   65, FCC010813]
  - [ 386,   66, FCC010814]
  - [ 387,   67, FCC010815]
  - [ 388,   68, FCC010808]
  - [ 389,   69, FCC010809]
  - [ 390,   70, FCC010810]
  - [ 391,   71, FCC010811]
  - [ 392,   72, FCC010804]
  - [ 393,   73, FCC010805]
  - [ 394,   74, FCC010806]
  - [ 395,   75, FCC010807]
  - [ 396,   76, FCC010800]
  - [ 397,   77, FCC010801]
  - [ 398,   78, FCC010802]
  - [ 399,   79, FCC010803]
  - [ 416,   80, FCC011012]
  - [ 417,   81, FCC011013]
  - [ 418,   82, FCC011014]
  - [ 419,   83, FCC011015]
  - [ 420,   84, FCC011008]
  - [ 421,   85, FCC011009]
  - [ 422,   86, FCC011010]
  - [ 423,   87, FCC011011]
  - [ 424,   88, FCC011004]
  - [ 425,   89, FCC011005]
  - [ 426,   90, FCC011006]
  - [ 427,   91, FCC011007]
  - [ 428,   92, FCC011000]
  - [ 429,   93, FCC011001]
  - [ 430,   94, FCC011002]
  - [ 431,   95, FCC011003]
  - [ 448,   96, FCC011212]
  - [ 449,   97, FCC011213]
  - [ 450,   98, FCC011214]
  - [ 451,   99, FCC011215]
  - [ 452,  100, FCC011208]
  - [ 453,  101, FCC011209]
  - [ 454,  102, FCC011210]
  - [ 455,  103, FCC011211]
  - [ 456,  104, FCC011204]
  - [ 457,  105, FCC011205]
  - [ 458,  106, FCC011206]
  - [ 459,  107, FCC011207]
  - [ 460,  108, FCC011200]
  - [ 461,  109, FCC011201]
  - [ 462,  110, FCC011202]
  - [ 463,  111, FCC011203]
  - [ 480,  112, FCC011412]
  - [ 481,  113, FCC011413]
  - [ 482,  114, FCC011414]
  - [ 483,  115, FCC011415]
  - [ 484,  116, FCC011408]
  - [ 485,  117, FCC011409]
  - [ 486,  118, FCC011410]
  - [ 487,  119, FCC011411]
  - [ 488,  120, FCC011404]
  - [ 489,  121, FCC011405]
  - [ 490,  122, FCC011406]
  - [ 491,  123, FCC011407]
  - [ 492,  124, FCC011400]
  - [ 493,  125, FCC011401]
  - [ 494,  126, FCC011402]
  - [ 495,  127, FCC011403]
  - [ 268,  128, FCC010000]
  - [ 269,  129, FCC010001]
  - [ 270,  130, FCC010002]
  - [ 271,  131, FCC010003]
  - [ 264,  132, FCC010004]
  - [ 265,  133, FCC010005]
  - [ 266,  134, FCC010006]
  - [ 267,  135, FCC010007]
  - [ 260,  136, FCC010008]
  - [ 261,  137, FCC010009]
  - [ 262,  138, FCC010010]
  - [ 263,  139, FCC010011]
  - [ 256,  140, FCC010012]
  - [ 257,  141, FCC010013]
  - [ 258,  142, FCC010014]
  - [ 259,  143, FCC010015]
  - [ 300,  144, FCC010200]
  - [ 301,  145, FCC010201]
  - [ 302,  146, FCC010202]
  - [ 303,  147, FCC010203]
  - [ 296,  148, FCC010204]
  - [ 297,  149, FCC010205]
  - [ 298,  150, FCC010206]
  - [ 299,  151, FCC010207]
  - [ 292,  152, FCC010208]
  - [ 293,  153, FCC010209]
  - [ 294,  154, FCC010210]
  - [ 295,  155, FCC010211]
  - [ 288,  156, FCC010212]
  - [ 289,  157, FCC010213]
  - [ 290,  158, FCC010214]
  - [ 291,  159, FCC010215]
  - [ 332,  160, FCC010400]
  - [ 333,  161, FCC010401]
  - [ 334,  162, FCC010402]
  - [ 335,  163, FCC010403]
  - [ 328,  164, FCC010404]
  - [ 329,  165, FCC010405]
  - [ 330,  166, FCC010406]
  - [ 331,  167, FCC010407]
  - [ 324,  168, FCC010408]
  - [ 325,  169, FCC010409]
  - [ 326,  170, FCC010410]
  - [ 327,  171, FCC010411]
  - [ 320,  172, FCC010412]
  - [ 321,  173, FCC010413]
  - [ 322,  174, FCC010414]
  - [ 323,  175, FCC010415]
  - [ 364,  176, FCC010600]
  - [ 365,  177, FCC010601]
  - [ 366,  178, FCC010602]
  - [ 367,  179, FCC010603]
  - [ 360,  180, FCC010604]
  - [ 361,  181, FCC010605]
  - [ 362,  182, FCC010606]
  - [ 363,  183, FCC010607]
  - [ 356,  184, FCC010608]
  - [ 357,  185, FCC010609]
  - [ 358,  186, FCC010610]
  - [ 359,  187, FCC010611]
  - [ 352,  188, FCC010612]
  - [ 353,  189, FCC010613]
  - [ 354,  190, FCC010614]
  - [ 355,  191, FCC010615]
  - [  12,  192, FCC000000]
  - [  13,  193, FCC000001]
  - [  14,  194, FCC000002]
  - [  15,  195, FCC000003]
  - [   8,  196, FCC000004]
  - [   9,  197, FCC000005]
  - [  10,  198, FCC000006]
  - [  11,  199, FCC000007]
  - [   4,  200, FCC000008]
  - [   5,  201, FCC000009]
  - [   6,  202, FCC000010]
  - [   7,  203, FCC000011]
  - [   0,  204, FCC000012]
  - [   1,  205, FCC000013]
  - [   2,  206, FCC000014]
  - [   3,  207, FCC000015]
  - [  44,  208, FCC000200]
  - [  45,  209, FCC000201]
  - [  46,  210, FCC000202]
  - [  47,  211, FCC000203]
  - [  40,  212, FCC000204]
  - [  41,  213, FCC000205]
  - [  42,  214, FCC000206]
  - [  43,  215, FCC000207]
  - [  36,  216, FCC000208]
  - [  37,  217, FCC000209]
  - [  38,  218, FCC000210]
  - [  39,  219, FCC000211]
  - [  32,  220, FCC000212]
  - [  34,  221, FCC000214]
  - [  33,  222, FCC000213]
  - [  35,  223, FCC000215]
  - [  76,  224, FCC000400]
  - [  77,  225, FCC000401]
  - [  78,  226, FCC000402]
  - [  79,  227, FCC000403]
  - [  72,  228, FCC000404]
  - [  73,  229, FCC000405]
  - [  74,  230, FCC000406]
  - [  75,  231, FCC000407]
  - [  68,  232, FCC000408]
  - [  69,  233, FCC000409]
  - [  70,  234, FCC000410]
  - [  71,  235, FCC000411]
  - [  64,  236, FCC000412]
  - [  65,  237, FCC000413]
  - [  66,  238, FCC000414]
  - [  67,  239, FCC000415]
  - [ 108,  240, FCC000600]
  - [ 109,  241, FCC000601]
  - [ 110,  242, FCC000602]
  - [ 111,  243, FCC000603]
  - [ 104,  244, FCC000604]
  - [ 105,  245, FCC000605]
  - [ 106,  246, FCC000606]
  - [ 107,  247, FCC000607]
  - [ 100,  248, FCC000608]
  - [ 101,  249, FCC000609]
  - [ 102,  250, FCC000610]
  - [ 103,  251, FCC000611]
  - [  96,  252, FCC000612]
  - [  97,  253, FCC000613]
  - [  98,  254, FCC000614]
  - [  99,  255, FCC000615]
  - [ 144,  256, FCC000912]
  - [ 145,  257, FCC000913]
  - [ 146,  258, FCC000914]
  - [ 147,  259, FCC000915]
  - [ 148,  260, FCC000908]
  - [ 149,  261, FCC000909]
  - [ 150,  262, FCC000910]
  - [ 151,  263, FCC000911]
  - [ 152,  264, FCC000904]
  - [ 153,  265, FCC000905]
  - [ 154,  266, FCC000906]
  - [ 155,  267, FCC000907]
  - [ 156,  268, FCC000900]
  - [ 157,  269, FCC000901]
  - [ 158,  270, FCC000902]
  - [ 159,  271, FCC000903]
  - [ 176,  272, FCC001112]
  - [ 177,  273, FCC001113]
  - [ 178,  274, FCC001114]
  - [ 179,  275, FCC001115]
  - [ 180,  276, FCC001108]
  - [ 181,  277, FCC001109]
  - [ 182,  278, FCC001110]
  - [ 183,  279, FCC001111]
  - [ 184,  280, FCC001104]
  - [ 185,  281, FCC001105]
  - [ 186,  282, FCC001106]
  - [ 187,  283, FCC001107]
  - [ 188,  284, FCC001100]
  - [ 189,  285, FCC001101]
  - [ 190,  286, FCC001102]
  - [ 191,  287, FCC001103]
  - [ 208,  288, FCC001312]
  - [ 209,  289, FCC001313]
  - [ 210,  290, FCC001314]
  - [ 211,  291, FCC001315]
  - [ 212,  292, FCC001308]
  - [ 213,  293, FCC001309]
  - [ 214,  294, FCC001310]
  - [ 215,  295, FCC001311]
  - [ 216,  296, FCC001304]
  - [ 217,  297, FCC001305]
  - [ 218,  298, FCC001306]
  - [ 219,  299, FCC001307]
  - [ 220,  300, FCC001300]
  - [ 221,  301, FCC001301]
  - [ 222,  302, FCC001302]
  - [ 223,  303, FCC001303]
  - [ 240,  304, FCC001512]
  - [ 241,  305, FCC001513]
  - [ 242,  306, FCC001514]
  - [ 243,  307, FCC001515]
  - [ 244,  308, FCC001508]
  - [ 245,  309, FCC001509]
  - [ 246,  310, FCC001510]
  - [ 247,  311, FCC001511]
  - [ 248,  312, FCC001504]
  - [ 249,  313, FCC001505]
  - [ 250,  314, FCC001506]
  - [ 251,  315, FCC001507]
  - [ 252,  316, FCC001500]
  - [ 253,  317, FCC001501]
  - [ 254,  318, FCC001502]
  - [ 255,  319, FCC001503]
  - [ 400,  320, FCC010912]
  - [ 401,  321, FCC010913]
  - [ 402,  322, FCC010914]
  - [ 403,  323, FCC010915]
  - [ 404,  324, FCC010908]
  - [ 405,  325, FCC010909]
  - [ 406,  326, FCC010910]
  - [ 407,  327, FCC010911]
  - [ 408,  328, FCC010904]
  - [ 409,  329, FCC010905]
  - [ 410,  330, FCC010906]
  - [ 411,  331, FCC010907]
  - [ 412,  332, FCC010900]
  - [ 413,  333, FCC010901]
  - [ 414,  334, FCC010902]
  - [ 415,  335, FCC010903]
  - [ 432,  336, FCC011112]
  - [ 433,  337, FCC011113]
  - [ 434,  338, FCC011114]
  - [ 435,  339, FCC011115]
  - [ 436,  340, FCC011108]
  - [ 437,  341, FCC011109]
  - [ 438,  342, FCC011110]
  - [ 439,  343, FCC011111]
  - [ 440,  344, FCC011104]
  - [ 441,  345, FCC011105]
  - [ 442,  346, FCC011106]
  - [ 443,  347, FCC011107]
  - [ 444,  348, FCC011100]
  - [ 445,  349, FCC011101]
  - [ 446,  350, FCC011102]
  - [ 447,  351, FCC011103]
  - [ 464,  352, FCC011312]
  - [ 465,  353, FCC011313]
  - [ 466,  354, FCC011314]
  - [ 467,  355, FCC011315]
  - [ 468,  356, FCC011308]
  - [ 469,  357, FCC011309]
  - [ 470,  358, FCC011310]
  - [ 471,  359, FCC011311]
  - [ 472,  360, FCC011304]
  - [ 473,  361, FCC011305]
  - [ 474,  362, FCC011306]
  - [ 475,  363, FCC011307]
  - [ 476,  364, FCC011300]
  - [ 477,  365, FCC011301]
  - [ 478,  366, FCC011302]
  - [ 479,  367, FCC011303]
  - [ 496,  368, FCC011512]
  - [ 497,  369, FCC011513]
  - [ 498,  370, FCC011514]
  - [ 499,  371, FCC011515]
  - [ 500,  372, FCC011508]
  - [ 501,  373, FCC011509]
  - [ 502,  374, FCC011510]
  - [ 503,  375, FCC011511]
  - [ 504,  376, FCC011504]
  - [ 505,  377, FCC011505]
  - [ 506,  378, FCC011506]
  - [ 507,  379, FCC011507]
  - [ 508,  380, FCC011500]
  - [ 509,  381, FCC011501]
  - [ 510,  382, FCC011502]
  - [ 511,  383, FCC011503]
  - [ 287,  384, FCC010103]
  - [ 286,  385, FCC010102]
  - [ 285,  386, FCC010101]
  - [ 284,  387, FCC010100]
  - [ 280,  388, FCC010104]
  - [ 281,  389, FCC010105]
  - [ 282,  390, FCC010106]
  - [ 283,  391, FCC010107]
  - [ 276,  392, FCC010108]
  - [ 277,  393, FCC010109]
  - [ 278,  394, FCC010110]
  - [ 279,  395, FCC010111]
  - [ 272,  396, FCC010112]
  - [ 273,  397, FCC010113]
  - [ 274,  398, FCC010114]
  - [ 275,  399, FCC010115]
  - [ 316,  400, FCC010300]
  - [ 317,  401, FCC010301]
  - [ 318,  402, FCC010302]
  - [ 319,  403, FCC010303]
  - [ 312,  404, FCC010304]
  - [ 313,  405, FCC010305]
  - [ 314,  406, FCC010306]
  - [ 315,  407, FCC010307]
  - [ 308,  408, FCC010308]
  - [ 309,  409, FCC010309]
  - [ 310,  410, FCC010310]
  - [ 311,  411, FCC010311]
  - [ 304,  412, FCC010312]
  - [ 305,  413, FCC010313]
  - [ 306,  414, FCC010314]
  - [ 307,  415, FCC010315]
  - [ 348,  416, FCC010500]
  - [ 349,  417, FCC010501]
  - [ 350,  418, FCC010502]
  - [ 351,  419, FCC010503]
  - [ 344,  420, FCC010504]
  - [ 345,  421, FCC010505]
  - [ 346,  422, FCC010506]
  - [ 347,  423, FCC010507]
  - [ 343,  424, FCC010511]
  - [ 342,  425, FCC010510]
  - [ 341,  426, FCC010509]
  - [ 340,  427, FCC010508]
  - [ 336,  428, FCC010512]
  - [ 337,  429, FCC010513]
  - [ 338,  430, FCC010514]
  - [ 339,  431, FCC010515]
  - [ 380,  432, FCC010700]
  - [ 381,  433, FCC010701]
  - [ 382,  434, FCC010702]
  - [ 383,  435, FCC010703]
  - [ 376,  436, FCC010704]
  - [ 377,  437, FCC010705]
  - [ 378,  438, FCC010706]
  - [ 379,  439, FCC010707]
  - [ 372,  440, FCC010708]
  - [ 373,  441, FCC010709]
  - [ 374,  442, FCC010710]
  - [ 375,  443, FCC010711]
  - [ 368,  444, FCC010712]
  - [ 369,  445, FCC010713]
  - [ 370,  446, FCC010714]
  - [ 371,  447, FCC010715]
  - [  28,  448, FCC000100]
  - [  29,  449, FCC000101]
  - [  30,  450, FCC000102]
  - [  31,  451, FCC000103]
  - [  24,  452, FCC000104]
  - [  25,  453, FCC000105]
  - [  26,  454, FCC000106]
  - [  27,  455, FCC000107]
  - [  20,  456, FCC000108]
  - [  21,  457, FCC000109]
  - [  22,  458, FCC000110]
  - [  23,  459, FCC000111]
  - [  16,  460, FCC000112]
  - [  17,  461, FCC000113]
  - [  18,  462, FCC000114]
  - [  19,  463, FCC000115]
  - [  60,  464, FCC000300]
  - [  61,  465, FCC000301]
  - [  62,  466, FCC000302]
  - [  63,  467, FCC000303]
  - [  56,  468, FCC000304]
  - [  57,  469, FCC000305]
  - [  58,  470, FCC000306]
  - [  59,  471, FCC000307]
  - [  52,  472, FCC000308]
  - [  53,  473, FCC000309]
  - [  54,  474, FCC000310]
  - [  55,  475, FCC000311]
  - [  48,  476, FCC000312]
  - [  49,  477, FCC000313]
  - [  50,  478, FCC000314]
  - [  51,  479, FCC000315]
  - [  92,  480, FCC000500]
  - [  93,  481, FCC000501]
  - [  94,  482, FCC000502]
  - [  95,  483, FCC000503]
  - [  88,  484, FCC000504]
  - [  89,  485, FCC000505]
  - [  90,  486, FCC000506]
  - [  91,  487, FCC000507]
  - [  84,  488, FCC000508]
  - [  85,  489, FCC000509]
  - [  86,  490, FCC000510]
  - [  87,  491, FCC000511]
  - [  80,  492, FCC000512]
  - [  81,  493, FCC000513]
  - [  82,  494, FCC000514]
  - [  83,  495, FCC000515]
  - [ 124,  496, FCC000700]
  - [ 125,  497, FCC000701]
  - [ 126,  498, FCC000702]
  - [ 127,  499, FCC000703]
  - [ 120,  500, FCC000704]
  - [ 121,  501, FCC000705]
  - [ 122,  502, FCC000706]
  - [ 123,  503, FCC000707]
  - [ 116,  504, FCC000708]
  - [ 117,  505, FCC000709]
  - [ 118,  506, FCC000710]
  - [ 119,  507, FCC000711]
  - [ 112,  508, FCC000712]
  - [ 113,  509, FCC000713]
  - [ 114,  510, FCC000714]
  - [ 115,  511, FCC000715]
  - [ 608,  512, FCC020612]
  - [ 609,  513, FCC020613]
  - [ 610,  514, FCC020614]
  - [ 611,  515, FCC020615]
  - [ 612,  516, FCC020608]
  - [ 613,  517, FCC020609]
  - [ 614,  518, FCC020610]
  - [ 615,  519, FCC020611]
  - [ 616,  520, FCC020604]
  - [ 617,  521, FCC020605]
  - [ 618,  522, FCC020606]
  - [ 619,  523, FCC020607]
  - [ 620,  524, FCC020600]
  - [ 621,  525, FCC020601]
  - [ 622,  526, FCC020602]
  - [ 623,  527, FCC020603]
  - [ 576,  528, FCC020412]
  - [ 577,  529, FCC020413]
  - [ 578,  530, FCC020414]
  - [ 579,  531, FCC020415]
  - [ 580,  532, FCC020408]
  - [ 581,  533, FCC020409]
  - [ 582,  534, FCC020410]
  - [ 583,  535, FCC020411]
  - [ 584,  536, FCC020404]
  - [ 585,  537, FCC020405]
  - [ 586,  538, FCC020406]
  - [ 587,  539, FCC020407]
  - [ 588,  540, FCC020400]
  - [ 589,  541, FCC020401]
  - [ 590,  542, FCC020402]
  - [ 591,  543, FCC020403]
  - [ 544,  544, FCC020212]
  - [ 545,  545, FCC020213]
  - [ 546,  546, FCC020214]
  - [ 547,  547, FCC020215]
  - [ 548,  548, FCC020208]
  - [ 549,  549, FCC020209]
  - [ 550,  550, FCC020210]
  - [ 551,  551, FCC020211]
  - [ 553,  552, FCC020205]
  - [ 552,  553, FCC020204]
  - [ 554,  554, FCC020206]
  - [ 555,  555, FCC020207]
  - [ 556,  556, FCC020200]
  - [ 557,  557, FCC020201]
  - [ 558,  558, FCC020202]
  - [ 559,  559, FCC020203]
  - [ 512,  560, FCC020012]
  - [ 513,  561, FCC020013]
  - [ 514,  562, FCC020014]
  - [ 515,  563, FCC020015]
  - [ 516,  564, FCC020008]
  - [ 517,  565, FCC020009]
  - [ 518,  566, FCC020010]
  - [ 519,  567, FCC020011]
  - [ 520,  568, FCC020004]
  - [ 521,  569, FCC020005]
  - [ 522,  570, FCC020006]
  - [ 523,  571, FCC020007]
  - [ 524,  572, FCC020000]
  - [ 525,  573, FCC020001]
  - [ 526,  574, FCC020002]
  - [ 527,  575, FCC020003]
  - [ 864,  576, FCC030612]
  - [ 865,  577, FCC030613]
  - [ 866,  578, FCC030614]
  - [ 867,  579, FCC030615]
  - [ 868,  580, FCC030608]
  - [ 869,  581, FCC030609]
  - [ 870,  582, FCC030610]
  - [ 871,  583, FCC030611]
  - [ 872,  584, FCC030604]
  - [ 873,  585, FCC030605]
  - [ 874,  586, FCC030606]
  - [ 875,  587, FCC030607]
  - [ 876,  588, FCC030600]
  - [ 877,  589, FCC030601]
  - [ 878,  590, FCC030602]
  - [ 879,  591, FCC030603]
  - [ 832,  592, FCC030412]
  - [ 833,  593, FCC030413]
  - [ 834,  594, FCC030414]
  - [ 835,  595, FCC030415]
  - [ 836,  596, FCC030408]
  - [ 837,  597, FCC030409]
  - [ 838,  598, FCC030410]
  - [ 839,  599, FCC030411]
  - [ 840,  600, FCC030404]
  - [ 841,  601, FCC030405]
  - [ 842,  602, FCC030406]
  - [ 843,  603, FCC030407]
  - [ 844,  604, FCC030400]
  - [ 845,  605, FCC030401]
  - [ 846,  606, FCC030402]
  - [ 847,  607, FCC030403]
  - [ 800,  608, FCC030212]
  - [ 801,  609, FCC030213]
  - [ 802,  610, FCC030214]
  - [ 803,  611, FCC030215]
  - [ 804,  612, FCC030208]
  - [ 805,  613, FCC030209]
  - [ 806,  614, FCC030210]
  - [ 807,  615, FCC030211]
  - [ 808,  616, FCC030204]
  - [ 809,  617, FCC030205]
  - [ 810,  618, FCC030206]
  - [ 811,  619, FCC030207]
  - [ 812,  620, FCC030200]
  - [ 813,  621, FCC030201]
  - [ 814,  622, FCC030202]
  - [ 815,  623, FCC030203]
  - [ 768,  624, FCC030012]
  - [ 769,  625, FCC030013]
  - [ 770,  626, FCC030014]
  - [ 771,  627, FCC030015]
  - [ 772,  628, FCC030008]
  - [ 773,  629, FCC030009]
  - [ 774,  630, FCC030010]
  - [ 775,  631, FCC030011]
  - [ 776,  632, FCC030004]
  - [ 777,  633, FCC030005]
  - [ 778,  634, FCC030006]
  - [ 779,  635, FCC030007]
  - [ 780,  636, FCC030000]
  - [ 781,  637, FCC030001]
  - [ 782,  638, FCC030002]
  - [ 783,  639, FCC030003]
  - [1004,  640, FCC031400]
  - [1005,  641, FCC031401]
  - [1006,  642, FCC031402]
  - [1007,  643, FCC031403]
  - [1003,  644, FCC031407]
  - [1002,  645, FCC031406]
  - [1001,  646, FCC031405]
  - [1000,  647, FCC031404]
  - [ 996,  648, FCC031408]
  - [ 997,  649, FCC031409]
  - [ 934,  650, FCC031010]
  - [ 935,  651, FCC031011]
  - [ 992,  652, FCC031412]
  - [ 993,  653, FCC031413]
  - [ 994,  654, FCC031414]
  - [ 995,  655, FCC031415]
  - [ 972,  656, FCC031200]
  - [ 973,  657, FCC031201]
  - [ 974,  658, FCC031202]
  - [ 975,  659, FCC031203]
  - [ 968,  660, FCC031204]
  - [ 969,  661, FCC031205]
  - [ 970,  662, FCC031206]
  - [ 971,  663, FCC031207]
  - [ 964,  664, FCC031208]
  - [ 965,  665, FCC031209]
  - [ 966,  666, FCC031210]
  - [ 967,  667, FCC031211]
  - [ 960,  668, FCC031212]
  - [ 961,  669, FCC031213]
  - [ 962,  670, FCC031214]
  - [ 963,  671, FCC031215]
  - [ 943,  672, FCC031003]
  - [ 942,  673, FCC031002]
  - [ 941,  674, FCC031001]
  - [ 940,  675, FCC031000]
  - [ 936,  676, FCC031004]
  - [ 937,  677, FCC031005]
  - [ 938,  678, FCC031006]
  - [ 939,  679, FCC031007]
  - [ 932,  680, FCC031008]
  - [ 933,  681, FCC031009]
  - [ 998,  682, FCC031410]
  - [ 999,  683, FCC031411]
  - [ 928,  684, FCC031012]
  - [ 929,  685, FCC031013]
  - [ 930,  686, FCC031014]
  - [ 931,  687, FCC031015]
  - [ 908,  688, FCC030800]
  - [ 909,  689, FCC030801]
  - [ 910,  690, FCC030802]
  - [ 911,  691, FCC030803]
  - [ 904,  692, FCC030804]
  - [ 905,  693, FCC030805]
  - [ 906,  694, FCC030806]
  - [ 907,  695, FCC030807]
  - [ 900,  696, FCC030808]
  - [ 901,  697, FCC030809]
  - [ 902,  698, FCC030810]
  - [ 903,  699, FCC030811]
  - [ 896,  700, FCC030812]
  - [ 897,  701, FCC030813]
  - [ 898,  702, FCC030814]
  - [ 899,  703, FCC030815]
  - [ 748,  704, FCC021400]
  - [ 749,  705, FCC021401]
  - [ 750,  706, FCC021402]
  - [ 751,  707, FCC021403]
  - [ 744,  708, FCC021404]
  - [ 745,  709, FCC021405]
  - [ 746,  710, FCC021406]
  - [ 747,  711, FCC021407]
  - [ 740,  712, FCC021408]
  - [ 741,  713, FCC021409]
  - [ 742,  714, FCC021410]
  - [ 743,  715, FCC021411]
  - [ 736,  716, FCC021412]
  - [ 737,  717, FCC021413]
  - [ 738,  718, FCC021414]
  - [ 739,  719, FCC021415]
  - [ 716,  720, FCC021200]
  - [ 717,  721, FCC021201]
  - [ 718,  722, FCC021202]
  - [ 719,  723, FCC021203]
  - [ 712,  724, FCC021204]
  - [ 713,  725, FCC021205]
  - [ 714,  726, FCC021206]
  - [ 715,  727, FCC021207]
  - [ 708,  728, FCC021208]
  - [ 709,  729, FCC021209]
  - [ 710,  730, FCC021210]
  - [ 711,  731, FCC021211]
  - [ 704,  732, FCC021212]
  - [ 705,  733, FCC021213]
  - [ 706,  734, FCC021214]
  - [ 707,  735, FCC021215]
  - [ 684,  736, FCC021000]
  - [ 685,  737, FCC021001]
  - [ 686,  738, FCC021002]
  - [ 687,  739, FCC021003]
  - [ 680,  740, FCC021004]
  - [ 681,  741, FCC021005]
  - [ 682,  742, FCC021006]
  - [ 683,  743, FCC021007]
  - [ 676,  744, FCC021008]
  - [ 677,  745, FCC021009]
  - [ 678,  746, FCC021010]
  - [ 679,  747, FCC021011]
  - [ 672,  748, FCC021012]
  - [ 673,  749, FCC021013]
  - [ 674,  750, FCC021014]
  - [ 675,  751, FCC021015]
  - [ 652,  752, FCC020800]
  - [ 653,  753, FCC020801]
  - [ 654,  754, FCC020802]
  - [ 655,  755, FCC020803]
  - [ 648,  756, FCC020804]
  - [ 649,  757, FCC020805]
  - [ 650,  758, FCC020806]
  - [ 651,  759, FCC020807]
  - [ 644,  760, FCC020808]
  - [ 645,  761, FCC020809]
  - [ 646,  762, FCC020810]
  - [ 647,  763, FCC020811]
  - [ 640,  764, FCC020812]
  - [ 641,  765, FCC020813]
  - [ 642,  766, FCC020814]
  - [ 643,  767, FCC020815]
  - [ 624,  768, FCC020712]
  - [ 625,  769, FCC020713]
  - [ 626,  770, FCC020714]
  - [ 627,  771, FCC020715]
  - [ 628,  772, FCC020708]
  - [ 629,  773, FCC020709]
  - [ 630,  774, FCC020710]
  - [ 631,  775, FCC020711]
  - [ 632,  776, FCC020704]
  - [ 633,  777, FCC020705]
  - [ 634,  778, FCC020706]
  - [ 635,  779, FCC020707]
  - [ 636,  780, FCC020700]
  - [ 637,  781, FCC020701]
  - [ 638,  782, FCC020702]
  - [ 639,  783, FCC020703]
  - [ 592,  784, FCC020512]
  - [ 593,  785, FCC020513]
  - [ 594,  786, FCC020514]
  - [ 595,  787, FCC020515]
  - [ 596,  788, FCC020508]
  - [ 597,  789, FCC020509]
  - [ 598,  790, FCC020510]
  - [ 599,  791, FCC020511]
  - [ 600,  792, FCC020504]
  - [ 601,  793, FCC020505]
  - [ 602,  794, FCC020506]
  - [ 603,  795, FCC020507]
  - [ 604,  796, FCC020500]
  - [ 605,  797, FCC020501]
  - [ 606,  798, FCC020502]
  - [ 607,  799, FCC020503]
  - [ 560,  800, FCC020312]
  - [ 561,  801, FCC020313]
  - [ 562,  802, FCC020314]
  - [ 563,  803, FCC020315]
  - [ 564,  804, FCC020308]
  - [ 565,  805, FCC020309]
  - [ 566,  806, FCC020310]
  - [ 567,  807, FCC020311]
  - [ 568,  808, FCC020304]
  - [ 569,  809, FCC020305]
  - [ 570,  810, FCC020306]
  - [ 571,  811, FCC020307]
  - [ 572,  812, FCC020300]
  - [ 573,  813, FCC020301]
  - [ 574,  814, FCC020302]
  - [ 575,  815, FCC020303]
  - [ 528,  816, FCC020112]
  - [ 529,  817, FCC020113]
  - [ 530,  818, FCC020114]
  - [ 531,  819, FCC020115]
  - [ 532,  820, FCC020108]
  - [ 533,  821, FCC020109]
  - [ 534,  822, FCC020110]
  - [ 535,  823, FCC020111]
  - [ 536,  824, FCC020104]
  - [ 537,  825, FCC020105]
  - [ 538,  826, FCC020106]
  - [ 539,  827, FCC020107]
  - [ 540,  828, FCC020100]
  - [ 541,  829, FCC020101]
  - [ 542,  830, FCC020102]
  - [ 543,  831, FCC020103]
  - [ 880,  832, FCC030712]
  - [ 881,  833, FCC030713]
  - [ 882,  834, FCC030714]
  - [ 883,  835, FCC030715]
  - [ 884,  836, FCC030708]
  - [ 885,  837, FCC030709]
  - [ 886,  838, FCC030710]
  - [ 887,  839, FCC030711]
  - [ 888,  840, FCC030704]
  - [ 889,  841, FCC030705]
  - [ 890,  842, FCC030706]
  - [ 891,  843, FCC030707]
  - [ 892,  844, FCC030700]
  - [ 893,  845, FCC030701]
  - [ 894,  846, FCC030702]
  - [ 895,  847, FCC030703]
  - [ 848,  848, FCC030512]
  - [ 849,  849, FCC030513]
  - [ 850,  850, FCC030514]
  - [ 851,  851, FCC030515]
  - [ 852,  852, FCC030508]
  - [ 853,  853, FCC030509]
  - [ 854,  854, FCC030510]
  - [ 855,  855, FCC030511]
  - [ 856,  856, FCC030504]
  - [ 857,  857, FCC030505]
  - [ 858,  858, FCC030506]
  - [ 859,  859, FCC030507]
  - [ 860,  860, FCC030500]
  - [ 861,  861, FCC030501]
  - [ 862,  862, FCC030502]
  - [ 863,  863, FCC030503]
  - [ 816,  864, FCC030312]
  - [ 817,  865, FCC030313]
  - [ 818,  866, FCC030314]
  - [ 819,  867, FCC030315]
  - [ 820,  868, FCC030308]
  - [ 821,  869, FCC030309]
  - [ 822,  870, FCC030310]
  - [ 823,  871, FCC030311]
  - [ 824,  872, FCC030304]
  - [ 825,  873, FCC030305]
  - [ 826,  874, FCC030306]
  - [ 827,  875, FCC030307]
  - [ 828,  876, FCC030300]
  - [ 829,  877, FCC030301]
  - [ 830,  878, FCC030302]
  - [ 831,  879, FCC030303]
  - [ 784,  880, FCC030112]
  - [ 785,  881, FCC030113]
  - [ 786,  882, FCC030114]
  - [ 787,  883, FCC030115]
  - [ 788,  884, FCC030108]
  - [ 789,  885, FCC030109]
  - [ 790,  886, FCC030110]
  - [ 791,  887, FCC030111]
  - [ 792,  888, FCC030104]
  - [ 793,  889, FCC030105]
  - [ 794,  890, FCC030106]
  - [ 795,  891, FCC030107]
  - [ 796,  892, FCC030100]
  - [ 797,  893, FCC030101]
  - [ 798,  894, FCC030102]
  - [ 799,  895, FCC030103]
  - [1020,  896, FCC031500]
  - [1021,  897, FCC031501]
  - [1022,  898, FCC031502]
  - [1023,  899, FCC031503]
  - [1016,  900, FCC031504]
  - [1017,  901, FCC031505]
  - [1018,  902, FCC031506]
  - [1019,  903, FCC031507]
  - [1012,  904, FCC031508]
  - [1013,  905, FCC031509]
  - [1015,  906, FCC031511]
  - [1014,  907, FCC031510]
  - [1008,  908, FCC031512]
  - [1009,  909, FCC031513]
  - [1010,  910, FCC031514]
  - [1011,  911, FCC031515]
  - [ 988,  912, FCC031300]
  - [ 989,  913, FCC031301]
  - [ 990,  914, FCC031302]
  - [ 991,  915, FCC031303]
  - [ 984,  916, FCC031304]
  - [ 985,  917, FCC031305]
  - [ 986,  918, FCC031306]
  - [ 987,  919, FCC031307]
  - [ 980,  920, FCC031308]
  - [ 981,  921, FCC031309]
  - [ 982,  922, FCC031310]
  - [ 983,  923, FCC031311]
  - [ 976,  924, FCC031312]
  - [ 977,  925, FCC031313]
  - [ 978,  926, FCC031314]
  - [ 979,  927, FCC031315]
  - [ 956,  928, FCC031100]
  - [ 957,  929, FCC031101]
  - [ 958,  930, FCC031102]
  - [ 959,  931, FCC031103]
  - [ 952,  932, FCC031104]
  - [ 953,  933, FCC031105]
  - [ 954,  934, FCC031106]
  - [ 955,  935, FCC031107]
  - [ 948,  936, FCC031108]
  - [ 949,  937, FCC031109]
  - [ 950,  938, FCC031110]
  - [ 951,  939, FCC031111]
  - [ 944,  940, FCC031112]
  - [ 945,  941, FCC031113]
  - [ 946,  942, FCC031114]
  - [ 947,  943, FCC031115]
  - [ 924,  944, FCC030900]
  - [ 925,  945, FCC030901]
  - [ 926,  946, FCC030902]
  - [ 927,  947, FCC030903]
  - [ 920,  948, FCC030904]
  - [ 921,  949, FCC030905]
  - [ 922,  950, FCC030906]
  - [ 923,  951, FCC030907]
  - [ 916,  952, FCC030908]
  - [ 917,  953, FCC030909]
  - [ 918,  954, FCC030910]
  - [ 919,  955, FCC030911]
  - [ 912,  956, FCC030912]
  - [ 913,  957, FCC030913]
  - [ 914,  958, FCC030914]
  - [ 915,  959, FCC030915]
  - [ 764,  960, FCC021500]
  - [ 765,  961, FCC021501]
  - [ 766,  962, FCC021502]
  - [ 767,  963, FCC021503]
  - [ 760,  964, FCC021504]
  - [ 761,  965, FCC021505]
  - [ 762,  966, FCC021506]
  - [ 763,  967, FCC021507]
  - [ 756,  968, FCC021508]
  - [ 757,  969, FCC021509]
  - [ 758,  970, FCC021510]
  - [ 759,  971, FCC021511]
  - [ 752,  972, FCC021512]
  - [ 753,  973, FCC021513]
  - [ 754,  974, FCC021514]
  - [ 755,  975, FCC021515]
  - [ 732,  976, FCC021300]
  - [ 733,  977, FCC021301]
  - [ 734,  978, FCC021302]
  - [ 735,  979, FCC021303]
  - [ 728,  980, FCC021304]
  - [ 729,  981, FCC021305]
  - [ 730,  982, FCC021306]
  - [ 731,  983, FCC021307]
  - [ 724,  984, FCC021308]
  - [ 725,  985, FCC021309]
  - [ 726,  986, FCC021310]
  - [ 727,  987, FCC021311]
  - [ 720,  988, FCC021312]
  - [ 721,  989, FCC021313]
  - [ 722,  990, FCC021314]
  - [ 723,  991, FCC021315]
  - [ 700,  992, FCC021100]
  - [ 701,  993, FCC021101]
  - [ 702,  994, FCC021102]
  - [ 703,  995, FCC021103]
  - [ 696,  996, FCC021104]
  - [ 697,  997, FCC021105]
  - [ 698,  998, FCC021106]
  - [ 699,  999, FCC021107]
  - [ 692, 1000, FCC021108]
  - [ 693, 1001, FCC021109]
  - [ 694, 1002, FCC021110]
  - [ 695, 1003, FCC021111]
  - [ 688, 1004, FCC021112]
  - [ 689, 1005, FCC021113]
  - [ 690, 1006, FCC021114]
  - [ 691, 1007, FCC021115]
  - [ 668, 1008, FCC020900]
  - [ 669, 1009, FCC020901]
  - [ 670, 1010, FCC020902]
  - [ 671, 1011, FCC020903]
  - [ 664, 1012, FCC020904]
  - [ 665, 1013, FCC020905]
  - [ 666, 1014, FCC020906]
  - [ 667, 1015, FCC020907]
  - [ 660, 1016, FCC020908]
  - [ 661, 1017, FCC020909]
  - [ 662, 1018, FCC020910]
  - [ 663, 1019, FCC020911]
  - [ 656, 1020, FCC020912]
  - [ 657, 1021, FCC020913]
  - [ 658, 1022, FCC020914]
  - [ 659, 1023, FCC020915]
  - [1420, 1024, FCC050800]
  - [1421, 1025, FCC050801]
  - [1422, 1026, FCC050802]
  - [1423, 1027, FCC050803]
  - [1416, 1028, FCC050804]
  - [1417, 1029, FCC050805]
  - [1418, 1030, FCC050806]
  - [1419, 1031, FCC050807]
  - [1412, 1032, FCC050808]
  - [1413, 1033, FCC050809]
  - [1414, 1034, FCC050810]
  - [1415, 1035, FCC050811]
  - [1408, 1036, FCC050812]
  - [1409, 1037, FCC050813]
  - [1410, 1038, FCC050814]
  - [1411, 1039, FCC050815]
  - [1452, 1040, FCC051000]
  - [1453, 1041, FCC051001]
  - [1454, 1042, FCC051002]
  - [1455, 1043, FCC051003]
  - [1448, 1044, FCC051004]
  - [1449, 1045, FCC051005]
  - [1450, 1046, FCC051006]
  - [1451, 1047, FCC051007]
  - [1444, 1048, FCC051008]
  - [1445, 1049, FCC051009]
  - [1446, 1050, FCC051010]
  - [1447, 1051, FCC051011]
  - [1440, 1052, FCC051012]
  - [1441, 1053, FCC051013]
  - [1442, 1054, FCC051014]
  - [1443, 1055, FCC051015]
  - [1484, 1056, FCC051200]
  - [1485, 1057, FCC051201]
  - [1486, 1058, FCC051202]
  - [1487, 1059, FCC051203]
  - [1480, 1060, FCC051204]
  - [1481, 1061, FCC051205]
  - [1482, 1062, FCC051206]
  - [1483, 1063, FCC051207]
  - [1476, 1064, FCC051208]
  - [1477, 1065, FCC051209]
  - [1478, 1066, FCC051210]
  - [1479, 1067, FCC051211]
  - [1472, 1068, FCC051212]
  - [1473, 1069, FCC051213]
  - [1474, 1070, FCC051214]
  - [1475, 1071, FCC051215]
  - [1516, 1072, FCC051400]
  - [1517, 1073, FCC051401]
  - [1518, 1074, FCC051402]
  - [1519, 1075, FCC051403]
  - [1512, 1076, FCC051404]
  - [1513, 1077, FCC051405]
  - [1514, 1078, FCC051406]
  - [1515, 1079, FCC051407]
  - [1508, 1080, FCC051408]
  - [1509, 1081, FCC051409]
  - [1510, 1082, FCC051410]
  - [1511, 1083, FCC051411]
  - [1504, 1084, FCC051412]
  - [1505, 1085, FCC051413]
  - [1506, 1086, FCC051414]
  - [1507, 1087, FCC051415]
  - [1164, 1088, FCC040800]
  - [1165, 1089, FCC040801]
  - [1166, 1090, FCC040802]
  - [1167, 1091, FCC040803]
  - [1160, 1092, FCC040804]
  - [1161, 1093, FCC040805]
  - [1162, 1094, FCC040806]
  - [1163, 1095, FCC040807]
  - [1156, 1096, FCC040808]
  - [1157, 1097, FCC040809]
  - [1158, 1098, FCC040810]
  - [1159, 1099, FCC040811]
  - [1152, 1100, FCC040812]
  - [1153, 1101, FCC040813]
  - [1154, 1102, FCC040814]
  - [1155, 1103, FCC040815]
  - [1196, 1104, FCC041000]
  - [1197, 1105, FCC041001]
  - [1198, 1106, FCC041002]
  - [1199, 1107, FCC041003]
  - [1192, 1108, FCC041004]
  - [1193, 1109, FCC041005]
  - [1194, 1110, FCC041006]
  - [1195, 1111, FCC041007]
  - [1188, 1112, FCC041008]
  - [1189, 1113, FCC041009]
  - [1190, 1114, FCC041010]
  - [1191, 1115, FCC041011]
  - [1184, 1116, FCC041012]
  - [1185, 1117, FCC041013]
  - [1186, 1118, FCC041014]
  - [1187, 1119, FCC041015]
  - [1228, 1120, FCC041200]
  - [1229, 1121, FCC041201]
  - [1230, 1122, FCC041202]
  - [1231, 1123, FCC041203]
  - [1224, 1124, FCC041204]
  - [1225, 1125, FCC041205]
  - [1226, 1126, FCC041206]
  - [1227, 1127, FCC041207]
  - [1220, 1128, FCC041208]
  - [1221, 1129, FCC041209]
  - [1222, 1130, FCC041210]
  - [1223, 1131, FCC041211]
  - [1216, 1132, FCC041212]
  - [1217, 1133, FCC041213]
  - [1219, 1134, FCC041215]
  - [1218, 1135, FCC041214]
  - [1260, 1136, FCC041400]
  - [1261, 1137, FCC041401]
  - [1262, 1138, FCC041402]
  - [1263, 1139, FCC041403]
  - [1256, 1140, FCC041404]
  - [1257, 1141, FCC041405]
  - [1258, 1142, FCC041406]
  - [1259, 1143, FCC041407]
  - [1252, 1144, FCC041408]
  - [1253, 1145, FCC041409]
  - [1254, 1146, FCC041410]
  - [1255, 1147, FCC041411]
  - [1248, 1148, FCC041412]
  - [1249, 1149, FCC041413]
  - [1250, 1150, FCC041414]
  - [1251, 1151, FCC041415]
  - [1036, 1152, FCC040000]
  - [1037, 1153, FCC040001]
  - [1038, 1154, FCC040002]
  - [1039, 1155, FCC040003]
  - [1032, 1156, FCC040004]
  - [1033, 1157, FCC040005]
  - [1034, 1158, FCC040006]
  - [1035, 1159, FCC040007]
  - [1028, 1160, FCC040008]
  - [1029, 1161, FCC040009]
  - [1030, 1162, FCC040010]
  - [1031, 1163, FCC040011]
  - [1024, 1164, FCC040012]
  - [1025, 1165, FCC040013]
  - [1026, 1166, FCC040014]
  - [1027, 1167, FCC040015]
  - [1056, 1168, FCC040212]
  - [1057, 1169, FCC040213]
  - [1058, 1170, FCC040214]
  - [1059, 1171, FCC040215]
  - [1060, 1172, FCC040208]
  - [1061, 1173, FCC040209]
  - [1062, 1174, FCC040210]
  - [1063, 1175, FCC040211]
  - [1064, 1176, FCC040204]
  - [1065, 1177, FCC040205]
  - [1066, 1178, FCC040206]
  - [1067, 1179, FCC040207]
  - [1068, 1180, FCC040200]
  - [1069, 1181, FCC040201]
  - [1070, 1182, FCC040202]
  - [1071, 1183, FCC040203]
  - [1088, 1184, FCC040412]
  - [1089, 1185, FCC040413]
  - [1090, 1186, FCC040414]
  - [1091, 1187, FCC040415]
  - [1092, 1188, FCC040408]
  - [1093, 1189, FCC040409]
  - [1094, 1190, FCC040410]
  - [1095, 1191, FCC040411]
  - [1096, 1192, FCC040404]
  - [1097, 1193, FCC040405]
  - [1098, 1194, FCC040406]
  - [1099, 1195, FCC040407]
  - [1100, 1196, FCC040400]
  - [1101, 1197, FCC040401]
  - [1102, 1198, FCC040402]
  - [1103, 1199, FCC040403]
  - [1120, 1200, FCC040612]
  - [1121, 1201, FCC040613]
  - [1122, 1202, FCC040614]
  - [1123, 1203, FCC040615]
  - [1124, 1204, FCC040608]
  - [1125, 1205, FCC040609]
  - [1126, 1206, FCC040610]
  - [1127, 1207, FCC040611]
  - [1128, 1208, FCC040604]
  - [1129, 1209, FCC040605]
  - [1130, 1210, FCC040606]
  - [1131, 1211, FCC040607]
  - [1132, 1212, FCC040600]
  - [1133, 1213, FCC040601]
  - [1134, 1214, FCC040602]
  - [1135, 1215, FCC040603]
  - [1292, 1216, FCC050000]
  - [1293, 1217, FCC050001]
  - [1294, 1218, FCC050002]
  - [1295, 1219, FCC050003]
  - [1288, 1220, FCC050004]
  - [1289, 1221, FCC050005]
  - [1290, 1222, FCC050006]
  - [1291, 1223, FCC050007]
  - [1284, 1224, FCC050008]
  - [1285, 1225, FCC050009]
  - [1286, 1226, FCC050010]
  - [1287, 1227, FCC050011]
  - [1280, 1228, FCC050012]
  - [1281, 1229, FCC050013]
  - [1282, 1230, FCC050014]
  - [1283, 1231, FCC050015]
  - [1324, 1232, FCC050200]
  - [1325, 1233, FCC050201]
  - [1326, 1234, FCC050202]
  - [1327, 1235, FCC050203]
  - [1320, 1236, FCC050204]
  - [1321, 1237, FCC050205]
  - [1322, 1238, FCC050206]
  - [1323, 1239, FCC050207]
  - [1316, 1240, FCC050208]
  - [1317, 1241, FCC050209]
  - [1318, 1242, FCC050210]
  - [1319, 1243, FCC050211]
  - [1312, 1244, FCC050212]
  - [1313, 1245, FCC050213]
  - [1314, 1246, FCC050214]
  - [1315, 1247, FCC050215]
  - [1356, 1248, FCC050400]
  - [1357, 1249, FCC050401]
  - [1358, 1250, FCC050402]
  - [1359, 1251, FCC050403]
  - [1352, 1252, FCC050404]
  - [1353, 1253, FCC050405]
  - [1354, 1254, FCC050406]
  - [1355, 1255, FCC050407]
  - [1348, 1256, FCC050408]
  - [1349, 1257, FCC050409]
  - [1350, 1258, FCC050410]
  - [1351, 1259, FCC050411]
  - [1344, 1260, FCC050412]
  - [1345, 1261, FCC050413]
  - [1346, 1262, FCC050414]
  - [1347, 1263, FCC050415]
  - [1388, 1264, FCC050600]
  - [1389, 1265, FCC050601]
  - [1390, 1266, FCC050602]
  - [1391, 1267, FCC050603]
  - [1384, 1268, FCC050604]
  - [1385, 1269, FCC050605]
  - [1386, 1270, FCC050606]
  - [1387, 1271, FCC050607]
  - [1380, 1272, FCC050608]
  - [1381, 1273, FCC050609]
  - [1382, 1274, FCC050610]
  - [1383, 1275, FCC050611]
  - [1376, 1276, FCC050612]
  - [1377, 1277, FCC050613]
  - [1378, 1278, FCC050614]
  - [1379, 1279, FCC050615]
  - [1436, 1280, FCC050900]
  - [1437, 1281, FCC050901]
  - [1438, 1282, FCC050902]
  - [1439, 1283, FCC050903]
  - [1432, 1284, FCC050904]
  - [1433, 1285, FCC050905]
  - [1434, 1286, FCC050906]
  - [1435, 1287, FCC050907]
  - [1428, 1288, FCC050908]
  - [1429, 1289, FCC050909]
  - [1430, 1290, FCC050910]
  - [1431, 1291, FCC050911]
  - [1424, 1292, FCC050912]
  - [1425, 1293, FCC050913]
  - [1426, 1294, FCC050914]
  - [1427, 1295, FCC050915]
  - [1468, 1296, FCC051100]
  - [1469, 1297, FCC051101]
  - [1470, 1298, FCC051102]
  - [1471, 1299, FCC051103]
  - [1464, 1300, FCC051104]
  - [1465, 1301, FCC051105]
  - [1466, 1302, FCC051106]
  - [1467, 1303, FCC051107]
  - [1460, 1304, FCC051108]
  - [1461, 1305, FCC051109]
  - [1462, 1306, FCC051110]
  - [1463, 1307, FCC051111]
  - [1456, 1308, FCC051112]
  - [1457, 1309, FCC051113]
  - [1458, 1310, FCC051114]
  - [1459, 1311, FCC051115]
  - [1500, 1312, FCC051300]
  - [1501, 1313, FCC051301]
  - [1502, 1314, FCC051302]
  - [1503, 1315, FCC051303]
  - [1496, 1316, FCC051304]
  - [1497, 1317, FCC051305]
  - [1498, 1318, FCC051306]
  - [1499, 1319, FCC051307]
  - [1492, 1320, FCC051308]
  - [1493, 1321, FCC051309]
  - [1494, 1322, FCC051310]
  - [1495, 1323, FCC051311]
  - [1488, 1324, FCC051312]
  - [1489, 1325, FCC051313]
  - [1490, 1326, FCC051314]
  - [1491, 1327, FCC051315]
  - [1532, 1328, FCC051500]
  - [1533, 1329, FCC051501]
  - [1534, 1330, FCC051502]
  - [1535, 1331, FCC051503]
  - [1528, 1332, FCC051504]
  - [1529, 1333, FCC051505]
  - [1530, 1334, FCC051506]
  - [1531, 1335, FCC051507]
  - [1524, 1336, FCC051508]
  - [1525, 1337, FCC051509]
  - [1526, 1338, FCC051510]
  - [1527, 1339, FCC051511]
  - [1520, 1340, FCC051512]
  - [1521, 1341, FCC051513]
  - [1522, 1342, FCC051514]
  - [1523, 1343, FCC051515]
  - [1180, 1344, FCC040900]
  - [1181, 1345, FCC040901]
  - [1182, 1346, FCC040902]
  - [1183, 1347, FCC040903]
  - [1176, 1348, FCC040904]
  - [1177, 1349, FCC040905]
  - [1178, 1350, FCC040906]
  - [1179, 1351, FCC040907]
  - [1172, 1352, FCC040908]
  - [1173, 1353, FCC040909]
  - [1174, 1354, FCC040910]
  - [1175, 1355, FCC040911]
  - [1168, 1356, FCC040912]
  - [1169, 1357, FCC040913]
  - [1170, 1358, FCC040914]
  - [1171, 1359, FCC040915]
  - [1212, 1360, FCC041100]
  - [1213, 1361, FCC041101]
  - [1214, 1362, FCC041102]
  - [1215, 1363, FCC041103]
  - [1208, 1364, FCC041104]
  - [1209, 1365, FCC041105]
  - [1210, 1366, FCC041106]
  - [1211, 1367, FCC041107]
  - [1204, 1368, FCC041108]
  - [1205, 1369, FCC041109]
  - [1206, 1370, FCC041110]
  - [1207, 1371, FCC041111]
  - [1200, 1372, FCC041112]
  - [1201, 1373, FCC041113]
  - [1202, 1374, FCC041114]
  - [1203, 1375, FCC041115]
  - [1244, 1376, FCC041300]
  - [1245, 1377, FCC041301]
  - [1246, 1378, FCC041302]
  - [1247, 1379, FCC041303]
  - [1240, 1380, FCC041304]
  - [1241, 1381, FCC041305]
  - [1242, 1382, FCC041306]
  - [1243, 1383, FCC041307]
  - [1236, 1384, FCC041308]
  - [1237, 1385, FCC041309]
  - [1238, 1386, FCC041310]
  - [1239, 1387, FCC041311]
  - [1232, 1388, FCC041312]
  - [1233, 1389, FCC041313]
  - [1234, 1390, FCC041314]
  - [1235, 1391, FCC041315]
  - [1276, 1392, FCC041500]
  - [1277, 1393, FCC041501]
  - [1278, 1394, FCC041502]
  - [1279, 1395, FCC041503]
  - [1272, 1396, FCC041504]
  - [1273, 1397, FCC041505]
  - [1274, 1398, FCC041506]
  - [1275, 1399, FCC041507]
  - [1268, 1400, FCC041508]
  - [1269, 1401, FCC041509]
  - [1270, 1402, FCC041510]
  - [1271, 1403, FCC041511]
  - [1264, 1404, FCC041512]
  - [1265, 1405, FCC041513]
  - [1266, 1406, FCC041514]
  - [1267, 1407, FCC041515]
  - [1052, 1408, FCC040100]
  - [1053, 1409, FCC040101]
  - [1054, 1410, FCC040102]
  - [1055, 1411, FCC040103]
  - [1048, 1412, FCC040104]
  - [1049, 1413, FCC040105]
  - [1050, 1414, FCC040106]
  - [1051, 1415, FCC040107]
  - [1044, 1416, FCC040108]
  - [1045, 1417, FCC040109]
  - [1046, 1418, FCC040110]
  - [1047, 1419, FCC040111]
  - [1040, 1420, FCC040112]
  - [1041, 1421, FCC040113]
  - [1042, 1422, FCC040114]
  - [1043, 1423, FCC040115]
  - [1072, 1424, FCC040312]
  - [1073, 1425, FCC040313]
  - [1074, 1426, FCC040314]
  - [1075, 1427, FCC040315]
  - [1076, 1428, FCC040308]
  - [1077, 1429, FCC040309]
  - [1078, 1430, FCC040310]
  - [1079, 1431, FCC040311]
  - [1080, 1432, FCC040304]
  - [1081, 1433, FCC040305]
  - [1082, 1434, FCC040306]
  - [1083, 1435, FCC040307]
  - [1084, 1436, FCC040300]
  - [1085, 1437, FCC040301]
  - [1086, 1438, FCC040302]
  - [1087, 1439, FCC040303]
  - [1104, 1440, FCC040512]
  - [1105, 1441, FCC040513]
  - [1106, 1442, FCC040514]
  - [1107, 1443, FCC040515]
  - [1108, 1444, FCC040508]
  - [1109, 1445, FCC040509]
  - [1110, 1446, FCC040510]
  - [1111, 1447, FCC040511]
  - [1112, 1448, FCC040504]
  - [1113, 1449, FCC040505]
  - [1114, 1450, FCC040506]
  - [1115, 1451, FCC040507]
  - [1116, 1452, FCC040500]
  - [1117, 1453, FCC040501]
  - [1118, 1454, FCC040502]
  - [1119, 1455, FCC040503]
  - [1136, 1456, FCC040712]
  - [1137, 1457, FCC040713]
  - [1138, 1458, FCC040714]
  - [1139, 1459, FCC040715]
  - [1140, 1460, FCC040708]
  - [1141, 1461, FCC040709]
  - [1142, 1462, FCC040710]
  - [1143, 1463, FCC040711]
  - [1144, 1464, FCC040704]
  - [1145, 1465, FCC040705]
  - [1146, 1466, FCC040706]
  - [1147, 1467, FCC040707]
  - [1148, 1468, FCC040700]
  - [1149, 1469, FCC040701]
  - [1150, 1470, FCC040702]
  - [1151, 1471, FCC040703]
  - [1308, 1472, FCC050100]
  - [1309, 1473, FCC050101]
  - [1310, 1474, FCC050102]
  - [1311, 1475, FCC050103]
  - [1304, 1476, FCC050104]
  - [1305, 1477, FCC050105]
  - [1306, 1478, FCC050106]
  - [1307, 1479, FCC050107]
  - [1300, 1480, FCC050108]
  - [1301, 1481, FCC050109]
  - [1302, 1482, FCC050110]
  - [1303, 1483, FCC050111]
  - [1296, 1484, FCC050112]
  - [1297, 1485, FCC050113]
  - [1298, 1486, FCC050114]
  - [1299, 1487, FCC050115]
  - [1340, 1488, FCC050300]
  - [1341, 1489, FCC050301]
  - [1342, 1490, FCC050302]
  - [1343, 1491, FCC050303]
  - [1336, 1492, FCC050304]
  - [1337, 1493, FCC050305]
  - [1338, 1494, FCC050306]
  - [1339, 1495, FCC050307]
  - [1332, 1496, FCC050308]
  - [1333, 1497, FCC050309]
  - [1334, 1498, FCC050310]
  - [1335, 1499, FCC050311]
  - [1328, 1500, FCC050312]
  - [1329, 1501, FCC050313]
  - [1330, 1502, FCC050314]
  - [1331, 1503, FCC050315]
  - [1372, 1504, FCC050500]
  - [1373, 1505, FCC050501]
  - [1374, 1506, FCC050502]
  - [1375, 1507, FCC050503]
  - [1368, 1508, FCC050504]
  - [1369, 1509, FCC050505]
  - [1370, 1510, FCC050506]
  - [1371, 1511, FCC050507]
  - [1364, 1512, FCC050508]
  - [1365, 1513, FCC050509]
  - [1366, 1514, FCC050510]
  - [1367, 1515, FCC050511]
  - [1360, 1516, FCC050512]
  - [1361, 1517, FCC050513]
  - [1362, 1518, FCC050514]
  - [1363, 1519, FCC050515]
  - [1404, 1520, FCC050700]
  - [1405, 1521, FCC050701]
  - [1406, 1522, FCC050702]
  - [1407, 1523, FCC050703]
  - [1400, 1524, FCC050704]
  - [1401, 1525, FCC050705]
  - [1402, 1526, FCC050706]
  - [1403, 1527, FCC050707]
  - [1396, 1528, FCC050708]
  - [1397, 1529, FCC050709]
  - [1398, 1530, FCC050710]
  - [1399, 1531, FCC050711]
  - [1392, 1532, FCC050712]
  - [1393, 1533, FCC050713]
  - [1394, 1534, FCC050714]
  - [1395, 1535, FCC050715]
  - [1632, 1536, FCC060612]
  - [1633, 1537, FCC060613]
  - [1634, 1538, FCC060614]
  - [1635, 1539, FCC060615]
  - [1636, 1540, FCC060608]
  - [1637, 1541, FCC060609]
  - [1638, 1542, FCC060610]
  - [1639, 1543, FCC060611]
  - [1640, 1544, FCC060604]
  - [1641, 1545, FCC060605]
  - [1642, 1546, FCC060606]
  - [1643, 1547, FCC060607]
  - [1644, 1548, FCC060600]
  - [1645, 1549, FCC060601]
  - [1646, 1550, FCC060602]
  - [1647, 1551, FCC060603]
  - [1600, 1552, FCC060412]
  - [1601, 1553, FCC060413]
  - [1602, 1554, FCC060414]
  - [1603, 1555, FCC060415]
  - [1604, 1556, FCC060408]
  - [1605, 1557, FCC060409]
  - [1606, 1558, FCC060410]
  - [1607, 1559, FCC060411]
  - [1608, 1560, FCC060404]
  - [1609, 1561, FCC060405]
  - [1610, 1562, FCC060406]
  - [1611, 1563, FCC060407]
  - [1612, 1564, FCC060400]
  - [1613, 1565, FCC060401]
  - [1614, 1566, FCC060402]
  - [1615, 1567, FCC060403]
  - [1568, 1568, FCC060212]
  - [1569, 1569, FCC060213]
  - [1570, 1570, FCC060214]
  - [1571, 1571, FCC060215]
  - [1572, 1572, FCC060208]
  - [1573, 1573, FCC060209]
  - [1574, 1574, FCC060210]
  - [1575, 1575, FCC060211]
  - [1576, 1576, FCC060204]
  - [1577, 1577, FCC060205]
  - [1578, 1578, FCC060206]
  - [1579, 1579, FCC060207]
  - [1580, 1580, FCC060200]
  - [1581, 1581, FCC060201]
  - [1582, 1582, FCC060202]
  - [1583, 1583, FCC060203]
  - [1536, 1584, FCC060012]
  - [1537, 1585, FCC060013]
  - [1538, 1586, FCC060014]
  - [1539, 1587, FCC060015]
  - [1540, 1588, FCC060008]
  - [1541, 1589, FCC060009]
  - [1542, 1590, FCC060010]
  - [1543, 1591, FCC060011]
  - [1544, 1592, FCC060004]
  - [1545, 1593, FCC060005]
  - [1546, 1594, FCC060006]
  - [1547, 1595, FCC060007]
  - [1548, 1596, FCC060000]
  - [1549, 1597, FCC060001]
  - [1550, 1598, FCC060002]
  - [1551, 1599, FCC060003]
  - [1888, 1600, FCC070612]
  - [1889, 1601, FCC070613]
  - [1890, 1602, FCC070614]
  - [1891, 1603, FCC070615]
  - [1892, 1604, FCC070608]
  - [1893, 1605, FCC070609]
  - [1894, 1606, FCC070610]
  - [1895, 1607, FCC070611]
  - [1896, 1608, FCC070604]
  - [1897, 1609, FCC070605]
  - [1898, 1610, FCC070606]
  - [1899, 1611, FCC070607]
  - [1900, 1612, FCC070600]
  - [1901, 1613, FCC070601]
  - [1902, 1614, FCC070602]
  - [1903, 1615, FCC070603]
  - [1856, 1616, FCC070412]
  - [1857, 1617, FCC070413]
  - [1858, 1618, FCC070414]
  - [1859, 1619, FCC070415]
  - [1860, 1620, FCC070408]
  - [1861, 1621, FCC070409]
  - [1862, 1622, FCC070410]
  - [1863, 1623, FCC070411]
  - [1864, 1624, FCC070404]
  - [1865, 1625, FCC070405]
  - [1866, 1626, FCC070406]
  - [1867, 1627, FCC070407]
  - [1868, 1628, FCC070400]
  - [1869, 1629, FCC070401]
  - [1870, 1630, FCC070402]
  - [1871, 1631, FCC070403]
  - [1824, 1632, FCC070212]
  - [1825, 1633, FCC070213]
  - [1826, 1634, FCC070214]
  - [1827, 1635, FCC070215]
  - [1828, 1636, FCC070208]
  - [1829, 1637, FCC070209]
  - [1830, 1638, FCC070210]
  - [1831, 1639, FCC070211]
  - [1832, 1640, FCC070204]
  - [1833, 1641, FCC070205]
  - [1834, 1642, FCC070206]
  - [1835, 1643, FCC070207]
  - [1836, 1644, FCC070200]
  - [1837, 1645, FCC070201]
  - [1838, 1646, FCC070202]
  - [1839, 1647, FCC070203]
  - [1792, 1648, FCC070012]
  - [1793, 1649, FCC070013]
  - [1794, 1650, FCC070014]
  - [1795, 1651, FCC070015]
  - [1796, 1652, FCC070008]
  - [1797, 1653, FCC070009]
  - [1798, 1654, FCC070010]
  - [1799, 1655, FCC070011]
  - [1800, 1656, FCC070004]
  - [1801, 1657, FCC070005]
  - [1802, 1658, FCC070006]
  - [1803, 1659, FCC070007]
  - [1804, 1660, FCC070000]
  - [1805, 1661, FCC070001]
  - [1806, 1662, FCC070002]
  - [1807, 1663, FCC070003]
  - [1760, 1664, FCC061412]
  - [1761, 1665, FCC061413]
  - [1762, 1666, FCC061414]
  - [1763, 1667, FCC061415]
  - [1764, 1668, FCC061408]
  - [1765, 1669, FCC061409]
  - [1766, 1670, FCC061410]
  - [1767, 1671, FCC061411]
  - [1768, 1672, FCC061404]
  - [1769, 1673, FCC061405]
  - [1770, 1674, FCC061406]
  - [1771, 1675, FCC061407]
  - [1772, 1676, FCC061400]
  - [1773, 1677, FCC061401]
  - [1774, 1678, FCC061402]
  - [1775, 1679, FCC061403]
  - [1728, 1680, FCC061212]
  - [1729, 1681, FCC061213]
  - [1730, 1682, FCC061214]
  - [1731, 1683, FCC061215]
  - [1732, 1684, FCC061208]
  - [1733, 1685, FCC061209]
  - [1734, 1686, FCC061210]
  - [1735, 1687, FCC061211]
  - [1736, 1688, FCC061204]
  - [1737, 1689, FCC061205]
  - [1738, 1690, FCC061206]
  - [1739, 1691, FCC061207]
  - [1740, 1692, FCC061200]
  - [1741, 1693, FCC061201]
  - [1742, 1694, FCC061202]
  - [1743, 1695, FCC061203]
  - [1696, 1696, FCC061012]
  - [1697, 1697, FCC061013]
  - [1698, 1698, FCC061014]
  - [1699, 1699, FCC061015]
  - [1700, 1700, FCC061008]
  - [1701, 1701, FCC061009]
  - [1702, 1702, FCC061010]
  - [1703, 1703, FCC061011]
  - [1704, 1704, FCC061004]
  - [1705, 1705, FCC061005]
  - [1706, 1706, FCC061006]
  - [1707, 1707, FCC061007]
  - [1708, 1708, FCC061000]
  - [1709, 1709, FCC061001]
  - [1710, 1710, FCC061002]
  - [1711, 1711, FCC061003]
  - [1664, 1712, FCC060812]
  - [1665, 1713, FCC060813]
  - [1666, 1714, FCC060814]
  - [1667, 1715, FCC060815]
  - [1668, 1716, FCC060808]
  - [1669, 1717, FCC060809]
  - [1670, 1718, FCC060810]
  - [1671, 1719, FCC060811]
  - [1672, 1720, FCC060804]
  - [1673, 1721, FCC060805]
  - [1674, 1722, FCC060806]
  - [1675, 1723, FCC060807]
  - [1676, 1724, FCC060800]
  - [1677, 1725, FCC060801]
  - [1678, 1726, FCC060802]
  - [1679, 1727, FCC060803]
  - [2016, 1728, FCC071412]
  - [2017, 1729, FCC071413]
  - [2018, 1730, FCC071414]
  - [2019, 1731, FCC071415]
  - [2020, 1732, FCC071408]
  - [2021, 1733, FCC071409]
  - [2022, 1734, FCC071410]
  - [2023, 1735, FCC071411]
  - [2024, 1736, FCC071404]
  - [2025, 1737, FCC071405]
  - [2026, 1738, FCC071406]
  - [2027, 1739, FCC071407]
  - [2028, 1740, FCC071400]
  - [2029, 1741, FCC071401]
  - [2030, 1742, FCC071402]
  - [2031, 1743, FCC071403]
  - [1984, 1744, FCC071212]
  - [1985, 1745, FCC071213]
  - [1986, 1746, FCC071214]
  - [1987, 1747, FCC071215]
  - [1988, 1748, FCC071208]
  - [1989, 1749, FCC071209]
  - [1990, 1750, FCC071210]
  - [1991, 1751, FCC071211]
  - [1992, 1752, FCC071204]
  - [1993, 1753, FCC071205]
  - [1994, 1754, FCC071206]
  - [1995, 1755, FCC071207]
  - [1996, 1756, FCC071200]
  - [1997, 1757, FCC071201]
  - [1998, 1758, FCC071202]
  - [1999, 1759, FCC071203]
  - [1952, 1760, FCC071012]
  - [1953, 1761, FCC071013]
  - [1954, 1762, FCC071014]
  - [1955, 1763, FCC071015]
  - [1956, 1764, FCC071008]
  - [1957, 1765, FCC071009]
  - [1958, 1766, FCC071010]
  - [1959, 1767, FCC071011]
  - [1960, 1768, FCC071004]
  - [1961, 1769, FCC071005]
  - [1962, 1770, FCC071006]
  - [1963, 1771, FCC071007]
  - [1964, 1772, FCC071000]
  - [1965, 1773, FCC071001]
  - [1966, 1774, FCC071002]
  - [1967, 1775, FCC071003]
  - [1920, 1776, FCC070812]
  - [1921, 1777, FCC070813]
  - [1922, 1778, FCC070814]
  - [1923, 1779, FCC070815]
  - [1924, 1780, FCC070808]
  - [1925, 1781, FCC070809]
  - [1926, 1782, FCC070810]
  - [1927, 1783, FCC070811]
  - [1928, 1784, FCC070804]
  - [1929, 1785, FCC070805]
  - [1930, 1786, FCC070806]
  - [1931, 1787, FCC070807]
  - [1932, 1788, FCC070800]
  - [1933, 1789, FCC070801]
  - [1934, 1790, FCC070802]
  - [1935, 1791, FCC070803]
  - [1648, 1792, FCC060712]
  - [1649, 1793, FCC060713]
  - [1650, 1794, FCC060714]
  - [1651, 1795, FCC060715]
  - [1652, 1796, FCC060708]
  - [1653, 1797, FCC060709]
  - [1654, 1798, FCC060710]
  - [1655, 1799, FCC060711]
  - [1656, 1800, FCC060704]
  - [1657, 1801, FCC060705]
  - [1658, 1802, FCC060706]
  - [1659, 1803, FCC060707]
  - [1660, 1804, FCC060700]
  - [1661, 1805, FCC060701]
  - [1662, 1806, FCC060702]
  - [1663, 1807, FCC060703]
  - [1616, 1808, FCC060512]
  - [1617, 1809, FCC060513]
  - [1618, 1810, FCC060514]
  - [1619, 1811, FCC060515]
  - [1620, 1812, FCC060508]
  - [1621, 1813, FCC060509]
  - [1622, 1814, FCC060510]
  - [1623, 1815, FCC060511]
  - [1624, 1816, FCC060504]
  - [1625, 1817, FCC060505]
  - [1626, 1818, FCC060506]
  - [1627, 1819, FCC060507]
  - [1628, 1820, FCC060500]
  - [1629, 1821, FCC060501]
  - [1630, 1822, FCC060502]
  - [1631, 1823, FCC060503]
  - [1584, 1824, FCC060312]
  - [1585, 1825, FCC060313]
  - [1586, 1826, FCC060314]
  - [1587, 1827, FCC060315]
  - [1588, 1828, FCC060308]
  - [1589, 1829, FCC060309]
  - [1590, 1830, FCC060310]
  - [1591, 1831, FCC060311]
  - [1592, 1832, FCC060304]
  - [1593, 1833, FCC060305]
  - [1594, 1834, FCC060306]
  - [1595, 1835, FCC060307]
  - [1596, 1836, FCC060300]
  - [1597, 1837, FCC060301]
  - [1598, 1838, FCC060302]
  - [1599, 1839, FCC060303]
  - [1552, 1840, FCC060112]
  - [1553, 1841, FCC060113]
  - [1554, 1842, FCC060114]
  - [1555, 1843, FCC060115]
  - [1556, 1844, FCC060108]
  - [1557, 1845, FCC060109]
  - [1558, 1846, FCC060110]
  - [1559, 1847, FCC060111]
  - [1560, 1848, FCC060104]
  - [1561, 1849, FCC060105]
  - [1562, 1850, FCC060106]
  - [1563, 1851, FCC060107]
  - [1564, 1852, FCC060100]
  - [1565, 1853, FCC060101]
  - [1566, 1854, FCC060102]
  - [1567, 1855, FCC060103]
  - [1904, 1856, FCC070712]
  - [1905, 1857, FCC070713]
  - [1906, 1858, FCC070714]
  - [1907, 1859, FCC070715]
  - [1908, 1860, FCC070708]
  - [1909, 1861, FCC070709]
  - [1910, 1862, FCC070710]
  - [1911, 1863, FCC070711]
  - [1912, 1864, FCC070704]
  - [1913, 1865, FCC070705]
  - [1914, 1866, FCC070706]
  - [1915, 1867, FCC070707]
  - [1916, 1868, FCC070700]
  - [1917, 1869, FCC070701]
  - [1918, 1870, FCC070702]
  - [1919, 1871, FCC070703]
  - [1872, 1872, FCC070512]
  - [1873, 1873, FCC070513]
  - [1874, 1874, FCC070514]
  - [1875, 1875, FCC070515]
  - [1876, 1876, FCC070508]
  - [1877, 1877, FCC070509]
  - [1878, 1878, FCC070510]
  - [1879, 1879, FCC070511]
  - [1880, 1880, FCC070504]
  - [1881, 1881, FCC070505]
  - [1882, 1882, FCC070506]
  - [1883, 1883, FCC070507]
  - [1884, 1884, FCC070500]
  - [1885, 1885, FCC070501]
  - [1886, 1886, FCC070502]
  - [1887, 1887, FCC070503]
  - [1840, 1888, FCC070312]
  - [1841, 1889, FCC070313]
  - [1842, 1890, FCC070314]
  - [1843, 1891, FCC070315]
  - [1844, 1892, FCC070308]
  - [1845, 1893, FCC070309]
  - [1846, 1894, FCC070310]
  - [1847, 1895, FCC070311]
  - [1848, 1896, FCC070304]
  - [1849, 1897, FCC070305]
  - [1850, 1898, FCC070306]
  - [1851, 1899, FCC070307]
  - [1852, 1900, FCC070300]
  - [1853, 1901, FCC070301]
  - [1854, 1902, FCC070302]
  - [1855, 1903, FCC070303]
  - [1808, 1904, FCC070112]
  - [1809, 1905, FCC070113]
  - [1810, 1906, FCC070114]
  - [1811, 1907, FCC070115]
  - [1812, 1908, FCC070108]
  - [1813, 1909, FCC070109]
  - [1815, 1910, FCC070111]
  - [1814, 1911, FCC070110]
  - [1816, 1912, FCC070104]
  - [1817, 1913, FCC070105]
  - [1818, 1914, FCC070106]
  - [1819, 1915, FCC070107]
  - [1820, 1916, FCC070100]
  - [1821, 1917, FCC070101]
  - [1822, 1918, FCC070102]
  - [1823, 1919, FCC070103]
  - [1776, 1920, FCC061512]
  - [1777, 1921, FCC061513]
  - [1778, 1922, FCC061514]
  - [1779, 1923, FCC061515]
  - [1780, 1924, FCC061508]
  - [1781, 1925, FCC061509]
  - [1782, 1926, FCC061510]
  - [1783, 1927, FCC061511]
  - [1784, 1928, FCC061504]
  - [1785, 1929, FCC061505]
  - [1786, 1930, FCC061506]
  - [1787, 1931, FCC061507]
  - [1788, 1932, FCC061500]
  - [1789, 1933, FCC061501]
  - [1790, 1934, FCC061502]
  - [1791, 1935, FCC061503]
  - [1744, 1936, FCC061312]
  - [1745, 1937, FCC061313]
  - [1746, 1938, FCC061314]
  - [1747, 1939, FCC061315]
  - [1748, 1940, FCC061308]
  - [1749, 1941, FCC061309]
  - [1750, 1942, FCC061310]
  - [1751, 1943, FCC061311]
  - [1752, 1944, FCC061304]
  - [1753, 1945, FCC061305]
  - [1754, 1946, FCC061306]
  - [1755, 1947, FCC061307]
  - [1756, 1948, FCC061300]
  - [1757, 1949, FCC061301]
  - [1759, 1950, FCC061303]
  - [1758, 1951, FCC061302]
  - [1712, 1952, FCC061112]
  - [1713, 1953, FCC061113]
  - [1714, 1954, FCC061114]
  - [1715, 1955, FCC061115]
  - [1716, 1956, FCC061108]
  - [1717, 1957, FCC061109]
  - [1718, 1958, FCC061110]
  - [1719, 1959, FCC061111]
  - [1720, 1960, FCC061104]
  - [1721, 1961, FCC061105]
  - [1722, 1962, FCC061106]
  - [1723, 1963, FCC061107]
  - [1724, 1964, FCC061100]
  - [1725, 1965, FCC061101]
  - [1726, 1966, FCC061102]
  - [1727, 1967, FCC061103]
  - [1680, 1968, FCC060912]
  - [1681, 1969, FCC060913]
  - [1682, 1970, FCC060914]
  - [1683, 1971, FCC060915]
  - [1684, 1972, FCC060908]
  - [1685, 1973, FCC060909]
  - [1686, 1974, FCC060910]
  - [1687, 1975, FCC060911]
  - [1688, 1976, FCC060904]
  - [1689, 1977, FCC060905]
  - [1690, 1978, FCC060906]
  - [1691, 1979, FCC060907]
  - [1692, 1980, FCC060900]
  - [1693, 1981, FCC060901]
  - [1694, 1982, FCC060902]
  - [1695, 1983, FCC060903]
  - [2032, 1984, FCC071512]
  - [2033, 1985, FCC071513]
  - [2034, 1986, FCC071514]
  - [2035, 1987, FCC071515]
  - [2036, 1988, FCC071508]
  - [2037, 1989, FCC071509]
  - [2038, 1990, FCC071510]
  - [2039, 1991, FCC071511]
  - [2040, 1992, FCC071504]
  - [2041, 1993, FCC071505]
  - [2042, 1994, FCC071506]
  - [2043, 1995, FCC071507]
  - [2044, 1996, FCC071500]
  - [2045, 1997, FCC071501]
  - [2046, 1998, FCC071502]
  - [2047, 1999, FCC071503]
  - [2000, 2000, FCC071312]
  - [2001, 2001, FCC071313]
  - [2002, 2002, FCC071314]
  - [2003, 2003, FCC071315]
  - [2004, 2004, FCC071308]
  - [2005, 2005, FCC071309]
  - [2006, 2006, FCC071310]
  - [2007, 2007, FCC071311]
  - [2008, 2008, FCC071304]
  - [2009, 2009, FCC071305]
  - [2010, 2010, FCC071306]
  - [2011, 2011, FCC071307]
  - [2012, 2012, FCC071300]
  - [2013, 2013, FCC071301]
  - [2014, 2014, FCC071302]
  - [2015, 2015, FCC071303]
  - [1968, 2016, FCC071112]
  - [1969, 2017, FCC071113]
  - [1970, 2018, FCC071114]
  - [1971, 2019, FCC071115]
  - [1972, 2020, FCC071108]
  - [1973, 2021, FCC071109]
  - [1974, 2022, FCC071110]
  - [1975, 2023, FCC071111]
  - [1976, 2024, FCC071104]
  - [1977, 2025, FCC071105]
  - [1978, 2026, FCC071106]
  - [1979, 2027, FCC071107]
  - [1980, 2028, FCC071100]
  - [1981, 2029, FCC071101]
  - [1982, 2030, FCC071102]
  - [1983, 2031, FCC071103]
  - [1936, 2032, FCC070912]
  - [1937, 2033, FCC070913]
  - [1938, 2034, FCC070914]
  - [1939, 2035, FCC070915]
  - [1940, 2036, FCC070908]
  - [1941, 2037, FCC070909]
  - [1942, 2038, FCC070910]
  - [1943, 2039, FCC070911]
  - [1944, 2040, FCC070904]
  - [1945, 2041, FCC070905]
  - [1946, 2042, FCC070906]
  - [1947, 2043, FCC070907]
  - [1948, 2044, FCC070900]
  - [1949, 2045, FCC070901]
  - [1950, 2046, FCC070902]
  - [1951, 2047, FCC070903]

# Aaron B. Pearlman: Feed positions used in the offline beamformer.
# Output from ch_util.get_correlator_inputs().
# This is the correlator configuration, as queried on 2024-09-13.
# These feed positions correspond to chan_ids [0-255], [512-767], [1024-1279], [1536-1791].
# These chan_ids correspond P1: N-S for each cylinder.
# Disconnected & non-CHIMEAntenna P1 inputs have a feed_position set to [0.0, 0.0].

# WARNING: For safety, ensure the gains of any inputs that should not be used for
# beamforming are set to zero in the binary, re-ordered gain conversion pipeline.
feed_positions:
  [[-33.04813181029521018672, -38.82107710831004254715],
   [-33.04775410717910943958, -38.51627734233186117763],
   [-33.04737640406300869245, -38.21147757635367980811],
   [-33.04699870094690794531, -37.90667781037549133316],
   [-33.04662099783080719817, -37.60187804439730996364],
   [-33.04624329471470645103, -37.29707827841912148870],
   [-33.04586559159860570389, -36.99227851244094011918],
   [-33.04548788848250495676, -36.68747874646275164423],
   [-33.04511018536640420962, -36.38267898048457027471],
   [-33.04473248225031056791, -36.07787921450638179977],
   [-33.04435477913420982077, -35.77307944852820043025],
   [-33.04397707601810907363, -35.46827968255001195530],
   [-33.04359937290200832649, -35.16347991657183058578],
   [-33.04322166978590757935, -34.85868015059364211083],
   [-33.04284396666980683221, -34.55388038461546074132],
   [-33.04246626355370608508, -34.24908061863727226637],
   [-33.04208856043760533794, -33.94428085265909089685],
   [-33.04171085732150459080, -33.63948108668090242190],
   [-33.04133315420540384366, -33.33468132070272105238],
   [-33.04095545108930309652, -33.02988155472453257744],
   [-33.04057774797320234939, -32.72508178874635120792],
   [-33.04020004485710160225, -32.42028202276816273297],
   [-33.03982234174100085511, -32.11548225678998136345],
   [-33.03944463862490721340, -31.81068249081179644122],
   [-33.03906693550880646626, -31.50588272483361507170],
   [-33.03868923239270571912, -31.20108295885543014947],
   [-33.03831152927660497198, -30.89628319287724522724],
   [-33.03793382616050422484, -30.59148342689906030500],
   [-33.03755612304440347771, -30.28668366092087538277],
   [-33.03717841992830273057, -29.98188389494269046054],
   [-33.03680071681220198343, -29.67708412896450553831],
   [-33.03642301369610123629, -29.37228436298632061607],
   [0.0, 0.0],  # NoiseSource(id=32, crate=0, slot=12, sma=12, corr_order=192, delay=0, input_sn='FCC001212', corr='FCC')
   [-33.03566760746389974202, -28.76268483102995077161],
   [-33.03528990434779899488, -28.45788506505176584938],
   [-33.03491220123169824774, -28.15308529907358092714],
   [-33.03453449811559750060, -27.84828553309539955762],
   [-33.03415679499950385889, -27.54348576711721463539],
   [-33.03377909188340311175, -27.23868600113902971316],
   [-33.03340138876730236461, -26.93388623516084479093],
   [-33.03302368565120161747, -26.62908646918266342141],
   [-33.03264598253510087034, -26.32428670320447849917],
   [-33.03226827941900012320, -26.01948693722629357694],
   [-33.03189057630289937606, -25.71468717124810865471],
   [-33.03151287318679862892, -25.40988740526992373248],
   [-33.03113517007069788178, -25.10508763929173881024],
   [0.0, 0.0],  # NoiseSource(id=46, crate=0, slot=12, sma=2, corr_order=206, delay=0, input_sn='FCC001202', corr='FCC')
   [-33.03037976383849638751, -24.49548810733536896578],
   [-33.03000206072239564037, -24.19068834135718404355],
   [-33.02962435760629489323, -23.88588857537899912131],
   [-33.02924665449019414609, -23.58108880940081419908],
   [-33.02886895137410050438, -23.27628904342262927685],
   [-33.02849124825799975724, -22.97148927744444435461],
   [-33.02811354514189901010, -22.66668951146625943238],
   [-33.02773584202579826297, -22.36188974548807451015],
   [-33.02735813890969751583, -22.05708997950988958792],
   [-33.02698043579359676869, -21.75229021353170466568],
   [-33.02660273267749602155, -21.44749044755351974345],
   [-33.02622502956139527441, -21.14269068157533482122],
   [-33.02584732644529452728, -20.83789091559715345170],
   [-33.02546962332919378014, -20.53309114961897208218],
   [-33.02509192021309303300, -20.22829138364078715995],
   [-33.02471421709699228586, -19.92349161766260223771],
   [-33.02433651398089153872, -19.61869185168441731548],
   [-33.02395881086479079158, -19.31389208570623239325],
   [-33.02358110774869714987, -19.00909231972804747102],
   [-33.02320340463259640273, -18.70429255374986254878],
   [-33.02282570151649565560, -18.39949278777167762655],
   [-33.02244799840039490846, -18.09469302179349270432],
   [-33.02207029528429416132, -17.78989325581530778209],
   [-33.02169259216819341418, -17.48509348983712285985],
   [-33.02131488905209266704, -17.18029372385893793762],
   [-33.02093718593599191991, -16.87549395788075301539],
   [-33.02055948281989117277, -16.57069419190256809316],
   [-33.02018177970379042563, -16.26589442592438317092],
   [-33.01980407658768967849, -15.96109465994619824869],
   [-33.01942637347158893135, -15.65629489396801687917],
   [-33.01904867035548818421, -15.35149512798983195694],
   [-33.01867096723938743708, -15.04669536201164703471],
   [-33.01829326412329379536, -14.74189559603346211247],
   [-33.01791556100719304823, -14.43709583005527719024],
   [-33.01753785789109230109, -14.13229606407709226801],
   [-33.01716015477499155395, -13.82749629809890734577],
   [-33.01678245165889080681, -13.52269653212072242354],
   [-33.01640474854279005967, -13.21789676614253927767],
   [-33.01602704542668931254, -12.91309700016435435543],
   [-33.01564934231058856540, -12.60829723418616943320],
   [-33.01527163919448781826, -12.30349746820798451097],
   [-33.01489393607838707112, -11.99869770222980136509],
   [-33.01451623296228632398, -11.69389793625161644286],
   [-33.01413852984618557684, -11.38909817027343152063],
   [-33.01376082673008482971, -11.08429840429524659839],
   [-33.01338312361398408257, -10.77949863831706345252],
   [-33.01300542049789044086, -10.47469887233887853029],
   [-33.01262771738178969372, -10.16989910636069360805],
   [-33.01225001426568894658, -9.86509934038250868582],
   [-33.01187231114958819944, -9.56029957440432376359],
   [-33.01149460803348745230, -9.25549980842613884136],
   [-33.01111690491738670516, -8.95070004244795391912],
   [-33.01073920180128595803, -8.64590027646977077325],
   [-33.01036149868518521089, -8.34110051049158585101],
   [-33.00998379556908446375, -8.03630074451340092878],
   [-33.00960609245298371661, -7.73150097853521689473],
   [-33.00922838933688296947, -7.42670121255703197249],
   [-33.00885068622078222234, -7.12190144657884705026],
   [-33.00847298310468147520, -6.81710168060066212803],
   [-33.00809527998858072806, -6.51230191462247720580],
   [-33.00771757687248708635, -6.20750214864429228356],
   [-33.00733987375638633921, -5.90270238266610913769],
   [-33.00696217064028559207, -5.59790261668792421546],
   [-33.00658446752418484493, -5.29310285070973929322],
   [-33.00620676440808409779, -4.98830308473155437099],
   [-33.00582906129198335066, -4.68350331875337033694],
   [-33.00545135817588260352, -4.37870355277518541470],
   [-33.00507365505978185638, -4.07390378679700138065],
   [-33.00469595194368110924, -3.76910402081881645842],
   [-33.00431824882758036210, -3.46430425484063242436],
   [-33.00394054571147961497, -3.15950448886244750213],
   [-33.00356284259537886783, -2.85470472288426302399],
   [-33.00318513947927812069, -2.54990495690607810175],
   [-33.00280743636317737355, -2.24510519092789362361],
   [-33.00242973324708373184, -1.94030542494970936751],
   [-33.00205203013098298470, -1.63550565897152466732],
   [-33.00167432701488223756, -1.33070589299334018918],
   [-33.00129662389878149042, -1.02590612701515593308],
   [-33.00091892078268074329, -0.72110636103697112187],
   [-33.00054121766657999615, -0.41630659505878653270],
   [-33.00016351455047924901, -0.11150682908060184639],
   [-32.99978581143437850187, 0.19329293689758270114],
   [-32.99940810831827775473, 0.49809270287576734582],
   [-32.99903040520217700760, 0.80289246885395193498],
   [-32.99865270208607626046, 1.10769223483213674619],
   [-32.99827499896997551332, 1.41249200081032100229],
   [-32.99789729585387476618, 1.71729176678850548043],
   [-32.99751959273777401904, 2.02209153276669040267],
   [-32.99714188962168037733, 2.32689129874487488081],
   [-32.99676418650557963019, 2.63169106472305935895],
   [-32.99638648338947888305, 2.93649083070124428119],
   [-32.99600878027337813592, 3.24129059667942875933],
   [-32.99563107715727738878, 3.54609036265761368156],
   [-32.99525337404117664164, 3.85089012863579771562],
   [-32.99487567092507589450, 4.15568989461398263785],
   [0.0, 0.0],  # NoiseSource(id=142, crate=1, slot=0, sma=14, corr_order=258, delay=0, input_sn='FCC010014', corr='FCC')
   [-32.99412026469287440023, 4.76528942657035159414],
   [-32.99374256157677365309, 5.07008919254853562819],
   [-32.99336485846067290595, 5.37488895852672055042],
   [-32.99298715534457215881, 5.67968872450490547266],
   [-32.99260945222847141167, 5.98448849048309039489],
   [-32.99223174911237066453, 6.28928825646127354076],
   [-32.99185404599627702282, 6.59408802243945846300],
   [-32.99147634288017627568, 6.89888778841764338523],
   [-32.99109863976407552855, 7.20368755439582830746],
   [-32.99072093664797478141, 7.50848732037401322970],
   [-32.99034323353187403427, 7.81328708635219815193],
   [-32.98996553041577328713, 8.11808685233038218598],
   [-32.98958782729967253999, 8.42288661830856710822],
   [-32.98921012418357179286, 8.72768638428675203045],
   [-32.98883242106747104572, 9.03248615026493517632],
   [-32.98845471795137029858, 9.33728591624312009856],
   [-32.98807701483526955144, 9.64208568222130502079],
   [-32.98769931171916880430, 9.94688544819948994302],
   [-32.98732160860306805716, 10.25168521417767486525],
   [-32.98694390548696731003, 10.55648498015585978749],
   [-32.98656620237087366831, 10.86128474613404470972],
   [-32.98618849925477292118, 11.16608451211222785560],
   [-32.98581079613867217404, 11.47088427809041277783],
   [-32.98543309302257142690, 11.77568404406859770006],
   [-32.98505538990647067976, 12.08048381004678262229],
   [-32.98467768679036993262, 12.38528357602496576817],
   [-32.98429998367426918549, 12.69008334200315069040],
   [-32.98392228055816843835, 12.99488310798133561264],
   [-32.98354457744206769121, 13.29968287395952053487],
   [-32.98316687432596694407, 13.60448263993770368074],
   [-32.98278917120986619693, 13.90928240591588860298],
   [-32.98241146809376544979, 14.21408217189407352521],
   [-32.98203376497766470266, 14.51888193787225844744],
   [-32.98165606186156395552, 14.82368170385044336967],
   [-32.98127835874547031381, 15.12848146982862829191],
   [-32.98090065562936956667, 15.43328123580681321414],
   [-32.98052295251326881953, 15.73808100178499813637],
   [-32.98014524939716807239, 16.04288076776317950589],
   [-32.97976754628106732525, 16.34768053374136442812],
   [-32.97938984316496657812, 16.65248029971954935036],
   [-32.97901214004886583098, 16.95728006569773427259],
   [-32.97863443693276508384, 17.26207983167591919482],
   [-32.97825673381666433670, 17.56687959765410411705],
   [-32.97787903070056358956, 17.87167936363228903929],
   [-32.97750132758446284242, 18.17647912961047396152],
   [-32.97712362446836209529, 18.48127889558865888375],
   [-32.97674592135226134815, 18.78607866156684380599],
   [-32.97636821823616060101, 19.09087842754502872822],
   [-32.97599051512006695930, 19.39567819352321365045],
   [-32.97561281200396621216, 19.70047795950139857268],
   [-32.97523510888786546502, 20.00527772547958349492],
   [-32.97485740577176471788, 20.31007749145776841715],
   [-32.97447970265566397075, 20.61487725743595333938],
   [-32.97410199953956322361, 20.91967702341413470890],
   [-32.97372429642346247647, 21.22447678939231607842],
   [-32.97334659330736172933, 21.52927655537050100065],
   [-32.97296889019126098219, 21.83407632134868592289],
   [-32.97259118707516023505, 22.13887608732687084512],
   [-32.97221348395905948792, 22.44367585330505576735],
   [-32.97183578084295874078, 22.74847561928324068958],
   [-32.97145807772685799364, 23.05327538526142561182],
   [-32.97108037461075724650, 23.35807515123961053405],
   [-32.97070267149466360479, 23.66287491721779545628],
   [-32.97032496837856285765, 23.96767468319598037851],
   [-32.96994726526246211051, 24.27247444917416530075],
   [-32.96956956214636136338, 24.57727421515235022298],
   [-32.96919185903026061624, 24.88207398113053514521],
   [-32.96881415591415986910, 25.18687374710872006744],
   [-32.96843645279805912196, 25.49167351308690498968],
   [-32.96805874968195837482, 25.79647327906508991191],
   [-32.96768104656585762768, 26.10127304504327483414],
   [-32.96730334344975688055, 26.40607281102145975638],
   [-32.96692564033365613341, 26.71087257699964467861],
   [-32.96654793721755538627, 27.01567234297782604813],
   [-32.96617023410145463913, 27.32047210895601097036],
   [-32.96579253098535389199, 27.62527187493419589259],
   [-32.96541482786926025028, 27.93007164091238081483],
   [-32.96503712475315950314, 28.23487140689056218434],
   [-32.96465942163705875600, 28.53967117286874710658],
   [-32.96428171852095800887, 28.84447093884693202881],
   [-32.96390401540485726173, 29.14927070482511695104],
   [-32.96352631228875651459, 29.45407047080330187327],
   [-32.96314860917265576745, 29.75887023678148679551],
   [-32.96277090605655502031, 30.06367000275967171774],
   [-32.96239320294045427318, 30.36846976873785663997],
   [-32.96201549982435352604, 30.67326953471604156221],
   [-32.96163779670825277890, 30.97806930069422648444],
   [-32.96126009359215203176, 31.28286906667241140667],
   [-32.96088239047605128462, 31.58766883265059632890],
   [-32.96050468735995053748, 31.89246859862877769842],
   [-32.96012698424385689577, 32.19726836460696262066],
   [-32.95974928112775614863, 32.50206813058514399017],
   [-32.95937157801165540150, 32.80686789656333246512],
   [-32.95899387489555465436, 33.11166766254151383464],
   [-32.95861617177945390722, 33.41646742851970230959],
   [-32.95823846866335316008, 33.72126719449788367911],
   [-32.95786076554725241294, 34.02606696047607215405],
   [-32.95748306243115166581, 34.33086672645425352357],
   [-32.95710535931505091867, 34.63566649243244199852],
   [-32.95672765619895017153, 34.94046625841062336804],
   [-32.95634995308284942439, 35.24526602438881184298],
   [-32.95597224996674867725, 35.55006579036699321250],
   [-32.95559454685064793011, 35.85486555634518168745],
   [-32.95521684373454718298, 36.15966532232336305697],
   [-32.95483914061845354126, 36.46446508830155153191],
   [-32.95446143750235279413, 36.76926485427973290143],
   [-32.95408373438625204699, 37.07406462025792137638],
   [-32.95370603127015129985, 37.37886438623610274590],
   [-32.95332832815405055271, 37.68366415221429122084],
   [-32.95295062503794980557, 37.98846391819247259036],
   [-32.95257292192184905844, 38.29326368417066106531],
   [-32.95219521880574831130, 38.59806345014884243483],
   [-32.95181751568964756416, 38.90286321612702380435],
   [-11.04814870163358975219, -38.84833914424903866802],
   [-11.04777099851748900505, -38.54353937827085729850],
   [-11.04739329540138825791, -38.23873961229267592898],
   [-11.04701559228528751078, -37.93393984631448745404],
   [-11.04663788916918854000, -37.62914008033630608452],
   [-11.04626018605308779286, -37.32434031435811760957],
   [-11.04588248293698704572, -37.01954054837993624005],
   [-11.04550477982088807494, -36.71474078240174776511],
   [-11.04512707670478732780, -36.40994101642356639559],
   [-11.04474937358868658066, -36.10514125044537792064],
   [-11.04437167047258583352, -35.80034148446719655112],
   [-11.04399396735648686274, -35.49554171848900807618],
   [-11.04361626424038611560, -35.19074195251082670666],
   [-11.04323856112428536846, -34.88594218653263823171],
   [-11.04286085800818639768, -34.58114242055445686219],
   [-11.04248315489208565054, -34.27634265457626838725],
   [-11.04210545177598490341, -33.97154288859808701773],
   [-11.04172774865988415627, -33.66674312261989854278],
   [-11.04135004554378518549, -33.36194335664171717326],
   [-11.04097234242768443835, -33.05714359066352869831],
   [-11.04059463931158369121, -32.75234382468534732880],
   [-11.04021693619548472043, -32.44754405870715885385],
   [-11.03983923307938397329, -32.14274429272897748433],
   [-11.03946152996328322615, -31.83794452675078900938],
   [-11.03908382684718247901, -31.53314476077260763986],
   [-11.03870612373108350823, -31.22834499479442271763],
   [-11.03832842061498276109, -30.92354522881623779540],
   [-11.03795071749888201396, -30.61874546283805287317],
   [-11.03757301438278304317, -30.31394569685986795093],
   [-11.03719531126668229604, -30.00914593088168302870],
   [-11.03681760815058154890, -29.70434616490349810647],
   [-11.03643990503448080176, -29.39954639892531318424],
   [-11.03606220191838183098, -29.09474663294712826200],
   [-11.03568449880228108384, -28.78994686696894333977],
   [-11.03530679568618033670, -28.48514710099075841754],
   [-11.03492909257008136592, -28.18034733501257349531],
   [-11.03455138945398061878, -27.87554756903439212579],
   [-11.03417368633787987164, -27.57074780305620720355],
   [-11.03379598322177912451, -27.26594803707802228132],
   [-11.03341828010568015372, -26.96114827109983735909],
   [-11.03304057698957940659, -26.65634850512165598957],
   [-11.03266287387347865945, -26.35154873914347106734],
   [-11.03228517075737968867, -26.04674897316528614510],
   [-11.03190746764127894153, -25.74194920718710122287],
   [-11.03152976452517819439, -25.43714944120891630064],
   [-11.03115206140907744725, -25.13234967523073137841],
   [-11.03077435829297847647, -24.82754990925254645617],
   [-11.03039665517687772933, -24.52275014327436153394],
   [-11.03001895206077698219, -24.21795037729617661171],
   [-11.02964124894467801141, -23.91315061131799168948],
   [-11.02926354582857726427, -23.60835084533980676724],
   [-11.02888584271247651714, -23.30355107936162184501],
   [-11.02850813959637577000, -22.99875131338343692278],
   [-11.02813043648027679922, -22.69395154740525200054],
   [-11.02775273336417605208, -22.38915178142706707831],
   [-11.02737503024807530494, -22.08435201544888215608],
   [-11.02699732713197633416, -21.77955224947069723385],
   [-11.02661962401587558702, -21.47475248349251231161],
   [-11.02624192089977483988, -21.16995271751432738938],
   [-11.02586421778367409274, -20.86515295153614601986],
   [-11.02548651466757512196, -20.56035318555796465034],
   [-11.02510881155147437482, -20.25555341957977972811],
   [-11.02473110843537362769, -19.95075365360159480588],
   [-11.02435340531927465690, -19.64595388762340988364],
   [-11.02397570220317390977, -19.34115412164522496141],
   [-11.02359799908707316263, -19.03635435566704003918],
   [-11.02322029597097241549, -18.73155458968885511695],
   [-11.02284259285487344471, -18.42675482371067019471],
   [-11.02246488973877269757, -18.12195505773248527248],
   [-11.02208718662267195043, -17.81715529175430035025],
   [-11.02170948350657297965, -17.51235552577611542802],
   [-11.02133178039047223251, -17.20755575979793050578],
   [-11.02095407727437148537, -16.90275599381974558355],
   [-11.02057637415827073823, -16.59795622784156066132],
   [-11.02019867104217176745, -16.29315646186337573909],
   [-11.01982096792607102032, -15.98835669588519259321],
   [-11.01944326480997027318, -15.68355692990701122369],
   [-11.01906556169387130240, -15.37875716392882630146],
   [-11.01868785857777055526, -15.07395739795064137923],
   [-11.01831015546166980812, -14.76915763197245645699],
   [-11.01793245234556906098, -14.46435786599427153476],
   [-11.01755474922947009020, -14.15955810001608661253],
   [-11.01717704611336934306, -13.85475833403790169029],
   [-11.01679934299726859592, -13.54995856805971676806],
   [-11.01642163988116962514, -13.24515880208153362219],
   [-11.01604393676506887800, -12.94035903610334869995],
   [-11.01566623364896813086, -12.63555927012516377772],
   [-11.01528853053286738373, -12.33075950414697885549],
   [-11.01491082741676841295, -12.02595973816879570961],
   [-11.01453312430066766581, -11.72115997219061078738],
   [-11.01415542118456691867, -11.41636020621242586515],
   [-11.01377771806846794789, -11.11156044023424094291],
   [-11.01340001495236720075, -10.80676067425605779704],
   [-11.01302231183626645361, -10.50196090827787287481],
   [-11.01264460872016570647, -10.19716114229968795257],
   [-11.01226690560406673569, -9.89236137632150303034],
   [-11.01188920248796598855, -9.58756161034331810811],
   [-11.01151149937186524141, -9.28276184436513318587],
   [-11.01113379625576627063, -8.97796207838694826364],
   [-11.01075609313966552349, -8.67316231240876511777],
   [-11.01037839002356477636, -8.36836254643058019553],
   [-11.01000068690746402922, -8.06356278045239527330],
   [-11.00962298379136505844, -7.75876301447421035107],
   [-11.00924528067526431130, -7.45396324849602542884],
   [-11.00886757755916356416, -7.14916348251784050660],
   [-11.00848987444306459338, -6.84436371653965558437],
   [-11.00811217132696384624, -6.53956395056147066214],
   [-11.00773446821086309910, -6.23476418458328573990],
   [-11.00735676509476235196, -5.92996441860510259403],
   [-11.00697906197866338118, -5.62516465262691767180],
   [-11.00660135886256263404, -5.32036488664873274956],
   [-11.00622365574646188691, -5.01556512067054782733],
   [-11.00584595263036291612, -4.71076535469236379328],
   [-11.00546824951426216899, -4.40596558871417887104],
   [-11.00509054639816142185, -4.10116582273599483699],
   [-11.00471284328206067471, -3.79636605675781035885],
   [-11.00433514016596170393, -3.49156629077962632479],
   [-11.00395743704986095679, -3.18676652480144140256],
   [-11.00357973393376020965, -2.88196675882325692442],
   [-11.00320203081766123887, -2.57716699284507200218],
   [-11.00282432770156049173, -2.27236722686688752404],
   [-11.00244662458545974459, -1.96756746088870304590],
   [-11.00206892146935899746, -1.66276769491051834571],
   [-11.00169121835326002667, -1.35796792893233386756],
   [-11.00131351523715927954, -1.05316816295414961147],
   [-11.00093581212105853240, -0.74836839697596468923],
   [0.0, 0.0],  # Blank(id=638, crate=3, slot=0, sma=2, corr_order=782, delay=0, input_sn='FCC030002', corr='FCC')
   [-11.00018040588885881448, -0.13876886501959545539],
   [-10.99980270277275806734, 0.16603090095858907826],
   [-10.99942499965665732020, 0.47083066693677372294],
   [-10.99904729654055834942, 0.77563043291495836762],
   [-10.99866959342445760228, 1.08043019889314306781],
   [-10.99829189030835685514, 1.38522996487132732391],
   [-10.99791418719225788436, 1.69002973084951180205],
   [-10.99753648407615713722, 1.99482949682769650224],
   [-10.99715878096005639009, 2.29962926280588098038],
   [-10.99678107784395564295, 2.60442902878406545852],
   [-10.99640337472785667217, 2.90922879476225038076],
   [-10.99602567161175592503, 3.21402856074043485890],
   [-10.99564796849565517789, 3.51882832671861978113],
   [-10.99527026537955620711, 3.82362809269680381519],
   [-10.99489256226345545997, 4.12842785867498918151],
   [-10.99451485914735471283, 4.43322762465317321556],
   [-10.99413715603125396569, 4.73802739063135813780],
   [-10.99375945291515499491, 5.04282715660954217185],
   [-10.99338174979905424777, 5.34762692258772709408],
   [-10.99300404668295350064, 5.65242668856591201632],
   [-10.99262634356685452985, 5.95722645454409693855],
   [-10.99224864045075378272, 6.26202622052228008442],
   [-10.99187093733465303558, 6.56682598650046500666],
   [-10.99149323421855228844, 6.87162575247864992889],
   [-10.99111553110245331766, 7.17642551845683485112],
   [-10.99073782798635257052, 7.48122528443501977335],
   [-10.99036012487025182338, 7.78602505041320469559],
   [-10.98998242175415285260, 8.09082481639138784146],
   [-10.98960471863805210546, 8.39562458236957276370],
   [-10.98922701552195135832, 8.70042434834775768593],
   [-10.98884931240585061119, 9.00522411432594083180],
   [-10.98847160928975164040, 9.31002388030412575404],
   [-10.98809390617365089327, 9.61482364628231067627],
   [-10.98771620305755014613, 9.91962341226049559850],
   [-10.98733849994145117535, 10.22442317823868052074],
   [-10.98696079682535042821, 10.52922294421686544297],
   [-10.98658309370924968107, 10.83402271019505036520],
   [-10.98620539059314893393, 11.13882247617323351108],
   [-10.98582768747704996315, 11.44362224215141843331],
   [-10.98544998436094921601, 11.74842200812960335554],
   [-10.98507228124484846887, 12.05322177410778827777],
   [-10.98469457812874949809, 12.35802154008597142365],
   [-10.98431687501264875095, 12.66282130606415634588],
   [-10.98393917189654800382, 12.96762107204234126812],
   [-10.98356146878044725668, 13.27242083802052619035],
   [-10.98318376566434828590, 13.57722060399870933622],
   [-10.98280606254824753876, 13.88202036997689425846],
   [-10.98242835943214679162, 14.18682013595507918069],
   [-10.98205065631604782084, 14.49161990193326410292],
   [0.0, 0.0],  # NoiseSource(id=688, crate=3, slot=8, sma=0, corr_order=908, delay=0, input_sn='FCC030800', corr='FCC')
   [-10.98129525008384632656, 15.10121943388963394739],
   [-10.98091754696774557942, 15.40601919986781886962],
   [-10.98053984385164660864, 15.71081896584600379185],
   [-10.98016214073554586150, 16.01561873182418693773],
   [-10.97978443761944511436, 16.32041849780237185996],
   [-10.97940673450334614358, 16.62521826378055678219],
   [-10.97902903138724539644, 16.93001802975874170443],
   [-10.97865132827114464931, 17.23481779573692662666],
   [-10.97827362515504390217, 17.53961756171511154889],
   [-10.97789592203894493139, 17.84441732769329647112],
   [-10.97751821892284418425, 18.14921709367148139336],
   [-10.97714051580674343711, 18.45401685964966631559],
   [-10.97676281269064446633, 18.75881662562785123782],
   [-10.97638510957454371919, 19.06361639160603616006],
   [-10.97600740645844297205, 19.36841615758422108229],
   [-10.97562970334234222491, 19.67321592356240600452],
   [-10.97525200022624325413, 19.97801568954059092675],
   [-10.97487429711014250699, 20.28281545551877584899],
   [-10.97449659399404175986, 20.58761522149696077122],
   [-10.97411889087794278907, 20.89241498747514214074],
   [-10.97374118776184204194, 21.19721475345332351026],
   [-10.97336348464574129480, 21.50201451943150843249],
   [-10.97298578152964054766, 21.80681428540969335472],
   [-10.97260807841354157688, 22.11161405138787827696],
   [-10.97223037529744082974, 22.41641381736606319919],
   [-10.97185267218134008260, 22.72121358334424812142],
   [-10.97147496906524111182, 23.02601334932243304365],
   [-10.97109726594914036468, 23.33081311530061796589],
   [-10.97071956283303961754, 23.63561288127880288812],
   [-10.97034185971693887041, 23.94041264725698781035],
   [-10.96996415660083989962, 24.24521241323517273258],
   [-10.96958645348473915249, 24.55001217921335765482],
   [-10.96920875036863840535, 24.85481194519154257705],
   [-10.96883104725253943457, 25.15961171116972749928],
   [-10.96845334413643868743, 25.46441147714791242151],
   [-10.96807564102033794029, 25.76921124312609734375],
   [-10.96769793790423719315, 26.07401100910428226598],
   [-10.96732023478813822237, 26.37881077508246718821],
   [-10.96694253167203747523, 26.68361054106065211045],
   [-10.96656482855593672809, 26.98841030703883347996],
   [-10.96618712543983775731, 27.29321007301701840220],
   [-10.96580942232373701017, 27.59800983899520332443],
   [-10.96543171920763626304, 27.90280960497338824666],
   [-10.96505401609153551590, 28.20760937095156961618],
   [-10.96467631297543654512, 28.51240913692975453841],
   [-10.96429860985933579798, 28.81720890290793946065],
   [-10.96392090674323505084, 29.12200866888612438288],
   [-10.96354320362713608006, 29.42680843486430930511],
   [-10.96316550051103533292, 29.73160820084249422735],
   [-10.96278779739493458578, 30.03640796682067914958],
   [-10.96241009427883383864, 30.34120773279886407181],
   [-10.96203239116273486786, 30.64600749877704899404],
   [-10.96165468804663412072, 30.95080726475523391628],
   [-10.96127698493053337359, 31.25560703073341883851],
   [-10.96089928181443440280, 31.56040679671160376074],
   [-10.96052157869833365567, 31.86520656268978513026],
   [-10.96014387558223290853, 32.17000632866796649978],
   [-10.95976617246613216139, 32.47480609464614786930],
   [-10.95938846935003319061, 32.77960586062433634424],
   [-10.95901076623393244347, 33.08440562660251771376],
   [-10.95863306311783169633, 33.38920539258070618871],
   [-10.95825536000173272555, 33.69400515855888755823],
   [-10.95787765688563197841, 33.99880492453707603318],
   [-10.95749995376953123127, 34.30360469051525740269],
   [-10.95712225065343048414, 34.60840445649344587764],
   [-10.95674454753733151335, 34.91320422247162724716],
   [-10.95636684442123076622, 35.21800398844981572211],
   [-10.95598914130513001908, 35.52280375442799709163],
   [-10.95561143818903104830, 35.82760352040618556657],
   [-10.95523373507293030116, 36.13240328638436693609],
   [-10.95485603195682955402, 36.43720305236255541104],
   [-10.95447832884072880688, 36.74200281834073678056],
   [-10.95410062572462983610, 37.04680258431892525550],
   [-10.95372292260852908896, 37.35160235029710662502],
   [-10.95334521949242834182, 37.65640211627529509997],
   [-10.95296751637632937104, 37.96120188225347646949],
   [-10.95258981326022862390, 38.26600164823166494443],
   [-10.95221211014412787677, 38.57080141420984631395],
   [-10.95183440702802712963, 38.87560118018802768347],
   [10.95183440702802712963, -38.87560118018802768347],
   [10.95221211014412787677, -38.57080141420984631395],
   [10.95258981326022862390, -38.26600164823166494443],
   [10.95296751637632937104, -37.96120188225347646949],
   [10.95334521949242834182, -37.65640211627529509997],
   [10.95372292260852908896, -37.35160235029710662502],
   [10.95410062572462983610, -37.04680258431892525550],
   [10.95447832884072880688, -36.74200281834073678056],
   [10.95485603195682955402, -36.43720305236255541104],
   [10.95523373507293030116, -36.13240328638436693609],
   [10.95561143818903104830, -35.82760352040618556657],
   [10.95598914130513001908, -35.52280375442799709163],
   [10.95636684442123076622, -35.21800398844981572211],
   [10.95674454753733151335, -34.91320422247162724716],
   [10.95712225065343048414, -34.60840445649344587764],
   [10.95749995376953123127, -34.30360469051525740269],
   [10.95787765688563197841, -33.99880492453707603318],
   [10.95825536000173272555, -33.69400515855888755823],
   [10.95863306311783169633, -33.38920539258070618871],
   [10.95901076623393244347, -33.08440562660251771376],
   [10.95938846935003319061, -32.77960586062433634424],
   [10.95976617246613216139, -32.47480609464614786930],
   [10.96014387558223290853, -32.17000632866796649978],
   [10.96052157869833365567, -31.86520656268978513026],
   [10.96089928181443440280, -31.56040679671160376074],
   [10.96127698493053337359, -31.25560703073341883851],
   [10.96165468804663412072, -30.95080726475523391628],
   [10.96203239116273486786, -30.64600749877704899404],
   [10.96241009427883383864, -30.34120773279886407181],
   [10.96278779739493458578, -30.03640796682067914958],
   [10.96316550051103533292, -29.73160820084249422735],
   [10.96354320362713608006, -29.42680843486430930511],
   [10.96392090674323505084, -29.12200866888612438288],
   [10.96429860985933579798, -28.81720890290793946065],
   [0.0, 0.0],  # NoiseSource(id=1058, crate=5, slot=12, sma=2, corr_order=1486, delay=0, input_sn='FCC051202', corr='FCC')
   [10.96505401609153551590, -28.20760937095156961618],
   [10.96543171920763626304, -27.90280960497338824666],
   [10.96580942232373701017, -27.59800983899520332443],
   [10.96618712543983775731, -27.29321007301701840220],
   [10.96656482855593672809, -26.98841030703883347996],
   [10.96694253167203747523, -26.68361054106065211045],
   [10.96732023478813822237, -26.37881077508246718821],
   [10.96769793790423719315, -26.07401100910428226598],
   [10.96807564102033794029, -25.76921124312609734375],
   [10.96845334413643868743, -25.46441147714791242151],
   [10.96883104725253943457, -25.15961171116972749928],
   [10.96920875036863840535, -24.85481194519154257705],
   [10.96958645348473915249, -24.55001217921335765482],
   [10.96996415660083989962, -24.24521241323517273258],
   [10.97034185971693887041, -23.94041264725698781035],
   [10.97071956283303961754, -23.63561288127880288812],
   [10.97109726594914036468, -23.33081311530061796589],
   [10.97147496906524111182, -23.02601334932243304365],
   [10.97185267218134008260, -22.72121358334424812142],
   [10.97223037529744082974, -22.41641381736606319919],
   [10.97260807841354157688, -22.11161405138787827696],
   [10.97298578152964054766, -21.80681428540969335472],
   [10.97336348464574129480, -21.50201451943150843249],
   [10.97374118776184204194, -21.19721475345332351026],
   [10.97411889087794278907, -20.89241498747514214074],
   [10.97449659399404175986, -20.58761522149696077122],
   [10.97487429711014250699, -20.28281545551877584899],
   [10.97525200022624325413, -19.97801568954059092675],
   [10.97562970334234222491, -19.67321592356240600452],
   [10.97600740645844297205, -19.36841615758422108229],
   [10.97638510957454371919, -19.06361639160603616006],
   [10.97676281269064446633, -18.75881662562785123782],
   [10.97714051580674343711, -18.45401685964966631559],
   [10.97751821892284418425, -18.14921709367148139336],
   [10.97789592203894493139, -17.84441732769329647112],
   [10.97827362515504390217, -17.53961756171511154889],
   [10.97865132827114464931, -17.23481779573692662666],
   [10.97902903138724539644, -16.93001802975874170443],
   [10.97940673450334614358, -16.62521826378055678219],
   [10.97978443761944511436, -16.32041849780237185996],
   [10.98016214073554586150, -16.01561873182418693773],
   [10.98053984385164660864, -15.71081896584600379185],
   [10.98091754696774557942, -15.40601919986781886962],
   [10.98129525008384632656, -15.10121943388963394739],
   [10.98167295319994707370, -14.79641966791144902515],
   [10.98205065631604782084, -14.49161990193326410292],
   [10.98242835943214679162, -14.18682013595507918069],
   [10.98280606254824753876, -13.88202036997689425846],
   [10.98318376566434828590, -13.57722060399870933622],
   [10.98356146878044725668, -13.27242083802052619035],
   [10.98393917189654800382, -12.96762107204234126812],
   [10.98431687501264875095, -12.66282130606415634588],
   [10.98469457812874949809, -12.35802154008597142365],
   [10.98507228124484846887, -12.05322177410778827777],
   [10.98544998436094921601, -11.74842200812960335554],
   [10.98582768747704996315, -11.44362224215141843331],
   [10.98620539059314893393, -11.13882247617323351108],
   [10.98658309370924968107, -10.83402271019505036520],
   [10.98696079682535042821, -10.52922294421686544297],
   [10.98733849994145117535, -10.22442317823868052074],
   [10.98771620305755014613, -9.91962341226049559850],
   [10.98809390617365089327, -9.61482364628231067627],
   [10.98847160928975164040, -9.31002388030412575404],
   [10.98884931240585061119, -9.00522411432594083180],
   [10.98922701552195135832, -8.70042434834775768593],
   [10.98960471863805210546, -8.39562458236957276370],
   [10.98998242175415285260, -8.09082481639138784146],
   [10.99036012487025182338, -7.78602505041320469559],
   [10.99073782798635257052, -7.48122528443501977335],
   [10.99111553110245331766, -7.17642551845683485112],
   [10.99149323421855228844, -6.87162575247864992889],
   [10.99187093733465303558, -6.56682598650046500666],
   [10.99224864045075378272, -6.26202622052228008442],
   [10.99262634356685452985, -5.95722645454409693855],
   [10.99300404668295350064, -5.65242668856591201632],
   [10.99338174979905424777, -5.34762692258772709408],
   [10.99375945291515499491, -5.04282715660954217185],
   [10.99413715603125396569, -4.73802739063135813780],
   [10.99451485914735471283, -4.43322762465317321556],
   [10.99489256226345545997, -4.12842785867498918151],
   [10.99527026537955620711, -3.82362809269680381519],
   [10.99564796849565517789, -3.51882832671861978113],
   [0.0, 0.0],  # NoiseSource(id=1141, crate=4, slot=14, sma=5, corr_order=1257, delay=0, input_sn='FCC041405', corr='FCC')
   [10.99640337472785667217, -2.90922879476225038076],
   [10.99678107784395564295, -2.60442902878406545852],
   [10.99715878096005639009, -2.29962926280588098038],
   [10.99753648407615713722, -1.99482949682769650224],
   [10.99791418719225788436, -1.69002973084951180205],
   [10.99829189030835685514, -1.38522996487132732391],
   [10.99866959342445760228, -1.08043019889314306781],
   [10.99904729654055834942, -0.77563043291495836762],
   [10.99942499965665732020, -0.47083066693677372294],
   [10.99980270277275806734, -0.16603090095858907826],
   [11.00018040588885881448, 0.13876886501959545539],
   [11.00055810900495956162, 0.44356863099778015558],
   [11.00093581212105853240, 0.74836839697596468923],
   [11.00131351523715927954, 1.05316816295414961147],
   [11.00169121835326002667, 1.35796792893233386756],
   [11.00206892146935899746, 1.66276769491051834571],
   [11.00244662458545974459, 1.96756746088870304590],
   [11.00282432770156049173, 2.27236722686688752404],
   [11.00320203081766123887, 2.57716699284507200218],
   [11.00357973393376020965, 2.88196675882325692442],
   [11.00395743704986095679, 3.18676652480144140256],
   [11.00433514016596170393, 3.49156629077962632479],
   [11.00471284328206067471, 3.79636605675781035885],
   [11.00509054639816142185, 4.10116582273599483699],
   [0.0, 0.0],  # NoiseSource(id=1166, crate=4, slot=0, sma=14, corr_order=1026, delay=0, input_sn='FCC040014', corr='FCC')
   [11.00584595263036291612, 4.71076535469236379328],
   [11.00622365574646188691, 5.01556512067054782733],
   [11.00660135886256263404, 5.32036488664873274956],
   [11.00697906197866338118, 5.62516465262691767180],
   [11.00735676509476235196, 5.92996441860510259403],
   [11.00773446821086309910, 6.23476418458328573990],
   [11.00811217132696384624, 6.53956395056147066214],
   [11.00848987444306459338, 6.84436371653965558437],
   [11.00886757755916356416, 7.14916348251784050660],
   [11.00924528067526431130, 7.45396324849602542884],
   [11.00962298379136505844, 7.75876301447421035107],
   [11.01000068690746402922, 8.06356278045239527330],
   [11.01037839002356477636, 8.36836254643058019553],
   [11.01075609313966552349, 8.67316231240876511777],
   [11.01113379625576627063, 8.97796207838694826364],
   [11.01151149937186524141, 9.28276184436513318587],
   [11.01188920248796598855, 9.58756161034331810811],
   [11.01226690560406673569, 9.89236137632150303034],
   [11.01264460872016570647, 10.19716114229968795257],
   [11.01302231183626645361, 10.50196090827787287481],
   [11.01340001495236720075, 10.80676067425605779704],
   [11.01377771806846794789, 11.11156044023424094291],
   [11.01415542118456691867, 11.41636020621242586515],
   [11.01453312430066766581, 11.72115997219061078738],
   [11.01491082741676841295, 12.02595973816879570961],
   [11.01528853053286738373, 12.33075950414697885549],
   [11.01566623364896813086, 12.63555927012516377772],
   [11.01604393676506887800, 12.94035903610334869995],
   [11.01642163988116962514, 13.24515880208153362219],
   [11.01679934299726859592, 13.54995856805971676806],
   [11.01717704611336934306, 13.85475833403790169029],
   [11.01755474922947009020, 14.15955810001608661253],
   [11.01793245234556906098, 14.46435786599427153476],
   [11.01831015546166980812, 14.76915763197245645699],
   [11.01868785857777055526, 15.07395739795064137923],
   [11.01906556169387130240, 15.37875716392882630146],
   [11.01944326480997027318, 15.68355692990701122369],
   [11.01982096792607102032, 15.98835669588519259321],
   [11.02019867104217176745, 16.29315646186337573909],
   [11.02057637415827073823, 16.59795622784156066132],
   [11.02095407727437148537, 16.90275599381974558355],
   [11.02133178039047223251, 17.20755575979793050578],
   [11.02170948350657297965, 17.51235552577611542802],
   [11.02208718662267195043, 17.81715529175430035025],
   [11.02246488973877269757, 18.12195505773248527248],
   [11.02284259285487344471, 18.42675482371067019471],
   [11.02322029597097241549, 18.73155458968885511695],
   [11.02359799908707316263, 19.03635435566704003918],
   [11.02397570220317390977, 19.34115412164522496141],
   [11.02435340531927465690, 19.64595388762340988364],
   [11.02473110843537362769, 19.95075365360159480588],
   [11.02510881155147437482, 20.25555341957977972811],
   [11.02548651466757512196, 20.56035318555796465034],
   [11.02586421778367409274, 20.86515295153614601986],
   [11.02624192089977483988, 21.16995271751432738938],
   [11.02661962401587558702, 21.47475248349251231161],
   [11.02699732713197633416, 21.77955224947069723385],
   [11.02737503024807530494, 22.08435201544888215608],
   [0.0, 0.0],  # HolographyAntenna(id=1225, crate=5, slot=0, sma=9, corr_order=1285, delay=1.475e-06, input_sn='FCC050009', corr='FCC', reflector='26m_dish', antenna='ANT0209C', rf_thru='BKR0CC_A09', pos=[254.162124, 21.853934, 18.93],, pol='S')
   [11.02813043648027679922, 22.69395154740525200054],
   [11.02850813959637577000, 22.99875131338343692278],
   [11.02888584271247651714, 23.30355107936162184501],
   [11.02926354582857726427, 23.60835084533980676724],
   [11.02964124894467801141, 23.91315061131799168948],
   [11.03001895206077698219, 24.21795037729617661171],
   [11.03039665517687772933, 24.52275014327436153394],
   [11.03077435829297847647, 24.82754990925254645617],
   [11.03115206140907744725, 25.13234967523073137841],
   [11.03152976452517819439, 25.43714944120891630064],
   [11.03190746764127894153, 25.74194920718710122287],
   [11.03228517075737968867, 26.04674897316528614510],
   [11.03266287387347865945, 26.35154873914347106734],
   [11.03304057698957940659, 26.65634850512165598957],
   [11.03341828010568015372, 26.96114827109983735909],
   [11.03379598322177912451, 27.26594803707802228132],
   [11.03417368633787987164, 27.57074780305620720355],
   [11.03455138945398061878, 27.87554756903439212579],
   [11.03492909257008136592, 28.18034733501257349531],
   [11.03530679568618033670, 28.48514710099075841754],
   [11.03568449880228108384, 28.78994686696894333977],
   [11.03606220191838183098, 29.09474663294712826200],
   [11.03643990503448080176, 29.39954639892531318424],
   [11.03681760815058154890, 29.70434616490349810647],
   [11.03719531126668229604, 30.00914593088168302870],
   [11.03757301438278304317, 30.31394569685986795093],
   [11.03795071749888201396, 30.61874546283805287317],
   [11.03832842061498276109, 30.92354522881623779540],
   [11.03870612373108350823, 31.22834499479442271763],
   [11.03908382684718247901, 31.53314476077260763986],
   [11.03946152996328322615, 31.83794452675078900938],
   [11.03983923307938397329, 32.14274429272897748433],
   [11.04021693619548472043, 32.44754405870715885385],
   [11.04059463931158369121, 32.75234382468534732880],
   [11.04097234242768443835, 33.05714359066352869831],
   [11.04135004554378518549, 33.36194335664171717326],
   [11.04172774865988415627, 33.66674312261989854278],
   [11.04210545177598490341, 33.97154288859808701773],
   [11.04248315489208565054, 34.27634265457626838725],
   [11.04286085800818639768, 34.58114242055445686219],
   [11.04323856112428536846, 34.88594218653263823171],
   [11.04361626424038611560, 35.19074195251082670666],
   [11.04399396735648686274, 35.49554171848900807618],
   [11.04437167047258583352, 35.80034148446719655112],
   [11.04474937358868658066, 36.10514125044537792064],
   [11.04512707670478732780, 36.40994101642356639559],
   [11.04550477982088807494, 36.71474078240174776511],
   [11.04588248293698704572, 37.01954054837993624005],
   [11.04626018605308779286, 37.32434031435811760957],
   [11.04663788916918854000, 37.62914008033630608452],
   [11.04701559228528751078, 37.93393984631448745404],
   [11.04739329540138825791, 38.23873961229267592898],
   [11.04777099851748900505, 38.54353937827085729850],
   [11.04814870163358975219, 38.84833914424903866802],
   [32.95181751568964756416, -38.90286321612702380435],
   [32.95219521880574831130, -38.59806345014884243483],
   [32.95257292192184905844, -38.29326368417066106531],
   [32.95295062503794980557, -37.98846391819247259036],
   [32.95332832815405055271, -37.68366415221429122084],
   [32.95370603127015129985, -37.37886438623610274590],
   [32.95408373438625204699, -37.07406462025792137638],
   [0.0, 0.0],  # NoiseSource(id=1543, crate=6, slot=6, sma=11, corr_order=1639, delay=0, input_sn='FCC060611', corr='FCC')
   [32.95483914061845354126, -36.46446508830155153191],
   [32.95521684373454718298, -36.15966532232336305697],
   [32.95559454685064793011, -35.85486555634518168745],
   [32.95597224996674867725, -35.55006579036699321250],
   [32.95634995308284942439, -35.24526602438881184298],
   [32.95672765619895017153, -34.94046625841062336804],
   [32.95710535931505091867, -34.63566649243244199852],
   [32.95748306243115166581, -34.33086672645425352357],
   [32.95786076554725241294, -34.02606696047607215405],
   [32.95823846866335316008, -33.72126719449788367911],
   [32.95861617177945390722, -33.41646742851970230959],
   [32.95899387489555465436, -33.11166766254151383464],
   [32.95937157801165540150, -32.80686789656333246512],
   [32.95974928112775614863, -32.50206813058514399017],
   [32.96012698424385689577, -32.19726836460696262066],
   [32.96050468735995053748, -31.89246859862877769842],
   [32.96088239047605128462, -31.58766883265059632890],
   [32.96126009359215203176, -31.28286906667241140667],
   [32.96163779670825277890, -30.97806930069422648444],
   [32.96201549982435352604, -30.67326953471604156221],
   [32.96239320294045427318, -30.36846976873785663997],
   [32.96277090605655502031, -30.06367000275967171774],
   [32.96314860917265576745, -29.75887023678148679551],
   [32.96352631228875651459, -29.45407047080330187327],
   [32.96390401540485726173, -29.14927070482511695104],
   [32.96428171852095800887, -28.84447093884693202881],
   [32.96465942163705875600, -28.53967117286874710658],
   [32.96503712475315950314, -28.23487140689056218434],
   [32.96541482786926025028, -27.93007164091238081483],
   [32.96579253098535389199, -27.62527187493419589259],
   [32.96617023410145463913, -27.32047210895601097036],
   [32.96654793721755538627, -27.01567234297782604813],
   [32.96692564033365613341, -26.71087257699964467861],
   [32.96730334344975688055, -26.40607281102145975638],
   [32.96768104656585762768, -26.10127304504327483414],
   [32.96805874968195837482, -25.79647327906508991191],
   [32.96843645279805912196, -25.49167351308690498968],
   [32.96881415591415986910, -25.18687374710872006744],
   [32.96919185903026061624, -24.88207398113053514521],
   [32.96956956214636136338, -24.57727421515235022298],
   [32.96994726526246211051, -24.27247444917416530075],
   [32.97032496837856285765, -23.96767468319598037851],
   [32.97070267149466360479, -23.66287491721779545628],
   [32.97108037461075724650, -23.35807515123961053405],
   [32.97145807772685799364, -23.05327538526142561182],
   [32.97183578084295874078, -22.74847561928324068958],
   [32.97221348395905948792, -22.44367585330505576735],
   [32.97259118707516023505, -22.13887608732687084512],
   [32.97296889019126098219, -21.83407632134868592289],
   [32.97334659330736172933, -21.52927655537050100065],
   [32.97372429642346247647, -21.22447678939231607842],
   [32.97410199953956322361, -20.91967702341413470890],
   [32.97447970265566397075, -20.61487725743595333938],
   [32.97485740577176471788, -20.31007749145776841715],
   [32.97523510888786546502, -20.00527772547958349492],
   [32.97561281200396621216, -19.70047795950139857268],
   [32.97599051512006695930, -19.39567819352321365045],
   [32.97636821823616060101, -19.09087842754502872822],
   [32.97674592135226134815, -18.78607866156684380599],
   [32.97712362446836209529, -18.48127889558865888375],
   [32.97750132758446284242, -18.17647912961047396152],
   [32.97787903070056358956, -17.87167936363228903929],
   [32.97825673381666433670, -17.56687959765410411705],
   [32.97863443693276508384, -17.26207983167591919482],
   [32.97901214004886583098, -16.95728006569773427259],
   [32.97938984316496657812, -16.65248029971954935036],
   [32.97976754628106732525, -16.34768053374136442812],
   [32.98014524939716807239, -16.04288076776317950589],
   [32.98052295251326881953, -15.73808100178499813637],
   [32.98090065562936956667, -15.43328123580681321414],
   [32.98127835874547031381, -15.12848146982862829191],
   [32.98165606186156395552, -14.82368170385044336967],
   [32.98203376497766470266, -14.51888193787225844744],
   [32.98241146809376544979, -14.21408217189407352521],
   [32.98278917120986619693, -13.90928240591588860298],
   [32.98316687432596694407, -13.60448263993770368074],
   [32.98354457744206769121, -13.29968287395952053487],
   [32.98392228055816843835, -12.99488310798133561264],
   [32.98429998367426918549, -12.69008334200315069040],
   [32.98467768679036993262, -12.38528357602496576817],
   [32.98505538990647067976, -12.08048381004678262229],
   [32.98543309302257142690, -11.77568404406859770006],
   [32.98581079613867217404, -11.47088427809041277783],
   [32.98618849925477292118, -11.16608451211222785560],
   [32.98656620237087366831, -10.86128474613404470972],
   [32.98694390548696731003, -10.55648498015585978749],
   [32.98732160860306805716, -10.25168521417767486525],
   [32.98769931171916880430, -9.94688544819948994302],
   [32.98807701483526955144, -9.64208568222130502079],
   [32.98845471795137029858, -9.33728591624312009856],
   [32.98883242106747104572, -9.03248615026493517632],
   [32.98921012418357179286, -8.72768638428675203045],
   [32.98958782729967253999, -8.42288661830856710822],
   [32.98996553041577328713, -8.11808685233038218598],
   [32.99034323353187403427, -7.81328708635219815193],
   [32.99072093664797478141, -7.50848732037401322970],
   [32.99109863976407552855, -7.20368755439582830746],
   [32.99147634288017627568, -6.89888778841764338523],
   [0.0, 0.0],  # NoiseSource(id=1642, crate=7, slot=2, sma=6, corr_order=1834, delay=0, input_sn='FCC070206', corr='FCC')
   [32.99223174911237066453, -6.28928825646127354076],
   [32.99260945222847141167, -5.98448849048309039489],
   [32.99298715534457215881, -5.67968872450490547266],
   [32.99336485846067290595, -5.37488895852672055042],
   [32.99374256157677365309, -5.07008919254853562819],
   [32.99412026469287440023, -4.76528942657035159414],
   [32.99449796780897514736, -4.46048966059216667190],
   [32.99487567092507589450, -4.15568989461398263785],
   [32.99525337404117664164, -3.85089012863579771562],
   [32.99563107715727738878, -3.54609036265761368156],
   [32.99600878027337813592, -3.24129059667942875933],
   [32.99638648338947888305, -2.93649083070124428119],
   [32.99676418650557963019, -2.63169106472305935895],
   [32.99714188962168037733, -2.32689129874487488081],
   [32.99751959273777401904, -2.02209153276669040267],
   [32.99789729585387476618, -1.71729176678850548043],
   [32.99827499896997551332, -1.41249200081032100229],
   [32.99865270208607626046, -1.10769223483213674619],
   [32.99903040520217700760, -0.80289246885395193498],
   [32.99940810831827775473, -0.49809270287576734582],
   [32.99978581143437850187, -0.19329293689758270114],
   [33.00016351455047924901, 0.11150682908060184639],
   [33.00054121766657999615, 0.41630659505878653270],
   [33.00091892078268074329, 0.72110636103697112187],
   [33.00129662389878149042, 1.02590612701515593308],
   [33.00167432701488223756, 1.33070589299334018918],
   [33.00205203013098298470, 1.63550565897152466732],
   [33.00242973324708373184, 1.94030542494970936751],
   [33.00280743636317737355, 2.24510519092789362361],
   [33.00318513947927812069, 2.54990495690607810175],
   [33.00356284259537886783, 2.85470472288426302399],
   [33.00394054571147961497, 3.15950448886244750213],
   [33.00431824882758036210, 3.46430425484063242436],
   [33.00469595194368110924, 3.76910402081881645842],
   [33.00507365505978185638, 4.07390378679700138065],
   [33.00545135817588260352, 4.37870355277518541470],
   [33.00582906129198335066, 4.68350331875337033694],
   [33.00620676440808409779, 4.98830308473155437099],
   [33.00658446752418484493, 5.29310285070973929322],
   [33.00696217064028559207, 5.59790261668792421546],
   [33.00733987375638633921, 5.90270238266610913769],
   [33.00771757687248708635, 6.20750214864429228356],
   [33.00809527998858072806, 6.51230191462247720580],
   [33.00847298310468147520, 6.81710168060066212803],
   [33.00885068622078222234, 7.12190144657884705026],
   [33.00922838933688296947, 7.42670121255703197249],
   [33.00960609245298371661, 7.73150097853521689473],
   [33.00998379556908446375, 8.03630074451340092878],
   [33.01036149868518521089, 8.34110051049158585101],
   [33.01073920180128595803, 8.64590027646977077325],
   [33.01111690491738670516, 8.95070004244795391912],
   [33.01149460803348745230, 9.25549980842613884136],
   [33.01187231114958819944, 9.56029957440432376359],
   [33.01225001426568894658, 9.86509934038250868582],
   [33.01262771738178969372, 10.16989910636069360805],
   [33.01300542049789044086, 10.47469887233887853029],
   [33.01338312361398408257, 10.77949863831706345252],
   [33.01376082673008482971, 11.08429840429524659839],
   [33.01413852984618557684, 11.38909817027343152063],
   [33.01451623296228632398, 11.69389793625161644286],
   [33.01489393607838707112, 11.99869770222980136509],
   [33.01527163919448781826, 12.30349746820798451097],
   [33.01564934231058856540, 12.60829723418616943320],
   [33.01602704542668931254, 12.91309700016435435543],
   [33.01640474854279005967, 13.21789676614253927767],
   [33.01678245165889080681, 13.52269653212072242354],
   [33.01716015477499155395, 13.82749629809890734577],
   [33.01753785789109230109, 14.13229606407709226801],
   [33.01791556100719304823, 14.43709583005527719024],
   [33.01829326412329379536, 14.74189559603346211247],
   [33.01867096723938743708, 15.04669536201164703471],
   [33.01904867035548818421, 15.35149512798983195694],
   [33.01942637347158893135, 15.65629489396801687917],
   [33.01980407658768967849, 15.96109465994619824869],
   [33.02018177970379042563, 16.26589442592438317092],
   [33.02055948281989117277, 16.57069419190256809316],
   [33.02093718593599191991, 16.87549395788075301539],
   [33.02131488905209266704, 17.18029372385893793762],
   [33.02169259216819341418, 17.48509348983712285985],
   [33.02207029528429416132, 17.78989325581530778209],
   [33.02244799840039490846, 18.09469302179349270432],
   [33.02282570151649565560, 18.39949278777167762655],
   [33.02320340463259640273, 18.70429255374986254878],
   [33.02358110774869714987, 19.00909231972804747102],
   [33.02395881086479079158, 19.31389208570623239325],
   [33.02433651398089153872, 19.61869185168441731548],
   [33.02471421709699228586, 19.92349161766260223771],
   [33.02509192021309303300, 20.22829138364078715995],
   [33.02546962332919378014, 20.53309114961897208218],
   [33.02584732644529452728, 20.83789091559715345170],
   [33.02622502956139527441, 21.14269068157533482122],
   [33.02660273267749602155, 21.44749044755351974345],
   [33.02698043579359676869, 21.75229021353170466568],
   [33.02735813890969751583, 22.05708997950988958792],
   [33.02773584202579826297, 22.36188974548807451015],
   [33.02811354514189901010, 22.66668951146625943238],
   [33.02849124825799975724, 22.97148927744444435461],
   [33.02886895137410050438, 23.27628904342262927685],
   [33.02924665449019414609, 23.58108880940081419908],
   [33.02962435760629489323, 23.88588857537899912131],
   [33.03000206072239564037, 24.19068834135718404355],
   [33.03037976383849638751, 24.49548810733536896578],
   [33.03075746695459713465, 24.80028787331355388801],
   [33.03113517007069788178, 25.10508763929173881024],
   [33.03151287318679862892, 25.40988740526992373248],
   [33.03189057630289937606, 25.71468717124810865471],
   [33.03226827941900012320, 26.01948693722629357694],
   [33.03264598253510087034, 26.32428670320447849917],
   [33.03302368565120161747, 26.62908646918266342141],
   [33.03340138876730236461, 26.93388623516084479093],
   [33.03377909188340311175, 27.23868600113902971316],
   [33.03415679499950385889, 27.54348576711721463539],
   [33.03453449811559750060, 27.84828553309539955762],
   [33.03491220123169824774, 28.15308529907358092714],
   [33.03528990434779899488, 28.45788506505176584938],
   [33.03566760746389974202, 28.76268483102995077161],
   [33.03604531058000048915, 29.06748459700813569384],
   [33.03642301369610123629, 29.37228436298632061607],
   [33.03680071681220198343, 29.67708412896450553831],
   [33.03717841992830273057, 29.98188389494269046054],
   [33.03755612304440347771, 30.28668366092087538277],
   [33.03793382616050422484, 30.59148342689906030500],
   [33.03831152927660497198, 30.89628319287724522724],
   [33.03868923239270571912, 31.20108295885543014947],
   [33.03906693550880646626, 31.50588272483361507170],
   [33.03944463862490721340, 31.81068249081179644122],
   [33.03982234174100085511, 32.11548225678998136345],
   [33.04020004485710160225, 32.42028202276816273297],
   [33.04057774797320234939, 32.72508178874635120792],
   [33.04095545108930309652, 33.02988155472453257744],
   [33.04133315420540384366, 33.33468132070272105238],
   [33.04171085732150459080, 33.63948108668090242190],
   [33.04208856043760533794, 33.94428085265909089685],
   [33.04246626355370608508, 34.24908061863727226637],
   [33.04284396666980683221, 34.55388038461546074132],
   [33.04322166978590757935, 34.85868015059364211083],
   [33.04359937290200832649, 35.16347991657183058578],
   [33.04397707601810907363, 35.46827968255001195530],
   [33.04435477913420982077, 35.77307944852820043025],
   [33.04473248225031056791, 36.07787921450638179977],
   [33.04511018536640420962, 36.38267898048457027471],
   [33.04548788848250495676, 36.68747874646275164423],
   [33.04586559159860570389, 36.99227851244094011918],
   [33.04624329471470645103, 37.29707827841912148870],
   [33.04662099783080719817, 37.60187804439730996364],
   [33.04699870094690794531, 37.90667781037549133316],
   [33.04737640406300869245, 38.21147757635367980811],
   [33.04775410717910943958, 38.51627734233186117763],
   [33.04813181029521018672, 38.82107710831004254715]]
