##########################################
#
# chime_science_run_recv.yaml
#
# CHIME receiver node configuration used in the mid-November 2018 run.
# This configuration turns off saving of the 26m datasets.
#
# For the N2 data it includes, 10 second calibration data,
# full triangles for 10 frequencies at 10 seconds, and stacked
# data over all frequencies.
#
# Author: Richard Shaw
#
##########################################
---
type: config
log_level: info
num_elements: 2048
buffer_depth: 64
num_ev: 4

# CPU affinity for most processes
#
# Only core 7 is unused by the high priority processes. /stacking and
# /apply_gains each have three threads and three dedicated cores (1, 2, 3 for
# stacking, 4, 5, 6 for apply_gains), however as each of these needs only about
# 2.5 cores of conpute power, we have opened up one of the hyperthread pairs to
# other stages (11 and 14, twinned with 3 and 6 respectively)
cpu_affinity: [7, 11, 14, 15]

telescope:
  name: CHIMETelescope
  allow_default_frequency_map: false
  require_gps: false

dataset_manager:
  use_dataset_broker: True
  ds_broker_host: "10.1.50.11" # recv1

vis_pool:
  kotekan_metadata_pool: VisMetadata
  num_metadata_objects: 500 * buffer_depth

vis_buffer:
  metadata_pool: vis_pool
  num_frames: buffer_depth
  visbuf_10s_all:
    kotekan_buffer: vis
  visbuf_10s_gain:
    kotekan_buffer: vis
    buffer_depth: 384  # Before slow stage
  visbuf_10s_rf:
    kotekan_buffer: vis
  visbuf_10s_flags:
    kotekan_buffer: vis
    buffer_depth: 4096 # Before slow stage
  visbuf_10s_flags_delay:
    kotekan_buffer: vis
    buffer_depth: 384  # Before slow stage
  visbuf_10s_stack:
    kotekan_buffer: vis
    num_prod: 17000  # Approximation to the correct size
    buffer_depth: 2048
  visbuf_10s_stack_ne:
    kotekan_buffer: vis
    num_ev: 0
    num_prod: 17000  # Approximation to the correct size
  visbuf_10s_mfreq:
    kotekan_buffer: vis
    buffer_depth: 16
  visbuf_10s_stack_mfreq:
    kotekan_buffer: vis
    num_prod: 17000  # Approximation to the correct size
  visbuf_5s_26m_ungated:
    kotekan_buffer: vis
    buffer_depth: 4096
    num_prod: 4096
  visbuf_5s_26m_gated:
    kotekan_buffer: vis
    buffer_depth: 4096
    num_prod: 4096
  visbuf_5s_26m_ungated_post:
    kotekan_buffer: vis
    buffer_depth: 1024
    num_prod: 4096
  visbuf_5s_26m_gated_post:
    kotekan_buffer: vis
    buffer_depth: 1024
    num_prod: 4096

  visbuf_10s_cal:
    kotekan_buffer: vis
    num_prod: 2048
    buffer_depth: 1024  # Increase as this subset is produced very quickly
  visbuf_10s_timing:
    num_elements: 15
    kotekan_buffer: vis
    buffer_depth: 1024  # Increase as this subset is produced very quickly

  visbuf_10s_valve_ringmap:
    kotekan_buffer: vis
    num_prod: 17000  # Approximation to the correct size
  visbuf_10s_valve_cal:
    kotekan_buffer: vis
    num_prod: 2048
    buffer_depth: 512
  visbuf_10s_valve_timing:
    num_elements: 15
    kotekan_buffer: vis
    buffer_depth: 512

  visbuf_10s_timing_ne:
    num_elements: 15
    num_ev: 0
    kotekan_buffer: vis
    buffer_depth: 256

# Subset of good frequencies to output whole for monitoring
mfreq: &mfreq [107, 344, 619, 938]
# Larger subset to be sent to map maker, spanning entire band
mapfreq: &mapfreq [
        1, 12, 23, 36, 47, 58, 70, 82, 92, 103, 184, 194, 205, 216,
        231, 241, 252, 277, 288, 300, 311, 322, 332, 343, 354, 364,
        376, 387, 399, 409, 420, 431, 442, 477, 488, 499, 509, 520,
        532, 543, 606, 618, 663, 673, 704, 715, 726, 736, 747, 780,
        818, 833, 844, 863, 885, 905, 919, 935, 947, 958, 969, 981,
        995, 1006
    ]

# Updatable config blocks
updatable_config:
  flagging:
    kotekan_update_endpoint: "json"
    start_time: 1535048997.
    update_id: "initial_flags"
    bad_inputs: [  46,   84,  107,  136,  142,  256,  257,  319,  348,  357,  369,
                  370,  453,  550,  551,  579,  638,  688,  739,  742,  768,  784,
                  807,  855,  944,  960,  967,  971,  981,  986, 1005, 1010, 1020,
                 1023, 1058, 1141, 1166, 1225, 1280, 1281, 1285, 1311, 1314, 1343,
                 1380, 1381, 1479, 1521, 1523, 1543, 1642, 1684, 1687, 1738, 1792,
                 1794, 1910, 1912, 1943, 1945, 1950, 1982, 1984, 1987, 2032, 2034]
  gains:
    kotekan_update_endpoint: "json"
    start_time: 1575950518.4
    update_id: "zero_gain"
    transition_interval: 300.0
    new_state: true
  26m_gated:
    kotekan_update_endpoint: "json"
    enabled: false
  26m_ungated:
    kotekan_update_endpoint: "json"
    enabled: false

# Kotekan stages
buffer_recv:
  log_level: warn
  n2:
    kotekan_stage: bufferRecv
    buf: visbuf_10s_all
    listen_port: 11024
    cpu_affinity: [0, 8]
    num_threads: 2
  26m_ungated:
    kotekan_stage: bufferRecv
    buf: visbuf_5s_26m_ungated
    listen_port: 11025
  26m_gated:
    kotekan_stage: bufferRecv
    buf: visbuf_5s_26m_gated
    listen_port: 11026

switch_26m_ungated:
  kotekan_stage: bufferSwitch
  in_bufs:
    - enabled: visbuf_5s_26m_ungated
  out_buf: visbuf_5s_26m_ungated_post
  updatable_config: "/updatable_config/26m_ungated"

switch_26m_gated:
  kotekan_stage: bufferSwitch
  in_bufs:
    - enabled: visbuf_5s_26m_gated
  out_buf: visbuf_5s_26m_gated_post
  updatable_config: "/updatable_config/26m_gated"

receive_flags:
  kotekan_stage: ReceiveFlags
  in_buf: visbuf_10s_all
  out_buf: visbuf_10s_rf
  updatable_config: "/updatable_config/flagging"
  num_kept_updates: 24

bad_inputs_check:
  kotekan_stage: BadInputFlag
  in_buf: visbuf_10s_rf
  out_buf: visbuf_10s_flags

vis_debug:
  n2:
    kotekan_stage: visDebug
    in_buf: visbuf_10s_flags
  26m_ungated:
    kotekan_stage: visDebug
    in_buf: visbuf_5s_26m_ungated_post
  26m_gated:
    kotekan_stage: visDebug
    in_buf: visbuf_5s_26m_gated_post

count_check:
  n2:
    kotekan_stage: countCheck
    in_buf: visbuf_10s_flags
  26m_ungated:
    kotekan_stage: countCheck
    in_buf: visbuf_5s_26m_ungated
  26m_gated:
    kotekan_stage: countCheck
    in_buf: visbuf_5s_26m_gated

delay_frames:
  num_frames_to_hold: 3840
  copy_frame: false
  kotekan_stage: bufferDelay
  in_buf: visbuf_10s_flags
  out_buf: visbuf_10s_flags_delay

apply_gains:
  num_threads: 3
  cpu_affinity: [4, 5, 6]
  kotekan_stage: applyGains
  in_buf: visbuf_10s_flags_delay
  out_buf: visbuf_10s_gain
  updatable_config: "/updatable_config/gains"
  broker_host: cv0r1
  broker_port: 54328
  num_kept_updates: 24

stacking:
  num_threads: 3
  cpu_affinity: [1, 2, 3]
  kotekan_stage: baselineCompression
  in_buf: visbuf_10s_gain
  out_buf: visbuf_10s_stack
  stack_type: chime_in_cyl
  exclude_inputs: [
    # These are non-CHIME feeds we want to exclude (26m, noise source channels, etc.)
      46,  142,  688,  944,  960, 1058, 1141, 1166, 1225, 1314, 1521, 1642, 2032, 2034,
    # Below are the last eight feeds on each cylinder, masked out because their beams are very different
       0,    1,    2,    3,    4,    5,    6,    7,  248,  249,  250,  251,  252,  253,  254,  255,
     256,  257,  258,  259,  260,  261,  262,  263,  504,  505,  506,  507,  508,  509,  510,  511,
     512,  513,  514,  515,  516,  517,  518,  519,  760,  761,  762,  763,  764,  765,  766,  767,
     768,  769,  770,  771,  772,  773,  774,  775, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023,
    1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279,
    1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535,
    1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791,
    1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047
  ]

# Export a data quality metric to prometheus
export_data_quality:
  kotekan_stage: DataQuality
  in_buf: visbuf_10s_stack

buffer_status:
  kotekan_stage: bufferStatus
  print_status: false

# Generate the calibration stream
cal_subset:
  kotekan_stage: prodSubset
  in_buf: visbuf_10s_flags
  out_buf: visbuf_10s_cal
  prod_subset_type: autos

timing_subset:
  kotekan_stage: InputSubset
  in_buf: visbuf_10s_flags
  out_buf: visbuf_10s_timing
  inputs: [46, 142, 256, 688, 768, 944, 960, 1058, 1141, 1166, 1314, 1543, 1642, 2032, 2034]

# Generate the monitoring freq full N^2 stream
mfreq_subset:
  n2:
    kotekan_stage: VisFreqSubset
    in_buf: visbuf_10s_flags
    out_buf: visbuf_10s_mfreq
    subset_list: *mfreq
  stack:
    kotekan_stage: VisFreqSubset
    in_buf: visbuf_10s_stack
    out_buf: visbuf_10s_stack_mfreq
    subset_list: *mapfreq

remove_ev:
  chimestack:
    kotekan_stage: removeEv
    in_buf: visbuf_10s_stack
    out_buf: visbuf_10s_stack_ne

  timing:
    kotekan_stage: removeEv
    in_buf: visbuf_10s_timing
    out_buf: visbuf_10s_timing_ne


# This stage is here to track the output dataset IDs in prometheus
vis_dset_tracking:
  n2_mf:
    kotekan_stage: visDebug
    in_buf: visbuf_10s_mfreq
  chimestack:
    kotekan_stage: visDebug
    in_buf: visbuf_10s_stack_ne
  26m:
    kotekan_stage: visDebug
    in_buf: visbuf_5s_26m_ungated_post
  26mgated:
    kotekan_stage: visDebug
    in_buf: visbuf_5s_26m_gated_post
  cal:
    kotekan_stage: visDebug
    in_buf: visbuf_10s_cal
  timing:
    kotekan_stage: visDebug
    in_buf: visbuf_10s_timing_ne


archive_writers:

  file_length: 512
  file_type: raw
  root_path: /data/untransposed/

  n2_mf:
    kotekan_stage: VisWriter
    in_buf: visbuf_10s_mfreq
    instrument_name: chimeN2

  chimestack:
    kotekan_stage: VisWriter
    in_buf: visbuf_10s_stack_ne
    instrument_name: chimestack

  26m:
    kotekan_stage: VisWriter
    in_buf: visbuf_5s_26m_ungated_post
    instrument_name: chime26m

  26mgated:
    kotekan_stage: VisWriter
    in_buf: visbuf_5s_26m_gated_post
    instrument_name: chime26mgated

  cal:
    kotekan_stage: VisWriter
    in_buf: visbuf_10s_cal
    instrument_name: chimecal
    file_length: 256

  timing:
    kotekan_stage: VisWriter
    in_buf: visbuf_10s_timing_ne
    instrument_name: chimetiming

send_valves:
  ringmap:
    kotekan_stage: Valve
    in_buf: visbuf_10s_stack_mfreq
    out_buf: visbuf_10s_valve_ringmap
  cal:
    kotekan_stage: Valve
    in_buf: visbuf_10s_cal
    out_buf: visbuf_10s_valve_cal
  timing:
    kotekan_stage: Valve
    in_buf: visbuf_10s_timing
    out_buf: visbuf_10s_valve_timing

# Transmit part of the stack to the recv1 for testing
buffer_send:
  server_ip: 10.1.50.11
  log_level: warn

  stack_mfreq:
    kotekan_stage: bufferSend
    buf: visbuf_10s_valve_ringmap
    server_port: 14096

  cal:
    kotekan_stage: bufferSend
    buf: visbuf_10s_valve_cal
    server_port: 15001

  timing:
    kotekan_stage: bufferSend
    buf: visbuf_10s_valve_timing
    server_port: 15002
