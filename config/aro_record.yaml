##########################################
#
# aro_record.yaml
#
# A config used by ARO to record data to
# disk and stream data for live-view
#
#
# Author: Jacob Taylor, Andre Renard
#
##########################################
---
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: DEBUG

instrument_name: aro

power_integration_length: 8192
num_freq: 1024
num_local_freq: 128
num_elements: 2
samples_per_data_set: 32768
buffer_depth: 10
num_links: 8
timesamples_per_packet: 2
num_data_sets: 1
cpu_affinity: [4,5,10,11]
sizeof_float: 4
sizeof_short: 2
vdif_header_size: 32
num_disks: 10

# Pool
main_pool:
    kotekan_metadata_pool: chimeMetadata
    num_metadata_objects: 15 * buffer_depth

# Buffers
vdif_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth * num_disks
    frame_size: samples_per_data_set * num_elements * (num_freq + vdif_header_size)
    metadata_pool: main_pool

lost_samples_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: samples_per_data_set
    metadata_pool: main_pool

power_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: (samples_per_data_set/power_integration_length) * (num_freq + 1) * num_elements * sizeof_float
    metadata_pool: main_pool

# Stages

# The core mapping here is setup for a 6 core CPU with 12 threads (vcores)
# and setup to use the first 4 real cores (8 vcores)
dpdk:
    kotekan_stage: dpdkCore
    # Format is index = lcore, value = cpu core
    lcore_cpu_map: [0,1,2,3,6,7,8,9]
    master_lcore_cpu: 2
    fpga_packet_size: 4680
    alignment: samples_per_data_set * 100
    # Format is index = lcore, value = array of port IDs
    # so [[0,1],[2,3]] maps lcore 0 to service ports 0 and 1,
    # and lcore 1 to service ports 2 and 3.
    lcore_port_map:
        - [0]
        - [1]
        - [2]
        - [3]
        - [4]
        - [5]
        - [6]
        - [7]
    # One handler must be given per port on the system.
    handlers:
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
        - dpdk_handler: iceBoardVDIF
    out_buf: vdif_buffer
    lost_samples_buf: lost_samples_buffer

zero_samples:
    kotekan_stage: invalidateVDIFframes
    out_buf: vdif_buffer
    lost_samples_buf: lost_samples_buffer

raw_capture:
   kotekan_stage: nDiskFileWrite
#################################
# THIS IS THE PLACE TO EDIT!!!  #
#################################
   note: B0329+20 test run
#Change this if you want to record
   write_to_disk: False
   gain_files:
   - /home/natasha/ch_acq/gains_slotNone.pkl
   - /home/natasha/ch_acq/gains_noisy_slotNone.pkl
   num_disks: 10
   disk_base: /drives
   disk_set: E
   in_buf: vdif_buffer

# These next two stages are used for live viewing of the data
# they are not required for saving data.
power_integration:
   kotekan_stage: computeDualpolPower
   vdif_in_buf: vdif_buffer
   power_out_buf: power_buffer

power_stream:
   freq: 600
   sample_bw: 200
   destination_protocol: TCP
   stream_1:
      kotekan_stage: networkPowerStream
      in_buf: power_buffer
      destination_port: 2054
      destination_ip: 127.0.0.1
   stream_2:
      kotekan_stage: networkPowerStream
      in_buf: power_buffer
      destination_port: 2055
      destination_ip: 127.0.0.1
   stream_boris:
      kotekan_stage: networkPowerStream
      in_buf: power_buffer
      destination_port: 2055
      destination_ip: 10.72.0.2
