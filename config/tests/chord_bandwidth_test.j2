##########################################
#
# dpdk_example.yaml
#
# Example config for a simple DPDK setup, this config just captures packets from
# one DPDK port (including all headers/footers), and puts them in a buffer
# Nothing is done with the buffer other than printing the contents of the first
# packet in each frame to screen.
#
# Note all frames must be the same size, set by `packet_size`
#
# Author: Andre Renard
#
##########################################

---
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: debug

# Default buffer depth (number of frames in buffer)
buffer_depth: 6

# Default core assignments
cpu_affinity: [0,1,2,3,8,9,10,11,16,17,18,19,24,25,26,27]

packets_per_frame: 32768
voltage_freq: 16
num_dishes: 512
num_elements: 1024
num_local_freq: 2
sub_integration_ntime: 16384
samples_per_data_set: 32768
num_data_sets: 1
block_size: 2
num_blocks: (num_elements / block_size) * (num_elements / block_size + 1) / 2
  # Set this to the size of the packet plus Ethernet/IP/UDP headers
packet_size: 3904
payload_size: 3904
max_rx_pkt_len: 9000


# Global buffer options
use_hugepages: true
zero_new_frames: false

main_pool:
  kotekan_metadata_pool: chimeMetadata
  num_metadata_objects: 128 * buffer_depth
  numa_node: 0

# Buffers
network_capture_buf_0:
  kotekan_buffer: standard
  num_frames: 20 # 425
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0
network_capture_buf_1:
  kotekan_buffer: standard
  num_frames: 20 # 425
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

output_0:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0
output_1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0
split_buf_0:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0
split_buf_1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0
split_buf_2:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0
split_buf_3:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

numa0_memcpy:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

numa0_memcpy_1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy_1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0


same_numa_memcpy_2:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy_3:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy_4:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy_5:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy_6:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

same_numa_memcpy_7:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 0

## Buffers for numa 1
main_pool_numa1:
  kotekan_metadata_pool: chimeMetadata
  num_metadata_objects: 128 * buffer_depth
  numa_node: 1

# Buffers
network_capture_buf_0_numa1:
  kotekan_buffer: standard
  num_frames: 20 # 425
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1
network_capture_buf_1_numa1:
  kotekan_buffer: standard
  num_frames: 20 # 425
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1


output_0_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1
output_1_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1
split_buf_0_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1
split_buf_1_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1
split_buf_2_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1
split_buf_3_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1

numa1_memcpy:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1

numa1_memcpy_1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1

same_numa_memcpy_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1

same_numa_memcpy_1_numa1:
  kotekan_buffer: standard
  num_frames: buffer_depth
  frame_size: packets_per_frame * payload_size
  metadata_pool: main_pool
  numa_node: 1


# See the dpdkCore class docs in dpdkCore.hpp for details
# on the options here.
dpdk:
  kotekan_stage: dpdkCore
  # Format is index = lcore (logical core), value = cpu core
  lcore_cpu_map: [5,6,7, 20,21,22]
  main_lcore_cpu: 4
  num_mem_channels: 4
  # Format is index = lcore, value = array of port IDs
  # so [[0,1],[2,3]] maps lcore 0 to service ports 0 and 1,
  # and lcore 1 to service ports 2 and 3.
  num_workers: 2
  rx_ring_size: 4096
  tx_ring_size: 128
  mbuf_cache_size: 20
  burst_size: 8
  lcore_port_map:
    - [0]
    - [1]
  # One handler must be given per port.
  handlers:
    # This handler is mapped to port 0 which is being handled by lcore 0
    - dpdk_handler: captureHandler
      out_buf: network_capture_buf_0
    - dpdk_handler: captureHandler
      out_buf: network_capture_buf_1
    - dpdk_handler: captureHandler
      out_buf: network_capture_buf_0_numa1
    - dpdk_handler: captureHandler
      out_buf: network_capture_buf_1_numa1


gpu:
    profiling: true
    kernel_path: "../../lib/cuda/kernels/"
    log_profiling: true
    log_level: warn
    commands: &command_list
        - name: cudaInputData
          in_buf: host_voltage
          gpu_mem: voltage
        - name: cudaInputData
          in_buf: host_voltage1
          gpu_mem: voltage1
        - name: cudaSyncInput
        - name: cudaShuffleAstron
          gpu_mem_voltage: voltage
          gpu_mem_ordered_voltage: ordered_voltage
{%- for id in range(16) %}
        - name: cudaCorrelatorAstron
          gpu_mem_voltage: ordered_voltage
          gpu_mem_correlation_matrix: correlation_matrix
{%- endfor %}
        - name: cudaSyncOutput
        - name: cudaOutputData
          in_buf: host_voltage # Metadata transfer from here
          gpu_mem: voltage
          out_buf: host_correlation
        - name: cudaOutputData
          in_buf: host_voltage1 # Metadata transfer from here
          gpu_mem: voltage1
          out_buf: host_correlation1
    buffer_depth: 3
    gpu_0:
        frame_arrival_period: packets_per_frame/3024185*2
        kotekan_stage: cudaProcess
        gpu_id: 0
        commands: *command_list
        in_buffers:
            host_voltage: network_capture_buf_0
            host_voltage1: network_capture_buf_1
        out_buffers:
            host_correlation: output_0
            host_correlation1: output_1
            host_mem_0: split_buf_0
            host_mem_1: split_buf_1
            host_mem_2: split_buf_2
            host_mem_3: split_buf_3
    gpu_1:
        frame_arrival_period: packets_per_frame/3100859*2
        kotekan_stage: cudaProcess
        cpu_affinity: [16, 17, 18, 19]
        gpu_id: 1
        commands: *command_list
        in_buffers:
            host_voltage: network_capture_buf_0_numa1
            host_voltage1: network_capture_buf_1_numa1
        out_buffers:
            host_correlation: output_0_numa1
            host_correlation1: output_1_numa1
            host_mem_0: split_buf_0_numa1
            host_mem_1: split_buf_1_numa1
            host_mem_2: split_buf_2_numa1
            host_mem_3: split_buf_3_numa1

hexDump:
  #kotekan_stage: hexDump
  in_buf: network_capture_buf_1
  len: packet_size

merge_acc_final_0:
  #kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_1
    out_buf: numa1_memcpy

merge_acc_final_1:
  #kotekan_stage: bufferMerge
    cpu_affinity: [16, 17, 18, 19, 23, 24, 25, 26]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_1_numa1
    out_buf: numa0_memcpy

merge_acc_final_2:
  #kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_0
    out_buf: numa1_memcpy_1

merge_acc_final_3:
  #kotekan_stage: bufferMerge
    cpu_affinity: [16, 17, 18, 19, 23, 24, 25, 26]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_0_numa1
    out_buf: numa0_memcpy_1    

# ***** Memcpy code ******

same_memcpy_numa0:
    kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_1
    out_buf: same_numa_memcpy

same_memcpy_numa1:
  #kotekan_stage: bufferMerge
    cpu_affinity: [16, 17, 18, 19, 23, 24, 25, 26]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_0_numa1
    out_buf: same_numa_memcpy_numa1

same_memcpy_numa0_1:
    kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy
    out_buf: same_numa_memcpy_1

same_memcpy_numa0_2:
    kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy_1
    out_buf: same_numa_memcpy_2

same_memcpy_numa0_3:
    kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy_2
    out_buf: same_numa_memcpy_3

same_memcpy_numa0_4:
    #kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy_3
    out_buf: same_numa_memcpy_4

same_memcpy_numa0_5:
    #kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy_4
    out_buf: same_numa_memcpy_5

same_memcpy_numa0_6:
    #kotekan_stage: bufferMerge
    cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy_5
    out_buf: same_numa_memcpy_6

same_memcpy_numa0_7:
    #kotekan_stage: bufferMerge
    cpu_affinity: [0,1,2,3,8, 9, 10, 11, 12, 13, 14, 15]
    log_level: warn
    force_copy: true
    in_bufs:
        - same_numa_memcpy_6
    out_buf: same_numa_memcpy_7      

same_memcpy_numa1_1:
  # kotekan_stage: bufferMerge
    cpu_affinity: [16, 17, 18, 19, 23, 24, 25, 26]
    log_level: warn
    force_copy: true
    in_bufs:
        - output_1_numa1
    out_buf: same_numa_memcpy_1_numa1


buffer_split:
  cpu_affinity: [8, 9, 10, 11, 12, 13, 14, 15]
  kotekan_stage: BufferSplit
  in_buf: output_0
  out_bufs:
    - split_buf_0
    - split_buf_1
    - split_buf_2
    - split_buf_3


buffer_send_0:
    kotekan_stage: bufferSend
    server_ip: 10.1.1.2
    server_port: 11027
    reconnect_time: 20
    log_level: warn
    buf: split_buf_0

buffer_send_0_1:
    kotekan_stage: bufferSend
    server_ip: 10.1.1.2
    server_port: 11027
    reconnect_time: 20
    log_level: warn
    buf: split_buf_1

buffer_send_1:
    kotekan_stage: bufferSend
    server_ip: 10.1.2.2
    server_port: 11028
    reconnect_time: 20
    log_level: warn
    buf: split_buf_2

buffer_send_1_1:
    kotekan_stage: bufferSend
    server_ip: 10.1.2.2
    server_port: 11028
    reconnect_time: 20
    log_level: warn
    buf: split_buf_3


### NUMA 1 data send
buffer_split_numa1:
  kotekan_stage: BufferSplit
  cpu_affinity: [16, 17, 18, 19, 23, 24, 25, 26]  
  in_buf: output_0_numa1
  out_bufs:
    - split_buf_0_numa1
    - split_buf_1_numa1
    - split_buf_2_numa1
    - split_buf_3_numa1

buffer_send_0_numa1:
    kotekan_stage: bufferSend
    server_ip: 10.1.3.2
    server_port: 11029
    reconnect_time: 20
    log_level: warn
    buf: split_buf_0_numa1

buffer_send_0_1_numa1:
    kotekan_stage: bufferSend
    server_ip: 10.1.3.2
    server_port: 11029
    reconnect_time: 20
    log_level: warn
    buf: split_buf_1_numa1

buffer_send_1_numa1:
    kotekan_stage: bufferSend
    server_ip: 10.1.4.2
    server_port: 11030
    reconnect_time: 20
    log_level: warn
    buf: split_buf_2_numa1

buffer_send_1_1_numa1:
    kotekan_stage: bufferSend
    server_ip: 10.1.4.2
    server_port: 11030
    reconnect_time: 20
    log_level: warn
    buf: split_buf_3_numa1
