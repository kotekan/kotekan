##########################################
#
# Test HFBAccumulate stage
#
# Runs the HFBAccumulate stage. Uses testDataGenFloat to generate input frames and the correct output frame.
# The correct output frame should have entries which are equal to: num_frames_to_integrate x test_value
#
##########################################
---
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: info
buffer_depth: 2
baseband_buffer_depth: 120  # 48Gb, 15s buffer.
cpu_affinity: [2,3,8,9]

# Constants
sizeof_float: 4
sizeof_int: 4
num_frb_total_beams: 1024
num_local_freq: 1
factor_upchan: 128
downsample_time: 3
num_frames_to_integrate: 8
good_samples_threshold: 0.50
test_value: 2
samples_per_data_set: 49152

dataset_manager:
  use_dataset_broker: False
  ds_broker_host: "127.0.0.1"
  ds_broker_port: 12050

# Pool
main_pool:
  kotekan_metadata_pool: chimeMetadata
  num_metadata_objects: 30 * buffer_depth + 5 * baseband_buffer_depth

hfb_pool:
  kotekan_metadata_pool: HFBMetadata
  num_metadata_objects: 30 * buffer_depth + 5 * baseband_buffer_depth

# Buffers
cpu_hfb_output_buffers:
    num_frames: buffer_depth
    frame_size: factor_upchan * num_frb_total_beams * sizeof_float
    metadata_pool: main_pool
    beamform_hfb_input_buffer_0:
        num_frames: num_frames_to_integrate
        kotekan_buffer: standard
    beamform_hfb_integrate_buffer_0:
        kotekan_buffer: standard

hfb_output_buffers:
    num_frames: buffer_depth
    metadata_pool: main_pool
    beamform_hfb_output_buffer_0:
        metadata_pool: hfb_pool
        kotekan_buffer: hfb
    beamform_hfb_sum_test_buffer_0:
        kotekan_buffer: hfb

lost_samples_buffer:
    kotekan_buffer: standard
    num_frames: 2 * buffer_depth
    frame_size: samples_per_data_set
    metadata_pool: main_pool

compressed_lost_samples_buffer:
    kotekan_buffer: standard
    num_frames: 2 * buffer_depth
    frame_size: samples_per_data_set / (factor_upchan * downsample_time) * sizeof_int
    metadata_pool: main_pool

# Generate input data for HFBAccumulate stage
gen_input_data:
  type: const
  first_frame_index: 21
  gen_all_const_data: true
  test_data_gen_0:
    value: test_value
    kotekan_stage: testDataGenFloat
    network_out_buf: beamform_hfb_input_buffer_0
  test_data_gen_lost_samples:
    value: 0
    kotekan_stage: testDataGen
    out_buf: lost_samples_buffer

# Generate expected output data of HFBAccumulate stage
gen_output_data:
  type: const
  value: test_value * num_frames_to_integrate
  test_data_gen_0:
    kotekan_stage: testDataGenFloat
    network_out_buf: beamform_hfb_sum_test_buffer_0

gen_missing_frames:
  missing_frames: [0, 1, 4, 7]
  TestDropFrames:
    kotekan_stage: TestDropFrames
    log_level: debug
    in_buf: beamform_hfb_input_buffer_0
    out_buf: beamform_hfb_integrate_buffer_0

compress_lost_samples:
  kotekan_stage: compressLostSamples
  compression_factor: factor_upchan * downsample_time
  zero_all_in_group: true
  in_buf: lost_samples_buffer
  out_buf: compressed_lost_samples_buffer

# Run stage under test
hyper_fine_beam:
  integrate_hfb_data:
    kotekan_stage: HFBAccumulate
    log_level: debug
    hfb_input_buf: beamform_hfb_integrate_buffer_0
    compressed_lost_samples_buf: compressed_lost_samples_buffer
    hfb_output_buf: beamform_hfb_output_buffer_0
      
# Check output of stage is correct
check_data:
  hfb_data_check_0:
    num_frames_to_test: 5
    kotekan_stage: testDataCheckFloat
    first_buf : beamform_hfb_sum_test_buffer_0
    second_buf: beamform_hfb_output_buffer_0
