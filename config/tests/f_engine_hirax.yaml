##########################################
#
# F-Engine Data Generator
#
##########################################
---
type: config
log_level: debug   # info
cpu_affinity: [0,1,2,3,4,5,6,7]
buffer_depth: 4
kernel_path: "lib/cuda/kernels"

frame_arrival_period: num_samples_per_frame / adc_frequency

sizeof_uint8: 1
sizeof_uint16: 2
sizeof_uint32: 4
sizeof_uint64: 8
sizeof_int8: 1
sizeof_int16: 2
sizeof_int32: 4
sizeof_int64: 8
sizeof_float16: 2
sizeof_float32: 4
sizeof_float64: 8

# Basic constants
num_components: 2
num_polarizations: 2

# F-Engine simulator: Sky
source_amplitude: 1.0
# source_frequency: 400.0e6 + n * 0.390625e6 # [Hz]
source_frequency: 400.0e6 + 0 * 0.390625e6 # [Hz]
source_position_ew: 0.02        # east-west
source_position_ns: 0.03        # north-south

# F-Engine simulator: Dishes
num_dish_locations_ew: 16
num_dish_locations_ns: 16
num_dish_locations: num_dish_locations_ew * num_dish_locations_ns
dish_separation_ew: 6.5         # [m] east-west
dish_separation_ns: 8.5         # [m] north-south
num_dishes: 256

dish_indices: [
      0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,
     16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
     32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
     48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63,
     64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,
     80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95,
     96, 97, 98, 99,100,101,102,103,104,105,106,107,108,109,110,111,
    112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,
    128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,
    144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,
    160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,
    176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,
    192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,
    208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,
    224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,
    240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,
]

# F-Engine simulator: ADC
adc_frequency: 1.6e+9           # [Hz]
num_samples_per_frame: 2048

# F-Engine simulator: FT (PFB)
num_taps: 4
num_frequencies: 64             # how many frequencies to keep
# The frequency channels we keep.
#     A channel's frequency is   freq = channel * adc_frequency / num_samples_per_frame
#     Note that   channel = freq = 0   is the DC channel.
#     There are 2.56 channels per MHz, with a channel width of 390625 Hz.
# (These particular channels were chosen with a fixed step size between these channel boundaries.)
frequency_channels: [
    1024, 1040, 1056, 1072, 1088, 1104, 1120, 1136, 1152, 1168, 1184, 1200, 1216, 1232, 1248, 1264,
    1280, 1296, 1312, 1328, 1344, 1360, 1376, 1392, 1408, 1424, 1440, 1456, 1472, 1488, 1504, 1520,
    1536, 1552, 1568, 1584, 1600, 1616, 1632, 1648, 1664, 1680, 1696, 1712, 1728, 1744, 1760, 1776,
    1792, 1808, 1824, 1840, 1856, 1872, 1888, 1904, 1920, 1936, 1952, 1968, 1984, 2000, 2016, 2032,
]

num_times: 2048                 #TODO 32768

# Baseband beamformer setup
# TODO: rename `P`, `Q` to `ew`, `ns`
bb_num_beams_P: 4
bb_num_beams_Q: 4
# TODO: rename `x`, `y` to `ew`, `ns`
bb_beam_separation_x: 0.015        # east-west
bb_beam_separation_y: 0.015        # north-south
bb_num_beams: bb_num_beams_P * bb_num_beams_Q

# Upchannelizer setup
# TODO: Remove this
upchannelization_factor: 16

# This mapping was suggested by Seth Siegel
# dm_750_tint_1.0_gamma_0.0:
#   fbound:
#   - 800.00
#   - 800.00
#   - 741.61
#   - 574.77
#   - 404.19
#   nbeam: 1963
#   tsample: 1.11
# 
# dm_2000_tint_1.0_gamma_0.0:
#   fbound:
#   - 800.00
#   - 800.00
#   - 800.00
#   - 739.42
#   - 557.05
#   nbeam: 1545
#   tsample: 1.67
# 
# population_chimefrb_gamma_0.0:
#   fbound:
#   - 800.00
#   - 800.00
#   - 687.23
#   - 478.79
#   nbeam: 2359
#   tsample: 1.02

upchannelization_factor_mapping:
    # - 0: 32
    # - 557.05: 16
    # - 739.42: 8
    # - 800.00: 4
    # - 800.00: 2
    # - 800.00: 1
    -    0: 32                  # Fmin = 0
    - 1426: 16                  # Fmin = 26
    - 1893:  8                  # Fmin = 55
    - 2048:  4                  # Fmin = 64
    - 2048:  2                  # Fmin = 64
    - 2048:  1                  # Fmin = 64

# The GPU-local (not global) channel index range for each upchannelization factor
# actual = 26, scaled = 832
upchan_U32_max_num_channels: 1024
upchan_U32_min_channel: 0
upchan_U32_max_channel: 26
upchan_U32_min_output_channel: upchan_all_min_output_channel
upchan_U32_max_output_channel: upchan_U32_min_output_channel + (upchan_U32_max_channel - upchan_U32_min_channel) * 32
# actual = 19, scaled = 304
upchan_U16_max_num_channels: 512
upchan_U16_min_channel: 26
upchan_U16_max_channel: 55
upchan_U16_min_output_channel: upchan_U32_max_output_channel
upchan_U16_max_output_channel: upchan_U16_min_output_channel + (upchan_U16_max_channel - upchan_U16_min_channel) * 16
# actual = 9, scaled = 72
upchan_U8_max_num_channels: 128
upchan_U8_min_channel: 55
upchan_U8_max_channel: 64
upchan_U8_min_output_channel: upchan_U16_max_output_channel
upchan_U8_max_output_channel: upchan_U8_min_output_channel + (upchan_U8_max_channel - upchan_U8_min_channel) * 8
# actual = 0, scaled = 0
upchan_U4_max_num_channels: 0
upchan_U4_min_channel: 64
upchan_U4_max_channel: 64
upchan_U4_min_output_channel: upchan_U8_max_output_channel
upchan_U4_max_output_channel: upchan_U4_min_output_channel + (upchan_U4_max_channel - upchan_U4_min_channel) * 4
# actual = 0, scaled = 0
upchan_U2_max_num_channels: 0
upchan_U2_min_channel: 64
upchan_U2_max_channel: 64
upchan_U2_min_output_channel: upchan_U4_max_output_channel
upchan_U2_max_output_channel: upchan_U2_min_output_channel + (upchan_U2_max_channel - upchan_U2_min_channel) * 2
# actual = 0, scaled = 0
upchan_U1_max_num_channels: 0
upchan_U1_min_channel: 64
upchan_U1_max_channel: 64
upchan_U1_min_output_channel: upchan_U2_max_output_channel
upchan_U1_max_output_channel: upchan_U1_min_output_channel + (upchan_U1_max_channel - upchan_U1_min_channel) * 1

upchan_all_max_num_output_channels: 1664
upchan_all_min_output_channel: 0
upchan_all_max_output_channel: upchan_U1_max_output_channel

# FRB beamformer setup
frb_downsampling_factor: 256 / upchannelization_factor
# cudaQuantize requires `frb_num_output_times` to be a multiple of 256
frb_num_output_times: 256
# TODO: remove
frb_num_beams_P: 2 * num_dish_locations_ns
frb_num_beams_Q: 2 * num_dish_locations_ew

frb_num_beams_ns: 64
frb_num_beams_ew: 40
frb_num_beams: frb_num_beams_ns * frb_num_beams_ew
# Opening angle is specified in radians (here 2 degrees)
frb_bore_z: 49.3208 * 3.141592653589793 / 180
frb_opening_angle_ns: 2.0 * 3.141592653589793 / 180
frb_opening_angle_ew: 2.0 * 3.141592653589793 / 180

frb_chunk_size: 256

CONTINUE HERE

# Pool:
main_pool:
    kotekan_metadata_pool: chordMetadata
    num_metadata_objects: 10 * buffer_depth

# Buffers
host_bb_phase_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_components * num_dishes * bb_num_beams * num_polarizations * num_frequencies
    metadata_pool: main_pool

host_bb_shift_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: sizeof_int32 * bb_num_beams * num_polarizations * num_frequencies
    metadata_pool: main_pool

host_upchan_gain_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: sizeof_float16 * num_frequencies * upchannelization_factor
    metadata_pool: main_pool

host_frb_phase_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: sizeof_float16 * num_components * num_dish_locations_ns * num_dish_locations_ew * num_frequencies * upchannelization_factor * num_polarizations
    metadata_pool: main_pool

host_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * num_frequencies * num_times
    metadata_pool: main_pool
host_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * num_frequencies * num_times
    metadata_pool: main_pool

host_expected_bb_beams_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_times * num_polarizations * num_frequencies * bb_num_beams
    metadata_pool: main_pool

host_expected_frb_beams_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: sizeof_float16 * frb_num_beams_P * frb_num_beams_Q * num_frequencies * upchannelization_factor * frb_num_output_times
    metadata_pool: main_pool

host_bb_beams_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_times * num_polarizations * num_frequencies * bb_num_beams
    metadata_pool: main_pool

host_upchan_voltage_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_dishes * num_polarizations * (num_frequencies * upchannelization_factor) * (num_times / upchannelization_factor)
    metadata_pool: main_pool
host_upchan_voltage_ringbuffer:
    kotekan_buffer: ring
    ring_buffer_size: buffer_depth * num_dishes * num_polarizations * (num_frequencies * upchannelization_factor) * (num_times / upchannelization_factor)
    metadata_pool: main_pool

host_frb_beams_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: sizeof_float16 * frb_num_beams_P * frb_num_beams_Q * num_frequencies * upchannelization_factor * frb_num_output_times
    metadata_pool: main_pool
host_frb_beams_ringbuffer:
    kotekan_buffer: ring
    num_frames: buffer_depth
    ring_buffer_size: buffer_depth * sizeof_float16 * frb_num_beams_P * frb_num_beams_Q * num_frequencies * upchannelization_factor * frb_num_output_times
    metadata_pool: main_pool

# Stages
run_fengine:
    kotekan_stage: FEngine
    num_frames: 20
    E_buffer: host_voltage_buffer
    A_buffer: host_bb_phase_buffer
    s_buffer: host_bb_shift_buffer
    J_buffer: host_expected_bb_beams_buffer
    G_buffer: host_upchan_gain_buffer
    W_buffer: host_frb_phase_buffer
    I_buffer: host_expected_frb_beams_buffer

run_send_voltage:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_buffer_in: host_voltage_buffer
        out_buffers:
            host_voltage_ringbuffer_out: host_voltage_ringbuffer
        commands:
        - name: cudaCopyToRingbuffer
          input_size: num_dishes * num_polarizations * num_frequencies * num_times
          ring_buffer_size: buffer_depth * input_size
          in_buf: host_voltage_buffer_in
          signal_buf: host_voltage_ringbuffer_out
          gpu_mem_output: voltage_buffer

run_bb:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_bb_phase_in: host_bb_phase_buffer
            host_bb_shift_in: host_bb_shift_buffer
        out_buffers:
            host_bb_beams_out: host_bb_beams_buffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_bb_phase_in
          gpu_mem: bb_phase_buffer
        - name: cudaInputData
          do_once: true
          in_buf: host_bb_shift_in
          gpu_mem: bb_shift_buffer
        - name: cudaSyncInput
        - name: cudaBasebandBeamformer_hirax
          in_signal: host_voltage_ringbuffer_in
          gpu_mem_voltage: voltage_buffer
          gpu_mem_phase: bb_phase_buffer
          gpu_mem_output_scaling: bb_shift_buffer
          gpu_mem_formed_beams: bb_beams_buffer
        - name: cudaSyncOutput
        - name: cudaOutputData
          gpu_mem: bb_beams_buffer
          out_buf: host_bb_beams_out

run_upchan:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_voltage_ringbuffer_in: host_voltage_ringbuffer
            host_upchan_gain_buffer_in: host_upchan_gain_buffer
        out_buffers:
            host_upchan_voltage_ringbuffer_out: host_upchan_voltage_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_upchan_gain_buffer_in
          gpu_mem: upchan_gain_buffer
        - name: cudaSyncInput
        - name: cudaUpchannelizer_hirax_U16
          in_signal: host_voltage_ringbuffer_in
          out_signal: host_upchan_voltage_ringbuffer_out
          gpu_mem_input_voltage: voltage_buffer
          gpu_mem_gain: upchan_gain_buffer
          gpu_mem_output_voltage: upchan_voltage_buffer

run_recv_upchan_voltage:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_upchan_voltage_ringbuffer_in: host_upchan_voltage_ringbuffer
        out_buffers:
            host_upchan_voltage_buffer_out: host_upchan_voltage_buffer
        commands:
        - name: cudaCopyFromRingbuffer
          host_signal: host_upchan_voltage_ringbuffer_in
          gpu_mem_input: upchan_voltage_buffer
          output_size: num_dishes * num_polarizations * (num_frequencies * upchannelization_factor) * (num_times / upchannelization_factor)
          ring_buffer_size: buffer_depth * output_size
          out_buf: host_upchan_voltage_buffer_out

run_frb:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_upchan_voltage_ringbuffer_in: host_upchan_voltage_ringbuffer
            host_frb_phase_buffer_in: host_frb_phase_buffer
        out_buffers:
            host_frb_beams_ringbuffer_out: host_frb_beams_ringbuffer
        commands:
        - name: cudaInputData
          do_once: true
          in_buf: host_frb_phase_buffer_in
          gpu_mem: frb_phase_buffer
        - name: cudaSyncInput
        - name: cudaFRBBeamformer_hirax
          in_signal: host_upchan_voltage_ringbuffer_in
          out_signal: host_frb_beams_ringbuffer_out
          gpu_mem_voltage: upchan_voltage_buffer
          gpu_mem_phase: frb_phase_buffer
          gpu_mem_beamgrid: frb_beams_buffer

run_recv_frb_beams:
    gpu_0:
        kotekan_stage: cudaProcess
        gpu_id: 0
        in_buffers:
            host_frb_beams_ringbuffer_in: host_frb_beams_ringbuffer
        out_buffers:
            host_frb_beams_buffer_out: host_frb_beams_buffer
        commands:
        - name: cudaCopyFromRingbuffer
          host_signal: host_frb_beams_ringbuffer_in
          gpu_mem_input: frb_beams_buffer
          output_size: sizeof_float16 * frb_num_beams_P * frb_num_beams_Q * (num_frequencies * upchannelization_factor) * frb_num_output_times
          ring_buffer_size: buffer_depth * output_size
          out_buf: host_frb_beams_buffer_out

write_data:
    base_dir: /tmp/f_engine_hirax
    write_voltage:
        kotekan_stage: asdfFileWrite
        in_buf: host_voltage_buffer
        file_name: voltage
    write_bb_phase:
        kotekan_stage: asdfFileWrite
        in_buf: host_bb_phase_buffer
        file_name: bb_phase
    write_bb_shift:
        kotekan_stage: asdfFileWrite
        in_buf: host_bb_shift_buffer
        file_name: bb_shift
    # write_expected_bb_beams:
    #     kotekan_stage: asdfFileWrite
    #     in_buf: host_expected_bb_beams_buffer
    #     file_name: expected_bb_beams
    write_bb_beams:
        kotekan_stage: asdfFileWrite
        in_buf: host_bb_beams_buffer
        file_name: bb_beams
    write_gain:
        kotekan_stage: asdfFileWrite
        in_buf: host_upchan_gain_buffer
        file_name: upchan_gain
    write_upchan_voltage:
        kotekan_stage: asdfFileWrite
        in_buf: host_upchan_voltage_buffer
        file_name: upchan_voltage
    write_frb_phase:
        kotekan_stage: asdfFileWrite
        in_buf: host_frb_phase_buffer
        file_name: frb_phase
    # write_expected_frb_beams:
    #     kotekan_stage: asdfFileWrite
    #     in_buf: host_expected_frb_beams_buffer
    #     file_name: expected_frb_beams
    write_frb_beams:
        kotekan_stage: asdfFileWrite
        in_buf: host_frb_beams_buffer
        file_name: frb_beams
...
