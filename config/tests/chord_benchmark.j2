##########################################
#
# CHORD correlator "minimum viable pipeline"
#
##########################################
---
type: config
# Logging level can be one of:
# OFF, ERROR, WARN, INFO, DEBUG, DEBUG2 (case insensitive)
# Note DEBUG and DEBUG2 require a build with (-DCMAKE_BUILD_TYPE=Debug)
log_level: info
num_links: 4
num_gpus: 2
cpu_affinity: [0,1,2,3,8,9,10,11,12,13,14,15]
# Use the following map for NUMA1 stages
#cpu_affinity: [16,17,18,19,20,21,22,23]
sizeof_float: 4
sizeof_float16: 2
sizeof_int: 4

voltage_samples: 32768
voltage_freq: 16
num_dishes: 512
num_elements: num_dishes * 2

frame_arrival_period: 0.00000170667 * voltage_samples

# Global buffer options
zero_new_frames: false

packet_size: 3904
payload_size: 3904
max_rx_pkt_len: 4096

n2coarse_sub_integration_ntime: 16384

# Fine visibilities
# NOTE that this divide-by-2 MUST match the hard-coded buffer setup logic in chordMVPSetup
fine_samples: voltage_samples / 2
fine_upchan: 16
n2fine_sub_integration_ntime: 1024

bb_beams: 96

frb_beams: 5000
frb_upchan: 16
# 2048
frb_samples: voltage_samples / frb_upchan
frb_freq: voltage_freq * frb_upchan
dish_grid_size: 24
frb_beam_grid_size: dish_grid_size * 2
frb_time_downsampling: 40

# Number of samples of padding allocated at the front of the voltage arrays
frb_bf_padding: 88

# Max number of samples passed from FRB1 to FRBRechunk
frb_td_max: 52

# FRB Rechunking
frb_td_rechunk: 256

buffer_depth: 2

# data gen:
# num_frames: 100

# Pool
main_pool:
    kotekan_metadata_pool: chimeMetadata
    num_metadata_objects: 15 * buffer_depth * 8

# Buffers

## NUMA 0 voltage buffers ##
host_voltage_buffer_0:
    kotekan_buffer: standard
    use_hugepages: true
    num_frames: buffer_depth * 4
    frame_size: voltage_samples * payload_size
    metadata_pool: main_pool

host_voltage_buffer_1:
    kotekan_buffer: standard
    use_hugepages: true
    num_frames: buffer_depth * 4
    frame_size: voltage_samples * payload_size
    metadata_pool: main_pool

host_voltage_buffer:
    kotekan_buffer: standard
    use_hugepages: true
    num_frames: buffer_depth * 4
    frame_size: voltage_samples * payload_size
    metadata_pool: main_pool


## NUMA 1 voltage buffers ##
{%- for id in range(8) %}
host_voltage_buffer_numa1_{{ id }}:
    kotekan_buffer: standard
    numa_node: 1
    use_hugepages: true
    num_frames: 3
    frame_size: voltage_samples * payload_size
    metadata_pool: main_pool
{%- endfor %}

host_voltage_buffer_numa1:
    kotekan_buffer: standard
    numa_node: 1
    use_hugepages: true
    num_frames: buffer_depth * 2
    frame_size: voltage_samples * payload_size
    metadata_pool: main_pool

## NUMA 0 support buffers ##
host_coarse_correlation_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    use_hugepages: true
    frame_size: voltage_freq * (voltage_samples / n2coarse_sub_integration_ntime) * num_elements * num_elements * 2 * sizeof_int
    metadata_pool: main_pool

{%- for id in range(4) %}
host_coarse_correlation_buffer_split_{{ id }}:
    kotekan_buffer: standard
    num_frames: 4
    use_hugepages: true
    frame_size: voltage_freq * (voltage_samples / n2coarse_sub_integration_ntime) * num_elements * num_elements * 2 * sizeof_int
    metadata_pool: main_pool
{%- endfor %}

host_bb_phase_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: num_elements * voltage_freq * bb_beams * 2
    metadata_pool: main_pool

host_bb_shift_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: voltage_freq * bb_beams * 2 * sizeof_int
    metadata_pool: main_pool

host_bb_beams_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: voltage_samples * bb_beams * voltage_freq * 2
    metadata_pool: main_pool

host_frb_phase_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    frame_size: dish_grid_size * dish_grid_size * frb_freq * 2 * 2 * sizeof_float16
    metadata_pool: main_pool

host_beamquant_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    # / 2 because of int4 outputs.
    frame_size: frb_beams * frb_freq * frb_td_rechunk / 2
    metadata_pool: main_pool

host_beammeanstd_buffer:
    kotekan_buffer: standard
    num_frames: buffer_depth
    # *2*2: 2 for mean,std, 2 for float16
    frame_size: frb_beams * frb_freq * frb_td_rechunk * 2 * 2 / 256
    metadata_pool: main_pool

## NUMA 1 support buffers ##
numa_1_support_buffers:
    numa_node: 1
    host_coarse_correlation_buffer_numa1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        use_hugepages: true
        frame_size: voltage_freq * (voltage_samples / n2coarse_sub_integration_ntime) * num_elements * num_elements * 2 * sizeof_int
        metadata_pool: main_pool

{%- for id in range(4) %}
    host_coarse_correlation_buffer_numa1_split_{{ id }}:
        kotekan_buffer: standard
        num_frames: 4
        use_hugepages: true
        frame_size: voltage_freq * (voltage_samples / n2coarse_sub_integration_ntime) * num_elements * num_elements * 2 * sizeof_int
        metadata_pool: main_pool
{%- endfor %}

    host_bb_phase_buffer_1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        frame_size: num_elements * voltage_freq * bb_beams * 2
        metadata_pool: main_pool

    host_bb_shift_buffer_1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        frame_size: voltage_freq * bb_beams * 2 * sizeof_int
        metadata_pool: main_pool

    host_bb_beams_buffer_1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        frame_size: voltage_samples * bb_beams * voltage_freq * 2
        metadata_pool: main_pool

    host_frb_phase_buffer_1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        frame_size: dish_grid_size * dish_grid_size * frb_freq * 2 * 2 * sizeof_float16
        metadata_pool: main_pool

    host_beamquant_buffer_1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        # / 2 because of int4 outputs.
        frame_size: frb_beams * frb_freq * frb_td_rechunk / 2
        metadata_pool: main_pool

    host_beammeanstd_buffer_1:
        kotekan_buffer: standard
        num_frames: buffer_depth
        # *2*2: 2 for mean,std, 2 for float16
        frame_size: frb_beams * frb_freq * frb_td_rechunk * 2 * 2 / 256
        metadata_pool: main_pool


# See the dpdkCore class docs in dpdkCore.hpp for details
# on the options here.
dpdk:
  kotekan_stage: dpdkCore
  packet_size: 3904
  log_level: info
  # Format is index = lcore (logical core), value = cpu core
  lcore_cpu_map: [5,6,7,37,38,39]
  main_lcore_cpu: 4
  num_mem_channels: 4
  # Format is index = lcore, value = array of port IDs
  # so [[0,1],[2,3]] maps lcore 0 to service ports 0 and 1,
  # and lcore 1 to service ports 2 and 3.
  num_workers: 2
  rx_ring_size: 4096
  tx_ring_size: 128
  init_mem_alloc: 8196,8196
  mbuf_cache_size: 20
  burst_size: 8
  lcore_port_map:
    - [0]
  # One handler must be given per port.
  handlers:
    # This handler is mapped to port 0 which is being handled by lcore 0
    - dpdk_handler: captureHandler
      out_buf: host_voltage_buffer_0
    - dpdk_handler: captureHandler
      out_buf: host_voltage_buffer_1
#{%- for id in range(8) %}
#    - dpdk_handler: captureHandler
#      out_buf: host_voltage_buffer_numa1_{{ id }}
#{%- endfor %}

hexDump:
    #kotekan_stage: hexDump
    in_buf: host_voltage_buffer_numa1_3
    len: 8192
    offset: 8192 * 50

hexDump_1:
    #kotekan_stage: hexDump
    in_buf: host_voltage_buffer
    len: 8192
    offset: 8192 * 50

merge_voltage:
    kotekan_stage: bufferMerge
    force_copy: false
    in_bufs:
        - host_voltage_buffer_0
        - host_voltage_buffer_1
    out_buf: host_voltage_buffer

merge_voltage_1:
    kotekan_stage: bufferMerge
    cpu_affinity: [16,17,18,19,20,21,22,23]
    force_copy: false
    in_bufs:
{%- for id in range(8) %}
        - host_voltage_buffer_numa1_{{ id }}
{%- endfor %}
    out_buf: host_voltage_buffer_numa1

gen_frb_phase:
    kotekan_stage: testDataGen
    type: constf16
    value: 2.0
    out_buf: host_frb_phase_buffer

gen_bb_phase:
    kotekan_stage: testDataGen
    type: const
    value: 0x20
    out_buf: host_bb_phase_buffer

gen_bb_shift:
    kotekan_stage: testDataGen
    type: const32
    value: 0x4
    out_buf: host_bb_shift_buffer

# NUMA1 generator functions
gen_frb_phase_1:
    kotekan_stage: testDataGen
    cpu_affinity: [16,17,18,19,20,21,22,23]
    type: constf16
    value: 2.0
    out_buf: host_frb_phase_buffer_1

gen_bb_phase_1:
    kotekan_stage: testDataGen
    cpu_affinity: [16,17,18,19,20,21,22,23]
    type: const
    value: 0x20
    out_buf: host_bb_phase_buffer_1

gen_bb_shift_1:
    kotekan_stage: testDataGen
    cpu_affinity: [16,17,18,19,20,21,22,23]
    type: const32
    value: 0x4
    out_buf: host_bb_shift_buffer_1


gpu:
    log_level: info
    profiling: true
    log_profiling: false
    kernel_path: "../../lib/cuda/kernels/"
    # More streams -- for FRBBeamReformer
    num_cuda_streams: 4
    #num_cuda_streams: 6
    buffer_depth: 4
    commands: &command_list
    - name: cudaInputData
      in_buf: host_voltage
      gpu_mem: voltage
    - name: cudaSyncInput
    gpu_0:
        #kotekan_stage: cudaProcess
        gpu_id: 0
        log_profiling: false
        commands: *command_list
        in_buffers:
            host_voltage: host_voltage_buffer
            host_voltage_0: host_voltage_buffer_0
            host_voltage_1: host_voltage_buffer_1
        out_buffers:
            host_coarse_correlation: host_coarse_correlation_buffer
            host_coarse_correlation_split_0: host_coarse_correlation_buffer_split_0
            host_coarse_correlation_split_1: host_coarse_correlation_buffer_split_1
            host_coarse_correlation_split_2: host_coarse_correlation_buffer_split_2
            host_coarse_correlation_split_3: host_coarse_correlation_buffer_split_3
            host_bb_beams: host_bb_beams_buffer
            host_beamquant: host_beamquant_buffer
            host_beammeanstd: host_beammeanstd_buffer
    gpu_1:
        #kotekan_stage: cudaProcess
        gpu_id: 1
        log_profiling: false
        commands: *command_list
        in_buffers:
            host_voltage: host_voltage_buffer_numa1
{%- for id in range(8) %}
            host_voltage_numa1_{{ id }}: host_voltage_buffer_numa1_{{ id }}
{%- endfor %}
            host_bb_phase: host_bb_phase_buffer_1
            host_bb_shift: host_bb_shift_buffer_1
            host_frb_phase: host_frb_phase_buffer_1
        out_buffers:
            host_coarse_correlation: host_coarse_correlation_buffer_numa1
            host_coarse_correlation_split_numa1_split_0: host_coarse_correlation_buffer_numa1_split_0
            host_coarse_correlation_split_numa1_split_1: host_coarse_correlation_buffer_numa1_split_1
            host_coarse_correlation_split_numa1_split_2: host_coarse_correlation_buffer_numa1_split_2
            host_coarse_correlation_split_numa1_split_3: host_coarse_correlation_buffer_numa1_split_3
            host_bb_beams: host_bb_beams_buffer_1
            host_beamquant: host_beamquant_buffer_1
            host_beammeanstd: host_beammeanstd_buffer_1


frb_beamformer_dish_layout: [0, 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0, 10, 0, 11, 0, 12, 0, 13, 0, 14, 0, 15, 0, 16, 0, 17, 0, 18, 0, 19, 0, 20, 0, 21, 0, 22, 0, 23, 1, 0, 1, 1, 1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 7, 1, 8, 1, 9, 1, 10, 1, 11, 1, 12, 1, 13, 1, 14, 1, 15, 1, 16, 1, 17, 1, 18, 1, 19, 1, 20, 1, 21, 1, 22, 1, 23, 2, 0, 2, 1, 2, 2, 2, 3, 2, 4, 2, 5, 2, 6, 2, 7, 2, 8, 2, 9, 2, 10, 2, 11, 2, 12, 2, 13, 2, 14, 2, 15, 2, 16, 2, 17, 2, 18, 2, 19, 2, 20, 2, 21, 2, 22, 2, 23, 3, 0, 3, 1, 3, 2, 3, 3, 3, 4, 3, 5, 3, 6, 3, 7, 3, 8, 3, 9, 3, 10, 3, 11, 3, 12, 3, 13, 3, 14, 3, 15, 3, 16, 3, 17, 3, 18, 3, 19, 3, 20, 3, 21, 3, 22, 3, 23, 4, 0, 4, 1, 4, 2, 4, 3, 4, 4, 4, 5, 4, 6, 4, 7, 4, 8, 4, 9, 4, 10, 4, 11, 4, 12, 4, 13, 4, 14, 4, 15, 4, 16, 4, 17, 4, 18, 4, 19, 4, 20, 4, 21, 4, 22, 4, 23, 5, 0, 5, 1, 5, 2, 5, 3, 5, 4, 5, 5, 5, 6, 5, 7, 5, 8, 5, 9, 5, 10, 5, 11, 5, 12, 5, 13, 5, 14, 5, 15, 5, 16, 5, 17, 5, 18, 5, 19, 5, 20, 5, 21, 5, 22, 5, 23, 6, 0, 6, 1, 6, 2, 6, 3, 6, 4, 6, 5, 6, 6, 6, 7, 6, 8, 6, 9, 6, 10, 6, 11, 6, 12, 6, 13, 6, 14, 6, 15, 6, 16, 6, 17, 6, 18, 6, 19, 6, 20, 6, 21, 6, 22, 6, 23, 7, 0, 7, 1, 7, 2, 7, 3, 7, 4, 7, 5, 7, 6, 7, 7, 7, 8, 7, 9, 7, 10, 7, 11, 7, 12, 7, 13, 7, 14, 7, 15, 7, 16, 7, 17, 7, 18, 7, 19, 7, 20, 7, 21, 7, 22, 7, 23, 8, 0, 8, 1, 8, 2, 8, 3, 8, 4, 8, 5, 8, 6, 8, 7, 8, 8, 8, 9, 8, 10, 8, 11, 8, 12, 8, 13, 8, 14, 8, 15, 8, 16, 8, 17, 8, 18, 8, 19, 8, 20, 8, 21, 8, 22, 8, 23, 9, 0, 9, 1, 9, 2, 9, 3, 9, 4, 9, 5, 9, 6, 9, 7, 9, 8, 9, 9, 9, 10, 9, 11, 9, 12, 9, 13, 9, 14, 9, 15, 9, 16, 9, 17, 9, 18, 9, 19, 9, 20, 9, 21, 9, 22, 9, 23, 10, 0, 10, 1, 10, 2, 10, 3, 10, 4, 10, 5, 10, 6, 10, 7, 10, 8, 10, 9, 10, 10, 10, 11, 10, 12, 10, 13, 10, 14, 10, 15, 10, 16, 10, 17, 10, 18, 10, 19, 10, 20, 10, 21, 10, 22, 10, 23, 11, 0, 11, 1, 11, 2, 11, 3, 11, 4, 11, 5, 11, 6, 11, 7, 11, 8, 11, 9, 11, 10, 11, 11, 11, 12, 11, 13, 11, 14, 11, 15, 11, 16, 11, 17, 11, 18, 11, 19, 11, 20, 11, 21, 11, 22, 11, 23, 12, 0, 12, 1, 12, 2, 12, 3, 12, 4, 12, 5, 12, 6, 12, 7, 12, 8, 12, 9, 12, 10, 12, 11, 12, 12, 12, 13, 12, 14, 12, 15, 12, 16, 12, 17, 12, 18, 12, 19, 12, 20, 12, 21, 12, 22, 12, 23, 13, 0, 13, 1, 13, 2, 13, 3, 13, 4, 13, 5, 13, 6, 13, 7, 13, 8, 13, 9, 13, 10, 13, 11, 13, 12, 13, 13, 13, 14, 13, 15, 13, 16, 13, 17, 13, 18, 13, 19, 13, 20, 13, 21, 13, 22, 13, 23, 14, 0, 14, 1, 14, 2, 14, 3, 14, 4, 14, 5, 14, 6, 14, 7, 14, 8, 14, 9, 14, 10, 14, 11, 14, 12, 14, 13, 14, 14, 14, 15, 14, 16, 14, 17, 14, 18, 14, 19, 14, 20, 14, 21, 14, 22, 14, 23, 15, 0, 15, 1, 15, 2, 15, 3, 15, 4, 15, 5, 15, 6, 15, 7, 15, 8, 15, 9, 15, 10, 15, 11, 15, 12, 15, 13, 15, 14, 15, 15, 15, 16, 15, 17, 15, 18, 15, 19, 15, 20, 15, 21, 15, 22, 15, 23, 16, 0, 16, 1, 16, 2, 16, 3, 16, 4, 16, 5, 16, 6, 16, 7, 16, 8, 16, 9, 16, 10, 16, 11, 16, 12, 16, 13, 16, 14, 16, 15, 16, 16, 16, 17, 16, 18, 16, 19, 16, 20, 16, 21, 16, 22, 16, 23, 17, 0, 17, 1, 17, 2, 17, 3, 17, 4, 17, 5, 17, 6, 17, 7, 17, 8, 17, 9, 17, 10, 17, 11, 17, 12, 17, 13, 17, 14, 17, 15, 17, 16, 17, 17, 17, 18, 17, 19, 17, 20, 17, 21, 17, 22, 17, 23, 18, 0, 18, 1, 18, 2, 18, 3, 18, 4, 18, 5, 18, 6, 18, 7, 18, 8, 18, 9, 18, 10, 18, 11, 18, 12, 18, 13, 18, 14, 18, 15, 18, 16, 18, 17, 18, 18, 18, 19, 18, 20, 18, 21, 18, 22, 18, 23, 19, 0, 19, 1, 19, 2, 19, 3, 19, 4, 19, 5, 19, 6, 19, 7, 19, 8, 19, 9, 19, 10, 19, 11, 19, 12, 19, 13, 19, 14, 19, 15, 19, 16, 19, 17, 19, 18, 19, 19, 19, 20, 19, 21, 19, 22, 19, 23, 20, 0, 20, 1, 20, 2, 20, 3, 20, 4, 20, 5, 20, 6, 20, 7, 20, 8, 20, 9, 20, 10, 20, 11, 20, 12, 20, 13, 20, 14, 20, 15, 20, 16, 20, 17, 20, 18, 20, 19, 20, 20, 20, 21, 20, 22, 20, 23, 21, 0, 21, 1, 21, 2, 21, 3, 21, 4, 21, 5, 21, 6, 21, 7, 21, 8, 21, 9, 21, 10, 21, 11, 21, 12, 21, 13, 21, 14, 21, 15, 21, 16, 21, 17, 21, 18, 21, 19, 21, 20, 21, 21, 21, 22, 21, 23, 22, 0, 22, 1, 22, 2, 22, 3, 22, 4, 22, 5, 22, 6, 22, 7, 22, 8, 22, 9, 22, 10, 22, 11, 22, 12, 22, 13, 22, 14, 22, 15, 22, 16, 22, 17, 22, 18, 22, 19, 22, 20, 22, 21, 22, 22, 22, 23, 23, 0, 23, 1, 23, 2, 23, 3, 23, 4, 23, 5, 23, 6, 23, 7, 23, 8, 23, 9, 23, 10, 23, 11, 23, 12, 23, 13, 23, 14, 23, 15, 23, 16, 23, 17, 23, 18, 23, 19, 23, 20, 23, 21, 23, 22, 23, 23]

## NUMA0 Buffer send ##
buffer_split:
  kotekan_stage: BufferSplit
  in_buf: host_coarse_correlation_buffer
  out_bufs:
    - host_coarse_correlation_buffer_split_0
    - host_coarse_correlation_buffer_split_1
    - host_coarse_correlation_buffer_split_2
    - host_coarse_correlation_buffer_split_3

buffer_send_0:
    kotekan_stage: bufferSend
    server_ip: 10.1.1.2
    server_port: 11027
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_split_0

buffer_send_1:
    kotekan_stage: bufferSend
    server_ip: 10.1.1.2
    server_port: 11027
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_split_1

buffer_send_2:
    kotekan_stage: bufferSend
    server_ip: 10.1.2.2
    server_port: 11028
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_split_2

buffer_send_3:
    kotekan_stage: bufferSend
    server_ip: 10.1.2.2
    server_port: 11028
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_split_3

## NUMA1 Buffer send ##
buffer_split_numa1:
  kotekan_stage: BufferSplit
  cpu_affinity: [16,17,18,19,20,21,22,23]
  in_buf: host_coarse_correlation_buffer_numa1
  out_bufs:
    - host_coarse_correlation_buffer_numa1_split_0
    - host_coarse_correlation_buffer_numa1_split_1
    - host_coarse_correlation_buffer_numa1_split_2
    - host_coarse_correlation_buffer_numa1_split_3

buffer_send_numa1_0:
    kotekan_stage: bufferSend
    cpu_affinity: [16,17,18,19,20,21,22,23]
    server_ip: 10.1.3.2
    server_port: 11029
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_numa1_split_0

buffer_send_numa1_1:
    kotekan_stage: bufferSend
    cpu_affinity: [16,17,18,19,20,21,22,23]
    server_ip: 10.1.3.2
    server_port: 11029
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_numa1_split_1

buffer_send_numa1_2:
    kotekan_stage: bufferSend
    cpu_affinity: [16,17,18,19,20,21,22,23]
    server_ip: 10.1.4.2
    server_port: 11030
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_numa1_split_2

buffer_send_numa1_3:
    kotekan_stage: bufferSend
    cpu_affinity: [16,17,18,19,20,21,22,23]
    server_ip: 10.1.4.2
    server_port: 11030
    reconnect_time: 20
    log_level: warn
    buf: host_coarse_correlation_buffer_numa1_split_3