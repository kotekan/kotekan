# NOTE:
# When we build kotekan on the Github VM we need to take into account a few
# limitations: first we can't lock very much memory so we need to disable
# mlock the buffers. Second, the VMs run across a range of CPU
# architectures (from Haswell to Skylake-AVX512 as of 2020/03). Because our
# use of ccache shares compiled objects we must target our build for the
# lowest architecture available or we will occasionally crash with SIGILL
# when a newer instruction is called than is available.  

name: kotekan-ci-test
on:
  pull_request:
    branches:
    - develop
    - master
  push:
    branches:
    - develop
    - master

env:
  IMG_CORE: docker.pkg.github.com/kotekan/kotekan/kotekan-core
  IMG_CI: docker.pkg.github.com/kotekan/kotekan/kotekan-ci
  IMG_IWYU: docker.pkg.github.com/kotekan/kotekan/kotekan-iwyu
  PYTEST_TIMEOUT: 60

jobs:
  # Build the docker image
  build-docker-1804:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/docker/Dockerfile

    - name: Extract branch name
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.':
      run: >
        if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
        else
          echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
        fi
      id: extract_branch

    - name: Pull docker image
      run: |
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker pull --disable-content-trust ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }}
        echo ::set-output name=status::success
      if: steps.git-diff-docker.outputs.diff
      continue-on-error: true
      id: pull-docker
    - name: Pull docker image for develop branch
      run: |
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker pull --disable-content-trust ${IMG_CORE}:develop
      if: steps.git-diff-docker.outputs.diff != '' && steps.pull-docker.outputs.status != 'success'
    - name: Build core docker image
      run: |
        docker build --cache-from=rocm/dev-ubuntu-18.04,${IMG_CORE} -t ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }} - < tools/docker/Dockerfile
      if: steps.git-diff-docker.outputs.diff
    - name: Push docker image
      run: |
        docker push ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }}
      if: steps.git-diff-docker.outputs.diff

  # Build the docker image
  build-docker-2204:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check if CI Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker-CI
      with:
        PATTERNS: tools/CI/Dockerfile

    - name: Extract branch name
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.':
      run: >
        if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
        else
          echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
        fi
      id: extract_branch

    - name: Pull docker image
      run: |
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker pull --disable-content-trust ${IMG_CI}:${{ steps.extract_branch.outputs.branch }}
        echo ::set-output name=status::success
      if: steps.git-diff-docker-CI.outputs.diff
      continue-on-error: true
      id: pull-docker
    - name: Pull docker image for develop branch
      run: |
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker pull --disable-content-trust ${IMG_CI}:develop
      if: steps.git-diff-docker-CI.outputs.diff != '' && steps.pull-docker.outputs.status != 'success'
      continue-on-error: true
    - name: Build CI docker image
      run: |
        docker build --cache-from=rocm/dev-ubuntu-22.04,${IMG_CI} -t ${IMG_CI}:${{ steps.extract_branch.outputs.branch }} - < tools/CI/Dockerfile
      if: steps.git-diff-docker-CI.outputs.diff
    - name: Push docker image
      run: |
        docker push ${IMG_CI}:${{ steps.extract_branch.outputs.branch }}
      if: steps.git-diff-docker-CI.outputs.diff

  # Build the iwyu docker image
  build-docker-iwyu:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Check if iwyu Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker-iwyu
      with:
        PATTERNS: tools/iwyu/docker/Dockerfile

    - name: Extract branch name
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.':
      run: >
        if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
        else
          echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
        fi
      id: extract_branch

    - name: Pull IWYU docker image
      run: |
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker pull --disable-content-trust ${IMG_IWYU}:${{ steps.extract_branch.outputs.branch }}
        echo ::set-output name=status::success
      if: steps.git-diff-docker-iwyu.outputs.diff
      continue-on-error: true
      id: pull-docker-iwyu
    - name: Pull docker image for develop branch
      run: |
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker pull --disable-content-trust ${IMG_IWYU}:develop
      if: steps.git-diff-docker-iwyu.outputs.diff != '' && steps.pull-docker-iwyu.outputs.status != 'success'
    - name: Build iwyu docker image
      run: >
        docker build --cache-from=rocm/dev-ubuntu-18.04,${IMG_CORE},${IMG_IWYU} -t ${IMG_IWYU}:${{ steps.extract_branch.outputs.branch }} - < tools/iwyu/docker/Dockerfile
      if: steps.git-diff-docker-iwyu.outputs.diff
    - name: Push docker image
      run: |
        docker push ${IMG_IWYU}:${{ steps.extract_branch.outputs.branch }}
      if: steps.git-diff-docker-iwyu.outputs.diff

  # Build a basic version of kotekan
  build-base:
    runs-on: ubuntu-latest
    needs: build-docker-1804

    steps:
    - uses: actions/checkout@v2

    - name: Cache ccache files
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ccache-base-build-${{ github.sha }}
        restore-keys: |
          ccache-base-build
          ccache-full-build

    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/docker/Dockerfile

    - name: Extract branch name for docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Build kotekan
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" ccache -s
        docker run "${OPTS[@]}" \
          cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
            -DWERROR=ON \
            -DCMAKE_LINK_WHAT_YOU_USE=ON \
            -DCMAKE_BUILD_TYPE=Test \
            -DARCH=haswell \
            -DCCACHE=ON \
            -DWITH_TESTS=ON ..
        docker run "${OPTS[@]}" make -j 2
        docker run "${OPTS[@]}" ccache -s


  # Build a full version of kotekan and run the unit tests
  build-full-test:
    runs-on: ubuntu-latest
    needs: build-docker-1804

    steps:
    - uses: actions/checkout@v2

    - name: Free disk space
      run: |
          df -h
          docker rmi $(docker image ls -aq)
          df -h
          sudo apt-get clean
          sudo apt-get autoclean
          df -h

    - name: Cache ccache files
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ccache-full-build-${{ github.sha }}
        restore-keys: |
          ccache-full-build
          ccache-base-build

    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/docker/Dockerfile

    - name: Extract branch name for docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Build kotekan
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" ccache -s
        docker run "${OPTS[@]}" \
          cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
            -DWERROR=ON \
            -DCMAKE_LINK_WHAT_YOU_USE=ON \
            -DCMAKE_BUILD_TYPE=Test \
            -DUSE_HDF5=ON -DHIGHFIVE_PATH=/code/build/HighFive \
            -DUSE_LAPACK=ON -DBLAZE_PATH=/code/build/blaze \
            -DARCH=haswell \
            -DNO_MEMLOCK=ON \
            -DUSE_OMP=ON \
            -DWITH_TESTS=ON \
            -DCCACHE=ON ..
        docker run "${OPTS[@]}" make -j 2
        docker run "${OPTS[@]}" rm -r lib
        docker run "${OPTS[@]}" ccache -s
        df -h

    - name: Run parallel python tests
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/tests/ -e PYTHONPATH=/code/kotekan/python/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker run "${OPTS[@]}" pytest -v -n auto --dist=loadfile --timeout=${PYTEST_TIMEOUT} -x -m 'not serial'

    - name: Run serial python tests
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/tests/ -e PYTHONPATH=/code/kotekan/python/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker run "${OPTS[@]}" bash -c "redis-server --daemonize yes; pytest -v -x --timeout=${PYTEST_TIMEOUT} -m serial"

    - name: Run boost tests
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/tests/ -e PYTHONPATH=/code/kotekan/python/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker run "${OPTS[@]}" pytest -v -x --timeout=${PYTEST_TIMEOUT}


  # Build a full CHIME version of kotekan
  build-chime:
    runs-on: ubuntu-latest
    needs: build-docker-1804

    steps:
    - uses: actions/checkout@v2

    - name: Cache ccache files
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ccache-chime-build-${{ github.sha }}
        restore-keys: |
          ccache-chime-build
          ccache-full-build

    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/docker/Dockerfile

    - name: Extract branch name for docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Build kotekan
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" ccache -s
        docker run "${OPTS[@]}" \
          cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
            -DWERROR=ON \
            -DCMAKE_LINK_WHAT_YOU_USE=ON \
            -DCMAKE_BUILD_TYPE=Test \
            -DUSE_OLD_DPDK=ON \
            -DUSE_HDF5=ON -DHIGHFIVE_PATH=/code/build/HighFive \
            -DUSE_LAPACK=ON -DBLAZE_PATH=/code/build/blaze \
            -DARCH=haswell \
            -DNO_MEMLOCK=ON \
            -DUSE_OMP=ON \
            -DWITH_TESTS=OFF \
            -DCCACHE=ON ..
        docker run "${OPTS[@]}" make -j 2
        docker run "${OPTS[@]}" ccache -s


  # Build a full CHIME version with clang
  build-clang:
    runs-on: ubuntu-latest
    needs: build-docker-1804

    steps:
    - uses: actions/checkout@v2

    - name: Cache ccache files
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ccache-clang-build-${{ github.sha }}
        restore-keys: |
          ccache-clang-build

    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/docker/Dockerfile

    - name: Extract branch name for docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Build kotekan
      env:
        CC: clang
        CXX: clang++
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" ccache -s
        docker run "${OPTS[@]}" cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
        -DWERROR=ON \
        -DCMAKE_LINK_WHAT_YOU_USE=ON \
        -DUSE_OLD_DPDK=ON \
        -DCMAKE_BUILD_TYPE=Test \
        -DUSE_HDF5=ON \
        -DHIGHFIVE_PATH=/code/build/HighFive \
        -DUSE_LAPACK=ON \
        -DBLAZE_PATH=/code/build/blaze \
        -DARCH=haswell \
        -DNO_MEMLOCK=ON \
        -DUSE_OMP=ON \
        -DWITH_TESTS=ON \
        -DCCACHE=ON ..
        docker run "${OPTS[@]}" make -j 2
        docker run "${OPTS[@]}" ccache -s


  # Build MacOS kotekan
  build-macos:
    runs-on: macos-10.15

    steps:
    - uses: actions/checkout@v2
    - name: Cache ccache files
      uses: actions/cache@v1
      with:
        path: .ccache
        key: ccache-macos-build-${{ github.sha }}
        restore-keys: |
          ccache-macos-build

    - name: Install ccache and libraries
      run: |
        brew install hdf5@1.10 boost libevent ccache airspy fftw llvm@9

    - name: Build h5py from source
      run: |
        git clone https://github.com/h5py/h5py.git h5py && cd h5py && git checkout 2.9.0
        python3 setup.py configure --hdf5=/usr/local/opt/hdf5@1.10/
        python3 setup.py build

    - name: Install bitshuffle
      run: |
        pip3 install bitshuffle

    - name: Clone Blaze and HighFive
      run: |
        git clone https://bitbucket.org/blaze-lib/blaze.git blaze
        cd blaze && git checkout v3.4 && cd ..
        git clone --single-branch --branch extensible-datasets https://github.com/jrs65/HighFive.git
        cd HighFive && git pull && cd ..

    - name: Install OpenBLAS and LAPACK
      run: brew install openblas lapack

    - name: Build kotekan
      env:
        CCACHE_NOHASHDIR: 1
        CCACHE_BASEDIR: $GITHUB_WORKSPACE
        CCACHE_DIR: $GITHUB_WORKSPACE/.ccache/
        CCACHE_COMPRESS: 1
        CCACHE_MAXSIZE: 1G
      run: |
        # adding this to the above env block breaks and results in sh not finding cmake etc
        export PATH="/usr/local/opt/hdf5@1.10/bin:$PATH"
        cd build
        # the MacOS linker doesn't support --no-as-needed for -DCMAKE_LINK_WHAT_YOU_USE=ON
        cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
        -DCMAKE_BUILD_TYPE=Test \
        -DWERROR=ON \
        -DUSE_HDF5=ON \
        -DUSE_OPENCL=ON \
        -DUSE_FFTW=ON \
        -DUSE_AIRSPY=ON \
        -DUSE_LAPACK=ON \
        -DCMAKE_PREFIX_PATH=/usr/local/opt/openblas/ \
        -DLAPACKE_DIR=/usr/local/opt/openblas/ \
        -DBLAZE_PATH=$GITHUB_WORKSPACE/blaze \
        -DHIGHFIVE_PATH=$GITHUB_WORKSPACE/HighFive \
        -DCCACHE=ON \
        -DWITH_TESTS=ON ..
        make -j 2

  # Build kotekan documentation
  build-docs:
    runs-on: ubuntu-latest
    needs: build-docker-2204

    steps:
    - uses: actions/checkout@v2

    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/CI/Dockerfile

    - name: Extract branch name for docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Build kotekan docs
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" \
          cmake \
            -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
            -DWERROR=ON \
            -DCOMPILE_DOCS=ON \
            -DWITH_TESTS=OFF ..
        docker run "${OPTS[@]}" make doc
        docker run "${OPTS[@]}" make sphinx


  iwyu:
    runs-on: ubuntu-latest
    needs: build-docker-iwyu

    steps:
    - uses: actions/checkout@v2

    - name: Check if IWYU Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker-iwyu
      with:
        PATTERNS: tools/iwyu/docker/Dockerfile

    - name: Extract branch name for iwyu docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker-iwyu.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Configure kotekan
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_IWYU}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" \
          cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated \
            -DWERROR=ON \
            -DCMAKE_LINK_WHAT_YOU_USE=ON \
            -DCMAKE_BUILD_TYPE=Test \
            -DUSE_OLD_DPDK=ON \
            -DUSE_HDF5=ON -DHIGHFIVE_PATH=/code/build/HighFive \
            -DUSE_LAPACK=ON -DBLAZE_PATH=/code/build/blaze \
            -DARCH=haswell \
            -DNO_MEMLOCK=ON \
            -DUSE_OMP=ON \
            -DWITH_TESTS=ON \
            -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
            -DIWYU=ON \
            -DCCACHE=ON ..

    - name: Run iwyu
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build/ ${IMG_IWYU}:${{ steps.extract_branch.outputs.branch }})
        docker run "${OPTS[@]}" /code/kotekan/tools/iwyu/docker/iwyu.sh


  lint:
    runs-on: ubuntu-latest
    needs: build-docker-1804

    steps:
    - uses: actions/checkout@v2

    - name: Check if Dockerfile changed
      uses: technote-space/get-diff-action@v4
      id: git-diff-docker
      with:
        PATTERNS: tools/docker/Dockerfile

    - name: Extract branch name for docker container
      shell: bash
      # Get either branch name of a push or source branch of PR, replace all '/' with '.'.
      # If Dockerfile didn't change, use 'develop'.
      run: >
        if [ -n "${{ steps.git-diff-docker.outputs.diff }}" ]; then
          if [ "${GITHUB_EVENT_NAME}" = "push" ]; then
            echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/} | tr / .)";
          else
            echo "##[set-output name=branch;]$(echo ${GITHUB_HEAD_REF#refs/heads/} | tr / .)";
          fi
        else
          echo "::set-output name=branch::develop"
        fi
      id: extract_branch

    - name: Run clang-format
      run: |
        mkdir -p build-check-format
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/build-check-format/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p "${{ secrets.GITHUB_TOKEN }}"
        docker run "${OPTS[@]}" cmake -Wdev -Werror=dev -Wdeprecated -Werror=deprecated ..
        docker run "${OPTS[@]}" make clang-format
        git diff --exit-code

    - name: Run black
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker run "${OPTS[@]}" black --exclude docs --check .

    - name: Run cmakelint
      run: |
        OPTS=(--rm --mount type=bind,src=$(pwd),target=/code/kotekan -w /code/kotekan/ ${IMG_CORE}:${{ steps.extract_branch.outputs.branch }})
        docker run "${OPTS[@]}" tools/cmakelint.sh /code/kotekan
