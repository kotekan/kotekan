// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=128, blocks_per_sm=8

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.global .align 1 .b8 exception24[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 128, 1, 1
.minnctapersm 8
{
	.reg .pred 	%p<94>;
	.reg .f32 	%f<424>;
	.reg .b32 	%r<150>;
	.reg .b64 	%rd<30>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r30, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r30, 82431;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L17
	ld.param.u64 	%rd19, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r31, %ctaid.x;
	shl.b32 	%r32, %r31, 7;
	mov.u32 	%r33, %tid.y;
	shl.b32 	%r34, %r33, 5;
	or.b32  	%r35, %r32, %r1;
	or.b32  	%r36, %r35, %r34;
	mul.wide.u32 	%rd25, %r36, 4;
	add.s64 	%rd1, %rd19, %rd25;
	mov.u32 	%r37, 1;
	st.global.u32 	[%rd1], %r37;
	ld.global.u32 	%r2, [%rd3];
	setp.lt.s32 	%p2, %r2, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L223
	ld.param.u64 	%rd7, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r3, [%rd7];
	setp.lt.s32 	%p3, %r3, %r2;
	setp.gt.s32 	%p4, %r3, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L233
	ld.param.u64 	%rd11, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r4, [%rd11];
	sub.s32 	%r38, %r3, %r2;
	and.b32  	%r39, %r38, 255;
	setp.ne.s32 	%p6, %r39, 0;
	setp.lt.s32 	%p7, %r4, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L239
	ld.param.u64 	%rd15, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r5, [%rd15];
	setp.lt.s32 	%p9, %r5, %r4;
	setp.gt.s32 	%p10, %r5, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L249
	sub.s32 	%r40, %r5, %r4;
	add.s32 	%r41, %r40, 3;
	and.b32  	%r42, %r41, 63;
	setp.eq.s32 	%p12, %r42, 0;
	@%p12 bra 	LBB0_8;
LBB0_7:                                 // %L283
	mov.u32 	%r145, 2;
	st.global.u32 	[%rd1], %r145;
	mov.u64 	%rd28, exception24;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd2;
	st.param.b32 	[param0+8], %r29;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd23, exception1;
	cvta.global.u64 	%rd24, %rd23;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd24;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd2;
	st.param.b32 	[param0+8], %r29;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_8:                                 // %pass81
	bfe.u32 	%r27, %r1, 1, 1;
	or.b32  	%r28, %r27, 2;
	mov.f32 	%f75, 0f40000000;
	mov.f32 	%f76, 0f41700000;
	div.approx.f32 	%f71, %f76, %f75;
	cvt.rn.f32.s32 	%f77, %r27;
	sub.f32 	%f78, %f77, %f71;
	mov.f32 	%f107, 0f40800000;
	div.approx.f32 	%f73, %f78, %f107;
	cvt.rn.f32.s32 	%f111, %r28;
	sub.f32 	%f112, %f111, %f71;
	div.approx.f32 	%f5, %f112, %f107;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	or.b32  	%r60, %r27, 4;
	or.b32  	%r6, %r27, 6;
	cvt.rn.f32.s32 	%f144, %r60;
	sub.f32 	%f145, %f144, %f71;
	div.approx.f32 	%f9, %f145, %f107;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	cvt.rn.f32.s32 	%f178, %r6;
	sub.f32 	%f179, %f178, %f71;
	div.approx.f32 	%f14, %f179, %f107;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	or.b32  	%r78, %r27, 8;
	or.b32  	%r7, %r27, 10;
	cvt.rn.f32.s32 	%f211, %r78;
	sub.f32 	%f212, %f211, %f71;
	div.approx.f32 	%f18, %f212, %f107;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	shr.u32 	%r26, %r1, 1;
	cvt.rn.f32.s32 	%f245, %r7;
	sub.f32 	%f246, %f245, %f71;
	div.approx.f32 	%f23, %f246, %f107;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	or.b32  	%r96, %r27, 12;
	or.b32  	%r8, %r26, 14;
	cvt.rn.f32.s32 	%f278, %r96;
	sub.f32 	%f279, %f278, %f71;
	div.approx.f32 	%f27, %f279, %f107;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	cvt.rn.f32.s32 	%f312, %r8;
	sub.f32 	%f313, %f312, %f71;
	div.approx.f32 	%f32, %f313, %f107;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	mul.lo.s32 	%r9, %r27, 3;
	cvt.rn.f32.s32 	%f344, %r9;
	div.approx.f32 	%f35, %f344, %f107;
	abs.f32 	%f420, %f35;
	setp.lt.f32 	%p61, %f420, 0f40000000;
	setp.ne.f32 	%p18, %f73, 0f00000000;
	@%p61 bra 	LBB0_20;
// %bb.9:
	setp.gtu.f32 	%p62, %f420, 0f4B800000;
	@%p62 bra 	LBB0_16;
	bra.uni 	LBB0_10;
LBB0_16:
	mov.b32 	%r11, %f420;
	and.b32  	%r114, %r11, 8388607;
	or.b32  	%r146, %r114, 1065353216;
	mov.b32 	%f419, %r146;
	add.s32 	%r115, %r11, -1073741824;
	and.b32  	%r147, %r115, -8388608;
	setp.eq.s32 	%p68, %r147, 0;
	@%p68 bra 	LBB0_19;
// %bb.17:                              // %.lr.ph740.preheader
	mov.f32 	%f355, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f354,%f355;
	// end inline asm
LBB0_18:                                // %.lr.ph740
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r116, %r147, 192937984;
	add.s32 	%r117, %r116, %r146;
	mov.b32 	%f356, %r117;
	mul.f32 	%f357, %f354, %f356;
	sub.f32 	%f358, %f356, %f357;
	fma.rn.f32 	%f359, %f358, %f354, %f357;
	sub.f32 	%f360, %f356, %f359;
	fma.rz.f32 	%f361, %f360, %f354, %f359;
	cvt.rzi.f32.f32 	%f362, %f361;
	sub.f32 	%f419, %f356, %f362;
	sub.s32 	%r147, %r147, %r116;
	mov.b32 	%r146, %f419;
	setp.ne.s32 	%p69, %r147, 0;
	setp.ne.s32 	%p70, %r146, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_18;
LBB0_19:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r11, 2139095039;
	selp.f32 	%f363, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f364, %f419, 0f34000000;
	mul.f32 	%f420, %f363, %f364;
	bra.uni 	LBB0_20;
LBB0_10:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f347, %f420, %f75;
	cvt.rzi.f32.f32 	%f37, %f347;
	fma.rn.f32 	%f38, %f37, 0fC0000000, %f420;
	mov.b32 	%r10, %f38;
	setp.lt.u32 	%p63, %r10, 1073741824;
	mov.f32 	%f418, %f37;
	@%p63 bra 	LBB0_15;
// %bb.11:
	setp.lt.u32 	%p64, %r10, -2147483647;
	@%p64 bra 	LBB0_13;
// %bb.12:
	add.f32 	%f352, %f37, 0fBF800000;
	setp.lt.f32 	%p67, %f38, 0fC0000000;
	selp.f32 	%f353, %f352, %f37, %p67;
	add.f32 	%f418, %f353, 0fBF800000;
	bra.uni 	LBB0_15;
LBB0_13:
	add.f32 	%f418, %f37, 0f3F800000;
	setp.ltu.f32 	%p65, %f38, 0f40800000;
	@%p65 bra 	LBB0_15;
// %bb.14:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f349, %f75, 0fC0400000, %f38;
	setp.ge.f32 	%p66, %f349, 0f00000000;
	selp.f32 	%f350, %f418, %f37, %p66;
	add.f32 	%f351, %f350, 0f3F800000;
	add.f32 	%f418, %f351, 0f3F800000;
LBB0_15:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f420, %f418, 0fC0000000, %f420;
LBB0_20:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f365, %f420;
	setp.gtu.f32 	%p73, %f365, 0f7F800000;
	add.s32 	%r130, %r9, 6;
	cvt.rn.f32.s32 	%f396, %r130;
	div.approx.f32 	%f54, %f396, %f107;
	abs.f32 	%f423, %f54;
	setp.lt.f32 	%p81, %f423, 0f40000000;
	@%p81 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p82, %f423, 0f4B800000;
	@%p82 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r19, %f423;
	and.b32  	%r131, %r19, 8388607;
	or.b32  	%r148, %r131, 1065353216;
	mov.b32 	%f422, %r148;
	add.s32 	%r132, %r19, -1073741824;
	and.b32  	%r149, %r132, -8388608;
	setp.eq.s32 	%p88, %r149, 0;
	@%p88 bra 	LBB0_31;
// %bb.29:                              // %.lr.ph.preheader
	mov.f32 	%f407, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f406,%f407;
	// end inline asm
LBB0_30:                                // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r133, %r149, 192937984;
	add.s32 	%r134, %r133, %r148;
	mov.b32 	%f408, %r134;
	mul.f32 	%f409, %f406, %f408;
	sub.f32 	%f410, %f408, %f409;
	fma.rn.f32 	%f411, %f410, %f406, %f409;
	sub.f32 	%f412, %f408, %f411;
	fma.rz.f32 	%f413, %f412, %f406, %f411;
	cvt.rzi.f32.f32 	%f414, %f413;
	sub.f32 	%f422, %f408, %f414;
	sub.s32 	%r149, %r149, %r133;
	mov.b32 	%r148, %f422;
	setp.ne.s32 	%p89, %r149, 0;
	setp.ne.s32 	%p90, %r148, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i646
	setp.gt.u32 	%p92, %r19, 2139095039;
	selp.f32 	%f415, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f416, %f422, 0f34000000;
	mul.f32 	%f423, %f415, %f416;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i612
	div.approx.f32 	%f399, %f423, %f75;
	cvt.rzi.f32.f32 	%f56, %f399;
	fma.rn.f32 	%f57, %f56, 0fC0000000, %f423;
	mov.b32 	%r18, %f57;
	setp.lt.u32 	%p83, %r18, 1073741824;
	mov.f32 	%f421, %f56;
	@%p83 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p84, %r18, -2147483647;
	@%p84 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f404, %f56, 0fBF800000;
	setp.lt.f32 	%p87, %f57, 0fC0000000;
	selp.f32 	%f405, %f404, %f56, %p87;
	add.f32 	%f421, %f405, 0fBF800000;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f421, %f56, 0f3F800000;
	setp.ltu.f32 	%p85, %f57, 0f40800000;
	@%p85 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i617
	fma.rn.f32 	%f401, %f75, 0fC0400000, %f57;
	setp.ge.f32 	%p86, %f401, 0f00000000;
	selp.f32 	%f402, %f421, %f56, %p86;
	add.f32 	%f403, %f402, 0f3F800000;
	add.f32 	%f421, %f403, 0f3F800000;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i620
	fma.rn.f32 	%f423, %f421, 0fC0000000, %f423;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i649
	abs.f32 	%f417, %f423;
	setp.gtu.f32 	%p93, %f417, 0f7F800000;
	mov.u64 	%rd26, exception1;
	cvta.global.u64 	%rd27, %rd26;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd27;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd2;
	st.param.b32 	[param0+8], %r29;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
