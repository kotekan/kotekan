// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1395[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<217>;
	.reg .b16 	%rs<96>;
	.reg .b32 	%r<1111>;
	.reg .f32 	%f<775>;
	.reg .b64 	%rd<195>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r134, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r135, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r135, 73983;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd55, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r136, %ctaid.x;
	shl.b32 	%r1, %r136, 8;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r137, %r1, %r2;
	or.b32  	%r138, %r137, %r4;
	mul.wide.u32 	%rd61, %r138, 4;
	add.s64 	%rd4, %rd55, %rd61;
	mov.u32 	%r139, 1;
	st.global.u32 	[%rd4], %r139;
	ld.global.u32 	%r5, [%rd39];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd43, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd43];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd47];
	sub.s32 	%r140, %r6, %r5;
	and.b32  	%r141, %r140, 255;
	setp.ne.s32 	%p6, %r141, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd51];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 32768;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r142, %r8, %r7;
	add.s32 	%r143, %r142, 3;
	and.b32  	%r144, %r143, 31;
	setp.eq.s32 	%p12, %r144, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r13, %r2, 1, 1;
	shl.b32 	%r145, %r13, 1;
	and.b32  	%r14, %r2, 1;
	or.b32  	%r15, %r14, %r145;
	or.b32  	%r16, %r15, 4;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f41F80000;
	div.approx.f32 	%f1, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r15;
	sub.f32 	%f148, %f147, %f1;
	mov.f32 	%f177, 0f41000000;
	div.approx.f32 	%f3, %f148, %f177;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f750, 0f3F800000;
	mov.f32 	%f743, %f750;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L483
	sin.approx.f32 	%f178, %f3;
	div.approx.f32 	%f743, %f178, %f3;
LBB0_10:                                // %L486
	cvt.rn.f32.s32 	%f181, %r16;
	sub.f32 	%f182, %f181, %f1;
	div.approx.f32 	%f8, %f182, %f177;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f744, %f750;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L503
	sin.approx.f32 	%f212, %f8;
	div.approx.f32 	%f744, %f212, %f8;
LBB0_12:                                // %L506
	or.b32  	%r163, %r15, 8;
	or.b32  	%r18, %r15, 12;
	cvt.rn.f32.s32 	%f216, %r163;
	sub.f32 	%f217, %f216, %f1;
	div.approx.f32 	%f12, %f217, %f177;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f745, %f750;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L585
	sin.approx.f32 	%f247, %f12;
	div.approx.f32 	%f745, %f247, %f12;
LBB0_14:                                // %L588
	cvt.rn.f32.s32 	%f250, %r18;
	sub.f32 	%f251, %f250, %f1;
	div.approx.f32 	%f17, %f251, %f177;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f746, %f750;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L605
	sin.approx.f32 	%f281, %f17;
	div.approx.f32 	%f746, %f281, %f17;
LBB0_16:                                // %L608
	or.b32  	%r181, %r15, 16;
	or.b32  	%r20, %r15, 20;
	cvt.rn.f32.s32 	%f285, %r181;
	sub.f32 	%f286, %f285, %f1;
	div.approx.f32 	%f21, %f286, %f177;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f747, %f750;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L687
	sin.approx.f32 	%f316, %f21;
	div.approx.f32 	%f747, %f316, %f21;
LBB0_18:                                // %L690
	cvt.rn.f32.s32 	%f319, %r20;
	sub.f32 	%f320, %f319, %f1;
	div.approx.f32 	%f26, %f320, %f177;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f748, %f750;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L707
	sin.approx.f32 	%f350, %f26;
	div.approx.f32 	%f748, %f350, %f26;
LBB0_20:                                // %L710
	or.b32  	%r199, %r15, 24;
	or.b32  	%r22, %r15, 28;
	cvt.rn.f32.s32 	%f354, %r199;
	sub.f32 	%f355, %f354, %f1;
	div.approx.f32 	%f30, %f355, %f177;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f749, %f750;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L789
	sin.approx.f32 	%f385, %f30;
	div.approx.f32 	%f749, %f385, %f30;
LBB0_22:                                // %L792
	cvt.rn.f32.s32 	%f388, %r22;
	sub.f32 	%f389, %f388, %f1;
	div.approx.f32 	%f35, %f389, %f177;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L809
	sin.approx.f32 	%f419, %f35;
	div.approx.f32 	%f750, %f419, %f35;
LBB0_24:                                // %L812
	mul.lo.s32 	%r24, %r15, 7;
	cvt.rn.f32.s32 	%f422, %r24;
	div.approx.f32 	%f38, %f422, %f177;
	abs.f32 	%f753, %f38;
	setp.lt.f32 	%p61, %f753, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f753, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r26, %f753;
	and.b32  	%r217, %r26, 8388607;
	or.b32  	%r1091, %r217, 1065353216;
	mov.b32 	%f752, %r1091;
	add.s32 	%r218, %r26, -1073741824;
	and.b32  	%r1092, %r218, -8388608;
	setp.eq.s32 	%p68, %r1092, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f433, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f432,%f433;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r219, %r1092, 192937984;
	add.s32 	%r220, %r219, %r1091;
	mov.b32 	%f434, %r220;
	mul.f32 	%f435, %f432, %f434;
	sub.f32 	%f436, %f434, %f435;
	fma.rn.f32 	%f437, %f436, %f432, %f435;
	sub.f32 	%f438, %f434, %f437;
	fma.rz.f32 	%f439, %f438, %f432, %f437;
	cvt.rzi.f32.f32 	%f440, %f439;
	sub.f32 	%f752, %f434, %f440;
	sub.s32 	%r1092, %r1092, %r219;
	mov.b32 	%r1091, %f752;
	setp.ne.s32 	%p69, %r1092, 0;
	setp.ne.s32 	%p70, %r1091, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r26, 2139095039;
	selp.f32 	%f441, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f442, %f752, 0f34000000;
	mul.f32 	%f753, %f441, %f442;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f425, %f753, %f145;
	cvt.rzi.f32.f32 	%f751, %f425;
	fma.rn.f32 	%f41, %f751, 0fC0000000, %f753;
	mov.b32 	%r25, %f41;
	setp.lt.u32 	%p63, %r25, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r25, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f430, %f751, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f431, %f430, 0fBF800000;
	selp.f32 	%f751, %f431, %f430, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f751, %f751, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f426, %f751, 0f3F800000;
	fma.rn.f32 	%f428, %f145, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f428, 0f00000000;
	add.f32 	%f429, %f426, 0f3F800000;
	selp.f32 	%f751, %f429, %f426, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f753, %f751, 0fC0000000, %f753;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f443, %f753;
	setp.gtu.f32 	%p73, %f443, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r221, %f38;
	and.b32  	%r222, %r221, -2147483648;
	mov.b32 	%r223, %f753;
	or.b32  	%r224, %r222, %r223;
	mov.b32 	%f753, %r224;
LBB0_38:                                // %__nv_fmodf.exit
	add.s32 	%r233, %r24, 28;
	cvt.rn.f32.s32 	%f474, %r233;
	div.approx.f32 	%f57, %f474, %f177;
	abs.f32 	%f757, %f57;
	setp.lt.f32 	%p81, %f757, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f757, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r34, %f757;
	and.b32  	%r234, %r34, 8388607;
	or.b32  	%r1093, %r234, 1065353216;
	mov.b32 	%f756, %r1093;
	add.s32 	%r235, %r34, -1073741824;
	and.b32  	%r1094, %r235, -8388608;
	setp.eq.s32 	%p88, %r1094, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i877.preheader
	mov.f32 	%f485, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f484,%f485;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i877
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r236, %r1094, 192937984;
	add.s32 	%r237, %r236, %r1093;
	mov.b32 	%f486, %r237;
	mul.f32 	%f487, %f484, %f486;
	sub.f32 	%f488, %f486, %f487;
	fma.rn.f32 	%f489, %f488, %f484, %f487;
	sub.f32 	%f490, %f486, %f489;
	fma.rz.f32 	%f491, %f490, %f484, %f489;
	cvt.rzi.f32.f32 	%f492, %f491;
	sub.f32 	%f756, %f486, %f492;
	sub.s32 	%r1094, %r1094, %r236;
	mov.b32 	%r1093, %f756;
	setp.ne.s32 	%p89, %r1094, 0;
	setp.ne.s32 	%p90, %r1093, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i879
	setp.gt.u32 	%p92, %r34, 2139095039;
	selp.f32 	%f493, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f494, %f756, 0f34000000;
	mul.f32 	%f757, %f493, %f494;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i849
	div.approx.f32 	%f477, %f757, %f145;
	cvt.rzi.f32.f32 	%f755, %f477;
	fma.rn.f32 	%f60, %f755, 0fC0000000, %f757;
	mov.b32 	%r33, %f60;
	setp.lt.u32 	%p83, %r33, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r33, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f482, %f755, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f483, %f482, 0fBF800000;
	selp.f32 	%f755, %f483, %f482, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f755, %f755, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i854
	add.f32 	%f478, %f755, 0f3F800000;
	fma.rn.f32 	%f480, %f145, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f480, 0f00000000;
	add.f32 	%f481, %f478, 0f3F800000;
	selp.f32 	%f755, %f481, %f478, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i858
	fma.rn.f32 	%f757, %f755, 0fC0000000, %f757;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i883
	shr.u32 	%r12, %r2, 1;
	abs.f32 	%f495, %f757;
	setp.gtu.f32 	%p93, %f495, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r238, %f57;
	and.b32  	%r239, %r238, -2147483648;
	mov.b32 	%r240, %f757;
	or.b32  	%r241, %r239, %r240;
	mov.b32 	%f757, %r241;
LBB0_52:                                // %__nv_fmodf.exit884
	bfe.u32 	%r256, %r2, 2, 1;
	shr.u32 	%r43, %r2, 3;
	and.b32  	%r44, %r43, 2;
	or.b32  	%r257, %r256, %r44;
	and.b32  	%r45, %r12, 4;
	or.b32  	%r46, %r257, %r45;
	and.b32  	%r258, %r2, 3;
	mul.lo.s32 	%r259, %r258, %r46;
	shl.b32 	%r260, %r259, 1;
	neg.s32 	%r261, %r260;
	cvt.rn.f32.s32 	%f528, %r261;
	div.approx.f32 	%f74, %f528, %f177;
	abs.f32 	%f761, %f74;
	setp.lt.f32 	%p101, %f761, 0f40000000;
	@%p101 bra 	LBB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f761, 0f4B800000;
	@%p102 bra 	LBB0_60;
	bra.uni 	LBB0_54;
LBB0_60:
	mov.b32 	%r48, %f761;
	and.b32  	%r262, %r48, 8388607;
	or.b32  	%r1095, %r262, 1065353216;
	mov.b32 	%f760, %r1095;
	add.s32 	%r263, %r48, -1073741824;
	and.b32  	%r1096, %r263, -8388608;
	setp.eq.s32 	%p108, %r1096, 0;
	@%p108 bra 	LBB0_63;
// %bb.61:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f539, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f538,%f539;
	// end inline asm
LBB0_62:                                // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r264, %r1096, 192937984;
	add.s32 	%r265, %r264, %r1095;
	mov.b32 	%f540, %r265;
	mul.f32 	%f541, %f538, %f540;
	sub.f32 	%f542, %f540, %f541;
	fma.rn.f32 	%f543, %f542, %f538, %f541;
	sub.f32 	%f544, %f540, %f543;
	fma.rz.f32 	%f545, %f544, %f538, %f543;
	cvt.rzi.f32.f32 	%f546, %f545;
	sub.f32 	%f760, %f540, %f546;
	sub.s32 	%r1096, %r1096, %r264;
	mov.b32 	%r1095, %f760;
	setp.ne.s32 	%p109, %r1096, 0;
	setp.ne.s32 	%p110, %r1095, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_62;
LBB0_63:                                // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p112, %r48, 2139095039;
	selp.f32 	%f547, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f548, %f760, 0f34000000;
	mul.f32 	%f761, %f547, %f548;
	bra.uni 	LBB0_64;
LBB0_54:                                // %__nv_fast_fdividef.exit.i.i.i895
	div.approx.f32 	%f531, %f761, %f145;
	cvt.rzi.f32.f32 	%f759, %f531;
	fma.rn.f32 	%f77, %f759, 0fC0000000, %f761;
	mov.b32 	%r47, %f77;
	setp.lt.u32 	%p103, %r47, 1073741824;
	@%p103 bra 	LBB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r47, -2147483647;
	@%p104 bra 	LBB0_57;
// %bb.56:
	add.f32 	%f536, %f759, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f537, %f536, 0fBF800000;
	selp.f32 	%f759, %f537, %f536, %p107;
	bra.uni 	LBB0_59;
LBB0_57:
	add.f32 	%f759, %f759, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i900
	add.f32 	%f532, %f759, 0f3F800000;
	fma.rn.f32 	%f534, %f145, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f534, 0f00000000;
	add.f32 	%f535, %f532, 0f3F800000;
	selp.f32 	%f759, %f535, %f532, %p106;
LBB0_59:                                // %__internal_fmodf_fastpath_quot.exit.i.i904
	fma.rn.f32 	%f761, %f759, 0fC0000000, %f761;
LBB0_64:                                // %__internal_fmodf_kernel.exit.i929
	abs.f32 	%f549, %f761;
	setp.gtu.f32 	%p113, %f549, 0f7F800000;
	@%p113 bra 	LBB0_66;
// %bb.65:
	mov.b32 	%r266, %f74;
	and.b32  	%r267, %r266, -2147483648;
	mov.b32 	%r268, %f761;
	or.b32  	%r269, %r267, %r268;
	mov.b32 	%f761, %r269;
LBB0_66:                                // %__nv_fmodf.exit930
	shl.b32 	%r55, %r2, 1;
	and.b32  	%r278, %r55, 6;
	mov.u32 	%r279, -8;
	sub.s32 	%r280, %r279, %r278;
	mul.lo.s32 	%r281, %r46, %r280;
	cvt.rn.f32.s32 	%f580, %r281;
	div.approx.f32 	%f93, %f580, %f177;
	abs.f32 	%f765, %f93;
	setp.lt.f32 	%p121, %f765, 0f40000000;
	@%p121 bra 	LBB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f765, 0f4B800000;
	@%p122 bra 	LBB0_74;
	bra.uni 	LBB0_68;
LBB0_74:
	mov.b32 	%r57, %f765;
	and.b32  	%r282, %r57, 8388607;
	or.b32  	%r1097, %r282, 1065353216;
	mov.b32 	%f764, %r1097;
	add.s32 	%r283, %r57, -1073741824;
	and.b32  	%r1098, %r283, -8388608;
	setp.eq.s32 	%p128, %r1098, 0;
	@%p128 bra 	LBB0_77;
// %bb.75:                              // %__nv_fmaf_rn.exit4.i.i.i969.preheader
	mov.f32 	%f591, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f590,%f591;
	// end inline asm
LBB0_76:                                // %__nv_fmaf_rn.exit4.i.i.i969
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r284, %r1098, 192937984;
	add.s32 	%r285, %r284, %r1097;
	mov.b32 	%f592, %r285;
	mul.f32 	%f593, %f590, %f592;
	sub.f32 	%f594, %f592, %f593;
	fma.rn.f32 	%f595, %f594, %f590, %f593;
	sub.f32 	%f596, %f592, %f595;
	fma.rz.f32 	%f597, %f596, %f590, %f595;
	cvt.rzi.f32.f32 	%f598, %f597;
	sub.f32 	%f764, %f592, %f598;
	sub.s32 	%r1098, %r1098, %r284;
	mov.b32 	%r1097, %f764;
	setp.ne.s32 	%p129, %r1098, 0;
	setp.ne.s32 	%p130, %r1097, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_76;
LBB0_77:                                // %__internal_fmodf_slowpath_mod.exit.i.i971
	setp.gt.u32 	%p132, %r57, 2139095039;
	selp.f32 	%f599, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f600, %f764, 0f34000000;
	mul.f32 	%f765, %f599, %f600;
	bra.uni 	LBB0_78;
LBB0_68:                                // %__nv_fast_fdividef.exit.i.i.i941
	div.approx.f32 	%f583, %f765, %f145;
	cvt.rzi.f32.f32 	%f763, %f583;
	fma.rn.f32 	%f96, %f763, 0fC0000000, %f765;
	mov.b32 	%r56, %f96;
	setp.lt.u32 	%p123, %r56, 1073741824;
	@%p123 bra 	LBB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r56, -2147483647;
	@%p124 bra 	LBB0_71;
// %bb.70:
	add.f32 	%f588, %f763, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f589, %f588, 0fBF800000;
	selp.f32 	%f763, %f589, %f588, %p127;
	bra.uni 	LBB0_73;
LBB0_71:
	add.f32 	%f763, %f763, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i946
	add.f32 	%f584, %f763, 0f3F800000;
	fma.rn.f32 	%f586, %f145, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f586, 0f00000000;
	add.f32 	%f587, %f584, 0f3F800000;
	selp.f32 	%f763, %f587, %f584, %p126;
LBB0_73:                                // %__internal_fmodf_fastpath_quot.exit.i.i950
	fma.rn.f32 	%f765, %f763, 0fC0000000, %f765;
LBB0_78:                                // %__internal_fmodf_kernel.exit.i975
	mov.f32 	%f174, 0f00000000;
	abs.f32 	%f601, %f765;
	setp.gtu.f32 	%p133, %f601, 0f7F800000;
	@%p133 bra 	LBB0_80;
// %bb.79:
	mov.b32 	%r286, %f93;
	and.b32  	%r287, %r286, -2147483648;
	mov.b32 	%r288, %f765;
	or.b32  	%r289, %r287, %r288;
	mov.b32 	%f765, %r289;
LBB0_80:                                // %__nv_fmodf.exit976
	mov.f32 	%f634, 0f3F800000;
	div.approx.f32 	%f110, %f174, %f634;
	abs.f32 	%f773, %f110;
	setp.lt.f32 	%p141, %f773, 0f40000000;
	setp.gtu.f32 	%p216, %f773, 0f4B800000;
	mov.f32 	%f769, %f773;
	@%p141 bra 	LBB0_98;
// %bb.81:
	@%p216 bra 	LBB0_94;
	bra.uni 	LBB0_82;
LBB0_94:
	mov.b32 	%r82, %f773;
	and.b32  	%r311, %r82, 8388607;
	or.b32  	%r1107, %r311, 1065353216;
	mov.b32 	%f768, %r1107;
	add.s32 	%r312, %r82, -1073741824;
	and.b32  	%r1108, %r312, -8388608;
	setp.eq.s32 	%p148, %r1108, 0;
	@%p148 bra 	LBB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i1015.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f643,%f634;
	// end inline asm
LBB0_96:                                // %__nv_fmaf_rn.exit4.i.i.i1015
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r313, %r1108, 192937984;
	add.s32 	%r314, %r313, %r1107;
	mov.b32 	%f645, %r314;
	mul.f32 	%f646, %f643, %f645;
	sub.f32 	%f647, %f645, %f646;
	fma.rn.f32 	%f648, %f647, %f643, %f646;
	sub.f32 	%f649, %f645, %f648;
	fma.rz.f32 	%f650, %f649, %f643, %f648;
	cvt.rzi.f32.f32 	%f651, %f650;
	sub.f32 	%f768, %f645, %f651;
	sub.s32 	%r1108, %r1108, %r313;
	mov.b32 	%r1107, %f768;
	setp.ne.s32 	%p149, %r1108, 0;
	setp.ne.s32 	%p150, %r1107, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_96;
LBB0_97:                                // %__internal_fmodf_slowpath_mod.exit.i.i1017
	setp.gt.u32 	%p152, %r82, 2139095039;
	selp.f32 	%f652, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f653, %f768, 0f34000000;
	mul.f32 	%f769, %f652, %f653;
	bra.uni 	LBB0_98;
LBB0_82:                                // %__nv_fast_fdividef.exit.i.i.i987
	div.approx.f32 	%f636, %f773, %f145;
	cvt.rzi.f32.f32 	%f767, %f636;
	fma.rn.f32 	%f113, %f767, 0fC0000000, %f773;
	mov.b32 	%r81, %f113;
	setp.lt.u32 	%p143, %r81, 1073741824;
	@%p143 bra 	LBB0_93;
// %bb.83:
	setp.lt.u32 	%p144, %r81, -2147483647;
	@%p144 bra 	LBB0_91;
// %bb.84:
	add.f32 	%f641, %f767, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f642, %f641, 0fBF800000;
	selp.f32 	%f767, %f642, %f641, %p147;
	bra.uni 	LBB0_93;
LBB0_91:
	add.f32 	%f767, %f767, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i992
	add.f32 	%f637, %f767, 0f3F800000;
	fma.rn.f32 	%f639, %f145, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f639, 0f00000000;
	add.f32 	%f640, %f637, 0f3F800000;
	selp.f32 	%f767, %f640, %f637, %p146;
LBB0_93:                                // %__internal_fmodf_fastpath_quot.exit.i.i996
	fma.rn.f32 	%f769, %f767, 0fC0000000, %f773;
LBB0_98:                                // %__internal_fmodf_kernel.exit.i1021
	abs.f32 	%f654, %f769;
	setp.gtu.f32 	%p153, %f654, 0f7F800000;
	mov.b32 	%r315, %f110;
	and.b32  	%r89, %r315, -2147483648;
	@%p153 bra 	LBB0_100;
// %bb.99:
	mov.b32 	%r316, %f769;
	or.b32  	%r317, %r89, %r316;
	mov.b32 	%f769, %r317;
LBB0_100:                               // %__nv_fmodf.exit1022
	@%p141 bra 	LBB0_112;
// %bb.101:
	@%p216 bra 	LBB0_108;
	bra.uni 	LBB0_102;
LBB0_108:
	mov.b32 	%r91, %f773;
	and.b32  	%r326, %r91, 8388607;
	or.b32  	%r1109, %r326, 1065353216;
	mov.b32 	%f772, %r1109;
	add.s32 	%r327, %r91, -1073741824;
	and.b32  	%r1110, %r327, -8388608;
	setp.eq.s32 	%p169, %r1110, 0;
	@%p169 bra 	LBB0_111;
// %bb.109:                             // %__nv_fmaf_rn.exit4.i.i.i1061.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f696,%f634;
	// end inline asm
LBB0_110:                               // %__nv_fmaf_rn.exit4.i.i.i1061
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r328, %r1110, 192937984;
	add.s32 	%r329, %r328, %r1109;
	mov.b32 	%f698, %r329;
	mul.f32 	%f699, %f696, %f698;
	sub.f32 	%f700, %f698, %f699;
	fma.rn.f32 	%f701, %f700, %f696, %f699;
	sub.f32 	%f702, %f698, %f701;
	fma.rz.f32 	%f703, %f702, %f696, %f701;
	cvt.rzi.f32.f32 	%f704, %f703;
	sub.f32 	%f772, %f698, %f704;
	sub.s32 	%r1110, %r1110, %r328;
	mov.b32 	%r1109, %f772;
	setp.ne.s32 	%p170, %r1110, 0;
	setp.ne.s32 	%p171, %r1109, 0;
	and.pred  	%p172, %p170, %p171;
	@%p172 bra 	LBB0_110;
LBB0_111:                               // %__internal_fmodf_slowpath_mod.exit.i.i1063
	setp.gt.u32 	%p173, %r91, 2139095039;
	selp.f32 	%f705, 0f7FFFFFFF, 0f4B800000, %p173;
	mul.f32 	%f706, %f772, 0f34000000;
	mul.f32 	%f773, %f705, %f706;
	bra.uni 	LBB0_112;
LBB0_102:                               // %__nv_fast_fdividef.exit.i.i.i1033
	div.approx.f32 	%f689, %f773, %f145;
	cvt.rzi.f32.f32 	%f771, %f689;
	fma.rn.f32 	%f130, %f771, 0fC0000000, %f773;
	mov.b32 	%r90, %f130;
	setp.lt.u32 	%p164, %r90, 1073741824;
	@%p164 bra 	LBB0_107;
// %bb.103:
	setp.lt.u32 	%p165, %r90, -2147483647;
	@%p165 bra 	LBB0_105;
// %bb.104:
	add.f32 	%f694, %f771, 0fBF800000;
	setp.lt.f32 	%p168, %f130, 0fC0000000;
	add.f32 	%f695, %f694, 0fBF800000;
	selp.f32 	%f771, %f695, %f694, %p168;
	bra.uni 	LBB0_107;
LBB0_105:
	add.f32 	%f771, %f771, 0f3F800000;
	setp.ltu.f32 	%p166, %f130, 0f40800000;
	@%p166 bra 	LBB0_107;
// %bb.106:                             // %__nv_fmaf_rn.exit.i.i.i1038
	add.f32 	%f690, %f771, 0f3F800000;
	fma.rn.f32 	%f692, %f145, 0fC0400000, %f130;
	setp.ge.f32 	%p167, %f692, 0f00000000;
	add.f32 	%f693, %f690, 0f3F800000;
	selp.f32 	%f771, %f693, %f690, %p167;
LBB0_107:                               // %__internal_fmodf_fastpath_quot.exit.i.i1042
	fma.rn.f32 	%f773, %f771, 0fC0000000, %f773;
LBB0_112:                               // %__internal_fmodf_kernel.exit.i1067
	abs.f32 	%f707, %f773;
	setp.gtu.f32 	%p174, %f707, 0f7F800000;
	@%p174 bra 	LBB0_114;
// %bb.113:
	mov.b32 	%r330, %f773;
	or.b32  	%r331, %r89, %r330;
	mov.b32 	%f773, %r331;
LBB0_114:                               // %__nv_fmodf.exit1068
	setp.le.s32 	%p183, %r6, %r5;
	mov.u32 	%r1090, 0;
	@%p183 bra 	LBB0_90;
// %bb.115:                             // %L1219.lr.ph
	mov.f32 	%f149, 0f42040000;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	setp.gt.f32 	%p13, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p19, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p25, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p31, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p37, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p43, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p49, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p55, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	selp.f32 	%f153, %f152, %f150, %p13;
	selp.f32 	%f187, %f186, %f184, %p19;
	selp.f32 	%f222, %f221, %f219, %p25;
	selp.f32 	%f256, %f255, %f253, %p31;
	selp.f32 	%f291, %f290, %f288, %p37;
	selp.f32 	%f325, %f324, %f322, %p43;
	selp.f32 	%f360, %f359, %f357, %p49;
	selp.f32 	%f394, %f393, %f391, %p55;
	add.f32 	%f550, %f761, %f761;
	add.f32 	%f602, %f765, %f765;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f444, %f753, %f753;
	add.f32 	%f496, %f757, %f757;
	mov.b32 	%r270, %f550;
	mov.b32 	%r302, %f602;
	add.f32 	%f655, %f769, %f769;
	mov.b32 	%r146, %f154;
	mov.b32 	%r153, %f188;
	mov.b32 	%r164, %f223;
	mov.b32 	%r171, %f257;
	mov.b32 	%r182, %f292;
	mov.b32 	%r189, %f326;
	mov.b32 	%r200, %f361;
	mov.b32 	%r207, %f395;
	mov.b32 	%r225, %f444;
	mov.b32 	%r248, %f496;
	and.b32  	%r271, %r270, -2147483648;
	and.b32  	%r303, %r302, -2147483648;
	mov.b32 	%r318, %f655;
	and.b32  	%r147, %r146, -2147483648;
	and.b32  	%r154, %r153, -2147483648;
	and.b32  	%r165, %r164, -2147483648;
	and.b32  	%r172, %r171, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r201, %r200, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r249, %r248, -2147483648;
	or.b32  	%r272, %r271, 1056964608;
	or.b32  	%r304, %r303, 1056964608;
	and.b32  	%r319, %r318, -2147483648;
	or.b32  	%r148, %r147, 1056964608;
	or.b32  	%r155, %r154, 1056964608;
	or.b32  	%r166, %r165, 1056964608;
	or.b32  	%r173, %r172, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r250, %r249, 1056964608;
	mov.b32 	%f551, %r272;
	mov.b32 	%f603, %r304;
	or.b32  	%r320, %r319, 1056964608;
	mov.b32 	%f155, %r148;
	mov.b32 	%f189, %r155;
	mov.b32 	%f224, %r166;
	cvt.u16.u32 	%rs2, %r2;
	mov.b32 	%f258, %r173;
	mov.b32 	%f293, %r184;
	mov.b32 	%f327, %r191;
	mov.b32 	%f362, %r202;
	mov.b32 	%f396, %r209;
	mov.b32 	%f445, %r227;
	mov.b32 	%f497, %r250;
	add.f32 	%f552, %f550, %f551;
	abs.f32 	%f554, %f550;
	add.f32 	%f604, %f602, %f603;
	abs.f32 	%f606, %f602;
	mov.b32 	%f656, %r320;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	shr.u16 	%rs3, %rs2, 8;
	shl.b16 	%rs4, %rs2, 8;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f446, %f444, %f445;
	abs.f32 	%f448, %f444;
	add.f32 	%f498, %f496, %f497;
	abs.f32 	%f500, %f496;
	cvt.rzi.f32.f32 	%f553, %f552;
	setp.gt.f32 	%p114, %f554, 0f4B000000;
	cvt.rzi.f32.f32 	%f605, %f604;
	setp.gt.f32 	%p134, %f606, 0f4B000000;
	add.f32 	%f657, %f655, %f656;
	abs.f32 	%f659, %f655;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p14, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p20, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p26, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p32, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p38, %f296, 0f4B000000;
	or.b16  	%rs5, %rs4, %rs3;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p44, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p50, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p56, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f447, %f446;
	setp.gt.f32 	%p74, %f448, 0f4B000000;
	cvt.rzi.f32.f32 	%f499, %f498;
	setp.gt.f32 	%p94, %f500, 0f4B000000;
	selp.f32 	%f555, %f550, %f553, %p114;
	cvt.rzi.f32.f32 	%f556, %f550;
	setp.lt.f32 	%p115, %f554, 0f3F000000;
	selp.f32 	%f607, %f602, %f605, %p134;
	cvt.rzi.f32.f32 	%f608, %f602;
	setp.lt.f32 	%p135, %f606, 0f3F000000;
	cvt.rzi.f32.f32 	%f658, %f657;
	setp.gt.f32 	%p156, %f659, 0f4B000000;
	selp.f32 	%f159, %f154, %f157, %p14;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p15, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p20;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p21, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p26;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p27, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p32;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p33, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p38;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p39, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p44;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p45, %f330, 0f3F000000;
	shr.u16 	%rs7, %rs5, 4;
	selp.f32 	%f366, %f361, %f364, %p50;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p51, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p56;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p57, %f399, 0f3F000000;
	selp.f32 	%f449, %f444, %f447, %p74;
	cvt.rzi.f32.f32 	%f450, %f444;
	setp.lt.f32 	%p75, %f448, 0f3F000000;
	selp.f32 	%f501, %f496, %f499, %p94;
	cvt.rzi.f32.f32 	%f502, %f496;
	setp.lt.f32 	%p95, %f500, 0f3F000000;
	selp.f32 	%f557, %f556, %f555, %p115;
	selp.f32 	%f609, %f608, %f607, %p135;
	selp.f32 	%f660, %f655, %f658, %p156;
	cvt.rzi.f32.f32 	%f661, %f655;
	setp.lt.f32 	%p157, %f659, 0f3F000000;
	selp.f32 	%f161, %f160, %f159, %p15;
	selp.f32 	%f195, %f194, %f193, %p21;
	selp.f32 	%f230, %f229, %f228, %p27;
	selp.f32 	%f264, %f263, %f262, %p33;
	selp.f32 	%f299, %f298, %f297, %p39;
	selp.f32 	%f333, %f332, %f331, %p45;
	selp.f32 	%f368, %f367, %f366, %p51;
	shl.b16 	%rs6, %rs5, 4;
	and.b16  	%rs8, %rs7, 3840;
	selp.f32 	%f402, %f401, %f400, %p57;
	selp.f32 	%f451, %f450, %f449, %p75;
	selp.f32 	%f503, %f502, %f501, %p95;
	fma.rn.f32 	%f558, %f557, 0fBF000000, %f761;
	fma.rn.f32 	%f610, %f609, 0fBF000000, %f765;
	selp.f32 	%f662, %f661, %f660, %p157;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	or.b16  	%rs9, %rs8, %rs6;
	fma.rn.f32 	%f452, %f451, 0fBF000000, %f753;
	fma.rn.f32 	%f504, %f503, 0fBF000000, %f757;
	mul.f32 	%f559, %f558, %f558;
	mul.f32 	%f611, %f610, %f610;
	fma.rn.f32 	%f663, %f662, 0fBF000000, %f769;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	and.b16  	%rs10, %rs9, 13107;
	shr.u16 	%rs12, %rs9, 2;
	mul.f32 	%f453, %f452, %f452;
	mul.f32 	%f505, %f504, %f504;
	fma.rn.f32 	%f560, %f559, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f561, %f559, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f612, %f611, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f613, %f611, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f664, %f663, %f663;
	cvt.rzi.s32.f32 	%r149, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r156, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r167, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r174, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r185, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	shl.b16 	%rs11, %rs10, 2;
	and.b16  	%rs13, %rs12, 13107;
	fma.rn.f32 	%f454, %f453, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f455, %f453, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f506, %f505, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f507, %f505, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r273, %f557;
	fma.rn.f32 	%f562, %f560, %f559, 0fC0A55DF6;
	fma.rn.f32 	%f563, %f561, %f559, 0f4081E0CF;
	fma.rn.f32 	%f564, %f559, %f558, 0f00000000;
	cvt.rzi.s32.f32 	%r305, %f609;
	fma.rn.f32 	%f614, %f612, %f611, 0fC0A55DF6;
	fma.rn.f32 	%f615, %f613, %f611, 0f4081E0CF;
	fma.rn.f32 	%f616, %f611, %f610, 0f00000000;
	fma.rn.f32 	%f665, %f664, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f666, %f664, 0f3E684E12, 0fBFAAD2E0;
	add.s32 	%r150, %r149, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r157, %r156, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r168, %r167, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r228, %f451;
	fma.rn.f32 	%f456, %f454, %f453, 0fC0A55DF6;
	fma.rn.f32 	%f457, %f455, %f453, 0f4081E0CF;
	fma.rn.f32 	%f458, %f453, %f452, 0f00000000;
	or.b16  	%rs14, %rs13, %rs11;
	cvt.rzi.s32.f32 	%r251, %f503;
	fma.rn.f32 	%f508, %f506, %f505, 0fC0A55DF6;
	fma.rn.f32 	%f509, %f507, %f505, 0f4081E0CF;
	fma.rn.f32 	%f510, %f505, %f504, 0f00000000;
	fma.rn.f32 	%f565, %f563, %f559, 0fC09DE9E6;
	fma.rn.f32 	%f566, %f562, %f564, 0f00000000;
	and.b32  	%r274, %r273, 1;
	fma.rn.f32 	%f617, %f615, %f611, 0fC09DE9E6;
	fma.rn.f32 	%f618, %f614, %f616, 0f00000000;
	and.b32  	%r306, %r305, 1;
	cvt.rzi.s32.f32 	%r321, %f662;
	fma.rn.f32 	%f667, %f665, %f664, 0fC0A55DF6;
	fma.rn.f32 	%f668, %f666, %f664, 0f4081E0CF;
	fma.rn.f32 	%f669, %f664, %f663, 0f00000000;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r151, %r150, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r158, %r157, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r169, %r168, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f459, %f457, %f453, 0fC09DE9E6;
	fma.rn.f32 	%f460, %f456, %f458, 0f00000000;
	and.b32  	%r229, %r228, 1;
	and.b16  	%rs15, %rs14, 21845;
	shr.u16 	%rs17, %rs14, 1;
	fma.rn.f32 	%f511, %f509, %f505, 0fC09DE9E6;
	fma.rn.f32 	%f512, %f508, %f510, 0f00000000;
	and.b32  	%r252, %r251, 1;
	fma.rn.f32 	%f567, %f565, %f559, 0f3F800000;
	fma.rn.f32 	%f568, %f558, 0f40490FDB, %f566;
	setp.eq.b32 	%p116, %r274, 1;
	fma.rn.f32 	%f619, %f617, %f611, 0f3F800000;
	fma.rn.f32 	%f620, %f610, 0f40490FDB, %f618;
	setp.eq.b32 	%p136, %r306, 1;
	fma.rn.f32 	%f670, %f668, %f664, 0fC09DE9E6;
	fma.rn.f32 	%f671, %f667, %f669, 0f00000000;
	and.b32  	%r322, %r321, 1;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p16, %r151, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p22, %r158, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p28, %r169, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p34, %r176, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p40, %r187, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p46, %r194, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p52, %r205, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p58, %r212, 1;
	fma.rn.f32 	%f461, %f459, %f453, 0f3F800000;
	fma.rn.f32 	%f462, %f452, 0f40490FDB, %f460;
	setp.eq.b32 	%p76, %r229, 1;
	fma.rn.f32 	%f513, %f511, %f505, 0f3F800000;
	fma.rn.f32 	%f514, %f504, 0f40490FDB, %f512;
	setp.eq.b32 	%p96, %r252, 1;
	shl.b16 	%rs16, %rs15, 1;
	and.b16  	%rs18, %rs17, 21845;
	selp.f32 	%f569, %f567, %f568, %p116;
	and.b32  	%r275, %r273, 2;
	selp.f32 	%f621, %f619, %f620, %p136;
	and.b32  	%r307, %r305, 2;
	fma.rn.f32 	%f672, %f670, %f664, 0f3F800000;
	fma.rn.f32 	%f673, %f663, 0f40490FDB, %f671;
	setp.eq.b32 	%p158, %r322, 1;
	selp.f32 	%f173, %f171, %f172, %p16;
	and.b32  	%r152, %r150, 2;
	selp.f32 	%f207, %f205, %f206, %p22;
	and.b32  	%r159, %r157, 2;
	selp.f32 	%f242, %f240, %f241, %p28;
	and.b32  	%r170, %r168, 2;
	selp.f32 	%f276, %f274, %f275, %p34;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f311, %f309, %f310, %p40;
	and.b32  	%r188, %r186, 2;
	selp.f32 	%f345, %f343, %f344, %p46;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f380, %f378, %f379, %p52;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f414, %f412, %f413, %p58;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f463, %f461, %f462, %p76;
	and.b32  	%r230, %r228, 2;
	selp.f32 	%f515, %f513, %f514, %p96;
	and.b32  	%r253, %r251, 2;
	or.b16  	%rs19, %rs18, %rs16;
	setp.eq.s32 	%p117, %r275, 0;
	neg.f32 	%f571, %f569;
	add.s32 	%r276, %r273, 1;
	cvt.rzi.f32.f32 	%f576, %f761;
	setp.eq.s32 	%p137, %r307, 0;
	neg.f32 	%f623, %f621;
	add.s32 	%r308, %r305, 1;
	cvt.rzi.f32.f32 	%f628, %f765;
	selp.f32 	%f674, %f672, %f673, %p158;
	and.b32  	%r323, %r321, 2;
	setp.eq.s32 	%p17, %r152, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p23, %r159, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p29, %r170, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p35, %r177, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p41, %r188, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p47, %r195, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p53, %r206, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p59, %r213, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p77, %r230, 0;
	neg.f32 	%f465, %f463;
	add.s32 	%r231, %r228, 1;
	cvt.rzi.f32.f32 	%f470, %f753;
	setp.eq.s32 	%p97, %r253, 0;
	neg.f32 	%f517, %f515;
	add.s32 	%r254, %r251, 1;
	cvt.rzi.f32.f32 	%f522, %f757;
	selp.f32 	%f570, %f568, %f567, %p116;
	selp.f32 	%f572, %f569, %f571, %p117;
	and.b32  	%r277, %r276, 2;
	setp.eq.f32 	%p119, %f576, %f761;
	mul.f32 	%f577, %f761, 0f00000000;
	shr.u16 	%rs1, %rs19, 13;
	selp.f32 	%f622, %f620, %f619, %p136;
	selp.f32 	%f624, %f621, %f623, %p137;
	and.b32  	%r309, %r308, 2;
	setp.eq.f32 	%p139, %f628, %f765;
	mul.f32 	%f629, %f765, 0f00000000;
	setp.eq.s32 	%p159, %r323, 0;
	neg.f32 	%f676, %f674;
	add.s32 	%r324, %r321, 1;
	cvt.rzi.f32.f32 	%f681, %f769;
	selp.f32 	%f176, %f173, %f175, %p17;
	selp.f32 	%f210, %f207, %f209, %p23;
	selp.f32 	%f245, %f242, %f244, %p29;
	selp.f32 	%f279, %f276, %f278, %p35;
	selp.f32 	%f314, %f311, %f313, %p41;
	selp.f32 	%f348, %f345, %f347, %p47;
	selp.f32 	%f383, %f380, %f382, %p53;
	selp.f32 	%f417, %f414, %f416, %p59;
	selp.f32 	%f464, %f462, %f461, %p76;
	selp.f32 	%f466, %f463, %f465, %p77;
	and.b32  	%r232, %r231, 2;
	setp.eq.f32 	%p79, %f470, %f753;
	mul.f32 	%f471, %f753, 0f00000000;
	selp.f32 	%f516, %f514, %f513, %p96;
	selp.f32 	%f518, %f515, %f517, %p97;
	and.b32  	%r255, %r254, 2;
	setp.eq.f32 	%p99, %f522, %f757;
	mul.f32 	%f523, %f757, 0f00000000;
	setp.eq.s32 	%p118, %r277, 0;
	sub.f32 	%f574, %f174, %f570;
	selp.f32 	%f91, %f577, %f572, %p119;
	abs.f32 	%f578, %f761;
	setp.eq.s32 	%p138, %r309, 0;
	sub.f32 	%f626, %f174, %f622;
	selp.f32 	%f630, %f629, %f624, %p139;
	abs.f32 	%f631, %f765;
	cvt.u32.u16 	%r310, %rs1;
	selp.f32 	%f675, %f673, %f672, %p158;
	selp.f32 	%f677, %f674, %f676, %p159;
	and.b32  	%r325, %r324, 2;
	setp.eq.f32 	%p161, %f681, %f769;
	mul.f32 	%f682, %f769, 0f00000000;
	shr.u16 	%rs20, %rs19, 12;
	mul.f32 	%f2, %f176, %f176;
	mul.f32 	%f7, %f210, %f210;
	mul.f32 	%f11, %f245, %f245;
	mul.f32 	%f16, %f279, %f279;
	mul.f32 	%f20, %f314, %f314;
	mul.f32 	%f25, %f348, %f348;
	mul.f32 	%f29, %f383, %f383;
	mul.f32 	%f34, %f417, %f417;
	setp.eq.s32 	%p78, %r232, 0;
	sub.f32 	%f468, %f174, %f464;
	selp.f32 	%f55, %f471, %f466, %p79;
	abs.f32 	%f472, %f753;
	setp.eq.s32 	%p98, %r255, 0;
	sub.f32 	%f520, %f174, %f516;
	selp.f32 	%f524, %f523, %f518, %p99;
	abs.f32 	%f525, %f757;
	selp.f32 	%f575, %f570, %f574, %p118;
	setp.gt.f32 	%p120, %f578, 0f4B800000;
	add.f32 	%f579, %f91, 0f3F800000;
	selp.f32 	%f627, %f622, %f626, %p138;
	setp.gt.f32 	%p140, %f631, 0f4B800000;
	add.f32 	%f632, %f630, 0f3F800000;
	and.b32  	%r68, %r310, 6;
	setp.eq.s32 	%p160, %r325, 0;
	sub.f32 	%f679, %f174, %f675;
	selp.f32 	%f683, %f682, %f677, %p161;
	abs.f32 	%f684, %f769;
	cvt.u64.u16 	%rd62, %rs20;
	mul.f32 	%f180, %f2, 0f3D87E86B;
	mul.f32 	%f214, %f7, 0f3D87E86B;
	mul.f32 	%f249, %f11, 0f3D87E86B;
	mul.f32 	%f283, %f16, 0f3D87E86B;
	mul.f32 	%f318, %f20, 0f3D87E86B;
	mul.f32 	%f352, %f25, 0f3D87E86B;
	mul.f32 	%f387, %f29, 0f3D87E86B;
	mul.f32 	%f420, %f34, 0f3D87E86B;
	selp.f32 	%f469, %f464, %f468, %p78;
	setp.gt.f32 	%p80, %f472, 0f4B800000;
	add.f32 	%f473, %f55, 0f3F800000;
	selp.f32 	%f521, %f516, %f520, %p98;
	setp.gt.f32 	%p100, %f525, 0f4B800000;
	add.f32 	%f526, %f524, 0f3F800000;
	selp.f32 	%f92, %f579, %f575, %p120;
	selp.f32 	%f633, %f632, %f627, %p140;
	setp.eq.s32 	%p155, %r46, %r68;
	selp.f32 	%f680, %f675, %f679, %p160;
	setp.gt.f32 	%p162, %f684, 0f4B800000;
	add.f32 	%f685, %f683, 0f3F800000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	and.b64  	%rd63, %rd62, 12;
	mul.f32 	%f6, %f180, %f743;
	mul.f32 	%f215, %f214, %f744;
	mul.f32 	%f15, %f249, %f745;
	mul.f32 	%f284, %f283, %f746;
	mul.f32 	%f24, %f318, %f747;
	mul.f32 	%f353, %f352, %f748;
	mul.f32 	%f33, %f387, %f749;
	mul.f32 	%f421, %f420, %f750;
	selp.f32 	%f56, %f473, %f469, %p80;
	selp.f32 	%f527, %f526, %f521, %p100;
	mov.b32 	%r292, %f633;
	mov.b32 	%r291, %f92;
	mov.b32 	%r298, %f630;
	mov.b32 	%r297, %f91;
	or.b16  	%rs21, %rs1, 1;
	selp.f32 	%f686, %f685, %f680, %p162;
	selp.f32 	%f687, 0f3F800000, 0f00000000, %p155;
	add.s64 	%rd64, %rd1, %rd63;
	mov.b32 	%r162, %f215;
	mov.b32 	%r161, %f6;
	mov.b32 	%r180, %f284;
	mov.b32 	%r179, %f15;
	mov.b32 	%r198, %f353;
	mov.b32 	%r197, %f24;
	mov.b32 	%r216, %f421;
	mov.b32 	%r215, %f33;
	mov.b32 	%r244, %f527;
	mov.b32 	%r243, %f56;
	mov.b32 	%r247, %f524;
	mov.b32 	%r246, %f55;
	xor.b32  	%r295, %r298, -2147483648;
	xor.b32  	%r294, %r297, -2147483648;
	cvt.u32.u16 	%r69, %rs21;
	mul.f32 	%f127, %f686, %f687;
	mul.f32 	%f128, %f683, %f687;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	shl.b32 	%r9, %r2, 2;
	and.b32  	%r10, %r2, 2;
	ld.global.u32 	%r11, [%rd64];
	// begin inline asm
	cvt.rn.f16x2.f32 %r160, %r162, %r161;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r178, %r180, %r179;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r242, %r244, %r243;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r245, %r247, %r246;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r293, %r295, %r294;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r296, %r298, %r297;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r299, %r292, %r291;
	// end inline asm
	setp.eq.s32 	%p175, %r46, %r69;
	add.f32 	%f708, %f773, %f773;
	mov.b32 	%r344, %f708;
	and.b32  	%r345, %r344, -2147483648;
	or.b32  	%r346, %r345, 1056964608;
	mov.b32 	%f709, %r346;
	add.f32 	%f710, %f708, %f709;
	cvt.rzi.f32.f32 	%f711, %f710;
	abs.f32 	%f712, %f708;
	setp.gt.f32 	%p176, %f712, 0f4B000000;
	selp.f32 	%f713, %f708, %f711, %p176;
	cvt.rzi.f32.f32 	%f714, %f708;
	setp.lt.f32 	%p177, %f712, 0f3F000000;
	selp.f32 	%f715, %f714, %f713, %p177;
	cvt.rzi.s32.f32 	%r347, %f715;
	fma.rn.f32 	%f716, %f715, 0fBF000000, %f773;
	mul.f32 	%f717, %f716, %f716;
	fma.rn.f32 	%f718, %f717, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f719, %f717, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f720, %f718, %f717, 0fC0A55DF6;
	fma.rn.f32 	%f721, %f719, %f717, 0f4081E0CF;
	fma.rn.f32 	%f722, %f717, %f716, 0f00000000;
	fma.rn.f32 	%f723, %f721, %f717, 0fC09DE9E6;
	fma.rn.f32 	%f724, %f720, %f722, 0f00000000;
	fma.rn.f32 	%f725, %f723, %f717, 0f3F800000;
	fma.rn.f32 	%f726, %f716, 0f40490FDB, %f724;
	and.b32  	%r348, %r347, 1;
	setp.eq.b32 	%p178, %r348, 1;
	selp.f32 	%f727, %f725, %f726, %p178;
	selp.f32 	%f728, %f726, %f725, %p178;
	and.b32  	%r349, %r347, 2;
	setp.eq.s32 	%p179, %r349, 0;
	neg.f32 	%f729, %f727;
	selp.f32 	%f730, %f727, %f729, %p179;
	add.s32 	%r350, %r347, 1;
	and.b32  	%r351, %r350, 2;
	setp.eq.s32 	%p180, %r351, 0;
	sub.f32 	%f732, %f174, %f728;
	selp.f32 	%f733, %f728, %f732, %p180;
	cvt.rzi.f32.f32 	%f734, %f773;
	setp.eq.f32 	%p181, %f734, %f773;
	mul.f32 	%f735, %f773, 0f00000000;
	selp.f32 	%f736, %f735, %f730, %p181;
	abs.f32 	%f737, %f773;
	setp.gt.f32 	%p182, %f737, 0f4B800000;
	add.f32 	%f738, %f736, 0f3F800000;
	selp.f32 	%f739, %f738, %f733, %p182;
	selp.f32 	%f740, 0f3F800000, 0f00000000, %p175;
	mul.f32 	%f741, %f739, %f740;
	mul.f32 	%f742, %f736, %f740;
	mov.b32 	%r334, %f741;
	mov.b32 	%r333, %f127;
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	mov.b32 	%r340, %f742;
	xor.b32  	%r337, %r340, -2147483648;
	mov.b32 	%r339, %f128;
	xor.b32  	%r336, %r339, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r335, %r337, %r336;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r338, %r340, %r339;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r341, %r334, %r333;
	// end inline asm
	shl.b32 	%r353, %r5, 12;
	and.b32  	%r354, %r1, 3840;
	and.b32  	%r355, %r9, 16;
	and.b32  	%r356, %r9, 12;
	shl.b32 	%r357, %r3, 2;
	and.b32  	%r358, %r357, 24;
	and.b32  	%r359, %r3, 1;
	or.b32  	%r360, %r358, %r359;
	or.b32  	%r361, %r360, %r44;
	or.b32  	%r102, %r361, %r45;
	or.b32  	%r362, %r354, %r355;
	or.b32  	%r363, %r362, %r356;
	or.b32  	%r103, %r363, %r353;
	and.b32  	%r364, %r9, 28;
	or.b32  	%r365, %r364, %r354;
	or.b32  	%r366, %r353, %r365;
	add.s32 	%r104, %r366, 262144;
	add.s32 	%r105, %r366, 524288;
	add.s32 	%r106, %r366, 786432;
	and.b32  	%r107, %r2, 8;
	shl.b32 	%r367, %r2, 4;
	or.b32  	%r368, %r367, %r107;
	shr.u32 	%r369, %r368, 2;
	and.b32  	%r370, %r369, 14;
	shr.u32 	%r371, %r3, 1;
	mul.lo.s32 	%r372, %r371, 289;
	mul.lo.s32 	%r373, %r359, 130;
	shr.u32 	%r374, %r2, 4;
	mul.lo.s32 	%r375, %r374, 65;
	add.s32 	%r376, %r372, %r355;
	add.s32 	%r377, %r376, %r373;
	add.s32 	%r378, %r377, %r375;
	add.s32 	%r379, %r378, %r370;
	mul.wide.u32 	%rd65, %r379, 4;
	mov.u64 	%rd66, shmem;
	add.s64 	%rd11, %rd66, %rd65;
	or.b32  	%r380, %r355, %r370;
	cvt.u64.u32 	%rd67, %r380;
	cvt.u64.u32 	%rd68, %r375;
	cvt.u64.u32 	%rd69, %r373;
	cvt.u64.u32 	%rd70, %r372;
	add.s64 	%rd71, %rd70, %rd69;
	add.s64 	%rd72, %rd71, %rd68;
	add.s64 	%rd73, %rd72, %rd67;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd12, %rd66, %rd74;
	cvt.u64.u32 	%rd75, %r378;
	cvt.u64.u32 	%rd76, %r370;
	add.s64 	%rd77, %rd75, %rd76;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd13, %rd66, %rd78;
	or.b32  	%r381, %r371, 8;
	mul.lo.s32 	%r382, %r381, 289;
	add.s32 	%r383, %r373, %r355;
	add.s32 	%r384, %r383, %r375;
	add.s32 	%r385, %r384, %r382;
	add.s32 	%r386, %r385, %r370;
	mul.wide.u32 	%rd79, %r386, 4;
	add.s64 	%rd14, %rd66, %rd79;
	cvt.u64.u32 	%rd80, %r382;
	add.s64 	%rd81, %rd69, %rd68;
	add.s64 	%rd82, %rd81, %rd80;
	add.s64 	%rd83, %rd82, %rd67;
	shl.b64 	%rd84, %rd83, 2;
	add.s64 	%rd15, %rd66, %rd84;
	cvt.u64.u32 	%rd85, %r385;
	add.s64 	%rd86, %rd85, %rd76;
	shl.b64 	%rd87, %rd86, 2;
	add.s64 	%rd16, %rd66, %rd87;
	or.b32  	%r387, %r371, 16;
	mul.lo.s32 	%r388, %r387, 289;
	add.s32 	%r389, %r384, %r388;
	add.s32 	%r390, %r389, %r370;
	mul.wide.u32 	%rd88, %r390, 4;
	add.s64 	%rd17, %rd66, %rd88;
	cvt.u64.u32 	%rd89, %r388;
	add.s64 	%rd90, %rd81, %rd89;
	add.s64 	%rd91, %rd90, %rd67;
	shl.b64 	%rd92, %rd91, 2;
	add.s64 	%rd18, %rd66, %rd92;
	cvt.u64.u32 	%rd93, %r389;
	add.s64 	%rd94, %rd93, %rd76;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd19, %rd66, %rd95;
	or.b32  	%r391, %r371, 24;
	mul.lo.s32 	%r392, %r391, 289;
	add.s32 	%r393, %r384, %r392;
	add.s32 	%r394, %r393, %r370;
	mul.wide.u32 	%rd96, %r394, 4;
	add.s64 	%rd20, %rd66, %rd96;
	cvt.u64.u32 	%rd97, %r392;
	add.s64 	%rd98, %rd81, %rd97;
	add.s64 	%rd99, %rd98, %rd67;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd21, %rd66, %rd100;
	cvt.u64.u32 	%rd101, %r393;
	add.s64 	%rd102, %rd101, %rd76;
	shl.b64 	%rd103, %rd102, 2;
	add.s64 	%rd22, %rd66, %rd103;
	and.b32  	%r395, %r4, 32;
	and.b32  	%r396, %r55, 16;
	and.b32  	%r397, %r55, 32;
	shl.b32 	%r398, %r3, 1;
	or.b32  	%r399, %r355, %r398;
	or.b32  	%r400, %r399, %r397;
	shr.u32 	%r401, %r400, 2;
	mul.lo.s32 	%r402, %r14, 130;
	or.b32  	%r403, %r395, %r396;
	or.b32  	%r404, %r403, %r401;
	mad.lo.s32 	%r405, %r13, 65, %r402;
	add.s32 	%r406, %r405, %r404;
	or.b32  	%r407, %r10, %r9;
	bfe.u32 	%r408, %r407, 1, 2;
	mad.lo.s32 	%r409, %r408, 65, %r404;
	add.s32 	%r410, %r376, %r370;
	add.s32 	%r411, %r382, %r355;
	add.s32 	%r412, %r411, %r370;
	add.s32 	%r413, %r388, %r355;
	add.s32 	%r414, %r413, %r370;
	add.s32 	%r415, %r392, %r355;
	add.s32 	%r416, %r415, %r370;
	shl.b32 	%r417, %r7, 15;
	add.s32 	%r418, %r417, -98304;
	and.b32  	%r419, %r357, 4;
	or.b32  	%r420, %r419, %r43;
	shl.b32 	%r421, %r420, 5;
	shl.b32 	%r422, %r3, 14;
	and.b32  	%r108, %r422, 98304;
	or.b32  	%r423, %r356, %r1;
	or.b32  	%r424, %r423, %r355;
	or.b32  	%r109, %r424, %r421;
	cvt.s64.s32 	%rd23, %r418;
	and.b32  	%r425, %r398, 2;
	or.b32  	%r426, %r425, %r374;
	mul.lo.s32 	%r427, %r426, 65;
	add.s32 	%r428, %r410, %r427;
	mul.wide.u32 	%rd104, %r428, 4;
	add.s64 	%rd24, %rd66, %rd104;
	cvt.u64.u32 	%rd105, %r427;
	add.s64 	%rd106, %rd70, %rd105;
	add.s64 	%rd107, %rd106, %rd67;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd25, %rd66, %rd108;
	add.s32 	%r429, %r376, %r427;
	cvt.u64.u32 	%rd109, %r429;
	add.s64 	%rd110, %rd109, %rd76;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd26, %rd66, %rd111;
	add.s32 	%r430, %r412, %r427;
	mul.wide.u32 	%rd112, %r430, 4;
	add.s64 	%rd27, %rd66, %rd112;
	add.s64 	%rd113, %rd80, %rd105;
	add.s64 	%rd114, %rd113, %rd67;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd28, %rd66, %rd115;
	add.s32 	%r431, %r411, %r427;
	cvt.u64.u32 	%rd116, %r431;
	add.s64 	%rd117, %rd116, %rd76;
	shl.b64 	%rd118, %rd117, 2;
	add.s64 	%rd29, %rd66, %rd118;
	add.s32 	%r432, %r414, %r427;
	mul.wide.u32 	%rd119, %r432, 4;
	add.s64 	%rd30, %rd66, %rd119;
	add.s64 	%rd120, %rd89, %rd105;
	add.s64 	%rd121, %rd120, %rd67;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd31, %rd66, %rd122;
	add.s32 	%r433, %r413, %r427;
	cvt.u64.u32 	%rd123, %r433;
	add.s64 	%rd124, %rd123, %rd76;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd32, %rd66, %rd125;
	add.s32 	%r434, %r416, %r427;
	mul.wide.u32 	%rd126, %r434, 4;
	add.s64 	%rd33, %rd66, %rd126;
	add.s64 	%rd127, %rd97, %rd105;
	add.s64 	%rd128, %rd127, %rd67;
	shl.b64 	%rd129, %rd128, 2;
	add.s64 	%rd34, %rd66, %rd129;
	add.s32 	%r435, %r415, %r427;
	cvt.u64.u32 	%rd130, %r435;
	add.s64 	%rd131, %rd130, %rd76;
	shl.b64 	%rd132, %rd131, 2;
	add.s64 	%rd35, %rd66, %rd132;
	mul.wide.u32 	%rd133, %r409, 4;
	add.s64 	%rd36, %rd66, %rd133;
	mul.wide.u32 	%rd134, %r406, 4;
	add.s64 	%rd37, %rd66, %rd134;
	setp.eq.s32 	%p184, %r107, 0;
	mov.u16 	%rs87, 25600;
	mov.u16 	%rs61, 21504;
	mov.u16 	%rs95, 18432;
	mov.u16 	%rs83, -14592;
	setp.lt.u32 	%p198, %r3, 6;
	mov.u32 	%r1099, %r1090;
	mov.u32 	%r1106, %r1090;
	mov.u32 	%r1101, %r1090;
	mov.u32 	%r1102, %r1090;
	bra.uni 	LBB0_85;
LBB0_89:                                // %L15187
                                        //   in Loop: Header=BB0_85 Depth=1
	setp.ne.s32 	%p213, %r1099, 130816;
	add.s32 	%r1099, %r1099, 256;
	add.s32 	%r1087, %r1099, %r5;
	setp.gt.s32 	%p214, %r6, %r1087;
	and.pred  	%p215, %p213, %p214;
	@%p215 bra 	LBB0_85;
	bra.uni 	LBB0_90;
LBB0_85:                                // %L1219
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_86 Depth 2
	or.b32  	%r501, %r102, %r1099;
	shl.b32 	%r502, %r501, 12;
	add.s32 	%r503, %r103, %r502;
	shr.s32 	%r504, %r503, 31;
	shr.u32 	%r505, %r504, 3;
	add.s32 	%r506, %r503, %r505;
	shr.s32 	%r507, %r506, 29;
	setp.lt.s32 	%p185, %r503, 0;
	and.b32  	%r508, %r506, -536870912;
	setp.ne.s32 	%p186, %r508, %r503;
	and.pred  	%p187, %p185, %p186;
	selp.u32 	%r509, 1, 0, %p187;
	sub.s32 	%r510, %r509, %r507;
	shl.b32 	%r511, %r510, 29;
	add.s32 	%r512, %r511, %r503;
	mul.wide.s32 	%rd135, %r512, 4;
	add.s64 	%rd136, %rd2, %rd135;
	ld.global.v4.u32 	{%r513, %r514, %r515, %r516}, [%rd136];
	add.s32 	%r517, %r104, %r502;
	shr.s32 	%r518, %r517, 31;
	shr.u32 	%r519, %r518, 3;
	add.s32 	%r520, %r517, %r519;
	shr.s32 	%r521, %r520, 29;
	setp.lt.s32 	%p188, %r517, 0;
	and.b32  	%r522, %r520, -536870912;
	setp.ne.s32 	%p189, %r522, %r517;
	and.pred  	%p190, %p188, %p189;
	selp.u32 	%r523, 1, 0, %p190;
	sub.s32 	%r524, %r523, %r521;
	shl.b32 	%r525, %r524, 29;
	add.s32 	%r526, %r525, %r517;
	mul.wide.s32 	%rd137, %r526, 4;
	add.s64 	%rd138, %rd2, %rd137;
	ld.global.v4.u32 	{%r527, %r528, %r529, %r530}, [%rd138];
	add.s32 	%r531, %r105, %r502;
	shr.s32 	%r532, %r531, 31;
	shr.u32 	%r533, %r532, 3;
	add.s32 	%r534, %r531, %r533;
	shr.s32 	%r535, %r534, 29;
	setp.lt.s32 	%p191, %r531, 0;
	and.b32  	%r536, %r534, -536870912;
	setp.ne.s32 	%p192, %r536, %r531;
	and.pred  	%p193, %p191, %p192;
	selp.u32 	%r537, 1, 0, %p193;
	sub.s32 	%r538, %r537, %r535;
	shl.b32 	%r539, %r538, 29;
	add.s32 	%r540, %r539, %r531;
	mul.wide.s32 	%rd139, %r540, 4;
	add.s64 	%rd140, %rd2, %rd139;
	ld.global.v4.u32 	{%r541, %r542, %r543, %r544}, [%rd140];
	add.s32 	%r545, %r106, %r502;
	shr.s32 	%r546, %r545, 31;
	shr.u32 	%r547, %r546, 3;
	add.s32 	%r548, %r545, %r547;
	shr.s32 	%r549, %r548, 29;
	setp.lt.s32 	%p194, %r545, 0;
	and.b32  	%r550, %r548, -536870912;
	setp.ne.s32 	%p195, %r550, %r545;
	and.pred  	%p196, %p194, %p195;
	selp.u32 	%r551, 1, 0, %p196;
	sub.s32 	%r552, %r551, %r549;
	shl.b32 	%r553, %r552, 29;
	add.s32 	%r554, %r553, %r545;
	mul.wide.s32 	%rd141, %r554, 4;
	add.s64 	%rd142, %rd2, %rd141;
	ld.global.v4.u32 	{%r555, %r556, %r557, %r558}, [%rd142];
	selp.b32 	%r559, %r515, %r513, %p184;
	shfl.sync.bfly.b32	%r560, %r559, 8, 31, -1;
	selp.b32 	%r437, %r513, %r560, %p184;
	selp.b32 	%r438, %r560, %r515, %p184;
	selp.b32 	%r561, %r516, %r514, %p184;
	shfl.sync.bfly.b32	%r562, %r561, 8, 31, -1;
	selp.b32 	%r445, %r514, %r562, %p184;
	selp.b32 	%r446, %r562, %r516, %p184;
	selp.b32 	%r563, %r529, %r527, %p184;
	shfl.sync.bfly.b32	%r564, %r563, 8, 31, -1;
	selp.b32 	%r453, %r527, %r564, %p184;
	selp.b32 	%r454, %r564, %r529, %p184;
	selp.b32 	%r565, %r530, %r528, %p184;
	shfl.sync.bfly.b32	%r566, %r565, 8, 31, -1;
	selp.b32 	%r461, %r528, %r566, %p184;
	selp.b32 	%r462, %r566, %r530, %p184;
	selp.b32 	%r567, %r543, %r541, %p184;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r469, %r541, %r568, %p184;
	selp.b32 	%r470, %r568, %r543, %p184;
	selp.b32 	%r569, %r544, %r542, %p184;
	shfl.sync.bfly.b32	%r570, %r569, 8, 31, -1;
	selp.b32 	%r477, %r542, %r570, %p184;
	selp.b32 	%r478, %r570, %r544, %p184;
	selp.b32 	%r571, %r557, %r555, %p184;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r485, %r555, %r572, %p184;
	selp.b32 	%r486, %r572, %r557, %p184;
	selp.b32 	%r573, %r558, %r556, %p184;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r493, %r556, %r574, %p184;
	selp.b32 	%r494, %r574, %r558, %p184;
	mov.u32 	%r495, 21520;
	// begin inline asm
	prmt.b32 %r436, %r437, %r438, %r495;
	// end inline asm
	mov.u32 	%r499, 30258;
	// begin inline asm
	prmt.b32 %r440, %r437, %r438, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r444, %r445, %r446, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r448, %r445, %r446, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r452, %r453, %r454, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r456, %r453, %r454, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r460, %r461, %r462, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r464, %r461, %r462, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r468, %r469, %r470, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r472, %r469, %r470, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r499;
	// end inline asm
	st.shared.u32 	[%rd11], %r436;
	st.shared.u32 	[%rd12+128], %r440;
	st.shared.u32 	[%rd13+4], %r444;
	st.shared.u32 	[%rd12+132], %r448;
	st.shared.u32 	[%rd14], %r452;
	st.shared.u32 	[%rd15+128], %r456;
	st.shared.u32 	[%rd16+4], %r460;
	st.shared.u32 	[%rd15+132], %r464;
	st.shared.u32 	[%rd17], %r468;
	st.shared.u32 	[%rd18+128], %r472;
	st.shared.u32 	[%rd19+4], %r476;
	st.shared.u32 	[%rd18+132], %r480;
	st.shared.u32 	[%rd20], %r484;
	st.shared.u32 	[%rd21+128], %r488;
	st.shared.u32 	[%rd22+4], %r492;
	st.shared.u32 	[%rd21+132], %r496;
	bar.sync 	0;
	mov.u32 	%r1103, 256;
	mov.u64 	%rd193, %rd37;
	mov.u64 	%rd194, %rd36;
	mov.u32 	%r1104, %r1102;
	mov.u32 	%r1105, %r1101;
LBB0_86:                                // %L8927
                                        //   Parent Loop BB0_85 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1101, %r1106;
	mov.u32 	%r1102, %r1105;
	ld.shared.u32 	%r1106, [%rd193];
	// begin inline asm
	mov.b32 %r580, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r591, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r579, %r1106, -2004318072;
	mov.u32 	%r578, 983055;
	// begin inline asm
	lop3.b32 %r577, %r578, %r579, %r580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r581, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r582, %r580, %r581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r585, %r577, %r582;
	// end inline asm
	mov.u32 	%r589, 15728880;
	// begin inline asm
	lop3.b32 %r588, %r589, %r579, %r591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r592, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r593, %r591, %r592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r596, %r588, %r593;
	// end inline asm
	shr.u32 	%r601, %r579, 8;
	// begin inline asm
	lop3.b32 %r599, %r578, %r601, %r580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r603, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r604, %r580, %r603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r607, %r599, %r604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r610, %r589, %r601, %r591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r614, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r615, %r591, %r614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r618, %r610, %r615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r621, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r623, %r621, %r585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r626, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r628, %r626, %r596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r631, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r633, %r631, %r607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r636, %r214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r638, %r636, %r618;
	// end inline asm
	// begin inline asm
	mov.b32 %r646, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r657, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r645, %r1104, -2004318072;
	// begin inline asm
	lop3.b32 %r643, %r578, %r645, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r648, %r646, %r647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r651, %r643, %r648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r654, %r589, %r645, %r657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r657, %r658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r662, %r654, %r659;
	// end inline asm
	shr.u32 	%r667, %r645, 8;
	// begin inline asm
	lop3.b32 %r665, %r578, %r667, %r646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r646, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r676, %r589, %r667, %r657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r681, %r657, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r684, %r676, %r681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r687, %r160, %r651, %r623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r691, %r160, %r662, %r628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r695, %r160, %r673, %r633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r699, %r160, %r684, %r638;
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r719, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r707, %r1102, -2004318072;
	// begin inline asm
	lop3.b32 %r705, %r578, %r707, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r708, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r716, %r589, %r707, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r721, %r719, %r720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r724, %r716, %r721;
	// end inline asm
	shr.u32 	%r729, %r707, 8;
	// begin inline asm
	lop3.b32 %r727, %r578, %r729, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r732, %r708, %r731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r735, %r727, %r732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r738, %r589, %r729, %r719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r742, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r743, %r719, %r742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r746, %r738, %r743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r751, %r749, %r713, %r687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r755, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r757, %r755, %r724, %r691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r761, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r763, %r761, %r735, %r695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r769, %r767, %r746, %r699;
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r777, %r1101, -2004318072;
	// begin inline asm
	lop3.b32 %r775, %r578, %r777, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r780, %r778, %r779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r783, %r775, %r780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r786, %r589, %r777, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r789, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	shr.u32 	%r799, %r777, 8;
	// begin inline asm
	lop3.b32 %r797, %r578, %r799, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r778, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r808, %r589, %r799, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r789, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r842, %r196, %r783, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r839, %r196, %r794, %r757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r851, %r196, %r805, %r763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r848, %r196, %r816, %r769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r840, %r242, %r842, %r837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r844, %r245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r846, %r844, %r848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r849, %r242, %r851, %r846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r853, %r245, %r842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r856, %r242, %r839, %r853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r860, %r245, %r851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r863, %r242, %r848, %r860;
	// end inline asm
	mov.u32 	%r875, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r867, %r868}, {%r290, %r296, %r293, %r299}, {%r840, %r856}, {%r875, %r875};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r877, %r878}, {%r290, %r296, %r293, %r299}, {%r849, %r863}, {%r875, %r875};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r887, %r888}, {%r332, %r338, %r335, %r341}, {%r867, %r868}, {%r875, %r875};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r897, %r898}, {%r332, %r338, %r335, %r341}, {%r877, %r878}, {%r875, %r875};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r907, %r11, %r887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r910, %r11, %r888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r913, %r11, %r897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r916, %r11, %r898;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs83, %rs83};
	// end inline asm
	mov.u16 	%rs72, 18176;
	// begin inline asm
	mov.b32 %r920, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r921, %r907, %r919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r924, %r921, %r920;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r929, %r910, %r927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r932, %r929, %r928;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r936, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r937, %r913, %r935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r940, %r937, %r936;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r945, %r916, %r943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r948, %r945, %r944;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r954, %r952;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r956, %r924, %r953;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r954, %r959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r932, %r960;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r954, %r966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r940, %r967;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r954, %r973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r948, %r974;
	// end inline asm
	mov.u32 	%r983, 25152;
	// begin inline asm
	prmt.b32 %r980, %r956, %r970, %r983;
	// end inline asm
	// begin inline asm
	prmt.b32 %r984, %r963, %r977, %r983;
	// end inline asm
	shl.b32 	%r991, %r984, 4;
	mov.u32 	%r989, 252645135;
	// begin inline asm
	lop3.b32 %r988, %r989, %r980, %r991, 202;
	// end inline asm
	xor.b32  	%r992, %r988, -2004318072;
	st.shared.u32 	[%rd194], %r992;
	add.s32 	%r1103, %r1103, -8;
	add.s64 	%rd194, %rd194, 1156;
	add.s64 	%rd193, %rd193, 1156;
	setp.eq.s32 	%p197, %r1103, 0;
	mov.u32 	%r1104, %r1102;
	mov.u32 	%r1105, %r1101;
	@%p197 bra 	LBB0_87;
	bra.uni 	LBB0_86;
LBB0_87:                                // %guard_pass6230
                                        //   in Loop: Header=BB0_85 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r998, [%rd24];
	ld.shared.u32 	%r999, [%rd25+128];
	ld.shared.u32 	%r1006, [%rd26+4];
	ld.shared.u32 	%r1007, [%rd25+132];
	ld.shared.u32 	%r1014, [%rd27];
	ld.shared.u32 	%r1015, [%rd28+128];
	ld.shared.u32 	%r1022, [%rd29+4];
	ld.shared.u32 	%r1023, [%rd28+132];
	ld.shared.u32 	%r1030, [%rd30];
	ld.shared.u32 	%r1031, [%rd31+128];
	ld.shared.u32 	%r1038, [%rd32+4];
	ld.shared.u32 	%r1039, [%rd31+132];
	ld.shared.u32 	%r1046, [%rd33];
	ld.shared.u32 	%r1047, [%rd34+128];
	ld.shared.u32 	%r1054, [%rd35+4];
	ld.shared.u32 	%r1055, [%rd34+132];
	// begin inline asm
	prmt.b32 %r993, %r998, %r999, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r997, %r998, %r999, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1001, %r1006, %r1007, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1005, %r1006, %r1007, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1009, %r1014, %r1015, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1013, %r1014, %r1015, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1017, %r1022, %r1023, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1021, %r1022, %r1023, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1025, %r1030, %r1031, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1029, %r1030, %r1031, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1033, %r1038, %r1039, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1037, %r1038, %r1039, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1041, %r1046, %r1047, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1045, %r1046, %r1047, %r499;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1049, %r1054, %r1055, %r495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1053, %r1054, %r1055, %r499;
	// end inline asm
	selp.b32 	%r1057, %r997, %r993, %p184;
	shfl.sync.bfly.b32	%r126, %r1057, 8, 31, -1;
	selp.b32 	%r1058, %r1005, %r1001, %p184;
	shfl.sync.bfly.b32	%r127, %r1058, 8, 31, -1;
	selp.b32 	%r1059, %r1013, %r1009, %p184;
	shfl.sync.bfly.b32	%r128, %r1059, 8, 31, -1;
	selp.b32 	%r1060, %r1021, %r1017, %p184;
	shfl.sync.bfly.b32	%r129, %r1060, 8, 31, -1;
	selp.b32 	%r1061, %r1029, %r1025, %p184;
	shfl.sync.bfly.b32	%r130, %r1061, 8, 31, -1;
	selp.b32 	%r1062, %r1037, %r1033, %p184;
	shfl.sync.bfly.b32	%r131, %r1062, 8, 31, -1;
	selp.b32 	%r1063, %r1045, %r1041, %p184;
	shfl.sync.bfly.b32	%r132, %r1063, 8, 31, -1;
	selp.b32 	%r1064, %r1053, %r1049, %p184;
	shfl.sync.bfly.b32	%r133, %r1064, 8, 31, -1;
	@%p198 bra 	LBB0_89;
// %bb.88:                              // %L14286
                                        //   in Loop: Header=BB0_85 Depth=1
	selp.b32 	%r1065, %r133, %r1053, %p184;
	selp.b32 	%r1066, %r1049, %r133, %p184;
	selp.b32 	%r1067, %r132, %r1045, %p184;
	selp.b32 	%r1068, %r1041, %r132, %p184;
	selp.b32 	%r1069, %r131, %r1037, %p184;
	selp.b32 	%r1070, %r1033, %r131, %p184;
	selp.b32 	%r1071, %r130, %r1029, %p184;
	selp.b32 	%r1072, %r1025, %r130, %p184;
	selp.b32 	%r1073, %r129, %r1021, %p184;
	selp.b32 	%r1074, %r1017, %r129, %p184;
	selp.b32 	%r1075, %r128, %r1013, %p184;
	selp.b32 	%r1076, %r1009, %r128, %p184;
	selp.b32 	%r1077, %r127, %r1005, %p184;
	selp.b32 	%r1078, %r1001, %r127, %p184;
	selp.b32 	%r1079, %r126, %r997, %p184;
	selp.b32 	%r1080, %r993, %r126, %p184;
	shl.b32 	%r1081, %r1099, 12;
	or.b32  	%r1082, %r1081, %r108;
	or.b32  	%r1083, %r109, %r1082;
	cvt.u64.u32 	%rd143, %r1083;
	add.s64 	%rd144, %rd143, %rd23;
	shr.u64 	%rd145, %rd144, 35;
	add.s64 	%rd146, %rd144, %rd145;
	shr.s64 	%rd147, %rd146, 29;
	setp.lt.s64 	%p201, %rd144, 0;
	and.b64  	%rd148, %rd146, -536870912;
	setp.ne.s64 	%p202, %rd148, %rd144;
	and.pred  	%p203, %p201, %p202;
	selp.u64 	%rd149, 1, 0, %p203;
	sub.s64 	%rd150, %rd149, %rd147;
	shl.b64 	%rd151, %rd150, 29;
	add.s64 	%rd152, %rd151, %rd144;
	shl.b64 	%rd153, %rd152, 2;
	add.s64 	%rd154, %rd3, %rd153;
	st.global.v4.u32 	[%rd154], {%r1080, %r1078, %r1079, %r1077};
	or.b32  	%r1084, %r1083, 262144;
	cvt.u64.u32 	%rd155, %r1084;
	add.s64 	%rd156, %rd155, %rd23;
	shr.u64 	%rd157, %rd156, 35;
	add.s64 	%rd158, %rd156, %rd157;
	shr.s64 	%rd159, %rd158, 29;
	setp.lt.s64 	%p204, %rd156, 0;
	and.b64  	%rd160, %rd158, -536870912;
	setp.ne.s64 	%p205, %rd160, %rd156;
	and.pred  	%p206, %p204, %p205;
	selp.u64 	%rd161, 1, 0, %p206;
	sub.s64 	%rd162, %rd161, %rd159;
	shl.b64 	%rd163, %rd162, 29;
	add.s64 	%rd164, %rd163, %rd156;
	shl.b64 	%rd165, %rd164, 2;
	add.s64 	%rd166, %rd3, %rd165;
	st.global.v4.u32 	[%rd166], {%r1076, %r1074, %r1075, %r1073};
	or.b32  	%r1085, %r1083, 524288;
	cvt.u64.u32 	%rd167, %r1085;
	add.s64 	%rd168, %rd167, %rd23;
	shr.u64 	%rd169, %rd168, 35;
	add.s64 	%rd170, %rd168, %rd169;
	shr.s64 	%rd171, %rd170, 29;
	setp.lt.s64 	%p207, %rd168, 0;
	and.b64  	%rd172, %rd170, -536870912;
	setp.ne.s64 	%p208, %rd172, %rd168;
	and.pred  	%p209, %p207, %p208;
	selp.u64 	%rd173, 1, 0, %p209;
	sub.s64 	%rd174, %rd173, %rd171;
	shl.b64 	%rd175, %rd174, 29;
	add.s64 	%rd176, %rd175, %rd168;
	shl.b64 	%rd177, %rd176, 2;
	add.s64 	%rd178, %rd3, %rd177;
	st.global.v4.u32 	[%rd178], {%r1072, %r1070, %r1071, %r1069};
	or.b32  	%r1086, %r1083, 786432;
	cvt.u64.u32 	%rd179, %r1086;
	add.s64 	%rd180, %rd179, %rd23;
	shr.u64 	%rd181, %rd180, 35;
	add.s64 	%rd182, %rd180, %rd181;
	shr.s64 	%rd183, %rd182, 29;
	setp.lt.s64 	%p210, %rd180, 0;
	and.b64  	%rd184, %rd182, -536870912;
	setp.ne.s64 	%p211, %rd184, %rd180;
	and.pred  	%p212, %p210, %p211;
	selp.u64 	%rd185, 1, 0, %p212;
	sub.s64 	%rd186, %rd185, %rd183;
	shl.b64 	%rd187, %rd186, 29;
	add.s64 	%rd188, %rd187, %rd180;
	shl.b64 	%rd189, %rd188, 2;
	add.s64 	%rd190, %rd3, %rd189;
	st.global.v4.u32 	[%rd190], {%r1068, %r1066, %r1067, %r1065};
	bra.uni 	LBB0_89;
LBB0_90:                                // %L15198
	st.global.u32 	[%rd4], %r1090;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r1089, 2;
	st.global.u32 	[%rd4], %r1089;
	mov.u64 	%rd191, exception1395;
	cvta.global.u64 	%rd192, %rd191;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd192;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r134;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd59, exception1;
	cvta.global.u64 	%rd60, %rd59;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r134;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
