// PTX CompilerJob of MethodInstance for xpose_kernel(::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE // -- Begin function _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE
                                        // @_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE
.visible .entry _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE(
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_3[32]
)
.reqntid 512, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<91>;
	.reg .b64 	%rd<14>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd1, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_1];
	ld.param.u64 	%rd2, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_2];
	ld.param.u64 	%rd4, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_3];
	mov.u32 	%r10, %tid.x;
	mov.u32 	%r11, %tid.y;
	shl.b32 	%r12, %r11, 5;
	mov.u32 	%r13, %ctaid.x;
	shl.b32 	%r14, %r13, 9;
	or.b32  	%r15, %r12, %r10;
	or.b32  	%r16, %r15, %r14;
	mul.wide.u32 	%rd5, %r16, 4;
	add.s64 	%rd3, %rd4, %rd5;
	mov.u32 	%r17, 1;
	st.global.u32 	[%rd3], %r17;
	shl.b32 	%r18, %r10, 1;
	and.b32  	%r19, %r18, 2;
	shr.u32 	%r20, %r10, 4;
	or.b32  	%r21, %r19, %r20;
	shl.b32 	%r22, %r21, 5;
	shl.b32 	%r23, %r11, 8;
	and.b32  	%r24, %r23, 256;
	and.b32  	%r25, %r18, 28;
	shl.b32 	%r26, %r11, 7;
	and.b32  	%r1, %r26, 1792;
	or.b32  	%r27, %r24, %r14;
	or.b32  	%r28, %r27, %r22;
	or.b32  	%r2, %r28, %r25;
	or.b32  	%r3, %r2, 128;
	cvt.u16.u32 	%rs3, %r10;
	and.b16  	%rs1, %rs3, 16;
	and.b16  	%rs2, %rs3, 2;
	shl.b32 	%r29, %r13, 5;
	shl.b32 	%r30, %r10, 2;
	and.b32  	%r31, %r30, 12;
	shl.b32 	%r32, %r11, 11;
	and.b32  	%r33, %r32, 28672;
	and.b32  	%r34, %r10, 12;
	or.b32  	%r35, %r34, %r20;
	or.b32  	%r36, %r35, %r33;
	shl.b32 	%r37, %r36, 12;
	shl.b32 	%r38, %r11, 4;
	and.b32  	%r39, %r38, 16;
	or.b32  	%r40, %r31, %r29;
	or.b32  	%r41, %r40, %r39;
	or.b32  	%r4, %r41, %r37;
	mov.u32 	%r89, 0;
	setp.eq.s16 	%p1, %rs2, 0;
	setp.eq.s16 	%p2, %rs1, 0;
	mov.u32 	%r90, %r89;
LBB0_1:                                 // %L94
                                        // =>This Inner Loop Header: Depth=1
	or.b32  	%r42, %r90, %r1;
	shl.b32 	%r43, %r42, 16;
	or.b32  	%r44, %r2, %r43;
	mul.wide.u32 	%rd6, %r44, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.v4.u32 	{%r45, %r46, %r47, %r48}, [%rd7];
	add.s32 	%r49, %r3, %r43;
	mul.wide.s32 	%rd8, %r49, 4;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.v4.u32 	{%r50, %r51, %r52, %r53}, [%rd9];
	selp.b32 	%r54, %r47, %r45, %p2;
	shfl.sync.bfly.b32	%r55, %r54, 16, 31, -1;
	selp.b32 	%r56, %r45, %r55, %p2;
	selp.b32 	%r57, %r55, %r47, %p2;
	selp.b32 	%r58, %r48, %r46, %p2;
	shfl.sync.bfly.b32	%r59, %r58, 16, 31, -1;
	selp.b32 	%r60, %r46, %r59, %p2;
	selp.b32 	%r61, %r59, %r48, %p2;
	selp.b32 	%r62, %r52, %r50, %p2;
	shfl.sync.bfly.b32	%r63, %r62, 16, 31, -1;
	selp.b32 	%r64, %r50, %r63, %p2;
	selp.b32 	%r65, %r63, %r52, %p2;
	selp.b32 	%r66, %r53, %r51, %p2;
	shfl.sync.bfly.b32	%r67, %r66, 16, 31, -1;
	selp.b32 	%r68, %r51, %r67, %p2;
	selp.b32 	%r69, %r67, %r53, %p2;
	selp.b32 	%r70, %r64, %r56, %p1;
	shfl.sync.bfly.b32	%r71, %r70, 2, 31, -1;
	selp.b32 	%r72, %r56, %r71, %p1;
	selp.b32 	%r73, %r71, %r64, %p1;
	selp.b32 	%r74, %r68, %r60, %p1;
	shfl.sync.bfly.b32	%r75, %r74, 2, 31, -1;
	selp.b32 	%r76, %r60, %r75, %p1;
	selp.b32 	%r77, %r75, %r68, %p1;
	selp.b32 	%r78, %r65, %r57, %p1;
	shfl.sync.bfly.b32	%r79, %r78, 2, 31, -1;
	selp.b32 	%r80, %r57, %r79, %p1;
	selp.b32 	%r81, %r79, %r65, %p1;
	selp.b32 	%r82, %r69, %r61, %p1;
	shfl.sync.bfly.b32	%r83, %r82, 2, 31, -1;
	selp.b32 	%r84, %r61, %r83, %p1;
	selp.b32 	%r85, %r83, %r69, %p1;
	or.b32  	%r86, %r4, %r89;
	mul.wide.u32 	%rd10, %r86, 4;
	add.s64 	%rd11, %rd2, %rd10;
	st.global.v4.u32 	[%rd11], {%r72, %r76, %r80, %r84};
	or.b32  	%r87, %r86, 8192;
	mul.wide.s32 	%rd12, %r87, 4;
	add.s64 	%rd13, %rd2, %rd12;
	st.global.v4.u32 	[%rd13], {%r73, %r77, %r81, %r85};
	add.s32 	%r90, %r90, 1;
	add.s32 	%r89, %r89, 65536;
	setp.ne.s32 	%p3, %r90, 256;
	@%p3 bra 	LBB0_1;
// %bb.2:                               // %L1170
	mov.u32 	%r88, 0;
	st.global.u32 	[%rd3], %r88;
	ret;
                                        // -- End function
}
