// PTX CompilerJob of MethodInstance for xpose_kernel(::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=1

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE // -- Begin function _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE
                                        // @_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE
.visible .entry _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE(
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_3[32]
)
.reqntid 512, 1, 1
.minnctapersm 1
{
	.reg .pred 	%p<4>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<96>;
	.reg .b64 	%rd<14>;

// %bb.0:                               // %conversion
	ld.param.u64 	%rd1, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_1];
	ld.param.u64 	%rd2, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_2];
	ld.param.u64 	%rd4, [_Z12xpose_kernel13CuDeviceArrayI6Int4x8Li1ELi1EES_IS0_Li1ELi1EES_I5Int32Li1ELi1EE_param_3];
	mov.u32 	%r10, %tid.y;
	shl.b32 	%r11, %r10, 5;
	mov.u32 	%r12, %tid.x;
	mov.u32 	%r13, %ctaid.x;
	shl.b32 	%r14, %r13, 9;
	or.b32  	%r15, %r11, %r12;
	or.b32  	%r16, %r15, %r14;
	mul.wide.u32 	%rd5, %r16, 4;
	add.s64 	%rd3, %rd4, %rd5;
	mov.u32 	%r17, 1;
	st.global.u32 	[%rd3], %r17;
	shl.b32 	%r18, %r13, 11;
	shl.b32 	%r19, %r12, 3;
	and.b32  	%r20, %r19, 112;
	shl.b32 	%r21, %r10, 7;
	and.b32  	%r1, %r21, 1792;
	shl.b32 	%r22, %r10, 10;
	and.b32  	%r23, %r22, 1024;
	shl.b32 	%r24, %r12, 1;
	and.b32  	%r25, %r24, 2;
	shr.u32 	%r26, %r12, 4;
	or.b32  	%r27, %r25, %r26;
	shl.b32 	%r28, %r27, 7;
	or.b32  	%r29, %r20, %r18;
	or.b32  	%r30, %r29, %r23;
	or.b32  	%r2, %r30, %r28;
	or.b32  	%r31, %r18, %r23;
	or.b32  	%r32, %r31, %r20;
	or.b32  	%r3, %r32, %r28;
	cvt.u16.u32 	%rs3, %r12;
	and.b16  	%rs1, %rs3, 16;
	and.b16  	%rs2, %rs3, 2;
	shl.b32 	%r33, %r13, 5;
	shl.b32 	%r34, %r12, 2;
	and.b32  	%r35, %r34, 12;
	shl.b32 	%r36, %r10, 4;
	and.b32  	%r37, %r36, 16;
	shl.b32 	%r38, %r10, 11;
	and.b32  	%r39, %r38, 28672;
	and.b32  	%r40, %r12, 12;
	or.b32  	%r41, %r40, %r26;
	or.b32  	%r42, %r41, %r39;
	shl.b32 	%r43, %r42, 12;
	or.b32  	%r44, %r35, %r33;
	or.b32  	%r45, %r44, %r37;
	or.b32  	%r4, %r43, %r45;
	mov.u32 	%r94, 0;
	setp.eq.s16 	%p1, %rs2, 0;
	setp.eq.s16 	%p2, %rs1, 0;
	mov.u32 	%r95, %r94;
LBB0_1:                                 // %L96
                                        // =>This Inner Loop Header: Depth=1
	or.b32  	%r46, %r95, %r1;
	shl.b32 	%r47, %r46, 18;
	or.b32  	%r48, %r2, %r47;
	cvt.u64.u32 	%rd6, %r48;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.v4.u32 	{%r49, %r50, %r51, %r52}, [%rd7];
	or.b32  	%r53, %r3, %r47;
	or.b32  	%r54, %r53, 512;
	cvt.u64.u32 	%rd8, %r54;
	add.s64 	%rd9, %rd1, %rd8;
	ld.global.v4.u32 	{%r55, %r56, %r57, %r58}, [%rd9];
	selp.b32 	%r59, %r51, %r49, %p2;
	shfl.sync.bfly.b32	%r60, %r59, 16, 31, -1;
	selp.b32 	%r61, %r49, %r60, %p2;
	selp.b32 	%r62, %r60, %r51, %p2;
	selp.b32 	%r63, %r52, %r50, %p2;
	shfl.sync.bfly.b32	%r64, %r63, 16, 31, -1;
	selp.b32 	%r65, %r50, %r64, %p2;
	selp.b32 	%r66, %r64, %r52, %p2;
	selp.b32 	%r67, %r57, %r55, %p2;
	shfl.sync.bfly.b32	%r68, %r67, 16, 31, -1;
	selp.b32 	%r69, %r55, %r68, %p2;
	selp.b32 	%r70, %r68, %r57, %p2;
	selp.b32 	%r71, %r58, %r56, %p2;
	shfl.sync.bfly.b32	%r72, %r71, 16, 31, -1;
	selp.b32 	%r73, %r56, %r72, %p2;
	selp.b32 	%r74, %r72, %r58, %p2;
	selp.b32 	%r75, %r69, %r61, %p1;
	shfl.sync.bfly.b32	%r76, %r75, 2, 31, -1;
	selp.b32 	%r77, %r61, %r76, %p1;
	selp.b32 	%r78, %r76, %r69, %p1;
	selp.b32 	%r79, %r73, %r65, %p1;
	shfl.sync.bfly.b32	%r80, %r79, 2, 31, -1;
	selp.b32 	%r81, %r65, %r80, %p1;
	selp.b32 	%r82, %r80, %r73, %p1;
	selp.b32 	%r83, %r70, %r62, %p1;
	shfl.sync.bfly.b32	%r84, %r83, 2, 31, -1;
	selp.b32 	%r85, %r62, %r84, %p1;
	selp.b32 	%r86, %r84, %r70, %p1;
	selp.b32 	%r87, %r74, %r66, %p1;
	shfl.sync.bfly.b32	%r88, %r87, 2, 31, -1;
	selp.b32 	%r89, %r66, %r88, %p1;
	selp.b32 	%r90, %r88, %r74, %p1;
	or.b32  	%r91, %r4, %r94;
	mul.wide.u32 	%rd10, %r91, 4;
	add.s64 	%rd11, %rd2, %rd10;
	st.global.v4.u32 	[%rd11], {%r77, %r81, %r85, %r89};
	or.b32  	%r92, %r91, 8192;
	mul.wide.s32 	%rd12, %r92, 4;
	add.s64 	%rd13, %rd2, %rd12;
	st.global.v4.u32 	[%rd13], {%r78, %r82, %r86, %r90};
	add.s32 	%r95, %r95, 1;
	add.s32 	%r94, %r94, 65536;
	setp.ne.s32 	%p3, %r95, 256;
	@%p3 bra 	LBB0_1;
// %bb.2:                               // %L1174
	mov.u32 	%r93, 0;
	st.global.u32 	[%rd3], %r93;
	ret;
                                        // -- End function
}
