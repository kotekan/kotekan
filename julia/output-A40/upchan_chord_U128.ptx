// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<342>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16436>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<175>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r271, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r272, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r272, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r273, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r274, %r273, %r2;
	or.b32  	%r275, %r274, %r4;
	mul.wide.u32 	%rd46, %r275, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r276, 1;
	st.global.u32 	[%rd4], %r276;
	ld.global.u32 	%r5, [%rd24];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L203
	ld.param.u64 	%rd28, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd28];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L213
	ld.param.u64 	%rd32, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd32];
	sub.s32 	%r277, %r6, %r5;
	and.b32  	%r278, %r277, 255;
	setp.ne.s32 	%p6, %r278, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L219
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd36];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L229
	sub.s32 	%r279, %r8, %r7;
	and.b32  	%r280, %r279, 1;
	setp.eq.b32 	%p12, %r280, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass169
	bfe.u32 	%r190, %r2, 1, 1;
	and.b32  	%r191, %r2, 1;
	bfe.u32 	%r193, %r2, 2, 1;
	shr.u32 	%r194, %r2, 4;
	shl.b32 	%r292, %r194, 2;
	shl.b32 	%r293, %r193, 3;
	shl.b32 	%r294, %r191, 4;
	shl.b32 	%r295, %r190, 5;
	or.b32  	%r296, %r294, %r295;
	or.b32  	%r297, %r293, %r296;
	or.b32  	%r298, %r292, %r297;
	bfe.u32 	%r196, %r2, 3, 1;
	shl.b32 	%r299, %r196, 1;
	or.b32  	%r197, %r299, %r298;
	or.b32  	%r198, %r197, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r197;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L734
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L737
	cvt.rn.f32.s32 	%f293, %r198;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L754
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L757
	or.b32  	%r317, %r197, 1;
	or.b32  	%r10, %r197, 65;
	cvt.rn.f32.s32 	%f328, %r317;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L836
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L839
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L856
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L859
	or.b32  	%r335, %r197, 128;
	or.b32  	%r12, %r197, 192;
	cvt.rn.f32.s32 	%f397, %r335;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L938
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L941
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L958
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L961
	or.b32  	%r353, %r197, 129;
	or.b32  	%r14, %r197, 193;
	cvt.rn.f32.s32 	%f466, %r353;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1040
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1043
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1060
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1063
	or.b32  	%r371, %r197, 256;
	or.b32  	%r16, %r197, 320;
	cvt.rn.f32.s32 	%f535, %r371;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1142
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1145
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1162
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1165
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r389, %r197, 257;
	or.b32  	%r18, %r197, 321;
	cvt.rn.f32.s32 	%f604, %r389;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1244
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1247
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1264
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1267
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r407, %r197, 384;
	or.b32  	%r20, %r197, 448;
	cvt.rn.f32.s32 	%f673, %r407;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1346
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1349
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1366
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1369
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r425, %r197, 385;
	or.b32  	%r22, %r197, 449;
	cvt.rn.f32.s32 	%f742, %r425;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1448
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1451
	mov.b32 	%r300, %f266;
	mov.b32 	%r307, %f300;
	mov.b32 	%r318, %f335;
	mov.b32 	%r325, %f369;
	mov.b32 	%r336, %f404;
	mov.b32 	%r343, %f438;
	mov.b32 	%r354, %f473;
	mov.b32 	%r361, %f507;
	mov.b32 	%r372, %f542;
	mov.b32 	%r379, %f576;
	mov.b32 	%r390, %f611;
	mov.b32 	%r397, %f645;
	mov.b32 	%r408, %f680;
	mov.b32 	%r415, %f714;
	mov.b32 	%r426, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r433, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1468
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1471
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r319, %r318, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	and.b32  	%r337, %r336, -2147483648;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r362, %r361, -2147483648;
	and.b32  	%r373, %r372, -2147483648;
	and.b32  	%r380, %r379, -2147483648;
	and.b32  	%r391, %r390, -2147483648;
	and.b32  	%r398, %r397, -2147483648;
	and.b32  	%r409, %r408, -2147483648;
	and.b32  	%r416, %r415, -2147483648;
	and.b32  	%r427, %r426, -2147483648;
	and.b32  	%r434, %r433, -2147483648;
	mul.lo.s32 	%r24, %r197, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r443, %r26, 8388607;
	or.b32  	%r16366, %r443, 1065353216;
	mov.b32 	%f1353, %r16366;
	add.s32 	%r444, %r26, -1073741824;
	and.b32  	%r16367, %r444, -8388608;
	setp.eq.s32 	%p118, %r16367, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r445, %r16367, 192937984;
	add.s32 	%r446, %r16366, %r445;
	mov.b32 	%f822, %r446;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16367, %r16367, %r445;
	mov.b32 	%r16366, %f1353;
	setp.ne.s32 	%p119, %r16367, 0;
	setp.ne.s32 	%p120, %r16366, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r320, %r319, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	or.b32  	%r338, %r337, 1056964608;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r363, %r362, 1056964608;
	or.b32  	%r374, %r373, 1056964608;
	or.b32  	%r381, %r380, 1056964608;
	or.b32  	%r392, %r391, 1056964608;
	or.b32  	%r399, %r398, 1056964608;
	or.b32  	%r410, %r409, 1056964608;
	or.b32  	%r417, %r416, 1056964608;
	or.b32  	%r428, %r427, 1056964608;
	or.b32  	%r435, %r434, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r447, %f71;
	and.b32  	%r448, %r447, -2147483648;
	mov.b32 	%r449, %f1354;
	or.b32  	%r450, %r448, %r449;
	mov.b32 	%f1354, %r450;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r302;
	mov.b32 	%f301, %r309;
	mov.b32 	%f336, %r320;
	mov.b32 	%f370, %r327;
	mov.b32 	%f405, %r338;
	mov.b32 	%f439, %r345;
	mov.b32 	%f474, %r356;
	mov.b32 	%f508, %r363;
	mov.b32 	%f543, %r374;
	mov.b32 	%f577, %r381;
	mov.b32 	%f612, %r392;
	mov.b32 	%f646, %r399;
	mov.b32 	%f681, %r410;
	mov.b32 	%f715, %r417;
	mov.b32 	%f750, %r428;
	mov.b32 	%f784, %r435;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r451, %f832;
	and.b32  	%r452, %r451, -2147483648;
	or.b32  	%r453, %r452, 1056964608;
	mov.b32 	%f833, %r453;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r459, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r459;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r460, %r34, 8388607;
	or.b32  	%r16368, %r460, 1065353216;
	mov.b32 	%f1357, %r16368;
	add.s32 	%r461, %r34, -1073741824;
	and.b32  	%r16369, %r461, -8388608;
	setp.eq.s32 	%p138, %r16369, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r462, %r16369, 192937984;
	add.s32 	%r463, %r16368, %r462;
	mov.b32 	%f874, %r463;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16369, %r16369, %r462;
	mov.b32 	%r16368, %f1357;
	setp.ne.s32 	%p139, %r16369, 0;
	setp.ne.s32 	%p140, %r16368, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r189, %r2, 1;
	shr.u32 	%r195, %r2, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r464, %f90;
	and.b32  	%r465, %r464, -2147483648;
	mov.b32 	%r466, %f1358;
	or.b32  	%r467, %r465, %r466;
	mov.b32 	%f1358, %r467;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r480, %f884;
	and.b32  	%r481, %r480, -2147483648;
	or.b32  	%r482, %r481, 1056964608;
	mov.b32 	%f885, %r482;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r488, %r195, 2;
	or.b32  	%r489, %r193, %r488;
	and.b32  	%r490, %r189, 4;
	or.b32  	%r45, %r489, %r490;
	and.b32  	%r491, %r2, 3;
	mul.lo.s32 	%r492, %r491, %r45;
	shl.b32 	%r493, %r492, 1;
	neg.s32 	%r494, %r493;
	cvt.rn.f32.s32 	%f916, %r494;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r495, %r47, 8388607;
	or.b32  	%r16370, %r495, 1065353216;
	mov.b32 	%f1361, %r16370;
	add.s32 	%r496, %r47, -1073741824;
	and.b32  	%r16371, %r496, -8388608;
	setp.eq.s32 	%p158, %r16371, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r497, %r16371, 192937984;
	add.s32 	%r498, %r16370, %r497;
	mov.b32 	%f928, %r498;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16371, %r16371, %r497;
	mov.b32 	%r16370, %f1361;
	setp.ne.s32 	%p159, %r16371, 0;
	setp.ne.s32 	%p160, %r16370, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r182, %r2, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r499, %f107;
	and.b32  	%r500, %r499, -2147483648;
	mov.b32 	%r501, %f1362;
	or.b32  	%r502, %r500, %r501;
	mov.b32 	%f1362, %r502;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r503, %f938;
	and.b32  	%r504, %r503, -2147483648;
	or.b32  	%r505, %r504, 1056964608;
	mov.b32 	%f939, %r505;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r511, %r182, 6;
	mov.u32 	%r512, -8;
	sub.s32 	%r513, %r512, %r511;
	mul.lo.s32 	%r514, %r45, %r513;
	cvt.rn.f32.s32 	%f968, %r514;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r515, %r55, 8388607;
	or.b32  	%r16372, %r515, 1065353216;
	mov.b32 	%f1365, %r16372;
	add.s32 	%r516, %r55, -1073741824;
	and.b32  	%r16373, %r516, -8388608;
	setp.eq.s32 	%p178, %r16373, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r517, %r16373, 192937984;
	add.s32 	%r518, %r16372, %r517;
	mov.b32 	%f980, %r518;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16373, %r16373, %r517;
	mov.b32 	%r16372, %f1365;
	setp.ne.s32 	%p179, %r16373, 0;
	setp.ne.s32 	%p180, %r16372, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r519, %f126;
	and.b32  	%r520, %r519, -2147483648;
	mov.b32 	%r521, %f1366;
	or.b32  	%r522, %r520, %r521;
	mov.b32 	%f1366, %r522;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r535, %f990;
	and.b32  	%r536, %r535, -2147483648;
	or.b32  	%r537, %r536, 1056964608;
	mov.b32 	%f991, %r537;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r543, %r191, 2147483646;
	shl.b32 	%r544, %r190, 2;
	sub.s32 	%r545, %r543, %r544;
	mul.lo.s32 	%r546, %r545, %r45;
	shl.b32 	%r66, %r546, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r547, %r68, 8388607;
	or.b32  	%r16374, %r547, 1065353216;
	mov.b32 	%f1369, %r16374;
	add.s32 	%r548, %r68, -1073741824;
	and.b32  	%r16375, %r548, -8388608;
	setp.eq.s32 	%p198, %r16375, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r549, %r16375, 192937984;
	add.s32 	%r550, %r16374, %r549;
	mov.b32 	%f1033, %r550;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16375, %r16375, %r549;
	mov.b32 	%r16374, %f1369;
	setp.ne.s32 	%p199, %r16375, 0;
	setp.ne.s32 	%p200, %r16374, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r303, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r321, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r328, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r339, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r346, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r357, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r364, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r375, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r382, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r393, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r400, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r411, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r418, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r429, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r436, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r454, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r483, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r506, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r538, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r551, %f144;
	and.b32  	%r552, %r551, -2147483648;
	mov.b32 	%r553, %f1370;
	or.b32  	%r554, %r552, %r553;
	mov.b32 	%f1370, %r554;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	add.s32 	%r304, %r303, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r311, %r310, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r322, %r321, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r329, %r328, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r340, %r339, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r347, %r346, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r358, %r357, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r376, %r375, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r383, %r382, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r394, %r393, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r401, %r400, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r412, %r411, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r419, %r418, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r430, %r429, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r437, %r436, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r455, %r454, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r484, %r483, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r507, %r506, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r539, %r538, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r555, %f1043;
	and.b32  	%r556, %r555, -2147483648;
	or.b32  	%r557, %r556, 1056964608;
	mov.b32 	%f1044, %r557;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r558, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r563, %r45, 4;
	sub.s32 	%r564, %r66, %r563;
	cvt.rn.f32.s32 	%f163, %r564;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r565, %r76, 8388607;
	or.b32  	%r16376, %r565, 1065353216;
	mov.b32 	%f1373, %r16376;
	add.s32 	%r566, %r76, -1073741824;
	and.b32  	%r16377, %r566, -8388608;
	setp.eq.s32 	%p218, %r16377, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r567, %r16377, 192937984;
	add.s32 	%r568, %r16376, %r567;
	mov.b32 	%f1084, %r568;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16377, %r16377, %r567;
	mov.b32 	%r16376, %f1373;
	setp.ne.s32 	%p219, %r16377, 0;
	setp.ne.s32 	%p220, %r16376, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	shl.b32 	%r178, %r2, 2;
	and.b32  	%r185, %r2, 18;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r323, %r322, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r330, %r329, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r395, %r394, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r402, %r401, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r420, %r419, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r431, %r430, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r438, %r437, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r455, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r484, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r507, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r539, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r559, %r558, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r569, %f164;
	and.b32  	%r570, %r569, -2147483648;
	mov.b32 	%r571, %f1374;
	or.b32  	%r572, %r570, %r571;
	mov.b32 	%f1374, %r572;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	and.b32  	%r179, %r178, 32;
	or.b32  	%r187, %r185, 64;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r305, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r312, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r323, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r330, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r341, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r348, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r359, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r366, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r377, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r384, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r395, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r402, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r413, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r420, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r431, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r438, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r456, %r454, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r485, %r483, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r508, %r506, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r540, %r538, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r559, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r579, %f1094;
	and.b32  	%r580, %r579, -2147483648;
	or.b32  	%r581, %r580, 1056964608;
	mov.b32 	%f1095, %r581;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r582, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r583, %r582, 1;
	setp.eq.b32 	%p226, %r583, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r587, %r86, 8388607;
	or.b32  	%r16378, %r587, 1065353216;
	mov.b32 	%f1377, %r16378;
	add.s32 	%r588, %r86, -1073741824;
	and.b32  	%r16379, %r588, -8388608;
	setp.eq.s32 	%p238, %r16379, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r589, %r16379, 192937984;
	add.s32 	%r590, %r16378, %r589;
	mov.b32 	%f1137, %r590;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16379, %r16379, %r589;
	mov.b32 	%r16378, %f1377;
	setp.ne.s32 	%p239, %r16379, 0;
	setp.ne.s32 	%p240, %r16378, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r181, %r178, 4;
	or.b32  	%r282, %r185, %r179;
	or.b32  	%r287, %r187, %r179;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r306, %r304, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r324, %r322, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r331, %r329, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r342, %r340, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r378, %r376, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r385, %r383, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r396, %r394, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r403, %r401, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r421, %r419, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r432, %r430, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r439, %r437, 2;
	setp.eq.s32 	%p127, %r456, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r457, %r454, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r485, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r486, %r483, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r508, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r509, %r506, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r540, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r541, %r538, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r560, %r558, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r584, %r582, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r591, %f181;
	and.b32  	%r592, %r591, -2147483648;
	mov.b32 	%r593, %f1378;
	or.b32  	%r594, %r592, %r593;
	mov.b32 	%f1378, %r594;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r183, %r182, 8;
	shl.b32 	%r281, %r1, 4;
	or.b32  	%r283, %r282, %r181;
	or.b32  	%r288, %r287, %r181;
	setp.eq.s32 	%p19, %r306, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r313, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r324, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r331, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r342, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r349, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r360, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r367, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r378, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r385, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r396, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r403, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r414, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r421, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r432, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r439, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r458, %r457, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r487, %r486, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r510, %r509, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r542, %r541, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r560, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r561, %r558, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r584, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r585, %r582, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r595, %f1147;
	and.b32  	%r596, %r595, -2147483648;
	or.b32  	%r597, %r596, 1056964608;
	mov.b32 	%f1148, %r597;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r598, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r599, %r598, 1;
	setp.eq.b32 	%p246, %r599, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r600, %r598, 2;
	setp.eq.s32 	%p247, %r600, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r601, %r598, 1;
	and.b32  	%r602, %r601, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r603, %r94, 8388607;
	or.b32  	%r16380, %r603, 1065353216;
	mov.b32 	%f1381, %r16380;
	add.s32 	%r604, %r94, -1073741824;
	and.b32  	%r16381, %r604, -8388608;
	setp.eq.s32 	%p258, %r16381, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r605, %r16381, 192937984;
	add.s32 	%r606, %r16380, %r605;
	mov.b32 	%f1188, %r606;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16381, %r16381, %r605;
	mov.b32 	%r16380, %f1381;
	setp.ne.s32 	%p259, %r16381, 0;
	setp.ne.s32 	%p260, %r16380, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r184, %r281, 1920;
	or.b32  	%r284, %r283, %r183;
	or.b32  	%r289, %r288, %r183;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r458, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r487, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r510, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r542, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r562, %r561, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r586, %r585, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r602, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r180, %r2, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r607, %f200;
	and.b32  	%r608, %r607, -2147483648;
	mov.b32 	%r609, %f1382;
	or.b32  	%r610, %r608, %r609;
	mov.b32 	%f1382, %r610;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r285, %r284, %r184;
	or.b32  	%r290, %r289, %r184;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r562, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r586, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r623, %f1198;
	and.b32  	%r624, %r623, -2147483648;
	or.b32  	%r625, %r624, 1056964608;
	mov.b32 	%f1199, %r625;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r626, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r627, %r626, 1;
	setp.eq.b32 	%p266, %r627, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r628, %r626, 2;
	setp.eq.s32 	%p267, %r628, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r629, %r626, 1;
	and.b32  	%r630, %r629, 2;
	setp.eq.s32 	%p268, %r630, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r631, %r193, 2147483640;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r632, %r631, %r180;
	mad.lo.s32 	%r633, %r196, 2147483616, %r632;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r634, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r635, %rs21;
	sub.s32 	%r636, %r633, %r635;
	shl.b32 	%r637, %r636, 1;
	cvt.rn.f32.s32 	%f1230, %r637;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r638, %r107, 8388607;
	or.b32  	%r16382, %r638, 1065353216;
	mov.b32 	%f1385, %r16382;
	add.s32 	%r639, %r107, -1073741824;
	and.b32  	%r16383, %r639, -8388608;
	setp.eq.s32 	%p278, %r16383, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r640, %r16383, 192937984;
	add.s32 	%r641, %r16382, %r640;
	mov.b32 	%f1242, %r641;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16383, %r16383, %r640;
	mov.b32 	%r16382, %f1385;
	setp.ne.s32 	%p279, %r16383, 0;
	setp.ne.s32 	%p280, %r16382, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r286, %r285, 1;
	bfe.u32 	%r291, %r290, 1, 10;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r633, %r634;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r642, %f217;
	and.b32  	%r643, %r642, -2147483648;
	mov.b32 	%r644, %f1386;
	or.b32  	%r645, %r643, %r644;
	mov.b32 	%f1386, %r645;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd47, %r286, 4;
	mul.wide.u32 	%rd49, %r291, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r470, %f915;
	mov.b32 	%r469, %f89;
	mov.b32 	%r476, %f912;
	mov.b32 	%r475, %f88;
	mov.b32 	%r525, %f1021;
	mov.b32 	%r524, %f125;
	mov.b32 	%r531, %f1018;
	mov.b32 	%r530, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r613, %f1229;
	mov.b32 	%r612, %f199;
	mov.b32 	%r619, %f1226;
	mov.b32 	%r618, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r646, %f1252;
	and.b32  	%r647, %r646, -2147483648;
	or.b32  	%r648, %r647, 1056964608;
	mov.b32 	%f1253, %r648;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r649, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r650, %r649, 1;
	setp.eq.b32 	%p286, %r650, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r651, %r649, 2;
	setp.eq.s32 	%p287, %r651, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r652, %r649, 1;
	and.b32  	%r653, %r652, 2;
	setp.eq.s32 	%p288, %r653, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r654, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r654;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r655, %r115, 8388607;
	or.b32  	%r16384, %r655, 1065353216;
	mov.b32 	%f1389, %r16384;
	add.s32 	%r656, %r115, -1073741824;
	and.b32  	%r16385, %r656, -8388608;
	setp.eq.s32 	%p298, %r16385, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r657, %r16385, 192937984;
	add.s32 	%r658, %r16384, %r657;
	mov.b32 	%f1294, %r658;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16385, %r16385, %r657;
	mov.b32 	%r16384, %f1389;
	setp.ne.s32 	%p299, %r16385, 0;
	setp.ne.s32 	%p300, %r16384, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd48, %rd1, %rd47;
	add.s64 	%rd50, %rd1, %rd49;
	shr.u32 	%r192, %r2, 2;
	mov.b32 	%r316, %f327;
	mov.b32 	%r315, %f3;
	mov.b32 	%r334, %f396;
	mov.b32 	%r333, %f12;
	mov.b32 	%r352, %f465;
	mov.b32 	%r351, %f21;
	mov.b32 	%r370, %f534;
	mov.b32 	%r369, %f30;
	mov.b32 	%r388, %f603;
	mov.b32 	%r387, %f39;
	mov.b32 	%r406, %f672;
	mov.b32 	%r405, %f48;
	mov.b32 	%r424, %f741;
	mov.b32 	%r423, %f57;
	mov.b32 	%r442, %f809;
	mov.b32 	%r441, %f66;
	xor.b32  	%r528, %r531, -2147483648;
	xor.b32  	%r527, %r530, -2147483648;
	mov.b32 	%r575, %f1125;
	mov.b32 	%r574, %f162;
	mov.b32 	%r578, %f1122;
	mov.b32 	%r577, %f161;
	xor.b32  	%r616, %r619, -2147483648;
	xor.b32  	%r615, %r618, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r659, %f236;
	and.b32  	%r660, %r659, -2147483648;
	mov.b32 	%r661, %f1390;
	or.b32  	%r662, %r660, %r661;
	mov.b32 	%f1390, %r662;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r186, [%rd48];
	ld.global.u32 	%r188, [%rd50];
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r368, %r370, %r369;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r386, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r404, %r406, %r405;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r422, %r424, %r423;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r440, %r442, %r441;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r468, %r470, %r469;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r471, %r470, %r469;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r523, %r525, %r524;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r526, %r528, %r527;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r529, %r531, %r530;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r532, %r525, %r524;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r575, %r574;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r576, %r578, %r577;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r611, %r613, %r612;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r614, %r616, %r615;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r617, %r619, %r618;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r620, %r613, %r612;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r670, %f1304;
	and.b32  	%r671, %r670, -2147483648;
	or.b32  	%r672, %r671, 1056964608;
	mov.b32 	%f1305, %r672;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r673, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r674, %r673, 1;
	setp.eq.b32 	%p306, %r674, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r675, %r673, 2;
	setp.eq.s32 	%p307, %r675, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r676, %r673, 1;
	and.b32  	%r677, %r676, 2;
	setp.eq.s32 	%p308, %r677, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r665, %f1335;
	mov.b32 	%r664, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r663, %r665, %r664;
	// end inline asm
	mov.b32 	%r668, %f1332;
	mov.b32 	%r667, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r666, %r668, %r667;
	// end inline asm
	shl.b32 	%r678, %r5, 12;
	shl.b32 	%r679, %r1, 5;
	and.b32  	%r124, %r679, 128;
	and.b32  	%r680, %r178, 28;
	and.b32  	%r681, %r679, 96;
	or.b32  	%r125, %r681, %r680;
	shl.b32 	%r682, %r2, 3;
	and.b32  	%r126, %r682, 64;
	or.b32  	%r683, %r124, %r125;
	or.b32  	%r127, %r678, %r683;
	bfe.s32 	%r684, %r2, 3, 1;
	and.b32  	%r128, %r2, 8;
	shl.b32 	%r685, %r2, 4;
	or.b32  	%r686, %r685, %r128;
	shr.u32 	%r687, %r686, 2;
	and.b32  	%r688, %r687, 30;
	and.b32  	%r689, %r685, 48;
	or.b32  	%r129, %r183, %r689;
	and.b32  	%r130, %r192, 6;
	shr.u32 	%r690, %r3, 1;
	and.b32  	%r691, %r4, 32;
	or.b32  	%r692, %r691, %r690;
	or.b32  	%r693, %r692, 8;
	or.b32  	%r694, %r692, 16;
	or.b32  	%r695, %r692, 24;
	or.b32  	%r696, %r185, %r184;
	or.b32  	%r697, %r696, %r179;
	or.b32  	%r698, %r697, %r183;
	or.b32  	%r699, %r698, %r181;
	bfe.u32 	%r700, %r699, 1, 6;
	mul.lo.s32 	%r701, %r700, 65;
	add.s32 	%r131, %r692, %r701;
	add.s32 	%r132, %r693, %r701;
	add.s32 	%r133, %r694, %r701;
	add.s32 	%r134, %r695, %r701;
	or.b32  	%r702, %r187, %r184;
	or.b32  	%r703, %r702, %r179;
	or.b32  	%r704, %r703, %r183;
	or.b32  	%r705, %r704, %r181;
	bfe.u32 	%r706, %r705, 1, 6;
	mul.lo.s32 	%r707, %r706, 65;
	add.s32 	%r135, %r692, %r707;
	add.s32 	%r136, %r693, %r707;
	add.s32 	%r137, %r694, %r707;
	add.s32 	%r138, %r695, %r707;
	shl.b32 	%r708, %r3, 1;
	or.b32  	%r709, %r708, %r194;
	mul.lo.s32 	%r710, %r709, 65;
	add.s32 	%r711, %r688, %r710;
	mul.wide.u32 	%rd51, %r711, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	cvt.u64.u32 	%rd53, %r688;
	cvt.u64.u32 	%rd54, %r710;
	add.s64 	%rd55, %rd54, %rd53;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd6, %rd52, %rd56;
	or.b32  	%r712, %r709, 32;
	mul.lo.s32 	%r713, %r712, 65;
	add.s32 	%r714, %r688, %r713;
	mul.wide.u32 	%rd57, %r714, 4;
	add.s64 	%rd7, %rd52, %rd57;
	cvt.u64.u32 	%rd58, %r713;
	add.s64 	%rd59, %rd58, %rd53;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd8, %rd52, %rd60;
	shl.b32 	%r715, %r7, 19;
	add.s32 	%r716, %r715, -1572864;
	shl.b32 	%r717, %r3, 2;
	or.b32  	%r718, %r195, %r717;
	or.b32  	%r719, %r718, %r184;
	shl.b32 	%r139, %r719, 8;
	cvt.s64.s32 	%rd9, %r716;
	or.b32  	%r140, %r139, 16384;
	shr.u32 	%r720, %r183, 3;
	setp.gt.u32 	%p311, %r2, 15;
	bfe.u32 	%r721, %r685, 5, 1;
	bfe.s32 	%r722, %r3, 1, 1;
	and.b32  	%r723, %r3, 2;
	setp.eq.s32 	%p312, %r723, 0;
	and.b32  	%r724, %r722, 1040;
	shr.u32 	%r725, %r3, 3;
	mul.lo.s32 	%r726, %r725, 260;
	bfe.s32 	%r727, %r3, 2, 1;
	and.b32  	%r728, %r3, 4;
	setp.eq.s32 	%p313, %r728, 0;
	and.b32  	%r729, %r727, 520;
	and.b32  	%r730, %r3, 1;
	neg.s32 	%r731, %r730;
	and.b32  	%r732, %r731, 2080;
	mul.lo.s32 	%r733, %r194, 65;
	or.b32  	%r734, %r732, %r688;
	add.s32 	%r735, %r734, %r726;
	add.s32 	%r736, %r735, %r724;
	add.s32 	%r737, %r736, %r729;
	add.s32 	%r738, %r737, %r733;
	mul.wide.u32 	%rd61, %r738, 4;
	add.s64 	%rd10, %rd52, %rd61;
	cvt.u64.u32 	%rd62, %r733;
	selp.b64 	%rd63, 0, 520, %p313;
	selp.b64 	%rd64, 0, 1040, %p312;
	cvt.u64.u32 	%rd65, %r726;
	cvt.u64.u32 	%rd66, %r734;
	add.s64 	%rd67, %rd66, %rd65;
	add.s64 	%rd68, %rd67, %rd64;
	add.s64 	%rd69, %rd68, %rd63;
	add.s64 	%rd70, %rd69, %rd62;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd11, %rd52, %rd71;
	add.s32 	%r739, %r738, 162;
	mul.wide.u32 	%rd72, %r739, 4;
	add.s64 	%rd12, %rd52, %rd72;
	add.s32 	%r740, %r738, 131;
	mul.wide.u32 	%rd73, %r740, 4;
	add.s64 	%rd13, %rd52, %rd73;
	add.s32 	%r741, %r738, 163;
	mul.wide.u32 	%rd74, %r741, 4;
	add.s64 	%rd14, %rd52, %rd74;
	cvt.u64.u32 	%rd75, %r736;
	add.s64 	%rd76, %rd75, %rd63;
	add.s64 	%rd77, %rd76, %rd62;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd15, %rd52, %rd78;
	add.s32 	%r742, %r738, 4193;
	mul.wide.u32 	%rd79, %r742, 4;
	add.s64 	%rd16, %rd52, %rd79;
	add.s32 	%r743, %r738, 4162;
	mul.wide.u32 	%rd80, %r743, 4;
	add.s64 	%rd17, %rd52, %rd80;
	add.s32 	%r744, %r738, 4194;
	mul.wide.u32 	%rd81, %r744, 4;
	add.s64 	%rd18, %rd52, %rd81;
	add.s32 	%r745, %r738, 4291;
	mul.wide.u32 	%rd82, %r745, 4;
	add.s64 	%rd19, %rd52, %rd82;
	add.s32 	%r746, %r738, 4323;
	mul.wide.u32 	%rd83, %r746, 4;
	add.s64 	%rd20, %rd52, %rd83;
	add.s32 	%r747, %r738, 4292;
	mul.wide.u32 	%rd84, %r747, 4;
	add.s64 	%rd21, %rd52, %rd84;
	add.s32 	%r748, %r738, 4324;
	mul.wide.u32 	%rd85, %r748, 4;
	add.s64 	%rd22, %rd52, %rd85;
	and.b32  	%r749, %r684, 1040;
	mul.lo.s32 	%r750, %r720, 260;
	selp.b32 	%r141, 520, 0, %p311;
	mul.lo.s32 	%r142, %r721, 65;
	setp.eq.s32 	%p314, %r191, 0;
	selp.b32 	%r143, 0, 130, %p314;
	add.s32 	%r751, %r692, %r750;
	add.s32 	%r144, %r751, %r749;
	add.s32 	%r752, %r693, %r750;
	add.s32 	%r145, %r752, %r749;
	add.s32 	%r753, %r694, %r750;
	add.s32 	%r146, %r753, %r749;
	add.s32 	%r754, %r695, %r750;
	add.s32 	%r147, %r754, %r749;
	add.s32 	%r148, %r692, 2080;
	add.s32 	%r149, %r693, 2080;
	add.s32 	%r150, %r694, 2080;
	add.s32 	%r151, %r695, 2080;
	mov.u32 	%r16386, 0;
	setp.eq.s32 	%p316, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16387, %r16386;
	mov.u32 	%r16388, %r16386;
	mov.u32 	%r16389, %r16386;
	mov.u32 	%r16390, %r16386;
	mov.u32 	%r16391, %r16386;
	mov.u32 	%r16392, %r16386;
	mov.u32 	%r16393, %r16386;
	mov.u32 	%r16394, %r16386;
	mov.u32 	%r16395, %r16386;
	mov.u32 	%r16396, %r16386;
	mov.u32 	%r16397, %r16386;
	mov.u32 	%r16398, %r16386;
	mov.u32 	%r16399, %r16386;
	mov.u32 	%r16400, %r16386;
	mov.u32 	%r16401, %r16386;
	mov.u32 	%r16402, %r16386;
	mov.u32 	%r16403, %r16386;
	mov.u32 	%r16404, %r16386;
	mov.u32 	%r16405, %r16386;
	mov.u32 	%r16406, %r16386;
	mov.u32 	%r16407, %r16386;
	mov.u32 	%r16408, %r16386;
	mov.u32 	%r16409, %r16386;
	mov.u32 	%r16410, %r16386;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70736
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r177, %r16410, 256;
	setp.ne.s32 	%p341, %r16410, 7936;
	mov.u32 	%r16410, %r177;
	@%p341 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2416
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r755, %r16410, %r5;
	setp.gt.s32 	%p315, %r6, %r755;
	@%p315 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass884
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r821, %r16410, %r126;
	or.b32  	%r822, %r821, %r182;
	and.b32  	%r823, %r822, 8032;
	or.b32  	%r824, %r823, %r3;
	shl.b32 	%r825, %r824, 12;
	add.s32 	%r826, %r127, %r825;
	shr.s32 	%r827, %r826, 31;
	shr.u32 	%r828, %r827, 7;
	add.s32 	%r829, %r826, %r828;
	shr.s32 	%r830, %r829, 25;
	setp.lt.s32 	%p317, %r826, 0;
	and.b32  	%r831, %r829, -33554432;
	setp.ne.s32 	%p318, %r831, %r826;
	and.pred  	%p319, %p317, %p318;
	selp.u32 	%r832, 1, 0, %p319;
	sub.s32 	%r833, %r832, %r830;
	shl.b32 	%r834, %r833, 25;
	add.s32 	%r835, %r834, %r826;
	mul.wide.s32 	%rd86, %r835, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r836, %r837, %r838, %r839}, [%rd87];
	or.b32  	%r840, %r825, 65536;
	add.s32 	%r841, %r127, %r840;
	shr.s32 	%r842, %r841, 31;
	shr.u32 	%r843, %r842, 7;
	add.s32 	%r844, %r841, %r843;
	shr.s32 	%r845, %r844, 25;
	setp.lt.s32 	%p320, %r841, 0;
	and.b32  	%r846, %r844, -33554432;
	setp.ne.s32 	%p321, %r846, %r841;
	and.pred  	%p322, %p320, %p321;
	selp.u32 	%r847, 1, 0, %p322;
	sub.s32 	%r848, %r847, %r845;
	shl.b32 	%r849, %r848, 25;
	add.s32 	%r850, %r849, %r841;
	mul.wide.s32 	%rd88, %r850, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r851, %r852, %r853, %r854}, [%rd89];
	or.b32  	%r855, %r825, 524288;
	add.s32 	%r856, %r127, %r855;
	shr.s32 	%r857, %r856, 31;
	shr.u32 	%r858, %r857, 7;
	add.s32 	%r859, %r856, %r858;
	shr.s32 	%r860, %r859, 25;
	setp.lt.s32 	%p323, %r856, 0;
	and.b32  	%r861, %r859, -33554432;
	setp.ne.s32 	%p324, %r861, %r856;
	and.pred  	%p325, %p323, %p324;
	selp.u32 	%r862, 1, 0, %p325;
	sub.s32 	%r863, %r862, %r860;
	shl.b32 	%r864, %r863, 25;
	add.s32 	%r865, %r864, %r856;
	mul.wide.s32 	%rd90, %r865, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r866, %r867, %r868, %r869}, [%rd91];
	or.b32  	%r870, %r825, 589824;
	add.s32 	%r871, %r127, %r870;
	shr.s32 	%r872, %r871, 31;
	shr.u32 	%r873, %r872, 7;
	add.s32 	%r874, %r871, %r873;
	shr.s32 	%r875, %r874, 25;
	setp.lt.s32 	%p326, %r871, 0;
	and.b32  	%r876, %r874, -33554432;
	setp.ne.s32 	%p327, %r876, %r871;
	and.pred  	%p328, %p326, %p327;
	selp.u32 	%r877, 1, 0, %p328;
	sub.s32 	%r878, %r877, %r875;
	shl.b32 	%r879, %r878, 25;
	add.s32 	%r880, %r879, %r871;
	mul.wide.s32 	%rd92, %r880, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r881, %r882, %r883, %r884}, [%rd93];
	selp.b32 	%r885, %r838, %r836, %p316;
	shfl.sync.bfly.b32	%r886, %r885, 8, 31, -1;
	selp.b32 	%r757, %r836, %r886, %p316;
	selp.b32 	%r758, %r886, %r838, %p316;
	selp.b32 	%r887, %r839, %r837, %p316;
	shfl.sync.bfly.b32	%r888, %r887, 8, 31, -1;
	selp.b32 	%r765, %r837, %r888, %p316;
	selp.b32 	%r766, %r888, %r839, %p316;
	selp.b32 	%r889, %r853, %r851, %p316;
	shfl.sync.bfly.b32	%r890, %r889, 8, 31, -1;
	selp.b32 	%r773, %r851, %r890, %p316;
	selp.b32 	%r774, %r890, %r853, %p316;
	selp.b32 	%r891, %r854, %r852, %p316;
	shfl.sync.bfly.b32	%r892, %r891, 8, 31, -1;
	selp.b32 	%r781, %r852, %r892, %p316;
	selp.b32 	%r782, %r892, %r854, %p316;
	selp.b32 	%r893, %r868, %r866, %p316;
	shfl.sync.bfly.b32	%r894, %r893, 8, 31, -1;
	selp.b32 	%r789, %r866, %r894, %p316;
	selp.b32 	%r790, %r894, %r868, %p316;
	selp.b32 	%r895, %r869, %r867, %p316;
	shfl.sync.bfly.b32	%r896, %r895, 8, 31, -1;
	selp.b32 	%r797, %r867, %r896, %p316;
	selp.b32 	%r798, %r896, %r869, %p316;
	selp.b32 	%r897, %r883, %r881, %p316;
	shfl.sync.bfly.b32	%r898, %r897, 8, 31, -1;
	selp.b32 	%r805, %r881, %r898, %p316;
	selp.b32 	%r806, %r898, %r883, %p316;
	selp.b32 	%r899, %r884, %r882, %p316;
	shfl.sync.bfly.b32	%r900, %r899, 8, 31, -1;
	selp.b32 	%r813, %r882, %r900, %p316;
	selp.b32 	%r814, %r900, %r884, %p316;
	mov.u32 	%r815, 21520;
	// begin inline asm
	prmt.b32 %r756, %r757, %r758, %r815;
	// end inline asm
	mov.u32 	%r819, 30258;
	// begin inline asm
	prmt.b32 %r760, %r757, %r758, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r765, %r766, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r765, %r766, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r773, %r774, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r773, %r774, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r781, %r782, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r781, %r782, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r789, %r790, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r792, %r789, %r790, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r796, %r797, %r798, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r800, %r797, %r798, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r804, %r805, %r806, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r808, %r805, %r806, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r812, %r813, %r814, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r816, %r813, %r814, %r819;
	// end inline asm
	st.shared.u32 	[%rd10], %r756;
	st.shared.u32 	[%rd11+128], %r760;
	st.shared.u32 	[%rd11+4], %r764;
	st.shared.u32 	[%rd11+132], %r768;
	st.shared.u32 	[%rd10+520], %r772;
	st.shared.u32 	[%rd12], %r776;
	st.shared.u32 	[%rd13], %r780;
	st.shared.u32 	[%rd14], %r784;
	st.shared.u32 	[%rd15+16644], %r788;
	st.shared.u32 	[%rd16], %r792;
	st.shared.u32 	[%rd17], %r796;
	st.shared.u32 	[%rd18], %r800;
	st.shared.u32 	[%rd19], %r804;
	st.shared.u32 	[%rd20], %r808;
	st.shared.u32 	[%rd21], %r812;
	st.shared.u32 	[%rd22], %r816;
	bar.sync 	0;
	or.b32  	%r901, %r129, %r16410;
	or.b32  	%r199, %r901, 1;
	mov.u32 	%r3246, 0;
	mov.u32 	%r16411, %r3246;
$L__BB0_183:                            // %pass6419
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p329, %r16411, 0;
	selp.b32 	%r16166, 0, 4161, %p329;
	add.s32 	%r16167, %r144, %r16166;
	add.s32 	%r16168, %r16167, %r141;
	add.s32 	%r16169, %r16168, %r142;
	add.s32 	%r16170, %r16169, %r143;
	mul.wide.u32 	%rd94, %r16170, 4;
	add.s64 	%rd96, %rd52, %rd94;
	ld.shared.u32 	%r16171, [%rd96];
	add.s32 	%r16172, %r145, %r16166;
	add.s32 	%r16173, %r16172, %r141;
	add.s32 	%r16174, %r16173, %r142;
	add.s32 	%r16175, %r16174, %r143;
	mul.wide.u32 	%rd97, %r16175, 4;
	add.s64 	%rd98, %rd52, %rd97;
	ld.shared.u32 	%r16176, [%rd98];
	add.s32 	%r16177, %r146, %r16166;
	add.s32 	%r16178, %r16177, %r141;
	add.s32 	%r16179, %r16178, %r142;
	add.s32 	%r16180, %r16179, %r143;
	mul.wide.u32 	%rd99, %r16180, 4;
	add.s64 	%rd100, %rd52, %rd99;
	ld.shared.u32 	%r16181, [%rd100];
	add.s32 	%r16182, %r147, %r16166;
	add.s32 	%r16183, %r16182, %r141;
	add.s32 	%r16184, %r16183, %r142;
	add.s32 	%r16185, %r16184, %r143;
	mul.wide.u32 	%rd101, %r16185, 4;
	add.s64 	%rd102, %rd52, %rd101;
	ld.shared.u32 	%r16186, [%rd102];
	add.s32 	%r16187, %r199, %r16411;
	or.b32  	%r16188, %r16187, %r130;
	bfe.s32 	%r16189, %r16188, 1, 1;
	and.b32  	%r16190, %r16189, 1040;
	bfe.s32 	%r16191, %r16187, 3, 1;
	and.b32  	%r16192, %r16191, 260;
	bfe.s32 	%r16193, %r16187, 7, 1;
	and.b32  	%r16194, %r16193, 4161;
	bfe.s32 	%r16195, %r16188, 2, 1;
	and.b32  	%r16196, %r16195, 520;
	bfe.s32 	%r16197, %r16187, 4, 1;
	and.b32  	%r16198, %r16197, 130;
	add.s32 	%r16199, %r148, %r16192;
	or.b32  	%r16200, %r16199, %r16190;
	add.s32 	%r16201, %r16200, %r16194;
	add.s32 	%r16202, %r16201, %r16196;
	add.s32 	%r16203, %r16202, %r142;
	add.s32 	%r16204, %r16203, %r16198;
	mul.wide.u32 	%rd103, %r16204, 4;
	add.s64 	%rd104, %rd52, %rd103;
	ld.shared.u32 	%r16205, [%rd104];
	add.s32 	%r16206, %r149, %r16192;
	add.s32 	%r16207, %r16206, %r16190;
	add.s32 	%r16208, %r16207, %r16194;
	add.s32 	%r16209, %r16208, %r16196;
	add.s32 	%r16210, %r16209, %r142;
	add.s32 	%r16211, %r16210, %r16198;
	mul.wide.u32 	%rd105, %r16211, 4;
	add.s64 	%rd106, %rd52, %rd105;
	ld.shared.u32 	%r16212, [%rd106];
	add.s32 	%r16213, %r150, %r16192;
	add.s32 	%r16214, %r16213, %r16190;
	add.s32 	%r16215, %r16214, %r16194;
	add.s32 	%r16216, %r16215, %r16196;
	add.s32 	%r16217, %r16216, %r142;
	add.s32 	%r16218, %r16217, %r16198;
	mul.wide.u32 	%rd107, %r16218, 4;
	add.s64 	%rd108, %rd52, %rd107;
	ld.shared.u32 	%r16219, [%rd108];
	add.s32 	%r16220, %r151, %r16192;
	add.s32 	%r16221, %r16220, %r16190;
	add.s32 	%r16222, %r16221, %r16194;
	add.s32 	%r16223, %r16222, %r16196;
	add.s32 	%r16224, %r16223, %r142;
	add.s32 	%r16225, %r16224, %r16198;
	mul.wide.u32 	%rd109, %r16225, 4;
	add.s64 	%rd110, %rd52, %rd109;
	ld.shared.u32 	%r16226, [%rd110];
	// begin inline asm
	mov.b32 %r907, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r918, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r906, %r16171, -2004318072;
	mov.u32 	%r905, 983055;
	// begin inline asm
	lop3.b32 %r904, %r905, %r906, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r909, %r907, %r908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r912, %r904, %r909;
	// end inline asm
	mov.u32 	%r916, 15728880;
	// begin inline asm
	lop3.b32 %r915, %r916, %r906, %r918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r918, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	shr.u32 	%r928, %r906, 8;
	// begin inline asm
	lop3.b32 %r926, %r905, %r928, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r907, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r937, %r916, %r928, %r918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r918, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r964, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r952, %r16176, -2004318072;
	// begin inline asm
	lop3.b32 %r950, %r905, %r952, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r953, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r961, %r916, %r952, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r964, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	shr.u32 	%r974, %r952, 8;
	// begin inline asm
	lop3.b32 %r972, %r905, %r974, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r953, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r983, %r916, %r974, %r964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r964, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1010, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r998, %r16181, -2004318072;
	// begin inline asm
	lop3.b32 %r996, %r905, %r998, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r999, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1007, %r916, %r998, %r1010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1012, %r1010, %r1011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1015, %r1007, %r1012;
	// end inline asm
	shr.u32 	%r1020, %r998, 8;
	// begin inline asm
	lop3.b32 %r1018, %r905, %r1020, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r999, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1029, %r916, %r1020, %r1010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1034, %r1010, %r1033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1037, %r1029, %r1034;
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1044, %r16186, -2004318072;
	// begin inline asm
	lop3.b32 %r1042, %r905, %r1044, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1045, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1053, %r916, %r1044, %r1056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1056, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	shr.u32 	%r1066, %r1044, 8;
	// begin inline asm
	lop3.b32 %r1064, %r905, %r1066, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1045, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1075, %r916, %r1066, %r1056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1056, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1102, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1090, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r1088, %r905, %r1090, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1091, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1099, %r916, %r1090, %r1102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1102, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	shr.u32 	%r1112, %r1090, 8;
	// begin inline asm
	lop3.b32 %r1110, %r905, %r1112, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1091, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1121, %r916, %r1112, %r1102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1102, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1148, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1136, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r1134, %r905, %r1136, %r1137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1139, %r1137, %r1138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1142, %r1134, %r1139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1145, %r916, %r1136, %r1148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1150, %r1148, %r1149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1153, %r1145, %r1150;
	// end inline asm
	shr.u32 	%r1158, %r1136, 8;
	// begin inline asm
	lop3.b32 %r1156, %r905, %r1158, %r1137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1137, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1167, %r916, %r1158, %r1148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1172, %r1148, %r1171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1175, %r1167, %r1172;
	// end inline asm
	// begin inline asm
	mov.b32 %r1183, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1194, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1182, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r1180, %r905, %r1182, %r1183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1185, %r1183, %r1184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1188, %r1180, %r1185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1191, %r916, %r1182, %r1194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1196, %r1194, %r1195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1199, %r1191, %r1196;
	// end inline asm
	shr.u32 	%r1204, %r1182, 8;
	// begin inline asm
	lop3.b32 %r1202, %r905, %r1204, %r1183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1207, %r1183, %r1206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1210, %r1202, %r1207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1213, %r916, %r1204, %r1194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1218, %r1194, %r1217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1221, %r1213, %r1218;
	// end inline asm
	// begin inline asm
	mov.b32 %r1229, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1240, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1228, %r16226, -2004318072;
	// begin inline asm
	lop3.b32 %r1226, %r905, %r1228, %r1229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1231, %r1229, %r1230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1234, %r1226, %r1231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1237, %r916, %r1228, %r1240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1242, %r1240, %r1241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1245, %r1237, %r1242;
	// end inline asm
	shr.u32 	%r1250, %r1228, 8;
	// begin inline asm
	lop3.b32 %r1248, %r905, %r1250, %r1229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1253, %r1229, %r1252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1256, %r1248, %r1253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1259, %r916, %r1250, %r1240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1264, %r1240, %r1263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1267, %r1259, %r1264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r1360, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r1365, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r1380, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1387, %r1385, %r1175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1392, %r1390, %r1188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r1395, %r1199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1400, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1402, %r1400, %r1210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1405, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1407, %r1405, %r1221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1412, %r1410, %r1234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1415, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1417, %r1415, %r1245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1422, %r1420, %r1256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1425, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r1425, %r1267;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1434, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r1432, %r905, %r1434, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1437, %r1435, %r1436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1440, %r1432, %r1437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1443, %r916, %r1434, %r1446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1448, %r1446, %r1447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1451, %r1443, %r1448;
	// end inline asm
	shr.u32 	%r1456, %r1434, 8;
	// begin inline asm
	lop3.b32 %r1454, %r905, %r1456, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1435, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1465, %r916, %r1456, %r1446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1446, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1492, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1480, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r1478, %r905, %r1480, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1481, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1489, %r916, %r1480, %r1492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1492, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	shr.u32 	%r1502, %r1480, 8;
	// begin inline asm
	lop3.b32 %r1500, %r905, %r1502, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1481, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1511, %r916, %r1502, %r1492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1492, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1538, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1526, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r1524, %r905, %r1526, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1529, %r1527, %r1528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1532, %r1524, %r1529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1535, %r916, %r1526, %r1538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1538, %r1539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1543, %r1535, %r1540;
	// end inline asm
	shr.u32 	%r1548, %r1526, 8;
	// begin inline asm
	lop3.b32 %r1546, %r905, %r1548, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1527, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1557, %r916, %r1548, %r1538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1538, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	// begin inline asm
	mov.b32 %r1573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1584, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1572, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r1570, %r905, %r1572, %r1573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1573, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1581, %r916, %r1572, %r1584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1586, %r1584, %r1585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1589, %r1581, %r1586;
	// end inline asm
	shr.u32 	%r1594, %r1572, 8;
	// begin inline asm
	lop3.b32 %r1592, %r905, %r1594, %r1573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1573, %r1596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1600, %r1592, %r1597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1603, %r916, %r1594, %r1584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1584, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1630, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1618, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r1616, %r905, %r1618, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1619, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1627, %r916, %r1618, %r1630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1632, %r1630, %r1631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1635, %r1627, %r1632;
	// end inline asm
	shr.u32 	%r1640, %r1618, 8;
	// begin inline asm
	lop3.b32 %r1638, %r905, %r1640, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1619, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1649, %r916, %r1640, %r1630, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1654, %r1630, %r1653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1657, %r1649, %r1654;
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1676, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1664, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r1662, %r905, %r1664, %r1665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1667, %r1665, %r1666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1670, %r1662, %r1667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1673, %r916, %r1664, %r1676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1678, %r1676, %r1677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1681, %r1673, %r1678;
	// end inline asm
	shr.u32 	%r1686, %r1664, 8;
	// begin inline asm
	lop3.b32 %r1684, %r905, %r1686, %r1665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1689, %r1665, %r1688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1692, %r1684, %r1689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1695, %r916, %r1686, %r1676, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1700, %r1676, %r1699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1703, %r1695, %r1700;
	// end inline asm
	// begin inline asm
	mov.b32 %r1711, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1722, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1710, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r1708, %r905, %r1710, %r1711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1712, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1713, %r1711, %r1712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1716, %r1708, %r1713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1719, %r916, %r1710, %r1722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1723, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1724, %r1722, %r1723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1727, %r1719, %r1724;
	// end inline asm
	shr.u32 	%r1732, %r1710, 8;
	// begin inline asm
	lop3.b32 %r1730, %r905, %r1732, %r1711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1735, %r1711, %r1734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1738, %r1730, %r1735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1741, %r916, %r1732, %r1722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1746, %r1722, %r1745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1749, %r1741, %r1746;
	// end inline asm
	// begin inline asm
	mov.b32 %r1757, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1768, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1756, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r1754, %r905, %r1756, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1758, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1759, %r1757, %r1758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1762, %r1754, %r1759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1765, %r916, %r1756, %r1768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1770, %r1768, %r1769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1773, %r1765, %r1770;
	// end inline asm
	shr.u32 	%r1778, %r1756, 8;
	// begin inline asm
	lop3.b32 %r1776, %r905, %r1778, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1781, %r1757, %r1780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1784, %r1776, %r1781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1787, %r916, %r1778, %r1768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1792, %r1768, %r1791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1795, %r1787, %r1792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r314, %r1440, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r314, %r1451, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r314, %r1462, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r314, %r1473, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r314, %r1486, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r314, %r1497, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r314, %r1508, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r314, %r1519, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r314, %r1532, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r314, %r1543, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r314, %r1554, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r314, %r1565, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r314, %r1578, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r314, %r1589, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r314, %r1600, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r314, %r1611, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r332, %r1624, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r332, %r1635, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r332, %r1646, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r332, %r1657, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r332, %r1670, %r1372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r332, %r1681, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r332, %r1692, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1890, %r332, %r1703, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r332, %r1716, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r332, %r1727, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r332, %r1738, %r1402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r332, %r1749, %r1407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1910, %r332, %r1762, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1914, %r332, %r1773, %r1417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1918, %r332, %r1784, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1922, %r332, %r1795, %r1427;
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1942, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1930, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r1928, %r905, %r1930, %r1931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1933, %r1931, %r1932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1936, %r1928, %r1933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1939, %r916, %r1930, %r1942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1944, %r1942, %r1943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1947, %r1939, %r1944;
	// end inline asm
	shr.u32 	%r1952, %r1930, 8;
	// begin inline asm
	lop3.b32 %r1950, %r905, %r1952, %r1931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1955, %r1931, %r1954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1958, %r1950, %r1955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1961, %r916, %r1952, %r1942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1942, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	// begin inline asm
	mov.b32 %r1977, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1988, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1976, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r1974, %r905, %r1976, %r1977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1979, %r1977, %r1978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1982, %r1974, %r1979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1985, %r916, %r1976, %r1988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1990, %r1988, %r1989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1993, %r1985, %r1990;
	// end inline asm
	shr.u32 	%r1998, %r1976, 8;
	// begin inline asm
	lop3.b32 %r1996, %r905, %r1998, %r1977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2001, %r1977, %r2000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2004, %r1996, %r2001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2007, %r916, %r1998, %r1988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r1988, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	// begin inline asm
	mov.b32 %r2023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2034, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2022, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r2020, %r905, %r2022, %r2023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2025, %r2023, %r2024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2028, %r2020, %r2025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2031, %r916, %r2022, %r2034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2036, %r2034, %r2035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2039, %r2031, %r2036;
	// end inline asm
	shr.u32 	%r2044, %r2022, 8;
	// begin inline asm
	lop3.b32 %r2042, %r905, %r2044, %r2023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2047, %r2023, %r2046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2050, %r2042, %r2047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2053, %r916, %r2044, %r2034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2058, %r2034, %r2057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2061, %r2053, %r2058;
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2080, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2068, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r2066, %r905, %r2068, %r2069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2071, %r2069, %r2070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2074, %r2066, %r2071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2077, %r916, %r2068, %r2080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2082, %r2080, %r2081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2085, %r2077, %r2082;
	// end inline asm
	shr.u32 	%r2090, %r2068, 8;
	// begin inline asm
	lop3.b32 %r2088, %r905, %r2090, %r2069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2093, %r2069, %r2092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2096, %r2088, %r2093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2099, %r916, %r2090, %r2080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2104, %r2080, %r2103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2107, %r2099, %r2104;
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2114, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2112, %r905, %r2114, %r2115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2117, %r2115, %r2116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2120, %r2112, %r2117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2123, %r916, %r2114, %r2126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2128, %r2126, %r2127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2131, %r2123, %r2128;
	// end inline asm
	shr.u32 	%r2136, %r2114, 8;
	// begin inline asm
	lop3.b32 %r2134, %r905, %r2136, %r2115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2115, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2145, %r916, %r2136, %r2126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2126, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2160, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2158, %r905, %r2160, %r2161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2163, %r2161, %r2162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2166, %r2158, %r2163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2169, %r916, %r2160, %r2172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2172, %r2173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2177, %r2169, %r2174;
	// end inline asm
	shr.u32 	%r2182, %r2160, 8;
	// begin inline asm
	lop3.b32 %r2180, %r905, %r2182, %r2161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2161, %r2184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2188, %r2180, %r2185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2191, %r916, %r2182, %r2172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2172, %r2195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2199, %r2191, %r2196;
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2218, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2206, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r2204, %r905, %r2206, %r2207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2207, %r2208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2212, %r2204, %r2209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2215, %r916, %r2206, %r2218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2220, %r2218, %r2219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2223, %r2215, %r2220;
	// end inline asm
	shr.u32 	%r2228, %r2206, 8;
	// begin inline asm
	lop3.b32 %r2226, %r905, %r2228, %r2207, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2231, %r2207, %r2230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2234, %r2226, %r2231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2237, %r916, %r2228, %r2218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2242, %r2218, %r2241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2245, %r2237, %r2242;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2264, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2252, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r2250, %r905, %r2252, %r2253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2255, %r2253, %r2254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2258, %r2250, %r2255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2261, %r916, %r2252, %r2264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2264, %r2265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2269, %r2261, %r2266;
	// end inline asm
	shr.u32 	%r2274, %r2252, 8;
	// begin inline asm
	lop3.b32 %r2272, %r905, %r2274, %r2253, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2253, %r2276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2280, %r2272, %r2277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2283, %r916, %r2274, %r2264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2288, %r2264, %r2287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2291, %r2283, %r2288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r1936, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r1947, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r1958, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r1969, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r1982, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r1993, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2004, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2015, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2028, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2039, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2050, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2061, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2074, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2085, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2096, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2107, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2120, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2131, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2142, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2153, %r1874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2166, %r1878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2420, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2422, %r2420, %r2177, %r1882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2426, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2428, %r2426, %r2188, %r1886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2432, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2434, %r2432, %r2199, %r1890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2438, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2440, %r2438, %r2212, %r1894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2444, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2446, %r2444, %r2223, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2450, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2452, %r2450, %r2234, %r1902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2456, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2458, %r2456, %r2245, %r1906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2462, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2464, %r2462, %r2258, %r1910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2468, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2470, %r2468, %r2269, %r1914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2474, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2476, %r2474, %r2280, %r1918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2480, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2482, %r2480, %r2291, %r1922;
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2502, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2490, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r2488, %r905, %r2490, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2493, %r2491, %r2492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2496, %r2488, %r2493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2499, %r916, %r2490, %r2502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2504, %r2502, %r2503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2507, %r2499, %r2504;
	// end inline asm
	shr.u32 	%r2512, %r2490, 8;
	// begin inline asm
	lop3.b32 %r2510, %r905, %r2512, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2491, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2521, %r916, %r2512, %r2502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2502, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2548, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2536, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r2534, %r905, %r2536, %r2537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2539, %r2537, %r2538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2542, %r2534, %r2539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2545, %r916, %r2536, %r2548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2550, %r2548, %r2549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2553, %r2545, %r2550;
	// end inline asm
	shr.u32 	%r2558, %r2536, 8;
	// begin inline asm
	lop3.b32 %r2556, %r905, %r2558, %r2537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2561, %r2537, %r2560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2564, %r2556, %r2561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2567, %r916, %r2558, %r2548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2572, %r2548, %r2571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2575, %r2567, %r2572;
	// end inline asm
	// begin inline asm
	mov.b32 %r2583, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2594, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2582, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r2580, %r905, %r2582, %r2583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2585, %r2583, %r2584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2588, %r2580, %r2585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2591, %r916, %r2582, %r2594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2596, %r2594, %r2595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2599, %r2591, %r2596;
	// end inline asm
	shr.u32 	%r2604, %r2582, 8;
	// begin inline asm
	lop3.b32 %r2602, %r905, %r2604, %r2583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2583, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2613, %r916, %r2604, %r2594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2594, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2640, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2628, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2626, %r905, %r2628, %r2629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2631, %r2629, %r2630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2634, %r2626, %r2631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2637, %r916, %r2628, %r2640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2642, %r2640, %r2641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2645, %r2637, %r2642;
	// end inline asm
	shr.u32 	%r2650, %r2628, 8;
	// begin inline asm
	lop3.b32 %r2648, %r905, %r2650, %r2629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2629, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2659, %r916, %r2650, %r2640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2640, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2686, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2674, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r2672, %r905, %r2674, %r2675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2677, %r2675, %r2676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2680, %r2672, %r2677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2683, %r916, %r2674, %r2686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2688, %r2686, %r2687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2691, %r2683, %r2688;
	// end inline asm
	shr.u32 	%r2696, %r2674, 8;
	// begin inline asm
	lop3.b32 %r2694, %r905, %r2696, %r2675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2675, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2705, %r916, %r2696, %r2686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2686, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2732, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2720, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r2718, %r905, %r2720, %r2721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2723, %r2721, %r2722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2726, %r2718, %r2723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2729, %r916, %r2720, %r2732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2734, %r2732, %r2733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2737, %r2729, %r2734;
	// end inline asm
	shr.u32 	%r2742, %r2720, 8;
	// begin inline asm
	lop3.b32 %r2740, %r905, %r2742, %r2721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2721, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2751, %r916, %r2742, %r2732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2756, %r2732, %r2755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2759, %r2751, %r2756;
	// end inline asm
	// begin inline asm
	mov.b32 %r2767, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2778, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2766, %r16408, -2004318072;
	// begin inline asm
	lop3.b32 %r2764, %r905, %r2766, %r2767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2769, %r2767, %r2768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2772, %r2764, %r2769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2775, %r916, %r2766, %r2778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2780, %r2778, %r2779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2783, %r2775, %r2780;
	// end inline asm
	shr.u32 	%r2788, %r2766, 8;
	// begin inline asm
	lop3.b32 %r2786, %r905, %r2788, %r2767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2791, %r2767, %r2790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2794, %r2786, %r2791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2797, %r916, %r2788, %r2778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2802, %r2778, %r2801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2805, %r2797, %r2802;
	// end inline asm
	// begin inline asm
	mov.b32 %r2813, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2824, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2812, %r16409, -2004318072;
	// begin inline asm
	lop3.b32 %r2810, %r905, %r2812, %r2813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2815, %r2813, %r2814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2818, %r2810, %r2815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2821, %r916, %r2812, %r2824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2826, %r2824, %r2825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2829, %r2821, %r2826;
	// end inline asm
	shr.u32 	%r2834, %r2812, 8;
	// begin inline asm
	lop3.b32 %r2832, %r905, %r2834, %r2813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2837, %r2813, %r2836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2840, %r2832, %r2837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2843, %r916, %r2834, %r2824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2848, %r2824, %r2847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2851, %r2843, %r2848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r386, %r2496, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r386, %r2507, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r386, %r2518, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r386, %r2529, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r386, %r2542, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r386, %r2553, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r386, %r2564, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r386, %r2575, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r386, %r2588, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r386, %r2599, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r386, %r2610, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r386, %r2621, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r386, %r2634, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r386, %r2645, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r386, %r2656, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r386, %r2667, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r404, %r2680, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r404, %r2691, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r404, %r2702, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r404, %r2713, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r404, %r2726, %r2416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r404, %r2737, %r2422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r404, %r2748, %r2428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r404, %r2759, %r2434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r404, %r2772, %r2440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r404, %r2783, %r2446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r404, %r2794, %r2452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r404, %r2805, %r2458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r404, %r2818, %r2464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r404, %r2829, %r2470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r404, %r2840, %r2476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r404, %r2851, %r2482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2982, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2984, %r2982, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r468, %r2989, %r2984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2991, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2993, %r2991, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r468, %r2998, %r2993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3000, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3002, %r3000, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r468, %r3007, %r3002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3009, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3011, %r3009, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r468, %r3016, %r3011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3018, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r3018, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r468, %r3025, %r3020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3027, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3029, %r3027, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r468, %r3034, %r3029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3036, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r3036, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r468, %r3043, %r3038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3045, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r3045, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r468, %r3052, %r3047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3054, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3056, %r3054, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r471, %r3061, %r3056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3063, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3065, %r3063, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r471, %r3070, %r3065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3072, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3074, %r3072, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r471, %r3079, %r3074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3081, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3083, %r3081, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r471, %r3088, %r3083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3090, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r3090, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r471, %r3097, %r3092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3099, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3101, %r3099, %r3103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r471, %r3106, %r3101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3108, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r3108, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r471, %r3115, %r3110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3117, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3119, %r3117, %r3121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r471, %r3124, %r3119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3126, %r474, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r468, %r2986, %r3126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3133, %r474, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r468, %r2995, %r3133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3140, %r474, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3143, %r468, %r3004, %r3140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3147, %r474, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3150, %r468, %r3013, %r3147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3154, %r474, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3157, %r468, %r3022, %r3154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3161, %r474, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r468, %r3031, %r3161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3168, %r474, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3171, %r468, %r3040, %r3168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3175, %r474, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3178, %r468, %r3049, %r3175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3182, %r477, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3185, %r471, %r3058, %r3182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3189, %r477, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3192, %r471, %r3067, %r3189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3196, %r477, %r3079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3199, %r471, %r3076, %r3196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3203, %r477, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3206, %r471, %r3085, %r3203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3210, %r477, %r3097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3213, %r471, %r3094, %r3210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3217, %r477, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3220, %r471, %r3103, %r3217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3224, %r477, %r3115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3227, %r471, %r3112, %r3224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3231, %r477, %r3124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3234, %r471, %r3121, %r3231;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3405, %r3402}, {%r523, %r529, %r526, %r532}, {%r2987, %r3129}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3414, %r3411}, {%r523, %r529, %r526, %r532}, {%r2996, %r3136}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3423, %r3420}, {%r523, %r529, %r526, %r532}, {%r3005, %r3143}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3432, %r3429}, {%r523, %r529, %r526, %r532}, {%r3014, %r3150}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3441, %r3438}, {%r523, %r529, %r526, %r532}, {%r3023, %r3157}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3450, %r3447}, {%r523, %r529, %r526, %r532}, {%r3032, %r3164}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3459, %r3456}, {%r523, %r529, %r526, %r532}, {%r3041, %r3171}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3468, %r3465}, {%r523, %r529, %r526, %r532}, {%r3050, %r3178}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3477, %r3474}, {%r523, %r529, %r526, %r532}, {%r3059, %r3185}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3486, %r3483}, {%r523, %r529, %r526, %r532}, {%r3068, %r3192}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3495, %r3492}, {%r523, %r529, %r526, %r532}, {%r3077, %r3199}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3504, %r3501}, {%r523, %r529, %r526, %r532}, {%r3086, %r3206}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3513, %r3510}, {%r523, %r529, %r526, %r532}, {%r3095, %r3213}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3522, %r3519}, {%r523, %r529, %r526, %r532}, {%r3104, %r3220}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3531, %r3528}, {%r523, %r529, %r526, %r532}, {%r3113, %r3227}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3540, %r3537}, {%r523, %r529, %r526, %r532}, {%r3122, %r3234}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3398, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3400, %r3398, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3403, %r573, %r3405, %r3400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3407, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3409, %r3407, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3412, %r573, %r3414, %r3409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3416, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3418, %r3416, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r573, %r3423, %r3418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3425, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3427, %r3425, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r573, %r3432, %r3427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3434, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r3434, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r573, %r3441, %r3436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3443, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3445, %r3443, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r573, %r3450, %r3445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3452, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r3452, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r573, %r3459, %r3454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3461, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r3461, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r573, %r3468, %r3463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3470, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r3470, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r573, %r3477, %r3472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3479, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r3479, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r573, %r3486, %r3481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3488, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r3488, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r573, %r3495, %r3490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3497, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3499, %r3497, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r573, %r3504, %r3499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3506, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r3506, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r573, %r3513, %r3508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3515, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r3515, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r573, %r3522, %r3517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3524, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r3524, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r573, %r3531, %r3526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3533, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3535, %r3533, %r3537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r573, %r3540, %r3535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3542, %r576, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r573, %r3402, %r3542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3549, %r576, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r573, %r3411, %r3549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3556, %r576, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3559, %r573, %r3420, %r3556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3563, %r576, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3566, %r573, %r3429, %r3563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3570, %r576, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r573, %r3438, %r3570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r576, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r573, %r3447, %r3577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3584, %r576, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3587, %r573, %r3456, %r3584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3591, %r576, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3594, %r573, %r3465, %r3591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3598, %r576, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3601, %r573, %r3474, %r3598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3605, %r576, %r3486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3608, %r573, %r3483, %r3605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3612, %r576, %r3495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3615, %r573, %r3492, %r3612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3619, %r576, %r3504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3622, %r573, %r3501, %r3619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3626, %r576, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3629, %r573, %r3510, %r3626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3633, %r576, %r3522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3636, %r573, %r3519, %r3633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3640, %r576, %r3531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3643, %r573, %r3528, %r3640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3647, %r576, %r3540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3650, %r573, %r3537, %r3647;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3943, %r3946}, {%r611, %r617, %r614, %r620}, {%r3403, %r3545}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3949, %r3952}, {%r611, %r617, %r614, %r620}, {%r3412, %r3552}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3955, %r3958}, {%r611, %r617, %r614, %r620}, {%r3421, %r3559}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3961, %r3964}, {%r611, %r617, %r614, %r620}, {%r3430, %r3566}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3967, %r3970}, {%r611, %r617, %r614, %r620}, {%r3439, %r3573}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3973, %r3976}, {%r611, %r617, %r614, %r620}, {%r3448, %r3580}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3979, %r3982}, {%r611, %r617, %r614, %r620}, {%r3457, %r3587}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3985, %r3988}, {%r611, %r617, %r614, %r620}, {%r3466, %r3594}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r611, %r617, %r614, %r620}, {%r3475, %r3601}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3950, %r3953}, {%r611, %r617, %r614, %r620}, {%r3484, %r3608}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3956, %r3959}, {%r611, %r617, %r614, %r620}, {%r3493, %r3615}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3962, %r3965}, {%r611, %r617, %r614, %r620}, {%r3502, %r3622}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3968, %r3971}, {%r611, %r617, %r614, %r620}, {%r3511, %r3629}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3974, %r3977}, {%r611, %r617, %r614, %r620}, {%r3520, %r3636}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3980, %r3983}, {%r611, %r617, %r614, %r620}, {%r3529, %r3643}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3986, %r3989}, {%r611, %r617, %r614, %r620}, {%r3538, %r3650}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3951, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3954, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3960, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3963, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3966, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3969, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3987, %r3988, %r3989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3999, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4002, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4008, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4011, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4014, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4017, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4020, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4023, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4026, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4029, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4032, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4035, %r3988, %r3989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r186, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r186, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r186, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r186, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r186, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r186, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r186, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r186, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r186, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r186, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r186, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r186, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r186, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r186, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r186, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r186, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r188, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r188, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r188, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r188, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r188, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r188, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r188, %r4008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4107, %r188, %r4011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4110, %r188, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4113, %r188, %r4017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4116, %r188, %r4020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4119, %r188, %r4023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4122, %r188, %r4026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4125, %r188, %r4029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4128, %r188, %r4032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4131, %r188, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4135, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4136, %r4038, %r4134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4139, %r4136, %r4135;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4144, %r4041, %r4142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4147, %r4144, %r4143;
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4152, %r4044, %r4150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4155, %r4152, %r4151;
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4160, %r4047, %r4158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4163, %r4160, %r4159;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4168, %r4050, %r4166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4171, %r4168, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4176, %r4053, %r4174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4179, %r4176, %r4175;
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4184, %r4056, %r4182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4187, %r4184, %r4183;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4192, %r4059, %r4190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4195, %r4192, %r4191;
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4200, %r4062, %r4198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4203, %r4200, %r4199;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4208, %r4065, %r4206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4211, %r4208, %r4207;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4216, %r4068, %r4214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4219, %r4216, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4224, %r4071, %r4222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4227, %r4224, %r4223;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4232, %r4074, %r4230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4235, %r4232, %r4231;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4240, %r4077, %r4238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4243, %r4240, %r4239;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4248, %r4080, %r4246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4251, %r4248, %r4247;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4256, %r4083, %r4254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4259, %r4256, %r4255;
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4264, %r4086, %r4262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4267, %r4264, %r4263;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4272, %r4089, %r4270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4275, %r4272, %r4271;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4280, %r4092, %r4278;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4283, %r4280, %r4279;
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4288, %r4095, %r4286;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4291, %r4288, %r4287;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4296, %r4098, %r4294;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4299, %r4296, %r4295;
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4304, %r4101, %r4302;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4307, %r4304, %r4303;
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4312, %r4104, %r4310;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4315, %r4312, %r4311;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4320, %r4107, %r4318;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4323, %r4320, %r4319;
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4328, %r4110, %r4326;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4331, %r4328, %r4327;
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4336, %r4113, %r4334;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4339, %r4336, %r4335;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4344, %r4116, %r4342;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4347, %r4344, %r4343;
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4352, %r4119, %r4350;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4355, %r4352, %r4351;
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4360, %r4122, %r4358;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4363, %r4360, %r4359;
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4368, %r4125, %r4366;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4371, %r4368, %r4367;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4376, %r4128, %r4374;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4379, %r4376, %r4375;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4384, %r4131, %r4382;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4387, %r4384, %r4383;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4392, %r4393, %r4391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4139, %r4392;
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4393, %r4398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4147, %r4399;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4393, %r4405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4155, %r4406;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4393, %r4412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4163, %r4413;
	// end inline asm
	mov.u32 	%r4422, 25152;
	// begin inline asm
	prmt.b32 %r4419, %r4395, %r4409, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4423, %r4402, %r4416, %r4422;
	// end inline asm
	shl.b32 	%r4430, %r4423, 4;
	mov.u32 	%r4428, 252645135;
	// begin inline asm
	lop3.b32 %r4427, %r4428, %r4419, %r4430, 202;
	// end inline asm
	xor.b32  	%r16227, %r4427, -2004318072;
	// begin inline asm
	mov.b32 %r4434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4434, %r4432;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4171, %r4433;
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4434, %r4439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4179, %r4440;
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4434, %r4446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4187, %r4447;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4434, %r4453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4195, %r4454;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4460, %r4436, %r4450, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4464, %r4443, %r4457, %r4422;
	// end inline asm
	shl.b32 	%r4471, %r4464, 4;
	// begin inline asm
	lop3.b32 %r4468, %r4428, %r4460, %r4471, 202;
	// end inline asm
	xor.b32  	%r16228, %r4468, -2004318072;
	// begin inline asm
	mov.b32 %r4475, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4475, %r4473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4203, %r4474;
	// end inline asm
	// begin inline asm
	mov.b32 %r4480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4475, %r4480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4211, %r4481;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4475, %r4487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4219, %r4488;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4475, %r4494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4227, %r4495;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4501, %r4477, %r4491, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4505, %r4484, %r4498, %r4422;
	// end inline asm
	shl.b32 	%r4512, %r4505, 4;
	// begin inline asm
	lop3.b32 %r4509, %r4428, %r4501, %r4512, 202;
	// end inline asm
	xor.b32  	%r16229, %r4509, -2004318072;
	// begin inline asm
	mov.b32 %r4516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4516, %r4514;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4235, %r4515;
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4516, %r4521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4243, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4516, %r4528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4251, %r4529;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4516, %r4535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4259, %r4536;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4542, %r4518, %r4532, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4546, %r4525, %r4539, %r4422;
	// end inline asm
	shl.b32 	%r4553, %r4546, 4;
	// begin inline asm
	lop3.b32 %r4550, %r4428, %r4542, %r4553, 202;
	// end inline asm
	xor.b32  	%r16230, %r4550, -2004318072;
	// begin inline asm
	mov.b32 %r4557, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4557, %r4555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4267, %r4556;
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4557, %r4562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4275, %r4563;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4557, %r4569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4283, %r4570;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4557, %r4576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4291, %r4577;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4583, %r4559, %r4573, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4587, %r4566, %r4580, %r4422;
	// end inline asm
	shl.b32 	%r4594, %r4587, 4;
	// begin inline asm
	lop3.b32 %r4591, %r4428, %r4583, %r4594, 202;
	// end inline asm
	xor.b32  	%r16231, %r4591, -2004318072;
	// begin inline asm
	mov.b32 %r4598, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4597, %r4598, %r4596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4299, %r4597;
	// end inline asm
	// begin inline asm
	mov.b32 %r4603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4604, %r4598, %r4603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4307, %r4604;
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4598, %r4610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4315, %r4611;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4598, %r4617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4323, %r4618;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4624, %r4600, %r4614, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4628, %r4607, %r4621, %r4422;
	// end inline asm
	shl.b32 	%r4635, %r4628, 4;
	// begin inline asm
	lop3.b32 %r4632, %r4428, %r4624, %r4635, 202;
	// end inline asm
	xor.b32  	%r16232, %r4632, -2004318072;
	// begin inline asm
	mov.b32 %r4639, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4638, %r4639, %r4637;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4331, %r4638;
	// end inline asm
	// begin inline asm
	mov.b32 %r4644, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4645, %r4639, %r4644;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4339, %r4645;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4639, %r4651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4347, %r4652;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4639, %r4658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4355, %r4659;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4665, %r4641, %r4655, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4669, %r4648, %r4662, %r4422;
	// end inline asm
	shl.b32 	%r4676, %r4669, 4;
	// begin inline asm
	lop3.b32 %r4673, %r4428, %r4665, %r4676, 202;
	// end inline asm
	xor.b32  	%r16233, %r4673, -2004318072;
	// begin inline asm
	mov.b32 %r4680, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4679, %r4680, %r4678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4363, %r4679;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4680, %r4685;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4689, %r4371, %r4686;
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4693, %r4680, %r4692;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4696, %r4379, %r4693;
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4700, %r4680, %r4699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4703, %r4387, %r4700;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4706, %r4682, %r4696, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4710, %r4689, %r4703, %r4422;
	// end inline asm
	shl.b32 	%r4717, %r4710, 4;
	// begin inline asm
	lop3.b32 %r4714, %r4428, %r4706, %r4717, 202;
	// end inline asm
	xor.b32  	%r16234, %r4714, -2004318072;
	add.s32 	%r16235, %r131, %r16166;
	mul.wide.u32 	%rd111, %r16235, 4;
	add.s64 	%rd112, %rd52, %rd111;
	st.shared.u32 	[%rd112], %r16227;
	add.s32 	%r16236, %r132, %r16166;
	mul.wide.u32 	%rd113, %r16236, 4;
	add.s64 	%rd114, %rd52, %rd113;
	st.shared.u32 	[%rd114], %r16228;
	add.s32 	%r16237, %r133, %r16166;
	mul.wide.u32 	%rd115, %r16237, 4;
	add.s64 	%rd116, %rd52, %rd115;
	st.shared.u32 	[%rd116], %r16229;
	add.s32 	%r16238, %r134, %r16166;
	mul.wide.u32 	%rd117, %r16238, 4;
	add.s64 	%rd118, %rd52, %rd117;
	st.shared.u32 	[%rd118], %r16230;
	add.s32 	%r16239, %r135, %r16166;
	mul.wide.u32 	%rd119, %r16239, 4;
	add.s64 	%rd120, %rd52, %rd119;
	st.shared.u32 	[%rd120], %r16231;
	add.s32 	%r16240, %r136, %r16166;
	mul.wide.u32 	%rd121, %r16240, 4;
	add.s64 	%rd122, %rd52, %rd121;
	st.shared.u32 	[%rd122], %r16232;
	add.s32 	%r16241, %r137, %r16166;
	mul.wide.u32 	%rd123, %r16241, 4;
	add.s64 	%rd124, %rd52, %rd123;
	st.shared.u32 	[%rd124], %r16233;
	add.s32 	%r16242, %r138, %r16166;
	mul.wide.u32 	%rd125, %r16242, 4;
	add.s64 	%rd126, %rd52, %rd125;
	st.shared.u32 	[%rd126], %r16234;
	ld.shared.u32 	%r16386, [%rd96];
	ld.shared.u32 	%r16387, [%rd98];
	ld.shared.u32 	%r16388, [%rd100];
	ld.shared.u32 	%r16389, [%rd102];
	ld.shared.u32 	%r16398, [%rd104];
	ld.shared.u32 	%r16399, [%rd106];
	ld.shared.u32 	%r16400, [%rd108];
	ld.shared.u32 	%r16401, [%rd110];
	// begin inline asm
	mov.b32 %r4723, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4734, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4722, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r4720, %r905, %r4722, %r4723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4723, %r4724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4728, %r4720, %r4725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4731, %r916, %r4722, %r4734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4736, %r4734, %r4735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4739, %r4731, %r4736;
	// end inline asm
	shr.u32 	%r4744, %r4722, 8;
	// begin inline asm
	lop3.b32 %r4742, %r905, %r4744, %r4723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4723, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4753, %r916, %r4744, %r4734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4734, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4780, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4768, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r4766, %r905, %r4768, %r4769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4771, %r4769, %r4770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4774, %r4766, %r4771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4777, %r916, %r4768, %r4780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4782, %r4780, %r4781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4785, %r4777, %r4782;
	// end inline asm
	shr.u32 	%r4790, %r4768, 8;
	// begin inline asm
	lop3.b32 %r4788, %r905, %r4790, %r4769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4769, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4799, %r916, %r4790, %r4780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4780, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4826, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4814, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r4812, %r905, %r4814, %r4815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4817, %r4815, %r4816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4820, %r4812, %r4817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4823, %r916, %r4814, %r4826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4828, %r4826, %r4827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4831, %r4823, %r4828;
	// end inline asm
	shr.u32 	%r4836, %r4814, 8;
	// begin inline asm
	lop3.b32 %r4834, %r905, %r4836, %r4815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4815, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4845, %r916, %r4836, %r4826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4826, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4872, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4860, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r4858, %r905, %r4860, %r4861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4863, %r4861, %r4862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4866, %r4858, %r4863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4869, %r916, %r4860, %r4872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4874, %r4872, %r4873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4877, %r4869, %r4874;
	// end inline asm
	shr.u32 	%r4882, %r4860, 8;
	// begin inline asm
	lop3.b32 %r4880, %r905, %r4882, %r4861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4861, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4891, %r916, %r4882, %r4872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4872, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4918, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4906, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r4904, %r905, %r4906, %r4907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4909, %r4907, %r4908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4912, %r4904, %r4909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4915, %r916, %r4906, %r4918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4920, %r4918, %r4919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4923, %r4915, %r4920;
	// end inline asm
	shr.u32 	%r4928, %r4906, 8;
	// begin inline asm
	lop3.b32 %r4926, %r905, %r4928, %r4907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4907, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4937, %r916, %r4928, %r4918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4918, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4964, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4952, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r4950, %r905, %r4952, %r4953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4955, %r4953, %r4954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4958, %r4950, %r4955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4961, %r916, %r4952, %r4964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4966, %r4964, %r4965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4969, %r4961, %r4966;
	// end inline asm
	shr.u32 	%r4974, %r4952, 8;
	// begin inline asm
	lop3.b32 %r4972, %r905, %r4974, %r4953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4953, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4983, %r916, %r4974, %r4964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4988, %r4964, %r4987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4991, %r4983, %r4988;
	// end inline asm
	// begin inline asm
	mov.b32 %r4999, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5010, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4998, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r4996, %r905, %r4998, %r4999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5001, %r4999, %r5000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5004, %r4996, %r5001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5007, %r916, %r4998, %r5010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5012, %r5010, %r5011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5015, %r5007, %r5012;
	// end inline asm
	shr.u32 	%r5020, %r4998, 8;
	// begin inline asm
	lop3.b32 %r5018, %r905, %r5020, %r4999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5023, %r4999, %r5022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5026, %r5018, %r5023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5029, %r916, %r5020, %r5010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5034, %r5010, %r5033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5037, %r5029, %r5034;
	// end inline asm
	// begin inline asm
	mov.b32 %r5045, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5056, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5044, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r5042, %r905, %r5044, %r5045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5047, %r5045, %r5046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5050, %r5042, %r5047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5053, %r916, %r5044, %r5056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5058, %r5056, %r5057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5061, %r5053, %r5058;
	// end inline asm
	shr.u32 	%r5066, %r5044, 8;
	// begin inline asm
	lop3.b32 %r5064, %r905, %r5066, %r5045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5069, %r5045, %r5068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5072, %r5064, %r5069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5075, %r916, %r5066, %r5056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5080, %r5056, %r5079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5083, %r5075, %r5080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r4912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r4923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r4945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5186, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5188, %r5186, %r4958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r4969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r4980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r4991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r5004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r5015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r5026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5231, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5233, %r5231, %r5061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5236, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5238, %r5236, %r5072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5241, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5243, %r5241, %r5083;
	// end inline asm
	// begin inline asm
	mov.b32 %r5251, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5262, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5248, %r905, %r1930, %r5251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5253, %r5251, %r5252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5256, %r5248, %r5253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5259, %r916, %r1930, %r5262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5264, %r5262, %r5263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5267, %r5259, %r5264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5270, %r905, %r1952, %r5251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5275, %r5251, %r5274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5278, %r5270, %r5275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5281, %r916, %r1952, %r5262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5286, %r5262, %r5285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5289, %r5281, %r5286;
	// end inline asm
	// begin inline asm
	mov.b32 %r5297, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5308, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5294, %r905, %r1976, %r5297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5299, %r5297, %r5298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5302, %r5294, %r5299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5305, %r916, %r1976, %r5308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5310, %r5308, %r5309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5313, %r5305, %r5310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5316, %r905, %r1998, %r5297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5321, %r5297, %r5320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5324, %r5316, %r5321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5327, %r916, %r1998, %r5308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5332, %r5308, %r5331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5335, %r5327, %r5332;
	// end inline asm
	// begin inline asm
	mov.b32 %r5343, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5354, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5340, %r905, %r2022, %r5343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5345, %r5343, %r5344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5348, %r5340, %r5345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5351, %r916, %r2022, %r5354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5356, %r5354, %r5355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5359, %r5351, %r5356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5362, %r905, %r2044, %r5343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5367, %r5343, %r5366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5370, %r5362, %r5367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5373, %r916, %r2044, %r5354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5378, %r5354, %r5377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5381, %r5373, %r5378;
	// end inline asm
	// begin inline asm
	mov.b32 %r5389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5400, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5386, %r905, %r2068, %r5389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5391, %r5389, %r5390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5394, %r5386, %r5391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5397, %r916, %r2068, %r5400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5402, %r5400, %r5401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5405, %r5397, %r5402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5408, %r905, %r2090, %r5389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5413, %r5389, %r5412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5416, %r5408, %r5413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5419, %r916, %r2090, %r5400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5424, %r5400, %r5423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5427, %r5419, %r5424;
	// end inline asm
	// begin inline asm
	mov.b32 %r5435, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5446, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5432, %r905, %r2114, %r5435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5437, %r5435, %r5436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5440, %r5432, %r5437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5443, %r916, %r2114, %r5446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5448, %r5446, %r5447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5451, %r5443, %r5448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5454, %r905, %r2136, %r5435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5459, %r5435, %r5458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5462, %r5454, %r5459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5465, %r916, %r2136, %r5446, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5470, %r5446, %r5469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5473, %r5465, %r5470;
	// end inline asm
	// begin inline asm
	mov.b32 %r5481, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5492, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5478, %r905, %r2160, %r5481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5483, %r5481, %r5482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5486, %r5478, %r5483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5489, %r916, %r2160, %r5492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5494, %r5492, %r5493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5497, %r5489, %r5494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5500, %r905, %r2182, %r5481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5505, %r5481, %r5504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5508, %r5500, %r5505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5511, %r916, %r2182, %r5492, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5516, %r5492, %r5515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5519, %r5511, %r5516;
	// end inline asm
	// begin inline asm
	mov.b32 %r5527, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5538, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5524, %r905, %r2206, %r5527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5529, %r5527, %r5528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5532, %r5524, %r5529;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5535, %r916, %r2206, %r5538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5540, %r5538, %r5539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5543, %r5535, %r5540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5546, %r905, %r2228, %r5527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5551, %r5527, %r5550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5554, %r5546, %r5551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5557, %r916, %r2228, %r5538, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5562, %r5538, %r5561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5565, %r5557, %r5562;
	// end inline asm
	// begin inline asm
	mov.b32 %r5573, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5584, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5570, %r905, %r2252, %r5573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5575, %r5573, %r5574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5578, %r5570, %r5575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5581, %r916, %r2252, %r5584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5586, %r5584, %r5585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5589, %r5581, %r5586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5592, %r905, %r2274, %r5573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5597, %r5573, %r5596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5600, %r5592, %r5597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5603, %r916, %r2274, %r5584, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5608, %r5584, %r5607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5611, %r5603, %r5608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r314, %r5256, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r314, %r5267, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r314, %r5278, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r314, %r5289, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r314, %r5302, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r314, %r5313, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r314, %r5324, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r314, %r5335, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r314, %r5348, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r314, %r5359, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r314, %r5370, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r314, %r5381, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r314, %r5394, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r314, %r5405, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r314, %r5416, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r314, %r5427, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r332, %r5440, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r332, %r5451, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r332, %r5462, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5690, %r332, %r5473, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5694, %r332, %r5486, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5698, %r332, %r5497, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5702, %r332, %r5508, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5706, %r332, %r5519, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5710, %r332, %r5532, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5714, %r332, %r5543, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5718, %r332, %r5554, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5722, %r332, %r5565, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5726, %r332, %r5578, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5730, %r332, %r5589, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5734, %r332, %r5600, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5738, %r332, %r5611, %r5243;
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5744, %r905, %r2490, %r5747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5749, %r5747, %r5748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5752, %r5744, %r5749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5755, %r916, %r2490, %r5758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5760, %r5758, %r5759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5763, %r5755, %r5760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5766, %r905, %r2512, %r5747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5747, %r5770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5774, %r5766, %r5771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5777, %r916, %r2512, %r5758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5758, %r5781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5785, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5790, %r905, %r2536, %r5793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5795, %r5793, %r5794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5798, %r5790, %r5795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5801, %r916, %r2536, %r5804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5806, %r5804, %r5805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5809, %r5801, %r5806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5812, %r905, %r2558, %r5793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5793, %r5816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5820, %r5812, %r5817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5823, %r916, %r2558, %r5804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5804, %r5827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5831, %r5823, %r5828;
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5850, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5836, %r905, %r2582, %r5839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5839, %r5840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5844, %r5836, %r5841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5847, %r916, %r2582, %r5850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5850, %r5851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5855, %r5847, %r5852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5858, %r905, %r2604, %r5839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5839, %r5862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5866, %r5858, %r5863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5869, %r916, %r2604, %r5850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5850, %r5873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5877, %r5869, %r5874;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5896, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5882, %r905, %r2628, %r5885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5885, %r5886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5890, %r5882, %r5887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5893, %r916, %r2628, %r5896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5896, %r5897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5901, %r5893, %r5898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5904, %r905, %r2650, %r5885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5885, %r5908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5912, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5915, %r916, %r2650, %r5896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5896, %r5919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5923, %r5915, %r5920;
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5942, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5928, %r905, %r2674, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5931, %r5932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5936, %r5928, %r5933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5939, %r916, %r2674, %r5942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5942, %r5943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5947, %r5939, %r5944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5950, %r905, %r2696, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5931, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r916, %r2696, %r5942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5942, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5988, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5974, %r905, %r2720, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5979, %r5977, %r5978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5982, %r5974, %r5979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5985, %r916, %r2720, %r5988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5990, %r5988, %r5989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5993, %r5985, %r5990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5996, %r905, %r2742, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5977, %r6000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6004, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6007, %r916, %r2742, %r5988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r5988, %r6011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6015, %r6007, %r6012;
	// end inline asm
	// begin inline asm
	mov.b32 %r6023, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6034, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6020, %r905, %r2766, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r6023, %r6024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6028, %r6020, %r6025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6031, %r916, %r2766, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6036, %r6034, %r6035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6039, %r6031, %r6036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6042, %r905, %r2788, %r6023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6047, %r6023, %r6046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6050, %r6042, %r6047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6053, %r916, %r2788, %r6034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r6034, %r6057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6061, %r6053, %r6058;
	// end inline asm
	// begin inline asm
	mov.b32 %r6069, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6080, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6066, %r905, %r2812, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6071, %r6069, %r6070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6074, %r6066, %r6071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6077, %r916, %r2812, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6082, %r6080, %r6081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6085, %r6077, %r6082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6088, %r905, %r2834, %r6069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6093, %r6069, %r6092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6096, %r6088, %r6093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6099, %r916, %r2834, %r6080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6104, %r6080, %r6103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6107, %r6099, %r6104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5752, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5763, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5774, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5785, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5798, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5809, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5820, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5831, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5844, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5855, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5866, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5877, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5890, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5901, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5912, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5923, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5936, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r5947, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r5958, %r5686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r5969, %r5690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r5982, %r5694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6238, %r6236, %r5993, %r5698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6244, %r6242, %r6004, %r5702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6250, %r6248, %r6015, %r5706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6254, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6256, %r6254, %r6028, %r5710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6260, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6262, %r6260, %r6039, %r5714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6268, %r6266, %r6050, %r5718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6274, %r6272, %r6061, %r5722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6280, %r6278, %r6074, %r5726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6284, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6286, %r6284, %r6085, %r5730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6290, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6292, %r6290, %r6096, %r5734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6296, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6298, %r6296, %r6107, %r5738;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6304, %r905, %r906, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6309, %r6307, %r6308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6312, %r6304, %r6309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6315, %r916, %r906, %r6318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6320, %r6318, %r6319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6323, %r6315, %r6320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r905, %r928, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6307, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r916, %r928, %r6318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6318, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r905, %r952, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6353, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6361, %r916, %r952, %r6364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6366, %r6364, %r6365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6369, %r6361, %r6366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r905, %r974, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6353, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r916, %r974, %r6364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6364, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6410, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6396, %r905, %r998, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6401, %r6399, %r6400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6404, %r6396, %r6401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6407, %r916, %r998, %r6410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6412, %r6410, %r6411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6415, %r6407, %r6412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r905, %r1020, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6399, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6429, %r916, %r1020, %r6410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6434, %r6410, %r6433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6437, %r6429, %r6434;
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6456, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6442, %r905, %r1044, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6447, %r6445, %r6446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6450, %r6442, %r6447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6453, %r916, %r1044, %r6456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6458, %r6456, %r6457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6461, %r6453, %r6458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r905, %r1066, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6445, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r916, %r1066, %r6456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6456, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6502, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r905, %r1090, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6491, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r916, %r1090, %r6502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6502, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r905, %r1112, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6491, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r916, %r1112, %r6502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6502, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6548, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6534, %r905, %r1136, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6539, %r6537, %r6538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6542, %r6534, %r6539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6545, %r916, %r1136, %r6548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6550, %r6548, %r6549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6553, %r6545, %r6550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r905, %r1158, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6537, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6567, %r916, %r1158, %r6548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6572, %r6548, %r6571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6575, %r6567, %r6572;
	// end inline asm
	// begin inline asm
	mov.b32 %r6583, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6594, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6580, %r905, %r1182, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6585, %r6583, %r6584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6588, %r6580, %r6585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6591, %r916, %r1182, %r6594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6596, %r6594, %r6595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6599, %r6591, %r6596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6602, %r905, %r1204, %r6583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6607, %r6583, %r6606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6610, %r6602, %r6607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6613, %r916, %r1204, %r6594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6618, %r6594, %r6617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6621, %r6613, %r6618;
	// end inline asm
	// begin inline asm
	mov.b32 %r6629, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6640, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6626, %r905, %r1228, %r6629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6631, %r6629, %r6630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6634, %r6626, %r6631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6637, %r916, %r1228, %r6640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6642, %r6640, %r6641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6645, %r6637, %r6642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6648, %r905, %r1250, %r6629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6653, %r6629, %r6652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6656, %r6648, %r6653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6659, %r916, %r1250, %r6640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6664, %r6640, %r6663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6667, %r6659, %r6664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r386, %r6312, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r386, %r6323, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r386, %r6334, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r386, %r6345, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r386, %r6358, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r386, %r6369, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r386, %r6380, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r386, %r6391, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r386, %r6404, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r386, %r6415, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r386, %r6426, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r386, %r6437, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r386, %r6450, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r386, %r6461, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r386, %r6472, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r386, %r6483, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r404, %r6496, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r404, %r6507, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r404, %r6518, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r404, %r6529, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6895, %r404, %r6542, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r404, %r6553, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r404, %r6564, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r404, %r6575, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r404, %r6588, %r6256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r404, %r6599, %r6262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r404, %r6610, %r6268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r404, %r6621, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6931, %r404, %r6634, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r404, %r6645, %r6286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6940, %r404, %r6656, %r6292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6937, %r404, %r6667, %r6298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6798, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6800, %r6798, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r468, %r6805, %r6800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6807, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6809, %r6807, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r468, %r6814, %r6809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6816, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6818, %r6816, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r468, %r6823, %r6818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6825, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6827, %r6825, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r468, %r6832, %r6827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6834, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6836, %r6834, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r468, %r6841, %r6836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6843, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6845, %r6843, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r468, %r6850, %r6845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6852, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6854, %r6852, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r468, %r6859, %r6854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6861, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r6861, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r468, %r6868, %r6863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6870, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6872, %r6870, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r471, %r6877, %r6872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6879, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6881, %r6879, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r471, %r6886, %r6881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6888, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6890, %r6888, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r471, %r6895, %r6890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6897, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6899, %r6897, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r471, %r6904, %r6899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6906, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r6906, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r471, %r6913, %r6908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6915, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6917, %r6915, %r6919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r471, %r6922, %r6917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6924, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r6924, %r6928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r471, %r6931, %r6926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6933, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6935, %r6933, %r6937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6938, %r471, %r6940, %r6935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6942, %r474, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6945, %r468, %r6802, %r6942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6949, %r474, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6952, %r468, %r6811, %r6949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6956, %r474, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6959, %r468, %r6820, %r6956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6963, %r474, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6966, %r468, %r6829, %r6963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6970, %r474, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r468, %r6838, %r6970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6977, %r474, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6980, %r468, %r6847, %r6977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6984, %r474, %r6859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6987, %r468, %r6856, %r6984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6991, %r474, %r6868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6994, %r468, %r6865, %r6991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6998, %r477, %r6877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7001, %r471, %r6874, %r6998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7005, %r477, %r6886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r471, %r6883, %r7005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7012, %r477, %r6895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7015, %r471, %r6892, %r7012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7019, %r477, %r6904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r471, %r6901, %r7019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7026, %r477, %r6913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r471, %r6910, %r7026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7033, %r477, %r6922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r471, %r6919, %r7033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7040, %r477, %r6931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7043, %r471, %r6928, %r7040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7047, %r477, %r6940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7050, %r471, %r6937, %r7047;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7221, %r7218}, {%r523, %r529, %r526, %r532}, {%r6803, %r6945}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7230, %r7227}, {%r523, %r529, %r526, %r532}, {%r6812, %r6952}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7239, %r7236}, {%r523, %r529, %r526, %r532}, {%r6821, %r6959}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7248, %r7245}, {%r523, %r529, %r526, %r532}, {%r6830, %r6966}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7257, %r7254}, {%r523, %r529, %r526, %r532}, {%r6839, %r6973}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7266, %r7263}, {%r523, %r529, %r526, %r532}, {%r6848, %r6980}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7275, %r7272}, {%r523, %r529, %r526, %r532}, {%r6857, %r6987}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7284, %r7281}, {%r523, %r529, %r526, %r532}, {%r6866, %r6994}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7293, %r7290}, {%r523, %r529, %r526, %r532}, {%r6875, %r7001}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7302, %r7299}, {%r523, %r529, %r526, %r532}, {%r6884, %r7008}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7311, %r7308}, {%r523, %r529, %r526, %r532}, {%r6893, %r7015}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7320, %r7317}, {%r523, %r529, %r526, %r532}, {%r6902, %r7022}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7329, %r7326}, {%r523, %r529, %r526, %r532}, {%r6911, %r7029}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7338, %r7335}, {%r523, %r529, %r526, %r532}, {%r6920, %r7036}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7347, %r7344}, {%r523, %r529, %r526, %r532}, {%r6929, %r7043}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7356, %r7353}, {%r523, %r529, %r526, %r532}, {%r6938, %r7050}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7214, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7216, %r7214, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7219, %r573, %r7221, %r7216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7223, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7225, %r7223, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7228, %r573, %r7230, %r7225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7232, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7234, %r7232, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7237, %r573, %r7239, %r7234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7241, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7243, %r7241, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7246, %r573, %r7248, %r7243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7250, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r7250, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r573, %r7257, %r7252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7259, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7261, %r7259, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7264, %r573, %r7266, %r7261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7268, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r7268, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r573, %r7275, %r7270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7277, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r7277, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r573, %r7284, %r7279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7286, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r7286, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r573, %r7293, %r7288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7295, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r7295, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r573, %r7302, %r7297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7304, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7306, %r7304, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7309, %r573, %r7311, %r7306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7313, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7315, %r7313, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7318, %r573, %r7320, %r7315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7322, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r7322, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r573, %r7329, %r7324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7331, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r7331, %r7335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r573, %r7338, %r7333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7340, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r7340, %r7344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r573, %r7347, %r7342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7349, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7351, %r7349, %r7353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7354, %r573, %r7356, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r576, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r573, %r7218, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7365, %r576, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7368, %r573, %r7227, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7372, %r576, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7375, %r573, %r7236, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r576, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7382, %r573, %r7245, %r7379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r576, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7389, %r573, %r7254, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r576, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7396, %r573, %r7263, %r7393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7400, %r576, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7403, %r573, %r7272, %r7400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7407, %r576, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7410, %r573, %r7281, %r7407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r576, %r7293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7417, %r573, %r7290, %r7414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7421, %r576, %r7302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7424, %r573, %r7299, %r7421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7428, %r576, %r7311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7431, %r573, %r7308, %r7428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7435, %r576, %r7320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7438, %r573, %r7317, %r7435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7442, %r576, %r7329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7445, %r573, %r7326, %r7442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7449, %r576, %r7338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7452, %r573, %r7335, %r7449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7456, %r576, %r7347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7459, %r573, %r7344, %r7456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7463, %r576, %r7356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7466, %r573, %r7353, %r7463;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7759, %r7762}, {%r611, %r617, %r614, %r620}, {%r7219, %r7361}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7765, %r7768}, {%r611, %r617, %r614, %r620}, {%r7228, %r7368}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7771, %r7774}, {%r611, %r617, %r614, %r620}, {%r7237, %r7375}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7777, %r7780}, {%r611, %r617, %r614, %r620}, {%r7246, %r7382}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7783, %r7786}, {%r611, %r617, %r614, %r620}, {%r7255, %r7389}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7789, %r7792}, {%r611, %r617, %r614, %r620}, {%r7264, %r7396}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7795, %r7798}, {%r611, %r617, %r614, %r620}, {%r7273, %r7403}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7801, %r7804}, {%r611, %r617, %r614, %r620}, {%r7282, %r7410}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r611, %r617, %r614, %r620}, {%r7291, %r7417}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7766, %r7769}, {%r611, %r617, %r614, %r620}, {%r7300, %r7424}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7772, %r7775}, {%r611, %r617, %r614, %r620}, {%r7309, %r7431}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7778, %r7781}, {%r611, %r617, %r614, %r620}, {%r7318, %r7438}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7784, %r7787}, {%r611, %r617, %r614, %r620}, {%r7327, %r7445}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7790, %r7793}, {%r611, %r617, %r614, %r620}, {%r7336, %r7452}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7796, %r7799}, {%r611, %r617, %r614, %r620}, {%r7345, %r7459}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7802, %r7805}, {%r611, %r617, %r614, %r620}, {%r7354, %r7466}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7779, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7782, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7785, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7804, %r7805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7815, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7818, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7824, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7827, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7830, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7833, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7836, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7839, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7842, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7845, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7848, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7851, %r7804, %r7805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r186, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r186, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r186, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r186, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r186, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r186, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r186, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r186, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r186, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r186, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r186, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r186, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r186, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r186, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r186, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r186, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r188, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r188, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r188, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r188, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r188, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r188, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r188, %r7824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7923, %r188, %r7827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7926, %r188, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7929, %r188, %r7833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7932, %r188, %r7836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7935, %r188, %r7839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7938, %r188, %r7842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7941, %r188, %r7845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7944, %r188, %r7848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7947, %r188, %r7851;
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7952, %r7854, %r7950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7955, %r7952, %r7951;
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7960, %r7857, %r7958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7963, %r7960, %r7959;
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7968, %r7860, %r7966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7971, %r7968, %r7967;
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7976, %r7863, %r7974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7979, %r7976, %r7975;
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7984, %r7866, %r7982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7987, %r7984, %r7983;
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7992, %r7869, %r7990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7995, %r7992, %r7991;
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8000, %r7872, %r7998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8003, %r8000, %r7999;
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8008, %r7875, %r8006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8011, %r8008, %r8007;
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8016, %r7878, %r8014;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8019, %r8016, %r8015;
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8024, %r7881, %r8022;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8027, %r8024, %r8023;
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8032, %r7884, %r8030;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8035, %r8032, %r8031;
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8040, %r7887, %r8038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8043, %r8040, %r8039;
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8048, %r7890, %r8046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8051, %r8048, %r8047;
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8056, %r7893, %r8054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8059, %r8056, %r8055;
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8064, %r7896, %r8062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8067, %r8064, %r8063;
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8072, %r7899, %r8070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8075, %r8072, %r8071;
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8080, %r7902, %r8078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8083, %r8080, %r8079;
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8088, %r7905, %r8086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8091, %r8088, %r8087;
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8096, %r7908, %r8094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8099, %r8096, %r8095;
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8104, %r7911, %r8102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8107, %r8104, %r8103;
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8112, %r7914, %r8110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8115, %r8112, %r8111;
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8120, %r7917, %r8118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8123, %r8120, %r8119;
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8128, %r7920, %r8126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8131, %r8128, %r8127;
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8136, %r7923, %r8134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8139, %r8136, %r8135;
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8144, %r7926, %r8142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8147, %r8144, %r8143;
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8152, %r7929, %r8150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8155, %r8152, %r8151;
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8160, %r7932, %r8158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8163, %r8160, %r8159;
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8167, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8168, %r7935, %r8166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8171, %r8168, %r8167;
	// end inline asm
	// begin inline asm
	mov.b32 %r8174, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8175, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8176, %r7938, %r8174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8179, %r8176, %r8175;
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8184, %r7941, %r8182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8187, %r8184, %r8183;
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8191, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8192, %r7944, %r8190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8195, %r8192, %r8191;
	// end inline asm
	// begin inline asm
	mov.b32 %r8198, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8200, %r7947, %r8198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8203, %r8200, %r8199;
	// end inline asm
	// begin inline asm
	mov.b32 %r8209, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8208, %r8209, %r8207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r7955, %r8208;
	// end inline asm
	// begin inline asm
	mov.b32 %r8214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8215, %r8209, %r8214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r7963, %r8215;
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r8209, %r8221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r7971, %r8222;
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r8209, %r8228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r7979, %r8229;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8235, %r8211, %r8225, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8239, %r8218, %r8232, %r4422;
	// end inline asm
	shl.b32 	%r8246, %r8239, 4;
	// begin inline asm
	lop3.b32 %r8243, %r4428, %r8235, %r8246, 202;
	// end inline asm
	xor.b32  	%r16243, %r8243, -2004318072;
	// begin inline asm
	mov.b32 %r8250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8249, %r8250, %r8248;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r7987, %r8249;
	// end inline asm
	// begin inline asm
	mov.b32 %r8255, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8256, %r8250, %r8255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r7995, %r8256;
	// end inline asm
	// begin inline asm
	mov.b32 %r8262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8250, %r8262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r8003, %r8263;
	// end inline asm
	// begin inline asm
	mov.b32 %r8269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8250, %r8269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r8011, %r8270;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8276, %r8252, %r8266, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8280, %r8259, %r8273, %r4422;
	// end inline asm
	shl.b32 	%r8287, %r8280, 4;
	// begin inline asm
	lop3.b32 %r8284, %r4428, %r8276, %r8287, 202;
	// end inline asm
	xor.b32  	%r16244, %r8284, -2004318072;
	// begin inline asm
	mov.b32 %r8291, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8290, %r8291, %r8289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8019, %r8290;
	// end inline asm
	// begin inline asm
	mov.b32 %r8296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8297, %r8291, %r8296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8027, %r8297;
	// end inline asm
	// begin inline asm
	mov.b32 %r8303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8291, %r8303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8035, %r8304;
	// end inline asm
	// begin inline asm
	mov.b32 %r8310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8291, %r8310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8043, %r8311;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8317, %r8293, %r8307, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8321, %r8300, %r8314, %r4422;
	// end inline asm
	shl.b32 	%r8328, %r8321, 4;
	// begin inline asm
	lop3.b32 %r8325, %r4428, %r8317, %r8328, 202;
	// end inline asm
	xor.b32  	%r16245, %r8325, -2004318072;
	// begin inline asm
	mov.b32 %r8332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8331, %r8332, %r8330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8051, %r8331;
	// end inline asm
	// begin inline asm
	mov.b32 %r8337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8338, %r8332, %r8337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8059, %r8338;
	// end inline asm
	// begin inline asm
	mov.b32 %r8344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8332, %r8344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8067, %r8345;
	// end inline asm
	// begin inline asm
	mov.b32 %r8351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8332, %r8351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8075, %r8352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8358, %r8334, %r8348, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8362, %r8341, %r8355, %r4422;
	// end inline asm
	shl.b32 	%r8369, %r8362, 4;
	// begin inline asm
	lop3.b32 %r8366, %r4428, %r8358, %r8369, 202;
	// end inline asm
	xor.b32  	%r16246, %r8366, -2004318072;
	// begin inline asm
	mov.b32 %r8373, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8372, %r8373, %r8371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8083, %r8372;
	// end inline asm
	// begin inline asm
	mov.b32 %r8378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8379, %r8373, %r8378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8091, %r8379;
	// end inline asm
	// begin inline asm
	mov.b32 %r8385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8373, %r8385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8099, %r8386;
	// end inline asm
	// begin inline asm
	mov.b32 %r8392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8373, %r8392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8107, %r8393;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8399, %r8375, %r8389, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8403, %r8382, %r8396, %r4422;
	// end inline asm
	shl.b32 	%r8410, %r8403, 4;
	// begin inline asm
	lop3.b32 %r8407, %r4428, %r8399, %r8410, 202;
	// end inline asm
	xor.b32  	%r16247, %r8407, -2004318072;
	// begin inline asm
	mov.b32 %r8414, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8413, %r8414, %r8412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8115, %r8413;
	// end inline asm
	// begin inline asm
	mov.b32 %r8419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8420, %r8414, %r8419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8123, %r8420;
	// end inline asm
	// begin inline asm
	mov.b32 %r8426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8414, %r8426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8131, %r8427;
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8414, %r8433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8139, %r8434;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8440, %r8416, %r8430, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8444, %r8423, %r8437, %r4422;
	// end inline asm
	shl.b32 	%r8451, %r8444, 4;
	// begin inline asm
	lop3.b32 %r8448, %r4428, %r8440, %r8451, 202;
	// end inline asm
	xor.b32  	%r16248, %r8448, -2004318072;
	// begin inline asm
	mov.b32 %r8455, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8454, %r8455, %r8453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8147, %r8454;
	// end inline asm
	// begin inline asm
	mov.b32 %r8460, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8461, %r8455, %r8460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8155, %r8461;
	// end inline asm
	// begin inline asm
	mov.b32 %r8467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8455, %r8467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8163, %r8468;
	// end inline asm
	// begin inline asm
	mov.b32 %r8474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8455, %r8474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8478, %r8171, %r8475;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8481, %r8457, %r8471, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8485, %r8464, %r8478, %r4422;
	// end inline asm
	shl.b32 	%r8492, %r8485, 4;
	// begin inline asm
	lop3.b32 %r8489, %r4428, %r8481, %r8492, 202;
	// end inline asm
	xor.b32  	%r16249, %r8489, -2004318072;
	// begin inline asm
	mov.b32 %r8496, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8495, %r8496, %r8494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8498, %r8179, %r8495;
	// end inline asm
	// begin inline asm
	mov.b32 %r8501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8502, %r8496, %r8501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8505, %r8187, %r8502;
	// end inline asm
	// begin inline asm
	mov.b32 %r8508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8509, %r8496, %r8508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8512, %r8195, %r8509;
	// end inline asm
	// begin inline asm
	mov.b32 %r8515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8516, %r8496, %r8515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8519, %r8203, %r8516;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8522, %r8498, %r8512, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8526, %r8505, %r8519, %r4422;
	// end inline asm
	shl.b32 	%r8533, %r8526, 4;
	// begin inline asm
	lop3.b32 %r8530, %r4428, %r8522, %r8533, 202;
	// end inline asm
	xor.b32  	%r16250, %r8530, -2004318072;
	st.shared.u32 	[%rd112], %r16243;
	st.shared.u32 	[%rd114], %r16244;
	st.shared.u32 	[%rd116], %r16245;
	st.shared.u32 	[%rd118], %r16246;
	st.shared.u32 	[%rd120], %r16247;
	st.shared.u32 	[%rd122], %r16248;
	st.shared.u32 	[%rd124], %r16249;
	st.shared.u32 	[%rd126], %r16250;
	ld.shared.u32 	%r16390, [%rd96];
	ld.shared.u32 	%r16391, [%rd98];
	ld.shared.u32 	%r16392, [%rd100];
	ld.shared.u32 	%r16393, [%rd102];
	ld.shared.u32 	%r16402, [%rd104];
	ld.shared.u32 	%r16403, [%rd106];
	ld.shared.u32 	%r16404, [%rd108];
	ld.shared.u32 	%r16405, [%rd110];
	// begin inline asm
	mov.b32 %r8539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8550, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8538, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r8536, %r905, %r8538, %r8539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8541, %r8539, %r8540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8544, %r8536, %r8541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8547, %r916, %r8538, %r8550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8552, %r8550, %r8551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8555, %r8547, %r8552;
	// end inline asm
	shr.u32 	%r8560, %r8538, 8;
	// begin inline asm
	lop3.b32 %r8558, %r905, %r8560, %r8539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8563, %r8539, %r8562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8566, %r8558, %r8563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8569, %r916, %r8560, %r8550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8574, %r8550, %r8573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8577, %r8569, %r8574;
	// end inline asm
	// begin inline asm
	mov.b32 %r8585, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8596, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8584, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r8582, %r905, %r8584, %r8585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8587, %r8585, %r8586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8590, %r8582, %r8587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8593, %r916, %r8584, %r8596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8598, %r8596, %r8597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8601, %r8593, %r8598;
	// end inline asm
	shr.u32 	%r8606, %r8584, 8;
	// begin inline asm
	lop3.b32 %r8604, %r905, %r8606, %r8585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8609, %r8585, %r8608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8612, %r8604, %r8609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8615, %r916, %r8606, %r8596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8620, %r8596, %r8619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8623, %r8615, %r8620;
	// end inline asm
	// begin inline asm
	mov.b32 %r8631, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8642, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8630, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r8628, %r905, %r8630, %r8631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8633, %r8631, %r8632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8636, %r8628, %r8633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8639, %r916, %r8630, %r8642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8644, %r8642, %r8643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8647, %r8639, %r8644;
	// end inline asm
	shr.u32 	%r8652, %r8630, 8;
	// begin inline asm
	lop3.b32 %r8650, %r905, %r8652, %r8631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8655, %r8631, %r8654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8658, %r8650, %r8655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8661, %r916, %r8652, %r8642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8666, %r8642, %r8665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8669, %r8661, %r8666;
	// end inline asm
	// begin inline asm
	mov.b32 %r8677, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8688, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8676, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r8674, %r905, %r8676, %r8677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8679, %r8677, %r8678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8682, %r8674, %r8679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8685, %r916, %r8676, %r8688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8690, %r8688, %r8689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8693, %r8685, %r8690;
	// end inline asm
	shr.u32 	%r8698, %r8676, 8;
	// begin inline asm
	lop3.b32 %r8696, %r905, %r8698, %r8677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8701, %r8677, %r8700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8704, %r8696, %r8701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8707, %r916, %r8698, %r8688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8712, %r8688, %r8711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8715, %r8707, %r8712;
	// end inline asm
	// begin inline asm
	mov.b32 %r8723, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8734, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8722, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r8720, %r905, %r8722, %r8723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8725, %r8723, %r8724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8728, %r8720, %r8725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8731, %r916, %r8722, %r8734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8736, %r8734, %r8735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8739, %r8731, %r8736;
	// end inline asm
	shr.u32 	%r8744, %r8722, 8;
	// begin inline asm
	lop3.b32 %r8742, %r905, %r8744, %r8723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8747, %r8723, %r8746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8750, %r8742, %r8747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8753, %r916, %r8744, %r8734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8758, %r8734, %r8757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8761, %r8753, %r8758;
	// end inline asm
	// begin inline asm
	mov.b32 %r8769, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8780, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8768, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r8766, %r905, %r8768, %r8769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8771, %r8769, %r8770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8774, %r8766, %r8771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8777, %r916, %r8768, %r8780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8782, %r8780, %r8781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8785, %r8777, %r8782;
	// end inline asm
	shr.u32 	%r8790, %r8768, 8;
	// begin inline asm
	lop3.b32 %r8788, %r905, %r8790, %r8769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8793, %r8769, %r8792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8796, %r8788, %r8793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8799, %r916, %r8790, %r8780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8804, %r8780, %r8803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8807, %r8799, %r8804;
	// end inline asm
	// begin inline asm
	mov.b32 %r8815, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8826, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8814, %r16404, -2004318072;
	// begin inline asm
	lop3.b32 %r8812, %r905, %r8814, %r8815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8817, %r8815, %r8816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8820, %r8812, %r8817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8823, %r916, %r8814, %r8826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8828, %r8826, %r8827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8831, %r8823, %r8828;
	// end inline asm
	shr.u32 	%r8836, %r8814, 8;
	// begin inline asm
	lop3.b32 %r8834, %r905, %r8836, %r8815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8839, %r8815, %r8838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8842, %r8834, %r8839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8845, %r916, %r8836, %r8826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8850, %r8826, %r8849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8853, %r8845, %r8850;
	// end inline asm
	// begin inline asm
	mov.b32 %r8861, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8872, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8860, %r16405, -2004318072;
	// begin inline asm
	lop3.b32 %r8858, %r905, %r8860, %r8861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8863, %r8861, %r8862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8866, %r8858, %r8863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8869, %r916, %r8860, %r8872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8874, %r8872, %r8873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8877, %r8869, %r8874;
	// end inline asm
	shr.u32 	%r8882, %r8860, 8;
	// begin inline asm
	lop3.b32 %r8880, %r905, %r8882, %r8861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8885, %r8861, %r8884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8888, %r8880, %r8885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8891, %r916, %r8882, %r8872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8896, %r8872, %r8895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8899, %r8891, %r8896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8992, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8994, %r8992, %r8750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8997, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8999, %r8997, %r8761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9002, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9004, %r9002, %r8774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9007, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9009, %r9007, %r8785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9012, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9014, %r9012, %r8796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9017, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9019, %r9017, %r8807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9022, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9024, %r9022, %r8820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9027, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9029, %r9027, %r8831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9032, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9034, %r9032, %r8842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9037, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9039, %r9037, %r8853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9042, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9044, %r9042, %r8866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9047, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9049, %r9047, %r8877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9052, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9054, %r9052, %r8888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9057, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9059, %r9057, %r8899;
	// end inline asm
	// begin inline asm
	mov.b32 %r9067, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9078, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9064, %r905, %r2490, %r9067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9069, %r9067, %r9068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9072, %r9064, %r9069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9075, %r916, %r2490, %r9078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9080, %r9078, %r9079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9083, %r9075, %r9080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9086, %r905, %r2512, %r9067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9091, %r9067, %r9090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9094, %r9086, %r9091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9097, %r916, %r2512, %r9078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9102, %r9078, %r9101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9105, %r9097, %r9102;
	// end inline asm
	// begin inline asm
	mov.b32 %r9113, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9124, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9110, %r905, %r2536, %r9113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9115, %r9113, %r9114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9118, %r9110, %r9115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9121, %r916, %r2536, %r9124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9126, %r9124, %r9125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9129, %r9121, %r9126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9132, %r905, %r2558, %r9113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9137, %r9113, %r9136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9140, %r9132, %r9137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9143, %r916, %r2558, %r9124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9148, %r9124, %r9147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9151, %r9143, %r9148;
	// end inline asm
	// begin inline asm
	mov.b32 %r9159, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9170, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9156, %r905, %r2582, %r9159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9161, %r9159, %r9160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9164, %r9156, %r9161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9167, %r916, %r2582, %r9170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9172, %r9170, %r9171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9175, %r9167, %r9172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9178, %r905, %r2604, %r9159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9183, %r9159, %r9182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9186, %r9178, %r9183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9189, %r916, %r2604, %r9170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9194, %r9170, %r9193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9197, %r9189, %r9194;
	// end inline asm
	// begin inline asm
	mov.b32 %r9205, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9216, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9202, %r905, %r2628, %r9205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9207, %r9205, %r9206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9210, %r9202, %r9207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9213, %r916, %r2628, %r9216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9218, %r9216, %r9217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9221, %r9213, %r9218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9224, %r905, %r2650, %r9205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9229, %r9205, %r9228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9232, %r9224, %r9229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9235, %r916, %r2650, %r9216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9240, %r9216, %r9239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9243, %r9235, %r9240;
	// end inline asm
	// begin inline asm
	mov.b32 %r9251, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9262, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9248, %r905, %r2674, %r9251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9253, %r9251, %r9252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9256, %r9248, %r9253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9259, %r916, %r2674, %r9262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9264, %r9262, %r9263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9267, %r9259, %r9264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9270, %r905, %r2696, %r9251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9275, %r9251, %r9274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9278, %r9270, %r9275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9281, %r916, %r2696, %r9262, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9286, %r9262, %r9285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9289, %r9281, %r9286;
	// end inline asm
	// begin inline asm
	mov.b32 %r9297, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9308, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9294, %r905, %r2720, %r9297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9299, %r9297, %r9298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9302, %r9294, %r9299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9305, %r916, %r2720, %r9308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9310, %r9308, %r9309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9313, %r9305, %r9310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9316, %r905, %r2742, %r9297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9321, %r9297, %r9320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9324, %r9316, %r9321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9327, %r916, %r2742, %r9308, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9332, %r9308, %r9331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9335, %r9327, %r9332;
	// end inline asm
	// begin inline asm
	mov.b32 %r9343, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9354, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9340, %r905, %r2766, %r9343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9345, %r9343, %r9344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9348, %r9340, %r9345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9351, %r916, %r2766, %r9354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9356, %r9354, %r9355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9359, %r9351, %r9356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9362, %r905, %r2788, %r9343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9367, %r9343, %r9366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9370, %r9362, %r9367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9373, %r916, %r2788, %r9354, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9378, %r9354, %r9377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9381, %r9373, %r9378;
	// end inline asm
	// begin inline asm
	mov.b32 %r9389, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9400, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9386, %r905, %r2812, %r9389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9391, %r9389, %r9390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9394, %r9386, %r9391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9397, %r916, %r2812, %r9400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9402, %r9400, %r9401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9405, %r9397, %r9402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9408, %r905, %r2834, %r9389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9413, %r9389, %r9412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9416, %r9408, %r9413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9419, %r916, %r2834, %r9400, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9424, %r9400, %r9423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9427, %r9419, %r9424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r314, %r9072, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r314, %r9083, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r314, %r9094, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r314, %r9105, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r314, %r9118, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r314, %r9129, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r314, %r9140, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r314, %r9151, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r314, %r9164, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r314, %r9175, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r314, %r9186, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r314, %r9197, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r314, %r9210, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r314, %r9221, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r314, %r9232, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r314, %r9243, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r332, %r9256, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r332, %r9267, %r8989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r332, %r9278, %r8994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9506, %r332, %r9289, %r8999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9510, %r332, %r9302, %r9004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9514, %r332, %r9313, %r9009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9518, %r332, %r9324, %r9014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9522, %r332, %r9335, %r9019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9526, %r332, %r9348, %r9024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9530, %r332, %r9359, %r9029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9534, %r332, %r9370, %r9034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9538, %r332, %r9381, %r9039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9542, %r332, %r9394, %r9044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9546, %r332, %r9405, %r9049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9550, %r332, %r9416, %r9054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9554, %r332, %r9427, %r9059;
	// end inline asm
	// begin inline asm
	mov.b32 %r9563, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9574, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9560, %r905, %r906, %r9563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9565, %r9563, %r9564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9568, %r9560, %r9565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9571, %r916, %r906, %r9574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9576, %r9574, %r9575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9579, %r9571, %r9576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9582, %r905, %r928, %r9563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9587, %r9563, %r9586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9590, %r9582, %r9587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9593, %r916, %r928, %r9574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9598, %r9574, %r9597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9601, %r9593, %r9598;
	// end inline asm
	// begin inline asm
	mov.b32 %r9609, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9620, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9606, %r905, %r952, %r9609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9611, %r9609, %r9610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9614, %r9606, %r9611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9617, %r916, %r952, %r9620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9622, %r9620, %r9621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9625, %r9617, %r9622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9628, %r905, %r974, %r9609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9633, %r9609, %r9632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9636, %r9628, %r9633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9639, %r916, %r974, %r9620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9644, %r9620, %r9643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9647, %r9639, %r9644;
	// end inline asm
	// begin inline asm
	mov.b32 %r9655, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9666, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9652, %r905, %r998, %r9655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9657, %r9655, %r9656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9660, %r9652, %r9657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9663, %r916, %r998, %r9666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9668, %r9666, %r9667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9671, %r9663, %r9668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9674, %r905, %r1020, %r9655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9679, %r9655, %r9678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9682, %r9674, %r9679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9685, %r916, %r1020, %r9666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9690, %r9666, %r9689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9693, %r9685, %r9690;
	// end inline asm
	// begin inline asm
	mov.b32 %r9701, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9712, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9698, %r905, %r1044, %r9701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9703, %r9701, %r9702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9706, %r9698, %r9703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9709, %r916, %r1044, %r9712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9714, %r9712, %r9713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9717, %r9709, %r9714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9720, %r905, %r1066, %r9701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9725, %r9701, %r9724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9728, %r9720, %r9725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9731, %r916, %r1066, %r9712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9736, %r9712, %r9735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9739, %r9731, %r9736;
	// end inline asm
	// begin inline asm
	mov.b32 %r9747, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9758, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9744, %r905, %r1090, %r9747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9749, %r9747, %r9748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9752, %r9744, %r9749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9755, %r916, %r1090, %r9758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9760, %r9758, %r9759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9763, %r9755, %r9760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9766, %r905, %r1112, %r9747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9771, %r9747, %r9770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9774, %r9766, %r9771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9777, %r916, %r1112, %r9758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9782, %r9758, %r9781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9785, %r9777, %r9782;
	// end inline asm
	// begin inline asm
	mov.b32 %r9793, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9804, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9790, %r905, %r1136, %r9793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9795, %r9793, %r9794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9798, %r9790, %r9795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9801, %r916, %r1136, %r9804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9806, %r9804, %r9805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9809, %r9801, %r9806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9812, %r905, %r1158, %r9793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9817, %r9793, %r9816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9820, %r9812, %r9817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9823, %r916, %r1158, %r9804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9828, %r9804, %r9827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9831, %r9823, %r9828;
	// end inline asm
	// begin inline asm
	mov.b32 %r9839, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9850, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9836, %r905, %r1182, %r9839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9841, %r9839, %r9840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9844, %r9836, %r9841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9847, %r916, %r1182, %r9850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9852, %r9850, %r9851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9855, %r9847, %r9852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9858, %r905, %r1204, %r9839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9863, %r9839, %r9862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9866, %r9858, %r9863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9869, %r916, %r1204, %r9850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9874, %r9850, %r9873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9877, %r9869, %r9874;
	// end inline asm
	// begin inline asm
	mov.b32 %r9885, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9896, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9882, %r905, %r1228, %r9885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9887, %r9885, %r9886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9890, %r9882, %r9887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9893, %r916, %r1228, %r9896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9898, %r9896, %r9897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9901, %r9893, %r9898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9904, %r905, %r1250, %r9885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9909, %r9885, %r9908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9912, %r9904, %r9909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9915, %r916, %r1250, %r9896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9920, %r9896, %r9919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9923, %r9915, %r9920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9568, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9579, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9590, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9601, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9614, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9625, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9636, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9647, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9660, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9671, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9682, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9693, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9706, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9717, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9728, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9739, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9752, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9763, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9774, %r9502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9785, %r9506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9798, %r9510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10052, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10054, %r10052, %r9809, %r9514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10058, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10060, %r10058, %r9820, %r9518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10064, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10066, %r10064, %r9831, %r9522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10070, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10072, %r10070, %r9844, %r9526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10076, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10078, %r10076, %r9855, %r9530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10082, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10084, %r10082, %r9866, %r9534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10088, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10090, %r10088, %r9877, %r9538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10094, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10096, %r10094, %r9890, %r9542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10100, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10102, %r10100, %r9901, %r9546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10106, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10108, %r10106, %r9912, %r9550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10112, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10114, %r10112, %r9923, %r9554;
	// end inline asm
	// begin inline asm
	mov.b32 %r10123, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10134, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10120, %r905, %r4722, %r10123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10125, %r10123, %r10124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10128, %r10120, %r10125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10131, %r916, %r4722, %r10134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10136, %r10134, %r10135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10139, %r10131, %r10136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10142, %r905, %r4744, %r10123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10147, %r10123, %r10146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10150, %r10142, %r10147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10153, %r916, %r4744, %r10134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10158, %r10134, %r10157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10161, %r10153, %r10158;
	// end inline asm
	// begin inline asm
	mov.b32 %r10169, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10180, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10166, %r905, %r4768, %r10169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10171, %r10169, %r10170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10174, %r10166, %r10171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10177, %r916, %r4768, %r10180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10182, %r10180, %r10181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10185, %r10177, %r10182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10188, %r905, %r4790, %r10169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10193, %r10169, %r10192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10196, %r10188, %r10193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10199, %r916, %r4790, %r10180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10204, %r10180, %r10203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10207, %r10199, %r10204;
	// end inline asm
	// begin inline asm
	mov.b32 %r10215, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10226, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10212, %r905, %r4814, %r10215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10217, %r10215, %r10216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10220, %r10212, %r10217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10223, %r916, %r4814, %r10226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10228, %r10226, %r10227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10231, %r10223, %r10228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10234, %r905, %r4836, %r10215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10239, %r10215, %r10238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10242, %r10234, %r10239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10245, %r916, %r4836, %r10226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10250, %r10226, %r10249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10253, %r10245, %r10250;
	// end inline asm
	// begin inline asm
	mov.b32 %r10261, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10272, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10258, %r905, %r4860, %r10261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10263, %r10261, %r10262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10266, %r10258, %r10263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10269, %r916, %r4860, %r10272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10274, %r10272, %r10273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10277, %r10269, %r10274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10280, %r905, %r4882, %r10261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10285, %r10261, %r10284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10288, %r10280, %r10285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10291, %r916, %r4882, %r10272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10296, %r10272, %r10295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10299, %r10291, %r10296;
	// end inline asm
	// begin inline asm
	mov.b32 %r10307, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10318, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10304, %r905, %r4906, %r10307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10309, %r10307, %r10308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10312, %r10304, %r10309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10315, %r916, %r4906, %r10318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10320, %r10318, %r10319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10323, %r10315, %r10320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10326, %r905, %r4928, %r10307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10331, %r10307, %r10330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10334, %r10326, %r10331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10337, %r916, %r4928, %r10318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10342, %r10318, %r10341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10345, %r10337, %r10342;
	// end inline asm
	// begin inline asm
	mov.b32 %r10353, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10364, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10350, %r905, %r4952, %r10353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10355, %r10353, %r10354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10358, %r10350, %r10355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10361, %r916, %r4952, %r10364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10366, %r10364, %r10365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10369, %r10361, %r10366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10372, %r905, %r4974, %r10353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10377, %r10353, %r10376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10380, %r10372, %r10377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10383, %r916, %r4974, %r10364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10388, %r10364, %r10387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10391, %r10383, %r10388;
	// end inline asm
	// begin inline asm
	mov.b32 %r10399, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10410, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10396, %r905, %r4998, %r10399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10401, %r10399, %r10400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10404, %r10396, %r10401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10407, %r916, %r4998, %r10410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10412, %r10410, %r10411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10415, %r10407, %r10412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10418, %r905, %r5020, %r10399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10423, %r10399, %r10422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10426, %r10418, %r10423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10429, %r916, %r5020, %r10410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10434, %r10410, %r10433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10437, %r10429, %r10434;
	// end inline asm
	// begin inline asm
	mov.b32 %r10445, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10456, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10442, %r905, %r5044, %r10445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10447, %r10445, %r10446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10450, %r10442, %r10447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10453, %r916, %r5044, %r10456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10458, %r10456, %r10457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10461, %r10453, %r10458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10464, %r905, %r5066, %r10445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10469, %r10445, %r10468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10472, %r10464, %r10469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10475, %r916, %r5066, %r10456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10480, %r10456, %r10479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10483, %r10475, %r10480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r386, %r10128, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r386, %r10139, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r386, %r10150, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r386, %r10161, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r386, %r10174, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r386, %r10185, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r386, %r10196, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r386, %r10207, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r386, %r10220, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r386, %r10231, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r386, %r10242, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r386, %r10253, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r386, %r10266, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r386, %r10277, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r386, %r10288, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r386, %r10299, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r404, %r10312, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r404, %r10323, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r404, %r10334, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r404, %r10345, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10711, %r404, %r10358, %r10048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r404, %r10369, %r10054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r404, %r10380, %r10060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r404, %r10391, %r10066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r404, %r10404, %r10072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r404, %r10415, %r10078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r404, %r10426, %r10084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r404, %r10437, %r10090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10747, %r404, %r10450, %r10096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r404, %r10461, %r10102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10756, %r404, %r10472, %r10108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10753, %r404, %r10483, %r10114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10614, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10616, %r10614, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r468, %r10621, %r10616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10623, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10625, %r10623, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r468, %r10630, %r10625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10632, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10634, %r10632, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r468, %r10639, %r10634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10641, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10643, %r10641, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r468, %r10648, %r10643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10650, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10652, %r10650, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r468, %r10657, %r10652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10659, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10661, %r10659, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r468, %r10666, %r10661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10668, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10670, %r10668, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r468, %r10675, %r10670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10677, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r10677, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r468, %r10684, %r10679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10686, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10688, %r10686, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r471, %r10693, %r10688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10695, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10697, %r10695, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r471, %r10702, %r10697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10704, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10706, %r10704, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r471, %r10711, %r10706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10713, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10715, %r10713, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r471, %r10720, %r10715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10722, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r10722, %r10726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r471, %r10729, %r10724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10731, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10733, %r10731, %r10735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r471, %r10738, %r10733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10740, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r10740, %r10744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r471, %r10747, %r10742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10749, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10751, %r10749, %r10753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10754, %r471, %r10756, %r10751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10758, %r474, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10761, %r468, %r10618, %r10758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10765, %r474, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10768, %r468, %r10627, %r10765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10772, %r474, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10775, %r468, %r10636, %r10772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10779, %r474, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10782, %r468, %r10645, %r10779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10786, %r474, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10789, %r468, %r10654, %r10786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10793, %r474, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10796, %r468, %r10663, %r10793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10800, %r474, %r10675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10803, %r468, %r10672, %r10800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10807, %r474, %r10684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10810, %r468, %r10681, %r10807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10814, %r477, %r10693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10817, %r471, %r10690, %r10814;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10821, %r477, %r10702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10824, %r471, %r10699, %r10821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10828, %r477, %r10711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10831, %r471, %r10708, %r10828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10835, %r477, %r10720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10838, %r471, %r10717, %r10835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10842, %r477, %r10729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10845, %r471, %r10726, %r10842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10849, %r477, %r10738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10852, %r471, %r10735, %r10849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10856, %r477, %r10747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10859, %r471, %r10744, %r10856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10863, %r477, %r10756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10866, %r471, %r10753, %r10863;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11037, %r11034}, {%r523, %r529, %r526, %r532}, {%r10619, %r10761}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11046, %r11043}, {%r523, %r529, %r526, %r532}, {%r10628, %r10768}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11055, %r11052}, {%r523, %r529, %r526, %r532}, {%r10637, %r10775}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11064, %r11061}, {%r523, %r529, %r526, %r532}, {%r10646, %r10782}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11073, %r11070}, {%r523, %r529, %r526, %r532}, {%r10655, %r10789}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11082, %r11079}, {%r523, %r529, %r526, %r532}, {%r10664, %r10796}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11091, %r11088}, {%r523, %r529, %r526, %r532}, {%r10673, %r10803}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11100, %r11097}, {%r523, %r529, %r526, %r532}, {%r10682, %r10810}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11109, %r11106}, {%r523, %r529, %r526, %r532}, {%r10691, %r10817}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11118, %r11115}, {%r523, %r529, %r526, %r532}, {%r10700, %r10824}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11127, %r11124}, {%r523, %r529, %r526, %r532}, {%r10709, %r10831}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11136, %r11133}, {%r523, %r529, %r526, %r532}, {%r10718, %r10838}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11145, %r11142}, {%r523, %r529, %r526, %r532}, {%r10727, %r10845}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11154, %r11151}, {%r523, %r529, %r526, %r532}, {%r10736, %r10852}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11163, %r11160}, {%r523, %r529, %r526, %r532}, {%r10745, %r10859}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11172, %r11169}, {%r523, %r529, %r526, %r532}, {%r10754, %r10866}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11030, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11032, %r11030, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11035, %r573, %r11037, %r11032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11039, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11041, %r11039, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11044, %r573, %r11046, %r11041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11048, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11050, %r11048, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11053, %r573, %r11055, %r11050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11057, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11059, %r11057, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11062, %r573, %r11064, %r11059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11066, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11068, %r11066, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11071, %r573, %r11073, %r11068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11075, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11077, %r11075, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11080, %r573, %r11082, %r11077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11084, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11086, %r11084, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11089, %r573, %r11091, %r11086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11093, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r11093, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r573, %r11100, %r11095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11102, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11104, %r11102, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11107, %r573, %r11109, %r11104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11111, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11113, %r11111, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11116, %r573, %r11118, %r11113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11120, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11122, %r11120, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11125, %r573, %r11127, %r11122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11129, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11131, %r11129, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11134, %r573, %r11136, %r11131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11138, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r11138, %r11142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r573, %r11145, %r11140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11147, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11149, %r11147, %r11151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11152, %r573, %r11154, %r11149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11156, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r11156, %r11160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r573, %r11163, %r11158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11165, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11167, %r11165, %r11169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11170, %r573, %r11172, %r11167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11174, %r576, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11177, %r573, %r11034, %r11174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11181, %r576, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11184, %r573, %r11043, %r11181;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11188, %r576, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11191, %r573, %r11052, %r11188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11195, %r576, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11198, %r573, %r11061, %r11195;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11202, %r576, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11205, %r573, %r11070, %r11202;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11209, %r576, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11212, %r573, %r11079, %r11209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11216, %r576, %r11091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11219, %r573, %r11088, %r11216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11223, %r576, %r11100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11226, %r573, %r11097, %r11223;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11230, %r576, %r11109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11233, %r573, %r11106, %r11230;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11237, %r576, %r11118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11240, %r573, %r11115, %r11237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11244, %r576, %r11127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11247, %r573, %r11124, %r11244;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11251, %r576, %r11136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11254, %r573, %r11133, %r11251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11258, %r576, %r11145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11261, %r573, %r11142, %r11258;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11265, %r576, %r11154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11268, %r573, %r11151, %r11265;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11272, %r576, %r11163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11275, %r573, %r11160, %r11272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11279, %r576, %r11172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11282, %r573, %r11169, %r11279;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11575, %r11578}, {%r611, %r617, %r614, %r620}, {%r11035, %r11177}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11581, %r11584}, {%r611, %r617, %r614, %r620}, {%r11044, %r11184}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11587, %r11590}, {%r611, %r617, %r614, %r620}, {%r11053, %r11191}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11593, %r11596}, {%r611, %r617, %r614, %r620}, {%r11062, %r11198}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11599, %r11602}, {%r611, %r617, %r614, %r620}, {%r11071, %r11205}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11605, %r11608}, {%r611, %r617, %r614, %r620}, {%r11080, %r11212}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11611, %r11614}, {%r611, %r617, %r614, %r620}, {%r11089, %r11219}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11617, %r11620}, {%r611, %r617, %r614, %r620}, {%r11098, %r11226}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r611, %r617, %r614, %r620}, {%r11107, %r11233}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11582, %r11585}, {%r611, %r617, %r614, %r620}, {%r11116, %r11240}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11588, %r11591}, {%r611, %r617, %r614, %r620}, {%r11125, %r11247}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11594, %r11597}, {%r611, %r617, %r614, %r620}, {%r11134, %r11254}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11600, %r11603}, {%r611, %r617, %r614, %r620}, {%r11143, %r11261}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11606, %r11609}, {%r611, %r617, %r614, %r620}, {%r11152, %r11268}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11612, %r11615}, {%r611, %r617, %r614, %r620}, {%r11161, %r11275}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11618, %r11621}, {%r611, %r617, %r614, %r620}, {%r11170, %r11282}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11583, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11586, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11592, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11595, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11598, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11601, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11604, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11607, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11610, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11613, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11616, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11619, %r11620, %r11621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11631, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11634, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11640, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11643, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11646, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11649, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11652, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11655, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11658, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11661, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11664, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11667, %r11620, %r11621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r186, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r186, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r186, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r186, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r186, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r186, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r186, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r186, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r186, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r186, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r186, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r186, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r186, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r186, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r186, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r186, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r188, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r188, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r188, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r188, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r188, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r188, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r188, %r11640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11739, %r188, %r11643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11742, %r188, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11745, %r188, %r11649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11748, %r188, %r11652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11751, %r188, %r11655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11754, %r188, %r11658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11757, %r188, %r11661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11760, %r188, %r11664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11763, %r188, %r11667;
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11768, %r11670, %r11766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11771, %r11768, %r11767;
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11776, %r11673, %r11774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11779, %r11776, %r11775;
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11784, %r11676, %r11782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11787, %r11784, %r11783;
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11792, %r11679, %r11790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11795, %r11792, %r11791;
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11800, %r11682, %r11798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11803, %r11800, %r11799;
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11808, %r11685, %r11806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11811, %r11808, %r11807;
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11816, %r11688, %r11814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11819, %r11816, %r11815;
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11824, %r11691, %r11822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11827, %r11824, %r11823;
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11832, %r11694, %r11830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11835, %r11832, %r11831;
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11840, %r11697, %r11838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11843, %r11840, %r11839;
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11848, %r11700, %r11846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11851, %r11848, %r11847;
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11856, %r11703, %r11854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11859, %r11856, %r11855;
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11864, %r11706, %r11862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11867, %r11864, %r11863;
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11872, %r11709, %r11870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11875, %r11872, %r11871;
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11880, %r11712, %r11878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11883, %r11880, %r11879;
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11888, %r11715, %r11886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11891, %r11888, %r11887;
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11896, %r11718, %r11894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11899, %r11896, %r11895;
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11904, %r11721, %r11902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11907, %r11904, %r11903;
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11912, %r11724, %r11910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11915, %r11912, %r11911;
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11920, %r11727, %r11918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11923, %r11920, %r11919;
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11928, %r11730, %r11926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11931, %r11928, %r11927;
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11936, %r11733, %r11934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11939, %r11936, %r11935;
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11944, %r11736, %r11942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11947, %r11944, %r11943;
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11952, %r11739, %r11950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11955, %r11952, %r11951;
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11960, %r11742, %r11958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11963, %r11960, %r11959;
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11968, %r11745, %r11966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11971, %r11968, %r11967;
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11976, %r11748, %r11974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11979, %r11976, %r11975;
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11983, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11984, %r11751, %r11982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11987, %r11984, %r11983;
	// end inline asm
	// begin inline asm
	mov.b32 %r11990, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11991, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11992, %r11754, %r11990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11995, %r11992, %r11991;
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12000, %r11757, %r11998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12003, %r12000, %r11999;
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12007, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12008, %r11760, %r12006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12011, %r12008, %r12007;
	// end inline asm
	// begin inline asm
	mov.b32 %r12014, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12016, %r11763, %r12014;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12019, %r12016, %r12015;
	// end inline asm
	// begin inline asm
	mov.b32 %r12025, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12024, %r12025, %r12023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r11771, %r12024;
	// end inline asm
	// begin inline asm
	mov.b32 %r12030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12031, %r12025, %r12030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r11779, %r12031;
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r12025, %r12037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r11787, %r12038;
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r12025, %r12044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r11795, %r12045;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12051, %r12027, %r12041, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12055, %r12034, %r12048, %r4422;
	// end inline asm
	shl.b32 	%r12062, %r12055, 4;
	// begin inline asm
	lop3.b32 %r12059, %r4428, %r12051, %r12062, 202;
	// end inline asm
	xor.b32  	%r16251, %r12059, -2004318072;
	// begin inline asm
	mov.b32 %r12066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12065, %r12066, %r12064;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r11803, %r12065;
	// end inline asm
	// begin inline asm
	mov.b32 %r12071, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12072, %r12066, %r12071;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r11811, %r12072;
	// end inline asm
	// begin inline asm
	mov.b32 %r12078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r12066, %r12078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r11819, %r12079;
	// end inline asm
	// begin inline asm
	mov.b32 %r12085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r12066, %r12085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r11827, %r12086;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12092, %r12068, %r12082, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12096, %r12075, %r12089, %r4422;
	// end inline asm
	shl.b32 	%r12103, %r12096, 4;
	// begin inline asm
	lop3.b32 %r12100, %r4428, %r12092, %r12103, 202;
	// end inline asm
	xor.b32  	%r16252, %r12100, -2004318072;
	// begin inline asm
	mov.b32 %r12107, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12106, %r12107, %r12105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r11835, %r12106;
	// end inline asm
	// begin inline asm
	mov.b32 %r12112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12113, %r12107, %r12112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r11843, %r12113;
	// end inline asm
	// begin inline asm
	mov.b32 %r12119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r12107, %r12119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r11851, %r12120;
	// end inline asm
	// begin inline asm
	mov.b32 %r12126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r12107, %r12126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r11859, %r12127;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12133, %r12109, %r12123, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12137, %r12116, %r12130, %r4422;
	// end inline asm
	shl.b32 	%r12144, %r12137, 4;
	// begin inline asm
	lop3.b32 %r12141, %r4428, %r12133, %r12144, 202;
	// end inline asm
	xor.b32  	%r16253, %r12141, -2004318072;
	// begin inline asm
	mov.b32 %r12148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12147, %r12148, %r12146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r11867, %r12147;
	// end inline asm
	// begin inline asm
	mov.b32 %r12153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12154, %r12148, %r12153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r11875, %r12154;
	// end inline asm
	// begin inline asm
	mov.b32 %r12160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r12148, %r12160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r11883, %r12161;
	// end inline asm
	// begin inline asm
	mov.b32 %r12167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r12148, %r12167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r11891, %r12168;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12174, %r12150, %r12164, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12178, %r12157, %r12171, %r4422;
	// end inline asm
	shl.b32 	%r12185, %r12178, 4;
	// begin inline asm
	lop3.b32 %r12182, %r4428, %r12174, %r12185, 202;
	// end inline asm
	xor.b32  	%r16254, %r12182, -2004318072;
	// begin inline asm
	mov.b32 %r12189, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12188, %r12189, %r12187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r11899, %r12188;
	// end inline asm
	// begin inline asm
	mov.b32 %r12194, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12195, %r12189, %r12194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r11907, %r12195;
	// end inline asm
	// begin inline asm
	mov.b32 %r12201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r12189, %r12201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r11915, %r12202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r12189, %r12208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r11923, %r12209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12215, %r12191, %r12205, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12219, %r12198, %r12212, %r4422;
	// end inline asm
	shl.b32 	%r12226, %r12219, 4;
	// begin inline asm
	lop3.b32 %r12223, %r4428, %r12215, %r12226, 202;
	// end inline asm
	xor.b32  	%r16255, %r12223, -2004318072;
	// begin inline asm
	mov.b32 %r12230, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12229, %r12230, %r12228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r11931, %r12229;
	// end inline asm
	// begin inline asm
	mov.b32 %r12235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12236, %r12230, %r12235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r11939, %r12236;
	// end inline asm
	// begin inline asm
	mov.b32 %r12242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r12230, %r12242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r11947, %r12243;
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12230, %r12249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r11955, %r12250;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12256, %r12232, %r12246, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12260, %r12239, %r12253, %r4422;
	// end inline asm
	shl.b32 	%r12267, %r12260, 4;
	// begin inline asm
	lop3.b32 %r12264, %r4428, %r12256, %r12267, 202;
	// end inline asm
	xor.b32  	%r16256, %r12264, -2004318072;
	// begin inline asm
	mov.b32 %r12271, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12270, %r12271, %r12269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r11963, %r12270;
	// end inline asm
	// begin inline asm
	mov.b32 %r12276, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12277, %r12271, %r12276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r11971, %r12277;
	// end inline asm
	// begin inline asm
	mov.b32 %r12283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r12271, %r12283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r11979, %r12284;
	// end inline asm
	// begin inline asm
	mov.b32 %r12290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r12271, %r12290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12294, %r11987, %r12291;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12297, %r12273, %r12287, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12301, %r12280, %r12294, %r4422;
	// end inline asm
	shl.b32 	%r12308, %r12301, 4;
	// begin inline asm
	lop3.b32 %r12305, %r4428, %r12297, %r12308, 202;
	// end inline asm
	xor.b32  	%r16257, %r12305, -2004318072;
	// begin inline asm
	mov.b32 %r12312, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12311, %r12312, %r12310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12314, %r11995, %r12311;
	// end inline asm
	// begin inline asm
	mov.b32 %r12317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12318, %r12312, %r12317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12321, %r12003, %r12318;
	// end inline asm
	// begin inline asm
	mov.b32 %r12324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12325, %r12312, %r12324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12328, %r12011, %r12325;
	// end inline asm
	// begin inline asm
	mov.b32 %r12331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12332, %r12312, %r12331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12335, %r12019, %r12332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12338, %r12314, %r12328, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12342, %r12321, %r12335, %r4422;
	// end inline asm
	shl.b32 	%r12349, %r12342, 4;
	// begin inline asm
	lop3.b32 %r12346, %r4428, %r12338, %r12349, 202;
	// end inline asm
	xor.b32  	%r16258, %r12346, -2004318072;
	st.shared.u32 	[%rd112], %r16251;
	st.shared.u32 	[%rd114], %r16252;
	st.shared.u32 	[%rd116], %r16253;
	st.shared.u32 	[%rd118], %r16254;
	st.shared.u32 	[%rd120], %r16255;
	st.shared.u32 	[%rd122], %r16256;
	st.shared.u32 	[%rd124], %r16257;
	st.shared.u32 	[%rd126], %r16258;
	ld.shared.u32 	%r16394, [%rd96];
	ld.shared.u32 	%r16395, [%rd98];
	ld.shared.u32 	%r16396, [%rd100];
	ld.shared.u32 	%r16397, [%rd102];
	ld.shared.u32 	%r16406, [%rd104];
	ld.shared.u32 	%r16407, [%rd106];
	ld.shared.u32 	%r16408, [%rd108];
	ld.shared.u32 	%r16409, [%rd110];
	// begin inline asm
	mov.b32 %r12355, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12366, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12354, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r12352, %r905, %r12354, %r12355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12357, %r12355, %r12356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12360, %r12352, %r12357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12363, %r916, %r12354, %r12366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12368, %r12366, %r12367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12371, %r12363, %r12368;
	// end inline asm
	shr.u32 	%r12376, %r12354, 8;
	// begin inline asm
	lop3.b32 %r12374, %r905, %r12376, %r12355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12379, %r12355, %r12378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12382, %r12374, %r12379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12385, %r916, %r12376, %r12366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12390, %r12366, %r12389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12393, %r12385, %r12390;
	// end inline asm
	// begin inline asm
	mov.b32 %r12401, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12412, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12400, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r12398, %r905, %r12400, %r12401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12403, %r12401, %r12402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12406, %r12398, %r12403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12409, %r916, %r12400, %r12412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12414, %r12412, %r12413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12417, %r12409, %r12414;
	// end inline asm
	shr.u32 	%r12422, %r12400, 8;
	// begin inline asm
	lop3.b32 %r12420, %r905, %r12422, %r12401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12425, %r12401, %r12424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12428, %r12420, %r12425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12431, %r916, %r12422, %r12412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12436, %r12412, %r12435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12439, %r12431, %r12436;
	// end inline asm
	// begin inline asm
	mov.b32 %r12447, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12458, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12446, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r12444, %r905, %r12446, %r12447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12449, %r12447, %r12448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12452, %r12444, %r12449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12455, %r916, %r12446, %r12458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12460, %r12458, %r12459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12463, %r12455, %r12460;
	// end inline asm
	shr.u32 	%r12468, %r12446, 8;
	// begin inline asm
	lop3.b32 %r12466, %r905, %r12468, %r12447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12471, %r12447, %r12470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12474, %r12466, %r12471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12477, %r916, %r12468, %r12458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12482, %r12458, %r12481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12485, %r12477, %r12482;
	// end inline asm
	// begin inline asm
	mov.b32 %r12493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12504, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12492, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r12490, %r905, %r12492, %r12493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12495, %r12493, %r12494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12498, %r12490, %r12495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12501, %r916, %r12492, %r12504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12506, %r12504, %r12505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12509, %r12501, %r12506;
	// end inline asm
	shr.u32 	%r12514, %r12492, 8;
	// begin inline asm
	lop3.b32 %r12512, %r905, %r12514, %r12493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12517, %r12493, %r12516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12520, %r12512, %r12517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12523, %r916, %r12514, %r12504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12528, %r12504, %r12527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12531, %r12523, %r12528;
	// end inline asm
	// begin inline asm
	mov.b32 %r12539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12550, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12538, %r16406, -2004318072;
	// begin inline asm
	lop3.b32 %r12536, %r905, %r12538, %r12539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12541, %r12539, %r12540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12544, %r12536, %r12541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12547, %r916, %r12538, %r12550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12552, %r12550, %r12551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12555, %r12547, %r12552;
	// end inline asm
	shr.u32 	%r12560, %r12538, 8;
	// begin inline asm
	lop3.b32 %r12558, %r905, %r12560, %r12539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12563, %r12539, %r12562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12566, %r12558, %r12563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12569, %r916, %r12560, %r12550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12574, %r12550, %r12573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12577, %r12569, %r12574;
	// end inline asm
	// begin inline asm
	mov.b32 %r12585, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12596, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12584, %r16407, -2004318072;
	// begin inline asm
	lop3.b32 %r12582, %r905, %r12584, %r12585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12587, %r12585, %r12586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12590, %r12582, %r12587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12593, %r916, %r12584, %r12596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12598, %r12596, %r12597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12601, %r12593, %r12598;
	// end inline asm
	shr.u32 	%r12606, %r12584, 8;
	// begin inline asm
	lop3.b32 %r12604, %r905, %r12606, %r12585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12609, %r12585, %r12608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12612, %r12604, %r12609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12615, %r916, %r12606, %r12596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12620, %r12596, %r12619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12623, %r12615, %r12620;
	// end inline asm
	// begin inline asm
	mov.b32 %r12631, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12642, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12630, %r16408, -2004318072;
	// begin inline asm
	lop3.b32 %r12628, %r905, %r12630, %r12631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12633, %r12631, %r12632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12636, %r12628, %r12633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12639, %r916, %r12630, %r12642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12644, %r12642, %r12643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12647, %r12639, %r12644;
	// end inline asm
	shr.u32 	%r12652, %r12630, 8;
	// begin inline asm
	lop3.b32 %r12650, %r905, %r12652, %r12631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12655, %r12631, %r12654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12658, %r12650, %r12655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12661, %r916, %r12652, %r12642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12666, %r12642, %r12665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12669, %r12661, %r12666;
	// end inline asm
	// begin inline asm
	mov.b32 %r12677, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12688, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12676, %r16409, -2004318072;
	// begin inline asm
	lop3.b32 %r12674, %r905, %r12676, %r12677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12679, %r12677, %r12678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12682, %r12674, %r12679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12685, %r916, %r12676, %r12688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12690, %r12688, %r12689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12693, %r12685, %r12690;
	// end inline asm
	shr.u32 	%r12698, %r12676, 8;
	// begin inline asm
	lop3.b32 %r12696, %r905, %r12698, %r12677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12701, %r12677, %r12700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12704, %r12696, %r12701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12707, %r916, %r12698, %r12688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12712, %r12688, %r12711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12715, %r12707, %r12712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12808, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12810, %r12808, %r12566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12813, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12815, %r12813, %r12577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12818, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12820, %r12818, %r12590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12823, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12825, %r12823, %r12601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12828, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12830, %r12828, %r12612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12833, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12835, %r12833, %r12623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12838, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12840, %r12838, %r12636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12843, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12845, %r12843, %r12647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12848, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12850, %r12848, %r12658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12853, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12855, %r12853, %r12669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12858, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12860, %r12858, %r12682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12863, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12865, %r12863, %r12693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12868, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12870, %r12868, %r12704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12873, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12875, %r12873, %r12715;
	// end inline asm
	// begin inline asm
	mov.b32 %r12883, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12894, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12880, %r905, %r906, %r12883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12885, %r12883, %r12884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12888, %r12880, %r12885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12891, %r916, %r906, %r12894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12896, %r12894, %r12895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12899, %r12891, %r12896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12902, %r905, %r928, %r12883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12907, %r12883, %r12906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12910, %r12902, %r12907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12913, %r916, %r928, %r12894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12918, %r12894, %r12917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12921, %r12913, %r12918;
	// end inline asm
	// begin inline asm
	mov.b32 %r12929, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12940, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12926, %r905, %r952, %r12929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12931, %r12929, %r12930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12934, %r12926, %r12931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12937, %r916, %r952, %r12940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12942, %r12940, %r12941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12945, %r12937, %r12942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12948, %r905, %r974, %r12929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12953, %r12929, %r12952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12956, %r12948, %r12953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12959, %r916, %r974, %r12940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12964, %r12940, %r12963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12967, %r12959, %r12964;
	// end inline asm
	// begin inline asm
	mov.b32 %r12975, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12986, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12972, %r905, %r998, %r12975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12977, %r12975, %r12976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12980, %r12972, %r12977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12983, %r916, %r998, %r12986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12988, %r12986, %r12987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12991, %r12983, %r12988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12994, %r905, %r1020, %r12975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12999, %r12975, %r12998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13002, %r12994, %r12999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13005, %r916, %r1020, %r12986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13010, %r12986, %r13009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13013, %r13005, %r13010;
	// end inline asm
	// begin inline asm
	mov.b32 %r13021, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13032, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13018, %r905, %r1044, %r13021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13023, %r13021, %r13022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13026, %r13018, %r13023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13029, %r916, %r1044, %r13032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13034, %r13032, %r13033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13037, %r13029, %r13034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13040, %r905, %r1066, %r13021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13045, %r13021, %r13044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13048, %r13040, %r13045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13051, %r916, %r1066, %r13032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13056, %r13032, %r13055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13059, %r13051, %r13056;
	// end inline asm
	// begin inline asm
	mov.b32 %r13067, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13078, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13064, %r905, %r1090, %r13067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13069, %r13067, %r13068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13072, %r13064, %r13069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13075, %r916, %r1090, %r13078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13080, %r13078, %r13079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13083, %r13075, %r13080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13086, %r905, %r1112, %r13067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13091, %r13067, %r13090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13094, %r13086, %r13091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13097, %r916, %r1112, %r13078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13102, %r13078, %r13101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13105, %r13097, %r13102;
	// end inline asm
	// begin inline asm
	mov.b32 %r13113, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13124, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13110, %r905, %r1136, %r13113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13115, %r13113, %r13114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13118, %r13110, %r13115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13121, %r916, %r1136, %r13124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13126, %r13124, %r13125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13129, %r13121, %r13126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13132, %r905, %r1158, %r13113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13137, %r13113, %r13136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13140, %r13132, %r13137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13143, %r916, %r1158, %r13124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13148, %r13124, %r13147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13151, %r13143, %r13148;
	// end inline asm
	// begin inline asm
	mov.b32 %r13159, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13170, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13156, %r905, %r1182, %r13159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13161, %r13159, %r13160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13164, %r13156, %r13161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13167, %r916, %r1182, %r13170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13172, %r13170, %r13171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13175, %r13167, %r13172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13178, %r905, %r1204, %r13159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13183, %r13159, %r13182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13186, %r13178, %r13183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13189, %r916, %r1204, %r13170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13194, %r13170, %r13193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13197, %r13189, %r13194;
	// end inline asm
	// begin inline asm
	mov.b32 %r13205, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13216, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13202, %r905, %r1228, %r13205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13207, %r13205, %r13206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13210, %r13202, %r13207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13213, %r916, %r1228, %r13216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13218, %r13216, %r13217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13221, %r13213, %r13218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13224, %r905, %r1250, %r13205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13229, %r13205, %r13228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13232, %r13224, %r13229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13235, %r916, %r1250, %r13216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13240, %r13216, %r13239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13243, %r13235, %r13240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r314, %r12888, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r314, %r12899, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r314, %r12910, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r314, %r12921, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r314, %r12934, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r314, %r12945, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r314, %r12956, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r314, %r12967, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r314, %r12980, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r314, %r12991, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r314, %r13002, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r314, %r13013, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r314, %r13026, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r314, %r13037, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r314, %r13048, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r314, %r13059, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r332, %r13072, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r332, %r13083, %r12805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r332, %r13094, %r12810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13322, %r332, %r13105, %r12815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13326, %r332, %r13118, %r12820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13330, %r332, %r13129, %r12825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13334, %r332, %r13140, %r12830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13338, %r332, %r13151, %r12835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13342, %r332, %r13164, %r12840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13346, %r332, %r13175, %r12845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13350, %r332, %r13186, %r12850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13354, %r332, %r13197, %r12855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13358, %r332, %r13210, %r12860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13362, %r332, %r13221, %r12865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13366, %r332, %r13232, %r12870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13370, %r332, %r13243, %r12875;
	// end inline asm
	// begin inline asm
	mov.b32 %r13379, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13390, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13376, %r905, %r4722, %r13379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13381, %r13379, %r13380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13384, %r13376, %r13381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13387, %r916, %r4722, %r13390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13392, %r13390, %r13391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13395, %r13387, %r13392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13398, %r905, %r4744, %r13379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13403, %r13379, %r13402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13406, %r13398, %r13403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13409, %r916, %r4744, %r13390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13414, %r13390, %r13413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13417, %r13409, %r13414;
	// end inline asm
	// begin inline asm
	mov.b32 %r13425, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13436, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13422, %r905, %r4768, %r13425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13427, %r13425, %r13426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13430, %r13422, %r13427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13433, %r916, %r4768, %r13436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13438, %r13436, %r13437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13441, %r13433, %r13438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13444, %r905, %r4790, %r13425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13449, %r13425, %r13448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13452, %r13444, %r13449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13455, %r916, %r4790, %r13436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13460, %r13436, %r13459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13463, %r13455, %r13460;
	// end inline asm
	// begin inline asm
	mov.b32 %r13471, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13482, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13468, %r905, %r4814, %r13471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13473, %r13471, %r13472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13476, %r13468, %r13473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13479, %r916, %r4814, %r13482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13484, %r13482, %r13483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13487, %r13479, %r13484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13490, %r905, %r4836, %r13471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13495, %r13471, %r13494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13498, %r13490, %r13495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13501, %r916, %r4836, %r13482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13506, %r13482, %r13505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13509, %r13501, %r13506;
	// end inline asm
	// begin inline asm
	mov.b32 %r13517, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13528, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13514, %r905, %r4860, %r13517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13519, %r13517, %r13518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13522, %r13514, %r13519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13525, %r916, %r4860, %r13528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13530, %r13528, %r13529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13533, %r13525, %r13530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13536, %r905, %r4882, %r13517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13541, %r13517, %r13540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13544, %r13536, %r13541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13547, %r916, %r4882, %r13528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13552, %r13528, %r13551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13555, %r13547, %r13552;
	// end inline asm
	// begin inline asm
	mov.b32 %r13563, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13574, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13560, %r905, %r4906, %r13563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13565, %r13563, %r13564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13568, %r13560, %r13565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13571, %r916, %r4906, %r13574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13576, %r13574, %r13575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13579, %r13571, %r13576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13582, %r905, %r4928, %r13563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13587, %r13563, %r13586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13590, %r13582, %r13587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13593, %r916, %r4928, %r13574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13598, %r13574, %r13597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13601, %r13593, %r13598;
	// end inline asm
	// begin inline asm
	mov.b32 %r13609, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13620, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13606, %r905, %r4952, %r13609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13611, %r13609, %r13610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13614, %r13606, %r13611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13617, %r916, %r4952, %r13620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13622, %r13620, %r13621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13625, %r13617, %r13622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13628, %r905, %r4974, %r13609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13633, %r13609, %r13632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13636, %r13628, %r13633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13639, %r916, %r4974, %r13620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13644, %r13620, %r13643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13647, %r13639, %r13644;
	// end inline asm
	// begin inline asm
	mov.b32 %r13655, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13666, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13652, %r905, %r4998, %r13655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13657, %r13655, %r13656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13660, %r13652, %r13657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13663, %r916, %r4998, %r13666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13668, %r13666, %r13667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13671, %r13663, %r13668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13674, %r905, %r5020, %r13655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13679, %r13655, %r13678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13682, %r13674, %r13679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13685, %r916, %r5020, %r13666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13690, %r13666, %r13689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13693, %r13685, %r13690;
	// end inline asm
	// begin inline asm
	mov.b32 %r13701, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13712, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13698, %r905, %r5044, %r13701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13703, %r13701, %r13702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13706, %r13698, %r13703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13709, %r916, %r5044, %r13712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13714, %r13712, %r13713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13717, %r13709, %r13714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13720, %r905, %r5066, %r13701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13725, %r13701, %r13724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13728, %r13720, %r13725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13731, %r916, %r5066, %r13712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13736, %r13712, %r13735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13739, %r13731, %r13736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13384, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13395, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13406, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13417, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13430, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13441, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13452, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13463, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13476, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13487, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13498, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13509, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13522, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13533, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13544, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13555, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13568, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13579, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13590, %r13318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13601, %r13322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13614, %r13326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13868, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13870, %r13868, %r13625, %r13330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13874, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13876, %r13874, %r13636, %r13334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13880, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13882, %r13880, %r13647, %r13338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13886, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13888, %r13886, %r13660, %r13342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13892, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13894, %r13892, %r13671, %r13346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13898, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13900, %r13898, %r13682, %r13350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13904, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13906, %r13904, %r13693, %r13354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13910, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13912, %r13910, %r13706, %r13358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13916, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13918, %r13916, %r13717, %r13362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13922, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13924, %r13922, %r13728, %r13366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13928, %r368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13930, %r13928, %r13739, %r13370;
	// end inline asm
	// begin inline asm
	mov.b32 %r13939, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13950, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13936, %r905, %r8538, %r13939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13941, %r13939, %r13940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13944, %r13936, %r13941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13947, %r916, %r8538, %r13950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13952, %r13950, %r13951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13955, %r13947, %r13952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13958, %r905, %r8560, %r13939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13963, %r13939, %r13962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13966, %r13958, %r13963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13969, %r916, %r8560, %r13950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13974, %r13950, %r13973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13977, %r13969, %r13974;
	// end inline asm
	// begin inline asm
	mov.b32 %r13985, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13996, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13982, %r905, %r8584, %r13985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13987, %r13985, %r13986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13990, %r13982, %r13987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13993, %r916, %r8584, %r13996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13998, %r13996, %r13997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14001, %r13993, %r13998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14004, %r905, %r8606, %r13985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14009, %r13985, %r14008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14012, %r14004, %r14009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14015, %r916, %r8606, %r13996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14020, %r13996, %r14019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14023, %r14015, %r14020;
	// end inline asm
	// begin inline asm
	mov.b32 %r14031, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14042, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14028, %r905, %r8630, %r14031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14033, %r14031, %r14032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14036, %r14028, %r14033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14039, %r916, %r8630, %r14042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14044, %r14042, %r14043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14047, %r14039, %r14044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14050, %r905, %r8652, %r14031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14055, %r14031, %r14054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14058, %r14050, %r14055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14061, %r916, %r8652, %r14042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14066, %r14042, %r14065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14069, %r14061, %r14066;
	// end inline asm
	// begin inline asm
	mov.b32 %r14077, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14088, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14074, %r905, %r8676, %r14077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14079, %r14077, %r14078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14082, %r14074, %r14079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14085, %r916, %r8676, %r14088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14090, %r14088, %r14089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14093, %r14085, %r14090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14096, %r905, %r8698, %r14077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14101, %r14077, %r14100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14104, %r14096, %r14101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14107, %r916, %r8698, %r14088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14112, %r14088, %r14111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14115, %r14107, %r14112;
	// end inline asm
	// begin inline asm
	mov.b32 %r14123, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14134, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14120, %r905, %r8722, %r14123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14125, %r14123, %r14124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14128, %r14120, %r14125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14131, %r916, %r8722, %r14134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14136, %r14134, %r14135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14139, %r14131, %r14136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14142, %r905, %r8744, %r14123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14147, %r14123, %r14146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14150, %r14142, %r14147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14153, %r916, %r8744, %r14134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14158, %r14134, %r14157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14161, %r14153, %r14158;
	// end inline asm
	// begin inline asm
	mov.b32 %r14169, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14180, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14166, %r905, %r8768, %r14169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14171, %r14169, %r14170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14174, %r14166, %r14171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14177, %r916, %r8768, %r14180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14182, %r14180, %r14181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14185, %r14177, %r14182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14188, %r905, %r8790, %r14169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14193, %r14169, %r14192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14196, %r14188, %r14193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14199, %r916, %r8790, %r14180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14204, %r14180, %r14203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14207, %r14199, %r14204;
	// end inline asm
	// begin inline asm
	mov.b32 %r14215, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14226, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14212, %r905, %r8814, %r14215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14217, %r14215, %r14216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14220, %r14212, %r14217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14223, %r916, %r8814, %r14226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14228, %r14226, %r14227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14231, %r14223, %r14228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14234, %r905, %r8836, %r14215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14239, %r14215, %r14238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14242, %r14234, %r14239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14245, %r916, %r8836, %r14226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14250, %r14226, %r14249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14253, %r14245, %r14250;
	// end inline asm
	// begin inline asm
	mov.b32 %r14261, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14272, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14258, %r905, %r8860, %r14261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14263, %r14261, %r14262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14266, %r14258, %r14263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14269, %r916, %r8860, %r14272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14274, %r14272, %r14273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14277, %r14269, %r14274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14280, %r905, %r8882, %r14261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14285, %r14261, %r14284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14288, %r14280, %r14285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14291, %r916, %r8882, %r14272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14296, %r14272, %r14295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14299, %r14291, %r14296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r386, %r13944, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r386, %r13955, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r386, %r13966, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r386, %r13977, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r386, %r13990, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r386, %r14001, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r386, %r14012, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r386, %r14023, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r386, %r14036, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r386, %r14047, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r386, %r14058, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r386, %r14069, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r386, %r14082, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r386, %r14093, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r386, %r14104, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r386, %r14115, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r404, %r14128, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r404, %r14139, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r404, %r14150, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r404, %r14161, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14527, %r404, %r14174, %r13864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r404, %r14185, %r13870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r404, %r14196, %r13876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r404, %r14207, %r13882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r404, %r14220, %r13888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r404, %r14231, %r13894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r404, %r14242, %r13900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r404, %r14253, %r13906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14563, %r404, %r14266, %r13912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r404, %r14277, %r13918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14572, %r404, %r14288, %r13924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14569, %r404, %r14299, %r13930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14430, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14432, %r14430, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r468, %r14437, %r14432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14439, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14441, %r14439, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r468, %r14446, %r14441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14448, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14450, %r14448, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r468, %r14455, %r14450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14457, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14459, %r14457, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r468, %r14464, %r14459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14466, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14468, %r14466, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r468, %r14473, %r14468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14475, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14477, %r14475, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r468, %r14482, %r14477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14484, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14486, %r14484, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r468, %r14491, %r14486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14493, %r474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r14493, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r468, %r14500, %r14495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14502, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14504, %r14502, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r471, %r14509, %r14504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14511, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14513, %r14511, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r471, %r14518, %r14513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14520, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14522, %r14520, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r471, %r14527, %r14522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14529, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14531, %r14529, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r471, %r14536, %r14531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14538, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r14538, %r14542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r471, %r14545, %r14540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14547, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14549, %r14547, %r14551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r471, %r14554, %r14549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14556, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r14556, %r14560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r471, %r14563, %r14558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14565, %r477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14567, %r14565, %r14569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14570, %r471, %r14572, %r14567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14574, %r474, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14577, %r468, %r14434, %r14574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14581, %r474, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14584, %r468, %r14443, %r14581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14588, %r474, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14591, %r468, %r14452, %r14588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14595, %r474, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14598, %r468, %r14461, %r14595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14602, %r474, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14605, %r468, %r14470, %r14602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14609, %r474, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14612, %r468, %r14479, %r14609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14616, %r474, %r14491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14619, %r468, %r14488, %r14616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14623, %r474, %r14500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14626, %r468, %r14497, %r14623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14630, %r477, %r14509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14633, %r471, %r14506, %r14630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14637, %r477, %r14518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14640, %r471, %r14515, %r14637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14644, %r477, %r14527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14647, %r471, %r14524, %r14644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14651, %r477, %r14536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14654, %r471, %r14533, %r14651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14658, %r477, %r14545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14661, %r471, %r14542, %r14658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14665, %r477, %r14554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14668, %r471, %r14551, %r14665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14672, %r477, %r14563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14675, %r471, %r14560, %r14672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14679, %r477, %r14572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14682, %r471, %r14569, %r14679;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14853, %r14850}, {%r523, %r529, %r526, %r532}, {%r14435, %r14577}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14862, %r14859}, {%r523, %r529, %r526, %r532}, {%r14444, %r14584}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14871, %r14868}, {%r523, %r529, %r526, %r532}, {%r14453, %r14591}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14880, %r14877}, {%r523, %r529, %r526, %r532}, {%r14462, %r14598}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14889, %r14886}, {%r523, %r529, %r526, %r532}, {%r14471, %r14605}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14898, %r14895}, {%r523, %r529, %r526, %r532}, {%r14480, %r14612}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14907, %r14904}, {%r523, %r529, %r526, %r532}, {%r14489, %r14619}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14916, %r14913}, {%r523, %r529, %r526, %r532}, {%r14498, %r14626}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14925, %r14922}, {%r523, %r529, %r526, %r532}, {%r14507, %r14633}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14934, %r14931}, {%r523, %r529, %r526, %r532}, {%r14516, %r14640}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14943, %r14940}, {%r523, %r529, %r526, %r532}, {%r14525, %r14647}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14952, %r14949}, {%r523, %r529, %r526, %r532}, {%r14534, %r14654}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14961, %r14958}, {%r523, %r529, %r526, %r532}, {%r14543, %r14661}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14970, %r14967}, {%r523, %r529, %r526, %r532}, {%r14552, %r14668}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14979, %r14976}, {%r523, %r529, %r526, %r532}, {%r14561, %r14675}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14988, %r14985}, {%r523, %r529, %r526, %r532}, {%r14570, %r14682}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14846, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14848, %r14846, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14851, %r573, %r14853, %r14848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14855, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14857, %r14855, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14860, %r573, %r14862, %r14857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14864, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14866, %r14864, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14869, %r573, %r14871, %r14866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14873, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14875, %r14873, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14878, %r573, %r14880, %r14875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14882, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14884, %r14882, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14887, %r573, %r14889, %r14884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14891, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14893, %r14891, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14896, %r573, %r14898, %r14893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14900, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14902, %r14900, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14905, %r573, %r14907, %r14902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14909, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r14909, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r573, %r14916, %r14911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14918, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14920, %r14918, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14923, %r573, %r14925, %r14920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14927, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14929, %r14927, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14932, %r573, %r14934, %r14929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14936, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14938, %r14936, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14941, %r573, %r14943, %r14938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14945, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14947, %r14945, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14950, %r573, %r14952, %r14947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14954, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r14954, %r14958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r573, %r14961, %r14956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14963, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14965, %r14963, %r14967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14968, %r573, %r14970, %r14965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14972, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r14972, %r14976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r573, %r14979, %r14974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14981, %r576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14983, %r14981, %r14985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14986, %r573, %r14988, %r14983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14990, %r576, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14993, %r573, %r14850, %r14990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14997, %r576, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15000, %r573, %r14859, %r14997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15004, %r576, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15007, %r573, %r14868, %r15004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15011, %r576, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15014, %r573, %r14877, %r15011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15018, %r576, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15021, %r573, %r14886, %r15018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15025, %r576, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15028, %r573, %r14895, %r15025;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15032, %r576, %r14907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15035, %r573, %r14904, %r15032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15039, %r576, %r14916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15042, %r573, %r14913, %r15039;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15046, %r576, %r14925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15049, %r573, %r14922, %r15046;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15053, %r576, %r14934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15056, %r573, %r14931, %r15053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15060, %r576, %r14943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15063, %r573, %r14940, %r15060;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15067, %r576, %r14952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15070, %r573, %r14949, %r15067;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15074, %r576, %r14961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15077, %r573, %r14958, %r15074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15081, %r576, %r14970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15084, %r573, %r14967, %r15081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15088, %r576, %r14979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15091, %r573, %r14976, %r15088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15095, %r576, %r14988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15098, %r573, %r14985, %r15095;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15391, %r15394}, {%r611, %r617, %r614, %r620}, {%r14851, %r14993}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15397, %r15400}, {%r611, %r617, %r614, %r620}, {%r14860, %r15000}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15403, %r15406}, {%r611, %r617, %r614, %r620}, {%r14869, %r15007}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15409, %r15412}, {%r611, %r617, %r614, %r620}, {%r14878, %r15014}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15415, %r15418}, {%r611, %r617, %r614, %r620}, {%r14887, %r15021}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15421, %r15424}, {%r611, %r617, %r614, %r620}, {%r14896, %r15028}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15427, %r15430}, {%r611, %r617, %r614, %r620}, {%r14905, %r15035}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15433, %r15436}, {%r611, %r617, %r614, %r620}, {%r14914, %r15042}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r611, %r617, %r614, %r620}, {%r14923, %r15049}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15398, %r15401}, {%r611, %r617, %r614, %r620}, {%r14932, %r15056}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15404, %r15407}, {%r611, %r617, %r614, %r620}, {%r14941, %r15063}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15410, %r15413}, {%r611, %r617, %r614, %r620}, {%r14950, %r15070}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15416, %r15419}, {%r611, %r617, %r614, %r620}, {%r14959, %r15077}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15422, %r15425}, {%r611, %r617, %r614, %r620}, {%r14968, %r15084}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15428, %r15431}, {%r611, %r617, %r614, %r620}, {%r14977, %r15091}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15434, %r15437}, {%r611, %r617, %r614, %r620}, {%r14986, %r15098}, {%r3246, %r3246};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15399, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15402, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15408, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15411, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15414, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15417, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15420, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15423, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15426, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15429, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15432, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15435, %r15436, %r15437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15447, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15450, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15456, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15459, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15462, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15465, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15468, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15471, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15474, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15477, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15480, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15483, %r15436, %r15437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r186, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r186, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r186, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r186, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r186, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r186, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r186, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r186, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r186, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r186, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r186, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r186, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r186, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r186, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r186, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r186, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r188, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r188, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r188, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r188, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r188, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r188, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r188, %r15456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15555, %r188, %r15459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15558, %r188, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15561, %r188, %r15465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15564, %r188, %r15468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15567, %r188, %r15471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15570, %r188, %r15474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15573, %r188, %r15477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15576, %r188, %r15480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15579, %r188, %r15483;
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15584, %r15486, %r15582;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15587, %r15584, %r15583;
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15592, %r15489, %r15590;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15595, %r15592, %r15591;
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15600, %r15492, %r15598;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15603, %r15600, %r15599;
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15608, %r15495, %r15606;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15611, %r15608, %r15607;
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15616, %r15498, %r15614;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15619, %r15616, %r15615;
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15624, %r15501, %r15622;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15627, %r15624, %r15623;
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15632, %r15504, %r15630;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15635, %r15632, %r15631;
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15640, %r15507, %r15638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15643, %r15640, %r15639;
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15648, %r15510, %r15646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15651, %r15648, %r15647;
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15656, %r15513, %r15654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15659, %r15656, %r15655;
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15664, %r15516, %r15662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15667, %r15664, %r15663;
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15672, %r15519, %r15670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15675, %r15672, %r15671;
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15680, %r15522, %r15678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15683, %r15680, %r15679;
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15688, %r15525, %r15686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15691, %r15688, %r15687;
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15696, %r15528, %r15694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15699, %r15696, %r15695;
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15704, %r15531, %r15702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15707, %r15704, %r15703;
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15712, %r15534, %r15710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15715, %r15712, %r15711;
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15720, %r15537, %r15718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15723, %r15720, %r15719;
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15728, %r15540, %r15726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15731, %r15728, %r15727;
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15736, %r15543, %r15734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15739, %r15736, %r15735;
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15744, %r15546, %r15742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15747, %r15744, %r15743;
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15752, %r15549, %r15750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15755, %r15752, %r15751;
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15760, %r15552, %r15758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15763, %r15760, %r15759;
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15768, %r15555, %r15766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15771, %r15768, %r15767;
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15776, %r15558, %r15774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15779, %r15776, %r15775;
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15784, %r15561, %r15782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15787, %r15784, %r15783;
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15792, %r15564, %r15790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15795, %r15792, %r15791;
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15799, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15800, %r15567, %r15798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15803, %r15800, %r15799;
	// end inline asm
	// begin inline asm
	mov.b32 %r15806, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15807, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15808, %r15570, %r15806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15811, %r15808, %r15807;
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15816, %r15573, %r15814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15819, %r15816, %r15815;
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15823, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15824, %r15576, %r15822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15827, %r15824, %r15823;
	// end inline asm
	// begin inline asm
	mov.b32 %r15830, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15832, %r15579, %r15830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15835, %r15832, %r15831;
	// end inline asm
	// begin inline asm
	mov.b32 %r15841, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15840, %r15841, %r15839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15587, %r15840;
	// end inline asm
	// begin inline asm
	mov.b32 %r15846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15847, %r15841, %r15846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15595, %r15847;
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15841, %r15853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15603, %r15854;
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15841, %r15860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15611, %r15861;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15867, %r15843, %r15857, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15871, %r15850, %r15864, %r4422;
	// end inline asm
	shl.b32 	%r15878, %r15871, 4;
	// begin inline asm
	lop3.b32 %r15875, %r4428, %r15867, %r15878, 202;
	// end inline asm
	xor.b32  	%r16259, %r15875, -2004318072;
	// begin inline asm
	mov.b32 %r15882, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15881, %r15882, %r15880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15619, %r15881;
	// end inline asm
	// begin inline asm
	mov.b32 %r15887, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15888, %r15882, %r15887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15627, %r15888;
	// end inline asm
	// begin inline asm
	mov.b32 %r15894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15882, %r15894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15635, %r15895;
	// end inline asm
	// begin inline asm
	mov.b32 %r15901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15882, %r15901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15643, %r15902;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15908, %r15884, %r15898, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15912, %r15891, %r15905, %r4422;
	// end inline asm
	shl.b32 	%r15919, %r15912, 4;
	// begin inline asm
	lop3.b32 %r15916, %r4428, %r15908, %r15919, 202;
	// end inline asm
	xor.b32  	%r16260, %r15916, -2004318072;
	// begin inline asm
	mov.b32 %r15923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15922, %r15923, %r15921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15651, %r15922;
	// end inline asm
	// begin inline asm
	mov.b32 %r15928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15929, %r15923, %r15928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15659, %r15929;
	// end inline asm
	// begin inline asm
	mov.b32 %r15935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15923, %r15935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15667, %r15936;
	// end inline asm
	// begin inline asm
	mov.b32 %r15942, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15923, %r15942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15675, %r15943;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15949, %r15925, %r15939, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15953, %r15932, %r15946, %r4422;
	// end inline asm
	shl.b32 	%r15960, %r15953, 4;
	// begin inline asm
	lop3.b32 %r15957, %r4428, %r15949, %r15960, 202;
	// end inline asm
	xor.b32  	%r16261, %r15957, -2004318072;
	// begin inline asm
	mov.b32 %r15964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15963, %r15964, %r15962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15683, %r15963;
	// end inline asm
	// begin inline asm
	mov.b32 %r15969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15970, %r15964, %r15969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15691, %r15970;
	// end inline asm
	// begin inline asm
	mov.b32 %r15976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15964, %r15976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15699, %r15977;
	// end inline asm
	// begin inline asm
	mov.b32 %r15983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15964, %r15983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15707, %r15984;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15990, %r15966, %r15980, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15994, %r15973, %r15987, %r4422;
	// end inline asm
	shl.b32 	%r16001, %r15994, 4;
	// begin inline asm
	lop3.b32 %r15998, %r4428, %r15990, %r16001, 202;
	// end inline asm
	xor.b32  	%r16262, %r15998, -2004318072;
	// begin inline asm
	mov.b32 %r16005, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16004, %r16005, %r16003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15715, %r16004;
	// end inline asm
	// begin inline asm
	mov.b32 %r16010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16011, %r16005, %r16010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15723, %r16011;
	// end inline asm
	// begin inline asm
	mov.b32 %r16017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r16005, %r16017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r15731, %r16018;
	// end inline asm
	// begin inline asm
	mov.b32 %r16024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r16005, %r16024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r15739, %r16025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16031, %r16007, %r16021, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16035, %r16014, %r16028, %r4422;
	// end inline asm
	shl.b32 	%r16042, %r16035, 4;
	// begin inline asm
	lop3.b32 %r16039, %r4428, %r16031, %r16042, 202;
	// end inline asm
	xor.b32  	%r16263, %r16039, -2004318072;
	// begin inline asm
	mov.b32 %r16046, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16045, %r16046, %r16044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r15747, %r16045;
	// end inline asm
	// begin inline asm
	mov.b32 %r16051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16052, %r16046, %r16051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r15755, %r16052;
	// end inline asm
	// begin inline asm
	mov.b32 %r16058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r16046, %r16058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r15763, %r16059;
	// end inline asm
	// begin inline asm
	mov.b32 %r16065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r16046, %r16065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r15771, %r16066;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16072, %r16048, %r16062, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16076, %r16055, %r16069, %r4422;
	// end inline asm
	shl.b32 	%r16083, %r16076, 4;
	// begin inline asm
	lop3.b32 %r16080, %r4428, %r16072, %r16083, 202;
	// end inline asm
	xor.b32  	%r16264, %r16080, -2004318072;
	// begin inline asm
	mov.b32 %r16087, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16086, %r16087, %r16085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r15779, %r16086;
	// end inline asm
	// begin inline asm
	mov.b32 %r16092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16093, %r16087, %r16092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r15787, %r16093;
	// end inline asm
	// begin inline asm
	mov.b32 %r16099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16100, %r16087, %r16099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16103, %r15795, %r16100;
	// end inline asm
	// begin inline asm
	mov.b32 %r16106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r16087, %r16106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16110, %r15803, %r16107;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16113, %r16089, %r16103, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16117, %r16096, %r16110, %r4422;
	// end inline asm
	shl.b32 	%r16124, %r16117, 4;
	// begin inline asm
	lop3.b32 %r16121, %r4428, %r16113, %r16124, 202;
	// end inline asm
	xor.b32  	%r16265, %r16121, -2004318072;
	// begin inline asm
	mov.b32 %r16128, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16126, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16127, %r16128, %r16126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16130, %r15811, %r16127;
	// end inline asm
	// begin inline asm
	mov.b32 %r16133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16134, %r16128, %r16133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16137, %r15819, %r16134;
	// end inline asm
	// begin inline asm
	mov.b32 %r16140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16141, %r16128, %r16140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16144, %r15827, %r16141;
	// end inline asm
	// begin inline asm
	mov.b32 %r16147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16148, %r16128, %r16147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16151, %r15835, %r16148;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16154, %r16130, %r16144, %r4422;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16158, %r16137, %r16151, %r4422;
	// end inline asm
	shl.b32 	%r16165, %r16158, 4;
	// begin inline asm
	lop3.b32 %r16162, %r4428, %r16154, %r16165, 202;
	// end inline asm
	xor.b32  	%r16266, %r16162, -2004318072;
	st.shared.u32 	[%rd112], %r16259;
	st.shared.u32 	[%rd114], %r16260;
	st.shared.u32 	[%rd116], %r16261;
	st.shared.u32 	[%rd118], %r16262;
	st.shared.u32 	[%rd120], %r16263;
	st.shared.u32 	[%rd122], %r16264;
	st.shared.u32 	[%rd124], %r16265;
	st.shared.u32 	[%rd126], %r16266;
	add.s32 	%r16411, %r16411, 128;
	setp.eq.s32 	%p330, %r16411, 256;
	@%p330 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29799
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16272, [%rd5];
	ld.shared.u32 	%r16273, [%rd6+128];
	ld.shared.u32 	%r16280, [%rd6+4];
	ld.shared.u32 	%r16281, [%rd6+132];
	ld.shared.u32 	%r16288, [%rd7];
	ld.shared.u32 	%r16289, [%rd8+128];
	ld.shared.u32 	%r16296, [%rd8+4];
	ld.shared.u32 	%r16297, [%rd8+132];
	ld.shared.u32 	%r16304, [%rd5+16644];
	ld.shared.u32 	%r16305, [%rd6+16772];
	ld.shared.u32 	%r16312, [%rd6+16648];
	ld.shared.u32 	%r16313, [%rd6+16776];
	ld.shared.u32 	%r16320, [%rd7+16644];
	ld.shared.u32 	%r16321, [%rd8+16772];
	ld.shared.u32 	%r16328, [%rd8+16648];
	ld.shared.u32 	%r16329, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16267, %r16272, %r16273, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16271, %r16272, %r16273, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16275, %r16280, %r16281, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16279, %r16280, %r16281, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16283, %r16288, %r16289, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16287, %r16288, %r16289, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16291, %r16296, %r16297, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16295, %r16296, %r16297, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16299, %r16304, %r16305, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16303, %r16304, %r16305, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16307, %r16312, %r16313, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16311, %r16312, %r16313, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16315, %r16320, %r16321, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16319, %r16320, %r16321, %r819;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16323, %r16328, %r16329, %r815;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16327, %r16328, %r16329, %r819;
	// end inline asm
	selp.b32 	%r16331, %r16271, %r16267, %p316;
	shfl.sync.bfly.b32	%r258, %r16331, 8, 31, -1;
	selp.b32 	%r16332, %r16279, %r16275, %p316;
	shfl.sync.bfly.b32	%r259, %r16332, 8, 31, -1;
	selp.b32 	%r16333, %r16287, %r16283, %p316;
	shfl.sync.bfly.b32	%r260, %r16333, 8, 31, -1;
	selp.b32 	%r16334, %r16295, %r16291, %p316;
	shfl.sync.bfly.b32	%r261, %r16334, 8, 31, -1;
	selp.b32 	%r16335, %r16303, %r16299, %p316;
	shfl.sync.bfly.b32	%r16336, %r16335, 8, 31, -1;
	selp.b32 	%r16337, %r16311, %r16307, %p316;
	shfl.sync.bfly.b32	%r16338, %r16337, 8, 31, -1;
	selp.b32 	%r16339, %r16319, %r16315, %p316;
	shfl.sync.bfly.b32	%r16340, %r16339, 8, 31, -1;
	selp.b32 	%r16341, %r16327, %r16323, %p316;
	shfl.sync.bfly.b32	%r16342, %r16341, 8, 31, -1;
	and.b32  	%r270, %r16410, 768;
	setp.lt.u32 	%p332, %r270, 384;
	shl.b32 	%r16365, %r16410, 12;
	@%p332 bra 	$L__BB0_186;
// %bb.185:                             // %pass28428
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16343, %r261, %r16295, %p316;
	selp.b32 	%r16344, %r16291, %r261, %p316;
	selp.b32 	%r16345, %r260, %r16287, %p316;
	selp.b32 	%r16346, %r16283, %r260, %p316;
	selp.b32 	%r16347, %r259, %r16279, %p316;
	selp.b32 	%r16348, %r16275, %r259, %p316;
	selp.b32 	%r16349, %r258, %r16271, %p316;
	selp.b32 	%r16350, %r16267, %r258, %p316;
	or.b32  	%r16352, %r16365, %r124;
	or.b32  	%r16353, %r16352, %r125;
	or.b32  	%r16354, %r16353, %r139;
	cvt.u64.u32 	%rd127, %r16354;
	add.s64 	%rd128, %rd127, %rd9;
	shr.u64 	%rd129, %rd128, 39;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 25;
	setp.lt.s64 	%p334, %rd128, 0;
	and.b64  	%rd132, %rd130, -33554432;
	setp.ne.s64 	%p335, %rd132, %rd128;
	and.pred  	%p336, %p334, %p335;
	selp.u64 	%rd133, 1, 0, %p336;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 25;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r16350, %r16348, %r16349, %r16347};
	or.b32  	%r16355, %r16353, %r140;
	cvt.s64.s32 	%rd139, %r16355;
	add.s64 	%rd140, %rd139, %rd9;
	shr.u64 	%rd141, %rd140, 39;
	add.s64 	%rd142, %rd140, %rd141;
	shr.u64 	%rd143, %rd142, 25;
	shr.u64 	%rd144, %rd140, 63;
	sub.s64 	%rd145, %rd144, %rd143;
	shl.b64 	%rd146, %rd145, 25;
	add.s64 	%rd147, %rd146, %rd140;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r16346, %r16344, %r16345, %r16343};
$L__BB0_186:                            // %pass28621
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16356, %r270, 128;
	setp.lt.u32 	%p337, %r16356, 384;
	@%p337 bra 	$L__BB0_187;
// %bb.189:                             // %pass28644
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r262, %r16299, %r16336, %p316;
	selp.b32 	%r263, %r16336, %r16303, %p316;
	selp.b32 	%r264, %r16307, %r16338, %p316;
	selp.b32 	%r265, %r16338, %r16311, %p316;
	selp.b32 	%r266, %r16315, %r16340, %p316;
	selp.b32 	%r267, %r16340, %r16319, %p316;
	selp.b32 	%r268, %r16323, %r16342, %p316;
	selp.b32 	%r269, %r16342, %r16327, %p316;
	or.b32  	%r16358, %r16365, %r124;
	or.b32  	%r16359, %r16358, %r125;
	or.b32  	%r16360, %r16359, 524288;
	or.b32  	%r16361, %r16360, %r139;
	cvt.u64.u32 	%rd150, %r16361;
	add.s64 	%rd151, %rd150, %rd9;
	shr.u64 	%rd152, %rd151, 39;
	add.s64 	%rd153, %rd151, %rd152;
	shr.s64 	%rd154, %rd153, 25;
	setp.lt.s64 	%p338, %rd151, 0;
	and.b64  	%rd155, %rd153, -33554432;
	setp.ne.s64 	%p339, %rd155, %rd151;
	and.pred  	%p340, %p338, %p339;
	selp.u64 	%rd156, 1, 0, %p340;
	sub.s64 	%rd157, %rd156, %rd154;
	shl.b64 	%rd158, %rd157, 25;
	add.s64 	%rd159, %rd158, %rd151;
	shl.b64 	%rd160, %rd159, 2;
	add.s64 	%rd161, %rd3, %rd160;
	st.global.v4.u32 	[%rd161], {%r262, %r264, %r263, %r265};
	or.b32  	%r16362, %r140, %r16360;
	cvt.s64.s32 	%rd162, %r16362;
	add.s64 	%rd163, %rd162, %rd9;
	shr.u64 	%rd164, %rd163, 39;
	add.s64 	%rd165, %rd163, %rd164;
	shr.u64 	%rd166, %rd165, 25;
	shr.u64 	%rd167, %rd163, 63;
	sub.s64 	%rd168, %rd167, %rd166;
	shl.b64 	%rd169, %rd168, 25;
	add.s64 	%rd170, %rd169, %rd163;
	shl.b64 	%rd171, %rd170, 2;
	add.s64 	%rd172, %rd3, %rd171;
	st.global.v4.u32 	[%rd172], {%r266, %r268, %r267, %r269};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70747
	mov.u32 	%r16363, 0;
	st.global.u32 	[%rd4], %r16363;
	ret;
$L__BB0_7:                              // %L245
	mov.u32 	%r16364, 2;
	st.global.u32 	[%rd4], %r16364;
	mov.u64 	%rd173, exception5808;
	cvta.global.u64 	%rd174, %rd173;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd174;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r271;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r271;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
