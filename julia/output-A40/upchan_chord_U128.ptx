// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5805[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15829[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<318>;
	.reg .b16 	%rs<2402>;
	.reg .b32 	%r<16404>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<162>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r245, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r252, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r252, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd25, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r246, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r253, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r254, %r253, %r4;
	or.b32  	%r255, %r254, %r2;
	mul.wide.u32 	%rd31, %r255, 4;
	add.s64 	%rd4, %rd25, %rd31;
	mov.u32 	%r256, 1;
	st.global.u32 	[%rd4], %r256;
	setp.gt.u32 	%p2, %r246, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r247, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r247, %r246;
	setp.gt.s32 	%p4, %r247, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r248, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r257, %r247, %r246;
	and.b32  	%r258, %r257, 255;
	setp.ne.s32 	%p6, %r258, 0;
	setp.gt.u32 	%p7, %r248, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r249, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r249, %r248;
	setp.gt.s32 	%p10, %r249, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r259, %r249, %r248;
	and.b32  	%r260, %r259, 1;
	setp.eq.b32 	%p12, %r260, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r250, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r250, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r251, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r250, %r251;
	setp.lt.s32 	%p17, %r251, 49;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r182, %r4, 1, 1;
	and.b32  	%r183, %r4, 1;
	bfe.u32 	%r185, %r4, 2, 1;
	shr.u32 	%r186, %r4, 4;
	shl.b32 	%r270, %r186, 2;
	shl.b32 	%r271, %r185, 3;
	shl.b32 	%r272, %r183, 4;
	shl.b32 	%r273, %r182, 5;
	or.b32  	%r274, %r272, %r273;
	or.b32  	%r275, %r271, %r274;
	or.b32  	%r276, %r270, %r275;
	bfe.u32 	%r188, %r4, 3, 1;
	shl.b32 	%r277, %r188, 1;
	or.b32  	%r189, %r277, %r276;
	or.b32  	%r190, %r189, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r189;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L768
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L771
	cvt.rn.f32.s32 	%f257, %r190;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L788
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L791
	or.b32  	%r295, %r189, 1;
	or.b32  	%r6, %r189, 65;
	cvt.rn.f32.s32 	%f292, %r295;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L870
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L873
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L890
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L893
	or.b32  	%r313, %r189, 128;
	or.b32  	%r8, %r189, 192;
	cvt.rn.f32.s32 	%f361, %r313;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L972
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L975
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L992
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L995
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r331, %r189, 129;
	or.b32  	%r10, %r189, 193;
	cvt.rn.f32.s32 	%f430, %r331;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1074
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1077
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1094
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1097
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r349, %r189, 256;
	or.b32  	%r12, %r189, 320;
	cvt.rn.f32.s32 	%f499, %r349;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1176
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1179
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1196
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1199
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r367, %r189, 257;
	or.b32  	%r14, %r189, 321;
	cvt.rn.f32.s32 	%f568, %r367;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1278
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1281
	mov.b32 	%r278, %f230;
	mov.b32 	%r285, %f264;
	mov.b32 	%r296, %f299;
	mov.b32 	%r303, %f333;
	mov.b32 	%r314, %f368;
	mov.b32 	%r321, %f402;
	mov.b32 	%r332, %f437;
	mov.b32 	%r339, %f471;
	mov.b32 	%r350, %f506;
	mov.b32 	%r357, %f540;
	mov.b32 	%r368, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r375, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1298
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1301
	and.b32  	%r279, %r278, -2147483648;
	and.b32  	%r286, %r285, -2147483648;
	and.b32  	%r297, %r296, -2147483648;
	and.b32  	%r304, %r303, -2147483648;
	and.b32  	%r315, %r314, -2147483648;
	and.b32  	%r322, %r321, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	and.b32  	%r340, %r339, -2147483648;
	and.b32  	%r351, %r350, -2147483648;
	and.b32  	%r358, %r357, -2147483648;
	and.b32  	%r369, %r368, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	or.b32  	%r385, %r189, 384;
	or.b32  	%r16, %r189, 448;
	cvt.rn.f32.s32 	%f637, %r385;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r386, %f644;
	and.b32  	%r387, %r386, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1380
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1383
	or.b32  	%r280, %r279, 1056964608;
	or.b32  	%r287, %r286, 1056964608;
	or.b32  	%r298, %r297, 1056964608;
	or.b32  	%r305, %r304, 1056964608;
	or.b32  	%r316, %r315, 1056964608;
	or.b32  	%r323, %r322, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	or.b32  	%r341, %r340, 1056964608;
	or.b32  	%r352, %r351, 1056964608;
	or.b32  	%r359, %r358, 1056964608;
	or.b32  	%r370, %r369, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	or.b32  	%r388, %r387, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r393, %f678;
	and.b32  	%r394, %r393, -2147483648;
	or.b32  	%r395, %r394, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1400
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1403
	mov.b32 	%f231, %r280;
	mov.b32 	%f265, %r287;
	mov.b32 	%f300, %r298;
	mov.b32 	%f334, %r305;
	mov.b32 	%f369, %r316;
	mov.b32 	%f403, %r323;
	mov.b32 	%f438, %r334;
	mov.b32 	%f472, %r341;
	mov.b32 	%f507, %r352;
	mov.b32 	%f541, %r359;
	mov.b32 	%f576, %r370;
	mov.b32 	%f610, %r377;
	mov.b32 	%f645, %r388;
	mov.b32 	%f679, %r395;
	or.b32  	%r403, %r189, 385;
	or.b32  	%r18, %r189, 449;
	cvt.rn.f32.s32 	%f706, %r403;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r404, %f713;
	and.b32  	%r405, %r404, -2147483648;
	or.b32  	%r406, %r405, 1056964608;
	mov.b32 	%f714, %r406;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1482
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1485
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r181, %r4, 1;
	shr.u32 	%r187, %r4, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r411, %f747;
	and.b32  	%r412, %r411, -2147483648;
	or.b32  	%r413, %r412, 1056964608;
	mov.b32 	%f748, %r413;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1502
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1505
	shr.u32 	%r262, %r3, 3;
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r433, %r189, 127;
	and.b32  	%r434, %r433, 255;
	cvt.rn.f32.s32 	%f774, %r434;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r435, %f777;
	and.b32  	%r436, %r435, -2147483648;
	or.b32  	%r437, %r436, 1056964608;
	mov.b32 	%f778, %r437;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r443, %r433, 192;
	and.b32  	%r444, %r443, 255;
	cvt.rn.f32.s32 	%f809, %r444;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r445, %f811;
	and.b32  	%r446, %r445, -2147483648;
	or.b32  	%r447, %r446, 1056964608;
	mov.b32 	%f812, %r447;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r453, %r187, 2;
	and.b32  	%r454, %r181, 4;
	or.b32  	%r455, %r185, %r453;
	or.b32  	%r24, %r455, %r454;
	and.b32  	%r456, %r4, 3;
	mul.lo.s32 	%r457, %r456, %r24;
	shl.b32 	%r458, %r457, 1;
	neg.s32 	%r459, %r458;
	cvt.rn.f32.s32 	%f842, %r459;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_131;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_127;
	bra.uni 	$L__BB0_45;
$L__BB0_127:
	mov.b32 	%r192, %f1296;
	and.b32  	%r460, %r192, 8388607;
	or.b32  	%r16396, %r460, 1065353216;
	mov.b32 	%f1295, %r16396;
	add.s32 	%r461, %r192, -1073741824;
	and.b32  	%r16397, %r461, -8388608;
	setp.eq.s32 	%p136, %r16397, 0;
	@%p136 bra 	$L__BB0_130;
// %bb.128:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_129:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r462, %r16397, 192937984;
	add.s32 	%r463, %r16396, %r462;
	mov.b32 	%f854, %r463;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16397, %r16397, %r462;
	mov.b32 	%r16396, %f1295;
	setp.ne.s32 	%p137, %r16397, 0;
	setp.ne.s32 	%p138, %r16396, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_129;
$L__BB0_130:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r192, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_131;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r191, %f144;
	setp.lt.u32 	%p131, %r191, 1073741824;
	@%p131 bra 	$L__BB0_126;
// %bb.46:
	setp.lt.u32 	%p132, %r191, -2147483647;
	@%p132 bra 	$L__BB0_124;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_126;
$L__BB0_124:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_126;
// %bb.125:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_126:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_131:                            // %__internal_fmodf_kernel.exit.i1717
	cvt.u16.u32 	%rs1, %r262;
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	shl.b32 	%r172, %r4, 1;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_133;
// %bb.132:
	mov.b32 	%r464, %f71;
	and.b32  	%r465, %r464, -2147483648;
	mov.b32 	%r466, %f1296;
	or.b32  	%r467, %r465, %r466;
	mov.b32 	%f1296, %r467;
$L__BB0_133:                            // %__nv_fmodf.exit1718
	and.b16  	%rs2, %rs1, 255;
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r468, %f864;
	and.b32  	%r469, %r468, -2147483648;
	or.b32  	%r470, %r469, 1056964608;
	mov.b32 	%f865, %r470;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r476, %r172, 6;
	mov.u32 	%r477, -8;
	sub.s32 	%r478, %r477, %r476;
	mul.lo.s32 	%r479, %r24, %r478;
	cvt.rn.f32.s32 	%f894, %r479;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r480, %r26, 8388607;
	or.b32  	%r16338, %r480, 1065353216;
	mov.b32 	%f1279, %r16338;
	add.s32 	%r481, %r26, -1073741824;
	and.b32  	%r16339, %r481, -8388608;
	setp.eq.s32 	%p156, %r16339, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r482, %r16339, 192937984;
	add.s32 	%r483, %r16338, %r482;
	mov.b32 	%f906, %r483;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16339, %r16339, %r482;
	mov.b32 	%r16338, %f1279;
	setp.ne.s32 	%p157, %r16339, 0;
	setp.ne.s32 	%p158, %r16338, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	mul.lo.s16 	%rs3, %rs2, 171;
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r484, %f160;
	and.b32  	%r485, %r484, -2147483648;
	mov.b32 	%r486, %f1280;
	or.b32  	%r487, %r485, %r486;
	mov.b32 	%f1280, %r487;
$L__BB0_61:                             // %__nv_fmodf.exit
	shr.u16 	%rs4, %rs3, 13;
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r500, %f916;
	and.b32  	%r501, %r500, -2147483648;
	or.b32  	%r502, %r501, 1056964608;
	mov.b32 	%f917, %r502;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r508, %r183, 2147483646;
	shl.b32 	%r509, %r182, 2;
	sub.s32 	%r510, %r508, %r509;
	mul.lo.s32 	%r511, %r510, %r24;
	shl.b32 	%r37, %r511, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_141;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_137;
	bra.uni 	$L__BB0_63;
$L__BB0_137:
	mov.b32 	%r200, %f1300;
	and.b32  	%r512, %r200, 8388607;
	or.b32  	%r16398, %r512, 1065353216;
	mov.b32 	%f1299, %r16398;
	add.s32 	%r513, %r200, -1073741824;
	and.b32  	%r16399, %r513, -8388608;
	setp.eq.s32 	%p176, %r16399, 0;
	@%p176 bra 	$L__BB0_140;
// %bb.138:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_139:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r514, %r16399, 192937984;
	add.s32 	%r515, %r16398, %r514;
	mov.b32 	%f959, %r515;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16399, %r16399, %r514;
	mov.b32 	%r16398, %f1299;
	setp.ne.s32 	%p177, %r16399, 0;
	setp.ne.s32 	%p178, %r16398, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_139;
$L__BB0_140:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r200, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_141;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r199, %f163;
	setp.lt.u32 	%p171, %r199, 1073741824;
	@%p171 bra 	$L__BB0_136;
// %bb.64:
	setp.lt.u32 	%p172, %r199, -2147483647;
	@%p172 bra 	$L__BB0_134;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_136;
$L__BB0_134:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_136;
// %bb.135:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_136:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_141:                            // %__internal_fmodf_kernel.exit.i1748
	mul.lo.s16 	%rs5, %rs4, 48;
	cvt.rzi.s32.f32 	%r281, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r288, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r299, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r306, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r317, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r324, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r335, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r342, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r353, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r360, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r371, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r378, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r389, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r396, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r407, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r414, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r438, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r448, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r471, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r503, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_143;
// %bb.142:
	mov.b32 	%r516, %f89;
	and.b32  	%r517, %r516, -2147483648;
	mov.b32 	%r518, %f1300;
	or.b32  	%r519, %r517, %r518;
	mov.b32 	%f1300, %r519;
$L__BB0_143:                            // %__nv_fmodf.exit1749
	sub.s16 	%rs6, %rs1, %rs5;
	add.s32 	%r282, %r281, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r289, %r288, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r300, %r299, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r307, %r306, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r318, %r317, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r325, %r324, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r336, %r335, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r343, %r342, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r354, %r353, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r361, %r360, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r372, %r371, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r379, %r378, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r390, %r389, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r397, %r396, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r408, %r407, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r415, %r414, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r439, %r438, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r449, %r448, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r472, %r471, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r504, %r503, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r520, %f969;
	and.b32  	%r521, %r520, -2147483648;
	or.b32  	%r522, %r521, 1056964608;
	mov.b32 	%f970, %r522;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r523, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r528, %r24, 4;
	sub.s32 	%r529, %r37, %r528;
	cvt.rn.f32.s32 	%f179, %r529;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r530, %r39, 8388607;
	or.b32  	%r16340, %r530, 1065353216;
	mov.b32 	%f1283, %r16340;
	add.s32 	%r531, %r39, -1073741824;
	and.b32  	%r16341, %r531, -8388608;
	setp.eq.s32 	%p196, %r16341, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r532, %r16341, 192937984;
	add.s32 	%r533, %r16340, %r532;
	mov.b32 	%f1010, %r533;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16341, %r16341, %r532;
	mov.b32 	%r16340, %f1283;
	setp.ne.s32 	%p197, %r16341, 0;
	setp.ne.s32 	%p198, %r16340, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	and.b32  	%r173, %r172, 8;
	and.b32  	%r174, %r4, 16;
	and.b16  	%rs7, %rs6, 255;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r283, %r282, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r290, %r289, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r301, %r300, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r308, %r307, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r319, %r318, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r326, %r325, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r344, %r343, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r355, %r354, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r362, %r361, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r373, %r372, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r380, %r379, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r391, %r390, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r398, %r397, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r409, %r408, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r416, %r415, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r439, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r449, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r472, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r504, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r524, %r523, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r534, %f180;
	and.b32  	%r535, %r534, -2147483648;
	mov.b32 	%r536, %f1284;
	or.b32  	%r537, %r535, %r536;
	mov.b32 	%f1284, %r537;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	or.b32  	%r261, %r174, %r173;
	mul.wide.u16 	%r175, %rs7, 128;
	shl.b32 	%r176, %r4, 2;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r283, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r290, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r301, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r308, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r319, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r326, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r337, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r344, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r355, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r362, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r373, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r380, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r391, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r398, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r409, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r416, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r440, %r438, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r450, %r448, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r473, %r471, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r505, %r503, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r524, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r544, %f1020;
	and.b32  	%r545, %r544, -2147483648;
	or.b32  	%r546, %r545, 1056964608;
	mov.b32 	%f1021, %r546;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r547, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r548, %r547, 1;
	setp.eq.b32 	%p204, %r548, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_151;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_147;
	bra.uni 	$L__BB0_81;
$L__BB0_147:
	mov.b32 	%r208, %f1304;
	and.b32  	%r552, %r208, 8388607;
	or.b32  	%r16400, %r552, 1065353216;
	mov.b32 	%f1303, %r16400;
	add.s32 	%r553, %r208, -1073741824;
	and.b32  	%r16401, %r553, -8388608;
	setp.eq.s32 	%p216, %r16401, 0;
	@%p216 bra 	$L__BB0_150;
// %bb.148:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_149:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r554, %r16401, 192937984;
	add.s32 	%r555, %r16400, %r554;
	mov.b32 	%f1063, %r555;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16401, %r16401, %r554;
	mov.b32 	%r16400, %f1303;
	setp.ne.s32 	%p217, %r16401, 0;
	setp.ne.s32 	%p218, %r16400, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_149;
$L__BB0_150:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r208, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_151;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r207, %f183;
	setp.lt.u32 	%p211, %r207, 1073741824;
	@%p211 bra 	$L__BB0_146;
// %bb.82:
	setp.lt.u32 	%p212, %r207, -2147483647;
	@%p212 bra 	$L__BB0_144;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_146;
$L__BB0_144:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_146;
// %bb.145:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_146:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_151:                            // %__internal_fmodf_kernel.exit.i1779
	or.b32  	%r263, %r175, %r261;
	and.b32  	%r177, %r176, 4;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r284, %r282, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r291, %r289, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r302, %r300, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r309, %r307, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r320, %r318, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r327, %r325, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r338, %r336, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r345, %r343, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r356, %r354, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r363, %r361, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r374, %r372, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r381, %r379, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r392, %r390, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r399, %r397, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r410, %r408, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r417, %r415, 2;
	setp.eq.s32 	%p118, %r440, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r441, %r438, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r450, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r451, %r448, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r473, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r474, %r471, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r505, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r506, %r503, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r525, %r523, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r549, %r547, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_153;
// %bb.152:
	mov.b32 	%r556, %f106;
	and.b32  	%r557, %r556, -2147483648;
	mov.b32 	%r558, %f1304;
	or.b32  	%r559, %r557, %r558;
	mov.b32 	%f1304, %r559;
$L__BB0_153:                            // %__nv_fmodf.exit1780
	or.b32  	%r264, %r263, %r177;
	and.b32  	%r265, %r4, 2;
	setp.eq.s32 	%p23, %r284, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r291, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r302, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r309, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r320, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r327, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r338, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r345, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r356, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r363, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r374, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r381, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r392, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r399, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r410, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r417, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r442, %r441, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r452, %r451, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r475, %r474, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r507, %r506, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r525, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r526, %r523, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r549, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r550, %r547, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r560, %f1073;
	and.b32  	%r561, %r560, -2147483648;
	or.b32  	%r562, %r561, 1056964608;
	mov.b32 	%f1074, %r562;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r563, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r564, %r563, 1;
	setp.eq.b32 	%p224, %r564, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r565, %r563, 2;
	setp.eq.s32 	%p225, %r565, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r566, %r563, 1;
	and.b32  	%r567, %r566, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r568, %r49, 8388607;
	or.b32  	%r16342, %r568, 1065353216;
	mov.b32 	%f1287, %r16342;
	add.s32 	%r569, %r49, -1073741824;
	and.b32  	%r16343, %r569, -8388608;
	setp.eq.s32 	%p236, %r16343, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r570, %r16343, 192937984;
	add.s32 	%r571, %r16342, %r570;
	mov.b32 	%f1114, %r571;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16343, %r16343, %r570;
	mov.b32 	%r16342, %f1287;
	setp.ne.s32 	%p237, %r16343, 0;
	setp.ne.s32 	%p238, %r16342, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	or.b32  	%r266, %r264, %r265;
	and.b32  	%r178, %r176, 32;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r442, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r452, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r475, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r507, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r527, %r526, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r551, %r550, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r567, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r572, %f199;
	and.b32  	%r573, %r572, -2147483648;
	mov.b32 	%r574, %f1288;
	or.b32  	%r575, %r573, %r574;
	mov.b32 	%f1288, %r575;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	or.b32  	%r267, %r266, %r178;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r527, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r551, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r588, %f1124;
	and.b32  	%r589, %r588, -2147483648;
	or.b32  	%r590, %r589, 1056964608;
	mov.b32 	%f1125, %r590;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r591, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r592, %r591, 1;
	setp.eq.b32 	%p244, %r592, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r593, %r591, 2;
	setp.eq.s32 	%p245, %r593, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r594, %r591, 1;
	and.b32  	%r595, %r594, 2;
	setp.eq.s32 	%p246, %r595, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r596, %r185, 2147483640;
	cvt.u16.u32 	%rs8, %r4;
	shr.u16 	%rs9, %rs8, 8;
	shl.b16 	%rs10, %rs8, 8;
	or.b16  	%rs11, %rs10, %rs9;
	shl.b16 	%rs12, %rs11, 4;
	shr.u16 	%rs13, %rs11, 4;
	and.b16  	%rs14, %rs13, 3840;
	or.b16  	%rs15, %rs14, %rs12;
	and.b16  	%rs16, %rs15, 13107;
	shl.b16 	%rs17, %rs16, 2;
	shr.u16 	%rs18, %rs15, 2;
	and.b16  	%rs19, %rs18, 13107;
	or.b16  	%rs20, %rs19, %rs17;
	and.b16  	%rs21, %rs20, 20480;
	shl.b16 	%rs22, %rs21, 1;
	shr.u16 	%rs23, %rs20, 1;
	and.b16  	%rs24, %rs23, 16384;
	or.b16  	%rs25, %rs24, %rs22;
	shr.u16 	%rs26, %rs25, 13;
	sub.s32 	%r597, %r596, %r174;
	mad.lo.s32 	%r598, %r188, 2147483616, %r597;
	or.b16  	%rs27, %rs26, 1;
	cvt.u32.u16 	%r599, %rs27;
	and.b16  	%rs28, %rs26, 6;
	cvt.u32.u16 	%r600, %rs28;
	sub.s32 	%r601, %r598, %r600;
	shl.b32 	%r602, %r601, 1;
	cvt.rn.f32.s32 	%f1156, %r602;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_161;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_157;
	bra.uni 	$L__BB0_99;
$L__BB0_157:
	mov.b32 	%r216, %f1308;
	and.b32  	%r603, %r216, 8388607;
	or.b32  	%r16402, %r603, 1065353216;
	mov.b32 	%f1307, %r16402;
	add.s32 	%r604, %r216, -1073741824;
	and.b32  	%r16403, %r604, -8388608;
	setp.eq.s32 	%p256, %r16403, 0;
	@%p256 bra 	$L__BB0_160;
// %bb.158:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_159:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r605, %r16403, 192937984;
	add.s32 	%r606, %r16402, %r605;
	mov.b32 	%f1168, %r606;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16403, %r16403, %r605;
	mov.b32 	%r16402, %f1307;
	setp.ne.s32 	%p257, %r16403, 0;
	setp.ne.s32 	%p258, %r16402, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_159;
$L__BB0_160:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r216, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_161;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r215, %f202;
	setp.lt.u32 	%p251, %r215, 1073741824;
	@%p251 bra 	$L__BB0_156;
// %bb.100:
	setp.lt.u32 	%p252, %r215, -2147483647;
	@%p252 bra 	$L__BB0_154;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_156;
$L__BB0_154:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_156;
// %bb.155:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_156:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_161:                            // %__internal_fmodf_kernel.exit.i1810
	bfe.u32 	%r268, %r267, 1, 6;
	bfe.u32 	%r269, %r267, 1, 5;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r598, %r599;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_163;
// %bb.162:
	mov.b32 	%r607, %f123;
	and.b32  	%r608, %r607, -2147483648;
	mov.b32 	%r609, %f1308;
	or.b32  	%r610, %r608, %r609;
	mov.b32 	%f1308, %r610;
$L__BB0_163:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd32, %r268, 4;
	mul.wide.u32 	%rd34, %r269, 4;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r425, %f808;
	mov.b32 	%r426, %f841;
	mov.b32 	%r431, %f805;
	mov.b32 	%r432, %f838;
	mov.b32 	%r499, %f947;
	mov.b32 	%r498, %f159;
	mov.b32 	%r496, %f944;
	mov.b32 	%r495, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r587, %f1155;
	mov.b32 	%r586, %f198;
	mov.b32 	%r584, %f1152;
	mov.b32 	%r583, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r611, %f1178;
	and.b32  	%r612, %r611, -2147483648;
	or.b32  	%r613, %r612, 1056964608;
	mov.b32 	%f1179, %r613;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r614, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r615, %r614, 1;
	setp.eq.b32 	%p264, %r615, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r616, %r614, 2;
	setp.eq.s32 	%p265, %r616, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r617, %r614, 1;
	and.b32  	%r618, %r617, 2;
	setp.eq.s32 	%p266, %r618, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r619, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r619;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r620, %r62, 8388607;
	or.b32  	%r16344, %r620, 1065353216;
	mov.b32 	%f1291, %r16344;
	add.s32 	%r621, %r62, -1073741824;
	and.b32  	%r16345, %r621, -8388608;
	setp.eq.s32 	%p276, %r16345, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r622, %r16345, 192937984;
	add.s32 	%r623, %r16344, %r622;
	mov.b32 	%f1220, %r623;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16345, %r16345, %r622;
	mov.b32 	%r16344, %f1291;
	setp.ne.s32 	%p277, %r16345, 0;
	setp.ne.s32 	%p278, %r16344, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd33, %rd1, %rd32;
	add.s64 	%rd35, %rd1, %rd34;
	shr.u32 	%r184, %r4, 2;
	mov.b32 	%r294, %f291;
	mov.b32 	%r293, %f3;
	mov.b32 	%r312, %f360;
	mov.b32 	%r311, %f12;
	mov.b32 	%r330, %f429;
	mov.b32 	%r329, %f21;
	mov.b32 	%r348, %f498;
	mov.b32 	%r347, %f30;
	mov.b32 	%r366, %f567;
	mov.b32 	%r365, %f39;
	mov.b32 	%r384, %f636;
	mov.b32 	%r383, %f48;
	mov.b32 	%r402, %f705;
	mov.b32 	%r401, %f57;
	mov.b32 	%r420, %f773;
	mov.b32 	%r419, %f66;
	xor.b32  	%r493, %r496, -2147483648;
	xor.b32  	%r492, %r495, -2147483648;
	mov.b32 	%r540, %f1051;
	mov.b32 	%r539, %f178;
	mov.b32 	%r543, %f1048;
	mov.b32 	%r542, %f177;
	xor.b32  	%r581, %r584, -2147483648;
	xor.b32  	%r580, %r583, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r624, %f218;
	and.b32  	%r625, %r624, -2147483648;
	mov.b32 	%r626, %f1292;
	or.b32  	%r627, %r625, %r626;
	mov.b32 	%f1292, %r627;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r179, [%rd33];
	ld.global.u32 	%r180, [%rd35+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r294, %r293;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r310, %r312, %r311;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r346, %r348, %r347;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r364, %r366, %r365;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r382, %r384, %r383;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r402, %r401;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r418, %r420, %r419;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r421, %r426, %r425;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r424, %r426, %r425;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r427, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r430, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r488, %r499, %r498;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r491, %r493, %r492;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r494, %r496, %r495;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r497, %r499, %r498;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r538, %r540, %r539;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r541, %r543, %r542;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r576, %r587, %r586;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r579, %r581, %r580;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r582, %r584, %r583;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r585, %r587, %r586;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r635, %f1230;
	and.b32  	%r636, %r635, -2147483648;
	or.b32  	%r637, %r636, 1056964608;
	mov.b32 	%f1231, %r637;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r638, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r639, %r638, 1;
	setp.eq.b32 	%p284, %r639, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r640, %r638, 2;
	setp.eq.s32 	%p285, %r640, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r641, %r638, 1;
	and.b32  	%r642, %r641, 2;
	setp.eq.s32 	%p286, %r642, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r630, %f1261;
	mov.b32 	%r629, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r628, %r630, %r629;
	// end inline asm
	mov.b32 	%r633, %f1258;
	mov.b32 	%r632, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r631, %r633, %r632;
	// end inline asm
	and.b32  	%r643, %r172, 32;
	or.b32  	%r644, %r643, %r1;
	shl.b32 	%r645, %r4, 3;
	and.b32  	%r646, %r645, 64;
	or.b32  	%r71, %r644, %r646;
	shl.b32 	%r647, %r3, 5;
	and.b32  	%r648, %r647, 128;
	cvt.u16.u32 	%rs29, %r175;
	mul.hi.u16 	%rs30, %rs29, -21845;
	shr.u16 	%rs31, %rs30, 5;
	mul.lo.s16 	%rs32, %rs31, 48;
	sub.s16 	%rs33, %rs29, %rs32;
	cvt.u32.u16 	%r649, %rs33;
	and.b32  	%r650, %r176, 28;
	and.b32  	%r651, %r647, 96;
	or.b32  	%r652, %r650, %r651;
	add.s32 	%r653, %r649, %r250;
	shl.b32 	%r654, %r653, 8;
	or.b32  	%r655, %r652, %r648;
	or.b32  	%r72, %r655, %r654;
	and.b32  	%r73, %r4, 8;
	shl.b32 	%r656, %r4, 4;
	or.b32  	%r657, %r656, %r73;
	shr.u32 	%r658, %r657, 2;
	and.b32  	%r659, %r658, 30;
	and.b32  	%r660, %r184, 6;
	and.b32  	%r661, %r656, 48;
	or.b32  	%r74, %r661, %r660;
	shr.u32 	%r662, %r1, 1;
	and.b32  	%r663, %r2, 32;
	or.b32  	%r75, %r663, %r662;
	or.b32  	%r76, %r75, 8;
	or.b32  	%r77, %r75, 16;
	or.b32  	%r78, %r75, 24;
	or.b32  	%r79, %r184, %r661;
	and.b32  	%r664, %r4, 18;
	or.b32  	%r665, %r664, %r177;
	or.b32  	%r666, %r665, %r173;
	or.b32  	%r667, %r666, %r178;
	shr.u32 	%r668, %r667, 1;
	mul.lo.s32 	%r669, %r668, 65;
	add.s32 	%r80, %r75, %r669;
	add.s32 	%r81, %r76, %r669;
	add.s32 	%r82, %r77, %r669;
	add.s32 	%r83, %r78, %r669;
	add.s32 	%r670, %r669, 2080;
	add.s32 	%r84, %r75, %r670;
	add.s32 	%r85, %r76, %r670;
	add.s32 	%r86, %r77, %r670;
	add.s32 	%r87, %r78, %r670;
	shl.b32 	%r671, %r1, 1;
	or.b32  	%r672, %r671, %r186;
	mul.lo.s32 	%r673, %r672, 65;
	add.s32 	%r674, %r659, %r673;
	mul.wide.u32 	%rd36, %r674, 4;
	mov.u64 	%rd37, shmem;
	add.s64 	%rd5, %rd37, %rd36;
	cvt.u64.u32 	%rd38, %r659;
	cvt.u64.u32 	%rd39, %r673;
	add.s64 	%rd40, %rd39, %rd38;
	shl.b64 	%rd41, %rd40, 2;
	add.s64 	%rd6, %rd37, %rd41;
	or.b32  	%r675, %r672, 32;
	mul.lo.s32 	%r676, %r675, 65;
	add.s32 	%r677, %r659, %r676;
	mul.wide.u32 	%rd42, %r677, 4;
	add.s64 	%rd7, %rd37, %rd42;
	cvt.u64.u32 	%rd43, %r676;
	add.s64 	%rd44, %rd38, %rd43;
	shl.b64 	%rd45, %rd44, 2;
	add.s64 	%rd8, %rd37, %rd45;
	shl.b32 	%r678, %r248, 15;
	add.s32 	%r679, %r678, -98304;
	shl.b32 	%r680, %r1, 10;
	shl.b32 	%r681, %r4, 5;
	and.b32  	%r682, %r681, 768;
	or.b32  	%r683, %r682, %r680;
	or.b32  	%r684, %r683, %r648;
	or.b32  	%r685, %r684, %r651;
	or.b32  	%r88, %r685, %r650;
	cvt.s64.s32 	%rd9, %r679;
	or.b32  	%r686, %r655, %r683;
	or.b32  	%r89, %r686, 16384;
	bfe.u32 	%r687, %r656, 5, 1;
	and.b32  	%r688, %r1, 1;
	neg.s32 	%r689, %r688;
	and.b32  	%r690, %r689, 2080;
	mul.lo.s32 	%r691, %r186, 65;
	bfe.s32 	%r692, %r1, 2, 1;
	and.b32  	%r693, %r1, 4;
	setp.eq.s32 	%p289, %r693, 0;
	and.b32  	%r694, %r692, 520;
	bfe.s32 	%r695, %r1, 1, 1;
	and.b32  	%r696, %r1, 2;
	setp.eq.s32 	%p290, %r696, 0;
	and.b32  	%r697, %r695, 1040;
	shr.u32 	%r698, %r1, 3;
	mul.lo.s32 	%r699, %r698, 260;
	or.b32  	%r700, %r690, %r659;
	add.s32 	%r701, %r700, %r691;
	add.s32 	%r702, %r701, %r694;
	add.s32 	%r703, %r702, %r697;
	add.s32 	%r704, %r703, %r699;
	mul.wide.u32 	%rd46, %r704, 4;
	add.s64 	%rd10, %rd37, %rd46;
	cvt.u64.u32 	%rd47, %r699;
	selp.b64 	%rd48, 0, 1040, %p290;
	selp.b64 	%rd49, 0, 520, %p289;
	cvt.u64.u32 	%rd50, %r691;
	cvt.u64.u32 	%rd51, %r700;
	add.s64 	%rd52, %rd51, %rd50;
	add.s64 	%rd53, %rd52, %rd49;
	add.s64 	%rd54, %rd53, %rd48;
	add.s64 	%rd55, %rd54, %rd47;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd16, %rd37, %rd56;
	cvt.u64.u32 	%rd57, %r702;
	add.s64 	%rd58, %rd57, %rd48;
	add.s64 	%rd59, %rd58, %rd47;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd12, %rd37, %rd60;
	add.s32 	%r705, %r704, 162;
	mul.wide.u32 	%rd61, %r705, 4;
	add.s64 	%rd13, %rd37, %rd61;
	add.s32 	%r706, %r704, 131;
	mul.wide.u32 	%rd62, %r706, 4;
	add.s64 	%rd14, %rd37, %rd62;
	add.s32 	%r707, %r704, 163;
	mul.wide.u32 	%rd63, %r707, 4;
	add.s64 	%rd15, %rd37, %rd63;
	add.s32 	%r708, %r704, 4193;
	mul.wide.u32 	%rd64, %r708, 4;
	add.s64 	%rd17, %rd37, %rd64;
	add.s32 	%r709, %r704, 4162;
	mul.wide.u32 	%rd65, %r709, 4;
	add.s64 	%rd18, %rd37, %rd65;
	add.s32 	%r710, %r704, 4194;
	mul.wide.u32 	%rd66, %r710, 4;
	add.s64 	%rd19, %rd37, %rd66;
	add.s32 	%r711, %r704, 4291;
	mul.wide.u32 	%rd67, %r711, 4;
	add.s64 	%rd20, %rd37, %rd67;
	add.s32 	%r712, %r704, 4323;
	mul.wide.u32 	%rd68, %r712, 4;
	add.s64 	%rd21, %rd37, %rd68;
	add.s32 	%r713, %r704, 4292;
	mul.wide.u32 	%rd69, %r713, 4;
	add.s64 	%rd22, %rd37, %rd69;
	add.s32 	%r714, %r704, 4324;
	mul.wide.u32 	%rd70, %r714, 4;
	add.s64 	%rd23, %rd37, %rd70;
	mul.lo.s32 	%r90, %r687, 65;
	bfe.s32 	%r715, %r4, 2, 1;
	and.b32  	%r91, %r715, 260;
	add.s32 	%r92, %r75, 2080;
	add.s32 	%r93, %r76, 2080;
	add.s32 	%r94, %r77, 2080;
	add.s32 	%r95, %r78, 2080;
	mov.u32 	%r16346, 0;
	setp.eq.s32 	%p292, %r73, 0;
	mov.u16 	%rs2393, 25600;
	mov.u16 	%rs2185, 21504;
	mov.u16 	%rs2401, 18432;
	mov.u32 	%r16347, %r16346;
	mov.u32 	%r16348, %r16346;
	mov.u32 	%r16349, %r16346;
	mov.u32 	%r16350, %r16346;
	mov.u32 	%r16351, %r16346;
	mov.u32 	%r16352, %r16346;
	mov.u32 	%r16353, %r16346;
	mov.u32 	%r16354, %r16346;
	mov.u32 	%r16355, %r16346;
	mov.u32 	%r16356, %r16346;
	mov.u32 	%r16357, %r16346;
	mov.u32 	%r16358, %r16346;
	mov.u32 	%r16359, %r16346;
	mov.u32 	%r16360, %r16346;
	mov.u32 	%r16361, %r16346;
	mov.u32 	%r16362, %r16346;
	mov.u32 	%r16363, %r16346;
	mov.u32 	%r16364, %r16346;
	mov.u32 	%r16365, %r16346;
	mov.u32 	%r16366, %r16346;
	mov.u32 	%r16367, %r16346;
	mov.u32 	%r16368, %r16346;
	mov.u32 	%r16369, %r16346;
	mov.u32 	%r16370, %r16346;
	bra.uni 	$L__BB0_116;
$L__BB0_122:                            // %L70918
                                        //   in Loop: Header=BB0_116 Depth=1
	add.s32 	%r171, %r16370, 256;
	setp.ne.s32 	%p317, %r16370, 32512;
	mov.u32 	%r16370, %r171;
	@%p317 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_123;
$L__BB0_116:                            // %L2126
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	add.s32 	%r716, %r16370, %r246;
	setp.lt.s32 	%p291, %r716, %r247;
	@%p291 bra 	$L__BB0_117;
	bra.uni 	$L__BB0_123;
$L__BB0_117:                            // %pass776
                                        //   in Loop: Header=BB0_116 Depth=1
	and.b32  	%r782, %r16370, 32512;
	or.b32  	%r783, %r71, %r782;
	add.s32 	%r784, %r783, %r246;
	mad.lo.s32 	%r785, %r784, 12288, %r72;
	mul.hi.s32 	%r786, %r785, 715827883;
	shr.u32 	%r787, %r786, 31;
	shr.s32 	%r788, %r786, 26;
	add.s32 	%r789, %r788, %r787;
	setp.lt.s32 	%p293, %r785, 0;
	mul.lo.s32 	%r790, %r789, 402653184;
	setp.ne.s32 	%p294, %r790, %r785;
	and.pred  	%p295, %p293, %p294;
	selp.s32 	%r791, -1, 0, %p295;
	add.s32 	%r792, %r789, %r791;
	mad.lo.s32 	%r793, %r792, -402653184, %r785;
	mul.wide.s32 	%rd71, %r793, 4;
	add.s64 	%rd72, %rd2, %rd71;
	ld.global.v4.u32 	{%r794, %r795, %r796, %r797}, [%rd72];
	or.b32  	%r798, %r783, 16;
	add.s32 	%r799, %r798, %r246;
	mad.lo.s32 	%r800, %r799, 12288, %r72;
	mul.hi.s32 	%r801, %r800, 715827883;
	shr.u32 	%r802, %r801, 31;
	shr.s32 	%r803, %r801, 26;
	add.s32 	%r804, %r803, %r802;
	setp.lt.s32 	%p296, %r800, 0;
	mul.lo.s32 	%r805, %r804, 402653184;
	setp.ne.s32 	%p297, %r805, %r800;
	and.pred  	%p298, %p296, %p297;
	selp.s32 	%r806, -1, 0, %p298;
	add.s32 	%r807, %r804, %r806;
	mad.lo.s32 	%r808, %r807, -402653184, %r800;
	mul.wide.s32 	%rd73, %r808, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r809, %r810, %r811, %r812}, [%rd74];
	or.b32  	%r813, %r783, 128;
	add.s32 	%r814, %r813, %r246;
	mad.lo.s32 	%r815, %r814, 12288, %r72;
	mul.hi.s32 	%r816, %r815, 715827883;
	shr.u32 	%r817, %r816, 31;
	shr.s32 	%r818, %r816, 26;
	add.s32 	%r819, %r818, %r817;
	setp.lt.s32 	%p299, %r815, 0;
	mul.lo.s32 	%r820, %r819, 402653184;
	setp.ne.s32 	%p300, %r820, %r815;
	and.pred  	%p301, %p299, %p300;
	selp.s32 	%r821, -1, 0, %p301;
	add.s32 	%r822, %r819, %r821;
	mad.lo.s32 	%r823, %r822, -402653184, %r815;
	mul.wide.s32 	%rd75, %r823, 4;
	add.s64 	%rd76, %rd2, %rd75;
	ld.global.v4.u32 	{%r824, %r825, %r826, %r827}, [%rd76];
	or.b32  	%r828, %r783, 144;
	add.s32 	%r829, %r828, %r246;
	mad.lo.s32 	%r830, %r829, 12288, %r72;
	mul.hi.s32 	%r831, %r830, 715827883;
	shr.u32 	%r832, %r831, 31;
	shr.s32 	%r833, %r831, 26;
	add.s32 	%r834, %r833, %r832;
	setp.lt.s32 	%p302, %r830, 0;
	mul.lo.s32 	%r835, %r834, 402653184;
	setp.ne.s32 	%p303, %r835, %r830;
	and.pred  	%p304, %p302, %p303;
	selp.s32 	%r836, -1, 0, %p304;
	add.s32 	%r837, %r834, %r836;
	mad.lo.s32 	%r838, %r837, -402653184, %r830;
	mul.wide.s32 	%rd77, %r838, 4;
	add.s64 	%rd78, %rd2, %rd77;
	ld.global.v4.u32 	{%r839, %r840, %r841, %r842}, [%rd78];
	selp.b32 	%r843, %r796, %r794, %p292;
	shfl.sync.bfly.b32	%r844, %r843, 8, 31, -1;
	selp.b32 	%r718, %r794, %r844, %p292;
	selp.b32 	%r719, %r844, %r796, %p292;
	selp.b32 	%r845, %r797, %r795, %p292;
	shfl.sync.bfly.b32	%r846, %r845, 8, 31, -1;
	selp.b32 	%r726, %r795, %r846, %p292;
	selp.b32 	%r727, %r846, %r797, %p292;
	selp.b32 	%r847, %r811, %r809, %p292;
	shfl.sync.bfly.b32	%r848, %r847, 8, 31, -1;
	selp.b32 	%r734, %r809, %r848, %p292;
	selp.b32 	%r735, %r848, %r811, %p292;
	selp.b32 	%r849, %r812, %r810, %p292;
	shfl.sync.bfly.b32	%r850, %r849, 8, 31, -1;
	selp.b32 	%r742, %r810, %r850, %p292;
	selp.b32 	%r743, %r850, %r812, %p292;
	selp.b32 	%r851, %r826, %r824, %p292;
	shfl.sync.bfly.b32	%r852, %r851, 8, 31, -1;
	selp.b32 	%r750, %r824, %r852, %p292;
	selp.b32 	%r751, %r852, %r826, %p292;
	selp.b32 	%r853, %r827, %r825, %p292;
	shfl.sync.bfly.b32	%r854, %r853, 8, 31, -1;
	selp.b32 	%r758, %r825, %r854, %p292;
	selp.b32 	%r759, %r854, %r827, %p292;
	selp.b32 	%r855, %r841, %r839, %p292;
	shfl.sync.bfly.b32	%r856, %r855, 8, 31, -1;
	selp.b32 	%r766, %r839, %r856, %p292;
	selp.b32 	%r767, %r856, %r841, %p292;
	selp.b32 	%r857, %r842, %r840, %p292;
	shfl.sync.bfly.b32	%r858, %r857, 8, 31, -1;
	selp.b32 	%r774, %r840, %r858, %p292;
	selp.b32 	%r775, %r858, %r842, %p292;
	mov.u32 	%r776, 21520;
	// begin inline asm
	prmt.b32 %r717, %r718, %r719, %r776;
	// end inline asm
	mov.u32 	%r780, 30258;
	// begin inline asm
	prmt.b32 %r721, %r718, %r719, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r725, %r726, %r727, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r729, %r726, %r727, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r733, %r734, %r735, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r737, %r734, %r735, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r741, %r742, %r743, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r745, %r742, %r743, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r749, %r750, %r751, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r753, %r750, %r751, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r757, %r758, %r759, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r761, %r758, %r759, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r765, %r766, %r767, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r769, %r766, %r767, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r773, %r774, %r775, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r777, %r774, %r775, %r780;
	// end inline asm
	st.shared.u32 	[%rd10], %r717;
	st.shared.u32 	[%rd16+128], %r721;
	st.shared.u32 	[%rd16+4], %r725;
	st.shared.u32 	[%rd16+132], %r729;
	st.shared.u32 	[%rd12+520], %r733;
	st.shared.u32 	[%rd13], %r737;
	st.shared.u32 	[%rd14], %r741;
	st.shared.u32 	[%rd15], %r745;
	st.shared.u32 	[%rd16+16644], %r749;
	st.shared.u32 	[%rd17], %r753;
	st.shared.u32 	[%rd18], %r757;
	st.shared.u32 	[%rd19], %r761;
	st.shared.u32 	[%rd20], %r765;
	st.shared.u32 	[%rd21], %r769;
	st.shared.u32 	[%rd22], %r773;
	st.shared.u32 	[%rd23], %r777;
	bar.sync 	0;
	or.b32  	%r223, %r74, %r16370;
	mov.u32 	%r781, 0;
	mov.u32 	%r16395, %r781;
$L__BB0_118:                            // %L13713
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16123, %r223, %r16395;
	bfe.s32 	%r16124, %r16123, 7, 1;
	and.b32  	%r16125, %r16124, 4161;
	bfe.s32 	%r16126, %r16123, 2, 1;
	and.b32  	%r16127, %r16126, 520;
	bfe.s32 	%r16128, %r16123, 4, 1;
	and.b32  	%r16129, %r16128, 130;
	bfe.s32 	%r16130, %r16123, 1, 1;
	and.b32  	%r16131, %r16130, 1040;
	add.s32 	%r16132, %r75, %r16125;
	add.s32 	%r16133, %r16132, %r90;
	add.s32 	%r16134, %r16133, %r16127;
	add.s32 	%r16135, %r16134, %r16129;
	add.s32 	%r16136, %r16135, %r16131;
	add.s32 	%r16137, %r16136, %r91;
	mul.wide.u32 	%rd79, %r16137, 4;
	add.s64 	%rd81, %rd37, %rd79;
	ld.shared.u32 	%r16138, [%rd81];
	add.s32 	%r16139, %r76, %r16125;
	add.s32 	%r16140, %r16139, %r90;
	add.s32 	%r16141, %r16140, %r16127;
	add.s32 	%r16142, %r16141, %r16129;
	add.s32 	%r16143, %r16142, %r16131;
	add.s32 	%r16144, %r16143, %r91;
	mul.wide.u32 	%rd82, %r16144, 4;
	add.s64 	%rd83, %rd37, %rd82;
	ld.shared.u32 	%r16145, [%rd83];
	add.s32 	%r16146, %r77, %r16125;
	add.s32 	%r16147, %r16146, %r90;
	add.s32 	%r16148, %r16147, %r16127;
	add.s32 	%r16149, %r16148, %r16129;
	add.s32 	%r16150, %r16149, %r16131;
	add.s32 	%r16151, %r16150, %r91;
	mul.wide.u32 	%rd84, %r16151, 4;
	add.s64 	%rd85, %rd37, %rd84;
	ld.shared.u32 	%r16152, [%rd85];
	add.s32 	%r16153, %r78, %r16125;
	add.s32 	%r16154, %r16153, %r90;
	add.s32 	%r16155, %r16154, %r16127;
	add.s32 	%r16156, %r16155, %r16129;
	add.s32 	%r16157, %r16156, %r16131;
	add.s32 	%r16158, %r16157, %r91;
	mul.wide.u32 	%rd86, %r16158, 4;
	add.s64 	%rd87, %rd37, %rd86;
	ld.shared.u32 	%r16159, [%rd87];
	or.b32  	%r16160, %r79, %r16395;
	or.b32  	%r16161, %r16160, 1;
	add.s32 	%r16162, %r16161, %r16370;
	or.b32  	%r16163, %r16162, %r172;
	bfe.s32 	%r16164, %r16162, 7, 1;
	and.b32  	%r16165, %r16164, 4161;
	bfe.s32 	%r16166, %r16162, 5, 1;
	and.b32  	%r16167, %r16166, 65;
	bfe.s32 	%r16168, %r16162, 2, 1;
	and.b32  	%r16169, %r16168, 520;
	bfe.s32 	%r16170, %r16162, 4, 1;
	and.b32  	%r16171, %r16170, 130;
	bfe.s32 	%r16172, %r16162, 1, 1;
	and.b32  	%r16173, %r16172, 1040;
	bfe.s32 	%r16174, %r16163, 3, 1;
	and.b32  	%r16175, %r16174, 260;
	add.s32 	%r16176, %r92, %r16165;
	add.s32 	%r16177, %r16176, %r16167;
	add.s32 	%r16178, %r16177, %r16169;
	add.s32 	%r16179, %r16178, %r16171;
	add.s32 	%r16180, %r16179, %r16173;
	add.s32 	%r16181, %r16180, %r16175;
	mul.wide.u32 	%rd88, %r16181, 4;
	add.s64 	%rd89, %rd37, %rd88;
	ld.shared.u32 	%r16182, [%rd89];
	add.s32 	%r16183, %r93, %r16165;
	add.s32 	%r16184, %r16183, %r16167;
	add.s32 	%r16185, %r16184, %r16169;
	add.s32 	%r16186, %r16185, %r16171;
	add.s32 	%r16187, %r16186, %r16173;
	add.s32 	%r16188, %r16187, %r16175;
	mul.wide.u32 	%rd90, %r16188, 4;
	add.s64 	%rd91, %rd37, %rd90;
	ld.shared.u32 	%r16189, [%rd91];
	add.s32 	%r16190, %r94, %r16165;
	add.s32 	%r16191, %r16190, %r16167;
	add.s32 	%r16192, %r16191, %r16169;
	add.s32 	%r16193, %r16192, %r16171;
	add.s32 	%r16194, %r16193, %r16173;
	add.s32 	%r16195, %r16194, %r16175;
	mul.wide.u32 	%rd92, %r16195, 4;
	add.s64 	%rd93, %rd37, %rd92;
	ld.shared.u32 	%r16196, [%rd93];
	add.s32 	%r16197, %r95, %r16165;
	add.s32 	%r16198, %r16197, %r16167;
	add.s32 	%r16199, %r16198, %r16169;
	add.s32 	%r16200, %r16199, %r16171;
	add.s32 	%r16201, %r16200, %r16173;
	add.s32 	%r16202, %r16201, %r16175;
	mul.wide.u32 	%rd94, %r16202, 4;
	add.s64 	%rd95, %rd37, %rd94;
	ld.shared.u32 	%r16203, [%rd95];
	// begin inline asm
	mov.b32 %r864, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r863, %r16138, -2004318072;
	mov.u32 	%r862, 983055;
	// begin inline asm
	lop3.b32 %r861, %r862, %r863, %r864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r866, %r864, %r865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r869, %r861, %r866;
	// end inline asm
	mov.u32 	%r873, 15728880;
	// begin inline asm
	lop3.b32 %r872, %r873, %r863, %r875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r876, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r877, %r875, %r876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r880, %r872, %r877;
	// end inline asm
	shr.u32 	%r885, %r863, 8;
	// begin inline asm
	lop3.b32 %r883, %r862, %r885, %r864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r887, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r888, %r864, %r887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r891, %r883, %r888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r894, %r873, %r885, %r875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r899, %r875, %r898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r902, %r894, %r899;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r909, %r16145, -2004318072;
	// begin inline asm
	lop3.b32 %r907, %r862, %r909, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r912, %r910, %r911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r915, %r907, %r912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r918, %r873, %r909, %r921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r921, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	shr.u32 	%r931, %r909, 8;
	// begin inline asm
	lop3.b32 %r929, %r862, %r931, %r910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r910, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r940, %r873, %r931, %r921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r921, %r944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r948, %r940, %r945;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r955, %r16152, -2004318072;
	// begin inline asm
	lop3.b32 %r953, %r862, %r955, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r958, %r956, %r957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r961, %r953, %r958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r964, %r873, %r955, %r967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r967, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	shr.u32 	%r977, %r955, 8;
	// begin inline asm
	lop3.b32 %r975, %r862, %r977, %r956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r956, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r986, %r873, %r977, %r967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r991, %r967, %r990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r994, %r986, %r991;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1001, %r16159, -2004318072;
	// begin inline asm
	lop3.b32 %r999, %r862, %r1001, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1004, %r1002, %r1003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1007, %r999, %r1004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1010, %r873, %r1001, %r1013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r1013, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	shr.u32 	%r1023, %r1001, 8;
	// begin inline asm
	lop3.b32 %r1021, %r862, %r1023, %r1002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1002, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1032, %r873, %r1023, %r1013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1037, %r1013, %r1036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1040, %r1032, %r1037;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1047, %r16182, -2004318072;
	// begin inline asm
	lop3.b32 %r1045, %r862, %r1047, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1050, %r1048, %r1049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1053, %r1045, %r1050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1056, %r873, %r1047, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1059, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	shr.u32 	%r1069, %r1047, 8;
	// begin inline asm
	lop3.b32 %r1067, %r862, %r1069, %r1048, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1048, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1078, %r873, %r1069, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1059, %r1082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1086, %r1078, %r1083;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1093, %r16189, -2004318072;
	// begin inline asm
	lop3.b32 %r1091, %r862, %r1093, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1094, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1102, %r873, %r1093, %r1105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1105, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	shr.u32 	%r1115, %r1093, 8;
	// begin inline asm
	lop3.b32 %r1113, %r862, %r1115, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1094, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1124, %r873, %r1115, %r1105, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1128, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1129, %r1105, %r1128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1132, %r1124, %r1129;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1139, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1137, %r862, %r1139, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1140, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1148, %r873, %r1139, %r1151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1151, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	shr.u32 	%r1161, %r1139, 8;
	// begin inline asm
	lop3.b32 %r1159, %r862, %r1161, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1140, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1170, %r873, %r1161, %r1151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1175, %r1151, %r1174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1178, %r1170, %r1175;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1185, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1183, %r862, %r1185, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1187, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1188, %r1186, %r1187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1191, %r1183, %r1188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1194, %r873, %r1185, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1199, %r1197, %r1198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1202, %r1194, %r1199;
	// end inline asm
	shr.u32 	%r1207, %r1185, 8;
	// begin inline asm
	lop3.b32 %r1205, %r862, %r1207, %r1186, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1210, %r1186, %r1209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1213, %r1205, %r1210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1216, %r873, %r1207, %r1197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1221, %r1197, %r1220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1224, %r1216, %r1221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1229, %r1227, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1064;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1099;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1369, %r1367, %r1191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r1377, %r1213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1382, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1384, %r1382, %r1224;
	// end inline asm
	// begin inline asm
	mov.b32 %r1392, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1391, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r1389, %r862, %r1391, %r1392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1393, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1394, %r1392, %r1393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1397, %r1389, %r1394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1400, %r873, %r1391, %r1403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1404, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1405, %r1403, %r1404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1408, %r1400, %r1405;
	// end inline asm
	shr.u32 	%r1413, %r1391, 8;
	// begin inline asm
	lop3.b32 %r1411, %r862, %r1413, %r1392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1416, %r1392, %r1415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1419, %r1411, %r1416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1422, %r873, %r1413, %r1403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1427, %r1403, %r1426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1430, %r1422, %r1427;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1437, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r1435, %r862, %r1437, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1438, %r1439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1443, %r1435, %r1440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1446, %r873, %r1437, %r1449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1449, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	shr.u32 	%r1459, %r1437, 8;
	// begin inline asm
	lop3.b32 %r1457, %r862, %r1459, %r1438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1438, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1468, %r873, %r1459, %r1449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1449, %r1472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1476, %r1468, %r1473;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1483, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r1481, %r862, %r1483, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1484, %r1485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1489, %r1481, %r1486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1492, %r873, %r1483, %r1495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1495, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	shr.u32 	%r1505, %r1483, 8;
	// begin inline asm
	lop3.b32 %r1503, %r862, %r1505, %r1484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1484, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1514, %r873, %r1505, %r1495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1519, %r1495, %r1518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1522, %r1514, %r1519;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1529, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r1527, %r862, %r1529, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1532, %r1530, %r1531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1535, %r1527, %r1532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1538, %r873, %r1529, %r1541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1541, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	shr.u32 	%r1551, %r1529, 8;
	// begin inline asm
	lop3.b32 %r1549, %r862, %r1551, %r1530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1530, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1560, %r873, %r1551, %r1541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1565, %r1541, %r1564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1568, %r1560, %r1565;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1575, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r1573, %r862, %r1575, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1578, %r1576, %r1577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1581, %r1573, %r1578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1584, %r873, %r1575, %r1587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1587, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	shr.u32 	%r1597, %r1575, 8;
	// begin inline asm
	lop3.b32 %r1595, %r862, %r1597, %r1576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1576, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1606, %r873, %r1597, %r1587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1610, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1611, %r1587, %r1610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1614, %r1606, %r1611;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1621, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r1619, %r862, %r1621, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1624, %r1622, %r1623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1627, %r1619, %r1624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1630, %r873, %r1621, %r1633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1635, %r1633, %r1634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1638, %r1630, %r1635;
	// end inline asm
	shr.u32 	%r1643, %r1621, 8;
	// begin inline asm
	lop3.b32 %r1641, %r862, %r1643, %r1622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1646, %r1622, %r1645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1649, %r1641, %r1646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1652, %r873, %r1643, %r1633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1656, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1657, %r1633, %r1656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1660, %r1652, %r1657;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1667, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r1665, %r862, %r1667, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1668, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1676, %r873, %r1667, %r1679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1679, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	shr.u32 	%r1689, %r1667, 8;
	// begin inline asm
	lop3.b32 %r1687, %r862, %r1689, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1668, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1698, %r873, %r1689, %r1679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1702, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1703, %r1679, %r1702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1706, %r1698, %r1703;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1725, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1713, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r1711, %r862, %r1713, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1714, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1722, %r873, %r1713, %r1725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1727, %r1725, %r1726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1730, %r1722, %r1727;
	// end inline asm
	shr.u32 	%r1735, %r1713, 8;
	// begin inline asm
	lop3.b32 %r1733, %r862, %r1735, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1738, %r1714, %r1737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1741, %r1733, %r1738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1744, %r873, %r1735, %r1725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1748, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1749, %r1725, %r1748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1752, %r1744, %r1749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r292, %r1397, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r292, %r1408, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r292, %r1419, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r292, %r1430, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r292, %r1443, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r292, %r1454, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r292, %r1465, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r292, %r1476, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r292, %r1489, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r292, %r1500, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r292, %r1511, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r292, %r1522, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r292, %r1535, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r292, %r1546, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r292, %r1557, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r292, %r1568, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r310, %r1581, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r310, %r1592, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r310, %r1603, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r310, %r1614, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r310, %r1627, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r310, %r1638, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r310, %r1649, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r310, %r1660, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r310, %r1673, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r310, %r1684, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r310, %r1695, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r310, %r1706, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r310, %r1719, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r310, %r1730, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r310, %r1741, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r310, %r1752, %r1384;
	// end inline asm
	// begin inline asm
	mov.b32 %r1888, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1899, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1887, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r1885, %r862, %r1887, %r1888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1889, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1890, %r1888, %r1889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1893, %r1885, %r1890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1896, %r873, %r1887, %r1899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1900, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1901, %r1899, %r1900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1904, %r1896, %r1901;
	// end inline asm
	shr.u32 	%r1909, %r1887, 8;
	// begin inline asm
	lop3.b32 %r1907, %r862, %r1909, %r1888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1912, %r1888, %r1911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1915, %r1907, %r1912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1918, %r873, %r1909, %r1899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1922, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1923, %r1899, %r1922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1926, %r1918, %r1923;
	// end inline asm
	// begin inline asm
	mov.b32 %r1934, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1945, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1933, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r1931, %r862, %r1933, %r1934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1936, %r1934, %r1935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1939, %r1931, %r1936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1942, %r873, %r1933, %r1945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1947, %r1945, %r1946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1950, %r1942, %r1947;
	// end inline asm
	shr.u32 	%r1955, %r1933, 8;
	// begin inline asm
	lop3.b32 %r1953, %r862, %r1955, %r1934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1958, %r1934, %r1957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1961, %r1953, %r1958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1964, %r873, %r1955, %r1945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1969, %r1945, %r1968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1972, %r1964, %r1969;
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r1979, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r1977, %r862, %r1979, %r1980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1982, %r1980, %r1981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1985, %r1977, %r1982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1988, %r873, %r1979, %r1991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1993, %r1991, %r1992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1996, %r1988, %r1993;
	// end inline asm
	shr.u32 	%r2001, %r1979, 8;
	// begin inline asm
	lop3.b32 %r1999, %r862, %r2001, %r1980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2004, %r1980, %r2003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2007, %r1999, %r2004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2010, %r873, %r2001, %r1991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2015, %r1991, %r2014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2018, %r2010, %r2015;
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2037, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2025, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r2023, %r862, %r2025, %r2026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2028, %r2026, %r2027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2031, %r2023, %r2028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2034, %r873, %r2025, %r2037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2039, %r2037, %r2038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2042, %r2034, %r2039;
	// end inline asm
	shr.u32 	%r2047, %r2025, 8;
	// begin inline asm
	lop3.b32 %r2045, %r862, %r2047, %r2026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2050, %r2026, %r2049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2053, %r2045, %r2050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2056, %r873, %r2047, %r2037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2061, %r2037, %r2060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2064, %r2056, %r2061;
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2071, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r2069, %r862, %r2071, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2074, %r2072, %r2073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2077, %r2069, %r2074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2080, %r873, %r2071, %r2083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2085, %r2083, %r2084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2088, %r2080, %r2085;
	// end inline asm
	shr.u32 	%r2093, %r2071, 8;
	// begin inline asm
	lop3.b32 %r2091, %r862, %r2093, %r2072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2096, %r2072, %r2095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2099, %r2091, %r2096;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2102, %r873, %r2093, %r2083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2106, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2107, %r2083, %r2106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2110, %r2102, %r2107;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2117, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r2115, %r862, %r2117, %r2118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2120, %r2118, %r2119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2123, %r2115, %r2120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2126, %r873, %r2117, %r2129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2131, %r2129, %r2130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2134, %r2126, %r2131;
	// end inline asm
	shr.u32 	%r2139, %r2117, 8;
	// begin inline asm
	lop3.b32 %r2137, %r862, %r2139, %r2118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2142, %r2118, %r2141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2145, %r2137, %r2142;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2148, %r873, %r2139, %r2129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2153, %r2129, %r2152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2156, %r2148, %r2153;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2163, %r16364, -2004318072;
	// begin inline asm
	lop3.b32 %r2161, %r862, %r2163, %r2164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2166, %r2164, %r2165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2169, %r2161, %r2166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2172, %r873, %r2163, %r2175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2177, %r2175, %r2176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2180, %r2172, %r2177;
	// end inline asm
	shr.u32 	%r2185, %r2163, 8;
	// begin inline asm
	lop3.b32 %r2183, %r862, %r2185, %r2164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2188, %r2164, %r2187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2191, %r2183, %r2188;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2194, %r873, %r2185, %r2175, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2199, %r2175, %r2198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2202, %r2194, %r2199;
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2209, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r2207, %r862, %r2209, %r2210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2211, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2212, %r2210, %r2211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2215, %r2207, %r2212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2218, %r873, %r2209, %r2221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2223, %r2221, %r2222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2226, %r2218, %r2223;
	// end inline asm
	shr.u32 	%r2231, %r2209, 8;
	// begin inline asm
	lop3.b32 %r2229, %r862, %r2231, %r2210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2234, %r2210, %r2233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2237, %r2229, %r2234;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2240, %r873, %r2231, %r2221, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2244, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2245, %r2221, %r2244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2248, %r2240, %r2245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2251, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2253, %r2251, %r1893, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2257, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2259, %r2257, %r1904, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2263, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2265, %r2263, %r1915, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2269, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2271, %r2269, %r1926, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2275, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2277, %r2275, %r1939, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2281, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2283, %r2281, %r1950, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2287, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2289, %r2287, %r1961, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2293, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2295, %r2293, %r1972, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2299, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2301, %r2299, %r1985, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2305, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2307, %r2305, %r1996, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2311, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2313, %r2311, %r2007, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2317, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2319, %r2317, %r2018, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2323, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2325, %r2323, %r2031, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2329, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2331, %r2329, %r2042, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2335, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2337, %r2335, %r2053, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2341, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2343, %r2341, %r2064, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2347, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2349, %r2347, %r2077, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2353, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2355, %r2353, %r2088, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2359, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2361, %r2359, %r2099, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2365, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2367, %r2365, %r2110, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2371, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2373, %r2371, %r2123, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2377, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2379, %r2377, %r2134, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2383, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2385, %r2383, %r2145, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2389, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2391, %r2389, %r2156, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2395, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2397, %r2395, %r2169, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2401, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2403, %r2401, %r2180, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2407, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2409, %r2407, %r2191, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2413, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2415, %r2413, %r2202, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2419, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2421, %r2419, %r2215, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2425, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2427, %r2425, %r2226, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2431, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2433, %r2431, %r2237, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2437, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2439, %r2437, %r2248, %r1879;
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2447, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r2445, %r862, %r2447, %r2448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2449, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2450, %r2448, %r2449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2453, %r2445, %r2450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2456, %r873, %r2447, %r2459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2460, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2461, %r2459, %r2460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2464, %r2456, %r2461;
	// end inline asm
	shr.u32 	%r2469, %r2447, 8;
	// begin inline asm
	lop3.b32 %r2467, %r862, %r2469, %r2448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2472, %r2448, %r2471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2475, %r2467, %r2472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2478, %r873, %r2469, %r2459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2483, %r2459, %r2482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2486, %r2478, %r2483;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2493, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r2491, %r862, %r2493, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2496, %r2494, %r2495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2499, %r2491, %r2496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2502, %r873, %r2493, %r2505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2507, %r2505, %r2506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2510, %r2502, %r2507;
	// end inline asm
	shr.u32 	%r2515, %r2493, 8;
	// begin inline asm
	lop3.b32 %r2513, %r862, %r2515, %r2494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2518, %r2494, %r2517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2521, %r2513, %r2518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2524, %r873, %r2515, %r2505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2528, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2529, %r2505, %r2528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2532, %r2524, %r2529;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2539, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r2537, %r862, %r2539, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2542, %r2540, %r2541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2545, %r2537, %r2542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2548, %r873, %r2539, %r2551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2553, %r2551, %r2552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2556, %r2548, %r2553;
	// end inline asm
	shr.u32 	%r2561, %r2539, 8;
	// begin inline asm
	lop3.b32 %r2559, %r862, %r2561, %r2540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2564, %r2540, %r2563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2567, %r2559, %r2564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2570, %r873, %r2561, %r2551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2574, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2575, %r2551, %r2574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2578, %r2570, %r2575;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2585, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r2583, %r862, %r2585, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2588, %r2586, %r2587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2591, %r2583, %r2588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2594, %r873, %r2585, %r2597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2599, %r2597, %r2598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2602, %r2594, %r2599;
	// end inline asm
	shr.u32 	%r2607, %r2585, 8;
	// begin inline asm
	lop3.b32 %r2605, %r862, %r2607, %r2586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2610, %r2586, %r2609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2613, %r2605, %r2610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2616, %r873, %r2607, %r2597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2621, %r2597, %r2620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2624, %r2616, %r2621;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2631, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r2629, %r862, %r2631, %r2632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2634, %r2632, %r2633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2637, %r2629, %r2634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2640, %r873, %r2631, %r2643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2645, %r2643, %r2644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2648, %r2640, %r2645;
	// end inline asm
	shr.u32 	%r2653, %r2631, 8;
	// begin inline asm
	lop3.b32 %r2651, %r862, %r2653, %r2632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2656, %r2632, %r2655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2659, %r2651, %r2656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2662, %r873, %r2653, %r2643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2666, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2667, %r2643, %r2666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2670, %r2662, %r2667;
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2677, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r2675, %r862, %r2677, %r2678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2680, %r2678, %r2679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2683, %r2675, %r2680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2686, %r873, %r2677, %r2689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2691, %r2689, %r2690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2694, %r2686, %r2691;
	// end inline asm
	shr.u32 	%r2699, %r2677, 8;
	// begin inline asm
	lop3.b32 %r2697, %r862, %r2699, %r2678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2702, %r2678, %r2701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2705, %r2697, %r2702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2708, %r873, %r2699, %r2689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2713, %r2689, %r2712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2716, %r2708, %r2713;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2723, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r2721, %r862, %r2723, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2726, %r2724, %r2725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2729, %r2721, %r2726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2732, %r873, %r2723, %r2735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2737, %r2735, %r2736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2740, %r2732, %r2737;
	// end inline asm
	shr.u32 	%r2745, %r2723, 8;
	// begin inline asm
	lop3.b32 %r2743, %r862, %r2745, %r2724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2748, %r2724, %r2747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2751, %r2743, %r2748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2754, %r873, %r2745, %r2735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2759, %r2735, %r2758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2762, %r2754, %r2759;
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r2781, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r2769, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r2767, %r862, %r2769, %r2770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2771, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2772, %r2770, %r2771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2775, %r2767, %r2772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2778, %r873, %r2769, %r2781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2782, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2783, %r2781, %r2782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2786, %r2778, %r2783;
	// end inline asm
	shr.u32 	%r2791, %r2769, 8;
	// begin inline asm
	lop3.b32 %r2789, %r862, %r2791, %r2770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2794, %r2770, %r2793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2797, %r2789, %r2794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2800, %r873, %r2791, %r2781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2804, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2805, %r2781, %r2804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2808, %r2800, %r2805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r364, %r2453, %r2253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r364, %r2464, %r2259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r364, %r2475, %r2265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r364, %r2486, %r2271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r364, %r2499, %r2277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r364, %r2510, %r2283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r364, %r2521, %r2289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r364, %r2532, %r2295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r364, %r2545, %r2301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r364, %r2556, %r2307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r364, %r2567, %r2313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r364, %r2578, %r2319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r364, %r2591, %r2325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r364, %r2602, %r2331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r364, %r2613, %r2337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r364, %r2624, %r2343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r382, %r2637, %r2349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r382, %r2648, %r2355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r382, %r2659, %r2361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r382, %r2670, %r2367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r382, %r2683, %r2373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r382, %r2694, %r2379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r382, %r2705, %r2385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r382, %r2716, %r2391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r382, %r2729, %r2397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r382, %r2740, %r2403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3063, %r382, %r2751, %r2409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3060, %r382, %r2762, %r2415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r382, %r2775, %r2421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r382, %r2786, %r2427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r382, %r2797, %r2433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r382, %r2808, %r2439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2939, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2941, %r2939, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r421, %r2946, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2948, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2950, %r2948, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r421, %r2955, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2957, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2959, %r2957, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r421, %r2964, %r2959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2966, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2968, %r2966, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r421, %r2973, %r2968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2975, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2977, %r2975, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r421, %r2982, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2984, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2986, %r2984, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r421, %r2991, %r2986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2993, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2995, %r2993, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r421, %r3000, %r2995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3002, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3004, %r3002, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r421, %r3009, %r3004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3011, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3013, %r3011, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r424, %r3018, %r3013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3020, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r3020, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r424, %r3027, %r3022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3031, %r3029, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r424, %r3036, %r3031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3038, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r3038, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r424, %r3045, %r3040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3047, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3049, %r3047, %r3051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r424, %r3054, %r3049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3056, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3058, %r3056, %r3060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r424, %r3063, %r3058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3065, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3067, %r3065, %r3069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r424, %r3072, %r3067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3074, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3076, %r3074, %r3078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r424, %r3081, %r3076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3083, %r427, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r421, %r2943, %r3083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3090, %r427, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r421, %r2952, %r3090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3097, %r427, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r421, %r2961, %r3097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3104, %r427, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r421, %r2970, %r3104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3111, %r427, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3114, %r421, %r2979, %r3111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3118, %r427, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r421, %r2988, %r3118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3125, %r427, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r421, %r2997, %r3125;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3132, %r427, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3135, %r421, %r3006, %r3132;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3139, %r430, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r424, %r3015, %r3139;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3146, %r430, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3149, %r424, %r3024, %r3146;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3153, %r430, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3156, %r424, %r3033, %r3153;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3160, %r430, %r3045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3163, %r424, %r3042, %r3160;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3167, %r430, %r3054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3170, %r424, %r3051, %r3167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3174, %r430, %r3063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3177, %r424, %r3060, %r3174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3181, %r430, %r3072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3184, %r424, %r3069, %r3181;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3188, %r430, %r3081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3191, %r424, %r3078, %r3188;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3362, %r3359}, {%r488, %r494, %r491, %r497}, {%r2944, %r3086}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3371, %r3368}, {%r488, %r494, %r491, %r497}, {%r2953, %r3093}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3380, %r3377}, {%r488, %r494, %r491, %r497}, {%r2962, %r3100}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3389, %r3386}, {%r488, %r494, %r491, %r497}, {%r2971, %r3107}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3398, %r3395}, {%r488, %r494, %r491, %r497}, {%r2980, %r3114}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3407, %r3404}, {%r488, %r494, %r491, %r497}, {%r2989, %r3121}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3416, %r3413}, {%r488, %r494, %r491, %r497}, {%r2998, %r3128}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3425, %r3422}, {%r488, %r494, %r491, %r497}, {%r3007, %r3135}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3434, %r3431}, {%r488, %r494, %r491, %r497}, {%r3016, %r3142}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3443, %r3440}, {%r488, %r494, %r491, %r497}, {%r3025, %r3149}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3452, %r3449}, {%r488, %r494, %r491, %r497}, {%r3034, %r3156}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3461, %r3458}, {%r488, %r494, %r491, %r497}, {%r3043, %r3163}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3470, %r3467}, {%r488, %r494, %r491, %r497}, {%r3052, %r3170}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3479, %r3476}, {%r488, %r494, %r491, %r497}, {%r3061, %r3177}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3488, %r3485}, {%r488, %r494, %r491, %r497}, {%r3070, %r3184}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3497, %r3494}, {%r488, %r494, %r491, %r497}, {%r3079, %r3191}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3355, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3357, %r3355, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3360, %r538, %r3362, %r3357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3364, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3366, %r3364, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3369, %r538, %r3371, %r3366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r538, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r538, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r538, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r538, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r538, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r538, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r538, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3436, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r3436, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r538, %r3443, %r3438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3445, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r3445, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r538, %r3452, %r3447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3454, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r3454, %r3458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r538, %r3461, %r3456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3463, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3465, %r3463, %r3467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r538, %r3470, %r3465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3472, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r3472, %r3476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r538, %r3479, %r3474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3481, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3483, %r3481, %r3485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r538, %r3488, %r3483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3490, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3492, %r3490, %r3494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r538, %r3497, %r3492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3499, %r541, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r538, %r3359, %r3499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3506, %r541, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r538, %r3368, %r3506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3513, %r541, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3516, %r538, %r3377, %r3513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3520, %r541, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r538, %r3386, %r3520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3527, %r541, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3530, %r538, %r3395, %r3527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3534, %r541, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r538, %r3404, %r3534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3541, %r541, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3544, %r538, %r3413, %r3541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3548, %r541, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3551, %r538, %r3422, %r3548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3555, %r541, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3558, %r538, %r3431, %r3555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3562, %r541, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3565, %r538, %r3440, %r3562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3569, %r541, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3572, %r538, %r3449, %r3569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3576, %r541, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3579, %r538, %r3458, %r3576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3583, %r541, %r3470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3586, %r538, %r3467, %r3583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3590, %r541, %r3479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3593, %r538, %r3476, %r3590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3597, %r541, %r3488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3600, %r538, %r3485, %r3597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3604, %r541, %r3497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3607, %r538, %r3494, %r3604;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3900, %r3903}, {%r576, %r582, %r579, %r585}, {%r3360, %r3502}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3906, %r3909}, {%r576, %r582, %r579, %r585}, {%r3369, %r3509}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3912, %r3915}, {%r576, %r582, %r579, %r585}, {%r3378, %r3516}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3918, %r3921}, {%r576, %r582, %r579, %r585}, {%r3387, %r3523}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3924, %r3927}, {%r576, %r582, %r579, %r585}, {%r3396, %r3530}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3930, %r3933}, {%r576, %r582, %r579, %r585}, {%r3405, %r3537}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3936, %r3939}, {%r576, %r582, %r579, %r585}, {%r3414, %r3544}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3942, %r3945}, {%r576, %r582, %r579, %r585}, {%r3423, %r3551}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3901, %r3904}, {%r576, %r582, %r579, %r585}, {%r3432, %r3558}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3907, %r3910}, {%r576, %r582, %r579, %r585}, {%r3441, %r3565}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3913, %r3916}, {%r576, %r582, %r579, %r585}, {%r3450, %r3572}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3919, %r3922}, {%r576, %r582, %r579, %r585}, {%r3459, %r3579}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3925, %r3928}, {%r576, %r582, %r579, %r585}, {%r3468, %r3586}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3931, %r3934}, {%r576, %r582, %r579, %r585}, {%r3477, %r3593}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3937, %r3940}, {%r576, %r582, %r579, %r585}, {%r3486, %r3600}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3943, %r3946}, {%r576, %r582, %r579, %r585}, {%r3495, %r3607}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3899, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3902, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3905, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3908, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3911, %r3912, %r3913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3914, %r3915, %r3916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3917, %r3918, %r3919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3920, %r3921, %r3922;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3923, %r3924, %r3925;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3926, %r3927, %r3928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3929, %r3930, %r3931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3932, %r3933, %r3934;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3935, %r3936, %r3937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3938, %r3939, %r3940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3941, %r3942, %r3943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3944, %r3945, %r3946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3947, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3950, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3953, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3956, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3959, %r3912, %r3913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3962, %r3915, %r3916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3965, %r3918, %r3919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3968, %r3921, %r3922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3971, %r3924, %r3925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3974, %r3927, %r3928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3977, %r3930, %r3931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3980, %r3933, %r3934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3983, %r3936, %r3937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3986, %r3939, %r3940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3989, %r3942, %r3943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3992, %r3945, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r179, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r179, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r179, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r179, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r179, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r179, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r179, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r179, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r179, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r179, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r179, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r179, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r179, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r179, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r179, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r179, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r180, %r3947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4046, %r180, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4049, %r180, %r3953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4052, %r180, %r3956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4055, %r180, %r3959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4058, %r180, %r3962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4061, %r180, %r3965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4064, %r180, %r3968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4067, %r180, %r3971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4070, %r180, %r3974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4073, %r180, %r3977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4076, %r180, %r3980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4079, %r180, %r3983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4082, %r180, %r3986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4085, %r180, %r3989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4088, %r180, %r3992;
	// end inline asm
	mov.u16 	%rs418, -14592;
	// begin inline asm
	mov.b32 %r4091, {%rs418, %rs418};
	// end inline asm
	mov.u16 	%rs420, 18176;
	// begin inline asm
	mov.b32 %r4092, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4093, %r3995, %r4091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4096, %r4093, %r4092;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4101, %r3998, %r4099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4104, %r4101, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4109, %r4001, %r4107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4112, %r4109, %r4108;
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4117, %r4004, %r4115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4120, %r4117, %r4116;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4125, %r4007, %r4123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4128, %r4125, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4133, %r4010, %r4131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4136, %r4133, %r4132;
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4141, %r4013, %r4139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4144, %r4141, %r4140;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4149, %r4016, %r4147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4152, %r4149, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4157, %r4019, %r4155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4160, %r4157, %r4156;
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4165, %r4022, %r4163;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4168, %r4165, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4173, %r4025, %r4171;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4176, %r4173, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4181, %r4028, %r4179;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4184, %r4181, %r4180;
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4189, %r4031, %r4187;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4192, %r4189, %r4188;
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4197, %r4034, %r4195;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4200, %r4197, %r4196;
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4205, %r4037, %r4203;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4208, %r4205, %r4204;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4213, %r4040, %r4211;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4216, %r4213, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4221, %r4043, %r4219;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4224, %r4221, %r4220;
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4229, %r4046, %r4227;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4232, %r4229, %r4228;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4237, %r4049, %r4235;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4240, %r4237, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4245, %r4052, %r4243;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4248, %r4245, %r4244;
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4253, %r4055, %r4251;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4256, %r4253, %r4252;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4261, %r4058, %r4259;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4264, %r4261, %r4260;
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4269, %r4061, %r4267;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4272, %r4269, %r4268;
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4277, %r4064, %r4275;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4280, %r4277, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4284, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4285, %r4067, %r4283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4288, %r4285, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4293, %r4070, %r4291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4296, %r4293, %r4292;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4301, %r4073, %r4299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4304, %r4301, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4308, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4309, %r4076, %r4307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4312, %r4309, %r4308;
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4317, %r4079, %r4315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4320, %r4317, %r4316;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4325, %r4082, %r4323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4328, %r4325, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4332, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4333, %r4085, %r4331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4336, %r4333, %r4332;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4341, %r4088, %r4339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4344, %r4341, %r4340;
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4348, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4349, %r4350, %r4348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4352, %r4096, %r4349;
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4356, %r4350, %r4355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4359, %r4104, %r4356;
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4363, %r4350, %r4362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4366, %r4112, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4350, %r4369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4120, %r4370;
	// end inline asm
	mov.u32 	%r4379, 25152;
	// begin inline asm
	prmt.b32 %r4376, %r4352, %r4366, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4380, %r4359, %r4373, %r4379;
	// end inline asm
	shl.b32 	%r4387, %r4380, 4;
	mov.u32 	%r4385, 252645135;
	// begin inline asm
	lop3.b32 %r4384, %r4385, %r4376, %r4387, 202;
	// end inline asm
	xor.b32  	%r16204, %r4384, -2004318072;
	// begin inline asm
	mov.b32 %r4391, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4389, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4390, %r4391, %r4389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4128, %r4390;
	// end inline asm
	// begin inline asm
	mov.b32 %r4396, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4391, %r4396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4136, %r4397;
	// end inline asm
	// begin inline asm
	mov.b32 %r4403, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4404, %r4391, %r4403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4144, %r4404;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4391, %r4410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4152, %r4411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4417, %r4393, %r4407, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4421, %r4400, %r4414, %r4379;
	// end inline asm
	shl.b32 	%r4428, %r4421, 4;
	// begin inline asm
	lop3.b32 %r4425, %r4385, %r4417, %r4428, 202;
	// end inline asm
	xor.b32  	%r16205, %r4425, -2004318072;
	// begin inline asm
	mov.b32 %r4432, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4430, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4432, %r4430;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4160, %r4431;
	// end inline asm
	// begin inline asm
	mov.b32 %r4437, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4432, %r4437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4168, %r4438;
	// end inline asm
	// begin inline asm
	mov.b32 %r4444, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4432, %r4444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4176, %r4445;
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4432, %r4451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4184, %r4452;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4458, %r4434, %r4448, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4462, %r4441, %r4455, %r4379;
	// end inline asm
	shl.b32 	%r4469, %r4462, 4;
	// begin inline asm
	lop3.b32 %r4466, %r4385, %r4458, %r4469, 202;
	// end inline asm
	xor.b32  	%r16206, %r4466, -2004318072;
	// begin inline asm
	mov.b32 %r4473, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4471, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4473, %r4471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4192, %r4472;
	// end inline asm
	// begin inline asm
	mov.b32 %r4478, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4473, %r4478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4200, %r4479;
	// end inline asm
	// begin inline asm
	mov.b32 %r4485, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4473, %r4485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4208, %r4486;
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4473, %r4492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4216, %r4493;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4499, %r4475, %r4489, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4503, %r4482, %r4496, %r4379;
	// end inline asm
	shl.b32 	%r4510, %r4503, 4;
	// begin inline asm
	lop3.b32 %r4507, %r4385, %r4499, %r4510, 202;
	// end inline asm
	xor.b32  	%r16207, %r4507, -2004318072;
	// begin inline asm
	mov.b32 %r4514, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4514, %r4512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4224, %r4513;
	// end inline asm
	// begin inline asm
	mov.b32 %r4519, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4514, %r4519;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4232, %r4520;
	// end inline asm
	// begin inline asm
	mov.b32 %r4526, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4514, %r4526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4240, %r4527;
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4514, %r4533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4248, %r4534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4540, %r4516, %r4530, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4544, %r4523, %r4537, %r4379;
	// end inline asm
	shl.b32 	%r4551, %r4544, 4;
	// begin inline asm
	lop3.b32 %r4548, %r4385, %r4540, %r4551, 202;
	// end inline asm
	xor.b32  	%r16208, %r4548, -2004318072;
	// begin inline asm
	mov.b32 %r4555, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4555, %r4553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4256, %r4554;
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4555, %r4560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4264, %r4561;
	// end inline asm
	// begin inline asm
	mov.b32 %r4567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4555, %r4567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4272, %r4568;
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4555, %r4574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4280, %r4575;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4581, %r4557, %r4571, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4585, %r4564, %r4578, %r4379;
	// end inline asm
	shl.b32 	%r4592, %r4585, 4;
	// begin inline asm
	lop3.b32 %r4589, %r4385, %r4581, %r4592, 202;
	// end inline asm
	xor.b32  	%r16209, %r4589, -2004318072;
	// begin inline asm
	mov.b32 %r4596, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4594, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4596, %r4594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4288, %r4595;
	// end inline asm
	// begin inline asm
	mov.b32 %r4601, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4596, %r4601;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4296, %r4602;
	// end inline asm
	// begin inline asm
	mov.b32 %r4608, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4596, %r4608;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4304, %r4609;
	// end inline asm
	// begin inline asm
	mov.b32 %r4615, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4616, %r4596, %r4615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4312, %r4616;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4622, %r4598, %r4612, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4626, %r4605, %r4619, %r4379;
	// end inline asm
	shl.b32 	%r4633, %r4626, 4;
	// begin inline asm
	lop3.b32 %r4630, %r4385, %r4622, %r4633, 202;
	// end inline asm
	xor.b32  	%r16210, %r4630, -2004318072;
	// begin inline asm
	mov.b32 %r4637, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4637, %r4635;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4320, %r4636;
	// end inline asm
	// begin inline asm
	mov.b32 %r4642, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4637, %r4642;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4328, %r4643;
	// end inline asm
	// begin inline asm
	mov.b32 %r4649, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4650, %r4637, %r4649;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4336, %r4650;
	// end inline asm
	// begin inline asm
	mov.b32 %r4656, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4657, %r4637, %r4656;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4660, %r4344, %r4657;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4663, %r4639, %r4653, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4667, %r4646, %r4660, %r4379;
	// end inline asm
	shl.b32 	%r4674, %r4667, 4;
	// begin inline asm
	lop3.b32 %r4671, %r4385, %r4663, %r4674, 202;
	// end inline asm
	xor.b32  	%r16211, %r4671, -2004318072;
	setp.eq.s32 	%p305, %r16395, 0;
	selp.b32 	%r16212, 0, 4161, %p305;
	add.s32 	%r16213, %r80, %r16212;
	mul.wide.u32 	%rd96, %r16213, 4;
	add.s64 	%rd97, %rd37, %rd96;
	st.shared.u32 	[%rd97], %r16204;
	add.s32 	%r16214, %r81, %r16212;
	mul.wide.u32 	%rd98, %r16214, 4;
	add.s64 	%rd99, %rd37, %rd98;
	st.shared.u32 	[%rd99], %r16205;
	add.s32 	%r16215, %r82, %r16212;
	mul.wide.u32 	%rd100, %r16215, 4;
	add.s64 	%rd101, %rd37, %rd100;
	st.shared.u32 	[%rd101], %r16206;
	add.s32 	%r16216, %r83, %r16212;
	mul.wide.u32 	%rd102, %r16216, 4;
	add.s64 	%rd103, %rd37, %rd102;
	st.shared.u32 	[%rd103], %r16207;
	add.s32 	%r16217, %r84, %r16212;
	mul.wide.u32 	%rd104, %r16217, 4;
	add.s64 	%rd105, %rd37, %rd104;
	st.shared.u32 	[%rd105], %r16208;
	add.s32 	%r16218, %r85, %r16212;
	mul.wide.u32 	%rd106, %r16218, 4;
	add.s64 	%rd107, %rd37, %rd106;
	st.shared.u32 	[%rd107], %r16209;
	add.s32 	%r16219, %r86, %r16212;
	mul.wide.u32 	%rd108, %r16219, 4;
	add.s64 	%rd109, %rd37, %rd108;
	st.shared.u32 	[%rd109], %r16210;
	add.s32 	%r16220, %r87, %r16212;
	mul.wide.u32 	%rd110, %r16220, 4;
	add.s64 	%rd111, %rd37, %rd110;
	st.shared.u32 	[%rd111], %r16211;
	ld.shared.u32 	%r16346, [%rd81];
	ld.shared.u32 	%r16347, [%rd83];
	ld.shared.u32 	%r16348, [%rd85];
	ld.shared.u32 	%r16349, [%rd87];
	ld.shared.u32 	%r16358, [%rd89];
	ld.shared.u32 	%r16359, [%rd91];
	ld.shared.u32 	%r16360, [%rd93];
	ld.shared.u32 	%r16361, [%rd95];
	// begin inline asm
	mov.b32 %r4680, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4679, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r4677, %r862, %r4679, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4682, %r4680, %r4681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4685, %r4677, %r4682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4688, %r873, %r4679, %r4691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4693, %r4691, %r4692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4696, %r4688, %r4693;
	// end inline asm
	shr.u32 	%r4701, %r4679, 8;
	// begin inline asm
	lop3.b32 %r4699, %r862, %r4701, %r4680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4703, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4704, %r4680, %r4703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4707, %r4699, %r4704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4710, %r873, %r4701, %r4691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4715, %r4691, %r4714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4718, %r4710, %r4715;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4725, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r4723, %r862, %r4725, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4728, %r4726, %r4727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4731, %r4723, %r4728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4734, %r873, %r4725, %r4737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4739, %r4737, %r4738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4742, %r4734, %r4739;
	// end inline asm
	shr.u32 	%r4747, %r4725, 8;
	// begin inline asm
	lop3.b32 %r4745, %r862, %r4747, %r4726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4750, %r4726, %r4749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4753, %r4745, %r4750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4756, %r873, %r4747, %r4737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4761, %r4737, %r4760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4764, %r4756, %r4761;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4771, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r4769, %r862, %r4771, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4772, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4780, %r873, %r4771, %r4783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4783, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	shr.u32 	%r4793, %r4771, 8;
	// begin inline asm
	lop3.b32 %r4791, %r862, %r4793, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4772, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4802, %r873, %r4793, %r4783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4807, %r4783, %r4806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4810, %r4802, %r4807;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4817, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r4815, %r862, %r4817, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4818, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4826, %r873, %r4817, %r4829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4829, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	shr.u32 	%r4839, %r4817, 8;
	// begin inline asm
	lop3.b32 %r4837, %r862, %r4839, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4818, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4848, %r873, %r4839, %r4829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4853, %r4829, %r4852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4856, %r4848, %r4853;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4875, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4863, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r4861, %r862, %r4863, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4864, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4872, %r873, %r4863, %r4875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4877, %r4875, %r4876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4880, %r4872, %r4877;
	// end inline asm
	shr.u32 	%r4885, %r4863, 8;
	// begin inline asm
	lop3.b32 %r4883, %r862, %r4885, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4888, %r4864, %r4887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4891, %r4883, %r4888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4894, %r873, %r4885, %r4875, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4898, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4899, %r4875, %r4898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4902, %r4894, %r4899;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4909, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r4907, %r862, %r4909, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4910, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4918, %r873, %r4909, %r4921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4921, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	shr.u32 	%r4931, %r4909, 8;
	// begin inline asm
	lop3.b32 %r4929, %r862, %r4931, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4910, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4940, %r873, %r4931, %r4921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4944, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4945, %r4921, %r4944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4948, %r4940, %r4945;
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r4955, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r4953, %r862, %r4955, %r4956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4958, %r4956, %r4957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4961, %r4953, %r4958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4964, %r873, %r4955, %r4967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4969, %r4967, %r4968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4972, %r4964, %r4969;
	// end inline asm
	shr.u32 	%r4977, %r4955, 8;
	// begin inline asm
	lop3.b32 %r4975, %r862, %r4977, %r4956, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4980, %r4956, %r4979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4983, %r4975, %r4980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4986, %r873, %r4977, %r4967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4990, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4991, %r4967, %r4990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4994, %r4986, %r4991;
	// end inline asm
	// begin inline asm
	mov.b32 %r5002, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5013, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r5001, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r4999, %r862, %r5001, %r5002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5004, %r5002, %r5003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5007, %r4999, %r5004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5010, %r873, %r5001, %r5013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5015, %r5013, %r5014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5018, %r5010, %r5015;
	// end inline asm
	shr.u32 	%r5023, %r5001, 8;
	// begin inline asm
	lop3.b32 %r5021, %r862, %r5023, %r5002, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5026, %r5002, %r5025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5029, %r5021, %r5026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5032, %r873, %r5023, %r5013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5036, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5037, %r5013, %r5036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5040, %r5032, %r5037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5043, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5045, %r5043, %r4685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4915;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4937;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r4983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r4994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r5007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r5018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r5029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5198, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5200, %r5198, %r5040;
	// end inline asm
	// begin inline asm
	mov.b32 %r5208, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5219, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5205, %r862, %r1887, %r5208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5209, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5210, %r5208, %r5209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5213, %r5205, %r5210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5216, %r873, %r1887, %r5219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5220, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5221, %r5219, %r5220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5224, %r5216, %r5221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5227, %r862, %r1909, %r5208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5231, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5232, %r5208, %r5231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5235, %r5227, %r5232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5238, %r873, %r1909, %r5219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5242, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5243, %r5219, %r5242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5246, %r5238, %r5243;
	// end inline asm
	// begin inline asm
	mov.b32 %r5254, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5265, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5251, %r862, %r1933, %r5254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5255, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5256, %r5254, %r5255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5259, %r5251, %r5256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5262, %r873, %r1933, %r5265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5266, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5267, %r5265, %r5266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5270, %r5262, %r5267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5273, %r862, %r1955, %r5254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5278, %r5254, %r5277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5281, %r5273, %r5278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5284, %r873, %r1955, %r5265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5288, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5289, %r5265, %r5288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5292, %r5284, %r5289;
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5311, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5297, %r862, %r1979, %r5300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5301, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5302, %r5300, %r5301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5305, %r5297, %r5302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5308, %r873, %r1979, %r5311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5312, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5313, %r5311, %r5312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5316, %r5308, %r5313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5319, %r862, %r2001, %r5300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5324, %r5300, %r5323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5327, %r5319, %r5324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5330, %r873, %r2001, %r5311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5334, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5335, %r5311, %r5334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5338, %r5330, %r5335;
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5357, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5343, %r862, %r2025, %r5346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5347, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5348, %r5346, %r5347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5351, %r5343, %r5348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5354, %r873, %r2025, %r5357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5358, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5359, %r5357, %r5358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5362, %r5354, %r5359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5365, %r862, %r2047, %r5346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5370, %r5346, %r5369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5373, %r5365, %r5370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5376, %r873, %r2047, %r5357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5380, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5381, %r5357, %r5380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5384, %r5376, %r5381;
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5403, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5389, %r862, %r2071, %r5392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5393, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5394, %r5392, %r5393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5397, %r5389, %r5394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5400, %r873, %r2071, %r5403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5404, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5405, %r5403, %r5404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5408, %r5400, %r5405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5411, %r862, %r2093, %r5392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5416, %r5392, %r5415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5419, %r5411, %r5416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5422, %r873, %r2093, %r5403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5426, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5427, %r5403, %r5426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5430, %r5422, %r5427;
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5449, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5435, %r862, %r2117, %r5438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5439, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5440, %r5438, %r5439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5443, %r5435, %r5440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5446, %r873, %r2117, %r5449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5450, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5451, %r5449, %r5450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5454, %r5446, %r5451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5457, %r862, %r2139, %r5438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5462, %r5438, %r5461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5465, %r5457, %r5462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5468, %r873, %r2139, %r5449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5472, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5473, %r5449, %r5472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5476, %r5468, %r5473;
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5495, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5481, %r862, %r2163, %r5484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5485, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5486, %r5484, %r5485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5489, %r5481, %r5486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5492, %r873, %r2163, %r5495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5496, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5497, %r5495, %r5496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5500, %r5492, %r5497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5503, %r862, %r2185, %r5484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5508, %r5484, %r5507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5511, %r5503, %r5508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5514, %r873, %r2185, %r5495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5518, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5519, %r5495, %r5518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5522, %r5514, %r5519;
	// end inline asm
	// begin inline asm
	mov.b32 %r5530, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5541, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5527, %r862, %r2209, %r5530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5531, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5532, %r5530, %r5531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5535, %r5527, %r5532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5538, %r873, %r2209, %r5541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5542, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5543, %r5541, %r5542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5546, %r5538, %r5543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5549, %r862, %r2231, %r5530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5553, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5554, %r5530, %r5553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5557, %r5549, %r5554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5560, %r873, %r2231, %r5541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5564, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5565, %r5541, %r5564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5568, %r5560, %r5565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r292, %r5213, %r5045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r292, %r5224, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r292, %r5235, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r292, %r5246, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r292, %r5259, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r292, %r5270, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r292, %r5281, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r292, %r5292, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r292, %r5305, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r292, %r5316, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r292, %r5327, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r292, %r5338, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r292, %r5351, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r292, %r5362, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r292, %r5373, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r292, %r5384, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r310, %r5397, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r310, %r5408, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r310, %r5419, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r310, %r5430, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r310, %r5443, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r310, %r5454, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r310, %r5465, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r310, %r5476, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r310, %r5489, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r310, %r5500, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r310, %r5511, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r310, %r5522, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r310, %r5535, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r310, %r5546, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r310, %r5557, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r310, %r5568, %r5200;
	// end inline asm
	// begin inline asm
	mov.b32 %r5704, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5701, %r862, %r2447, %r5704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5705, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5706, %r5704, %r5705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5709, %r5701, %r5706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5712, %r873, %r2447, %r5715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5717, %r5715, %r5716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5720, %r5712, %r5717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5723, %r862, %r2469, %r5704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5728, %r5704, %r5727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5731, %r5723, %r5728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5734, %r873, %r2469, %r5715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5738, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5739, %r5715, %r5738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5742, %r5734, %r5739;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5747, %r862, %r2493, %r5750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5752, %r5750, %r5751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5755, %r5747, %r5752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5758, %r873, %r2493, %r5761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5763, %r5761, %r5762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5766, %r5758, %r5763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5769, %r862, %r2515, %r5750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5774, %r5750, %r5773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5777, %r5769, %r5774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5780, %r873, %r2515, %r5761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5785, %r5761, %r5784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5788, %r5780, %r5785;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5793, %r862, %r2539, %r5796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5796, %r5797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5801, %r5793, %r5798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5804, %r873, %r2539, %r5807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5809, %r5807, %r5808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5812, %r5804, %r5809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5815, %r862, %r2561, %r5796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5820, %r5796, %r5819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5823, %r5815, %r5820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5826, %r873, %r2561, %r5807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5831, %r5807, %r5830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5834, %r5826, %r5831;
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5839, %r862, %r2585, %r5842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5844, %r5842, %r5843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5847, %r5839, %r5844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5850, %r873, %r2585, %r5853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5853, %r5854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5858, %r5850, %r5855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5861, %r862, %r2607, %r5842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5842, %r5865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5869, %r5861, %r5866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5872, %r873, %r2607, %r5853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5877, %r5853, %r5876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5880, %r5872, %r5877;
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5885, %r862, %r2631, %r5888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5888, %r5889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5893, %r5885, %r5890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5896, %r873, %r2631, %r5899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5901, %r5899, %r5900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5904, %r5896, %r5901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5907, %r862, %r2653, %r5888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5912, %r5888, %r5911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5915, %r5907, %r5912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5918, %r873, %r2653, %r5899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5922, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5923, %r5899, %r5922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5926, %r5918, %r5923;
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5931, %r862, %r2677, %r5934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5934, %r5935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5939, %r5931, %r5936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5942, %r873, %r2677, %r5945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5945, %r5946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5950, %r5942, %r5947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5953, %r862, %r2699, %r5934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5958, %r5934, %r5957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5961, %r5953, %r5958;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5964, %r873, %r2699, %r5945, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5968, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5969, %r5945, %r5968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5972, %r5964, %r5969;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5977, %r862, %r2723, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5982, %r5980, %r5981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5985, %r5977, %r5982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5988, %r873, %r2723, %r5991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5993, %r5991, %r5992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5996, %r5988, %r5993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5999, %r862, %r2745, %r5980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5980, %r6003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6007, %r5999, %r6004;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6010, %r873, %r2745, %r5991, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6015, %r5991, %r6014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6018, %r6010, %r6015;
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6037, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6023, %r862, %r2769, %r6026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6027, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6028, %r6026, %r6027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6031, %r6023, %r6028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6034, %r873, %r2769, %r6037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6039, %r6037, %r6038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6042, %r6034, %r6039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6045, %r862, %r2791, %r6026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6050, %r6026, %r6049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6053, %r6045, %r6050;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6056, %r873, %r2791, %r6037, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6060, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6061, %r6037, %r6060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6064, %r6056, %r6061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6067, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6069, %r6067, %r5709, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6073, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6075, %r6073, %r5720, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6079, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6081, %r6079, %r5731, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6085, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6087, %r6085, %r5742, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6091, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6093, %r6091, %r5755, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6097, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6099, %r6097, %r5766, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6103, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6105, %r6103, %r5777, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6109, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6111, %r6109, %r5788, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6115, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6117, %r6115, %r5801, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6121, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6123, %r6121, %r5812, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6129, %r6127, %r5823, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6133, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6135, %r6133, %r5834, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6141, %r6139, %r5847, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6147, %r6145, %r5858, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6151, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6153, %r6151, %r5869, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6159, %r6157, %r5880, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6165, %r6163, %r5893, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6171, %r6169, %r5904, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6177, %r6175, %r5915, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6181, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6183, %r6181, %r5926, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6189, %r6187, %r5939, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6195, %r6193, %r5950, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6199, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6201, %r6199, %r5961, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6205, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6207, %r6205, %r5972, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6211, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6213, %r6211, %r5985, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6217, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6219, %r6217, %r5996, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6225, %r6223, %r6007, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6229, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6231, %r6229, %r6018, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6235, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6237, %r6235, %r6031, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6241, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6243, %r6241, %r6042, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6247, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6249, %r6247, %r6053, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6253, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6255, %r6253, %r6064, %r5695;
	// end inline asm
	// begin inline asm
	mov.b32 %r6264, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6275, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6261, %r862, %r863, %r6264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6265, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6266, %r6264, %r6265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6269, %r6261, %r6266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6272, %r873, %r863, %r6275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6276, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6277, %r6275, %r6276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6280, %r6272, %r6277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6283, %r862, %r885, %r6264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6288, %r6264, %r6287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6291, %r6283, %r6288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6294, %r873, %r885, %r6275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6299, %r6275, %r6298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6302, %r6294, %r6299;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6307, %r862, %r909, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6312, %r6310, %r6311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6315, %r6307, %r6312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6318, %r873, %r909, %r6321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6323, %r6321, %r6322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6326, %r6318, %r6323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6329, %r862, %r931, %r6310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6334, %r6310, %r6333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6337, %r6329, %r6334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6340, %r873, %r931, %r6321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6345, %r6321, %r6344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6348, %r6340, %r6345;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6353, %r862, %r955, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6358, %r6356, %r6357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6361, %r6353, %r6358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6364, %r873, %r955, %r6367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6369, %r6367, %r6368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6372, %r6364, %r6369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6375, %r862, %r977, %r6356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6380, %r6356, %r6379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6383, %r6375, %r6380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6386, %r873, %r977, %r6367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6391, %r6367, %r6390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6394, %r6386, %r6391;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6399, %r862, %r1001, %r6402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6403, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6404, %r6402, %r6403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6407, %r6399, %r6404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6410, %r873, %r1001, %r6413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6414, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6415, %r6413, %r6414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6418, %r6410, %r6415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6421, %r862, %r1023, %r6402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6426, %r6402, %r6425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6429, %r6421, %r6426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6432, %r873, %r1023, %r6413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6437, %r6413, %r6436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6440, %r6432, %r6437;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6445, %r862, %r1047, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6450, %r6448, %r6449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6453, %r6445, %r6450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6456, %r873, %r1047, %r6459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6461, %r6459, %r6460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6464, %r6456, %r6461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6467, %r862, %r1069, %r6448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6472, %r6448, %r6471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6475, %r6467, %r6472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6478, %r873, %r1069, %r6459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6482, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6483, %r6459, %r6482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6486, %r6478, %r6483;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6491, %r862, %r1093, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6496, %r6494, %r6495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6499, %r6491, %r6496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6502, %r873, %r1093, %r6505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6507, %r6505, %r6506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6510, %r6502, %r6507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6513, %r862, %r1115, %r6494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6518, %r6494, %r6517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6521, %r6513, %r6518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6524, %r873, %r1115, %r6505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6528, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6529, %r6505, %r6528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6532, %r6524, %r6529;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6537, %r862, %r1139, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6542, %r6540, %r6541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6545, %r6537, %r6542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6548, %r873, %r1139, %r6551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6553, %r6551, %r6552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6556, %r6548, %r6553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6559, %r862, %r1161, %r6540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6564, %r6540, %r6563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6567, %r6559, %r6564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6570, %r873, %r1161, %r6551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6575, %r6551, %r6574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6578, %r6570, %r6575;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6583, %r862, %r1185, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6587, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6588, %r6586, %r6587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6591, %r6583, %r6588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6594, %r873, %r1185, %r6597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6599, %r6597, %r6598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6602, %r6594, %r6599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6605, %r862, %r1207, %r6586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6610, %r6586, %r6609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6613, %r6605, %r6610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6616, %r873, %r1207, %r6597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6620, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6621, %r6597, %r6620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6624, %r6616, %r6621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r364, %r6269, %r6069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r364, %r6280, %r6075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r364, %r6291, %r6081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r364, %r6302, %r6087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r364, %r6315, %r6093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r364, %r6326, %r6099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r364, %r6337, %r6105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r364, %r6348, %r6111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r364, %r6361, %r6117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r364, %r6372, %r6123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r364, %r6383, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r364, %r6394, %r6135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r364, %r6407, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r364, %r6418, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r364, %r6429, %r6153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r364, %r6440, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r382, %r6453, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r382, %r6464, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r382, %r6475, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r382, %r6486, %r6183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r382, %r6499, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r382, %r6510, %r6195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r382, %r6521, %r6201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r382, %r6532, %r6207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r382, %r6545, %r6213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6867, %r382, %r6556, %r6219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6879, %r382, %r6567, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6876, %r382, %r6578, %r6231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6888, %r382, %r6591, %r6237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r382, %r6602, %r6243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r382, %r6613, %r6249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r382, %r6624, %r6255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6757, %r6755, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r421, %r6762, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6764, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6766, %r6764, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r421, %r6771, %r6766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6775, %r6773, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r421, %r6780, %r6775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6782, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6784, %r6782, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r421, %r6789, %r6784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6793, %r6791, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r421, %r6798, %r6793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6800, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6802, %r6800, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r421, %r6807, %r6802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6811, %r6809, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r421, %r6816, %r6811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6818, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6820, %r6818, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r421, %r6825, %r6820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6827, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6829, %r6827, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r424, %r6834, %r6829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6836, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r6836, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r424, %r6843, %r6838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6845, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6847, %r6845, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r424, %r6852, %r6847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6854, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r6854, %r6858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r424, %r6861, %r6856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6863, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6865, %r6863, %r6867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r424, %r6870, %r6865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6872, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6874, %r6872, %r6876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r424, %r6879, %r6874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6881, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6883, %r6881, %r6885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r424, %r6888, %r6883;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6890, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6892, %r6890, %r6894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6895, %r424, %r6897, %r6892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6899, %r427, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r421, %r6759, %r6899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6906, %r427, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r421, %r6768, %r6906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6913, %r427, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r421, %r6777, %r6913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6920, %r427, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6923, %r421, %r6786, %r6920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6927, %r427, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6930, %r421, %r6795, %r6927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6934, %r427, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6937, %r421, %r6804, %r6934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6941, %r427, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6944, %r421, %r6813, %r6941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6948, %r427, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6951, %r421, %r6822, %r6948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6955, %r430, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6958, %r424, %r6831, %r6955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6962, %r430, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6965, %r424, %r6840, %r6962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6969, %r430, %r6852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6972, %r424, %r6849, %r6969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6976, %r430, %r6861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6979, %r424, %r6858, %r6976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6983, %r430, %r6870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6986, %r424, %r6867, %r6983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6990, %r430, %r6879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r424, %r6876, %r6990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6997, %r430, %r6888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r424, %r6885, %r6997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7004, %r430, %r6897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7007, %r424, %r6894, %r7004;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r488, %r494, %r491, %r497}, {%r6760, %r6902}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r488, %r494, %r491, %r497}, {%r6769, %r6909}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r488, %r494, %r491, %r497}, {%r6778, %r6916}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r488, %r494, %r491, %r497}, {%r6787, %r6923}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r488, %r494, %r491, %r497}, {%r6796, %r6930}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r488, %r494, %r491, %r497}, {%r6805, %r6937}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r488, %r494, %r491, %r497}, {%r6814, %r6944}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r488, %r494, %r491, %r497}, {%r6823, %r6951}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r488, %r494, %r491, %r497}, {%r6832, %r6958}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r488, %r494, %r491, %r497}, {%r6841, %r6965}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r488, %r494, %r491, %r497}, {%r6850, %r6972}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7277, %r7274}, {%r488, %r494, %r491, %r497}, {%r6859, %r6979}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7286, %r7283}, {%r488, %r494, %r491, %r497}, {%r6868, %r6986}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7295, %r7292}, {%r488, %r494, %r491, %r497}, {%r6877, %r6993}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7304, %r7301}, {%r488, %r494, %r491, %r497}, {%r6886, %r7000}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7313, %r7310}, {%r488, %r494, %r491, %r497}, {%r6895, %r7007}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r538, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r538, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r538, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r538, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r538, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r538, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r538, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r538, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r538, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r538, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r538, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7270, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r7270, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r538, %r7277, %r7272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7279, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r7279, %r7283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r538, %r7286, %r7281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7288, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r7288, %r7292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r538, %r7295, %r7290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7297, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r7297, %r7301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r538, %r7304, %r7299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7306, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7308, %r7306, %r7310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7311, %r538, %r7313, %r7308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7315, %r541, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7318, %r538, %r7175, %r7315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r541, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r538, %r7184, %r7322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7329, %r541, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7332, %r538, %r7193, %r7329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7336, %r541, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7339, %r538, %r7202, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7343, %r541, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7346, %r538, %r7211, %r7343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7350, %r541, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7353, %r538, %r7220, %r7350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7357, %r541, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7360, %r538, %r7229, %r7357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7364, %r541, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7367, %r538, %r7238, %r7364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7371, %r541, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7374, %r538, %r7247, %r7371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7378, %r541, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7381, %r538, %r7256, %r7378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7385, %r541, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7388, %r538, %r7265, %r7385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7392, %r541, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7395, %r538, %r7274, %r7392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7399, %r541, %r7286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7402, %r538, %r7283, %r7399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7406, %r541, %r7295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7409, %r538, %r7292, %r7406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7413, %r541, %r7304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7416, %r538, %r7301, %r7413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r541, %r7313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7423, %r538, %r7310, %r7420;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7716, %r7719}, {%r576, %r582, %r579, %r585}, {%r7176, %r7318}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7722, %r7725}, {%r576, %r582, %r579, %r585}, {%r7185, %r7325}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7728, %r7731}, {%r576, %r582, %r579, %r585}, {%r7194, %r7332}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7734, %r7737}, {%r576, %r582, %r579, %r585}, {%r7203, %r7339}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7740, %r7743}, {%r576, %r582, %r579, %r585}, {%r7212, %r7346}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7746, %r7749}, {%r576, %r582, %r579, %r585}, {%r7221, %r7353}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7752, %r7755}, {%r576, %r582, %r579, %r585}, {%r7230, %r7360}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7758, %r7761}, {%r576, %r582, %r579, %r585}, {%r7239, %r7367}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7717, %r7720}, {%r576, %r582, %r579, %r585}, {%r7248, %r7374}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7723, %r7726}, {%r576, %r582, %r579, %r585}, {%r7257, %r7381}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7729, %r7732}, {%r576, %r582, %r579, %r585}, {%r7266, %r7388}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7735, %r7738}, {%r576, %r582, %r579, %r585}, {%r7275, %r7395}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7741, %r7744}, {%r576, %r582, %r579, %r585}, {%r7284, %r7402}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7747, %r7750}, {%r576, %r582, %r579, %r585}, {%r7293, %r7409}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7753, %r7756}, {%r576, %r582, %r579, %r585}, {%r7302, %r7416}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7759, %r7762}, {%r576, %r582, %r579, %r585}, {%r7311, %r7423}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7727, %r7728, %r7729;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7730, %r7731, %r7732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7734, %r7735;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7736, %r7737, %r7738;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7739, %r7740, %r7741;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7742, %r7743, %r7744;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7745, %r7746, %r7747;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7748, %r7749, %r7750;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7751, %r7752, %r7753;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7754, %r7755, %r7756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7758, %r7759;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7760, %r7761, %r7762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7763, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7766, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7769, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7772, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7775, %r7728, %r7729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7778, %r7731, %r7732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7781, %r7734, %r7735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7784, %r7737, %r7738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7787, %r7740, %r7741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7790, %r7743, %r7744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7793, %r7746, %r7747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7796, %r7749, %r7750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7799, %r7752, %r7753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7802, %r7755, %r7756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7805, %r7758, %r7759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7808, %r7761, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r179, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r179, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r179, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r179, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r179, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r179, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r179, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r179, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r179, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r179, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r179, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r179, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r179, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r179, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r179, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r179, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r180, %r7763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7862, %r180, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7865, %r180, %r7769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7868, %r180, %r7772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7871, %r180, %r7775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7874, %r180, %r7778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7877, %r180, %r7781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7880, %r180, %r7784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7883, %r180, %r7787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7886, %r180, %r7790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7889, %r180, %r7793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7892, %r180, %r7796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7895, %r180, %r7799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7898, %r180, %r7802;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7901, %r180, %r7805;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7904, %r180, %r7808;
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7909, %r7811, %r7907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7912, %r7909, %r7908;
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7917, %r7814, %r7915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7920, %r7917, %r7916;
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7925, %r7817, %r7923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7928, %r7925, %r7924;
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7933, %r7820, %r7931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7936, %r7933, %r7932;
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7941, %r7823, %r7939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7944, %r7941, %r7940;
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7949, %r7826, %r7947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7952, %r7949, %r7948;
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7957, %r7829, %r7955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7960, %r7957, %r7956;
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7965, %r7832, %r7963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7968, %r7965, %r7964;
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7973, %r7835, %r7971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7976, %r7973, %r7972;
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7981, %r7838, %r7979;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7984, %r7981, %r7980;
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7989, %r7841, %r7987;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7992, %r7989, %r7988;
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7997, %r7844, %r7995;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8000, %r7997, %r7996;
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8005, %r7847, %r8003;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8008, %r8005, %r8004;
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8013, %r7850, %r8011;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8016, %r8013, %r8012;
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8021, %r7853, %r8019;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8024, %r8021, %r8020;
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8029, %r7856, %r8027;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8032, %r8029, %r8028;
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8037, %r7859, %r8035;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8040, %r8037, %r8036;
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8045, %r7862, %r8043;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8048, %r8045, %r8044;
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8053, %r7865, %r8051;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8056, %r8053, %r8052;
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8061, %r7868, %r8059;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8064, %r8061, %r8060;
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8069, %r7871, %r8067;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8072, %r8069, %r8068;
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8077, %r7874, %r8075;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8080, %r8077, %r8076;
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8085, %r7877, %r8083;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8088, %r8085, %r8084;
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8093, %r7880, %r8091;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8096, %r8093, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8100, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8101, %r7883, %r8099;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8104, %r8101, %r8100;
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8109, %r7886, %r8107;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8112, %r8109, %r8108;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8116, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8117, %r7889, %r8115;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8120, %r8117, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8124, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8125, %r7892, %r8123;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8128, %r8125, %r8124;
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8133, %r7895, %r8131;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8136, %r8133, %r8132;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8141, %r7898, %r8139;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8144, %r8141, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8148, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8149, %r7901, %r8147;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8152, %r8149, %r8148;
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8157, %r7904, %r8155;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8160, %r8157, %r8156;
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8164, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8165, %r8166, %r8164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8168, %r7912, %r8165;
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8172, %r8166, %r8171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8175, %r7920, %r8172;
	// end inline asm
	// begin inline asm
	mov.b32 %r8178, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8179, %r8166, %r8178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8182, %r7928, %r8179;
	// end inline asm
	// begin inline asm
	mov.b32 %r8185, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r8166, %r8185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r7936, %r8186;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8192, %r8168, %r8182, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8196, %r8175, %r8189, %r4379;
	// end inline asm
	shl.b32 	%r8203, %r8196, 4;
	// begin inline asm
	lop3.b32 %r8200, %r4385, %r8192, %r8203, 202;
	// end inline asm
	xor.b32  	%r16221, %r8200, -2004318072;
	// begin inline asm
	mov.b32 %r8207, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8205, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8206, %r8207, %r8205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r7944, %r8206;
	// end inline asm
	// begin inline asm
	mov.b32 %r8212, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8213, %r8207, %r8212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8216, %r7952, %r8213;
	// end inline asm
	// begin inline asm
	mov.b32 %r8219, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8220, %r8207, %r8219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r7960, %r8220;
	// end inline asm
	// begin inline asm
	mov.b32 %r8226, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r8207, %r8226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r7968, %r8227;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8233, %r8209, %r8223, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8237, %r8216, %r8230, %r4379;
	// end inline asm
	shl.b32 	%r8244, %r8237, 4;
	// begin inline asm
	lop3.b32 %r8241, %r4385, %r8233, %r8244, 202;
	// end inline asm
	xor.b32  	%r16222, %r8241, -2004318072;
	// begin inline asm
	mov.b32 %r8248, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8246, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r8248, %r8246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r7976, %r8247;
	// end inline asm
	// begin inline asm
	mov.b32 %r8253, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r8248, %r8253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8257, %r7984, %r8254;
	// end inline asm
	// begin inline asm
	mov.b32 %r8260, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8261, %r8248, %r8260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r7992, %r8261;
	// end inline asm
	// begin inline asm
	mov.b32 %r8267, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r8248, %r8267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r8000, %r8268;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8274, %r8250, %r8264, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8278, %r8257, %r8271, %r4379;
	// end inline asm
	shl.b32 	%r8285, %r8278, 4;
	// begin inline asm
	lop3.b32 %r8282, %r4385, %r8274, %r8285, 202;
	// end inline asm
	xor.b32  	%r16223, %r8282, -2004318072;
	// begin inline asm
	mov.b32 %r8289, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8287, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8289, %r8287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8008, %r8288;
	// end inline asm
	// begin inline asm
	mov.b32 %r8294, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8289, %r8294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8298, %r8016, %r8295;
	// end inline asm
	// begin inline asm
	mov.b32 %r8301, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8302, %r8289, %r8301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8024, %r8302;
	// end inline asm
	// begin inline asm
	mov.b32 %r8308, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8289, %r8308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8032, %r8309;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8315, %r8291, %r8305, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8319, %r8298, %r8312, %r4379;
	// end inline asm
	shl.b32 	%r8326, %r8319, 4;
	// begin inline asm
	lop3.b32 %r8323, %r4385, %r8315, %r8326, 202;
	// end inline asm
	xor.b32  	%r16224, %r8323, -2004318072;
	// begin inline asm
	mov.b32 %r8330, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8328, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8330, %r8328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8040, %r8329;
	// end inline asm
	// begin inline asm
	mov.b32 %r8335, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8330, %r8335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8339, %r8048, %r8336;
	// end inline asm
	// begin inline asm
	mov.b32 %r8342, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8343, %r8330, %r8342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8056, %r8343;
	// end inline asm
	// begin inline asm
	mov.b32 %r8349, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8330, %r8349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8064, %r8350;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8356, %r8332, %r8346, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8360, %r8339, %r8353, %r4379;
	// end inline asm
	shl.b32 	%r8367, %r8360, 4;
	// begin inline asm
	lop3.b32 %r8364, %r4385, %r8356, %r8367, 202;
	// end inline asm
	xor.b32  	%r16225, %r8364, -2004318072;
	// begin inline asm
	mov.b32 %r8371, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8369, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8371, %r8369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8072, %r8370;
	// end inline asm
	// begin inline asm
	mov.b32 %r8376, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8371, %r8376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8380, %r8080, %r8377;
	// end inline asm
	// begin inline asm
	mov.b32 %r8383, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8384, %r8371, %r8383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8088, %r8384;
	// end inline asm
	// begin inline asm
	mov.b32 %r8390, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8371, %r8390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8096, %r8391;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8397, %r8373, %r8387, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8401, %r8380, %r8394, %r4379;
	// end inline asm
	shl.b32 	%r8408, %r8401, 4;
	// begin inline asm
	lop3.b32 %r8405, %r4385, %r8397, %r8408, 202;
	// end inline asm
	xor.b32  	%r16226, %r8405, -2004318072;
	// begin inline asm
	mov.b32 %r8412, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8410, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8412, %r8410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8104, %r8411;
	// end inline asm
	// begin inline asm
	mov.b32 %r8417, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8418, %r8412, %r8417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8421, %r8112, %r8418;
	// end inline asm
	// begin inline asm
	mov.b32 %r8424, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8425, %r8412, %r8424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8428, %r8120, %r8425;
	// end inline asm
	// begin inline asm
	mov.b32 %r8431, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8432, %r8412, %r8431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8128, %r8432;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8438, %r8414, %r8428, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8442, %r8421, %r8435, %r4379;
	// end inline asm
	shl.b32 	%r8449, %r8442, 4;
	// begin inline asm
	lop3.b32 %r8446, %r4385, %r8438, %r8449, 202;
	// end inline asm
	xor.b32  	%r16227, %r8446, -2004318072;
	// begin inline asm
	mov.b32 %r8453, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8451, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8453, %r8451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8455, %r8136, %r8452;
	// end inline asm
	// begin inline asm
	mov.b32 %r8458, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8459, %r8453, %r8458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8462, %r8144, %r8459;
	// end inline asm
	// begin inline asm
	mov.b32 %r8465, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8466, %r8453, %r8465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8469, %r8152, %r8466;
	// end inline asm
	// begin inline asm
	mov.b32 %r8472, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8473, %r8453, %r8472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8476, %r8160, %r8473;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8479, %r8455, %r8469, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8483, %r8462, %r8476, %r4379;
	// end inline asm
	shl.b32 	%r8490, %r8483, 4;
	// begin inline asm
	lop3.b32 %r8487, %r4385, %r8479, %r8490, 202;
	// end inline asm
	xor.b32  	%r16228, %r8487, -2004318072;
	st.shared.u32 	[%rd97], %r16221;
	st.shared.u32 	[%rd99], %r16222;
	st.shared.u32 	[%rd101], %r16223;
	st.shared.u32 	[%rd103], %r16224;
	st.shared.u32 	[%rd105], %r16225;
	st.shared.u32 	[%rd107], %r16226;
	st.shared.u32 	[%rd109], %r16227;
	st.shared.u32 	[%rd111], %r16228;
	ld.shared.u32 	%r16350, [%rd81];
	ld.shared.u32 	%r16351, [%rd83];
	ld.shared.u32 	%r16352, [%rd85];
	ld.shared.u32 	%r16353, [%rd87];
	ld.shared.u32 	%r16362, [%rd89];
	ld.shared.u32 	%r16363, [%rd91];
	ld.shared.u32 	%r16364, [%rd93];
	ld.shared.u32 	%r16365, [%rd95];
	// begin inline asm
	mov.b32 %r8496, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8507, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8495, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r8493, %r862, %r8495, %r8496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8497, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8498, %r8496, %r8497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8501, %r8493, %r8498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8504, %r873, %r8495, %r8507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8508, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8509, %r8507, %r8508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8512, %r8504, %r8509;
	// end inline asm
	shr.u32 	%r8517, %r8495, 8;
	// begin inline asm
	lop3.b32 %r8515, %r862, %r8517, %r8496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8519, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8520, %r8496, %r8519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8523, %r8515, %r8520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8526, %r873, %r8517, %r8507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8530, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8531, %r8507, %r8530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8534, %r8526, %r8531;
	// end inline asm
	// begin inline asm
	mov.b32 %r8542, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8553, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8541, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r8539, %r862, %r8541, %r8542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8543, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8544, %r8542, %r8543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8547, %r8539, %r8544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8550, %r873, %r8541, %r8553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8554, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8555, %r8553, %r8554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8558, %r8550, %r8555;
	// end inline asm
	shr.u32 	%r8563, %r8541, 8;
	// begin inline asm
	lop3.b32 %r8561, %r862, %r8563, %r8542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8566, %r8542, %r8565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8569, %r8561, %r8566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8572, %r873, %r8563, %r8553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8576, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8577, %r8553, %r8576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8580, %r8572, %r8577;
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8599, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8587, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r8585, %r862, %r8587, %r8588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8589, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8590, %r8588, %r8589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8593, %r8585, %r8590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8596, %r873, %r8587, %r8599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8600, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8601, %r8599, %r8600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8604, %r8596, %r8601;
	// end inline asm
	shr.u32 	%r8609, %r8587, 8;
	// begin inline asm
	lop3.b32 %r8607, %r862, %r8609, %r8588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8612, %r8588, %r8611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8615, %r8607, %r8612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8618, %r873, %r8609, %r8599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8622, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8623, %r8599, %r8622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8626, %r8618, %r8623;
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8645, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8633, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r8631, %r862, %r8633, %r8634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8636, %r8634, %r8635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8639, %r8631, %r8636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8642, %r873, %r8633, %r8645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8646, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8647, %r8645, %r8646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8650, %r8642, %r8647;
	// end inline asm
	shr.u32 	%r8655, %r8633, 8;
	// begin inline asm
	lop3.b32 %r8653, %r862, %r8655, %r8634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8658, %r8634, %r8657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8661, %r8653, %r8658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8664, %r873, %r8655, %r8645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8668, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8669, %r8645, %r8668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8672, %r8664, %r8669;
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8691, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8679, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r8677, %r862, %r8679, %r8680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8681, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8682, %r8680, %r8681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8685, %r8677, %r8682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8688, %r873, %r8679, %r8691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8692, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8693, %r8691, %r8692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8696, %r8688, %r8693;
	// end inline asm
	shr.u32 	%r8701, %r8679, 8;
	// begin inline asm
	lop3.b32 %r8699, %r862, %r8701, %r8680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8704, %r8680, %r8703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8707, %r8699, %r8704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8710, %r873, %r8701, %r8691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8714, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8715, %r8691, %r8714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8718, %r8710, %r8715;
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8737, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8725, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r8723, %r862, %r8725, %r8726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8727, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8728, %r8726, %r8727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8731, %r8723, %r8728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8734, %r873, %r8725, %r8737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8738, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8739, %r8737, %r8738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8742, %r8734, %r8739;
	// end inline asm
	shr.u32 	%r8747, %r8725, 8;
	// begin inline asm
	lop3.b32 %r8745, %r862, %r8747, %r8726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8750, %r8726, %r8749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8753, %r8745, %r8750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8756, %r873, %r8747, %r8737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8760, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8761, %r8737, %r8760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8764, %r8756, %r8761;
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8783, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8771, %r16364, -2004318072;
	// begin inline asm
	lop3.b32 %r8769, %r862, %r8771, %r8772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8773, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8774, %r8772, %r8773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8777, %r8769, %r8774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8780, %r873, %r8771, %r8783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8784, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8785, %r8783, %r8784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8788, %r8780, %r8785;
	// end inline asm
	shr.u32 	%r8793, %r8771, 8;
	// begin inline asm
	lop3.b32 %r8791, %r862, %r8793, %r8772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8796, %r8772, %r8795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8799, %r8791, %r8796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8802, %r873, %r8793, %r8783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8806, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8807, %r8783, %r8806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8810, %r8802, %r8807;
	// end inline asm
	// begin inline asm
	mov.b32 %r8818, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r8829, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r8817, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r8815, %r862, %r8817, %r8818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8819, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8820, %r8818, %r8819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8823, %r8815, %r8820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8826, %r873, %r8817, %r8829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8830, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8831, %r8829, %r8830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8834, %r8826, %r8831;
	// end inline asm
	shr.u32 	%r8839, %r8817, 8;
	// begin inline asm
	lop3.b32 %r8837, %r862, %r8839, %r8818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8841, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8842, %r8818, %r8841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8845, %r8837, %r8842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8848, %r873, %r8839, %r8829, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8852, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8853, %r8829, %r8852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8856, %r8848, %r8853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8859, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8861, %r8859, %r8501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8753;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8999, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9001, %r8999, %r8823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9004, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9006, %r9004, %r8834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9009, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9011, %r9009, %r8845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9014, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9016, %r9014, %r8856;
	// end inline asm
	// begin inline asm
	mov.b32 %r9024, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9035, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9021, %r862, %r2447, %r9024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9025, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9026, %r9024, %r9025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9029, %r9021, %r9026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9032, %r873, %r2447, %r9035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9036, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9037, %r9035, %r9036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9040, %r9032, %r9037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9043, %r862, %r2469, %r9024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9047, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9048, %r9024, %r9047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9051, %r9043, %r9048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9054, %r873, %r2469, %r9035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9058, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9059, %r9035, %r9058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9062, %r9054, %r9059;
	// end inline asm
	// begin inline asm
	mov.b32 %r9070, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9081, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9067, %r862, %r2493, %r9070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9071, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9072, %r9070, %r9071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9075, %r9067, %r9072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9078, %r873, %r2493, %r9081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9082, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9083, %r9081, %r9082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9086, %r9078, %r9083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9089, %r862, %r2515, %r9070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9094, %r9070, %r9093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9097, %r9089, %r9094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9100, %r873, %r2515, %r9081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9104, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9105, %r9081, %r9104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9108, %r9100, %r9105;
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9127, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9113, %r862, %r2539, %r9116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9118, %r9116, %r9117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9121, %r9113, %r9118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9124, %r873, %r2539, %r9127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9128, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9129, %r9127, %r9128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9132, %r9124, %r9129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9135, %r862, %r2561, %r9116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9140, %r9116, %r9139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9143, %r9135, %r9140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9146, %r873, %r2561, %r9127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9150, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9151, %r9127, %r9150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9154, %r9146, %r9151;
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9173, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9159, %r862, %r2585, %r9162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9163, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9164, %r9162, %r9163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9167, %r9159, %r9164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9170, %r873, %r2585, %r9173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9174, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9175, %r9173, %r9174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9178, %r9170, %r9175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9181, %r862, %r2607, %r9162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9186, %r9162, %r9185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9189, %r9181, %r9186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9192, %r873, %r2607, %r9173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9196, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9197, %r9173, %r9196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9200, %r9192, %r9197;
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9219, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9205, %r862, %r2631, %r9208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9209, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9210, %r9208, %r9209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9213, %r9205, %r9210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9216, %r873, %r2631, %r9219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9220, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9221, %r9219, %r9220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9224, %r9216, %r9221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9227, %r862, %r2653, %r9208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9232, %r9208, %r9231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9235, %r9227, %r9232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9238, %r873, %r2653, %r9219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9242, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9243, %r9219, %r9242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9246, %r9238, %r9243;
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9265, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9251, %r862, %r2677, %r9254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9255, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9256, %r9254, %r9255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9259, %r9251, %r9256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9262, %r873, %r2677, %r9265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9266, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9267, %r9265, %r9266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9270, %r9262, %r9267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9273, %r862, %r2699, %r9254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9278, %r9254, %r9277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9281, %r9273, %r9278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9284, %r873, %r2699, %r9265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9288, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9289, %r9265, %r9288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9292, %r9284, %r9289;
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9311, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9297, %r862, %r2723, %r9300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9301, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9302, %r9300, %r9301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9305, %r9297, %r9302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9308, %r873, %r2723, %r9311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9312, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9313, %r9311, %r9312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9316, %r9308, %r9313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9319, %r862, %r2745, %r9300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9324, %r9300, %r9323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9327, %r9319, %r9324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9330, %r873, %r2745, %r9311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9334, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9335, %r9311, %r9334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9338, %r9330, %r9335;
	// end inline asm
	// begin inline asm
	mov.b32 %r9346, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9357, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9343, %r862, %r2769, %r9346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9347, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9348, %r9346, %r9347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9351, %r9343, %r9348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9354, %r873, %r2769, %r9357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9358, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9359, %r9357, %r9358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9362, %r9354, %r9359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9365, %r862, %r2791, %r9346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9369, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9370, %r9346, %r9369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9373, %r9365, %r9370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9376, %r873, %r2791, %r9357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9380, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9381, %r9357, %r9380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9384, %r9376, %r9381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r292, %r9029, %r8861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r292, %r9040, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r292, %r9051, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r292, %r9062, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r292, %r9075, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r292, %r9086, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r292, %r9097, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r292, %r9108, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r292, %r9121, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r292, %r9132, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r292, %r9143, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r292, %r9154, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r292, %r9167, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r292, %r9178, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r292, %r9189, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r292, %r9200, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r310, %r9213, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r310, %r9224, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r310, %r9235, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r310, %r9246, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r310, %r9259, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r310, %r9270, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r310, %r9281, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r310, %r9292, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r310, %r9305, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r310, %r9316, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r310, %r9327, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r310, %r9338, %r8996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r310, %r9351, %r9001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r310, %r9362, %r9006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r310, %r9373, %r9011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r310, %r9384, %r9016;
	// end inline asm
	// begin inline asm
	mov.b32 %r9520, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9531, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9517, %r862, %r863, %r9520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9521, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9522, %r9520, %r9521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9525, %r9517, %r9522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9528, %r873, %r863, %r9531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9532, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9533, %r9531, %r9532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9536, %r9528, %r9533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9539, %r862, %r885, %r9520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9543, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9544, %r9520, %r9543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9547, %r9539, %r9544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9550, %r873, %r885, %r9531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9554, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9555, %r9531, %r9554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9558, %r9550, %r9555;
	// end inline asm
	// begin inline asm
	mov.b32 %r9566, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9577, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9563, %r862, %r909, %r9566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9568, %r9566, %r9567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9571, %r9563, %r9568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9574, %r873, %r909, %r9577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9578, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9579, %r9577, %r9578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9582, %r9574, %r9579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9585, %r862, %r931, %r9566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9590, %r9566, %r9589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9593, %r9585, %r9590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9596, %r873, %r931, %r9577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9600, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9601, %r9577, %r9600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9604, %r9596, %r9601;
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9623, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9609, %r862, %r955, %r9612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9613, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9614, %r9612, %r9613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9617, %r9609, %r9614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9620, %r873, %r955, %r9623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9624, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9625, %r9623, %r9624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9628, %r9620, %r9625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9631, %r862, %r977, %r9612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9636, %r9612, %r9635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9639, %r9631, %r9636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9642, %r873, %r977, %r9623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9646, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9647, %r9623, %r9646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9650, %r9642, %r9647;
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9669, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9655, %r862, %r1001, %r9658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9659, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9660, %r9658, %r9659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9663, %r9655, %r9660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9666, %r873, %r1001, %r9669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9670, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9671, %r9669, %r9670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9674, %r9666, %r9671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9677, %r862, %r1023, %r9658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9682, %r9658, %r9681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9685, %r9677, %r9682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9688, %r873, %r1023, %r9669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9692, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9693, %r9669, %r9692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9696, %r9688, %r9693;
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9715, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9701, %r862, %r1047, %r9704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9705, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9706, %r9704, %r9705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9709, %r9701, %r9706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9712, %r873, %r1047, %r9715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9716, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9717, %r9715, %r9716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9720, %r9712, %r9717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9723, %r862, %r1069, %r9704, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9728, %r9704, %r9727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9731, %r9723, %r9728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9734, %r873, %r1069, %r9715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9738, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9739, %r9715, %r9738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9742, %r9734, %r9739;
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9761, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9747, %r862, %r1093, %r9750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9751, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9752, %r9750, %r9751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9755, %r9747, %r9752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9758, %r873, %r1093, %r9761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9762, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9763, %r9761, %r9762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9766, %r9758, %r9763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9769, %r862, %r1115, %r9750, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9774, %r9750, %r9773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9777, %r9769, %r9774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9780, %r873, %r1115, %r9761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9784, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9785, %r9761, %r9784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9788, %r9780, %r9785;
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9807, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9793, %r862, %r1139, %r9796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9797, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9798, %r9796, %r9797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9801, %r9793, %r9798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9804, %r873, %r1139, %r9807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9808, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9809, %r9807, %r9808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9812, %r9804, %r9809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9815, %r862, %r1161, %r9796, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9820, %r9796, %r9819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9823, %r9815, %r9820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9826, %r873, %r1161, %r9807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9830, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9831, %r9807, %r9830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9834, %r9826, %r9831;
	// end inline asm
	// begin inline asm
	mov.b32 %r9842, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r9853, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9839, %r862, %r1185, %r9842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9843, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9844, %r9842, %r9843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9847, %r9839, %r9844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9850, %r873, %r1185, %r9853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9854, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9855, %r9853, %r9854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9858, %r9850, %r9855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9861, %r862, %r1207, %r9842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9865, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9866, %r9842, %r9865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9869, %r9861, %r9866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9872, %r873, %r1207, %r9853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9876, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9877, %r9853, %r9876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9880, %r9872, %r9877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9883, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9885, %r9883, %r9525, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9889, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9891, %r9889, %r9536, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9895, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9897, %r9895, %r9547, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9901, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9903, %r9901, %r9558, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9907, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9909, %r9907, %r9571, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9913, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9915, %r9913, %r9582, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9919, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9921, %r9919, %r9593, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9925, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9927, %r9925, %r9604, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9931, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9933, %r9931, %r9617, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9937, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9939, %r9937, %r9628, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9943, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9945, %r9943, %r9639, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9949, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9951, %r9949, %r9650, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9955, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9957, %r9955, %r9663, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9961, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9963, %r9961, %r9674, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9967, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9969, %r9967, %r9685, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9973, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9975, %r9973, %r9696, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9979, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9981, %r9979, %r9709, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9985, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9987, %r9985, %r9720, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9991, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9993, %r9991, %r9731, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9997, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9999, %r9997, %r9742, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10003, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10005, %r10003, %r9755, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10009, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10011, %r10009, %r9766, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10015, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10017, %r10015, %r9777, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10021, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10023, %r10021, %r9788, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10027, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10029, %r10027, %r9801, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10033, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10035, %r10033, %r9812, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10039, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10041, %r10039, %r9823, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10045, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10047, %r10045, %r9834, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10051, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10053, %r10051, %r9847, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10057, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10059, %r10057, %r9858, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10063, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10065, %r10063, %r9869, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10069, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10071, %r10069, %r9880, %r9511;
	// end inline asm
	// begin inline asm
	mov.b32 %r10080, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10091, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10077, %r862, %r4679, %r10080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10081, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10082, %r10080, %r10081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10085, %r10077, %r10082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10088, %r873, %r4679, %r10091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10092, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10093, %r10091, %r10092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10096, %r10088, %r10093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10099, %r862, %r4701, %r10080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10103, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10104, %r10080, %r10103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10107, %r10099, %r10104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10110, %r873, %r4701, %r10091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10114, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10115, %r10091, %r10114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10118, %r10110, %r10115;
	// end inline asm
	// begin inline asm
	mov.b32 %r10126, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10137, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10123, %r862, %r4725, %r10126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10127, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10128, %r10126, %r10127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10131, %r10123, %r10128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10134, %r873, %r4725, %r10137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10138, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10139, %r10137, %r10138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10142, %r10134, %r10139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10145, %r862, %r4747, %r10126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10150, %r10126, %r10149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10153, %r10145, %r10150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10156, %r873, %r4747, %r10137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10160, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10161, %r10137, %r10160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10164, %r10156, %r10161;
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10183, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10169, %r862, %r4771, %r10172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10173, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10174, %r10172, %r10173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10177, %r10169, %r10174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10180, %r873, %r4771, %r10183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10184, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10185, %r10183, %r10184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10188, %r10180, %r10185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10191, %r862, %r4793, %r10172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10196, %r10172, %r10195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10199, %r10191, %r10196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10202, %r873, %r4793, %r10183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10206, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10207, %r10183, %r10206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10210, %r10202, %r10207;
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10229, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10215, %r862, %r4817, %r10218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10219, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10220, %r10218, %r10219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10223, %r10215, %r10220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10226, %r873, %r4817, %r10229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10230, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10231, %r10229, %r10230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10234, %r10226, %r10231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10237, %r862, %r4839, %r10218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10242, %r10218, %r10241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10245, %r10237, %r10242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10248, %r873, %r4839, %r10229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10252, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10253, %r10229, %r10252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10256, %r10248, %r10253;
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10275, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10261, %r862, %r4863, %r10264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10265, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10266, %r10264, %r10265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10269, %r10261, %r10266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10272, %r873, %r4863, %r10275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10276, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10277, %r10275, %r10276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10280, %r10272, %r10277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10283, %r862, %r4885, %r10264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10288, %r10264, %r10287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10291, %r10283, %r10288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10294, %r873, %r4885, %r10275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10298, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10299, %r10275, %r10298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10302, %r10294, %r10299;
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10321, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10307, %r862, %r4909, %r10310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10311, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10312, %r10310, %r10311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10315, %r10307, %r10312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10318, %r873, %r4909, %r10321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10322, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10323, %r10321, %r10322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10326, %r10318, %r10323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10329, %r862, %r4931, %r10310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10334, %r10310, %r10333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10337, %r10329, %r10334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10340, %r873, %r4931, %r10321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10344, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10345, %r10321, %r10344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10348, %r10340, %r10345;
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10367, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10353, %r862, %r4955, %r10356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10357, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10358, %r10356, %r10357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10361, %r10353, %r10358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10364, %r873, %r4955, %r10367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10368, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10369, %r10367, %r10368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10372, %r10364, %r10369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10375, %r862, %r4977, %r10356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10380, %r10356, %r10379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10383, %r10375, %r10380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10386, %r873, %r4977, %r10367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10390, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10391, %r10367, %r10390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10394, %r10386, %r10391;
	// end inline asm
	// begin inline asm
	mov.b32 %r10402, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r10413, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10399, %r862, %r5001, %r10402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10403, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10404, %r10402, %r10403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10407, %r10399, %r10404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10410, %r873, %r5001, %r10413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10414, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10415, %r10413, %r10414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10418, %r10410, %r10415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10421, %r862, %r5023, %r10402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10425, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10426, %r10402, %r10425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10429, %r10421, %r10426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10432, %r873, %r5023, %r10413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10436, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10437, %r10413, %r10436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10440, %r10432, %r10437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r364, %r10085, %r9885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r364, %r10096, %r9891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r364, %r10107, %r9897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r364, %r10118, %r9903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r364, %r10131, %r9909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r364, %r10142, %r9915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r364, %r10153, %r9921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r364, %r10164, %r9927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r364, %r10177, %r9933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r364, %r10188, %r9939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r364, %r10199, %r9945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r364, %r10210, %r9951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r364, %r10223, %r9957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r364, %r10234, %r9963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r364, %r10245, %r9969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r364, %r10256, %r9975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r382, %r10269, %r9981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r382, %r10280, %r9987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r382, %r10291, %r9993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r382, %r10302, %r9999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r382, %r10315, %r10005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r382, %r10326, %r10011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r382, %r10337, %r10017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r382, %r10348, %r10023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r382, %r10361, %r10029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10683, %r382, %r10372, %r10035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10695, %r382, %r10383, %r10041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10692, %r382, %r10394, %r10047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10704, %r382, %r10407, %r10053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r382, %r10418, %r10059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r382, %r10429, %r10065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r382, %r10440, %r10071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10571, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10573, %r10571, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r421, %r10578, %r10573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10580, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10582, %r10580, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r421, %r10587, %r10582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10589, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10591, %r10589, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r421, %r10596, %r10591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10598, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10600, %r10598, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r421, %r10605, %r10600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10607, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10609, %r10607, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r421, %r10614, %r10609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10616, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10618, %r10616, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r421, %r10623, %r10618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10625, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10627, %r10625, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r421, %r10632, %r10627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10634, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10636, %r10634, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r421, %r10641, %r10636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10643, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10645, %r10643, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r424, %r10650, %r10645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10652, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r10652, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r424, %r10659, %r10654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10661, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10663, %r10661, %r10665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r424, %r10668, %r10663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10670, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r10670, %r10674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r424, %r10677, %r10672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10679, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10681, %r10679, %r10683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r424, %r10686, %r10681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10688, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10690, %r10688, %r10692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r424, %r10695, %r10690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10697, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10699, %r10697, %r10701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r424, %r10704, %r10699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10706, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10708, %r10706, %r10710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10711, %r424, %r10713, %r10708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10715, %r427, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r421, %r10575, %r10715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10722, %r427, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r421, %r10584, %r10722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10729, %r427, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r421, %r10593, %r10729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10736, %r427, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10739, %r421, %r10602, %r10736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10743, %r427, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10746, %r421, %r10611, %r10743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10750, %r427, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10753, %r421, %r10620, %r10750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10757, %r427, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10760, %r421, %r10629, %r10757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10764, %r427, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10767, %r421, %r10638, %r10764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10771, %r430, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10774, %r424, %r10647, %r10771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10778, %r430, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10781, %r424, %r10656, %r10778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10785, %r430, %r10668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10788, %r424, %r10665, %r10785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10792, %r430, %r10677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10795, %r424, %r10674, %r10792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10799, %r430, %r10686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10802, %r424, %r10683, %r10799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10806, %r430, %r10695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10809, %r424, %r10692, %r10806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10813, %r430, %r10704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10816, %r424, %r10701, %r10813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10820, %r430, %r10713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10823, %r424, %r10710, %r10820;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10994, %r10991}, {%r488, %r494, %r491, %r497}, {%r10576, %r10718}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11003, %r11000}, {%r488, %r494, %r491, %r497}, {%r10585, %r10725}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11012, %r11009}, {%r488, %r494, %r491, %r497}, {%r10594, %r10732}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11021, %r11018}, {%r488, %r494, %r491, %r497}, {%r10603, %r10739}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11030, %r11027}, {%r488, %r494, %r491, %r497}, {%r10612, %r10746}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11039, %r11036}, {%r488, %r494, %r491, %r497}, {%r10621, %r10753}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11048, %r11045}, {%r488, %r494, %r491, %r497}, {%r10630, %r10760}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11057, %r11054}, {%r488, %r494, %r491, %r497}, {%r10639, %r10767}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11066, %r11063}, {%r488, %r494, %r491, %r497}, {%r10648, %r10774}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11075, %r11072}, {%r488, %r494, %r491, %r497}, {%r10657, %r10781}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11084, %r11081}, {%r488, %r494, %r491, %r497}, {%r10666, %r10788}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11093, %r11090}, {%r488, %r494, %r491, %r497}, {%r10675, %r10795}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11102, %r11099}, {%r488, %r494, %r491, %r497}, {%r10684, %r10802}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11111, %r11108}, {%r488, %r494, %r491, %r497}, {%r10693, %r10809}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11120, %r11117}, {%r488, %r494, %r491, %r497}, {%r10702, %r10816}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11129, %r11126}, {%r488, %r494, %r491, %r497}, {%r10711, %r10823}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10987, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10989, %r10987, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10992, %r538, %r10994, %r10989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10996, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10998, %r10996, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11001, %r538, %r11003, %r10998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11005, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11007, %r11005, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11010, %r538, %r11012, %r11007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11014, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11016, %r11014, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11019, %r538, %r11021, %r11016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11023, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11025, %r11023, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11028, %r538, %r11030, %r11025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11032, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11034, %r11032, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11037, %r538, %r11039, %r11034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11041, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11043, %r11041, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11046, %r538, %r11048, %r11043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11050, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11052, %r11050, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11055, %r538, %r11057, %r11052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11059, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11061, %r11059, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11064, %r538, %r11066, %r11061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11068, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r11068, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r538, %r11075, %r11070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11077, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11079, %r11077, %r11081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11082, %r538, %r11084, %r11079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11086, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r11086, %r11090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r538, %r11093, %r11088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11095, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11097, %r11095, %r11099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11100, %r538, %r11102, %r11097;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11104, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11106, %r11104, %r11108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11109, %r538, %r11111, %r11106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11113, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11115, %r11113, %r11117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11118, %r538, %r11120, %r11115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11122, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11124, %r11122, %r11126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11127, %r538, %r11129, %r11124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11131, %r541, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11134, %r538, %r10991, %r11131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11138, %r541, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11141, %r538, %r11000, %r11138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11145, %r541, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11148, %r538, %r11009, %r11145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11152, %r541, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11155, %r538, %r11018, %r11152;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11159, %r541, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11162, %r538, %r11027, %r11159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11166, %r541, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11169, %r538, %r11036, %r11166;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11173, %r541, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11176, %r538, %r11045, %r11173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11180, %r541, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11183, %r538, %r11054, %r11180;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11187, %r541, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11190, %r538, %r11063, %r11187;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11194, %r541, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11197, %r538, %r11072, %r11194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11201, %r541, %r11084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11204, %r538, %r11081, %r11201;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11208, %r541, %r11093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11211, %r538, %r11090, %r11208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11215, %r541, %r11102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11218, %r538, %r11099, %r11215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11222, %r541, %r11111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11225, %r538, %r11108, %r11222;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11229, %r541, %r11120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11232, %r538, %r11117, %r11229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11236, %r541, %r11129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11239, %r538, %r11126, %r11236;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11532, %r11535}, {%r576, %r582, %r579, %r585}, {%r10992, %r11134}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11538, %r11541}, {%r576, %r582, %r579, %r585}, {%r11001, %r11141}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11544, %r11547}, {%r576, %r582, %r579, %r585}, {%r11010, %r11148}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11550, %r11553}, {%r576, %r582, %r579, %r585}, {%r11019, %r11155}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11556, %r11559}, {%r576, %r582, %r579, %r585}, {%r11028, %r11162}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11562, %r11565}, {%r576, %r582, %r579, %r585}, {%r11037, %r11169}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11568, %r11571}, {%r576, %r582, %r579, %r585}, {%r11046, %r11176}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11574, %r11577}, {%r576, %r582, %r579, %r585}, {%r11055, %r11183}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11533, %r11536}, {%r576, %r582, %r579, %r585}, {%r11064, %r11190}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11539, %r11542}, {%r576, %r582, %r579, %r585}, {%r11073, %r11197}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11545, %r11548}, {%r576, %r582, %r579, %r585}, {%r11082, %r11204}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11551, %r11554}, {%r576, %r582, %r579, %r585}, {%r11091, %r11211}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11557, %r11560}, {%r576, %r582, %r579, %r585}, {%r11100, %r11218}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11563, %r11566}, {%r576, %r582, %r579, %r585}, {%r11109, %r11225}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11569, %r11572}, {%r576, %r582, %r579, %r585}, {%r11118, %r11232}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11575, %r11578}, {%r576, %r582, %r579, %r585}, {%r11127, %r11239}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11531, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11534, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11537, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11540, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11543, %r11544, %r11545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11546, %r11547, %r11548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11549, %r11550, %r11551;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11552, %r11553, %r11554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11555, %r11556, %r11557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11558, %r11559, %r11560;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11561, %r11562, %r11563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11564, %r11565, %r11566;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11567, %r11568, %r11569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11570, %r11571, %r11572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11573, %r11574, %r11575;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11576, %r11577, %r11578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11579, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11582, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11585, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11588, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11591, %r11544, %r11545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11594, %r11547, %r11548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11597, %r11550, %r11551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11600, %r11553, %r11554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11603, %r11556, %r11557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11606, %r11559, %r11560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11609, %r11562, %r11563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11612, %r11565, %r11566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11615, %r11568, %r11569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11618, %r11571, %r11572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11621, %r11574, %r11575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11624, %r11577, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r179, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r179, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r179, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r179, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r179, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r179, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r179, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r179, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r179, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r179, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r179, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r179, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r179, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r179, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r179, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r179, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r180, %r11579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11678, %r180, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11681, %r180, %r11585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11684, %r180, %r11588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11687, %r180, %r11591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11690, %r180, %r11594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11693, %r180, %r11597;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11696, %r180, %r11600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11699, %r180, %r11603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11702, %r180, %r11606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11705, %r180, %r11609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11708, %r180, %r11612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11711, %r180, %r11615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11714, %r180, %r11618;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11717, %r180, %r11621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11720, %r180, %r11624;
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11725, %r11627, %r11723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11728, %r11725, %r11724;
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11733, %r11630, %r11731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11736, %r11733, %r11732;
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11741, %r11633, %r11739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11744, %r11741, %r11740;
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11749, %r11636, %r11747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11752, %r11749, %r11748;
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11757, %r11639, %r11755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11760, %r11757, %r11756;
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11765, %r11642, %r11763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11768, %r11765, %r11764;
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11773, %r11645, %r11771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11776, %r11773, %r11772;
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11781, %r11648, %r11779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11784, %r11781, %r11780;
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11789, %r11651, %r11787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11792, %r11789, %r11788;
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11797, %r11654, %r11795;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11800, %r11797, %r11796;
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11805, %r11657, %r11803;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11808, %r11805, %r11804;
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11813, %r11660, %r11811;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11816, %r11813, %r11812;
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11821, %r11663, %r11819;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11824, %r11821, %r11820;
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11829, %r11666, %r11827;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11832, %r11829, %r11828;
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11837, %r11669, %r11835;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11840, %r11837, %r11836;
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11845, %r11672, %r11843;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11848, %r11845, %r11844;
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11853, %r11675, %r11851;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11856, %r11853, %r11852;
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11861, %r11678, %r11859;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11864, %r11861, %r11860;
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11869, %r11681, %r11867;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11872, %r11869, %r11868;
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11877, %r11684, %r11875;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11880, %r11877, %r11876;
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11885, %r11687, %r11883;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11888, %r11885, %r11884;
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11893, %r11690, %r11891;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11896, %r11893, %r11892;
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11901, %r11693, %r11899;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11904, %r11901, %r11900;
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11909, %r11696, %r11907;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11912, %r11909, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11916, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11917, %r11699, %r11915;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11920, %r11917, %r11916;
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11925, %r11702, %r11923;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11928, %r11925, %r11924;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11932, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11933, %r11705, %r11931;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11936, %r11933, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11940, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11941, %r11708, %r11939;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11944, %r11941, %r11940;
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11949, %r11711, %r11947;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11952, %r11949, %r11948;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11957, %r11714, %r11955;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11960, %r11957, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11964, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11965, %r11717, %r11963;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11968, %r11965, %r11964;
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11973, %r11720, %r11971;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11976, %r11973, %r11972;
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r11980, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11981, %r11982, %r11980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11984, %r11728, %r11981;
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11988, %r11982, %r11987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11991, %r11736, %r11988;
	// end inline asm
	// begin inline asm
	mov.b32 %r11994, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11995, %r11982, %r11994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11998, %r11744, %r11995;
	// end inline asm
	// begin inline asm
	mov.b32 %r12001, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r11982, %r12001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r11752, %r12002;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12008, %r11984, %r11998, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12012, %r11991, %r12005, %r4379;
	// end inline asm
	shl.b32 	%r12019, %r12012, 4;
	// begin inline asm
	lop3.b32 %r12016, %r4385, %r12008, %r12019, 202;
	// end inline asm
	xor.b32  	%r16229, %r12016, -2004318072;
	// begin inline asm
	mov.b32 %r12023, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12021, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12022, %r12023, %r12021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r11760, %r12022;
	// end inline asm
	// begin inline asm
	mov.b32 %r12028, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12029, %r12023, %r12028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12032, %r11768, %r12029;
	// end inline asm
	// begin inline asm
	mov.b32 %r12035, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12036, %r12023, %r12035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r11776, %r12036;
	// end inline asm
	// begin inline asm
	mov.b32 %r12042, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r12023, %r12042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r11784, %r12043;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12049, %r12025, %r12039, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12053, %r12032, %r12046, %r4379;
	// end inline asm
	shl.b32 	%r12060, %r12053, 4;
	// begin inline asm
	lop3.b32 %r12057, %r4385, %r12049, %r12060, 202;
	// end inline asm
	xor.b32  	%r16230, %r12057, -2004318072;
	// begin inline asm
	mov.b32 %r12064, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12062, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r12064, %r12062;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r11792, %r12063;
	// end inline asm
	// begin inline asm
	mov.b32 %r12069, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r12064, %r12069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12073, %r11800, %r12070;
	// end inline asm
	// begin inline asm
	mov.b32 %r12076, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12077, %r12064, %r12076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r11808, %r12077;
	// end inline asm
	// begin inline asm
	mov.b32 %r12083, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r12064, %r12083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r11816, %r12084;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12090, %r12066, %r12080, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12094, %r12073, %r12087, %r4379;
	// end inline asm
	shl.b32 	%r12101, %r12094, 4;
	// begin inline asm
	lop3.b32 %r12098, %r4385, %r12090, %r12101, 202;
	// end inline asm
	xor.b32  	%r16231, %r12098, -2004318072;
	// begin inline asm
	mov.b32 %r12105, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12103, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r12105, %r12103;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r11824, %r12104;
	// end inline asm
	// begin inline asm
	mov.b32 %r12110, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r12105, %r12110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12114, %r11832, %r12111;
	// end inline asm
	// begin inline asm
	mov.b32 %r12117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12118, %r12105, %r12117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r11840, %r12118;
	// end inline asm
	// begin inline asm
	mov.b32 %r12124, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r12105, %r12124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r11848, %r12125;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12131, %r12107, %r12121, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12135, %r12114, %r12128, %r4379;
	// end inline asm
	shl.b32 	%r12142, %r12135, 4;
	// begin inline asm
	lop3.b32 %r12139, %r4385, %r12131, %r12142, 202;
	// end inline asm
	xor.b32  	%r16232, %r12139, -2004318072;
	// begin inline asm
	mov.b32 %r12146, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12144, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r12146, %r12144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r11856, %r12145;
	// end inline asm
	// begin inline asm
	mov.b32 %r12151, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r12146, %r12151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12155, %r11864, %r12152;
	// end inline asm
	// begin inline asm
	mov.b32 %r12158, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12159, %r12146, %r12158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r11872, %r12159;
	// end inline asm
	// begin inline asm
	mov.b32 %r12165, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r12146, %r12165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r11880, %r12166;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12172, %r12148, %r12162, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12176, %r12155, %r12169, %r4379;
	// end inline asm
	shl.b32 	%r12183, %r12176, 4;
	// begin inline asm
	lop3.b32 %r12180, %r4385, %r12172, %r12183, 202;
	// end inline asm
	xor.b32  	%r16233, %r12180, -2004318072;
	// begin inline asm
	mov.b32 %r12187, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12185, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r12187, %r12185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r11888, %r12186;
	// end inline asm
	// begin inline asm
	mov.b32 %r12192, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r12187, %r12192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12196, %r11896, %r12193;
	// end inline asm
	// begin inline asm
	mov.b32 %r12199, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12200, %r12187, %r12199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r11904, %r12200;
	// end inline asm
	// begin inline asm
	mov.b32 %r12206, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r12187, %r12206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r11912, %r12207;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12213, %r12189, %r12203, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12217, %r12196, %r12210, %r4379;
	// end inline asm
	shl.b32 	%r12224, %r12217, 4;
	// begin inline asm
	lop3.b32 %r12221, %r4385, %r12213, %r12224, 202;
	// end inline asm
	xor.b32  	%r16234, %r12221, -2004318072;
	// begin inline asm
	mov.b32 %r12228, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12226, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r12228, %r12226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r11920, %r12227;
	// end inline asm
	// begin inline asm
	mov.b32 %r12233, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12234, %r12228, %r12233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12237, %r11928, %r12234;
	// end inline asm
	// begin inline asm
	mov.b32 %r12240, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12241, %r12228, %r12240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12244, %r11936, %r12241;
	// end inline asm
	// begin inline asm
	mov.b32 %r12247, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12248, %r12228, %r12247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r11944, %r12248;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12254, %r12230, %r12244, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12258, %r12237, %r12251, %r4379;
	// end inline asm
	shl.b32 	%r12265, %r12258, 4;
	// begin inline asm
	lop3.b32 %r12262, %r4385, %r12254, %r12265, 202;
	// end inline asm
	xor.b32  	%r16235, %r12262, -2004318072;
	// begin inline asm
	mov.b32 %r12269, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12267, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r12269, %r12267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12271, %r11952, %r12268;
	// end inline asm
	// begin inline asm
	mov.b32 %r12274, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12275, %r12269, %r12274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12278, %r11960, %r12275;
	// end inline asm
	// begin inline asm
	mov.b32 %r12281, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12282, %r12269, %r12281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12285, %r11968, %r12282;
	// end inline asm
	// begin inline asm
	mov.b32 %r12288, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12289, %r12269, %r12288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12292, %r11976, %r12289;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12295, %r12271, %r12285, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12299, %r12278, %r12292, %r4379;
	// end inline asm
	shl.b32 	%r12306, %r12299, 4;
	// begin inline asm
	lop3.b32 %r12303, %r4385, %r12295, %r12306, 202;
	// end inline asm
	xor.b32  	%r16236, %r12303, -2004318072;
	st.shared.u32 	[%rd97], %r16229;
	st.shared.u32 	[%rd99], %r16230;
	st.shared.u32 	[%rd101], %r16231;
	st.shared.u32 	[%rd103], %r16232;
	st.shared.u32 	[%rd105], %r16233;
	st.shared.u32 	[%rd107], %r16234;
	st.shared.u32 	[%rd109], %r16235;
	st.shared.u32 	[%rd111], %r16236;
	ld.shared.u32 	%r16354, [%rd81];
	ld.shared.u32 	%r16355, [%rd83];
	ld.shared.u32 	%r16356, [%rd85];
	ld.shared.u32 	%r16357, [%rd87];
	ld.shared.u32 	%r16366, [%rd89];
	ld.shared.u32 	%r16367, [%rd91];
	ld.shared.u32 	%r16368, [%rd93];
	ld.shared.u32 	%r16369, [%rd95];
	// begin inline asm
	mov.b32 %r12312, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12323, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12311, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r12309, %r862, %r12311, %r12312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12313, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12314, %r12312, %r12313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12317, %r12309, %r12314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12320, %r873, %r12311, %r12323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12324, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12325, %r12323, %r12324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12328, %r12320, %r12325;
	// end inline asm
	shr.u32 	%r12333, %r12311, 8;
	// begin inline asm
	lop3.b32 %r12331, %r862, %r12333, %r12312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12335, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12336, %r12312, %r12335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12339, %r12331, %r12336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12342, %r873, %r12333, %r12323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12346, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12347, %r12323, %r12346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12350, %r12342, %r12347;
	// end inline asm
	// begin inline asm
	mov.b32 %r12358, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12369, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12357, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r12355, %r862, %r12357, %r12358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12359, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12360, %r12358, %r12359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12363, %r12355, %r12360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12366, %r873, %r12357, %r12369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12370, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12371, %r12369, %r12370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12374, %r12366, %r12371;
	// end inline asm
	shr.u32 	%r12379, %r12357, 8;
	// begin inline asm
	lop3.b32 %r12377, %r862, %r12379, %r12358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12382, %r12358, %r12381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12385, %r12377, %r12382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12388, %r873, %r12379, %r12369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12392, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12393, %r12369, %r12392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12396, %r12388, %r12393;
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12415, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12403, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r12401, %r862, %r12403, %r12404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12405, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12406, %r12404, %r12405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12409, %r12401, %r12406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12412, %r873, %r12403, %r12415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12416, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12417, %r12415, %r12416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12420, %r12412, %r12417;
	// end inline asm
	shr.u32 	%r12425, %r12403, 8;
	// begin inline asm
	lop3.b32 %r12423, %r862, %r12425, %r12404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12428, %r12404, %r12427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12431, %r12423, %r12428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12434, %r873, %r12425, %r12415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12438, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12439, %r12415, %r12438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12442, %r12434, %r12439;
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12461, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12449, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r12447, %r862, %r12449, %r12450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12451, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12452, %r12450, %r12451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12455, %r12447, %r12452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12458, %r873, %r12449, %r12461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12462, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12463, %r12461, %r12462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12466, %r12458, %r12463;
	// end inline asm
	shr.u32 	%r12471, %r12449, 8;
	// begin inline asm
	lop3.b32 %r12469, %r862, %r12471, %r12450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12474, %r12450, %r12473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12477, %r12469, %r12474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12480, %r873, %r12471, %r12461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12484, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12485, %r12461, %r12484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12488, %r12480, %r12485;
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12507, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12495, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r12493, %r862, %r12495, %r12496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12497, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12498, %r12496, %r12497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12501, %r12493, %r12498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12504, %r873, %r12495, %r12507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12508, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12509, %r12507, %r12508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12512, %r12504, %r12509;
	// end inline asm
	shr.u32 	%r12517, %r12495, 8;
	// begin inline asm
	lop3.b32 %r12515, %r862, %r12517, %r12496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12520, %r12496, %r12519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12523, %r12515, %r12520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12526, %r873, %r12517, %r12507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12530, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12531, %r12507, %r12530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12534, %r12526, %r12531;
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12553, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12541, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r12539, %r862, %r12541, %r12542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12543, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12544, %r12542, %r12543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12547, %r12539, %r12544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12550, %r873, %r12541, %r12553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12554, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12555, %r12553, %r12554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12558, %r12550, %r12555;
	// end inline asm
	shr.u32 	%r12563, %r12541, 8;
	// begin inline asm
	lop3.b32 %r12561, %r862, %r12563, %r12542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12566, %r12542, %r12565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12569, %r12561, %r12566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12572, %r873, %r12563, %r12553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12576, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12577, %r12553, %r12576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12580, %r12572, %r12577;
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12599, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12587, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r12585, %r862, %r12587, %r12588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12589, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12590, %r12588, %r12589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12593, %r12585, %r12590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12596, %r873, %r12587, %r12599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12600, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12601, %r12599, %r12600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12604, %r12596, %r12601;
	// end inline asm
	shr.u32 	%r12609, %r12587, 8;
	// begin inline asm
	lop3.b32 %r12607, %r862, %r12609, %r12588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12612, %r12588, %r12611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12615, %r12607, %r12612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12618, %r873, %r12609, %r12599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12622, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12623, %r12599, %r12622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12626, %r12618, %r12623;
	// end inline asm
	// begin inline asm
	mov.b32 %r12634, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12645, {%rs2185, %rs2185};
	// end inline asm
	xor.b32  	%r12633, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r12631, %r862, %r12633, %r12634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12636, %r12634, %r12635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12639, %r12631, %r12636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12642, %r873, %r12633, %r12645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12646, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12647, %r12645, %r12646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12650, %r12642, %r12647;
	// end inline asm
	shr.u32 	%r12655, %r12633, 8;
	// begin inline asm
	lop3.b32 %r12653, %r862, %r12655, %r12634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12657, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12658, %r12634, %r12657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12661, %r12653, %r12658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12664, %r873, %r12655, %r12645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12668, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12669, %r12645, %r12668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12672, %r12664, %r12669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12675, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12677, %r12675, %r12317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12385;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12569;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12593;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12815, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12817, %r12815, %r12639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12820, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12822, %r12820, %r12650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12825, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12827, %r12825, %r12661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12830, %r418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12832, %r12830, %r12672;
	// end inline asm
	// begin inline asm
	mov.b32 %r12840, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12851, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12837, %r862, %r863, %r12840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12841, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12842, %r12840, %r12841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12845, %r12837, %r12842;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12848, %r873, %r863, %r12851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12852, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12853, %r12851, %r12852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12856, %r12848, %r12853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12859, %r862, %r885, %r12840, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12863, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12864, %r12840, %r12863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12867, %r12859, %r12864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12870, %r873, %r885, %r12851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12874, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12875, %r12851, %r12874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12878, %r12870, %r12875;
	// end inline asm
	// begin inline asm
	mov.b32 %r12886, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12897, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12883, %r862, %r909, %r12886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12887, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12888, %r12886, %r12887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12891, %r12883, %r12888;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12894, %r873, %r909, %r12897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12898, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12899, %r12897, %r12898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12902, %r12894, %r12899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12905, %r862, %r931, %r12886, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12910, %r12886, %r12909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12913, %r12905, %r12910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12916, %r873, %r931, %r12897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12920, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12921, %r12897, %r12920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12924, %r12916, %r12921;
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12943, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12929, %r862, %r955, %r12932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12933, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12934, %r12932, %r12933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12937, %r12929, %r12934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12940, %r873, %r955, %r12943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12944, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12945, %r12943, %r12944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12948, %r12940, %r12945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12951, %r862, %r977, %r12932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12956, %r12932, %r12955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12959, %r12951, %r12956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12962, %r873, %r977, %r12943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12966, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12967, %r12943, %r12966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12970, %r12962, %r12967;
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r12989, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12975, %r862, %r1001, %r12978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12979, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12980, %r12978, %r12979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12983, %r12975, %r12980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12986, %r873, %r1001, %r12989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12990, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12991, %r12989, %r12990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12994, %r12986, %r12991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12997, %r862, %r1023, %r12978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13002, %r12978, %r13001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13005, %r12997, %r13002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13008, %r873, %r1023, %r12989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13012, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13013, %r12989, %r13012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13016, %r13008, %r13013;
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13035, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13021, %r862, %r1047, %r13024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13025, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13026, %r13024, %r13025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13029, %r13021, %r13026;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13032, %r873, %r1047, %r13035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13036, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13037, %r13035, %r13036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13040, %r13032, %r13037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13043, %r862, %r1069, %r13024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13048, %r13024, %r13047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13051, %r13043, %r13048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13054, %r873, %r1069, %r13035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13058, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13059, %r13035, %r13058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13062, %r13054, %r13059;
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13081, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13067, %r862, %r1093, %r13070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13071, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13072, %r13070, %r13071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13075, %r13067, %r13072;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13078, %r873, %r1093, %r13081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13082, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13083, %r13081, %r13082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13086, %r13078, %r13083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13089, %r862, %r1115, %r13070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13094, %r13070, %r13093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13097, %r13089, %r13094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13100, %r873, %r1115, %r13081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13104, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13105, %r13081, %r13104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13108, %r13100, %r13105;
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13127, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13113, %r862, %r1139, %r13116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13117, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13118, %r13116, %r13117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13121, %r13113, %r13118;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13124, %r873, %r1139, %r13127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13128, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13129, %r13127, %r13128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13132, %r13124, %r13129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13135, %r862, %r1161, %r13116, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13140, %r13116, %r13139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13143, %r13135, %r13140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13146, %r873, %r1161, %r13127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13150, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13151, %r13127, %r13150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13154, %r13146, %r13151;
	// end inline asm
	// begin inline asm
	mov.b32 %r13162, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13173, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13159, %r862, %r1185, %r13162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13163, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13164, %r13162, %r13163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13167, %r13159, %r13164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13170, %r873, %r1185, %r13173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13174, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13175, %r13173, %r13174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13178, %r13170, %r13175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13181, %r862, %r1207, %r13162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13185, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13186, %r13162, %r13185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13189, %r13181, %r13186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13192, %r873, %r1207, %r13173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13196, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13197, %r13173, %r13196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13200, %r13192, %r13197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r292, %r12845, %r12677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r292, %r12856, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r292, %r12867, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r292, %r12878, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r292, %r12891, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r292, %r12902, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r292, %r12913, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r292, %r12924, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r292, %r12937, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r292, %r12948, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r292, %r12959, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r292, %r12970, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r292, %r12983, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r292, %r12994, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r292, %r13005, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r292, %r13016, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r310, %r13029, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r310, %r13040, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r310, %r13051, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r310, %r13062, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r310, %r13075, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r310, %r13086, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r310, %r13097, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r310, %r13108, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r310, %r13121, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r310, %r13132, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r310, %r13143, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r310, %r13154, %r12812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r310, %r13167, %r12817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r310, %r13178, %r12822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r310, %r13189, %r12827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r310, %r13200, %r12832;
	// end inline asm
	// begin inline asm
	mov.b32 %r13336, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13347, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13333, %r862, %r4679, %r13336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13337, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13338, %r13336, %r13337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13341, %r13333, %r13338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13344, %r873, %r4679, %r13347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13348, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13349, %r13347, %r13348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13352, %r13344, %r13349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13355, %r862, %r4701, %r13336, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13359, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13360, %r13336, %r13359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13363, %r13355, %r13360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13366, %r873, %r4701, %r13347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13370, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13371, %r13347, %r13370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13374, %r13366, %r13371;
	// end inline asm
	// begin inline asm
	mov.b32 %r13382, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13393, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13379, %r862, %r4725, %r13382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13383, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13384, %r13382, %r13383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13387, %r13379, %r13384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13390, %r873, %r4725, %r13393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13394, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13395, %r13393, %r13394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13398, %r13390, %r13395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13401, %r862, %r4747, %r13382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13406, %r13382, %r13405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13409, %r13401, %r13406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13412, %r873, %r4747, %r13393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13416, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13417, %r13393, %r13416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13420, %r13412, %r13417;
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13439, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13425, %r862, %r4771, %r13428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13429, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13430, %r13428, %r13429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13433, %r13425, %r13430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13436, %r873, %r4771, %r13439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13440, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13441, %r13439, %r13440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13444, %r13436, %r13441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13447, %r862, %r4793, %r13428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13452, %r13428, %r13451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13455, %r13447, %r13452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13458, %r873, %r4793, %r13439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13462, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13463, %r13439, %r13462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13466, %r13458, %r13463;
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13485, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13471, %r862, %r4817, %r13474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13475, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13476, %r13474, %r13475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13479, %r13471, %r13476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13482, %r873, %r4817, %r13485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13486, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13487, %r13485, %r13486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13490, %r13482, %r13487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13493, %r862, %r4839, %r13474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13498, %r13474, %r13497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13501, %r13493, %r13498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13504, %r873, %r4839, %r13485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13508, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13509, %r13485, %r13508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13512, %r13504, %r13509;
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13531, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13517, %r862, %r4863, %r13520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13521, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13522, %r13520, %r13521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13525, %r13517, %r13522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13528, %r873, %r4863, %r13531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13532, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13533, %r13531, %r13532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13536, %r13528, %r13533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13539, %r862, %r4885, %r13520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13544, %r13520, %r13543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13547, %r13539, %r13544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13550, %r873, %r4885, %r13531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13554, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13555, %r13531, %r13554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13558, %r13550, %r13555;
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13577, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13563, %r862, %r4909, %r13566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13567, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13568, %r13566, %r13567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13571, %r13563, %r13568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13574, %r873, %r4909, %r13577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13578, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13579, %r13577, %r13578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13582, %r13574, %r13579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13585, %r862, %r4931, %r13566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13590, %r13566, %r13589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13593, %r13585, %r13590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13596, %r873, %r4931, %r13577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13600, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13601, %r13577, %r13600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13604, %r13596, %r13601;
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13623, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13609, %r862, %r4955, %r13612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13613, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13614, %r13612, %r13613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13617, %r13609, %r13614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13620, %r873, %r4955, %r13623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13624, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13625, %r13623, %r13624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13628, %r13620, %r13625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13631, %r862, %r4977, %r13612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13636, %r13612, %r13635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13639, %r13631, %r13636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13642, %r873, %r4977, %r13623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13646, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13647, %r13623, %r13646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13650, %r13642, %r13647;
	// end inline asm
	// begin inline asm
	mov.b32 %r13658, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13669, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13655, %r862, %r5001, %r13658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13659, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13660, %r13658, %r13659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13663, %r13655, %r13660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13666, %r873, %r5001, %r13669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13670, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13671, %r13669, %r13670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13674, %r13666, %r13671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13677, %r862, %r5023, %r13658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13681, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13682, %r13658, %r13681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13685, %r13677, %r13682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13688, %r873, %r5023, %r13669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13692, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13693, %r13669, %r13692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13696, %r13688, %r13693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13699, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13701, %r13699, %r13341, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13705, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13707, %r13705, %r13352, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13711, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13713, %r13711, %r13363, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13717, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13719, %r13717, %r13374, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13723, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13725, %r13723, %r13387, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13729, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13731, %r13729, %r13398, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13735, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13737, %r13735, %r13409, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13741, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13743, %r13741, %r13420, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13747, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13749, %r13747, %r13433, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13753, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13755, %r13753, %r13444, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13759, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13761, %r13759, %r13455, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13765, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13767, %r13765, %r13466, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13771, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13773, %r13771, %r13479, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13777, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13779, %r13777, %r13490, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13783, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13785, %r13783, %r13501, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13789, %r328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13791, %r13789, %r13512, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13795, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13797, %r13795, %r13525, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13801, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13803, %r13801, %r13536, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13807, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13809, %r13807, %r13547, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13813, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13815, %r13813, %r13558, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13819, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13821, %r13819, %r13571, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13825, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13827, %r13825, %r13582, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13831, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13833, %r13831, %r13593, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13837, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13839, %r13837, %r13604, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13843, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13845, %r13843, %r13617, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13849, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13851, %r13849, %r13628, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13855, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13857, %r13855, %r13639, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13861, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13863, %r13861, %r13650, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13867, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13869, %r13867, %r13663, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13873, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13875, %r13873, %r13674, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13879, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13881, %r13879, %r13685, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13885, %r346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13887, %r13885, %r13696, %r13327;
	// end inline asm
	// begin inline asm
	mov.b32 %r13896, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13907, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13893, %r862, %r8495, %r13896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13897, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13898, %r13896, %r13897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13901, %r13893, %r13898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13904, %r873, %r8495, %r13907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13908, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13909, %r13907, %r13908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13912, %r13904, %r13909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13915, %r862, %r8517, %r13896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13919, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13920, %r13896, %r13919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13923, %r13915, %r13920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13926, %r873, %r8517, %r13907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13930, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13931, %r13907, %r13930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13934, %r13926, %r13931;
	// end inline asm
	// begin inline asm
	mov.b32 %r13942, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13953, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13939, %r862, %r8541, %r13942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13943, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13944, %r13942, %r13943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13947, %r13939, %r13944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13950, %r873, %r8541, %r13953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13954, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13955, %r13953, %r13954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13958, %r13950, %r13955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13961, %r862, %r8563, %r13942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13966, %r13942, %r13965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13969, %r13961, %r13966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13972, %r873, %r8563, %r13953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13976, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13977, %r13953, %r13976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13980, %r13972, %r13977;
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r13999, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13985, %r862, %r8587, %r13988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13989, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13990, %r13988, %r13989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13993, %r13985, %r13990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13996, %r873, %r8587, %r13999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14000, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14001, %r13999, %r14000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14004, %r13996, %r14001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14007, %r862, %r8609, %r13988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14012, %r13988, %r14011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14015, %r14007, %r14012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14018, %r873, %r8609, %r13999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14022, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14023, %r13999, %r14022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14026, %r14018, %r14023;
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14045, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14031, %r862, %r8633, %r14034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14035, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14036, %r14034, %r14035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14039, %r14031, %r14036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14042, %r873, %r8633, %r14045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14046, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14047, %r14045, %r14046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14050, %r14042, %r14047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14053, %r862, %r8655, %r14034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14058, %r14034, %r14057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14061, %r14053, %r14058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14064, %r873, %r8655, %r14045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14068, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14069, %r14045, %r14068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14072, %r14064, %r14069;
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14091, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14077, %r862, %r8679, %r14080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14081, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14082, %r14080, %r14081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14085, %r14077, %r14082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14088, %r873, %r8679, %r14091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14092, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14093, %r14091, %r14092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14096, %r14088, %r14093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14099, %r862, %r8701, %r14080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14104, %r14080, %r14103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14107, %r14099, %r14104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14110, %r873, %r8701, %r14091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14114, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14115, %r14091, %r14114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14118, %r14110, %r14115;
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14137, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14123, %r862, %r8725, %r14126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14127, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14128, %r14126, %r14127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14131, %r14123, %r14128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14134, %r873, %r8725, %r14137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14138, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14139, %r14137, %r14138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14142, %r14134, %r14139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14145, %r862, %r8747, %r14126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14150, %r14126, %r14149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14153, %r14145, %r14150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14156, %r873, %r8747, %r14137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14160, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14161, %r14137, %r14160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14164, %r14156, %r14161;
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14183, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14169, %r862, %r8771, %r14172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14173, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14174, %r14172, %r14173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14177, %r14169, %r14174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14180, %r873, %r8771, %r14183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14184, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14185, %r14183, %r14184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14188, %r14180, %r14185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14191, %r862, %r8793, %r14172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14196, %r14172, %r14195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14199, %r14191, %r14196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14202, %r873, %r8793, %r14183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14206, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14207, %r14183, %r14206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14210, %r14202, %r14207;
	// end inline asm
	// begin inline asm
	mov.b32 %r14218, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r14229, {%rs2185, %rs2185};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14215, %r862, %r8817, %r14218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14219, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14220, %r14218, %r14219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14223, %r14215, %r14220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14226, %r873, %r8817, %r14229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14230, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14231, %r14229, %r14230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14234, %r14226, %r14231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14237, %r862, %r8839, %r14218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14241, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14242, %r14218, %r14241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14245, %r14237, %r14242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14248, %r873, %r8839, %r14229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14252, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14253, %r14229, %r14252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14256, %r14248, %r14253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r364, %r13901, %r13701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r364, %r13912, %r13707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r364, %r13923, %r13713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r364, %r13934, %r13719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r364, %r13947, %r13725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r364, %r13958, %r13731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r364, %r13969, %r13737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r364, %r13980, %r13743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r364, %r13993, %r13749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r364, %r14004, %r13755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r364, %r14015, %r13761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r364, %r14026, %r13767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r364, %r14039, %r13773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r364, %r14050, %r13779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r364, %r14061, %r13785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r364, %r14072, %r13791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r382, %r14085, %r13797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r382, %r14096, %r13803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r382, %r14107, %r13809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r382, %r14118, %r13815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r382, %r14131, %r13821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r382, %r14142, %r13827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r382, %r14153, %r13833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r382, %r14164, %r13839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r382, %r14177, %r13845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14499, %r382, %r14188, %r13851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14511, %r382, %r14199, %r13857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14508, %r382, %r14210, %r13863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14520, %r382, %r14223, %r13869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r382, %r14234, %r13875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r382, %r14245, %r13881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r382, %r14256, %r13887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14387, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14389, %r14387, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r421, %r14394, %r14389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14396, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14398, %r14396, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r421, %r14403, %r14398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14405, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14407, %r14405, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r421, %r14412, %r14407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14414, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14416, %r14414, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r421, %r14421, %r14416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14423, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14425, %r14423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r421, %r14430, %r14425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14432, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14434, %r14432, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r421, %r14439, %r14434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14441, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14443, %r14441, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r421, %r14448, %r14443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14450, %r427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14452, %r14450, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r421, %r14457, %r14452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14459, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14461, %r14459, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r424, %r14466, %r14461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14468, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r14468, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r424, %r14475, %r14470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14477, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14479, %r14477, %r14481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r424, %r14484, %r14479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14486, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r14486, %r14490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r424, %r14493, %r14488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14495, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14497, %r14495, %r14499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r424, %r14502, %r14497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14504, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14506, %r14504, %r14508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r424, %r14511, %r14506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14513, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14515, %r14513, %r14517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r424, %r14520, %r14515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14522, %r430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14524, %r14522, %r14526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14527, %r424, %r14529, %r14524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14531, %r427, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r421, %r14391, %r14531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14538, %r427, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r421, %r14400, %r14538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14545, %r427, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r421, %r14409, %r14545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14552, %r427, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14555, %r421, %r14418, %r14552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14559, %r427, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14562, %r421, %r14427, %r14559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14566, %r427, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14569, %r421, %r14436, %r14566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14573, %r427, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14576, %r421, %r14445, %r14573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14580, %r427, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14583, %r421, %r14454, %r14580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14587, %r430, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14590, %r424, %r14463, %r14587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14594, %r430, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14597, %r424, %r14472, %r14594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14601, %r430, %r14484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14604, %r424, %r14481, %r14601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14608, %r430, %r14493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14611, %r424, %r14490, %r14608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14615, %r430, %r14502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14618, %r424, %r14499, %r14615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14622, %r430, %r14511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14625, %r424, %r14508, %r14622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14629, %r430, %r14520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14632, %r424, %r14517, %r14629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14636, %r430, %r14529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14639, %r424, %r14526, %r14636;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14810, %r14807}, {%r488, %r494, %r491, %r497}, {%r14392, %r14534}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14819, %r14816}, {%r488, %r494, %r491, %r497}, {%r14401, %r14541}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14828, %r14825}, {%r488, %r494, %r491, %r497}, {%r14410, %r14548}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14837, %r14834}, {%r488, %r494, %r491, %r497}, {%r14419, %r14555}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14846, %r14843}, {%r488, %r494, %r491, %r497}, {%r14428, %r14562}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14855, %r14852}, {%r488, %r494, %r491, %r497}, {%r14437, %r14569}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14864, %r14861}, {%r488, %r494, %r491, %r497}, {%r14446, %r14576}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14873, %r14870}, {%r488, %r494, %r491, %r497}, {%r14455, %r14583}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14882, %r14879}, {%r488, %r494, %r491, %r497}, {%r14464, %r14590}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14891, %r14888}, {%r488, %r494, %r491, %r497}, {%r14473, %r14597}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14900, %r14897}, {%r488, %r494, %r491, %r497}, {%r14482, %r14604}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14909, %r14906}, {%r488, %r494, %r491, %r497}, {%r14491, %r14611}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14918, %r14915}, {%r488, %r494, %r491, %r497}, {%r14500, %r14618}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14927, %r14924}, {%r488, %r494, %r491, %r497}, {%r14509, %r14625}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14936, %r14933}, {%r488, %r494, %r491, %r497}, {%r14518, %r14632}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14945, %r14942}, {%r488, %r494, %r491, %r497}, {%r14527, %r14639}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14803, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14805, %r14803, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14808, %r538, %r14810, %r14805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14812, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14814, %r14812, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14817, %r538, %r14819, %r14814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14821, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14823, %r14821, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14826, %r538, %r14828, %r14823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14830, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14832, %r14830, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14835, %r538, %r14837, %r14832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14839, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14841, %r14839, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14844, %r538, %r14846, %r14841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14848, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14850, %r14848, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14853, %r538, %r14855, %r14850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14857, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14859, %r14857, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14862, %r538, %r14864, %r14859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14866, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14868, %r14866, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14871, %r538, %r14873, %r14868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14875, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14877, %r14875, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14880, %r538, %r14882, %r14877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14884, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r14884, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r538, %r14891, %r14886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14893, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14895, %r14893, %r14897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14898, %r538, %r14900, %r14895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14902, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r14902, %r14906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r538, %r14909, %r14904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14911, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14913, %r14911, %r14915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14916, %r538, %r14918, %r14913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14920, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14922, %r14920, %r14924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14925, %r538, %r14927, %r14922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14929, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14931, %r14929, %r14933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14934, %r538, %r14936, %r14931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14938, %r541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14940, %r14938, %r14942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14943, %r538, %r14945, %r14940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14947, %r541, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14950, %r538, %r14807, %r14947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14954, %r541, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14957, %r538, %r14816, %r14954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14961, %r541, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14964, %r538, %r14825, %r14961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14968, %r541, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14971, %r538, %r14834, %r14968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14975, %r541, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14978, %r538, %r14843, %r14975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14982, %r541, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14985, %r538, %r14852, %r14982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14989, %r541, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14992, %r538, %r14861, %r14989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14996, %r541, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14999, %r538, %r14870, %r14996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15003, %r541, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15006, %r538, %r14879, %r15003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15010, %r541, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15013, %r538, %r14888, %r15010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15017, %r541, %r14900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15020, %r538, %r14897, %r15017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15024, %r541, %r14909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15027, %r538, %r14906, %r15024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15031, %r541, %r14918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15034, %r538, %r14915, %r15031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15038, %r541, %r14927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15041, %r538, %r14924, %r15038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15045, %r541, %r14936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15048, %r538, %r14933, %r15045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15052, %r541, %r14945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15055, %r538, %r14942, %r15052;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15348, %r15351}, {%r576, %r582, %r579, %r585}, {%r14808, %r14950}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15354, %r15357}, {%r576, %r582, %r579, %r585}, {%r14817, %r14957}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15360, %r15363}, {%r576, %r582, %r579, %r585}, {%r14826, %r14964}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15366, %r15369}, {%r576, %r582, %r579, %r585}, {%r14835, %r14971}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15372, %r15375}, {%r576, %r582, %r579, %r585}, {%r14844, %r14978}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15378, %r15381}, {%r576, %r582, %r579, %r585}, {%r14853, %r14985}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15384, %r15387}, {%r576, %r582, %r579, %r585}, {%r14862, %r14992}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15390, %r15393}, {%r576, %r582, %r579, %r585}, {%r14871, %r14999}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15349, %r15352}, {%r576, %r582, %r579, %r585}, {%r14880, %r15006}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15355, %r15358}, {%r576, %r582, %r579, %r585}, {%r14889, %r15013}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15361, %r15364}, {%r576, %r582, %r579, %r585}, {%r14898, %r15020}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15367, %r15370}, {%r576, %r582, %r579, %r585}, {%r14907, %r15027}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15373, %r15376}, {%r576, %r582, %r579, %r585}, {%r14916, %r15034}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15379, %r15382}, {%r576, %r582, %r579, %r585}, {%r14925, %r15041}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15385, %r15388}, {%r576, %r582, %r579, %r585}, {%r14934, %r15048}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15391, %r15394}, {%r576, %r582, %r579, %r585}, {%r14943, %r15055}, {%r781, %r781};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15347, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15350, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15353, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15356, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15359, %r15360, %r15361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15362, %r15363, %r15364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15365, %r15366, %r15367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15368, %r15369, %r15370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15371, %r15372, %r15373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15374, %r15375, %r15376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15377, %r15378, %r15379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15380, %r15381, %r15382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15383, %r15384, %r15385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15386, %r15387, %r15388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15389, %r15390, %r15391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15392, %r15393, %r15394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15395, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15398, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15401, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15404, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15407, %r15360, %r15361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15410, %r15363, %r15364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15413, %r15366, %r15367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15416, %r15369, %r15370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15419, %r15372, %r15373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15422, %r15375, %r15376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15425, %r15378, %r15379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15428, %r15381, %r15382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15431, %r15384, %r15385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15434, %r15387, %r15388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15437, %r15390, %r15391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15440, %r15393, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r179, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r179, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r179, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r179, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r179, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r179, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r179, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r179, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r179, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r179, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r179, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r179, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r179, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r179, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r179, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r179, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r180, %r15395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15494, %r180, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15497, %r180, %r15401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15500, %r180, %r15404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15503, %r180, %r15407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15506, %r180, %r15410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15509, %r180, %r15413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15512, %r180, %r15416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15515, %r180, %r15419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15518, %r180, %r15422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15521, %r180, %r15425;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15524, %r180, %r15428;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15527, %r180, %r15431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15530, %r180, %r15434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15533, %r180, %r15437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15536, %r180, %r15440;
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15541, %r15443, %r15539;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15544, %r15541, %r15540;
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15549, %r15446, %r15547;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15552, %r15549, %r15548;
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15557, %r15449, %r15555;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15560, %r15557, %r15556;
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15565, %r15452, %r15563;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15568, %r15565, %r15564;
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15573, %r15455, %r15571;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15576, %r15573, %r15572;
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15581, %r15458, %r15579;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15584, %r15581, %r15580;
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15589, %r15461, %r15587;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15592, %r15589, %r15588;
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15597, %r15464, %r15595;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15600, %r15597, %r15596;
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15605, %r15467, %r15603;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15608, %r15605, %r15604;
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15613, %r15470, %r15611;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15616, %r15613, %r15612;
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15621, %r15473, %r15619;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15624, %r15621, %r15620;
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15629, %r15476, %r15627;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15632, %r15629, %r15628;
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15637, %r15479, %r15635;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15640, %r15637, %r15636;
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15645, %r15482, %r15643;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15648, %r15645, %r15644;
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15653, %r15485, %r15651;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15656, %r15653, %r15652;
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15661, %r15488, %r15659;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15664, %r15661, %r15660;
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15669, %r15491, %r15667;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15672, %r15669, %r15668;
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15677, %r15494, %r15675;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15680, %r15677, %r15676;
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15685, %r15497, %r15683;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15688, %r15685, %r15684;
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15693, %r15500, %r15691;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15696, %r15693, %r15692;
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15701, %r15503, %r15699;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15704, %r15701, %r15700;
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15709, %r15506, %r15707;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15712, %r15709, %r15708;
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15717, %r15509, %r15715;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15720, %r15717, %r15716;
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15725, %r15512, %r15723;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15728, %r15725, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15732, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15733, %r15515, %r15731;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15736, %r15733, %r15732;
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15741, %r15518, %r15739;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15744, %r15741, %r15740;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15748, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15749, %r15521, %r15747;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15752, %r15749, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15756, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15757, %r15524, %r15755;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15760, %r15757, %r15756;
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15765, %r15527, %r15763;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15768, %r15765, %r15764;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15773, %r15530, %r15771;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15776, %r15773, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15780, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15781, %r15533, %r15779;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15784, %r15781, %r15780;
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs418, %rs418};
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs420, %rs420};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15789, %r15536, %r15787;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15792, %r15789, %r15788;
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15796, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15797, %r15798, %r15796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15800, %r15544, %r15797;
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15804, %r15798, %r15803;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15807, %r15552, %r15804;
	// end inline asm
	// begin inline asm
	mov.b32 %r15810, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15811, %r15798, %r15810;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15814, %r15560, %r15811;
	// end inline asm
	// begin inline asm
	mov.b32 %r15817, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15798, %r15817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15568, %r15818;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15824, %r15800, %r15814, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15828, %r15807, %r15821, %r4379;
	// end inline asm
	shl.b32 	%r15835, %r15828, 4;
	// begin inline asm
	lop3.b32 %r15832, %r4385, %r15824, %r15835, 202;
	// end inline asm
	xor.b32  	%r16237, %r15832, -2004318072;
	// begin inline asm
	mov.b32 %r15839, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15837, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15838, %r15839, %r15837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15576, %r15838;
	// end inline asm
	// begin inline asm
	mov.b32 %r15844, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15845, %r15839, %r15844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15848, %r15584, %r15845;
	// end inline asm
	// begin inline asm
	mov.b32 %r15851, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15852, %r15839, %r15851;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15592, %r15852;
	// end inline asm
	// begin inline asm
	mov.b32 %r15858, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15839, %r15858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15600, %r15859;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15865, %r15841, %r15855, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15869, %r15848, %r15862, %r4379;
	// end inline asm
	shl.b32 	%r15876, %r15869, 4;
	// begin inline asm
	lop3.b32 %r15873, %r4385, %r15865, %r15876, 202;
	// end inline asm
	xor.b32  	%r16238, %r15873, -2004318072;
	// begin inline asm
	mov.b32 %r15880, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15878, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15880, %r15878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15608, %r15879;
	// end inline asm
	// begin inline asm
	mov.b32 %r15885, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15880, %r15885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15889, %r15616, %r15886;
	// end inline asm
	// begin inline asm
	mov.b32 %r15892, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15893, %r15880, %r15892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15624, %r15893;
	// end inline asm
	// begin inline asm
	mov.b32 %r15899, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15880, %r15899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15632, %r15900;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15906, %r15882, %r15896, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15910, %r15889, %r15903, %r4379;
	// end inline asm
	shl.b32 	%r15917, %r15910, 4;
	// begin inline asm
	lop3.b32 %r15914, %r4385, %r15906, %r15917, 202;
	// end inline asm
	xor.b32  	%r16239, %r15914, -2004318072;
	// begin inline asm
	mov.b32 %r15921, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15919, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15921, %r15919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15640, %r15920;
	// end inline asm
	// begin inline asm
	mov.b32 %r15926, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15921, %r15926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15930, %r15648, %r15927;
	// end inline asm
	// begin inline asm
	mov.b32 %r15933, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15934, %r15921, %r15933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15656, %r15934;
	// end inline asm
	// begin inline asm
	mov.b32 %r15940, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15921, %r15940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15664, %r15941;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15947, %r15923, %r15937, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15951, %r15930, %r15944, %r4379;
	// end inline asm
	shl.b32 	%r15958, %r15951, 4;
	// begin inline asm
	lop3.b32 %r15955, %r4385, %r15947, %r15958, 202;
	// end inline asm
	xor.b32  	%r16240, %r15955, -2004318072;
	// begin inline asm
	mov.b32 %r15962, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r15960, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15962, %r15960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15672, %r15961;
	// end inline asm
	// begin inline asm
	mov.b32 %r15967, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15962, %r15967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15971, %r15680, %r15968;
	// end inline asm
	// begin inline asm
	mov.b32 %r15974, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15975, %r15962, %r15974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15688, %r15975;
	// end inline asm
	// begin inline asm
	mov.b32 %r15981, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15962, %r15981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15696, %r15982;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15988, %r15964, %r15978, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15992, %r15971, %r15985, %r4379;
	// end inline asm
	shl.b32 	%r15999, %r15992, 4;
	// begin inline asm
	lop3.b32 %r15996, %r4385, %r15988, %r15999, 202;
	// end inline asm
	xor.b32  	%r16241, %r15996, -2004318072;
	// begin inline asm
	mov.b32 %r16003, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r16001, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r16003, %r16001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15704, %r16002;
	// end inline asm
	// begin inline asm
	mov.b32 %r16008, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r16003, %r16008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16012, %r15712, %r16009;
	// end inline asm
	// begin inline asm
	mov.b32 %r16015, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16016, %r16003, %r16015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r15720, %r16016;
	// end inline asm
	// begin inline asm
	mov.b32 %r16022, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r16003, %r16022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r15728, %r16023;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16029, %r16005, %r16019, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16033, %r16012, %r16026, %r4379;
	// end inline asm
	shl.b32 	%r16040, %r16033, 4;
	// begin inline asm
	lop3.b32 %r16037, %r4385, %r16029, %r16040, 202;
	// end inline asm
	xor.b32  	%r16242, %r16037, -2004318072;
	// begin inline asm
	mov.b32 %r16044, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r16042, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r16044, %r16042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r15736, %r16043;
	// end inline asm
	// begin inline asm
	mov.b32 %r16049, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16050, %r16044, %r16049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16053, %r15744, %r16050;
	// end inline asm
	// begin inline asm
	mov.b32 %r16056, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16057, %r16044, %r16056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16060, %r15752, %r16057;
	// end inline asm
	// begin inline asm
	mov.b32 %r16063, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16064, %r16044, %r16063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16067, %r15760, %r16064;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16070, %r16046, %r16060, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16074, %r16053, %r16067, %r4379;
	// end inline asm
	shl.b32 	%r16081, %r16074, 4;
	// begin inline asm
	lop3.b32 %r16078, %r4385, %r16070, %r16081, 202;
	// end inline asm
	xor.b32  	%r16243, %r16078, -2004318072;
	// begin inline asm
	mov.b32 %r16085, {%rs2393, %rs2393};
	// end inline asm
	// begin inline asm
	mov.b32 %r16083, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16084, %r16085, %r16083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16087, %r15768, %r16084;
	// end inline asm
	// begin inline asm
	mov.b32 %r16090, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16091, %r16085, %r16090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16094, %r15776, %r16091;
	// end inline asm
	// begin inline asm
	mov.b32 %r16097, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16098, %r16085, %r16097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16101, %r15784, %r16098;
	// end inline asm
	// begin inline asm
	mov.b32 %r16104, {%rs2401, %rs2401};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16105, %r16085, %r16104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16108, %r15792, %r16105;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16111, %r16087, %r16101, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16115, %r16094, %r16108, %r4379;
	// end inline asm
	shl.b32 	%r16122, %r16115, 4;
	// begin inline asm
	lop3.b32 %r16119, %r4385, %r16111, %r16122, 202;
	// end inline asm
	xor.b32  	%r16244, %r16119, -2004318072;
	st.shared.u32 	[%rd97], %r16237;
	st.shared.u32 	[%rd99], %r16238;
	st.shared.u32 	[%rd101], %r16239;
	st.shared.u32 	[%rd103], %r16240;
	st.shared.u32 	[%rd105], %r16241;
	st.shared.u32 	[%rd107], %r16242;
	st.shared.u32 	[%rd109], %r16243;
	st.shared.u32 	[%rd111], %r16244;
	add.s32 	%r16395, %r16395, 128;
	setp.eq.s32 	%p306, %r16395, 256;
	@%p306 bra 	$L__BB0_119;
	bra.uni 	$L__BB0_118;
$L__BB0_119:                            // %guard_exit29633
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16250, [%rd5];
	ld.shared.u32 	%r16251, [%rd6+128];
	ld.shared.u32 	%r16258, [%rd6+4];
	ld.shared.u32 	%r16259, [%rd6+132];
	ld.shared.u32 	%r16266, [%rd7];
	ld.shared.u32 	%r16267, [%rd8+128];
	ld.shared.u32 	%r16274, [%rd8+4];
	ld.shared.u32 	%r16275, [%rd8+132];
	ld.shared.u32 	%r16282, [%rd5+16644];
	ld.shared.u32 	%r16283, [%rd6+16772];
	ld.shared.u32 	%r16290, [%rd6+16648];
	ld.shared.u32 	%r16291, [%rd6+16776];
	ld.shared.u32 	%r16298, [%rd7+16644];
	ld.shared.u32 	%r16299, [%rd8+16772];
	ld.shared.u32 	%r16306, [%rd8+16648];
	ld.shared.u32 	%r16307, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16245, %r16250, %r16251, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16249, %r16250, %r16251, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16253, %r16258, %r16259, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16257, %r16258, %r16259, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16261, %r16266, %r16267, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16265, %r16266, %r16267, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16269, %r16274, %r16275, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16273, %r16274, %r16275, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16277, %r16282, %r16283, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16281, %r16282, %r16283, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16285, %r16290, %r16291, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16289, %r16290, %r16291, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16293, %r16298, %r16299, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16297, %r16298, %r16299, %r780;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16301, %r16306, %r16307, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16305, %r16306, %r16307, %r780;
	// end inline asm
	selp.b32 	%r16309, %r16249, %r16245, %p292;
	shfl.sync.bfly.b32	%r233, %r16309, 8, 31, -1;
	selp.b32 	%r16310, %r16257, %r16253, %p292;
	shfl.sync.bfly.b32	%r234, %r16310, 8, 31, -1;
	selp.b32 	%r16311, %r16265, %r16261, %p292;
	shfl.sync.bfly.b32	%r235, %r16311, 8, 31, -1;
	selp.b32 	%r16312, %r16273, %r16269, %p292;
	shfl.sync.bfly.b32	%r236, %r16312, 8, 31, -1;
	selp.b32 	%r16313, %r16281, %r16277, %p292;
	shfl.sync.bfly.b32	%r16314, %r16313, 8, 31, -1;
	selp.b32 	%r16315, %r16289, %r16285, %p292;
	shfl.sync.bfly.b32	%r16316, %r16315, 8, 31, -1;
	selp.b32 	%r16317, %r16297, %r16293, %p292;
	shfl.sync.bfly.b32	%r16318, %r16317, 8, 31, -1;
	selp.b32 	%r16319, %r16305, %r16301, %p292;
	shfl.sync.bfly.b32	%r16320, %r16319, 8, 31, -1;
	setp.lt.u32 	%p308, %r16370, 512;
	@%p308 bra 	$L__BB0_121;
// %bb.120:                             // %pass28284
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r16321, %r236, %r16273, %p292;
	selp.b32 	%r16322, %r16269, %r236, %p292;
	selp.b32 	%r16323, %r235, %r16265, %p292;
	selp.b32 	%r16324, %r16261, %r235, %p292;
	selp.b32 	%r16325, %r234, %r16257, %p292;
	selp.b32 	%r16326, %r16253, %r234, %p292;
	selp.b32 	%r16327, %r233, %r16249, %p292;
	selp.b32 	%r16328, %r16245, %r233, %p292;
	shl.b32 	%r16329, %r16370, 8;
	or.b32  	%r16330, %r88, %r16329;
	cvt.s64.s32 	%rd112, %r16330;
	add.s64 	%rd113, %rd112, %rd9;
	shr.u64 	%rd114, %rd113, 41;
	add.s64 	%rd115, %rd113, %rd114;
	shr.s64 	%rd116, %rd115, 23;
	setp.lt.s64 	%p310, %rd113, 0;
	and.b64  	%rd117, %rd115, -8388608;
	setp.ne.s64 	%p311, %rd117, %rd113;
	and.pred  	%p312, %p310, %p311;
	selp.u64 	%rd118, 1, 0, %p312;
	sub.s64 	%rd119, %rd118, %rd116;
	shl.b64 	%rd120, %rd119, 23;
	add.s64 	%rd121, %rd120, %rd113;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r16328, %r16326, %r16327, %r16325};
	or.b32  	%r16331, %r89, %r16329;
	cvt.u64.u32 	%rd124, %r16331;
	add.s64 	%rd125, %rd124, %rd9;
	shr.u64 	%rd126, %rd125, 41;
	add.s64 	%rd127, %rd125, %rd126;
	shr.u64 	%rd128, %rd127, 23;
	shr.u64 	%rd129, %rd125, 63;
	sub.s64 	%rd130, %rd129, %rd128;
	shl.b64 	%rd131, %rd130, 23;
	add.s64 	%rd132, %rd131, %rd125;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.v4.u32 	[%rd134], {%r16324, %r16322, %r16323, %r16321};
$L__BB0_121:                            // %pass28475
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r224, %r16370, 128;
	setp.lt.u32 	%p313, %r224, 384;
	@%p313 bra 	$L__BB0_122;
// %bb.164:                             // %pass28498
                                        //   in Loop: Header=BB0_116 Depth=1
	selp.b32 	%r237, %r16277, %r16314, %p292;
	selp.b32 	%r238, %r16314, %r16281, %p292;
	selp.b32 	%r239, %r16285, %r16316, %p292;
	selp.b32 	%r240, %r16316, %r16289, %p292;
	selp.b32 	%r241, %r16293, %r16318, %p292;
	selp.b32 	%r242, %r16318, %r16297, %p292;
	selp.b32 	%r243, %r16301, %r16320, %p292;
	selp.b32 	%r244, %r16320, %r16305, %p292;
	shl.b32 	%r16332, %r224, 8;
	or.b32  	%r16333, %r88, %r16332;
	cvt.s64.s32 	%rd135, %r16333;
	add.s64 	%rd136, %rd135, %rd9;
	shr.u64 	%rd137, %rd136, 41;
	add.s64 	%rd138, %rd136, %rd137;
	shr.s64 	%rd139, %rd138, 23;
	setp.lt.s64 	%p314, %rd136, 0;
	and.b64  	%rd140, %rd138, -8388608;
	setp.ne.s64 	%p315, %rd140, %rd136;
	and.pred  	%p316, %p314, %p315;
	selp.u64 	%rd141, 1, 0, %p316;
	sub.s64 	%rd142, %rd141, %rd139;
	shl.b64 	%rd143, %rd142, 23;
	add.s64 	%rd144, %rd143, %rd136;
	shl.b64 	%rd145, %rd144, 2;
	add.s64 	%rd146, %rd3, %rd145;
	st.global.v4.u32 	[%rd146], {%r237, %r239, %r238, %r240};
	or.b32  	%r16334, %r89, %r16332;
	cvt.u64.u32 	%rd147, %r16334;
	add.s64 	%rd148, %rd147, %rd9;
	shr.u64 	%rd149, %rd148, 41;
	add.s64 	%rd150, %rd148, %rd149;
	shr.u64 	%rd151, %rd150, 23;
	shr.u64 	%rd152, %rd148, 63;
	sub.s64 	%rd153, %rd152, %rd151;
	shl.b64 	%rd154, %rd153, 23;
	add.s64 	%rd155, %rd154, %rd148;
	shl.b64 	%rd156, %rd155, 2;
	add.s64 	%rd157, %rd3, %rd156;
	st.global.v4.u32 	[%rd157], {%r241, %r243, %r242, %r244};
	bra.uni 	$L__BB0_122;
$L__BB0_123:                            // %L70929
	mov.u32 	%r16335, 0;
	st.global.u32 	[%rd4], %r16335;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r16337, 2;
	st.global.u32 	[%rd4], %r16337;
	mov.u64 	%rd160, exception5805;
	cvta.global.u64 	%rd161, %rd160;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd161;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r245;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16336, 3;
	st.global.u32 	[%rd4], %r16336;
	mov.u64 	%rd158, exception5805;
	cvta.global.u64 	%rd159, %rd158;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd159;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r245;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd29, exception15829;
	cvta.global.u64 	%rd30, %rd29;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd30;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r245;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
