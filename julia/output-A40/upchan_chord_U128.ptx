// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5788[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<339>;
	.reg .b16 	%rs<2389>;
	.reg .f32 	%f<1392>;
	.reg .b32 	%r<16392>;
	.reg .b64 	%rd<174>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r247, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r248, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r248, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd63, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r249, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r250, %r249, %r1;
	or.b32  	%r251, %r250, %r4;
	mul.wide.u32 	%rd69, %r251, 4;
	add.s64 	%rd4, %rd63, %rd69;
	mov.u32 	%r252, 1;
	st.global.u32 	[%rd4], %r252;
	ld.global.u32 	%r5, [%rd47];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L231
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd51];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L241
	ld.param.u64 	%rd55, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd55];
	sub.s32 	%r253, %r6, %r5;
	and.b32  	%r254, %r253, 255;
	setp.ne.s32 	%p6, %r254, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L247
	ld.param.u64 	%rd59, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd59];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L257
	sub.s32 	%r255, %r8, %r7;
	and.b32  	%r256, %r255, 1;
	setp.eq.b32 	%p12, %r256, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %pass81
	bfe.u32 	%r218, %r1, 1, 1;
	and.b32  	%r219, %r1, 1;
	bfe.u32 	%r220, %r1, 2, 1;
	shr.u32 	%r221, %r1, 4;
	shl.b32 	%r264, %r221, 2;
	shl.b32 	%r265, %r220, 3;
	shl.b32 	%r266, %r219, 4;
	shl.b32 	%r267, %r218, 5;
	or.b32  	%r268, %r266, %r267;
	or.b32  	%r269, %r265, %r268;
	or.b32  	%r270, %r264, %r269;
	bfe.u32 	%r223, %r1, 3, 1;
	shl.b32 	%r271, %r223, 1;
	or.b32  	%r224, %r271, %r270;
	or.b32  	%r225, %r224, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r224;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	LBB0_9;
	bra.uni 	LBB0_10;
LBB0_9:                                 // %L823
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
LBB0_10:                                // %L826
	cvt.rn.f32.s32 	%f293, %r225;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L843
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
LBB0_12:                                // %L846
	or.b32  	%r289, %r224, 1;
	or.b32  	%r10, %r224, 65;
	cvt.rn.f32.s32 	%f328, %r289;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L932
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
LBB0_14:                                // %L935
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L952
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
LBB0_16:                                // %L955
	or.b32  	%r307, %r224, 128;
	or.b32  	%r12, %r224, 192;
	cvt.rn.f32.s32 	%f397, %r307;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L1041
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
LBB0_18:                                // %L1044
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L1061
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
LBB0_20:                                // %L1064
	or.b32  	%r325, %r224, 129;
	or.b32  	%r14, %r224, 193;
	cvt.rn.f32.s32 	%f466, %r325;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L1150
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
LBB0_22:                                // %L1153
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1170
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
LBB0_24:                                // %L1173
	or.b32  	%r343, %r224, 256;
	or.b32  	%r16, %r224, 320;
	cvt.rn.f32.s32 	%f535, %r343;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1259
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
LBB0_26:                                // %L1262
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1279
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
LBB0_28:                                // %L1282
	or.b32  	%r361, %r224, 257;
	or.b32  	%r18, %r224, 321;
	cvt.rn.f32.s32 	%f604, %r361;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1368
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
LBB0_30:                                // %L1371
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1388
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
LBB0_32:                                // %L1391
	or.b32  	%r379, %r224, 384;
	or.b32  	%r20, %r224, 448;
	cvt.rn.f32.s32 	%f673, %r379;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1477
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
LBB0_34:                                // %L1480
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1497
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
LBB0_36:                                // %L1500
	or.b32  	%r397, %r224, 385;
	or.b32  	%r22, %r224, 449;
	cvt.rn.f32.s32 	%f742, %r397;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	LBB0_38;
// %bb.37:                              // %L1586
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
LBB0_38:                                // %L1589
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	LBB0_40;
// %bb.39:                              // %L1606
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
LBB0_40:                                // %L1609
	mul.lo.s32 	%r24, %r224, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r415, %r26, 8388607;
	or.b32  	%r16322, %r415, 1065353216;
	mov.b32 	%f1353, %r16322;
	add.s32 	%r416, %r26, -1073741824;
	and.b32  	%r16323, %r416, -8388608;
	setp.eq.s32 	%p118, %r16323, 0;
	@%p118 bra 	LBB0_51;
// %bb.49:                              // %.lr.ph4107.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
LBB0_50:                                // %.lr.ph4107
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r417, %r16323, 192937984;
	add.s32 	%r418, %r417, %r16322;
	mov.b32 	%f822, %r418;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16323, %r16323, %r417;
	mov.b32 	%r16322, %f1353;
	setp.ne.s32 	%p119, %r16323, 0;
	setp.ne.s32 	%p120, %r16322, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f73, %f813;
	fma.rn.f32 	%f74, %f73, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	mov.f32 	%f1352, %f73;
	@%p113 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f818, %f73, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	selp.f32 	%f819, %f818, %f73, %p117;
	add.f32 	%f1352, %f819, 0fBF800000;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1352, %f73, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f815, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f815, 0f00000000;
	selp.f32 	%f816, %f1352, %f73, %p116;
	add.f32 	%f817, %f816, 0f3F800000;
	add.f32 	%f1352, %f817, 0f3F800000;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r419, %f71;
	and.b32  	%r420, %r419, -2147483648;
	mov.b32 	%r421, %f1354;
	or.b32  	%r422, %r420, %r421;
	mov.b32 	%f1354, %r422;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r431, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r431;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r432, %r34, 8388607;
	or.b32  	%r16324, %r432, 1065353216;
	mov.b32 	%f1357, %r16324;
	add.s32 	%r433, %r34, -1073741824;
	and.b32  	%r16325, %r433, -8388608;
	setp.eq.s32 	%p138, %r16325, 0;
	@%p138 bra 	LBB0_65;
// %bb.63:                              // %.lr.ph4102.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
LBB0_64:                                // %.lr.ph4102
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r434, %r16325, 192937984;
	add.s32 	%r435, %r434, %r16324;
	mov.b32 	%f874, %r435;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16325, %r16325, %r434;
	mov.b32 	%r16324, %f1357;
	setp.ne.s32 	%p139, %r16325, 0;
	setp.ne.s32 	%p140, %r16324, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2500
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2466
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f92, %f865;
	fma.rn.f32 	%f93, %f92, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	mov.f32 	%f1356, %f92;
	@%p133 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f870, %f92, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	selp.f32 	%f871, %f870, %f92, %p137;
	add.f32 	%f1356, %f871, 0fBF800000;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1356, %f92, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2471
	fma.rn.f32 	%f867, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f867, 0f00000000;
	selp.f32 	%f868, %f1356, %f92, %p136;
	add.f32 	%f869, %f868, 0f3F800000;
	add.f32 	%f1356, %f869, 0f3F800000;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2474
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2503
	shr.u32 	%r217, %r1, 1;
	shr.u32 	%r222, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r436, %f90;
	and.b32  	%r437, %r436, -2147483648;
	mov.b32 	%r438, %f1358;
	or.b32  	%r439, %r437, %r438;
	mov.b32 	%f1358, %r439;
LBB0_68:                                // %__nv_fmodf.exit2506
	and.b32  	%r460, %r222, 2;
	or.b32  	%r461, %r220, %r460;
	and.b32  	%r462, %r217, 4;
	or.b32  	%r45, %r461, %r462;
	and.b32  	%r463, %r1, 3;
	mul.lo.s32 	%r464, %r463, %r45;
	shl.b32 	%r465, %r464, 1;
	neg.s32 	%r466, %r465;
	cvt.rn.f32.s32 	%f916, %r466;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r467, %r47, 8388607;
	or.b32  	%r16326, %r467, 1065353216;
	mov.b32 	%f1361, %r16326;
	add.s32 	%r468, %r47, -1073741824;
	and.b32  	%r16327, %r468, -8388608;
	setp.eq.s32 	%p158, %r16327, 0;
	@%p158 bra 	LBB0_79;
// %bb.77:                              // %.lr.ph4087.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_78:                                // %.lr.ph4087
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r469, %r16327, 192937984;
	add.s32 	%r470, %r469, %r16326;
	mov.b32 	%f928, %r470;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16327, %r16327, %r469;
	mov.b32 	%r16326, %f1361;
	setp.ne.s32 	%p159, %r16327, 0;
	setp.ne.s32 	%p160, %r16326, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2519
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f109, %f919;
	fma.rn.f32 	%f110, %f109, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	mov.f32 	%f1360, %f109;
	@%p153 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f924, %f109, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	selp.f32 	%f925, %f924, %f109, %p157;
	add.f32 	%f1360, %f925, 0fBF800000;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1360, %f109, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2524
	fma.rn.f32 	%f921, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f921, 0f00000000;
	selp.f32 	%f922, %f1360, %f109, %p156;
	add.f32 	%f923, %f922, 0f3F800000;
	add.f32 	%f1360, %f923, 0f3F800000;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2527
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2556
	shl.b32 	%r213, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r471, %f107;
	and.b32  	%r472, %r471, -2147483648;
	mov.b32 	%r473, %f1362;
	or.b32  	%r474, %r472, %r473;
	mov.b32 	%f1362, %r474;
LBB0_82:                                // %__nv_fmodf.exit2559
	and.b32  	%r483, %r213, 6;
	mov.u32 	%r484, -8;
	sub.s32 	%r485, %r484, %r483;
	mul.lo.s32 	%r486, %r45, %r485;
	cvt.rn.f32.s32 	%f968, %r486;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r487, %r55, 8388607;
	or.b32  	%r16328, %r487, 1065353216;
	mov.b32 	%f1365, %r16328;
	add.s32 	%r488, %r55, -1073741824;
	and.b32  	%r16329, %r488, -8388608;
	setp.eq.s32 	%p178, %r16329, 0;
	@%p178 bra 	LBB0_93;
// %bb.91:                              // %.lr.ph4077.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
LBB0_92:                                // %.lr.ph4077
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r489, %r16329, 192937984;
	add.s32 	%r490, %r489, %r16328;
	mov.b32 	%f980, %r490;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16329, %r16329, %r489;
	mov.b32 	%r16328, %f1365;
	setp.ne.s32 	%p179, %r16329, 0;
	setp.ne.s32 	%p180, %r16328, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2606
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2572
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f128, %f971;
	fma.rn.f32 	%f129, %f128, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	mov.f32 	%f1364, %f128;
	@%p173 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f976, %f128, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	selp.f32 	%f977, %f976, %f128, %p177;
	add.f32 	%f1364, %f977, 0fBF800000;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1364, %f128, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2577
	fma.rn.f32 	%f973, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f973, 0f00000000;
	selp.f32 	%f974, %f1364, %f128, %p176;
	add.f32 	%f975, %f974, 0f3F800000;
	add.f32 	%f1364, %f975, 0f3F800000;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2580
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2609
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r491, %f126;
	and.b32  	%r492, %r491, -2147483648;
	mov.b32 	%r493, %f1366;
	or.b32  	%r494, %r492, %r493;
	mov.b32 	%f1366, %r494;
LBB0_96:                                // %__nv_fmodf.exit2612
	shl.b32 	%r515, %r219, 1;
	neg.s32 	%r516, %r515;
	mad.lo.s32 	%r517, %r218, -4, %r516;
	mul.lo.s32 	%r518, %r517, %r45;
	shl.b32 	%r66, %r518, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r519, %r68, 8388607;
	or.b32  	%r16330, %r519, 1065353216;
	mov.b32 	%f1369, %r16330;
	add.s32 	%r520, %r68, -1073741824;
	and.b32  	%r16331, %r520, -8388608;
	setp.eq.s32 	%p198, %r16331, 0;
	@%p198 bra 	LBB0_107;
// %bb.105:                             // %.lr.ph4062.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
LBB0_106:                               // %.lr.ph4062
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r521, %r16331, 192937984;
	add.s32 	%r522, %r521, %r16330;
	mov.b32 	%f1033, %r522;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16331, %r16331, %r521;
	mov.b32 	%r16330, %f1369;
	setp.ne.s32 	%p199, %r16331, 0;
	setp.ne.s32 	%p200, %r16330, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2659
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2625
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f146, %f1024;
	fma.rn.f32 	%f147, %f146, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	mov.f32 	%f1368, %f146;
	@%p193 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1029, %f146, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	selp.f32 	%f1030, %f1029, %f146, %p197;
	add.f32 	%f1368, %f1030, 0fBF800000;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1368, %f146, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2630
	fma.rn.f32 	%f1026, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1026, 0f00000000;
	selp.f32 	%f1027, %f1368, %f146, %p196;
	add.f32 	%f1028, %f1027, 0f3F800000;
	add.f32 	%f1368, %f1028, 0f3F800000;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2633
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2662
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r523, %f144;
	and.b32  	%r524, %r523, -2147483648;
	mov.b32 	%r525, %f1370;
	or.b32  	%r526, %r524, %r525;
	mov.b32 	%f1370, %r526;
LBB0_110:                               // %__nv_fmodf.exit2665
	shl.b32 	%r535, %r45, 4;
	sub.s32 	%r536, %r66, %r535;
	cvt.rn.f32.s32 	%f163, %r536;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r537, %r76, 8388607;
	or.b32  	%r16332, %r537, 1065353216;
	mov.b32 	%f1373, %r16332;
	add.s32 	%r538, %r76, -1073741824;
	and.b32  	%r16333, %r538, -8388608;
	setp.eq.s32 	%p218, %r16333, 0;
	@%p218 bra 	LBB0_121;
// %bb.119:                             // %.lr.ph4052.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %.lr.ph4052
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r539, %r16333, 192937984;
	add.s32 	%r540, %r539, %r16332;
	mov.b32 	%f1084, %r540;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16333, %r16333, %r539;
	mov.b32 	%r16332, %f1373;
	setp.ne.s32 	%p219, %r16333, 0;
	setp.ne.s32 	%p220, %r16332, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2712
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2678
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f166, %f1075;
	fma.rn.f32 	%f167, %f166, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	mov.f32 	%f1372, %f166;
	@%p213 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f166, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	selp.f32 	%f1081, %f1080, %f166, %p217;
	add.f32 	%f1372, %f1081, 0fBF800000;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1372, %f166, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2683
	fma.rn.f32 	%f1077, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1077, 0f00000000;
	selp.f32 	%f1078, %f1372, %f166, %p216;
	add.f32 	%f1079, %f1078, 0f3F800000;
	add.f32 	%f1372, %f1079, 0f3F800000;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2686
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2715
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r541, %f164;
	and.b32  	%r542, %r541, -2147483648;
	mov.b32 	%r543, %f1374;
	or.b32  	%r544, %r542, %r543;
	mov.b32 	%f1374, %r544;
LBB0_124:                               // %__nv_fmodf.exit2718
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r559, %r86, 8388607;
	or.b32  	%r16334, %r559, 1065353216;
	mov.b32 	%f1377, %r16334;
	add.s32 	%r560, %r86, -1073741824;
	and.b32  	%r16335, %r560, -8388608;
	setp.eq.s32 	%p238, %r16335, 0;
	@%p238 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph4041.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
LBB0_134:                               // %.lr.ph4041
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r561, %r16335, 192937984;
	add.s32 	%r562, %r561, %r16334;
	mov.b32 	%f1137, %r562;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16335, %r16335, %r561;
	mov.b32 	%r16334, %f1377;
	setp.ne.s32 	%p239, %r16335, 0;
	setp.ne.s32 	%p240, %r16334, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2765
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2731
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f183, %f1128;
	fma.rn.f32 	%f184, %f183, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	mov.f32 	%f1376, %f183;
	@%p233 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1133, %f183, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	selp.f32 	%f1134, %f1133, %f183, %p237;
	add.f32 	%f1376, %f1134, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1376, %f183, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2736
	fma.rn.f32 	%f1130, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1130, 0f00000000;
	selp.f32 	%f1131, %f1376, %f183, %p236;
	add.f32 	%f1132, %f1131, 0f3F800000;
	add.f32 	%f1376, %f1132, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2739
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2768
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r563, %f181;
	and.b32  	%r564, %r563, -2147483648;
	mov.b32 	%r565, %f1378;
	or.b32  	%r566, %r564, %r565;
	mov.b32 	%f1378, %r566;
LBB0_138:                               // %__nv_fmodf.exit2771
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r575, %r94, 8388607;
	or.b32  	%r16336, %r575, 1065353216;
	mov.b32 	%f1381, %r16336;
	add.s32 	%r576, %r94, -1073741824;
	and.b32  	%r16337, %r576, -8388608;
	setp.eq.s32 	%p258, %r16337, 0;
	@%p258 bra 	LBB0_149;
// %bb.147:                             // %.lr.ph4035.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
LBB0_148:                               // %.lr.ph4035
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r577, %r16337, 192937984;
	add.s32 	%r578, %r577, %r16336;
	mov.b32 	%f1188, %r578;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16337, %r16337, %r577;
	mov.b32 	%r16336, %f1381;
	setp.ne.s32 	%p259, %r16337, 0;
	setp.ne.s32 	%p260, %r16336, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2818
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2784
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f202, %f1179;
	fma.rn.f32 	%f203, %f202, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	mov.f32 	%f1380, %f202;
	@%p253 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1184, %f202, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	selp.f32 	%f1185, %f1184, %f202, %p257;
	add.f32 	%f1380, %f1185, 0fBF800000;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1380, %f202, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2789
	fma.rn.f32 	%f1181, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1181, 0f00000000;
	selp.f32 	%f1182, %f1380, %f202, %p256;
	add.f32 	%f1183, %f1182, 0f3F800000;
	add.f32 	%f1380, %f1183, 0f3F800000;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2792
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2821
	and.b32  	%r210, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r579, %f200;
	and.b32  	%r580, %r579, -2147483648;
	mov.b32 	%r581, %f1382;
	or.b32  	%r582, %r580, %r581;
	mov.b32 	%f1382, %r582;
LBB0_152:                               // %__nv_fmodf.exit2824
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shl.b16 	%rs6, %rs1, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	shr.u16 	%rs9, %rs8, 2;
	and.b16  	%rs10, %rs8, 13104;
	shl.b16 	%rs11, %rs10, 2;
	or.b16  	%rs12, %rs9, %rs11;
	and.b16  	%rs13, %rs12, 20480;
	shl.b16 	%rs14, %rs13, 1;
	shl.b16 	%rs15, %rs10, 1;
	and.b16  	%rs16, %rs15, 16384;
	or.b16  	%rs17, %rs16, %rs14;
	shr.u16 	%rs18, %rs17, 13;
	add.s32 	%r604, %r265, %r210;
	neg.s32 	%r605, %r604;
	mad.lo.s32 	%r606, %r223, -32, %r605;
	or.b16  	%rs19, %rs18, 1;
	cvt.u32.u16 	%r607, %rs19;
	and.b16  	%rs20, %rs18, 6;
	cvt.u32.u16 	%r608, %rs20;
	sub.s32 	%r609, %r606, %r608;
	shl.b32 	%r610, %r609, 1;
	cvt.rn.f32.s32 	%f1230, %r610;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r611, %r107, 8388607;
	or.b32  	%r16338, %r611, 1065353216;
	mov.b32 	%f1385, %r16338;
	add.s32 	%r612, %r107, -1073741824;
	and.b32  	%r16339, %r612, -8388608;
	setp.eq.s32 	%p278, %r16339, 0;
	@%p278 bra 	LBB0_163;
// %bb.161:                             // %.lr.ph4020.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
LBB0_162:                               // %.lr.ph4020
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r613, %r16339, 192937984;
	add.s32 	%r614, %r613, %r16338;
	mov.b32 	%f1242, %r614;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16339, %r16339, %r613;
	mov.b32 	%r16338, %f1385;
	setp.ne.s32 	%p279, %r16339, 0;
	setp.ne.s32 	%p280, %r16338, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2871
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2837
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f219, %f1233;
	fma.rn.f32 	%f220, %f219, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	mov.f32 	%f1384, %f219;
	@%p273 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1238, %f219, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	selp.f32 	%f1239, %f1238, %f219, %p277;
	add.f32 	%f1384, %f1239, 0fBF800000;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1384, %f219, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2842
	fma.rn.f32 	%f1235, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1235, 0f00000000;
	selp.f32 	%f1236, %f1384, %f219, %p276;
	add.f32 	%f1237, %f1236, 0f3F800000;
	add.f32 	%f1384, %f1237, 0f3F800000;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2845
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2874
	sub.s32 	%r105, %r606, %r607;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r615, %f217;
	and.b32  	%r616, %r615, -2147483648;
	mov.b32 	%r617, %f1386;
	or.b32  	%r618, %r616, %r617;
	mov.b32 	%f1386, %r618;
LBB0_166:                               // %__nv_fmodf.exit2877
	shl.b32 	%r627, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r627;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r628, %r115, 8388607;
	or.b32  	%r16340, %r628, 1065353216;
	mov.b32 	%f1389, %r16340;
	add.s32 	%r629, %r115, -1073741824;
	and.b32  	%r16341, %r629, -8388608;
	setp.eq.s32 	%p298, %r16341, 0;
	@%p298 bra 	LBB0_177;
// %bb.175:                             // %.lr.ph.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
LBB0_176:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r630, %r16341, 192937984;
	add.s32 	%r631, %r630, %r16340;
	mov.b32 	%f1294, %r631;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16341, %r16341, %r630;
	mov.b32 	%r16340, %f1389;
	setp.ne.s32 	%p299, %r16341, 0;
	setp.ne.s32 	%p300, %r16340, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2924
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2890
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f238, %f1285;
	fma.rn.f32 	%f239, %f238, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	mov.f32 	%f1388, %f238;
	@%p293 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1290, %f238, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	selp.f32 	%f1291, %f1290, %f238, %p297;
	add.f32 	%f1388, %f1291, 0fBF800000;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1388, %f238, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2895
	fma.rn.f32 	%f1287, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1287, 0f00000000;
	selp.f32 	%f1288, %f1388, %f238, %p296;
	add.f32 	%f1289, %f1288, 0f3F800000;
	add.f32 	%f1388, %f1289, 0f3F800000;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2898
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2927
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r632, %f236;
	and.b32  	%r633, %r632, -2147483648;
	mov.b32 	%r634, %f1390;
	or.b32  	%r635, %r633, %r634;
	mov.b32 	%f1390, %r635;
LBB0_180:                               // %__nv_fmodf.exit2930
	setp.le.s32 	%p311, %r6, %r5;
	mov.u32 	%r16320, 0;
	@%p311 bra 	LBB0_189;
// %bb.181:                             // %L2449.lr.ph
	mov.f32 	%f261, 0f44004000;
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f641, %f639, %f261;
	div.approx.f32 	%f676, %f674, %f261;
	div.approx.f32 	%f710, %f708, %f261;
	div.approx.f32 	%f745, %f743, %f261;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	abs.f32 	%f642, %f641;
	abs.f32 	%f677, %f676;
	abs.f32 	%f711, %f710;
	abs.f32 	%f746, %f745;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	selp.f32 	%f713, %f712, %f710, %p93;
	selp.f32 	%f748, %f747, %f745, %p99;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f832, %f1354, %f1354;
	add.f32 	%f884, %f1358, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	add.f32 	%f990, %f1366, %f1366;
	add.f32 	%f1147, %f1378, %f1378;
	add.f32 	%f1198, %f1382, %f1382;
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	add.f32 	%f749, %f748, %f748;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r423, %f832;
	mov.b32 	%r452, %f884;
	mov.b32 	%r475, %f938;
	mov.b32 	%r507, %f990;
	add.f32 	%f1043, %f1370, %f1370;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r567, %f1147;
	mov.b32 	%r595, %f1198;
	mov.b32 	%r272, %f266;
	mov.b32 	%r279, %f300;
	mov.b32 	%r290, %f335;
	mov.b32 	%r297, %f369;
	mov.b32 	%r308, %f404;
	mov.b32 	%r315, %f438;
	mov.b32 	%r326, %f473;
	mov.b32 	%r333, %f507;
	mov.b32 	%r344, %f542;
	mov.b32 	%r351, %f576;
	mov.b32 	%r362, %f611;
	mov.b32 	%r369, %f645;
	mov.b32 	%r380, %f680;
	mov.b32 	%r387, %f714;
	mov.b32 	%r398, %f749;
	mov.b32 	%r405, %f783;
	and.b32  	%r424, %r423, -2147483648;
	and.b32  	%r453, %r452, -2147483648;
	and.b32  	%r476, %r475, -2147483648;
	and.b32  	%r508, %r507, -2147483648;
	mov.b32 	%r527, %f1043;
	mov.b32 	%r551, %f1094;
	and.b32  	%r568, %r567, -2147483648;
	and.b32  	%r596, %r595, -2147483648;
	add.f32 	%f1252, %f1386, %f1386;
	and.b32  	%r273, %r272, -2147483648;
	and.b32  	%r280, %r279, -2147483648;
	and.b32  	%r291, %r290, -2147483648;
	and.b32  	%r298, %r297, -2147483648;
	and.b32  	%r309, %r308, -2147483648;
	and.b32  	%r316, %r315, -2147483648;
	and.b32  	%r327, %r326, -2147483648;
	and.b32  	%r334, %r333, -2147483648;
	and.b32  	%r345, %r344, -2147483648;
	and.b32  	%r352, %r351, -2147483648;
	and.b32  	%r363, %r362, -2147483648;
	and.b32  	%r370, %r369, -2147483648;
	and.b32  	%r381, %r380, -2147483648;
	and.b32  	%r388, %r387, -2147483648;
	and.b32  	%r399, %r398, -2147483648;
	and.b32  	%r406, %r405, -2147483648;
	or.b32  	%r425, %r424, 1056964608;
	or.b32  	%r454, %r453, 1056964608;
	or.b32  	%r477, %r476, 1056964608;
	or.b32  	%r509, %r508, 1056964608;
	and.b32  	%r528, %r527, -2147483648;
	and.b32  	%r552, %r551, -2147483648;
	or.b32  	%r569, %r568, 1056964608;
	or.b32  	%r597, %r596, 1056964608;
	mov.b32 	%r619, %f1252;
	or.b32  	%r274, %r273, 1056964608;
	or.b32  	%r281, %r280, 1056964608;
	or.b32  	%r292, %r291, 1056964608;
	or.b32  	%r299, %r298, 1056964608;
	or.b32  	%r310, %r309, 1056964608;
	or.b32  	%r317, %r316, 1056964608;
	or.b32  	%r328, %r327, 1056964608;
	or.b32  	%r335, %r334, 1056964608;
	or.b32  	%r346, %r345, 1056964608;
	or.b32  	%r353, %r352, 1056964608;
	or.b32  	%r364, %r363, 1056964608;
	or.b32  	%r371, %r370, 1056964608;
	or.b32  	%r382, %r381, 1056964608;
	or.b32  	%r389, %r388, 1056964608;
	or.b32  	%r400, %r399, 1056964608;
	or.b32  	%r407, %r406, 1056964608;
	mov.b32 	%f833, %r425;
	mov.b32 	%f885, %r454;
	mov.b32 	%f939, %r477;
	mov.b32 	%f991, %r509;
	or.b32  	%r529, %r528, 1056964608;
	or.b32  	%r553, %r552, 1056964608;
	mov.b32 	%f1148, %r569;
	mov.b32 	%f1199, %r597;
	and.b32  	%r620, %r619, -2147483648;
	mov.b32 	%f267, %r274;
	mov.b32 	%f301, %r281;
	mov.b32 	%f336, %r292;
	mov.b32 	%f370, %r299;
	mov.b32 	%f405, %r310;
	mov.b32 	%f439, %r317;
	mov.b32 	%f474, %r328;
	mov.b32 	%f508, %r335;
	mov.b32 	%f543, %r346;
	mov.b32 	%f577, %r353;
	mov.b32 	%f612, %r364;
	mov.b32 	%f646, %r371;
	mov.b32 	%f681, %r382;
	mov.b32 	%f715, %r389;
	mov.b32 	%f750, %r400;
	mov.b32 	%f784, %r407;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.f32 	%f886, %f884, %f885;
	abs.f32 	%f888, %f884;
	add.f32 	%f940, %f938, %f939;
	abs.f32 	%f942, %f938;
	add.f32 	%f992, %f990, %f991;
	abs.f32 	%f994, %f990;
	mov.b32 	%f1044, %r529;
	mov.b32 	%f1095, %r553;
	add.f32 	%f1149, %f1147, %f1148;
	abs.f32 	%f1151, %f1147;
	add.f32 	%f1200, %f1198, %f1199;
	abs.f32 	%f1202, %f1198;
	or.b32  	%r621, %r620, 1056964608;
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	cvt.rzi.f32.f32 	%f887, %f886;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	cvt.rzi.f32.f32 	%f941, %f940;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	cvt.rzi.f32.f32 	%f993, %f992;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	add.f32 	%f1045, %f1043, %f1044;
	abs.f32 	%f1047, %f1043;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	mov.b32 	%f1253, %r621;
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	add.f32 	%f1254, %f1252, %f1253;
	abs.f32 	%f1256, %f1252;
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	selp.f32 	%f945, %f944, %f943, %p165;
	selp.f32 	%f997, %f996, %f995, %p185;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1156, %f1155, %f1155;
	mul.f32 	%f1207, %f1206, %f1206;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1052, %f1051, %f1051;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	cvt.rzi.s32.f32 	%r275, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r282, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r293, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r300, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r311, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r318, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r329, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r336, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r347, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r354, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r365, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r372, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r383, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r390, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r401, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r408, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r426, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r455, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r478, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r510, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r570, %f1154;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	cvt.rzi.s32.f32 	%r598, %f1205;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	mul.f32 	%f1261, %f1260, %f1260;
	shl.b32 	%r209, %r1, 2;
	add.s32 	%r276, %r275, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r283, %r282, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r294, %r293, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r301, %r300, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r312, %r311, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r319, %r318, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r330, %r329, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r337, %r336, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r348, %r347, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r355, %r354, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r366, %r365, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r373, %r372, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r384, %r383, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r391, %r390, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r402, %r401, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r409, %r408, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r427, %r426, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r456, %r455, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r479, %r478, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r511, %r510, 1;
	cvt.rzi.s32.f32 	%r530, %f1050;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	cvt.rzi.s32.f32 	%r554, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	and.b32  	%r571, %r570, 1;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	and.b32  	%r599, %r598, 1;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r257, %r209, 36;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r277, %r276, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r284, %r283, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r302, %r301, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r313, %r312, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r338, %r337, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r349, %r348, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r356, %r355, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r367, %r366, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r374, %r373, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r385, %r384, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r392, %r391, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r403, %r402, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r410, %r409, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r427, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r456, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r479, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r511, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r531, %r530, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r555, %r554, 1;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	setp.eq.b32 	%p246, %r571, 1;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	setp.eq.b32 	%p266, %r599, 1;
	cvt.rzi.s32.f32 	%r622, %f1259;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	or.b32  	%r258, %r257, %r210;
	and.b32  	%r259, %r1, 2;
	shl.b32 	%r260, %r2, 4;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r277, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r284, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r295, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r302, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r313, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r320, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r331, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r338, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r349, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r356, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r367, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r374, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r385, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r392, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r403, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r410, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r428, %r426, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r457, %r455, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r480, %r478, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r512, %r510, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r531, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p226, %r555, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	and.b32  	%r572, %r570, 2;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	and.b32  	%r600, %r598, 2;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	and.b32  	%r623, %r622, 1;
	or.b32  	%r211, %r258, %r259;
	and.b32  	%r212, %r260, 1920;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r278, %r276, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r285, %r283, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r296, %r294, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r303, %r301, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r314, %r312, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r321, %r319, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r332, %r330, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r339, %r337, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r350, %r348, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r357, %r355, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r368, %r366, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r375, %r373, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r386, %r384, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r393, %r391, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r404, %r402, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r411, %r409, 2;
	setp.eq.s32 	%p127, %r428, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r429, %r426, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r457, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r458, %r455, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r480, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r481, %r478, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r512, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r513, %r510, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r532, %r530, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r556, %r554, 2;
	setp.eq.s32 	%p247, %r572, 0;
	neg.f32 	%f1168, %f1166;
	add.s32 	%r573, %r570, 1;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.s32 	%p267, %r600, 0;
	neg.f32 	%f1219, %f1217;
	add.s32 	%r601, %r598, 1;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	setp.eq.b32 	%p286, %r623, 1;
	or.b32  	%r261, %r211, %r212;
	and.b32  	%r214, %r213, 8;
	setp.eq.s32 	%p19, %r278, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r285, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r296, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r303, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r314, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r321, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r332, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r339, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r350, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r357, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r368, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r375, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r386, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r393, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r404, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r411, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r430, %r429, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r459, %r458, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r482, %r481, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r514, %r513, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r532, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r533, %r530, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r556, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r557, %r554, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	and.b32  	%r574, %r573, 2;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	and.b32  	%r602, %r601, 2;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	and.b32  	%r624, %r622, 2;
	or.b32  	%r262, %r261, %r214;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r430, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r459, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r482, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r514, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r534, %r533, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r558, %r557, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r574, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	setp.eq.s32 	%p268, %r602, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.eq.s32 	%p287, %r624, 0;
	neg.f32 	%f1273, %f1271;
	add.s32 	%r625, %r622, 1;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	shr.u32 	%r263, %r262, 1;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r534, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r558, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	and.b32  	%r626, %r625, 2;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd70, %r263, 4;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	setp.eq.s32 	%p288, %r626, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	add.s64 	%rd71, %rd1, %rd70;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r442, %f915;
	mov.b32 	%r441, %f89;
	mov.b32 	%r448, %f912;
	mov.b32 	%r447, %f88;
	mov.b32 	%r497, %f1021;
	mov.b32 	%r496, %f125;
	mov.b32 	%r503, %f1018;
	mov.b32 	%r502, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r585, %f1229;
	mov.b32 	%r584, %f199;
	mov.b32 	%r591, %f1226;
	mov.b32 	%r590, %f198;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r215, [%rd71];
	ld.global.u32 	%r216, [%rd71+128];
	mov.b32 	%r288, %f327;
	mov.b32 	%r287, %f3;
	mov.b32 	%r306, %f396;
	mov.b32 	%r305, %f12;
	mov.b32 	%r324, %f465;
	mov.b32 	%r323, %f21;
	mov.b32 	%r342, %f534;
	mov.b32 	%r341, %f30;
	mov.b32 	%r360, %f603;
	mov.b32 	%r359, %f39;
	mov.b32 	%r378, %f672;
	mov.b32 	%r377, %f48;
	mov.b32 	%r396, %f741;
	mov.b32 	%r395, %f57;
	mov.b32 	%r414, %f809;
	mov.b32 	%r413, %f66;
	xor.b32  	%r500, %r503, -2147483648;
	xor.b32  	%r499, %r502, -2147483648;
	mov.b32 	%r547, %f1125;
	mov.b32 	%r546, %f162;
	mov.b32 	%r550, %f1122;
	mov.b32 	%r549, %f161;
	xor.b32  	%r588, %r591, -2147483648;
	xor.b32  	%r587, %r590, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r306, %r305;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r322, %r324, %r323;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r340, %r342, %r341;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r358, %r360, %r359;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r376, %r378, %r377;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r414, %r413;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r440, %r442, %r441;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r443, %r442, %r441;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r446, %r448, %r447;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r449, %r448, %r447;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r495, %r497, %r496;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r498, %r500, %r499;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r501, %r503, %r502;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r504, %r497, %r496;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r545, %r547, %r546;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r548, %r550, %r549;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r583, %r585, %r584;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r586, %r588, %r587;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r589, %r591, %r590;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r592, %r585, %r584;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r642, %f1304;
	and.b32  	%r643, %r642, -2147483648;
	or.b32  	%r644, %r643, 1056964608;
	mov.b32 	%f1305, %r644;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r645, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r646, %r645, 1;
	setp.eq.b32 	%p306, %r646, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r647, %r645, 2;
	setp.eq.s32 	%p307, %r647, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r648, %r645, 1;
	and.b32  	%r649, %r648, 2;
	setp.eq.s32 	%p308, %r649, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r638, %f1335;
	mov.b32 	%r637, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r636, %r638, %r637;
	// end inline asm
	mov.b32 	%r641, %f1332;
	mov.b32 	%r640, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r639, %r641, %r640;
	// end inline asm
	shl.b32 	%r124, %r5, 12;
	shl.b32 	%r651, %r2, 5;
	and.b32  	%r125, %r651, 128;
	and.b32  	%r652, %r209, 28;
	and.b32  	%r653, %r651, 96;
	shl.b32 	%r654, %r1, 3;
	and.b32  	%r126, %r654, 64;
	and.b32  	%r127, %r213, 32;
	or.b32  	%r655, %r125, %r124;
	or.b32  	%r656, %r655, %r653;
	or.b32  	%r128, %r656, %r652;
	and.b32  	%r657, %r651, 224;
	or.b32  	%r129, %r657, %r652;
	and.b32  	%r130, %r1, 8;
	shl.b32 	%r658, %r1, 4;
	or.b32  	%r659, %r658, %r130;
	shr.u32 	%r660, %r659, 2;
	and.b32  	%r661, %r660, 30;
	and.b32  	%r662, %r3, 1;
	mul.lo.s32 	%r663, %r662, 2080;
	shr.u32 	%r664, %r3, 1;
	bfe.u32 	%r665, %r3, 1, 1;
	shr.u32 	%r666, %r3, 3;
	bfe.u32 	%r667, %r3, 2, 1;
	or.b32  	%r668, %r661, %r663;
	mad.lo.s32 	%r669, %r221, 65, %r668;
	mad.lo.s32 	%r670, %r665, 1040, %r669;
	mad.lo.s32 	%r671, %r666, 260, %r670;
	mad.lo.s32 	%r672, %r667, 520, %r671;
	mul.wide.u32 	%rd72, %r672, 4;
	mov.u64 	%rd73, shmem;
	add.s64 	%rd5, %rd73, %rd72;
	add.s32 	%r673, %r672, 32;
	mul.wide.u32 	%rd74, %r673, 4;
	add.s64 	%rd6, %rd73, %rd74;
	add.s32 	%r674, %r672, 1;
	mul.wide.u32 	%rd75, %r674, 4;
	add.s64 	%rd7, %rd73, %rd75;
	add.s32 	%r675, %r672, 33;
	mul.wide.u32 	%rd76, %r675, 4;
	add.s64 	%rd8, %rd73, %rd76;
	add.s32 	%r676, %r672, 130;
	mul.wide.u32 	%rd77, %r676, 4;
	add.s64 	%rd9, %rd73, %rd77;
	add.s32 	%r677, %r672, 162;
	mul.wide.u32 	%rd78, %r677, 4;
	add.s64 	%rd10, %rd73, %rd78;
	add.s32 	%r678, %r672, 131;
	mul.wide.u32 	%rd79, %r678, 4;
	add.s64 	%rd11, %rd73, %rd79;
	add.s32 	%r679, %r672, 163;
	mul.wide.u32 	%rd80, %r679, 4;
	add.s64 	%rd12, %rd73, %rd80;
	add.s32 	%r680, %r672, 4161;
	mul.wide.u32 	%rd81, %r680, 4;
	add.s64 	%rd13, %rd73, %rd81;
	add.s32 	%r681, %r672, 4193;
	mul.wide.u32 	%rd82, %r681, 4;
	add.s64 	%rd14, %rd73, %rd82;
	add.s32 	%r682, %r672, 4162;
	mul.wide.u32 	%rd83, %r682, 4;
	add.s64 	%rd15, %rd73, %rd83;
	add.s32 	%r683, %r672, 4194;
	mul.wide.u32 	%rd84, %r683, 4;
	add.s64 	%rd16, %rd73, %rd84;
	add.s32 	%r684, %r672, 4291;
	mul.wide.u32 	%rd85, %r684, 4;
	add.s64 	%rd17, %rd73, %rd85;
	add.s32 	%r685, %r672, 4323;
	mul.wide.u32 	%rd86, %r685, 4;
	add.s64 	%rd18, %rd73, %rd86;
	add.s32 	%r686, %r672, 4292;
	mul.wide.u32 	%rd87, %r686, 4;
	add.s64 	%rd19, %rd73, %rd87;
	add.s32 	%r687, %r672, 4324;
	mul.wide.u32 	%rd88, %r687, 4;
	add.s64 	%rd20, %rd73, %rd88;
	and.b32  	%r688, %r4, 32;
	mul.lo.s32 	%r689, %r219, 130;
	mul.lo.s32 	%r690, %r218, 65;
	mul.lo.s32 	%r691, %r223, 1040;
	mul.lo.s32 	%r692, %r220, 260;
	mul.lo.s32 	%r693, %r221, 520;
	or.b32  	%r694, %r688, %r664;
	or.b32  	%r695, %r694, 8;
	or.b32  	%r696, %r694, 16;
	or.b32  	%r697, %r694, 24;
	or.b32  	%r698, %r664, 2080;
	or.b32  	%r699, %r664, 2088;
	or.b32  	%r700, %r664, 2096;
	or.b32  	%r701, %r664, 2104;
	or.b32  	%r702, %r211, %r214;
	shr.u32 	%r703, %r702, 1;
	mul.lo.s32 	%r704, %r703, 65;
	shl.b32 	%r705, %r3, 1;
	or.b32  	%r706, %r705, %r221;
	mul.lo.s32 	%r707, %r706, 65;
	add.s32 	%r708, %r707, %r661;
	mul.wide.u32 	%rd89, %r708, 4;
	add.s64 	%rd21, %rd73, %rd89;
	cvt.u64.u32 	%rd90, %r707;
	cvt.u64.u32 	%rd91, %r661;
	add.s64 	%rd92, %rd91, %rd90;
	shl.b64 	%rd93, %rd92, 2;
	add.s64 	%rd22, %rd73, %rd93;
	or.b32  	%r709, %r706, 32;
	mul.lo.s32 	%r710, %r709, 65;
	add.s32 	%r711, %r710, %r661;
	mul.wide.u32 	%rd94, %r711, 4;
	add.s64 	%rd23, %rd73, %rd94;
	cvt.u64.u32 	%rd95, %r710;
	add.s64 	%rd96, %rd91, %rd95;
	shl.b64 	%rd97, %rd96, 2;
	add.s64 	%rd24, %rd73, %rd97;
	or.b32  	%r712, %r660, 4193;
	add.s32 	%r713, %r712, %r707;
	mul.wide.u32 	%rd98, %r713, 4;
	add.s64 	%rd25, %rd73, %rd98;
	add.s32 	%r714, %r712, %r710;
	mul.wide.u32 	%rd99, %r714, 4;
	add.s64 	%rd26, %rd73, %rd99;
	shl.b32 	%r715, %r7, 19;
	add.s32 	%r716, %r715, -1572864;
	or.b32  	%r131, %r653, %r652;
	shl.b32 	%r717, %r3, 2;
	or.b32  	%r718, %r717, %r222;
	or.b32  	%r719, %r718, %r212;
	shl.b32 	%r132, %r719, 8;
	cvt.s64.s32 	%rd27, %r716;
	add.s32 	%r720, %r701, %r691;
	add.s32 	%r721, %r720, %r693;
	add.s32 	%r722, %r721, %r692;
	add.s32 	%r723, %r722, %r689;
	add.s32 	%r724, %r723, %r690;
	add.s32 	%r725, %r724, %r688;
	mul.wide.u32 	%rd28, %r725, 4;
	add.s32 	%r726, %r700, %r691;
	add.s32 	%r727, %r726, %r693;
	add.s32 	%r728, %r727, %r692;
	add.s32 	%r729, %r728, %r689;
	add.s32 	%r730, %r729, %r690;
	add.s32 	%r731, %r730, %r688;
	mul.wide.u32 	%rd29, %r731, 4;
	add.s32 	%r732, %r699, %r691;
	add.s32 	%r733, %r732, %r693;
	add.s32 	%r734, %r733, %r692;
	add.s32 	%r735, %r734, %r689;
	add.s32 	%r736, %r735, %r690;
	add.s32 	%r737, %r736, %r688;
	mul.wide.u32 	%rd30, %r737, 4;
	add.s32 	%r738, %r698, %r691;
	add.s32 	%r739, %r738, %r693;
	add.s32 	%r740, %r739, %r692;
	add.s32 	%r741, %r740, %r689;
	add.s32 	%r742, %r741, %r690;
	add.s32 	%r743, %r742, %r688;
	mul.wide.u32 	%rd31, %r743, 4;
	add.s32 	%r744, %r697, %r704;
	add.s32 	%r745, %r744, 2080;
	mul.wide.u32 	%rd32, %r745, 4;
	mul.wide.u32 	%rd33, %r744, 4;
	add.s32 	%r746, %r697, %r691;
	add.s32 	%r747, %r746, %r693;
	add.s32 	%r748, %r747, %r692;
	add.s32 	%r749, %r748, %r689;
	add.s32 	%r750, %r749, %r690;
	mul.wide.u32 	%rd34, %r750, 4;
	add.s32 	%r751, %r696, %r704;
	add.s32 	%r752, %r751, 2080;
	mul.wide.u32 	%rd35, %r752, 4;
	mul.wide.u32 	%rd36, %r751, 4;
	add.s32 	%r753, %r696, %r691;
	add.s32 	%r754, %r753, %r693;
	add.s32 	%r755, %r754, %r692;
	add.s32 	%r756, %r755, %r689;
	add.s32 	%r757, %r756, %r690;
	mul.wide.u32 	%rd37, %r757, 4;
	add.s32 	%r758, %r695, %r704;
	add.s32 	%r759, %r758, 2080;
	mul.wide.u32 	%rd38, %r759, 4;
	mul.wide.u32 	%rd39, %r758, 4;
	add.s32 	%r760, %r695, %r691;
	add.s32 	%r761, %r760, %r693;
	add.s32 	%r762, %r761, %r692;
	add.s32 	%r763, %r762, %r689;
	add.s32 	%r764, %r763, %r690;
	mul.wide.u32 	%rd40, %r764, 4;
	add.s32 	%r765, %r694, %r704;
	add.s32 	%r766, %r765, 2080;
	mul.wide.u32 	%rd41, %r766, 4;
	mul.wide.u32 	%rd42, %r765, 4;
	add.s32 	%r767, %r694, %r691;
	add.s32 	%r768, %r767, %r693;
	add.s32 	%r769, %r768, %r692;
	add.s32 	%r770, %r769, %r689;
	add.s32 	%r771, %r770, %r690;
	mul.wide.u32 	%rd43, %r771, 4;
	setp.eq.s32 	%p312, %r130, 0;
	mov.u16 	%rs2380, 25600;
	mov.u16 	%rs2172, 21504;
	mov.u16 	%rs2388, 18432;
	mov.u16 	%rs2306, -14592;
	mov.u32 	%r16342, %r16320;
	mov.u32 	%r16391, %r16320;
	mov.u32 	%r16390, %r16320;
	mov.u32 	%r16389, %r16320;
	mov.u32 	%r16388, %r16320;
	mov.u32 	%r16387, %r16320;
	mov.u32 	%r16386, %r16320;
	mov.u32 	%r16385, %r16320;
	mov.u32 	%r16384, %r16320;
	mov.u32 	%r16383, %r16320;
	mov.u32 	%r16382, %r16320;
	mov.u32 	%r16381, %r16320;
	mov.u32 	%r16380, %r16320;
	mov.u32 	%r16379, %r16320;
	mov.u32 	%r16378, %r16320;
	mov.u32 	%r16377, %r16320;
	mov.u32 	%r16376, %r16320;
	mov.u32 	%r16375, %r16320;
	mov.u32 	%r16374, %r16320;
	mov.u32 	%r16373, %r16320;
	mov.u32 	%r16372, %r16320;
	mov.u32 	%r16371, %r16320;
	mov.u32 	%r16370, %r16320;
	mov.u32 	%r16369, %r16320;
	mov.u32 	%r16368, %r16320;
	bra.uni 	LBB0_182;
LBB0_188:                               // %L81483
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p336, %r16342, 7936;
	add.s32 	%r16342, %r16342, 256;
	add.s32 	%r16317, %r16342, %r5;
	setp.gt.s32 	%p337, %r6, %r16317;
	and.pred  	%p338, %p336, %p337;
	@%p338 bra 	LBB0_182;
	bra.uni 	LBB0_189;
LBB0_182:                               // %L2449
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	or.b32  	%r837, %r3, %r16342;
	or.b32  	%r838, %r837, %r126;
	or.b32  	%r839, %r838, %r127;
	shl.b32 	%r840, %r839, 12;
	add.s32 	%r841, %r128, %r840;
	shr.s32 	%r842, %r841, 31;
	shr.u32 	%r843, %r842, 7;
	add.s32 	%r844, %r841, %r843;
	shr.s32 	%r845, %r844, 25;
	and.b32  	%r846, %r844, -33554432;
	setp.ne.s32 	%p313, %r846, %r841;
	setp.lt.s32 	%p314, %r841, 0;
	and.pred  	%p315, %p314, %p313;
	selp.u32 	%r847, 1, 0, %p315;
	sub.s32 	%r848, %r847, %r845;
	shl.b32 	%r849, %r848, 25;
	add.s32 	%r850, %r849, %r841;
	mul.wide.s32 	%rd101, %r850, 4;
	add.s64 	%rd102, %rd2, %rd101;
	ld.global.v4.u32 	{%r851, %r852, %r853, %r854}, [%rd102];
	or.b32  	%r855, %r129, %r840;
	or.b32  	%r856, %r855, 65536;
	add.s32 	%r857, %r856, %r124;
	shr.s32 	%r858, %r857, 31;
	shr.u32 	%r859, %r858, 7;
	add.s32 	%r860, %r857, %r859;
	shr.s32 	%r861, %r860, 25;
	and.b32  	%r862, %r860, -33554432;
	setp.ne.s32 	%p316, %r862, %r857;
	setp.lt.s32 	%p317, %r857, 0;
	and.pred  	%p318, %p317, %p316;
	selp.u32 	%r863, 1, 0, %p318;
	sub.s32 	%r864, %r863, %r861;
	shl.b32 	%r865, %r864, 25;
	add.s32 	%r866, %r865, %r857;
	mul.wide.s32 	%rd103, %r866, 4;
	add.s64 	%rd104, %rd2, %rd103;
	ld.global.v4.u32 	{%r867, %r868, %r869, %r870}, [%rd104];
	or.b32  	%r871, %r855, 524288;
	add.s32 	%r872, %r871, %r124;
	shr.s32 	%r873, %r872, 31;
	shr.u32 	%r874, %r873, 7;
	add.s32 	%r875, %r872, %r874;
	shr.s32 	%r876, %r875, 25;
	and.b32  	%r877, %r875, -33554432;
	setp.ne.s32 	%p319, %r877, %r872;
	setp.lt.s32 	%p320, %r872, 0;
	and.pred  	%p321, %p320, %p319;
	selp.u32 	%r878, 1, 0, %p321;
	sub.s32 	%r879, %r878, %r876;
	shl.b32 	%r880, %r879, 25;
	add.s32 	%r881, %r880, %r872;
	mul.wide.s32 	%rd105, %r881, 4;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.v4.u32 	{%r882, %r883, %r884, %r885}, [%rd106];
	or.b32  	%r886, %r855, 589824;
	add.s32 	%r887, %r886, %r124;
	shr.s32 	%r888, %r887, 31;
	shr.u32 	%r889, %r888, 7;
	add.s32 	%r890, %r887, %r889;
	shr.s32 	%r891, %r890, 25;
	and.b32  	%r892, %r890, -33554432;
	setp.ne.s32 	%p322, %r892, %r887;
	setp.lt.s32 	%p323, %r887, 0;
	and.pred  	%p324, %p323, %p322;
	selp.u32 	%r893, 1, 0, %p324;
	sub.s32 	%r894, %r893, %r891;
	shl.b32 	%r895, %r894, 25;
	add.s32 	%r896, %r895, %r887;
	mul.wide.s32 	%rd107, %r896, 4;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.v4.u32 	{%r897, %r898, %r899, %r900}, [%rd108];
	selp.b32 	%r901, %r853, %r851, %p312;
	shfl.sync.bfly.b32	%r902, %r901, 8, 31, -1;
	selp.b32 	%r773, %r851, %r902, %p312;
	selp.b32 	%r774, %r902, %r853, %p312;
	selp.b32 	%r903, %r854, %r852, %p312;
	shfl.sync.bfly.b32	%r904, %r903, 8, 31, -1;
	selp.b32 	%r781, %r852, %r904, %p312;
	selp.b32 	%r782, %r904, %r854, %p312;
	selp.b32 	%r905, %r869, %r867, %p312;
	shfl.sync.bfly.b32	%r906, %r905, 8, 31, -1;
	selp.b32 	%r789, %r867, %r906, %p312;
	selp.b32 	%r790, %r906, %r869, %p312;
	selp.b32 	%r907, %r870, %r868, %p312;
	shfl.sync.bfly.b32	%r908, %r907, 8, 31, -1;
	selp.b32 	%r797, %r868, %r908, %p312;
	selp.b32 	%r798, %r908, %r870, %p312;
	selp.b32 	%r909, %r884, %r882, %p312;
	shfl.sync.bfly.b32	%r910, %r909, 8, 31, -1;
	selp.b32 	%r805, %r882, %r910, %p312;
	selp.b32 	%r806, %r910, %r884, %p312;
	selp.b32 	%r911, %r885, %r883, %p312;
	shfl.sync.bfly.b32	%r912, %r911, 8, 31, -1;
	selp.b32 	%r813, %r883, %r912, %p312;
	selp.b32 	%r814, %r912, %r885, %p312;
	selp.b32 	%r913, %r899, %r897, %p312;
	shfl.sync.bfly.b32	%r914, %r913, 8, 31, -1;
	selp.b32 	%r821, %r897, %r914, %p312;
	selp.b32 	%r822, %r914, %r899, %p312;
	selp.b32 	%r915, %r900, %r898, %p312;
	shfl.sync.bfly.b32	%r916, %r915, 8, 31, -1;
	selp.b32 	%r829, %r898, %r916, %p312;
	selp.b32 	%r830, %r916, %r900, %p312;
	mov.u32 	%r831, 21520;
	// begin inline asm
	prmt.b32 %r772, %r773, %r774, %r831;
	// end inline asm
	mov.u32 	%r835, 30258;
	// begin inline asm
	prmt.b32 %r776, %r773, %r774, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r780, %r781, %r782, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r784, %r781, %r782, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r788, %r789, %r790, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r792, %r789, %r790, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r796, %r797, %r798, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r800, %r797, %r798, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r804, %r805, %r806, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r808, %r805, %r806, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r812, %r813, %r814, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r816, %r813, %r814, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r820, %r821, %r822, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r824, %r821, %r822, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r828, %r829, %r830, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r832, %r829, %r830, %r835;
	// end inline asm
	st.shared.u32 	[%rd5], %r772;
	st.shared.u32 	[%rd6], %r776;
	st.shared.u32 	[%rd7], %r780;
	st.shared.u32 	[%rd8], %r784;
	st.shared.u32 	[%rd9], %r788;
	st.shared.u32 	[%rd10], %r792;
	st.shared.u32 	[%rd11], %r796;
	st.shared.u32 	[%rd12], %r800;
	st.shared.u32 	[%rd13], %r804;
	st.shared.u32 	[%rd14], %r808;
	st.shared.u32 	[%rd15], %r812;
	st.shared.u32 	[%rd16], %r816;
	st.shared.u32 	[%rd17], %r820;
	st.shared.u32 	[%rd18], %r824;
	st.shared.u32 	[%rd19], %r828;
	st.shared.u32 	[%rd20], %r832;
	bar.sync 	0;
	mov.u32 	%r16367, 256;
	mov.u64 	%rd173, %rd73;
LBB0_183:                               // %L15017
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd109, %rd173, %rd43;
	ld.shared.u32 	%r16181, [%rd109];
	add.s64 	%rd110, %rd173, %rd40;
	ld.shared.u32 	%r16182, [%rd110];
	add.s64 	%rd111, %rd173, %rd37;
	ld.shared.u32 	%r16183, [%rd111];
	add.s64 	%rd112, %rd173, %rd34;
	ld.shared.u32 	%r16184, [%rd112];
	add.s64 	%rd113, %rd173, %rd31;
	ld.shared.u32 	%r16185, [%rd113];
	add.s64 	%rd114, %rd173, %rd30;
	ld.shared.u32 	%r16186, [%rd114];
	add.s64 	%rd115, %rd173, %rd29;
	ld.shared.u32 	%r16187, [%rd115];
	add.s64 	%rd116, %rd173, %rd28;
	ld.shared.u32 	%r16188, [%rd116];
	// begin inline asm
	mov.b32 %r922, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r921, %r16181, -2004318072;
	mov.u32 	%r920, 983055;
	// begin inline asm
	lop3.b32 %r919, %r920, %r921, %r922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r923, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r924, %r922, %r923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r927, %r919, %r924;
	// end inline asm
	mov.u32 	%r931, 15728880;
	// begin inline asm
	lop3.b32 %r930, %r931, %r921, %r933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r933, %r934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r938, %r930, %r935;
	// end inline asm
	shr.u32 	%r943, %r921, 8;
	// begin inline asm
	lop3.b32 %r941, %r920, %r943, %r922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r922, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r952, %r931, %r943, %r933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r933, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r967, %r16182, -2004318072;
	// begin inline asm
	lop3.b32 %r965, %r920, %r967, %r968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r968, %r969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r973, %r965, %r970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r976, %r931, %r967, %r979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r979, %r980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r984, %r976, %r981;
	// end inline asm
	shr.u32 	%r989, %r967, 8;
	// begin inline asm
	lop3.b32 %r987, %r920, %r989, %r968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r968, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r998, %r931, %r989, %r979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r979, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1006, %r998, %r1003;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1013, %r16183, -2004318072;
	// begin inline asm
	lop3.b32 %r1011, %r920, %r1013, %r1014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1015, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1016, %r1014, %r1015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1019, %r1011, %r1016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1022, %r931, %r1013, %r1025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1026, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1027, %r1025, %r1026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1030, %r1022, %r1027;
	// end inline asm
	shr.u32 	%r1035, %r1013, 8;
	// begin inline asm
	lop3.b32 %r1033, %r920, %r1035, %r1014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1014, %r1037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1041, %r1033, %r1038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1044, %r931, %r1035, %r1025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1049, %r1025, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1052, %r1044, %r1049;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1059, %r16184, -2004318072;
	// begin inline asm
	lop3.b32 %r1057, %r920, %r1059, %r1060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1060, %r1061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1065, %r1057, %r1062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1068, %r931, %r1059, %r1071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1071, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	shr.u32 	%r1081, %r1059, 8;
	// begin inline asm
	lop3.b32 %r1079, %r920, %r1081, %r1060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1060, %r1083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1087, %r1079, %r1084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1090, %r931, %r1081, %r1071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1095, %r1071, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1098, %r1090, %r1095;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1105, %r16185, -2004318072;
	// begin inline asm
	lop3.b32 %r1103, %r920, %r1105, %r1106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1106, %r1107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1111, %r1103, %r1108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1114, %r931, %r1105, %r1117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1117, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	shr.u32 	%r1127, %r1105, 8;
	// begin inline asm
	lop3.b32 %r1125, %r920, %r1127, %r1106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1106, %r1129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1133, %r1125, %r1130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1136, %r931, %r1127, %r1117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1141, %r1117, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1144, %r1136, %r1141;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1151, %r16186, -2004318072;
	// begin inline asm
	lop3.b32 %r1149, %r920, %r1151, %r1152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1154, %r1152, %r1153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1157, %r1149, %r1154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1160, %r931, %r1151, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1163, %r1164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1168, %r1160, %r1165;
	// end inline asm
	shr.u32 	%r1173, %r1151, 8;
	// begin inline asm
	lop3.b32 %r1171, %r920, %r1173, %r1152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1152, %r1175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1179, %r1171, %r1176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1182, %r931, %r1173, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1187, %r1163, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1190, %r1182, %r1187;
	// end inline asm
	// begin inline asm
	mov.b32 %r1198, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1197, %r16187, -2004318072;
	// begin inline asm
	lop3.b32 %r1195, %r920, %r1197, %r1198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1199, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1200, %r1198, %r1199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1203, %r1195, %r1200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1206, %r931, %r1197, %r1209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1209, %r1210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1214, %r1206, %r1211;
	// end inline asm
	shr.u32 	%r1219, %r1197, 8;
	// begin inline asm
	lop3.b32 %r1217, %r920, %r1219, %r1198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1198, %r1221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1225, %r1217, %r1222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1228, %r931, %r1219, %r1209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1233, %r1209, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1236, %r1228, %r1233;
	// end inline asm
	// begin inline asm
	mov.b32 %r1244, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1255, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1243, %r16188, -2004318072;
	// begin inline asm
	lop3.b32 %r1241, %r920, %r1243, %r1244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1245, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1246, %r1244, %r1245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1249, %r1241, %r1246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1252, %r931, %r1243, %r1255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1256, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1257, %r1255, %r1256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1260, %r1252, %r1257;
	// end inline asm
	shr.u32 	%r1265, %r1243, 8;
	// begin inline asm
	lop3.b32 %r1263, %r920, %r1265, %r1244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1267, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1268, %r1244, %r1267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1271, %r1263, %r1268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1274, %r931, %r1265, %r1255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1278, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1279, %r1255, %r1278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1282, %r1274, %r1279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r1360, %r1098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r1365, %r1111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r1380, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1387, %r1385, %r1157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1392, %r1390, %r1168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r1395, %r1179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1400, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1402, %r1400, %r1190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1405, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1407, %r1405, %r1203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1410, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1412, %r1410, %r1214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1415, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1417, %r1415, %r1225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1422, %r1420, %r1236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1425, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r1425, %r1249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1430, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1432, %r1430, %r1260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1435, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1437, %r1435, %r1271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1440, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1442, %r1440, %r1282;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1449, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r1447, %r920, %r1449, %r1450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1452, %r1450, %r1451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1455, %r1447, %r1452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1458, %r931, %r1449, %r1461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1461, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1466, %r1458, %r1463;
	// end inline asm
	shr.u32 	%r1471, %r1449, 8;
	// begin inline asm
	lop3.b32 %r1469, %r920, %r1471, %r1450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1450, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1480, %r931, %r1471, %r1461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1461, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1495, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r1493, %r920, %r1495, %r1496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1497, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1498, %r1496, %r1497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1501, %r1493, %r1498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1504, %r931, %r1495, %r1507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1509, %r1507, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1512, %r1504, %r1509;
	// end inline asm
	shr.u32 	%r1517, %r1495, 8;
	// begin inline asm
	lop3.b32 %r1515, %r920, %r1517, %r1496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1496, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1523, %r1515, %r1520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1526, %r931, %r1517, %r1507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1531, %r1507, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1534, %r1526, %r1531;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1541, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r1539, %r920, %r1541, %r1542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1543, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1544, %r1542, %r1543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1547, %r1539, %r1544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1550, %r931, %r1541, %r1553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1555, %r1553, %r1554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1558, %r1550, %r1555;
	// end inline asm
	shr.u32 	%r1563, %r1541, 8;
	// begin inline asm
	lop3.b32 %r1561, %r920, %r1563, %r1542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1566, %r1542, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1569, %r1561, %r1566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1572, %r931, %r1563, %r1553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1577, %r1553, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1580, %r1572, %r1577;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1587, %r16371, -2004318072;
	// begin inline asm
	lop3.b32 %r1585, %r920, %r1587, %r1588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1589, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1590, %r1588, %r1589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1593, %r1585, %r1590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1596, %r931, %r1587, %r1599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1601, %r1599, %r1600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1604, %r1596, %r1601;
	// end inline asm
	shr.u32 	%r1609, %r1587, 8;
	// begin inline asm
	lop3.b32 %r1607, %r920, %r1609, %r1588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1612, %r1588, %r1611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1615, %r1607, %r1612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1618, %r931, %r1609, %r1599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1623, %r1599, %r1622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1626, %r1618, %r1623;
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1633, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1631, %r920, %r1633, %r1634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1635, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1636, %r1634, %r1635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1639, %r1631, %r1636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1642, %r931, %r1633, %r1645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1647, %r1645, %r1646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1650, %r1642, %r1647;
	// end inline asm
	shr.u32 	%r1655, %r1633, 8;
	// begin inline asm
	lop3.b32 %r1653, %r920, %r1655, %r1634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1658, %r1634, %r1657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1661, %r1653, %r1658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1664, %r931, %r1655, %r1645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1669, %r1645, %r1668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1672, %r1664, %r1669;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1679, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r1677, %r920, %r1679, %r1680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1681, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1682, %r1680, %r1681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1685, %r1677, %r1682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1688, %r931, %r1679, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1693, %r1691, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1696, %r1688, %r1693;
	// end inline asm
	shr.u32 	%r1701, %r1679, 8;
	// begin inline asm
	lop3.b32 %r1699, %r920, %r1701, %r1680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1704, %r1680, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1707, %r1699, %r1704;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1710, %r931, %r1701, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1715, %r1691, %r1714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1718, %r1710, %r1715;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1725, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r1723, %r920, %r1725, %r1726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1727, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1728, %r1726, %r1727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1731, %r1723, %r1728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1734, %r931, %r1725, %r1737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1739, %r1737, %r1738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1742, %r1734, %r1739;
	// end inline asm
	shr.u32 	%r1747, %r1725, 8;
	// begin inline asm
	lop3.b32 %r1745, %r920, %r1747, %r1726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1750, %r1726, %r1749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1753, %r1745, %r1750;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1756, %r931, %r1747, %r1737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1760, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1761, %r1737, %r1760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1764, %r1756, %r1761;
	// end inline asm
	// begin inline asm
	mov.b32 %r1772, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1783, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1771, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r1769, %r920, %r1771, %r1772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1773, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1774, %r1772, %r1773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1777, %r1769, %r1774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1780, %r931, %r1771, %r1783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1784, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1785, %r1783, %r1784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1788, %r1780, %r1785;
	// end inline asm
	shr.u32 	%r1793, %r1771, 8;
	// begin inline asm
	lop3.b32 %r1791, %r920, %r1793, %r1772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1795, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1796, %r1772, %r1795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1799, %r1791, %r1796;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1802, %r931, %r1793, %r1783, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1806, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1807, %r1783, %r1806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1810, %r1802, %r1807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1813, %r286, %r1455, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1817, %r286, %r1466, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1821, %r286, %r1477, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1825, %r286, %r1488, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r286, %r1501, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1833, %r286, %r1512, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1837, %r286, %r1523, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1841, %r286, %r1534, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1845, %r286, %r1547, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1849, %r286, %r1558, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1853, %r286, %r1569, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1857, %r286, %r1580, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1861, %r286, %r1593, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r286, %r1604, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1869, %r286, %r1615, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1873, %r286, %r1626, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1877, %r304, %r1639, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1881, %r304, %r1650, %r1372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1885, %r304, %r1661, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1889, %r304, %r1672, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r304, %r1685, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1897, %r304, %r1696, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1901, %r304, %r1707, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r304, %r1718, %r1402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r304, %r1731, %r1407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1913, %r304, %r1742, %r1412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r304, %r1753, %r1417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1921, %r304, %r1764, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1925, %r304, %r1777, %r1427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1929, %r304, %r1788, %r1432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1933, %r304, %r1799, %r1437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1937, %r304, %r1810, %r1442;
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1945, %r16372, -2004318072;
	// begin inline asm
	lop3.b32 %r1943, %r920, %r1945, %r1946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1947, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1948, %r1946, %r1947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1951, %r1943, %r1948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1954, %r931, %r1945, %r1957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1958, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1959, %r1957, %r1958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1962, %r1954, %r1959;
	// end inline asm
	shr.u32 	%r1967, %r1945, 8;
	// begin inline asm
	lop3.b32 %r1965, %r920, %r1967, %r1946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1970, %r1946, %r1969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1973, %r1965, %r1970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1976, %r931, %r1967, %r1957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1981, %r1957, %r1980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1984, %r1976, %r1981;
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1991, %r16373, -2004318072;
	// begin inline asm
	lop3.b32 %r1989, %r920, %r1991, %r1992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1994, %r1992, %r1993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1997, %r1989, %r1994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2000, %r931, %r1991, %r2003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2005, %r2003, %r2004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2008, %r2000, %r2005;
	// end inline asm
	shr.u32 	%r2013, %r1991, 8;
	// begin inline asm
	lop3.b32 %r2011, %r920, %r2013, %r1992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2016, %r1992, %r2015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2019, %r2011, %r2016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2022, %r931, %r2013, %r2003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2027, %r2003, %r2026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2030, %r2022, %r2027;
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2037, %r16374, -2004318072;
	// begin inline asm
	lop3.b32 %r2035, %r920, %r2037, %r2038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2039, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2040, %r2038, %r2039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2043, %r2035, %r2040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2046, %r931, %r2037, %r2049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2051, %r2049, %r2050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2054, %r2046, %r2051;
	// end inline asm
	shr.u32 	%r2059, %r2037, 8;
	// begin inline asm
	lop3.b32 %r2057, %r920, %r2059, %r2038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2062, %r2038, %r2061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2065, %r2057, %r2062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2068, %r931, %r2059, %r2049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2073, %r2049, %r2072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2076, %r2068, %r2073;
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2083, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r2081, %r920, %r2083, %r2084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2086, %r2084, %r2085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2089, %r2081, %r2086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2092, %r931, %r2083, %r2095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2097, %r2095, %r2096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2100, %r2092, %r2097;
	// end inline asm
	shr.u32 	%r2105, %r2083, 8;
	// begin inline asm
	lop3.b32 %r2103, %r920, %r2105, %r2084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2108, %r2084, %r2107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2111, %r2103, %r2108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2114, %r931, %r2105, %r2095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2119, %r2095, %r2118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2122, %r2114, %r2119;
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2129, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r2127, %r920, %r2129, %r2130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2132, %r2130, %r2131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2135, %r2127, %r2132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2138, %r931, %r2129, %r2141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2143, %r2141, %r2142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2146, %r2138, %r2143;
	// end inline asm
	shr.u32 	%r2151, %r2129, 8;
	// begin inline asm
	lop3.b32 %r2149, %r920, %r2151, %r2130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2154, %r2130, %r2153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2157, %r2149, %r2154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2160, %r931, %r2151, %r2141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2165, %r2141, %r2164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2168, %r2160, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2175, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r2173, %r920, %r2175, %r2176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2178, %r2176, %r2177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2181, %r2173, %r2178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2184, %r931, %r2175, %r2187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2187, %r2188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2192, %r2184, %r2189;
	// end inline asm
	shr.u32 	%r2197, %r2175, 8;
	// begin inline asm
	lop3.b32 %r2195, %r920, %r2197, %r2176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2200, %r2176, %r2199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2203, %r2195, %r2200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2206, %r931, %r2197, %r2187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2211, %r2187, %r2210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2214, %r2206, %r2211;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2221, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r2219, %r920, %r2221, %r2222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2224, %r2222, %r2223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2227, %r2219, %r2224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2230, %r931, %r2221, %r2233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2234, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2235, %r2233, %r2234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2238, %r2230, %r2235;
	// end inline asm
	shr.u32 	%r2243, %r2221, 8;
	// begin inline asm
	lop3.b32 %r2241, %r920, %r2243, %r2222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2246, %r2222, %r2245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2249, %r2241, %r2246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2252, %r931, %r2243, %r2233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2256, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2233, %r2256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2260, %r2252, %r2257;
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2279, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2267, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r2265, %r920, %r2267, %r2268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2268, %r2269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2273, %r2265, %r2270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2276, %r931, %r2267, %r2279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2280, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2281, %r2279, %r2280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2284, %r2276, %r2281;
	// end inline asm
	shr.u32 	%r2289, %r2267, 8;
	// begin inline asm
	lop3.b32 %r2287, %r920, %r2289, %r2268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2291, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2292, %r2268, %r2291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2295, %r2287, %r2292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2298, %r931, %r2289, %r2279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2302, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2279, %r2302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2306, %r2298, %r2303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r1951, %r1813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r1962, %r1817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r1973, %r1821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r1984, %r1825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r1997, %r1829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2008, %r1833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2019, %r1837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2030, %r1841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2043, %r1845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2054, %r1849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2065, %r1853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2076, %r1857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2089, %r1861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2100, %r1865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2111, %r1869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2122, %r1873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2405, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2407, %r2405, %r2135, %r1877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2411, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2413, %r2411, %r2146, %r1881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2417, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2419, %r2417, %r2157, %r1885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2423, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2425, %r2423, %r2168, %r1889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2429, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2431, %r2429, %r2181, %r1893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2435, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2437, %r2435, %r2192, %r1897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2441, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2443, %r2441, %r2203, %r1901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2447, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2449, %r2447, %r2214, %r1905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2453, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2455, %r2453, %r2227, %r1909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2459, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2461, %r2459, %r2238, %r1913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2465, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2467, %r2465, %r2249, %r1917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2471, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2473, %r2471, %r2260, %r1921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2477, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2479, %r2477, %r2273, %r1925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2483, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2485, %r2483, %r2284, %r1929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2489, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2491, %r2489, %r2295, %r1933;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2495, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2497, %r2495, %r2306, %r1937;
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2505, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r2503, %r920, %r2505, %r2506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2508, %r2506, %r2507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2511, %r2503, %r2508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2514, %r931, %r2505, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2519, %r2517, %r2518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2522, %r2514, %r2519;
	// end inline asm
	shr.u32 	%r2527, %r2505, 8;
	// begin inline asm
	lop3.b32 %r2525, %r920, %r2527, %r2506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2530, %r2506, %r2529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2533, %r2525, %r2530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2536, %r931, %r2527, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2541, %r2517, %r2540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2544, %r2536, %r2541;
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2551, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r2549, %r920, %r2551, %r2552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2553, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2554, %r2552, %r2553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2557, %r2549, %r2554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2560, %r931, %r2551, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2565, %r2563, %r2564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2568, %r2560, %r2565;
	// end inline asm
	shr.u32 	%r2573, %r2551, 8;
	// begin inline asm
	lop3.b32 %r2571, %r920, %r2573, %r2552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2576, %r2552, %r2575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2579, %r2571, %r2576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2582, %r931, %r2573, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2587, %r2563, %r2586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2590, %r2582, %r2587;
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2597, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r2595, %r920, %r2597, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2600, %r2598, %r2599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2603, %r2595, %r2600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2606, %r931, %r2597, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2609, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	shr.u32 	%r2619, %r2597, 8;
	// begin inline asm
	lop3.b32 %r2617, %r920, %r2619, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2598, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2628, %r931, %r2619, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2633, %r2609, %r2632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2636, %r2628, %r2633;
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2643, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r2641, %r920, %r2643, %r2644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2646, %r2644, %r2645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2649, %r2641, %r2646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2652, %r931, %r2643, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2657, %r2655, %r2656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2660, %r2652, %r2657;
	// end inline asm
	shr.u32 	%r2665, %r2643, 8;
	// begin inline asm
	lop3.b32 %r2663, %r920, %r2665, %r2644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2668, %r2644, %r2667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2671, %r2663, %r2668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2674, %r931, %r2665, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2679, %r2655, %r2678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2682, %r2674, %r2679;
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2689, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r2687, %r920, %r2689, %r2690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2692, %r2690, %r2691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2695, %r2687, %r2692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2698, %r931, %r2689, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2703, %r2701, %r2702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2706, %r2698, %r2703;
	// end inline asm
	shr.u32 	%r2711, %r2689, 8;
	// begin inline asm
	lop3.b32 %r2709, %r920, %r2711, %r2690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2714, %r2690, %r2713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2717, %r2709, %r2714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2720, %r931, %r2711, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2725, %r2701, %r2724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2728, %r2720, %r2725;
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2735, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r2733, %r920, %r2735, %r2736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2738, %r2736, %r2737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2741, %r2733, %r2738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2744, %r931, %r2735, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2749, %r2747, %r2748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2752, %r2744, %r2749;
	// end inline asm
	shr.u32 	%r2757, %r2735, 8;
	// begin inline asm
	lop3.b32 %r2755, %r920, %r2757, %r2736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2760, %r2736, %r2759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2763, %r2755, %r2760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2766, %r931, %r2757, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2771, %r2747, %r2770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2774, %r2766, %r2771;
	// end inline asm
	// begin inline asm
	mov.b32 %r2782, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2781, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r2779, %r920, %r2781, %r2782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2783, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2784, %r2782, %r2783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2787, %r2779, %r2784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2790, %r931, %r2781, %r2793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2794, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2795, %r2793, %r2794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2798, %r2790, %r2795;
	// end inline asm
	shr.u32 	%r2803, %r2781, 8;
	// begin inline asm
	lop3.b32 %r2801, %r920, %r2803, %r2782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2805, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2806, %r2782, %r2805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2809, %r2801, %r2806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2812, %r931, %r2803, %r2793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2816, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2817, %r2793, %r2816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2820, %r2812, %r2817;
	// end inline asm
	// begin inline asm
	mov.b32 %r2828, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2839, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2827, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2825, %r920, %r2827, %r2828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2829, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2830, %r2828, %r2829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2833, %r2825, %r2830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2836, %r931, %r2827, %r2839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2840, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2841, %r2839, %r2840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2844, %r2836, %r2841;
	// end inline asm
	shr.u32 	%r2849, %r2827, 8;
	// begin inline asm
	lop3.b32 %r2847, %r920, %r2849, %r2828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2851, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2852, %r2828, %r2851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2855, %r2847, %r2852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2858, %r931, %r2849, %r2839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2862, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2863, %r2839, %r2862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2866, %r2858, %r2863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r358, %r2511, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r358, %r2522, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r358, %r2533, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r358, %r2544, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r358, %r2557, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r358, %r2568, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r358, %r2579, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r358, %r2590, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r358, %r2603, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r358, %r2614, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r358, %r2625, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r358, %r2636, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r358, %r2649, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r358, %r2660, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r358, %r2671, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r358, %r2682, %r2401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r376, %r2695, %r2407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r376, %r2706, %r2413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r376, %r2717, %r2419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r376, %r2728, %r2425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r376, %r2741, %r2431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r376, %r2752, %r2437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r376, %r2763, %r2443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r376, %r2774, %r2449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r376, %r2787, %r2455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r376, %r2798, %r2461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r376, %r2809, %r2467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r376, %r2820, %r2473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r376, %r2833, %r2479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r376, %r2844, %r2485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3139, %r376, %r2855, %r2491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r376, %r2866, %r2497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r440, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r440, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r440, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r440, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r440, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r440, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r440, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r440, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r443, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r3078, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r443, %r3085, %r3080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3087, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r3087, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r443, %r3094, %r3089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3096, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3098, %r3096, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r443, %r3103, %r3098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3105, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3107, %r3105, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r443, %r3112, %r3107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3114, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r3114, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r443, %r3121, %r3116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3123, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3125, %r3123, %r3127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r443, %r3130, %r3125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3132, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r3132, %r3136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r443, %r3139, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r446, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r440, %r3001, %r3141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3148, %r446, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r440, %r3010, %r3148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3155, %r446, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r440, %r3019, %r3155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3162, %r446, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r440, %r3028, %r3162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3169, %r446, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r440, %r3037, %r3169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3176, %r446, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r440, %r3046, %r3176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3183, %r446, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3186, %r440, %r3055, %r3183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3190, %r446, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r440, %r3064, %r3190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3197, %r449, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r443, %r3073, %r3197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3204, %r449, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r443, %r3082, %r3204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3211, %r449, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3214, %r443, %r3091, %r3211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3218, %r449, %r3103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3221, %r443, %r3100, %r3218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3225, %r449, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3228, %r443, %r3109, %r3225;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3232, %r449, %r3121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3235, %r443, %r3118, %r3232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3239, %r449, %r3130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3242, %r443, %r3127, %r3239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3246, %r449, %r3139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3249, %r443, %r3136, %r3246;
	// end inline asm
	mov.u32 	%r3261, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r495, %r501, %r498, %r504}, {%r3002, %r3144}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r495, %r501, %r498, %r504}, {%r3011, %r3151}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r495, %r501, %r498, %r504}, {%r3020, %r3158}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r495, %r501, %r498, %r504}, {%r3029, %r3165}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r495, %r501, %r498, %r504}, {%r3038, %r3172}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r495, %r501, %r498, %r504}, {%r3047, %r3179}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r495, %r501, %r498, %r504}, {%r3056, %r3186}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3483, %r3480}, {%r495, %r501, %r498, %r504}, {%r3065, %r3193}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3492, %r3489}, {%r495, %r501, %r498, %r504}, {%r3074, %r3200}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3501, %r3498}, {%r495, %r501, %r498, %r504}, {%r3083, %r3207}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3510, %r3507}, {%r495, %r501, %r498, %r504}, {%r3092, %r3214}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3519, %r3516}, {%r495, %r501, %r498, %r504}, {%r3101, %r3221}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3528, %r3525}, {%r495, %r501, %r498, %r504}, {%r3110, %r3228}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3537, %r3534}, {%r495, %r501, %r498, %r504}, {%r3119, %r3235}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3546, %r3543}, {%r495, %r501, %r498, %r504}, {%r3128, %r3242}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3555, %r3552}, {%r495, %r501, %r498, %r504}, {%r3137, %r3249}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r545, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r545, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r545, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r545, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r545, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r545, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r545, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3476, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r3476, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r545, %r3483, %r3478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3485, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r3485, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r545, %r3492, %r3487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3494, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r3494, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r545, %r3501, %r3496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3503, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r3503, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r545, %r3510, %r3505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3512, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r3512, %r3516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r545, %r3519, %r3514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3521, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r3521, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r545, %r3528, %r3523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3530, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r3530, %r3534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r545, %r3537, %r3532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3539, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3541, %r3539, %r3543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3544, %r545, %r3546, %r3541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3548, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r3548, %r3552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r545, %r3555, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r548, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r545, %r3417, %r3557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3564, %r548, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r545, %r3426, %r3564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r548, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r545, %r3435, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r548, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r545, %r3444, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r548, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r545, %r3453, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r548, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r545, %r3462, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r548, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r545, %r3471, %r3599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r548, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r545, %r3480, %r3606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r548, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r545, %r3489, %r3613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3620, %r548, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3623, %r545, %r3498, %r3620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3627, %r548, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3630, %r545, %r3507, %r3627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3634, %r548, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3637, %r545, %r3516, %r3634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3641, %r548, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3644, %r545, %r3525, %r3641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3648, %r548, %r3537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3651, %r545, %r3534, %r3648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3655, %r548, %r3546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3658, %r545, %r3543, %r3655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3662, %r548, %r3555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3665, %r545, %r3552, %r3662;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3958, %r3961}, {%r583, %r589, %r586, %r592}, {%r3418, %r3560}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3964, %r3967}, {%r583, %r589, %r586, %r592}, {%r3427, %r3567}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3970, %r3973}, {%r583, %r589, %r586, %r592}, {%r3436, %r3574}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3976, %r3979}, {%r583, %r589, %r586, %r592}, {%r3445, %r3581}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3982, %r3985}, {%r583, %r589, %r586, %r592}, {%r3454, %r3588}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3988, %r3991}, {%r583, %r589, %r586, %r592}, {%r3463, %r3595}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3994, %r3997}, {%r583, %r589, %r586, %r592}, {%r3472, %r3602}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4000, %r4003}, {%r583, %r589, %r586, %r592}, {%r3481, %r3609}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3959, %r3962}, {%r583, %r589, %r586, %r592}, {%r3490, %r3616}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3965, %r3968}, {%r583, %r589, %r586, %r592}, {%r3499, %r3623}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3971, %r3974}, {%r583, %r589, %r586, %r592}, {%r3508, %r3630}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3977, %r3980}, {%r583, %r589, %r586, %r592}, {%r3517, %r3637}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3983, %r3986}, {%r583, %r589, %r586, %r592}, {%r3526, %r3644}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3989, %r3992}, {%r583, %r589, %r586, %r592}, {%r3535, %r3651}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3995, %r3998}, {%r583, %r589, %r586, %r592}, {%r3544, %r3658}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r4001, %r4004}, {%r583, %r589, %r586, %r592}, {%r3553, %r3665}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3960, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3963, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3966, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3969, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3984, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3987, %r3988, %r3989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3990, %r3991, %r3992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3993, %r3994, %r3995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3996, %r3997, %r3998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3999, %r4000, %r4001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4002, %r4003, %r4004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4008, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4011, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4014, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4017, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4020, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4023, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4026, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4029, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4032, %r3985, %r3986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4035, %r3988, %r3989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4038, %r3991, %r3992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4041, %r3994, %r3995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4044, %r3997, %r3998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4047, %r4000, %r4001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4050, %r4003, %r4004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r215, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r215, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r215, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r215, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r215, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r215, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r215, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r215, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r215, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r215, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r215, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r215, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r215, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r215, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r215, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r215, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r216, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r216, %r4008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4107, %r216, %r4011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4110, %r216, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4113, %r216, %r4017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4116, %r216, %r4020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4119, %r216, %r4023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4122, %r216, %r4026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4125, %r216, %r4029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4128, %r216, %r4032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4131, %r216, %r4035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4134, %r216, %r4038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4137, %r216, %r4041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4140, %r216, %r4044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4143, %r216, %r4047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4146, %r216, %r4050;
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs2306, %rs2306};
	// end inline asm
	mov.u16 	%rs407, 18176;
	// begin inline asm
	mov.b32 %r4150, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4151, %r4053, %r4149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4154, %r4151, %r4150;
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4159, %r4056, %r4157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4162, %r4159, %r4158;
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4167, %r4059, %r4165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4170, %r4167, %r4166;
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4175, %r4062, %r4173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4178, %r4175, %r4174;
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4183, %r4065, %r4181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4186, %r4183, %r4182;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4191, %r4068, %r4189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4194, %r4191, %r4190;
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4199, %r4071, %r4197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4202, %r4199, %r4198;
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4207, %r4074, %r4205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4210, %r4207, %r4206;
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4215, %r4077, %r4213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4218, %r4215, %r4214;
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4223, %r4080, %r4221;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4226, %r4223, %r4222;
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4231, %r4083, %r4229;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4234, %r4231, %r4230;
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4239, %r4086, %r4237;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4242, %r4239, %r4238;
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4247, %r4089, %r4245;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4250, %r4247, %r4246;
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4255, %r4092, %r4253;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4258, %r4255, %r4254;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4263, %r4095, %r4261;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4266, %r4263, %r4262;
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4271, %r4098, %r4269;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4274, %r4271, %r4270;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4279, %r4101, %r4277;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4282, %r4279, %r4278;
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4287, %r4104, %r4285;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4290, %r4287, %r4286;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4295, %r4107, %r4293;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4298, %r4295, %r4294;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4303, %r4110, %r4301;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4306, %r4303, %r4302;
	// end inline asm
	// begin inline asm
	mov.b32 %r4309, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4311, %r4113, %r4309;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4314, %r4311, %r4310;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4319, %r4116, %r4317;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4322, %r4319, %r4318;
	// end inline asm
	// begin inline asm
	mov.b32 %r4325, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4327, %r4119, %r4325;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4330, %r4327, %r4326;
	// end inline asm
	// begin inline asm
	mov.b32 %r4333, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4335, %r4122, %r4333;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4338, %r4335, %r4334;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4343, %r4125, %r4341;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4346, %r4343, %r4342;
	// end inline asm
	// begin inline asm
	mov.b32 %r4349, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4351, %r4128, %r4349;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4354, %r4351, %r4350;
	// end inline asm
	// begin inline asm
	mov.b32 %r4357, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4359, %r4131, %r4357;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4362, %r4359, %r4358;
	// end inline asm
	// begin inline asm
	mov.b32 %r4365, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4367, %r4134, %r4365;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4370, %r4367, %r4366;
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4375, %r4137, %r4373;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4378, %r4375, %r4374;
	// end inline asm
	// begin inline asm
	mov.b32 %r4381, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4383, %r4140, %r4381;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4386, %r4383, %r4382;
	// end inline asm
	// begin inline asm
	mov.b32 %r4389, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4390, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4391, %r4143, %r4389;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4394, %r4391, %r4390;
	// end inline asm
	// begin inline asm
	mov.b32 %r4397, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4399, %r4146, %r4397;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4402, %r4399, %r4398;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4408, %r4406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4154, %r4407;
	// end inline asm
	// begin inline asm
	mov.b32 %r4413, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4408, %r4413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4417, %r4162, %r4414;
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4408, %r4420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4424, %r4170, %r4421;
	// end inline asm
	// begin inline asm
	mov.b32 %r4427, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4408, %r4427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4431, %r4178, %r4428;
	// end inline asm
	mov.u32 	%r4437, 25152;
	// begin inline asm
	prmt.b32 %r4434, %r4410, %r4424, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4438, %r4417, %r4431, %r4437;
	// end inline asm
	shl.b32 	%r4445, %r4438, 4;
	mov.u32 	%r4443, 252645135;
	// begin inline asm
	lop3.b32 %r4442, %r4443, %r4434, %r4445, 202;
	// end inline asm
	xor.b32  	%r16189, %r4442, -2004318072;
	// begin inline asm
	mov.b32 %r4449, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4449, %r4447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4186, %r4448;
	// end inline asm
	// begin inline asm
	mov.b32 %r4454, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4449, %r4454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4458, %r4194, %r4455;
	// end inline asm
	// begin inline asm
	mov.b32 %r4461, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4449, %r4461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4465, %r4202, %r4462;
	// end inline asm
	// begin inline asm
	mov.b32 %r4468, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4449, %r4468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4472, %r4210, %r4469;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4475, %r4451, %r4465, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4479, %r4458, %r4472, %r4437;
	// end inline asm
	shl.b32 	%r4486, %r4479, 4;
	// begin inline asm
	lop3.b32 %r4483, %r4443, %r4475, %r4486, 202;
	// end inline asm
	xor.b32  	%r16190, %r4483, -2004318072;
	// begin inline asm
	mov.b32 %r4490, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4490, %r4488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4218, %r4489;
	// end inline asm
	// begin inline asm
	mov.b32 %r4495, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4490, %r4495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4499, %r4226, %r4496;
	// end inline asm
	// begin inline asm
	mov.b32 %r4502, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4490, %r4502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4506, %r4234, %r4503;
	// end inline asm
	// begin inline asm
	mov.b32 %r4509, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4490, %r4509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4242, %r4510;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4516, %r4492, %r4506, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4520, %r4499, %r4513, %r4437;
	// end inline asm
	shl.b32 	%r4527, %r4520, 4;
	// begin inline asm
	lop3.b32 %r4524, %r4443, %r4516, %r4527, 202;
	// end inline asm
	xor.b32  	%r16191, %r4524, -2004318072;
	// begin inline asm
	mov.b32 %r4531, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4531, %r4529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4250, %r4530;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4531, %r4536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4540, %r4258, %r4537;
	// end inline asm
	// begin inline asm
	mov.b32 %r4543, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4531, %r4543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4266, %r4544;
	// end inline asm
	// begin inline asm
	mov.b32 %r4550, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4531, %r4550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4554, %r4274, %r4551;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4557, %r4533, %r4547, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4561, %r4540, %r4554, %r4437;
	// end inline asm
	shl.b32 	%r4568, %r4561, 4;
	// begin inline asm
	lop3.b32 %r4565, %r4443, %r4557, %r4568, 202;
	// end inline asm
	xor.b32  	%r16192, %r4565, -2004318072;
	// begin inline asm
	mov.b32 %r4572, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4572, %r4570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4282, %r4571;
	// end inline asm
	// begin inline asm
	mov.b32 %r4577, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4572, %r4577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4290, %r4578;
	// end inline asm
	// begin inline asm
	mov.b32 %r4584, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4572, %r4584;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4298, %r4585;
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4572, %r4591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4595, %r4306, %r4592;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4598, %r4574, %r4588, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4602, %r4581, %r4595, %r4437;
	// end inline asm
	shl.b32 	%r4609, %r4602, 4;
	// begin inline asm
	lop3.b32 %r4606, %r4443, %r4598, %r4609, 202;
	// end inline asm
	xor.b32  	%r16193, %r4606, -2004318072;
	// begin inline asm
	mov.b32 %r4613, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4613, %r4611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4314, %r4612;
	// end inline asm
	// begin inline asm
	mov.b32 %r4618, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4613, %r4618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4322, %r4619;
	// end inline asm
	// begin inline asm
	mov.b32 %r4625, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4626, %r4613, %r4625;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4330, %r4626;
	// end inline asm
	// begin inline asm
	mov.b32 %r4632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4613, %r4632;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4636, %r4338, %r4633;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4639, %r4615, %r4629, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4643, %r4622, %r4636, %r4437;
	// end inline asm
	shl.b32 	%r4650, %r4643, 4;
	// begin inline asm
	lop3.b32 %r4647, %r4443, %r4639, %r4650, 202;
	// end inline asm
	xor.b32  	%r16194, %r4647, -2004318072;
	// begin inline asm
	mov.b32 %r4654, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4654, %r4652;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4656, %r4346, %r4653;
	// end inline asm
	// begin inline asm
	mov.b32 %r4659, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4660, %r4654, %r4659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4663, %r4354, %r4660;
	// end inline asm
	// begin inline asm
	mov.b32 %r4666, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4667, %r4654, %r4666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4362, %r4667;
	// end inline asm
	// begin inline asm
	mov.b32 %r4673, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4674, %r4654, %r4673;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4370, %r4674;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4680, %r4656, %r4670, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4684, %r4663, %r4677, %r4437;
	// end inline asm
	shl.b32 	%r4691, %r4684, 4;
	// begin inline asm
	lop3.b32 %r4688, %r4443, %r4680, %r4691, 202;
	// end inline asm
	xor.b32  	%r16195, %r4688, -2004318072;
	// begin inline asm
	mov.b32 %r4695, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4694, %r4695, %r4693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4378, %r4694;
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4701, %r4695, %r4700;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4704, %r4386, %r4701;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4708, %r4695, %r4707;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4711, %r4394, %r4708;
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4715, %r4695, %r4714;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4718, %r4402, %r4715;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4721, %r4697, %r4711, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4725, %r4704, %r4718, %r4437;
	// end inline asm
	shl.b32 	%r4732, %r4725, 4;
	// begin inline asm
	lop3.b32 %r4729, %r4443, %r4721, %r4732, 202;
	// end inline asm
	xor.b32  	%r16196, %r4729, -2004318072;
	add.s64 	%rd117, %rd173, %rd42;
	st.shared.u32 	[%rd117], %r16189;
	add.s64 	%rd118, %rd173, %rd39;
	st.shared.u32 	[%rd118], %r16190;
	add.s64 	%rd119, %rd173, %rd36;
	st.shared.u32 	[%rd119], %r16191;
	add.s64 	%rd120, %rd173, %rd33;
	st.shared.u32 	[%rd120], %r16192;
	add.s64 	%rd121, %rd173, %rd41;
	st.shared.u32 	[%rd121], %r16193;
	add.s64 	%rd122, %rd173, %rd38;
	st.shared.u32 	[%rd122], %r16194;
	add.s64 	%rd123, %rd173, %rd35;
	st.shared.u32 	[%rd123], %r16195;
	add.s64 	%rd124, %rd173, %rd32;
	st.shared.u32 	[%rd124], %r16196;
	ld.shared.u32 	%r16368, [%rd109];
	ld.shared.u32 	%r16369, [%rd110];
	ld.shared.u32 	%r16370, [%rd111];
	ld.shared.u32 	%r16371, [%rd112];
	ld.shared.u32 	%r16380, [%rd113];
	ld.shared.u32 	%r16381, [%rd114];
	ld.shared.u32 	%r16382, [%rd115];
	ld.shared.u32 	%r16383, [%rd116];
	// begin inline asm
	mov.b32 %r4738, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4737, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r4735, %r920, %r4737, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4740, %r4738, %r4739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4743, %r4735, %r4740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4746, %r931, %r4737, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4749, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	shr.u32 	%r4759, %r4737, 8;
	// begin inline asm
	lop3.b32 %r4757, %r920, %r4759, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4738, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4768, %r931, %r4759, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4749, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4783, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r4781, %r920, %r4783, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4786, %r4784, %r4785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4789, %r4781, %r4786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4792, %r931, %r4783, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4795, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	shr.u32 	%r4805, %r4783, 8;
	// begin inline asm
	lop3.b32 %r4803, %r920, %r4805, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4784, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4814, %r931, %r4805, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4795, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4829, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r4827, %r920, %r4829, %r4830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4832, %r4830, %r4831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4835, %r4827, %r4832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4838, %r931, %r4829, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4843, %r4841, %r4842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4846, %r4838, %r4843;
	// end inline asm
	shr.u32 	%r4851, %r4829, 8;
	// begin inline asm
	lop3.b32 %r4849, %r920, %r4851, %r4830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4854, %r4830, %r4853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4857, %r4849, %r4854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4860, %r931, %r4851, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4865, %r4841, %r4864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4868, %r4860, %r4865;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4875, %r16371, -2004318072;
	// begin inline asm
	lop3.b32 %r4873, %r920, %r4875, %r4876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4877, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4878, %r4876, %r4877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4881, %r4873, %r4878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4884, %r931, %r4875, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4889, %r4887, %r4888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4892, %r4884, %r4889;
	// end inline asm
	shr.u32 	%r4897, %r4875, 8;
	// begin inline asm
	lop3.b32 %r4895, %r920, %r4897, %r4876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4900, %r4876, %r4899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4903, %r4895, %r4900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4906, %r931, %r4897, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4911, %r4887, %r4910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4914, %r4906, %r4911;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4921, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r4919, %r920, %r4921, %r4922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4923, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4924, %r4922, %r4923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4927, %r4919, %r4924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4930, %r931, %r4921, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4935, %r4933, %r4934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4938, %r4930, %r4935;
	// end inline asm
	shr.u32 	%r4943, %r4921, 8;
	// begin inline asm
	lop3.b32 %r4941, %r920, %r4943, %r4922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4946, %r4922, %r4945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4949, %r4941, %r4946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4952, %r931, %r4943, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4957, %r4933, %r4956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4960, %r4952, %r4957;
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4967, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r4965, %r920, %r4967, %r4968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4970, %r4968, %r4969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4973, %r4965, %r4970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4976, %r931, %r4967, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4981, %r4979, %r4980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4984, %r4976, %r4981;
	// end inline asm
	shr.u32 	%r4989, %r4967, 8;
	// begin inline asm
	lop3.b32 %r4987, %r920, %r4989, %r4968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4992, %r4968, %r4991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4995, %r4987, %r4992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4998, %r931, %r4989, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5002, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5003, %r4979, %r5002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5006, %r4998, %r5003;
	// end inline asm
	// begin inline asm
	mov.b32 %r5014, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r5013, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r5011, %r920, %r5013, %r5014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5015, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5016, %r5014, %r5015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5019, %r5011, %r5016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5022, %r931, %r5013, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5027, %r5025, %r5026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5030, %r5022, %r5027;
	// end inline asm
	shr.u32 	%r5035, %r5013, 8;
	// begin inline asm
	lop3.b32 %r5033, %r920, %r5035, %r5014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5038, %r5014, %r5037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5041, %r5033, %r5038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5044, %r931, %r5035, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5048, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5049, %r5025, %r5048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5052, %r5044, %r5049;
	// end inline asm
	// begin inline asm
	mov.b32 %r5060, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5071, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r5059, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r5057, %r920, %r5059, %r5060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5061, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5062, %r5060, %r5061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5065, %r5057, %r5062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5068, %r931, %r5059, %r5071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5072, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5073, %r5071, %r5072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5076, %r5068, %r5073;
	// end inline asm
	shr.u32 	%r5081, %r5059, 8;
	// begin inline asm
	lop3.b32 %r5079, %r920, %r5081, %r5060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5083, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5084, %r5060, %r5083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5087, %r5079, %r5084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5090, %r931, %r5081, %r5071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5094, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5095, %r5071, %r5094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5098, %r5090, %r5095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r4892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r4903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r4914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r4927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5186, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5188, %r5186, %r4938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r4949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r4960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r4973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r4984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r4995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r5006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5231, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5233, %r5231, %r5041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5236, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5238, %r5236, %r5052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5241, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5243, %r5241, %r5065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5246, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5248, %r5246, %r5076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5251, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5253, %r5251, %r5087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5256, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5258, %r5256, %r5098;
	// end inline asm
	// begin inline asm
	mov.b32 %r5266, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5263, %r920, %r1945, %r5266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5267, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5268, %r5266, %r5267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5271, %r5263, %r5268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5274, %r931, %r1945, %r5277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5278, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5279, %r5277, %r5278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5282, %r5274, %r5279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5285, %r920, %r1967, %r5266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5290, %r5266, %r5289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5293, %r5285, %r5290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5296, %r931, %r1967, %r5277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5301, %r5277, %r5300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5304, %r5296, %r5301;
	// end inline asm
	// begin inline asm
	mov.b32 %r5312, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5309, %r920, %r1991, %r5312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5313, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5314, %r5312, %r5313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5317, %r5309, %r5314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5320, %r931, %r1991, %r5323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5324, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5325, %r5323, %r5324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5328, %r5320, %r5325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5331, %r920, %r2013, %r5312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5336, %r5312, %r5335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5339, %r5331, %r5336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5342, %r931, %r2013, %r5323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5347, %r5323, %r5346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5350, %r5342, %r5347;
	// end inline asm
	// begin inline asm
	mov.b32 %r5358, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5355, %r920, %r2037, %r5358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5359, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5360, %r5358, %r5359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5363, %r5355, %r5360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5366, %r931, %r2037, %r5369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5370, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5371, %r5369, %r5370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5374, %r5366, %r5371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5377, %r920, %r2059, %r5358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5382, %r5358, %r5381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5385, %r5377, %r5382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5388, %r931, %r2059, %r5369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5393, %r5369, %r5392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5396, %r5388, %r5393;
	// end inline asm
	// begin inline asm
	mov.b32 %r5404, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5401, %r920, %r2083, %r5404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5405, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5406, %r5404, %r5405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5409, %r5401, %r5406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5412, %r931, %r2083, %r5415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5416, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5417, %r5415, %r5416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5420, %r5412, %r5417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5423, %r920, %r2105, %r5404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5428, %r5404, %r5427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5431, %r5423, %r5428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5434, %r931, %r2105, %r5415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5439, %r5415, %r5438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5442, %r5434, %r5439;
	// end inline asm
	// begin inline asm
	mov.b32 %r5450, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5447, %r920, %r2129, %r5450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5451, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5452, %r5450, %r5451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5455, %r5447, %r5452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5458, %r931, %r2129, %r5461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5462, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5463, %r5461, %r5462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5466, %r5458, %r5463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5469, %r920, %r2151, %r5450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5474, %r5450, %r5473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5477, %r5469, %r5474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5480, %r931, %r2151, %r5461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5485, %r5461, %r5484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5488, %r5480, %r5485;
	// end inline asm
	// begin inline asm
	mov.b32 %r5496, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5493, %r920, %r2175, %r5496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5497, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5498, %r5496, %r5497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5501, %r5493, %r5498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5504, %r931, %r2175, %r5507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5508, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5509, %r5507, %r5508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5512, %r5504, %r5509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5515, %r920, %r2197, %r5496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5520, %r5496, %r5519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5523, %r5515, %r5520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5526, %r931, %r2197, %r5507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5530, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5531, %r5507, %r5530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5534, %r5526, %r5531;
	// end inline asm
	// begin inline asm
	mov.b32 %r5542, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5553, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5539, %r920, %r2221, %r5542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5543, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5544, %r5542, %r5543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5547, %r5539, %r5544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5550, %r931, %r2221, %r5553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5554, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5555, %r5553, %r5554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5558, %r5550, %r5555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5561, %r920, %r2243, %r5542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5565, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5566, %r5542, %r5565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5569, %r5561, %r5566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5572, %r931, %r2243, %r5553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5576, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5577, %r5553, %r5576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5580, %r5572, %r5577;
	// end inline asm
	// begin inline asm
	mov.b32 %r5588, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5599, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5585, %r920, %r2267, %r5588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5589, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5590, %r5588, %r5589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5593, %r5585, %r5590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5596, %r931, %r2267, %r5599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5600, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5601, %r5599, %r5600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5604, %r5596, %r5601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5607, %r920, %r2289, %r5588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5611, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5612, %r5588, %r5611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5615, %r5607, %r5612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5618, %r931, %r2289, %r5599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5622, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5623, %r5599, %r5622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5626, %r5618, %r5623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5629, %r286, %r5271, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5633, %r286, %r5282, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5637, %r286, %r5293, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5641, %r286, %r5304, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5645, %r286, %r5317, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5649, %r286, %r5328, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5653, %r286, %r5339, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5657, %r286, %r5350, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5661, %r286, %r5363, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5665, %r286, %r5374, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5669, %r286, %r5385, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5673, %r286, %r5396, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5677, %r286, %r5409, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5681, %r286, %r5420, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5685, %r286, %r5431, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5689, %r286, %r5442, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5693, %r304, %r5455, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5697, %r304, %r5466, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5701, %r304, %r5477, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5705, %r304, %r5488, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5709, %r304, %r5501, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5713, %r304, %r5512, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5717, %r304, %r5523, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5721, %r304, %r5534, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5725, %r304, %r5547, %r5223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5729, %r304, %r5558, %r5228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5733, %r304, %r5569, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5737, %r304, %r5580, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5741, %r304, %r5593, %r5243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5745, %r304, %r5604, %r5248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5749, %r304, %r5615, %r5253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5753, %r304, %r5626, %r5258;
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5759, %r920, %r2505, %r5762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5764, %r5762, %r5763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5767, %r5759, %r5764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5770, %r931, %r2505, %r5773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5773, %r5774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5778, %r5770, %r5775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5781, %r920, %r2527, %r5762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5786, %r5762, %r5785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5789, %r5781, %r5786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5792, %r931, %r2527, %r5773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5797, %r5773, %r5796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5800, %r5792, %r5797;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5805, %r920, %r2551, %r5808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5809, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5810, %r5808, %r5809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5813, %r5805, %r5810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5816, %r931, %r2551, %r5819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5819, %r5820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5824, %r5816, %r5821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5827, %r920, %r2573, %r5808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5832, %r5808, %r5831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5835, %r5827, %r5832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5838, %r931, %r2573, %r5819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5819, %r5842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5846, %r5838, %r5843;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5851, %r920, %r2597, %r5854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5854, %r5855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5859, %r5851, %r5856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5862, %r931, %r2597, %r5865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5865, %r5866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5870, %r5862, %r5867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5873, %r920, %r2619, %r5854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5878, %r5854, %r5877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5881, %r5873, %r5878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5884, %r931, %r2619, %r5865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5865, %r5888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5892, %r5884, %r5889;
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5897, %r920, %r2643, %r5900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5900, %r5901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5905, %r5897, %r5902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5908, %r931, %r2643, %r5911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5911, %r5912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5916, %r5908, %r5913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5919, %r920, %r2665, %r5900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5900, %r5923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5927, %r5919, %r5924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5930, %r931, %r2665, %r5911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5911, %r5934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5938, %r5930, %r5935;
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5943, %r920, %r2689, %r5946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5947, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5948, %r5946, %r5947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5951, %r5943, %r5948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5954, %r931, %r2689, %r5957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5957, %r5958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5962, %r5954, %r5959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5965, %r920, %r2711, %r5946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5946, %r5969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5973, %r5965, %r5970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5976, %r931, %r2711, %r5957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5957, %r5980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5984, %r5976, %r5981;
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5989, %r920, %r2735, %r5992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5993, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5994, %r5992, %r5993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5997, %r5989, %r5994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6000, %r931, %r2735, %r6003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r6003, %r6004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6008, %r6000, %r6005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6011, %r920, %r2757, %r5992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r5992, %r6015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6019, %r6011, %r6016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6022, %r931, %r2757, %r6003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6027, %r6003, %r6026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6030, %r6022, %r6027;
	// end inline asm
	// begin inline asm
	mov.b32 %r6038, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6035, %r920, %r2781, %r6038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6039, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6040, %r6038, %r6039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6043, %r6035, %r6040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6046, %r931, %r2781, %r6049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6051, %r6049, %r6050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6054, %r6046, %r6051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6057, %r920, %r2803, %r6038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6062, %r6038, %r6061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6065, %r6057, %r6062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6068, %r931, %r2803, %r6049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6072, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6073, %r6049, %r6072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6076, %r6068, %r6073;
	// end inline asm
	// begin inline asm
	mov.b32 %r6084, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6095, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6081, %r920, %r2827, %r6084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6085, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6086, %r6084, %r6085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6089, %r6081, %r6086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6092, %r931, %r2827, %r6095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6096, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6097, %r6095, %r6096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6100, %r6092, %r6097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6103, %r920, %r2849, %r6084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6107, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6108, %r6084, %r6107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6111, %r6103, %r6108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6114, %r931, %r2849, %r6095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6118, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6119, %r6095, %r6118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6122, %r6114, %r6119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5767, %r5629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5778, %r5633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5789, %r5637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5800, %r5641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5813, %r5645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5824, %r5649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5835, %r5653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5846, %r5657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5859, %r5661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5870, %r5665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5881, %r5669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5892, %r5673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5905, %r5677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r5916, %r5681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r5927, %r5685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r5938, %r5689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6223, %r6221, %r5951, %r5693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6229, %r6227, %r5962, %r5697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6235, %r6233, %r5973, %r5701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6239, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6241, %r6239, %r5984, %r5705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6245, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6247, %r6245, %r5997, %r5709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6251, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6253, %r6251, %r6008, %r5713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6259, %r6257, %r6019, %r5717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6265, %r6263, %r6030, %r5721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6269, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6271, %r6269, %r6043, %r5725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6275, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6277, %r6275, %r6054, %r5729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6281, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6283, %r6281, %r6065, %r5733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6287, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6289, %r6287, %r6076, %r5737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6293, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6295, %r6293, %r6089, %r5741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6299, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6301, %r6299, %r6100, %r5745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6305, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6307, %r6305, %r6111, %r5749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6311, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6313, %r6311, %r6122, %r5753;
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6319, %r920, %r921, %r6322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6323, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6324, %r6322, %r6323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6327, %r6319, %r6324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6330, %r931, %r921, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6335, %r6333, %r6334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6338, %r6330, %r6335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r920, %r943, %r6322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6322, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r931, %r943, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6333, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6365, %r920, %r967, %r6368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6369, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6370, %r6368, %r6369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6373, %r6365, %r6370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6376, %r931, %r967, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6381, %r6379, %r6380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6384, %r6376, %r6381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6387, %r920, %r989, %r6368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6392, %r6368, %r6391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6395, %r6387, %r6392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r931, %r989, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6379, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	mov.b32 %r6414, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6411, %r920, %r1013, %r6414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6415, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6416, %r6414, %r6415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6419, %r6411, %r6416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6422, %r931, %r1013, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6427, %r6425, %r6426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6430, %r6422, %r6427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r920, %r1035, %r6414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6414, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r931, %r1035, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6425, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6457, %r920, %r1059, %r6460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6461, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6462, %r6460, %r6461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6465, %r6457, %r6462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6468, %r931, %r1059, %r6471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6473, %r6471, %r6472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6476, %r6468, %r6473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6479, %r920, %r1081, %r6460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6484, %r6460, %r6483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6487, %r6479, %r6484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6490, %r931, %r1081, %r6471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6495, %r6471, %r6494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6498, %r6490, %r6495;
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6503, %r920, %r1105, %r6506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6507, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6508, %r6506, %r6507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6511, %r6503, %r6508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6514, %r931, %r1105, %r6517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6519, %r6517, %r6518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6522, %r6514, %r6519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6525, %r920, %r1127, %r6506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6530, %r6506, %r6529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6533, %r6525, %r6530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6536, %r931, %r1127, %r6517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6541, %r6517, %r6540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6544, %r6536, %r6541;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6549, %r920, %r1151, %r6552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6554, %r6552, %r6553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6557, %r6549, %r6554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6560, %r931, %r1151, %r6563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6565, %r6563, %r6564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6568, %r6560, %r6565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r920, %r1173, %r6552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6552, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6582, %r931, %r1173, %r6563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6587, %r6563, %r6586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6590, %r6582, %r6587;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6595, %r920, %r1197, %r6598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6599, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6600, %r6598, %r6599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6603, %r6595, %r6600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6606, %r931, %r1197, %r6609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6611, %r6609, %r6610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6614, %r6606, %r6611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6617, %r920, %r1219, %r6598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6622, %r6598, %r6621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6625, %r6617, %r6622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6628, %r931, %r1219, %r6609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6633, %r6609, %r6632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6636, %r6628, %r6633;
	// end inline asm
	// begin inline asm
	mov.b32 %r6644, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6655, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6641, %r920, %r1243, %r6644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6645, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6646, %r6644, %r6645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6649, %r6641, %r6646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6652, %r931, %r1243, %r6655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6656, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6657, %r6655, %r6656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6660, %r6652, %r6657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6663, %r920, %r1265, %r6644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6667, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6668, %r6644, %r6667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6671, %r6663, %r6668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6674, %r931, %r1265, %r6655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6678, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6679, %r6655, %r6678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6682, %r6674, %r6679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r358, %r6327, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r358, %r6338, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r358, %r6349, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r358, %r6360, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r358, %r6373, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r358, %r6384, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r358, %r6395, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r358, %r6406, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r358, %r6419, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r358, %r6430, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r358, %r6441, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r358, %r6452, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r358, %r6465, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r358, %r6476, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r358, %r6487, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r358, %r6498, %r6217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r376, %r6511, %r6223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r376, %r6522, %r6229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r376, %r6533, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r376, %r6544, %r6241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r376, %r6557, %r6247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r376, %r6568, %r6253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r376, %r6579, %r6259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r376, %r6590, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r376, %r6603, %r6271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r376, %r6614, %r6277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6937, %r376, %r6625, %r6283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r376, %r6636, %r6289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r376, %r6649, %r6295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r376, %r6660, %r6301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6955, %r376, %r6671, %r6307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6952, %r376, %r6682, %r6313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r440, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r440, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r440, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r440, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r440, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r440, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r440, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6876, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r6876, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r440, %r6883, %r6878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6885, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r6885, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r443, %r6892, %r6887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6894, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r6894, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r443, %r6901, %r6896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6903, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r6903, %r6907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r443, %r6910, %r6905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6912, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6914, %r6912, %r6916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r443, %r6919, %r6914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6921, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6923, %r6921, %r6925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r443, %r6928, %r6923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6930, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r6930, %r6934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r443, %r6937, %r6932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6939, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6941, %r6939, %r6943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6944, %r443, %r6946, %r6941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6948, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r6948, %r6952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r443, %r6955, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r446, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r440, %r6817, %r6957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r446, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r440, %r6826, %r6964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r446, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r440, %r6835, %r6971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r446, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r440, %r6844, %r6978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r446, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r440, %r6853, %r6985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r446, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r440, %r6862, %r6992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r446, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r440, %r6871, %r6999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r446, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r440, %r6880, %r7006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7013, %r449, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r443, %r6889, %r7013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7020, %r449, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r443, %r6898, %r7020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7027, %r449, %r6910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r443, %r6907, %r7027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7034, %r449, %r6919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r443, %r6916, %r7034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7041, %r449, %r6928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r443, %r6925, %r7041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7048, %r449, %r6937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7051, %r443, %r6934, %r7048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7055, %r449, %r6946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7058, %r443, %r6943, %r7055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7062, %r449, %r6955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7065, %r443, %r6952, %r7062;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r495, %r501, %r498, %r504}, {%r6818, %r6960}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r495, %r501, %r498, %r504}, {%r6827, %r6967}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r495, %r501, %r498, %r504}, {%r6836, %r6974}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r495, %r501, %r498, %r504}, {%r6845, %r6981}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r495, %r501, %r498, %r504}, {%r6854, %r6988}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r495, %r501, %r498, %r504}, {%r6863, %r6995}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r495, %r501, %r498, %r504}, {%r6872, %r7002}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r495, %r501, %r498, %r504}, {%r6881, %r7009}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r495, %r501, %r498, %r504}, {%r6890, %r7016}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7314}, {%r495, %r501, %r498, %r504}, {%r6899, %r7023}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7326, %r7323}, {%r495, %r501, %r498, %r504}, {%r6908, %r7030}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7335, %r7332}, {%r495, %r501, %r498, %r504}, {%r6917, %r7037}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7344, %r7341}, {%r495, %r501, %r498, %r504}, {%r6926, %r7044}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7353, %r7350}, {%r495, %r501, %r498, %r504}, {%r6935, %r7051}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7362, %r7359}, {%r495, %r501, %r498, %r504}, {%r6944, %r7058}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7371, %r7368}, {%r495, %r501, %r498, %r504}, {%r6953, %r7065}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r545, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r545, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r545, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r545, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r545, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r545, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r545, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r545, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r545, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7310, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r7310, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r545, %r7317, %r7312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7319, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r7319, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r545, %r7326, %r7321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7328, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r7328, %r7332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r545, %r7335, %r7330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7337, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7339, %r7337, %r7341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7342, %r545, %r7344, %r7339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7346, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r7346, %r7350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r545, %r7353, %r7348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7355, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7357, %r7355, %r7359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7360, %r545, %r7362, %r7357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7364, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r7364, %r7368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r545, %r7371, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r548, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r545, %r7233, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r548, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r545, %r7242, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r548, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r545, %r7251, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r548, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r545, %r7260, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r548, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r545, %r7269, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r548, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r545, %r7278, %r7408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r548, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7418, %r545, %r7287, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r548, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7425, %r545, %r7296, %r7422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r548, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7432, %r545, %r7305, %r7429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r548, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7439, %r545, %r7314, %r7436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7443, %r548, %r7326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7446, %r545, %r7323, %r7443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7450, %r548, %r7335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7453, %r545, %r7332, %r7450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7457, %r548, %r7344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7460, %r545, %r7341, %r7457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7464, %r548, %r7353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7467, %r545, %r7350, %r7464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7471, %r548, %r7362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7474, %r545, %r7359, %r7471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7478, %r548, %r7371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7481, %r545, %r7368, %r7478;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7774, %r7777}, {%r583, %r589, %r586, %r592}, {%r7234, %r7376}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7780, %r7783}, {%r583, %r589, %r586, %r592}, {%r7243, %r7383}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7786, %r7789}, {%r583, %r589, %r586, %r592}, {%r7252, %r7390}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7792, %r7795}, {%r583, %r589, %r586, %r592}, {%r7261, %r7397}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7798, %r7801}, {%r583, %r589, %r586, %r592}, {%r7270, %r7404}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7804, %r7807}, {%r583, %r589, %r586, %r592}, {%r7279, %r7411}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7810, %r7813}, {%r583, %r589, %r586, %r592}, {%r7288, %r7418}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7816, %r7819}, {%r583, %r589, %r586, %r592}, {%r7297, %r7425}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7775, %r7778}, {%r583, %r589, %r586, %r592}, {%r7306, %r7432}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7781, %r7784}, {%r583, %r589, %r586, %r592}, {%r7315, %r7439}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7787, %r7790}, {%r583, %r589, %r586, %r592}, {%r7324, %r7446}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7793, %r7796}, {%r583, %r589, %r586, %r592}, {%r7333, %r7453}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7799, %r7802}, {%r583, %r589, %r586, %r592}, {%r7342, %r7460}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7805, %r7808}, {%r583, %r589, %r586, %r592}, {%r7351, %r7467}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7811, %r7814}, {%r583, %r589, %r586, %r592}, {%r7360, %r7474}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7817, %r7820}, {%r583, %r589, %r586, %r592}, {%r7369, %r7481}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7779, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7782, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7785, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7803, %r7804, %r7805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7806, %r7807, %r7808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7809, %r7810, %r7811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7812, %r7813, %r7814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7815, %r7816, %r7817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7818, %r7819, %r7820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7824, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7827, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7830, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7833, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7836, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7839, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7842, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7845, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7848, %r7801, %r7802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7851, %r7804, %r7805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7854, %r7807, %r7808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7857, %r7810, %r7811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7860, %r7813, %r7814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7863, %r7816, %r7817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7866, %r7819, %r7820;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r215, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r215, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r215, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r215, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r215, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r215, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r215, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r215, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r215, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r215, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r215, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r215, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r215, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r215, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r215, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r215, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r216, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r216, %r7824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7923, %r216, %r7827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7926, %r216, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7929, %r216, %r7833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7932, %r216, %r7836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7935, %r216, %r7839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7938, %r216, %r7842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7941, %r216, %r7845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7944, %r216, %r7848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7947, %r216, %r7851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7950, %r216, %r7854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7953, %r216, %r7857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7956, %r216, %r7860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7959, %r216, %r7863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7962, %r216, %r7866;
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7967, %r7869, %r7965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7970, %r7967, %r7966;
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7975, %r7872, %r7973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7978, %r7975, %r7974;
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7983, %r7875, %r7981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7986, %r7983, %r7982;
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7991, %r7878, %r7989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7994, %r7991, %r7990;
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7999, %r7881, %r7997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8002, %r7999, %r7998;
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8007, %r7884, %r8005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8010, %r8007, %r8006;
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8015, %r7887, %r8013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8018, %r8015, %r8014;
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8023, %r7890, %r8021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8026, %r8023, %r8022;
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8031, %r7893, %r8029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8034, %r8031, %r8030;
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8039, %r7896, %r8037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8042, %r8039, %r8038;
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8047, %r7899, %r8045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8050, %r8047, %r8046;
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8055, %r7902, %r8053;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8058, %r8055, %r8054;
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8063, %r7905, %r8061;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8066, %r8063, %r8062;
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8071, %r7908, %r8069;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8074, %r8071, %r8070;
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8079, %r7911, %r8077;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8082, %r8079, %r8078;
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8087, %r7914, %r8085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8090, %r8087, %r8086;
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8095, %r7917, %r8093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8098, %r8095, %r8094;
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8103, %r7920, %r8101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8106, %r8103, %r8102;
	// end inline asm
	// begin inline asm
	mov.b32 %r8109, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8111, %r7923, %r8109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8114, %r8111, %r8110;
	// end inline asm
	// begin inline asm
	mov.b32 %r8117, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8119, %r7926, %r8117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8122, %r8119, %r8118;
	// end inline asm
	// begin inline asm
	mov.b32 %r8125, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8127, %r7929, %r8125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8130, %r8127, %r8126;
	// end inline asm
	// begin inline asm
	mov.b32 %r8133, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8135, %r7932, %r8133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8138, %r8135, %r8134;
	// end inline asm
	// begin inline asm
	mov.b32 %r8141, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8143, %r7935, %r8141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8146, %r8143, %r8142;
	// end inline asm
	// begin inline asm
	mov.b32 %r8149, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8151, %r7938, %r8149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8154, %r8151, %r8150;
	// end inline asm
	// begin inline asm
	mov.b32 %r8157, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8159, %r7941, %r8157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8162, %r8159, %r8158;
	// end inline asm
	// begin inline asm
	mov.b32 %r8165, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8167, %r7944, %r8165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8170, %r8167, %r8166;
	// end inline asm
	// begin inline asm
	mov.b32 %r8173, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8174, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8175, %r7947, %r8173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8178, %r8175, %r8174;
	// end inline asm
	// begin inline asm
	mov.b32 %r8181, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8183, %r7950, %r8181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8186, %r8183, %r8182;
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8191, %r7953, %r8189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8194, %r8191, %r8190;
	// end inline asm
	// begin inline asm
	mov.b32 %r8197, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8198, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8199, %r7956, %r8197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8202, %r8199, %r8198;
	// end inline asm
	// begin inline asm
	mov.b32 %r8205, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8206, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8207, %r7959, %r8205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8210, %r8207, %r8206;
	// end inline asm
	// begin inline asm
	mov.b32 %r8213, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8214, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8215, %r7962, %r8213;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8218, %r8215, %r8214;
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8222, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r8224, %r8222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r7970, %r8223;
	// end inline asm
	// begin inline asm
	mov.b32 %r8229, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r8224, %r8229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8233, %r7978, %r8230;
	// end inline asm
	// begin inline asm
	mov.b32 %r8236, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r8224, %r8236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8240, %r7986, %r8237;
	// end inline asm
	// begin inline asm
	mov.b32 %r8243, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r8224, %r8243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8247, %r7994, %r8244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8250, %r8226, %r8240, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8254, %r8233, %r8247, %r4437;
	// end inline asm
	shl.b32 	%r8261, %r8254, 4;
	// begin inline asm
	lop3.b32 %r8258, %r4443, %r8250, %r8261, 202;
	// end inline asm
	xor.b32  	%r16197, %r8258, -2004318072;
	// begin inline asm
	mov.b32 %r8265, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8263, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r8265, %r8263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r8002, %r8264;
	// end inline asm
	// begin inline asm
	mov.b32 %r8270, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r8265, %r8270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8274, %r8010, %r8271;
	// end inline asm
	// begin inline asm
	mov.b32 %r8277, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r8265, %r8277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8281, %r8018, %r8278;
	// end inline asm
	// begin inline asm
	mov.b32 %r8284, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8265, %r8284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8288, %r8026, %r8285;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8291, %r8267, %r8281, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8295, %r8274, %r8288, %r4437;
	// end inline asm
	shl.b32 	%r8302, %r8295, 4;
	// begin inline asm
	lop3.b32 %r8299, %r4443, %r8291, %r8302, 202;
	// end inline asm
	xor.b32  	%r16198, %r8299, -2004318072;
	// begin inline asm
	mov.b32 %r8306, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8304, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8306, %r8304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8034, %r8305;
	// end inline asm
	// begin inline asm
	mov.b32 %r8311, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8306, %r8311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8315, %r8042, %r8312;
	// end inline asm
	// begin inline asm
	mov.b32 %r8318, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8306, %r8318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8322, %r8050, %r8319;
	// end inline asm
	// begin inline asm
	mov.b32 %r8325, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8306, %r8325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8329, %r8058, %r8326;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8332, %r8308, %r8322, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8336, %r8315, %r8329, %r4437;
	// end inline asm
	shl.b32 	%r8343, %r8336, 4;
	// begin inline asm
	lop3.b32 %r8340, %r4443, %r8332, %r8343, 202;
	// end inline asm
	xor.b32  	%r16199, %r8340, -2004318072;
	// begin inline asm
	mov.b32 %r8347, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8345, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8347, %r8345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8066, %r8346;
	// end inline asm
	// begin inline asm
	mov.b32 %r8352, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8347, %r8352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8356, %r8074, %r8353;
	// end inline asm
	// begin inline asm
	mov.b32 %r8359, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8347, %r8359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8363, %r8082, %r8360;
	// end inline asm
	// begin inline asm
	mov.b32 %r8366, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8347, %r8366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8370, %r8090, %r8367;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8373, %r8349, %r8363, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8377, %r8356, %r8370, %r4437;
	// end inline asm
	shl.b32 	%r8384, %r8377, 4;
	// begin inline asm
	lop3.b32 %r8381, %r4443, %r8373, %r8384, 202;
	// end inline asm
	xor.b32  	%r16200, %r8381, -2004318072;
	// begin inline asm
	mov.b32 %r8388, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8386, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8388, %r8386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8098, %r8387;
	// end inline asm
	// begin inline asm
	mov.b32 %r8393, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8388, %r8393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8397, %r8106, %r8394;
	// end inline asm
	// begin inline asm
	mov.b32 %r8400, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8388, %r8400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8404, %r8114, %r8401;
	// end inline asm
	// begin inline asm
	mov.b32 %r8407, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8388, %r8407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8411, %r8122, %r8408;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8414, %r8390, %r8404, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8418, %r8397, %r8411, %r4437;
	// end inline asm
	shl.b32 	%r8425, %r8418, 4;
	// begin inline asm
	lop3.b32 %r8422, %r4443, %r8414, %r8425, 202;
	// end inline asm
	xor.b32  	%r16201, %r8422, -2004318072;
	// begin inline asm
	mov.b32 %r8429, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8427, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8428, %r8429, %r8427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8130, %r8428;
	// end inline asm
	// begin inline asm
	mov.b32 %r8434, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8429, %r8434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8138, %r8435;
	// end inline asm
	// begin inline asm
	mov.b32 %r8441, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8442, %r8429, %r8441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8445, %r8146, %r8442;
	// end inline asm
	// begin inline asm
	mov.b32 %r8448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8429, %r8448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8452, %r8154, %r8449;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8455, %r8431, %r8445, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8459, %r8438, %r8452, %r4437;
	// end inline asm
	shl.b32 	%r8466, %r8459, 4;
	// begin inline asm
	lop3.b32 %r8463, %r4443, %r8455, %r8466, 202;
	// end inline asm
	xor.b32  	%r16202, %r8463, -2004318072;
	// begin inline asm
	mov.b32 %r8470, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8468, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8469, %r8470, %r8468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8472, %r8162, %r8469;
	// end inline asm
	// begin inline asm
	mov.b32 %r8475, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8476, %r8470, %r8475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8479, %r8170, %r8476;
	// end inline asm
	// begin inline asm
	mov.b32 %r8482, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8483, %r8470, %r8482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8178, %r8483;
	// end inline asm
	// begin inline asm
	mov.b32 %r8489, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8490, %r8470, %r8489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8186, %r8490;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8496, %r8472, %r8486, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8500, %r8479, %r8493, %r4437;
	// end inline asm
	shl.b32 	%r8507, %r8500, 4;
	// begin inline asm
	lop3.b32 %r8504, %r4443, %r8496, %r8507, 202;
	// end inline asm
	xor.b32  	%r16203, %r8504, -2004318072;
	// begin inline asm
	mov.b32 %r8511, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8509, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8510, %r8511, %r8509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8513, %r8194, %r8510;
	// end inline asm
	// begin inline asm
	mov.b32 %r8516, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8517, %r8511, %r8516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8520, %r8202, %r8517;
	// end inline asm
	// begin inline asm
	mov.b32 %r8523, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8524, %r8511, %r8523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8527, %r8210, %r8524;
	// end inline asm
	// begin inline asm
	mov.b32 %r8530, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8531, %r8511, %r8530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8534, %r8218, %r8531;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8537, %r8513, %r8527, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8541, %r8520, %r8534, %r4437;
	// end inline asm
	shl.b32 	%r8548, %r8541, 4;
	// begin inline asm
	lop3.b32 %r8545, %r4443, %r8537, %r8548, 202;
	// end inline asm
	xor.b32  	%r16204, %r8545, -2004318072;
	st.shared.u32 	[%rd117], %r16197;
	st.shared.u32 	[%rd118], %r16198;
	st.shared.u32 	[%rd119], %r16199;
	st.shared.u32 	[%rd120], %r16200;
	st.shared.u32 	[%rd121], %r16201;
	st.shared.u32 	[%rd122], %r16202;
	st.shared.u32 	[%rd123], %r16203;
	st.shared.u32 	[%rd124], %r16204;
	ld.shared.u32 	%r16372, [%rd109];
	ld.shared.u32 	%r16373, [%rd110];
	ld.shared.u32 	%r16374, [%rd111];
	ld.shared.u32 	%r16375, [%rd112];
	ld.shared.u32 	%r16384, [%rd113];
	ld.shared.u32 	%r16385, [%rd114];
	ld.shared.u32 	%r16386, [%rd115];
	ld.shared.u32 	%r16387, [%rd116];
	// begin inline asm
	mov.b32 %r8554, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8553, %r16372, -2004318072;
	// begin inline asm
	lop3.b32 %r8551, %r920, %r8553, %r8554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8555, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8556, %r8554, %r8555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8559, %r8551, %r8556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8562, %r931, %r8553, %r8565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8566, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8567, %r8565, %r8566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8570, %r8562, %r8567;
	// end inline asm
	shr.u32 	%r8575, %r8553, 8;
	// begin inline asm
	lop3.b32 %r8573, %r920, %r8575, %r8554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8578, %r8554, %r8577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8581, %r8573, %r8578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8584, %r931, %r8575, %r8565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8589, %r8565, %r8588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8592, %r8584, %r8589;
	// end inline asm
	// begin inline asm
	mov.b32 %r8600, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8599, %r16373, -2004318072;
	// begin inline asm
	lop3.b32 %r8597, %r920, %r8599, %r8600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8602, %r8600, %r8601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8605, %r8597, %r8602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8608, %r931, %r8599, %r8611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8612, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8613, %r8611, %r8612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8616, %r8608, %r8613;
	// end inline asm
	shr.u32 	%r8621, %r8599, 8;
	// begin inline asm
	lop3.b32 %r8619, %r920, %r8621, %r8600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8624, %r8600, %r8623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8627, %r8619, %r8624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8630, %r931, %r8621, %r8611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8635, %r8611, %r8634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8638, %r8630, %r8635;
	// end inline asm
	// begin inline asm
	mov.b32 %r8646, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8645, %r16374, -2004318072;
	// begin inline asm
	lop3.b32 %r8643, %r920, %r8645, %r8646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8648, %r8646, %r8647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8651, %r8643, %r8648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8654, %r931, %r8645, %r8657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8658, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8659, %r8657, %r8658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8662, %r8654, %r8659;
	// end inline asm
	shr.u32 	%r8667, %r8645, 8;
	// begin inline asm
	lop3.b32 %r8665, %r920, %r8667, %r8646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8670, %r8646, %r8669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8673, %r8665, %r8670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8676, %r931, %r8667, %r8657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8681, %r8657, %r8680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8684, %r8676, %r8681;
	// end inline asm
	// begin inline asm
	mov.b32 %r8692, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8691, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r8689, %r920, %r8691, %r8692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8694, %r8692, %r8693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8697, %r8689, %r8694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8700, %r931, %r8691, %r8703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8704, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8705, %r8703, %r8704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8708, %r8700, %r8705;
	// end inline asm
	shr.u32 	%r8713, %r8691, 8;
	// begin inline asm
	lop3.b32 %r8711, %r920, %r8713, %r8692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8716, %r8692, %r8715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8719, %r8711, %r8716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8722, %r931, %r8713, %r8703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8727, %r8703, %r8726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8730, %r8722, %r8727;
	// end inline asm
	// begin inline asm
	mov.b32 %r8738, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8737, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r8735, %r920, %r8737, %r8738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8739, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8740, %r8738, %r8739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8743, %r8735, %r8740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8746, %r931, %r8737, %r8749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8750, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8751, %r8749, %r8750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8754, %r8746, %r8751;
	// end inline asm
	shr.u32 	%r8759, %r8737, 8;
	// begin inline asm
	lop3.b32 %r8757, %r920, %r8759, %r8738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8762, %r8738, %r8761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8765, %r8757, %r8762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8768, %r931, %r8759, %r8749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8773, %r8749, %r8772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8776, %r8768, %r8773;
	// end inline asm
	// begin inline asm
	mov.b32 %r8784, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8783, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r8781, %r920, %r8783, %r8784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8785, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8786, %r8784, %r8785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8789, %r8781, %r8786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8792, %r931, %r8783, %r8795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8796, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8797, %r8795, %r8796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8800, %r8792, %r8797;
	// end inline asm
	shr.u32 	%r8805, %r8783, 8;
	// begin inline asm
	lop3.b32 %r8803, %r920, %r8805, %r8784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8807, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8808, %r8784, %r8807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8811, %r8803, %r8808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8814, %r931, %r8805, %r8795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8818, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8819, %r8795, %r8818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8822, %r8814, %r8819;
	// end inline asm
	// begin inline asm
	mov.b32 %r8830, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8841, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8829, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r8827, %r920, %r8829, %r8830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8831, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8832, %r8830, %r8831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8835, %r8827, %r8832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8838, %r931, %r8829, %r8841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8842, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8843, %r8841, %r8842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8846, %r8838, %r8843;
	// end inline asm
	shr.u32 	%r8851, %r8829, 8;
	// begin inline asm
	lop3.b32 %r8849, %r920, %r8851, %r8830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8853, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8854, %r8830, %r8853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8857, %r8849, %r8854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8860, %r931, %r8851, %r8841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8864, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8865, %r8841, %r8864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8868, %r8860, %r8865;
	// end inline asm
	// begin inline asm
	mov.b32 %r8876, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8887, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8875, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r8873, %r920, %r8875, %r8876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8877, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8878, %r8876, %r8877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8881, %r8873, %r8878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8884, %r931, %r8875, %r8887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8888, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8889, %r8887, %r8888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8892, %r8884, %r8889;
	// end inline asm
	shr.u32 	%r8897, %r8875, 8;
	// begin inline asm
	lop3.b32 %r8895, %r920, %r8897, %r8876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8899, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8900, %r8876, %r8899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8903, %r8895, %r8900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8906, %r931, %r8897, %r8887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8910, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8911, %r8887, %r8910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8914, %r8906, %r8911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8992, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8994, %r8992, %r8730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8997, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8999, %r8997, %r8743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9002, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9004, %r9002, %r8754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9007, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9009, %r9007, %r8765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9012, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9014, %r9012, %r8776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9017, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9019, %r9017, %r8789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9022, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9024, %r9022, %r8800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9027, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9029, %r9027, %r8811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9032, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9034, %r9032, %r8822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9037, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9039, %r9037, %r8835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9042, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9044, %r9042, %r8846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9047, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9049, %r9047, %r8857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9052, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9054, %r9052, %r8868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9057, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9059, %r9057, %r8881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9062, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9064, %r9062, %r8892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9067, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9069, %r9067, %r8903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9072, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9074, %r9072, %r8914;
	// end inline asm
	// begin inline asm
	mov.b32 %r9082, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9079, %r920, %r2505, %r9082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9083, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9084, %r9082, %r9083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9087, %r9079, %r9084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9090, %r931, %r2505, %r9093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9094, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9095, %r9093, %r9094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9098, %r9090, %r9095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9101, %r920, %r2527, %r9082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9106, %r9082, %r9105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9109, %r9101, %r9106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9112, %r931, %r2527, %r9093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9117, %r9093, %r9116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9120, %r9112, %r9117;
	// end inline asm
	// begin inline asm
	mov.b32 %r9128, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9125, %r920, %r2551, %r9128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9129, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9130, %r9128, %r9129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9133, %r9125, %r9130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9136, %r931, %r2551, %r9139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9140, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9141, %r9139, %r9140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9144, %r9136, %r9141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9147, %r920, %r2573, %r9128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9152, %r9128, %r9151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9155, %r9147, %r9152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9158, %r931, %r2573, %r9139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9163, %r9139, %r9162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9166, %r9158, %r9163;
	// end inline asm
	// begin inline asm
	mov.b32 %r9174, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9171, %r920, %r2597, %r9174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9175, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9176, %r9174, %r9175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9179, %r9171, %r9176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9182, %r931, %r2597, %r9185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9186, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9187, %r9185, %r9186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9190, %r9182, %r9187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9193, %r920, %r2619, %r9174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9198, %r9174, %r9197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9201, %r9193, %r9198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9204, %r931, %r2619, %r9185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9209, %r9185, %r9208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9212, %r9204, %r9209;
	// end inline asm
	// begin inline asm
	mov.b32 %r9220, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9217, %r920, %r2643, %r9220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9221, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9222, %r9220, %r9221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9225, %r9217, %r9222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9228, %r931, %r2643, %r9231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9232, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9233, %r9231, %r9232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9236, %r9228, %r9233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9239, %r920, %r2665, %r9220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9244, %r9220, %r9243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9247, %r9239, %r9244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9250, %r931, %r2665, %r9231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9255, %r9231, %r9254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9258, %r9250, %r9255;
	// end inline asm
	// begin inline asm
	mov.b32 %r9266, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9263, %r920, %r2689, %r9266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9267, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9268, %r9266, %r9267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9271, %r9263, %r9268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9274, %r931, %r2689, %r9277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9278, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9279, %r9277, %r9278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9282, %r9274, %r9279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9285, %r920, %r2711, %r9266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9290, %r9266, %r9289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9293, %r9285, %r9290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9296, %r931, %r2711, %r9277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9301, %r9277, %r9300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9304, %r9296, %r9301;
	// end inline asm
	// begin inline asm
	mov.b32 %r9312, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9309, %r920, %r2735, %r9312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9313, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9314, %r9312, %r9313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9317, %r9309, %r9314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9320, %r931, %r2735, %r9323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9324, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9325, %r9323, %r9324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9328, %r9320, %r9325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9331, %r920, %r2757, %r9312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9335, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9336, %r9312, %r9335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9339, %r9331, %r9336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9342, %r931, %r2757, %r9323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9346, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9347, %r9323, %r9346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9350, %r9342, %r9347;
	// end inline asm
	// begin inline asm
	mov.b32 %r9358, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9369, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9355, %r920, %r2781, %r9358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9359, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9360, %r9358, %r9359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9363, %r9355, %r9360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9366, %r931, %r2781, %r9369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9370, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9371, %r9369, %r9370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9374, %r9366, %r9371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9377, %r920, %r2803, %r9358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9381, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9382, %r9358, %r9381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9385, %r9377, %r9382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9388, %r931, %r2803, %r9369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9392, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9393, %r9369, %r9392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9396, %r9388, %r9393;
	// end inline asm
	// begin inline asm
	mov.b32 %r9404, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9415, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9401, %r920, %r2827, %r9404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9405, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9406, %r9404, %r9405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9409, %r9401, %r9406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9412, %r931, %r2827, %r9415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9416, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9417, %r9415, %r9416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9420, %r9412, %r9417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9423, %r920, %r2849, %r9404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9427, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9428, %r9404, %r9427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9431, %r9423, %r9428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9434, %r931, %r2849, %r9415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9438, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9439, %r9415, %r9438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9442, %r9434, %r9439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9445, %r286, %r9087, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9449, %r286, %r9098, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9453, %r286, %r9109, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9457, %r286, %r9120, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9461, %r286, %r9133, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9465, %r286, %r9144, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9469, %r286, %r9155, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9473, %r286, %r9166, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9477, %r286, %r9179, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9481, %r286, %r9190, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9485, %r286, %r9201, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9489, %r286, %r9212, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9493, %r286, %r9225, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9497, %r286, %r9236, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9501, %r286, %r9247, %r8989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9505, %r286, %r9258, %r8994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9509, %r304, %r9271, %r8999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9513, %r304, %r9282, %r9004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9517, %r304, %r9293, %r9009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9521, %r304, %r9304, %r9014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9525, %r304, %r9317, %r9019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9529, %r304, %r9328, %r9024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9533, %r304, %r9339, %r9029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9537, %r304, %r9350, %r9034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9541, %r304, %r9363, %r9039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9545, %r304, %r9374, %r9044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9549, %r304, %r9385, %r9049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9553, %r304, %r9396, %r9054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9557, %r304, %r9409, %r9059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9561, %r304, %r9420, %r9064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9565, %r304, %r9431, %r9069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9569, %r304, %r9442, %r9074;
	// end inline asm
	// begin inline asm
	mov.b32 %r9578, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9575, %r920, %r921, %r9578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9579, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9580, %r9578, %r9579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9583, %r9575, %r9580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9586, %r931, %r921, %r9589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9590, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9591, %r9589, %r9590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9594, %r9586, %r9591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9597, %r920, %r943, %r9578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9602, %r9578, %r9601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9605, %r9597, %r9602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9608, %r931, %r943, %r9589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9613, %r9589, %r9612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9616, %r9608, %r9613;
	// end inline asm
	// begin inline asm
	mov.b32 %r9624, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9621, %r920, %r967, %r9624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9625, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9626, %r9624, %r9625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9629, %r9621, %r9626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9632, %r931, %r967, %r9635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9636, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9637, %r9635, %r9636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9640, %r9632, %r9637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9643, %r920, %r989, %r9624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9648, %r9624, %r9647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9651, %r9643, %r9648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9654, %r931, %r989, %r9635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9659, %r9635, %r9658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9662, %r9654, %r9659;
	// end inline asm
	// begin inline asm
	mov.b32 %r9670, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9667, %r920, %r1013, %r9670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9671, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9672, %r9670, %r9671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9675, %r9667, %r9672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9678, %r931, %r1013, %r9681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9682, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9683, %r9681, %r9682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9686, %r9678, %r9683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9689, %r920, %r1035, %r9670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9694, %r9670, %r9693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9697, %r9689, %r9694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9700, %r931, %r1035, %r9681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9705, %r9681, %r9704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9708, %r9700, %r9705;
	// end inline asm
	// begin inline asm
	mov.b32 %r9716, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9713, %r920, %r1059, %r9716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9717, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9718, %r9716, %r9717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9721, %r9713, %r9718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9724, %r931, %r1059, %r9727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9728, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9729, %r9727, %r9728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9732, %r9724, %r9729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9735, %r920, %r1081, %r9716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9740, %r9716, %r9739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9743, %r9735, %r9740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9746, %r931, %r1081, %r9727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9751, %r9727, %r9750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9754, %r9746, %r9751;
	// end inline asm
	// begin inline asm
	mov.b32 %r9762, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9759, %r920, %r1105, %r9762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9763, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9764, %r9762, %r9763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9767, %r9759, %r9764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9770, %r931, %r1105, %r9773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9774, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9775, %r9773, %r9774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9778, %r9770, %r9775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9781, %r920, %r1127, %r9762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9786, %r9762, %r9785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9789, %r9781, %r9786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9792, %r931, %r1127, %r9773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9797, %r9773, %r9796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9800, %r9792, %r9797;
	// end inline asm
	// begin inline asm
	mov.b32 %r9808, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9805, %r920, %r1151, %r9808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9809, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9810, %r9808, %r9809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9813, %r9805, %r9810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9816, %r931, %r1151, %r9819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9820, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9821, %r9819, %r9820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9824, %r9816, %r9821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9827, %r920, %r1173, %r9808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9831, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9832, %r9808, %r9831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9835, %r9827, %r9832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9838, %r931, %r1173, %r9819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9842, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9843, %r9819, %r9842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9846, %r9838, %r9843;
	// end inline asm
	// begin inline asm
	mov.b32 %r9854, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9865, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9851, %r920, %r1197, %r9854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9855, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9856, %r9854, %r9855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9859, %r9851, %r9856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9862, %r931, %r1197, %r9865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9866, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9867, %r9865, %r9866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9870, %r9862, %r9867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9873, %r920, %r1219, %r9854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9877, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9878, %r9854, %r9877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9881, %r9873, %r9878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9884, %r931, %r1219, %r9865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9888, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9889, %r9865, %r9888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9892, %r9884, %r9889;
	// end inline asm
	// begin inline asm
	mov.b32 %r9900, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9911, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9897, %r920, %r1243, %r9900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9901, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9902, %r9900, %r9901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9905, %r9897, %r9902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9908, %r931, %r1243, %r9911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9912, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9913, %r9911, %r9912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9916, %r9908, %r9913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9919, %r920, %r1265, %r9900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9923, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9924, %r9900, %r9923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9927, %r9919, %r9924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9930, %r931, %r1265, %r9911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9934, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9935, %r9911, %r9934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9938, %r9930, %r9935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9583, %r9445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9594, %r9449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9605, %r9453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9616, %r9457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9629, %r9461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9640, %r9465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9651, %r9469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9662, %r9473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9675, %r9477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9686, %r9481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9697, %r9485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9708, %r9489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9721, %r9493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9732, %r9497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9743, %r9501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9754, %r9505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10037, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10039, %r10037, %r9767, %r9509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10043, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10045, %r10043, %r9778, %r9513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10049, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10051, %r10049, %r9789, %r9517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10055, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10057, %r10055, %r9800, %r9521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10061, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10063, %r10061, %r9813, %r9525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10067, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10069, %r10067, %r9824, %r9529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10073, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10075, %r10073, %r9835, %r9533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10079, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10081, %r10079, %r9846, %r9537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10085, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10087, %r10085, %r9859, %r9541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10091, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10093, %r10091, %r9870, %r9545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10097, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10099, %r10097, %r9881, %r9549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10103, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10105, %r10103, %r9892, %r9553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10109, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10111, %r10109, %r9905, %r9557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10115, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10117, %r10115, %r9916, %r9561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10121, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10123, %r10121, %r9927, %r9565;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10127, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10129, %r10127, %r9938, %r9569;
	// end inline asm
	// begin inline asm
	mov.b32 %r10138, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10135, %r920, %r4737, %r10138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10139, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10140, %r10138, %r10139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10143, %r10135, %r10140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10146, %r931, %r4737, %r10149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10150, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10151, %r10149, %r10150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10154, %r10146, %r10151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10157, %r920, %r4759, %r10138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10162, %r10138, %r10161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10165, %r10157, %r10162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10168, %r931, %r4759, %r10149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10173, %r10149, %r10172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10176, %r10168, %r10173;
	// end inline asm
	// begin inline asm
	mov.b32 %r10184, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10181, %r920, %r4783, %r10184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10185, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10186, %r10184, %r10185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10189, %r10181, %r10186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10192, %r931, %r4783, %r10195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10196, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10197, %r10195, %r10196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10200, %r10192, %r10197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10203, %r920, %r4805, %r10184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10208, %r10184, %r10207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10211, %r10203, %r10208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10214, %r931, %r4805, %r10195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10219, %r10195, %r10218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10222, %r10214, %r10219;
	// end inline asm
	// begin inline asm
	mov.b32 %r10230, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10227, %r920, %r4829, %r10230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10231, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10232, %r10230, %r10231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10235, %r10227, %r10232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10238, %r931, %r4829, %r10241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10242, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10243, %r10241, %r10242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10246, %r10238, %r10243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10249, %r920, %r4851, %r10230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10254, %r10230, %r10253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10257, %r10249, %r10254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10260, %r931, %r4851, %r10241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10265, %r10241, %r10264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10268, %r10260, %r10265;
	// end inline asm
	// begin inline asm
	mov.b32 %r10276, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10273, %r920, %r4875, %r10276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10277, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10278, %r10276, %r10277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10281, %r10273, %r10278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10284, %r931, %r4875, %r10287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10288, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10289, %r10287, %r10288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10292, %r10284, %r10289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10295, %r920, %r4897, %r10276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10300, %r10276, %r10299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10303, %r10295, %r10300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10306, %r931, %r4897, %r10287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10311, %r10287, %r10310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10314, %r10306, %r10311;
	// end inline asm
	// begin inline asm
	mov.b32 %r10322, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10319, %r920, %r4921, %r10322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10323, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10324, %r10322, %r10323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10327, %r10319, %r10324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10330, %r931, %r4921, %r10333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10334, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10335, %r10333, %r10334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10338, %r10330, %r10335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10341, %r920, %r4943, %r10322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10346, %r10322, %r10345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10349, %r10341, %r10346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10352, %r931, %r4943, %r10333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10357, %r10333, %r10356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10360, %r10352, %r10357;
	// end inline asm
	// begin inline asm
	mov.b32 %r10368, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10365, %r920, %r4967, %r10368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10369, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10370, %r10368, %r10369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10373, %r10365, %r10370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10376, %r931, %r4967, %r10379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10380, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10381, %r10379, %r10380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10384, %r10376, %r10381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10387, %r920, %r4989, %r10368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10391, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10392, %r10368, %r10391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10395, %r10387, %r10392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10398, %r931, %r4989, %r10379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10402, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10403, %r10379, %r10402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10406, %r10398, %r10403;
	// end inline asm
	// begin inline asm
	mov.b32 %r10414, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10425, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10411, %r920, %r5013, %r10414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10415, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10416, %r10414, %r10415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10419, %r10411, %r10416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10422, %r931, %r5013, %r10425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10426, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10427, %r10425, %r10426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10430, %r10422, %r10427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10433, %r920, %r5035, %r10414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10438, %r10414, %r10437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10441, %r10433, %r10438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10444, %r931, %r5035, %r10425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10449, %r10425, %r10448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10452, %r10444, %r10449;
	// end inline asm
	// begin inline asm
	mov.b32 %r10460, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10471, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10457, %r920, %r5059, %r10460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10461, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10462, %r10460, %r10461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10465, %r10457, %r10462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10468, %r931, %r5059, %r10471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10472, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10473, %r10471, %r10472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10476, %r10468, %r10473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10479, %r920, %r5081, %r10460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10483, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10484, %r10460, %r10483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10487, %r10479, %r10484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10490, %r931, %r5081, %r10471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10495, %r10471, %r10494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10498, %r10490, %r10495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r358, %r10143, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r358, %r10154, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r358, %r10165, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r358, %r10176, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r358, %r10189, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r358, %r10200, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r358, %r10211, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r358, %r10222, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r358, %r10235, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r358, %r10246, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r358, %r10257, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r358, %r10268, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r358, %r10281, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r358, %r10292, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r358, %r10303, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r358, %r10314, %r10033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r376, %r10327, %r10039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r376, %r10338, %r10045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r376, %r10349, %r10051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r376, %r10360, %r10057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r376, %r10373, %r10063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r376, %r10384, %r10069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r376, %r10395, %r10075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r376, %r10406, %r10081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r376, %r10419, %r10087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r376, %r10430, %r10093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10753, %r376, %r10441, %r10099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r376, %r10452, %r10105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r376, %r10465, %r10111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r376, %r10476, %r10117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10771, %r376, %r10487, %r10123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10768, %r376, %r10498, %r10129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r440, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r440, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r440, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r440, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r440, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r440, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r440, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10692, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r10692, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r440, %r10699, %r10694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10701, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r10701, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r443, %r10708, %r10703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10710, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r10710, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r443, %r10717, %r10712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10719, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r10719, %r10723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r443, %r10726, %r10721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10728, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10730, %r10728, %r10732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r443, %r10735, %r10730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10737, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10739, %r10737, %r10741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r443, %r10744, %r10739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10746, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r10746, %r10750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r443, %r10753, %r10748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10755, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10757, %r10755, %r10759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10760, %r443, %r10762, %r10757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10764, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r10764, %r10768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r443, %r10771, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r446, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r440, %r10633, %r10773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10780, %r446, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r440, %r10642, %r10780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10787, %r446, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10790, %r440, %r10651, %r10787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10794, %r446, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10797, %r440, %r10660, %r10794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10801, %r446, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10804, %r440, %r10669, %r10801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10808, %r446, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10811, %r440, %r10678, %r10808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10815, %r446, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10818, %r440, %r10687, %r10815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10822, %r446, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10825, %r440, %r10696, %r10822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10829, %r449, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10832, %r443, %r10705, %r10829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10836, %r449, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10839, %r443, %r10714, %r10836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10843, %r449, %r10726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10846, %r443, %r10723, %r10843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10850, %r449, %r10735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10853, %r443, %r10732, %r10850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10857, %r449, %r10744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10860, %r443, %r10741, %r10857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10864, %r449, %r10753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10867, %r443, %r10750, %r10864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10871, %r449, %r10762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10874, %r443, %r10759, %r10871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10878, %r449, %r10771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10881, %r443, %r10768, %r10878;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r495, %r501, %r498, %r504}, {%r10634, %r10776}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r495, %r501, %r498, %r504}, {%r10643, %r10783}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r495, %r501, %r498, %r504}, {%r10652, %r10790}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r495, %r501, %r498, %r504}, {%r10661, %r10797}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r495, %r501, %r498, %r504}, {%r10670, %r10804}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r495, %r501, %r498, %r504}, {%r10679, %r10811}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r495, %r501, %r498, %r504}, {%r10688, %r10818}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11115, %r11112}, {%r495, %r501, %r498, %r504}, {%r10697, %r10825}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11124, %r11121}, {%r495, %r501, %r498, %r504}, {%r10706, %r10832}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11133, %r11130}, {%r495, %r501, %r498, %r504}, {%r10715, %r10839}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11142, %r11139}, {%r495, %r501, %r498, %r504}, {%r10724, %r10846}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11151, %r11148}, {%r495, %r501, %r498, %r504}, {%r10733, %r10853}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11160, %r11157}, {%r495, %r501, %r498, %r504}, {%r10742, %r10860}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11169, %r11166}, {%r495, %r501, %r498, %r504}, {%r10751, %r10867}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11178, %r11175}, {%r495, %r501, %r498, %r504}, {%r10760, %r10874}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11187, %r11184}, {%r495, %r501, %r498, %r504}, {%r10769, %r10881}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r545, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r545, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r545, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r545, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r545, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r545, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r545, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11108, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r11108, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r545, %r11115, %r11110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11117, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r11117, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r545, %r11124, %r11119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11126, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r11126, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r545, %r11133, %r11128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11135, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r11135, %r11139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r545, %r11142, %r11137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11144, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11146, %r11144, %r11148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11149, %r545, %r11151, %r11146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11153, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11155, %r11153, %r11157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11158, %r545, %r11160, %r11155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11162, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r11162, %r11166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r545, %r11169, %r11164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11171, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11173, %r11171, %r11175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11176, %r545, %r11178, %r11173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11180, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r11180, %r11184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r545, %r11187, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r548, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r545, %r11049, %r11189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11196, %r548, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11199, %r545, %r11058, %r11196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11203, %r548, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11206, %r545, %r11067, %r11203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11210, %r548, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11213, %r545, %r11076, %r11210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11217, %r548, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11220, %r545, %r11085, %r11217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11224, %r548, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11227, %r545, %r11094, %r11224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11231, %r548, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11234, %r545, %r11103, %r11231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11238, %r548, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11241, %r545, %r11112, %r11238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11245, %r548, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11248, %r545, %r11121, %r11245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11252, %r548, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11255, %r545, %r11130, %r11252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11259, %r548, %r11142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11262, %r545, %r11139, %r11259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11266, %r548, %r11151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11269, %r545, %r11148, %r11266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11273, %r548, %r11160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11276, %r545, %r11157, %r11273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11280, %r548, %r11169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11283, %r545, %r11166, %r11280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11287, %r548, %r11178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11290, %r545, %r11175, %r11287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11294, %r548, %r11187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11297, %r545, %r11184, %r11294;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11590, %r11593}, {%r583, %r589, %r586, %r592}, {%r11050, %r11192}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11596, %r11599}, {%r583, %r589, %r586, %r592}, {%r11059, %r11199}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11602, %r11605}, {%r583, %r589, %r586, %r592}, {%r11068, %r11206}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11608, %r11611}, {%r583, %r589, %r586, %r592}, {%r11077, %r11213}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11614, %r11617}, {%r583, %r589, %r586, %r592}, {%r11086, %r11220}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11620, %r11623}, {%r583, %r589, %r586, %r592}, {%r11095, %r11227}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11626, %r11629}, {%r583, %r589, %r586, %r592}, {%r11104, %r11234}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11632, %r11635}, {%r583, %r589, %r586, %r592}, {%r11113, %r11241}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11591, %r11594}, {%r583, %r589, %r586, %r592}, {%r11122, %r11248}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11597, %r11600}, {%r583, %r589, %r586, %r592}, {%r11131, %r11255}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11603, %r11606}, {%r583, %r589, %r586, %r592}, {%r11140, %r11262}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11609, %r11612}, {%r583, %r589, %r586, %r592}, {%r11149, %r11269}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11615, %r11618}, {%r583, %r589, %r586, %r592}, {%r11158, %r11276}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11621, %r11624}, {%r583, %r589, %r586, %r592}, {%r11167, %r11283}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11627, %r11630}, {%r583, %r589, %r586, %r592}, {%r11176, %r11290}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11633, %r11636}, {%r583, %r589, %r586, %r592}, {%r11185, %r11297}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11592, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11595, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11598, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11601, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11604, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11607, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11610, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11613, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11616, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11619, %r11620, %r11621;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11622, %r11623, %r11624;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11625, %r11626, %r11627;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11628, %r11629, %r11630;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11631, %r11632, %r11633;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11634, %r11635, %r11636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11640, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11643, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11646, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11649, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11652, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11655, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11658, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11661, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11664, %r11617, %r11618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11667, %r11620, %r11621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11670, %r11623, %r11624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11673, %r11626, %r11627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11676, %r11629, %r11630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11679, %r11632, %r11633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11682, %r11635, %r11636;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r215, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r215, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r215, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r215, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r215, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r215, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r215, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r215, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r215, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r215, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r215, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r215, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r215, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r215, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r215, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r215, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r216, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r216, %r11640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11739, %r216, %r11643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11742, %r216, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11745, %r216, %r11649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11748, %r216, %r11652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11751, %r216, %r11655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11754, %r216, %r11658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11757, %r216, %r11661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11760, %r216, %r11664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11763, %r216, %r11667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11766, %r216, %r11670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11769, %r216, %r11673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11772, %r216, %r11676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11775, %r216, %r11679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11778, %r216, %r11682;
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11783, %r11685, %r11781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11786, %r11783, %r11782;
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11791, %r11688, %r11789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11794, %r11791, %r11790;
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11799, %r11691, %r11797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11802, %r11799, %r11798;
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11807, %r11694, %r11805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11810, %r11807, %r11806;
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11815, %r11697, %r11813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11818, %r11815, %r11814;
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11823, %r11700, %r11821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11826, %r11823, %r11822;
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11831, %r11703, %r11829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11834, %r11831, %r11830;
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11839, %r11706, %r11837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11842, %r11839, %r11838;
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11847, %r11709, %r11845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11850, %r11847, %r11846;
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11855, %r11712, %r11853;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11858, %r11855, %r11854;
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11863, %r11715, %r11861;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11866, %r11863, %r11862;
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11871, %r11718, %r11869;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11874, %r11871, %r11870;
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11879, %r11721, %r11877;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11882, %r11879, %r11878;
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11887, %r11724, %r11885;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11890, %r11887, %r11886;
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11895, %r11727, %r11893;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11898, %r11895, %r11894;
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11903, %r11730, %r11901;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11906, %r11903, %r11902;
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11911, %r11733, %r11909;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11914, %r11911, %r11910;
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11919, %r11736, %r11917;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11922, %r11919, %r11918;
	// end inline asm
	// begin inline asm
	mov.b32 %r11925, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11927, %r11739, %r11925;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11930, %r11927, %r11926;
	// end inline asm
	// begin inline asm
	mov.b32 %r11933, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11935, %r11742, %r11933;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11938, %r11935, %r11934;
	// end inline asm
	// begin inline asm
	mov.b32 %r11941, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11943, %r11745, %r11941;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11946, %r11943, %r11942;
	// end inline asm
	// begin inline asm
	mov.b32 %r11949, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11951, %r11748, %r11949;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11954, %r11951, %r11950;
	// end inline asm
	// begin inline asm
	mov.b32 %r11957, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11959, %r11751, %r11957;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11962, %r11959, %r11958;
	// end inline asm
	// begin inline asm
	mov.b32 %r11965, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11967, %r11754, %r11965;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11970, %r11967, %r11966;
	// end inline asm
	// begin inline asm
	mov.b32 %r11973, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11975, %r11757, %r11973;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11978, %r11975, %r11974;
	// end inline asm
	// begin inline asm
	mov.b32 %r11981, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11983, %r11760, %r11981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11986, %r11983, %r11982;
	// end inline asm
	// begin inline asm
	mov.b32 %r11989, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11990, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11991, %r11763, %r11989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11994, %r11991, %r11990;
	// end inline asm
	// begin inline asm
	mov.b32 %r11997, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11999, %r11766, %r11997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12002, %r11999, %r11998;
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12007, %r11769, %r12005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12010, %r12007, %r12006;
	// end inline asm
	// begin inline asm
	mov.b32 %r12013, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12014, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12015, %r11772, %r12013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12018, %r12015, %r12014;
	// end inline asm
	// begin inline asm
	mov.b32 %r12021, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12022, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12023, %r11775, %r12021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12026, %r12023, %r12022;
	// end inline asm
	// begin inline asm
	mov.b32 %r12029, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r12030, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12031, %r11778, %r12029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12034, %r12031, %r12030;
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12038, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r12040, %r12038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r11786, %r12039;
	// end inline asm
	// begin inline asm
	mov.b32 %r12045, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r12040, %r12045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12049, %r11794, %r12046;
	// end inline asm
	// begin inline asm
	mov.b32 %r12052, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r12040, %r12052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12056, %r11802, %r12053;
	// end inline asm
	// begin inline asm
	mov.b32 %r12059, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r12040, %r12059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12063, %r11810, %r12060;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12066, %r12042, %r12056, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12070, %r12049, %r12063, %r4437;
	// end inline asm
	shl.b32 	%r12077, %r12070, 4;
	// begin inline asm
	lop3.b32 %r12074, %r4443, %r12066, %r12077, 202;
	// end inline asm
	xor.b32  	%r16205, %r12074, -2004318072;
	// begin inline asm
	mov.b32 %r12081, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12079, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r12081, %r12079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r11818, %r12080;
	// end inline asm
	// begin inline asm
	mov.b32 %r12086, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r12081, %r12086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12090, %r11826, %r12087;
	// end inline asm
	// begin inline asm
	mov.b32 %r12093, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r12081, %r12093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12097, %r11834, %r12094;
	// end inline asm
	// begin inline asm
	mov.b32 %r12100, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r12081, %r12100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12104, %r11842, %r12101;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12107, %r12083, %r12097, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12111, %r12090, %r12104, %r4437;
	// end inline asm
	shl.b32 	%r12118, %r12111, 4;
	// begin inline asm
	lop3.b32 %r12115, %r4443, %r12107, %r12118, 202;
	// end inline asm
	xor.b32  	%r16206, %r12115, -2004318072;
	// begin inline asm
	mov.b32 %r12122, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12120, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r12122, %r12120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r11850, %r12121;
	// end inline asm
	// begin inline asm
	mov.b32 %r12127, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r12122, %r12127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12131, %r11858, %r12128;
	// end inline asm
	// begin inline asm
	mov.b32 %r12134, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r12122, %r12134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12138, %r11866, %r12135;
	// end inline asm
	// begin inline asm
	mov.b32 %r12141, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r12122, %r12141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12145, %r11874, %r12142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12148, %r12124, %r12138, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12152, %r12131, %r12145, %r4437;
	// end inline asm
	shl.b32 	%r12159, %r12152, 4;
	// begin inline asm
	lop3.b32 %r12156, %r4443, %r12148, %r12159, 202;
	// end inline asm
	xor.b32  	%r16207, %r12156, -2004318072;
	// begin inline asm
	mov.b32 %r12163, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12161, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r12163, %r12161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r11882, %r12162;
	// end inline asm
	// begin inline asm
	mov.b32 %r12168, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r12163, %r12168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12172, %r11890, %r12169;
	// end inline asm
	// begin inline asm
	mov.b32 %r12175, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r12163, %r12175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12179, %r11898, %r12176;
	// end inline asm
	// begin inline asm
	mov.b32 %r12182, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r12163, %r12182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12186, %r11906, %r12183;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12189, %r12165, %r12179, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12193, %r12172, %r12186, %r4437;
	// end inline asm
	shl.b32 	%r12200, %r12193, 4;
	// begin inline asm
	lop3.b32 %r12197, %r4443, %r12189, %r12200, 202;
	// end inline asm
	xor.b32  	%r16208, %r12197, -2004318072;
	// begin inline asm
	mov.b32 %r12204, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12202, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r12204, %r12202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r11914, %r12203;
	// end inline asm
	// begin inline asm
	mov.b32 %r12209, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r12204, %r12209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12213, %r11922, %r12210;
	// end inline asm
	// begin inline asm
	mov.b32 %r12216, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r12204, %r12216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12220, %r11930, %r12217;
	// end inline asm
	// begin inline asm
	mov.b32 %r12223, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r12204, %r12223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12227, %r11938, %r12224;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12230, %r12206, %r12220, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12234, %r12213, %r12227, %r4437;
	// end inline asm
	shl.b32 	%r12241, %r12234, 4;
	// begin inline asm
	lop3.b32 %r12238, %r4443, %r12230, %r12241, 202;
	// end inline asm
	xor.b32  	%r16209, %r12238, -2004318072;
	// begin inline asm
	mov.b32 %r12245, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12243, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12244, %r12245, %r12243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r11946, %r12244;
	// end inline asm
	// begin inline asm
	mov.b32 %r12250, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r12245, %r12250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r11954, %r12251;
	// end inline asm
	// begin inline asm
	mov.b32 %r12257, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12258, %r12245, %r12257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12261, %r11962, %r12258;
	// end inline asm
	// begin inline asm
	mov.b32 %r12264, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r12245, %r12264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12268, %r11970, %r12265;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12271, %r12247, %r12261, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12275, %r12254, %r12268, %r4437;
	// end inline asm
	shl.b32 	%r12282, %r12275, 4;
	// begin inline asm
	lop3.b32 %r12279, %r4443, %r12271, %r12282, 202;
	// end inline asm
	xor.b32  	%r16210, %r12279, -2004318072;
	// begin inline asm
	mov.b32 %r12286, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12284, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12285, %r12286, %r12284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12288, %r11978, %r12285;
	// end inline asm
	// begin inline asm
	mov.b32 %r12291, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12292, %r12286, %r12291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12295, %r11986, %r12292;
	// end inline asm
	// begin inline asm
	mov.b32 %r12298, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12299, %r12286, %r12298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r11994, %r12299;
	// end inline asm
	// begin inline asm
	mov.b32 %r12305, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12306, %r12286, %r12305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12002, %r12306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12312, %r12288, %r12302, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12316, %r12295, %r12309, %r4437;
	// end inline asm
	shl.b32 	%r12323, %r12316, 4;
	// begin inline asm
	lop3.b32 %r12320, %r4443, %r12312, %r12323, 202;
	// end inline asm
	xor.b32  	%r16211, %r12320, -2004318072;
	// begin inline asm
	mov.b32 %r12327, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12325, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12326, %r12327, %r12325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12329, %r12010, %r12326;
	// end inline asm
	// begin inline asm
	mov.b32 %r12332, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12333, %r12327, %r12332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12336, %r12018, %r12333;
	// end inline asm
	// begin inline asm
	mov.b32 %r12339, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12340, %r12327, %r12339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12343, %r12026, %r12340;
	// end inline asm
	// begin inline asm
	mov.b32 %r12346, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12347, %r12327, %r12346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12350, %r12034, %r12347;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12353, %r12329, %r12343, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12357, %r12336, %r12350, %r4437;
	// end inline asm
	shl.b32 	%r12364, %r12357, 4;
	// begin inline asm
	lop3.b32 %r12361, %r4443, %r12353, %r12364, 202;
	// end inline asm
	xor.b32  	%r16212, %r12361, -2004318072;
	st.shared.u32 	[%rd117], %r16205;
	st.shared.u32 	[%rd118], %r16206;
	st.shared.u32 	[%rd119], %r16207;
	st.shared.u32 	[%rd120], %r16208;
	st.shared.u32 	[%rd121], %r16209;
	st.shared.u32 	[%rd122], %r16210;
	st.shared.u32 	[%rd123], %r16211;
	st.shared.u32 	[%rd124], %r16212;
	ld.shared.u32 	%r16376, [%rd109];
	ld.shared.u32 	%r16377, [%rd110];
	ld.shared.u32 	%r16378, [%rd111];
	ld.shared.u32 	%r16379, [%rd112];
	ld.shared.u32 	%r16388, [%rd113];
	ld.shared.u32 	%r16389, [%rd114];
	ld.shared.u32 	%r16390, [%rd115];
	ld.shared.u32 	%r16391, [%rd116];
	// begin inline asm
	mov.b32 %r12370, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12369, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r12367, %r920, %r12369, %r12370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12371, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12372, %r12370, %r12371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12375, %r12367, %r12372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12378, %r931, %r12369, %r12381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12382, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12383, %r12381, %r12382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12386, %r12378, %r12383;
	// end inline asm
	shr.u32 	%r12391, %r12369, 8;
	// begin inline asm
	lop3.b32 %r12389, %r920, %r12391, %r12370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12394, %r12370, %r12393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12397, %r12389, %r12394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12400, %r931, %r12391, %r12381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12405, %r12381, %r12404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12408, %r12400, %r12405;
	// end inline asm
	// begin inline asm
	mov.b32 %r12416, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12415, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r12413, %r920, %r12415, %r12416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12417, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12418, %r12416, %r12417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12421, %r12413, %r12418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12424, %r931, %r12415, %r12427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12428, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12429, %r12427, %r12428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12432, %r12424, %r12429;
	// end inline asm
	shr.u32 	%r12437, %r12415, 8;
	// begin inline asm
	lop3.b32 %r12435, %r920, %r12437, %r12416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12440, %r12416, %r12439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12443, %r12435, %r12440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12446, %r931, %r12437, %r12427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12451, %r12427, %r12450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12454, %r12446, %r12451;
	// end inline asm
	// begin inline asm
	mov.b32 %r12462, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12461, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r12459, %r920, %r12461, %r12462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12463, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12464, %r12462, %r12463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12467, %r12459, %r12464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12470, %r931, %r12461, %r12473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12474, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12475, %r12473, %r12474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12478, %r12470, %r12475;
	// end inline asm
	shr.u32 	%r12483, %r12461, 8;
	// begin inline asm
	lop3.b32 %r12481, %r920, %r12483, %r12462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12486, %r12462, %r12485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12489, %r12481, %r12486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12492, %r931, %r12483, %r12473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12497, %r12473, %r12496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12500, %r12492, %r12497;
	// end inline asm
	// begin inline asm
	mov.b32 %r12508, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12507, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r12505, %r920, %r12507, %r12508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12509, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12510, %r12508, %r12509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12513, %r12505, %r12510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12516, %r931, %r12507, %r12519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12520, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12521, %r12519, %r12520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12524, %r12516, %r12521;
	// end inline asm
	shr.u32 	%r12529, %r12507, 8;
	// begin inline asm
	lop3.b32 %r12527, %r920, %r12529, %r12508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12532, %r12508, %r12531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12535, %r12527, %r12532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12538, %r931, %r12529, %r12519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12543, %r12519, %r12542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12546, %r12538, %r12543;
	// end inline asm
	// begin inline asm
	mov.b32 %r12554, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12553, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r12551, %r920, %r12553, %r12554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12555, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12556, %r12554, %r12555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12559, %r12551, %r12556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12562, %r931, %r12553, %r12565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12566, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12567, %r12565, %r12566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12570, %r12562, %r12567;
	// end inline asm
	shr.u32 	%r12575, %r12553, 8;
	// begin inline asm
	lop3.b32 %r12573, %r920, %r12575, %r12554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12578, %r12554, %r12577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12581, %r12573, %r12578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12584, %r931, %r12575, %r12565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12589, %r12565, %r12588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12592, %r12584, %r12589;
	// end inline asm
	// begin inline asm
	mov.b32 %r12600, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12599, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r12597, %r920, %r12599, %r12600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12602, %r12600, %r12601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12605, %r12597, %r12602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12608, %r931, %r12599, %r12611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12612, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12613, %r12611, %r12612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12616, %r12608, %r12613;
	// end inline asm
	shr.u32 	%r12621, %r12599, 8;
	// begin inline asm
	lop3.b32 %r12619, %r920, %r12621, %r12600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12623, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12624, %r12600, %r12623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12627, %r12619, %r12624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12630, %r931, %r12621, %r12611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12634, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12635, %r12611, %r12634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12638, %r12630, %r12635;
	// end inline asm
	// begin inline asm
	mov.b32 %r12646, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12657, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12645, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r12643, %r920, %r12645, %r12646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12648, %r12646, %r12647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12651, %r12643, %r12648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12654, %r931, %r12645, %r12657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12658, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12659, %r12657, %r12658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12662, %r12654, %r12659;
	// end inline asm
	shr.u32 	%r12667, %r12645, 8;
	// begin inline asm
	lop3.b32 %r12665, %r920, %r12667, %r12646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12669, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12670, %r12646, %r12669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12673, %r12665, %r12670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12676, %r931, %r12667, %r12657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12680, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12681, %r12657, %r12680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12684, %r12676, %r12681;
	// end inline asm
	// begin inline asm
	mov.b32 %r12692, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12703, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12691, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r12689, %r920, %r12691, %r12692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12694, %r12692, %r12693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12697, %r12689, %r12694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12700, %r931, %r12691, %r12703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12704, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12705, %r12703, %r12704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12708, %r12700, %r12705;
	// end inline asm
	shr.u32 	%r12713, %r12691, 8;
	// begin inline asm
	lop3.b32 %r12711, %r920, %r12713, %r12692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12715, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12716, %r12692, %r12715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12719, %r12711, %r12716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12722, %r931, %r12713, %r12703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12726, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12727, %r12703, %r12726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12730, %r12722, %r12727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12808, %r394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12810, %r12808, %r12546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12813, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12815, %r12813, %r12559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12818, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12820, %r12818, %r12570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12823, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12825, %r12823, %r12581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12828, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12830, %r12828, %r12592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12833, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12835, %r12833, %r12605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12838, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12840, %r12838, %r12616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12843, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12845, %r12843, %r12627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12848, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12850, %r12848, %r12638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12853, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12855, %r12853, %r12651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12858, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12860, %r12858, %r12662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12863, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12865, %r12863, %r12673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12868, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12870, %r12868, %r12684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12873, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12875, %r12873, %r12697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12878, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12880, %r12878, %r12708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12883, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12885, %r12883, %r12719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12888, %r412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12890, %r12888, %r12730;
	// end inline asm
	// begin inline asm
	mov.b32 %r12898, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12895, %r920, %r921, %r12898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12899, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12900, %r12898, %r12899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12903, %r12895, %r12900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12906, %r931, %r921, %r12909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12910, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12911, %r12909, %r12910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12914, %r12906, %r12911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12917, %r920, %r943, %r12898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12922, %r12898, %r12921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12925, %r12917, %r12922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12928, %r931, %r943, %r12909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12933, %r12909, %r12932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12936, %r12928, %r12933;
	// end inline asm
	// begin inline asm
	mov.b32 %r12944, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12941, %r920, %r967, %r12944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12945, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12946, %r12944, %r12945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12949, %r12941, %r12946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12952, %r931, %r967, %r12955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12956, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12957, %r12955, %r12956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12960, %r12952, %r12957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12963, %r920, %r989, %r12944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12968, %r12944, %r12967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12971, %r12963, %r12968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12974, %r931, %r989, %r12955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12979, %r12955, %r12978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12982, %r12974, %r12979;
	// end inline asm
	// begin inline asm
	mov.b32 %r12990, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12987, %r920, %r1013, %r12990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12991, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12992, %r12990, %r12991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12995, %r12987, %r12992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12998, %r931, %r1013, %r13001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13002, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13003, %r13001, %r13002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13006, %r12998, %r13003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13009, %r920, %r1035, %r12990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13014, %r12990, %r13013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13017, %r13009, %r13014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13020, %r931, %r1035, %r13001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13025, %r13001, %r13024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13028, %r13020, %r13025;
	// end inline asm
	// begin inline asm
	mov.b32 %r13036, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13033, %r920, %r1059, %r13036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13037, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13038, %r13036, %r13037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13041, %r13033, %r13038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13044, %r931, %r1059, %r13047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13048, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13049, %r13047, %r13048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13052, %r13044, %r13049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13055, %r920, %r1081, %r13036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13060, %r13036, %r13059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13063, %r13055, %r13060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13066, %r931, %r1081, %r13047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13071, %r13047, %r13070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13074, %r13066, %r13071;
	// end inline asm
	// begin inline asm
	mov.b32 %r13082, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13079, %r920, %r1105, %r13082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13083, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13084, %r13082, %r13083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13087, %r13079, %r13084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13090, %r931, %r1105, %r13093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13094, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13095, %r13093, %r13094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13098, %r13090, %r13095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13101, %r920, %r1127, %r13082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13106, %r13082, %r13105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13109, %r13101, %r13106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13112, %r931, %r1127, %r13093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13117, %r13093, %r13116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13120, %r13112, %r13117;
	// end inline asm
	// begin inline asm
	mov.b32 %r13128, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13125, %r920, %r1151, %r13128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13129, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13130, %r13128, %r13129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13133, %r13125, %r13130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13136, %r931, %r1151, %r13139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13140, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13141, %r13139, %r13140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13144, %r13136, %r13141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13147, %r920, %r1173, %r13128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13151, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13152, %r13128, %r13151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13155, %r13147, %r13152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13158, %r931, %r1173, %r13139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13162, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13163, %r13139, %r13162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13166, %r13158, %r13163;
	// end inline asm
	// begin inline asm
	mov.b32 %r13174, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13185, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13171, %r920, %r1197, %r13174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13175, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13176, %r13174, %r13175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13179, %r13171, %r13176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13182, %r931, %r1197, %r13185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13186, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13187, %r13185, %r13186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13190, %r13182, %r13187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13193, %r920, %r1219, %r13174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13197, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13198, %r13174, %r13197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13201, %r13193, %r13198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13204, %r931, %r1219, %r13185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13208, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13209, %r13185, %r13208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13212, %r13204, %r13209;
	// end inline asm
	// begin inline asm
	mov.b32 %r13220, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13231, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13217, %r920, %r1243, %r13220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13221, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13222, %r13220, %r13221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13225, %r13217, %r13222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13228, %r931, %r1243, %r13231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13232, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13233, %r13231, %r13232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13236, %r13228, %r13233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13239, %r920, %r1265, %r13220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13243, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13244, %r13220, %r13243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13247, %r13239, %r13244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13250, %r931, %r1265, %r13231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13254, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13255, %r13231, %r13254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13258, %r13250, %r13255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13261, %r286, %r12903, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13265, %r286, %r12914, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13269, %r286, %r12925, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13273, %r286, %r12936, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13277, %r286, %r12949, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13281, %r286, %r12960, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13285, %r286, %r12971, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13289, %r286, %r12982, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13293, %r286, %r12995, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13297, %r286, %r13006, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13301, %r286, %r13017, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13305, %r286, %r13028, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13309, %r286, %r13041, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13313, %r286, %r13052, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13317, %r286, %r13063, %r12805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13321, %r286, %r13074, %r12810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13325, %r304, %r13087, %r12815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13329, %r304, %r13098, %r12820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13333, %r304, %r13109, %r12825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13337, %r304, %r13120, %r12830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13341, %r304, %r13133, %r12835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13345, %r304, %r13144, %r12840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13349, %r304, %r13155, %r12845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13353, %r304, %r13166, %r12850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13357, %r304, %r13179, %r12855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13361, %r304, %r13190, %r12860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13365, %r304, %r13201, %r12865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13369, %r304, %r13212, %r12870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13373, %r304, %r13225, %r12875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13377, %r304, %r13236, %r12880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13381, %r304, %r13247, %r12885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13385, %r304, %r13258, %r12890;
	// end inline asm
	// begin inline asm
	mov.b32 %r13394, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13391, %r920, %r4737, %r13394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13395, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13396, %r13394, %r13395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13399, %r13391, %r13396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13402, %r931, %r4737, %r13405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13406, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13407, %r13405, %r13406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13410, %r13402, %r13407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13413, %r920, %r4759, %r13394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13418, %r13394, %r13417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13421, %r13413, %r13418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13424, %r931, %r4759, %r13405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13429, %r13405, %r13428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13432, %r13424, %r13429;
	// end inline asm
	// begin inline asm
	mov.b32 %r13440, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13437, %r920, %r4783, %r13440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13441, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13442, %r13440, %r13441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13445, %r13437, %r13442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13448, %r931, %r4783, %r13451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13452, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13453, %r13451, %r13452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13456, %r13448, %r13453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13459, %r920, %r4805, %r13440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13464, %r13440, %r13463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13467, %r13459, %r13464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13470, %r931, %r4805, %r13451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13475, %r13451, %r13474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13478, %r13470, %r13475;
	// end inline asm
	// begin inline asm
	mov.b32 %r13486, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13483, %r920, %r4829, %r13486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13487, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13488, %r13486, %r13487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13491, %r13483, %r13488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13494, %r931, %r4829, %r13497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13498, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13499, %r13497, %r13498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13502, %r13494, %r13499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13505, %r920, %r4851, %r13486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13510, %r13486, %r13509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13513, %r13505, %r13510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13516, %r931, %r4851, %r13497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13521, %r13497, %r13520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13524, %r13516, %r13521;
	// end inline asm
	// begin inline asm
	mov.b32 %r13532, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13529, %r920, %r4875, %r13532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13533, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13534, %r13532, %r13533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13537, %r13529, %r13534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13540, %r931, %r4875, %r13543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13544, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13545, %r13543, %r13544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13548, %r13540, %r13545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13551, %r920, %r4897, %r13532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13556, %r13532, %r13555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13559, %r13551, %r13556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13562, %r931, %r4897, %r13543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13567, %r13543, %r13566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13570, %r13562, %r13567;
	// end inline asm
	// begin inline asm
	mov.b32 %r13578, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13575, %r920, %r4921, %r13578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13579, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13580, %r13578, %r13579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13583, %r13575, %r13580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13586, %r931, %r4921, %r13589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13590, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13591, %r13589, %r13590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13594, %r13586, %r13591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13597, %r920, %r4943, %r13578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13602, %r13578, %r13601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13605, %r13597, %r13602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13608, %r931, %r4943, %r13589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13613, %r13589, %r13612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13616, %r13608, %r13613;
	// end inline asm
	// begin inline asm
	mov.b32 %r13624, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13621, %r920, %r4967, %r13624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13625, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13626, %r13624, %r13625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13629, %r13621, %r13626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13632, %r931, %r4967, %r13635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13636, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13637, %r13635, %r13636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13640, %r13632, %r13637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13643, %r920, %r4989, %r13624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13647, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13648, %r13624, %r13647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13651, %r13643, %r13648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13654, %r931, %r4989, %r13635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13658, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13659, %r13635, %r13658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13662, %r13654, %r13659;
	// end inline asm
	// begin inline asm
	mov.b32 %r13670, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13681, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13667, %r920, %r5013, %r13670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13671, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13672, %r13670, %r13671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13675, %r13667, %r13672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13678, %r931, %r5013, %r13681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13682, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13683, %r13681, %r13682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13686, %r13678, %r13683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13689, %r920, %r5035, %r13670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13693, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13694, %r13670, %r13693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13697, %r13689, %r13694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13700, %r931, %r5035, %r13681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13704, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13705, %r13681, %r13704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13708, %r13700, %r13705;
	// end inline asm
	// begin inline asm
	mov.b32 %r13716, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13727, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13713, %r920, %r5059, %r13716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13717, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13718, %r13716, %r13717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13721, %r13713, %r13718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13724, %r931, %r5059, %r13727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13728, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13729, %r13727, %r13728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13732, %r13724, %r13729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13735, %r920, %r5081, %r13716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13739, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13740, %r13716, %r13739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13743, %r13735, %r13740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13746, %r931, %r5081, %r13727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13750, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13751, %r13727, %r13750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13754, %r13746, %r13751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13399, %r13261;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13410, %r13265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13421, %r13269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13432, %r13273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13445, %r13277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13456, %r13281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13467, %r13285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13478, %r13289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13491, %r13293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13502, %r13297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13513, %r13301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13524, %r13305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13537, %r13309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13548, %r13313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13559, %r13317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13570, %r13321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13853, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13855, %r13853, %r13583, %r13325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13859, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13861, %r13859, %r13594, %r13329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13865, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13867, %r13865, %r13605, %r13333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13871, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13873, %r13871, %r13616, %r13337;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13877, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13879, %r13877, %r13629, %r13341;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13883, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13885, %r13883, %r13640, %r13345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13889, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13891, %r13889, %r13651, %r13349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13895, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13897, %r13895, %r13662, %r13353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13901, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13903, %r13901, %r13675, %r13357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13907, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13909, %r13907, %r13686, %r13361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13913, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13915, %r13913, %r13697, %r13365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13919, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13921, %r13919, %r13708, %r13369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13925, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13927, %r13925, %r13721, %r13373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13931, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13933, %r13931, %r13732, %r13377;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13937, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13939, %r13937, %r13743, %r13381;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13943, %r340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13945, %r13943, %r13754, %r13385;
	// end inline asm
	// begin inline asm
	mov.b32 %r13954, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13951, %r920, %r8553, %r13954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13955, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13956, %r13954, %r13955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13959, %r13951, %r13956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13962, %r931, %r8553, %r13965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13966, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13967, %r13965, %r13966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13970, %r13962, %r13967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13973, %r920, %r8575, %r13954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13978, %r13954, %r13977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13981, %r13973, %r13978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13984, %r931, %r8575, %r13965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13989, %r13965, %r13988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13992, %r13984, %r13989;
	// end inline asm
	// begin inline asm
	mov.b32 %r14000, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13997, %r920, %r8599, %r14000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14001, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14002, %r14000, %r14001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14005, %r13997, %r14002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14008, %r931, %r8599, %r14011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14012, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14013, %r14011, %r14012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14016, %r14008, %r14013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14019, %r920, %r8621, %r14000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14024, %r14000, %r14023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14027, %r14019, %r14024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14030, %r931, %r8621, %r14011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14035, %r14011, %r14034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14038, %r14030, %r14035;
	// end inline asm
	// begin inline asm
	mov.b32 %r14046, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14043, %r920, %r8645, %r14046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14047, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14048, %r14046, %r14047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14051, %r14043, %r14048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14054, %r931, %r8645, %r14057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14058, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14059, %r14057, %r14058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14062, %r14054, %r14059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14065, %r920, %r8667, %r14046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14070, %r14046, %r14069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14073, %r14065, %r14070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14076, %r931, %r8667, %r14057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14081, %r14057, %r14080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14084, %r14076, %r14081;
	// end inline asm
	// begin inline asm
	mov.b32 %r14092, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14089, %r920, %r8691, %r14092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14093, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14094, %r14092, %r14093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14097, %r14089, %r14094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14100, %r931, %r8691, %r14103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14104, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14105, %r14103, %r14104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14108, %r14100, %r14105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14111, %r920, %r8713, %r14092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14116, %r14092, %r14115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14119, %r14111, %r14116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14122, %r931, %r8713, %r14103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14127, %r14103, %r14126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14130, %r14122, %r14127;
	// end inline asm
	// begin inline asm
	mov.b32 %r14138, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14135, %r920, %r8737, %r14138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14139, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14140, %r14138, %r14139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14143, %r14135, %r14140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14146, %r931, %r8737, %r14149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14150, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14151, %r14149, %r14150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14154, %r14146, %r14151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14157, %r920, %r8759, %r14138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14162, %r14138, %r14161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14165, %r14157, %r14162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14168, %r931, %r8759, %r14149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14173, %r14149, %r14172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14176, %r14168, %r14173;
	// end inline asm
	// begin inline asm
	mov.b32 %r14184, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14181, %r920, %r8783, %r14184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14185, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14186, %r14184, %r14185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14189, %r14181, %r14186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14192, %r931, %r8783, %r14195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14196, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14197, %r14195, %r14196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14200, %r14192, %r14197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14203, %r920, %r8805, %r14184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14207, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14208, %r14184, %r14207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14211, %r14203, %r14208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14214, %r931, %r8805, %r14195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14218, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14219, %r14195, %r14218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14222, %r14214, %r14219;
	// end inline asm
	// begin inline asm
	mov.b32 %r14230, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14241, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14227, %r920, %r8829, %r14230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14231, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14232, %r14230, %r14231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14235, %r14227, %r14232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14238, %r931, %r8829, %r14241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14242, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14243, %r14241, %r14242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14246, %r14238, %r14243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14249, %r920, %r8851, %r14230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14254, %r14230, %r14253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14257, %r14249, %r14254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14260, %r931, %r8851, %r14241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14264, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14265, %r14241, %r14264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14268, %r14260, %r14265;
	// end inline asm
	// begin inline asm
	mov.b32 %r14276, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14287, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14273, %r920, %r8875, %r14276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14277, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14278, %r14276, %r14277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14281, %r14273, %r14278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14284, %r931, %r8875, %r14287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14288, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14289, %r14287, %r14288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14292, %r14284, %r14289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14295, %r920, %r8897, %r14276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14299, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14300, %r14276, %r14299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14303, %r14295, %r14300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14306, %r931, %r8897, %r14287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14310, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14311, %r14287, %r14310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14314, %r14306, %r14311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r358, %r13959, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r358, %r13970, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r358, %r13981, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r358, %r13992, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r358, %r14005, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r358, %r14016, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r358, %r14027, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r358, %r14038, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r358, %r14051, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r358, %r14062, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r358, %r14073, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r358, %r14084, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r358, %r14097, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r358, %r14108, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r358, %r14119, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r358, %r14130, %r13849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r376, %r14143, %r13855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r376, %r14154, %r13861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r376, %r14165, %r13867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r376, %r14176, %r13873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r376, %r14189, %r13879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r376, %r14200, %r13885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r376, %r14211, %r13891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r376, %r14222, %r13897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r376, %r14235, %r13903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r376, %r14246, %r13909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14569, %r376, %r14257, %r13915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r376, %r14268, %r13921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r376, %r14281, %r13927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r376, %r14292, %r13933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14587, %r376, %r14303, %r13939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14584, %r376, %r14314, %r13945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r440, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r440, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r440, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r440, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r440, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r440, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r440, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14508, %r446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r14508, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r440, %r14515, %r14510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14517, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r14517, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r443, %r14524, %r14519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14526, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r14526, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r443, %r14533, %r14528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14535, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r14535, %r14539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r443, %r14542, %r14537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14544, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14546, %r14544, %r14548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r443, %r14551, %r14546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14553, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14555, %r14553, %r14557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r443, %r14560, %r14555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14562, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r14562, %r14566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r443, %r14569, %r14564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14571, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14573, %r14571, %r14575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14576, %r443, %r14578, %r14573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14580, %r449;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r14580, %r14584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r443, %r14587, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r446, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r440, %r14449, %r14589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14596, %r446, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r440, %r14458, %r14596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14603, %r446, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14606, %r440, %r14467, %r14603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14610, %r446, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14613, %r440, %r14476, %r14610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14617, %r446, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14620, %r440, %r14485, %r14617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14624, %r446, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14627, %r440, %r14494, %r14624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14631, %r446, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14634, %r440, %r14503, %r14631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14638, %r446, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14641, %r440, %r14512, %r14638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14645, %r449, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14648, %r443, %r14521, %r14645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14652, %r449, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14655, %r443, %r14530, %r14652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14659, %r449, %r14542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14662, %r443, %r14539, %r14659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14666, %r449, %r14551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14669, %r443, %r14548, %r14666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14673, %r449, %r14560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14676, %r443, %r14557, %r14673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14680, %r449, %r14569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14683, %r443, %r14566, %r14680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14687, %r449, %r14578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14690, %r443, %r14575, %r14687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14694, %r449, %r14587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14697, %r443, %r14584, %r14694;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r495, %r501, %r498, %r504}, {%r14450, %r14592}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r495, %r501, %r498, %r504}, {%r14459, %r14599}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r495, %r501, %r498, %r504}, {%r14468, %r14606}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r495, %r501, %r498, %r504}, {%r14477, %r14613}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r495, %r501, %r498, %r504}, {%r14486, %r14620}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r495, %r501, %r498, %r504}, {%r14495, %r14627}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r495, %r501, %r498, %r504}, {%r14504, %r14634}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14931, %r14928}, {%r495, %r501, %r498, %r504}, {%r14513, %r14641}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14940, %r14937}, {%r495, %r501, %r498, %r504}, {%r14522, %r14648}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14949, %r14946}, {%r495, %r501, %r498, %r504}, {%r14531, %r14655}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14958, %r14955}, {%r495, %r501, %r498, %r504}, {%r14540, %r14662}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14967, %r14964}, {%r495, %r501, %r498, %r504}, {%r14549, %r14669}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14976, %r14973}, {%r495, %r501, %r498, %r504}, {%r14558, %r14676}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14985, %r14982}, {%r495, %r501, %r498, %r504}, {%r14567, %r14683}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14994, %r14991}, {%r495, %r501, %r498, %r504}, {%r14576, %r14690}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15003, %r15000}, {%r495, %r501, %r498, %r504}, {%r14585, %r14697}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r545, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r545, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r545, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r545, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r545, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r545, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r545, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14924, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r14924, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r545, %r14931, %r14926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14933, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r14933, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r545, %r14940, %r14935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14942, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r14942, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r545, %r14949, %r14944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14951, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r14951, %r14955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r545, %r14958, %r14953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14960, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14962, %r14960, %r14964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14965, %r545, %r14967, %r14962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14969, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14971, %r14969, %r14973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14974, %r545, %r14976, %r14971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14978, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r14978, %r14982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r545, %r14985, %r14980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14987, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14989, %r14987, %r14991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14992, %r545, %r14994, %r14989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14996, %r548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r14996, %r15000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r545, %r15003, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r548, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r545, %r14865, %r15005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15012, %r548, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15015, %r545, %r14874, %r15012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15019, %r548, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15022, %r545, %r14883, %r15019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15026, %r548, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15029, %r545, %r14892, %r15026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15033, %r548, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15036, %r545, %r14901, %r15033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15040, %r548, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15043, %r545, %r14910, %r15040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15047, %r548, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15050, %r545, %r14919, %r15047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15054, %r548, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15057, %r545, %r14928, %r15054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15061, %r548, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15064, %r545, %r14937, %r15061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15068, %r548, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15071, %r545, %r14946, %r15068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15075, %r548, %r14958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15078, %r545, %r14955, %r15075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15082, %r548, %r14967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15085, %r545, %r14964, %r15082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15089, %r548, %r14976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15092, %r545, %r14973, %r15089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15096, %r548, %r14985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15099, %r545, %r14982, %r15096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15103, %r548, %r14994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15106, %r545, %r14991, %r15103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15110, %r548, %r15003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15113, %r545, %r15000, %r15110;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15406, %r15409}, {%r583, %r589, %r586, %r592}, {%r14866, %r15008}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15412, %r15415}, {%r583, %r589, %r586, %r592}, {%r14875, %r15015}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15418, %r15421}, {%r583, %r589, %r586, %r592}, {%r14884, %r15022}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15424, %r15427}, {%r583, %r589, %r586, %r592}, {%r14893, %r15029}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15430, %r15433}, {%r583, %r589, %r586, %r592}, {%r14902, %r15036}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15436, %r15439}, {%r583, %r589, %r586, %r592}, {%r14911, %r15043}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15442, %r15445}, {%r583, %r589, %r586, %r592}, {%r14920, %r15050}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15448, %r15451}, {%r583, %r589, %r586, %r592}, {%r14929, %r15057}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15407, %r15410}, {%r583, %r589, %r586, %r592}, {%r14938, %r15064}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15413, %r15416}, {%r583, %r589, %r586, %r592}, {%r14947, %r15071}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15419, %r15422}, {%r583, %r589, %r586, %r592}, {%r14956, %r15078}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15425, %r15428}, {%r583, %r589, %r586, %r592}, {%r14965, %r15085}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15431, %r15434}, {%r583, %r589, %r586, %r592}, {%r14974, %r15092}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15437, %r15440}, {%r583, %r589, %r586, %r592}, {%r14983, %r15099}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15443, %r15446}, {%r583, %r589, %r586, %r592}, {%r14992, %r15106}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15449, %r15452}, {%r583, %r589, %r586, %r592}, {%r15001, %r15113}, {%r3261, %r3261};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15408, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15411, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15414, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15417, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15420, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15423, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15426, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15429, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15432, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15435, %r15436, %r15437;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15438, %r15439, %r15440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15441, %r15442, %r15443;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15444, %r15445, %r15446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15447, %r15448, %r15449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15450, %r15451, %r15452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15456, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15459, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15462, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15465, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15468, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15471, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15474, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15477, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15480, %r15433, %r15434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15483, %r15436, %r15437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15486, %r15439, %r15440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15489, %r15442, %r15443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15492, %r15445, %r15446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15495, %r15448, %r15449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15498, %r15451, %r15452;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r215, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r215, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r215, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r215, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r215, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r215, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r215, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r215, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r215, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r215, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r215, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r215, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r215, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r215, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r215, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r215, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r216, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r216, %r15456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15555, %r216, %r15459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15558, %r216, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15561, %r216, %r15465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15564, %r216, %r15468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15567, %r216, %r15471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15570, %r216, %r15474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15573, %r216, %r15477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15576, %r216, %r15480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15579, %r216, %r15483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15582, %r216, %r15486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15585, %r216, %r15489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15588, %r216, %r15492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15591, %r216, %r15495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15594, %r216, %r15498;
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15599, %r15501, %r15597;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15602, %r15599, %r15598;
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15607, %r15504, %r15605;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15610, %r15607, %r15606;
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15615, %r15507, %r15613;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15618, %r15615, %r15614;
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15623, %r15510, %r15621;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15626, %r15623, %r15622;
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15631, %r15513, %r15629;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15634, %r15631, %r15630;
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15639, %r15516, %r15637;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15642, %r15639, %r15638;
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15647, %r15519, %r15645;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15650, %r15647, %r15646;
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15655, %r15522, %r15653;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15658, %r15655, %r15654;
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15663, %r15525, %r15661;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15666, %r15663, %r15662;
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15671, %r15528, %r15669;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15674, %r15671, %r15670;
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15679, %r15531, %r15677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15682, %r15679, %r15678;
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15687, %r15534, %r15685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15690, %r15687, %r15686;
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15695, %r15537, %r15693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15698, %r15695, %r15694;
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15703, %r15540, %r15701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15706, %r15703, %r15702;
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15711, %r15543, %r15709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15714, %r15711, %r15710;
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15719, %r15546, %r15717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15722, %r15719, %r15718;
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15727, %r15549, %r15725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15730, %r15727, %r15726;
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15735, %r15552, %r15733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15738, %r15735, %r15734;
	// end inline asm
	// begin inline asm
	mov.b32 %r15741, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15743, %r15555, %r15741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15746, %r15743, %r15742;
	// end inline asm
	// begin inline asm
	mov.b32 %r15749, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15751, %r15558, %r15749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15754, %r15751, %r15750;
	// end inline asm
	// begin inline asm
	mov.b32 %r15757, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15759, %r15561, %r15757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15762, %r15759, %r15758;
	// end inline asm
	// begin inline asm
	mov.b32 %r15765, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15767, %r15564, %r15765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15770, %r15767, %r15766;
	// end inline asm
	// begin inline asm
	mov.b32 %r15773, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15775, %r15567, %r15773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15778, %r15775, %r15774;
	// end inline asm
	// begin inline asm
	mov.b32 %r15781, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15783, %r15570, %r15781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15786, %r15783, %r15782;
	// end inline asm
	// begin inline asm
	mov.b32 %r15789, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15791, %r15573, %r15789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15794, %r15791, %r15790;
	// end inline asm
	// begin inline asm
	mov.b32 %r15797, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15799, %r15576, %r15797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15802, %r15799, %r15798;
	// end inline asm
	// begin inline asm
	mov.b32 %r15805, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15806, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15807, %r15579, %r15805;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15810, %r15807, %r15806;
	// end inline asm
	// begin inline asm
	mov.b32 %r15813, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15815, %r15582, %r15813;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15818, %r15815, %r15814;
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15823, %r15585, %r15821;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15826, %r15823, %r15822;
	// end inline asm
	// begin inline asm
	mov.b32 %r15829, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15830, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15831, %r15588, %r15829;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15834, %r15831, %r15830;
	// end inline asm
	// begin inline asm
	mov.b32 %r15837, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15838, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15839, %r15591, %r15837;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15842, %r15839, %r15838;
	// end inline asm
	// begin inline asm
	mov.b32 %r15845, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15846, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15847, %r15594, %r15845;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15850, %r15847, %r15846;
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15854, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15856, %r15854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15602, %r15855;
	// end inline asm
	// begin inline asm
	mov.b32 %r15861, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15856, %r15861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15865, %r15610, %r15862;
	// end inline asm
	// begin inline asm
	mov.b32 %r15868, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15856, %r15868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15872, %r15618, %r15869;
	// end inline asm
	// begin inline asm
	mov.b32 %r15875, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15856, %r15875;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15879, %r15626, %r15876;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15882, %r15858, %r15872, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15886, %r15865, %r15879, %r4437;
	// end inline asm
	shl.b32 	%r15893, %r15886, 4;
	// begin inline asm
	lop3.b32 %r15890, %r4443, %r15882, %r15893, 202;
	// end inline asm
	xor.b32  	%r16213, %r15890, -2004318072;
	// begin inline asm
	mov.b32 %r15897, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15895, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15897, %r15895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15634, %r15896;
	// end inline asm
	// begin inline asm
	mov.b32 %r15902, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15897, %r15902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15906, %r15642, %r15903;
	// end inline asm
	// begin inline asm
	mov.b32 %r15909, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15897, %r15909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15913, %r15650, %r15910;
	// end inline asm
	// begin inline asm
	mov.b32 %r15916, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15897, %r15916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15920, %r15658, %r15917;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15923, %r15899, %r15913, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15927, %r15906, %r15920, %r4437;
	// end inline asm
	shl.b32 	%r15934, %r15927, 4;
	// begin inline asm
	lop3.b32 %r15931, %r4443, %r15923, %r15934, 202;
	// end inline asm
	xor.b32  	%r16214, %r15931, -2004318072;
	// begin inline asm
	mov.b32 %r15938, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15936, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15938, %r15936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15666, %r15937;
	// end inline asm
	// begin inline asm
	mov.b32 %r15943, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15938, %r15943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15947, %r15674, %r15944;
	// end inline asm
	// begin inline asm
	mov.b32 %r15950, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15938, %r15950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15954, %r15682, %r15951;
	// end inline asm
	// begin inline asm
	mov.b32 %r15957, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15938, %r15957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15961, %r15690, %r15958;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15964, %r15940, %r15954, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15968, %r15947, %r15961, %r4437;
	// end inline asm
	shl.b32 	%r15975, %r15968, 4;
	// begin inline asm
	lop3.b32 %r15972, %r4443, %r15964, %r15975, 202;
	// end inline asm
	xor.b32  	%r16215, %r15972, -2004318072;
	// begin inline asm
	mov.b32 %r15979, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15977, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15979, %r15977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15698, %r15978;
	// end inline asm
	// begin inline asm
	mov.b32 %r15984, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15979, %r15984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15988, %r15706, %r15985;
	// end inline asm
	// begin inline asm
	mov.b32 %r15991, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15979, %r15991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15995, %r15714, %r15992;
	// end inline asm
	// begin inline asm
	mov.b32 %r15998, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15979, %r15998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16002, %r15722, %r15999;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16005, %r15981, %r15995, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16009, %r15988, %r16002, %r4437;
	// end inline asm
	shl.b32 	%r16016, %r16009, 4;
	// begin inline asm
	lop3.b32 %r16013, %r4443, %r16005, %r16016, 202;
	// end inline asm
	xor.b32  	%r16216, %r16013, -2004318072;
	// begin inline asm
	mov.b32 %r16020, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16018, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r16020, %r16018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r15730, %r16019;
	// end inline asm
	// begin inline asm
	mov.b32 %r16025, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r16020, %r16025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16029, %r15738, %r16026;
	// end inline asm
	// begin inline asm
	mov.b32 %r16032, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r16020, %r16032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16036, %r15746, %r16033;
	// end inline asm
	// begin inline asm
	mov.b32 %r16039, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r16020, %r16039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16043, %r15754, %r16040;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16046, %r16022, %r16036, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16050, %r16029, %r16043, %r4437;
	// end inline asm
	shl.b32 	%r16057, %r16050, 4;
	// begin inline asm
	lop3.b32 %r16054, %r4443, %r16046, %r16057, 202;
	// end inline asm
	xor.b32  	%r16217, %r16054, -2004318072;
	// begin inline asm
	mov.b32 %r16061, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16059, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16060, %r16061, %r16059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r15762, %r16060;
	// end inline asm
	// begin inline asm
	mov.b32 %r16066, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16067, %r16061, %r16066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16070, %r15770, %r16067;
	// end inline asm
	// begin inline asm
	mov.b32 %r16073, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16074, %r16061, %r16073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16077, %r15778, %r16074;
	// end inline asm
	// begin inline asm
	mov.b32 %r16080, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16081, %r16061, %r16080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16084, %r15786, %r16081;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16087, %r16063, %r16077, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16091, %r16070, %r16084, %r4437;
	// end inline asm
	shl.b32 	%r16098, %r16091, 4;
	// begin inline asm
	lop3.b32 %r16095, %r4443, %r16087, %r16098, 202;
	// end inline asm
	xor.b32  	%r16218, %r16095, -2004318072;
	// begin inline asm
	mov.b32 %r16102, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16100, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16101, %r16102, %r16100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16104, %r15794, %r16101;
	// end inline asm
	// begin inline asm
	mov.b32 %r16107, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16108, %r16102, %r16107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16111, %r15802, %r16108;
	// end inline asm
	// begin inline asm
	mov.b32 %r16114, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16115, %r16102, %r16114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16118, %r15810, %r16115;
	// end inline asm
	// begin inline asm
	mov.b32 %r16121, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16122, %r16102, %r16121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16125, %r15818, %r16122;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16128, %r16104, %r16118, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16132, %r16111, %r16125, %r4437;
	// end inline asm
	shl.b32 	%r16139, %r16132, 4;
	// begin inline asm
	lop3.b32 %r16136, %r4443, %r16128, %r16139, 202;
	// end inline asm
	xor.b32  	%r16219, %r16136, -2004318072;
	// begin inline asm
	mov.b32 %r16143, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16141, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16142, %r16143, %r16141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16145, %r15826, %r16142;
	// end inline asm
	// begin inline asm
	mov.b32 %r16148, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16149, %r16143, %r16148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16152, %r15834, %r16149;
	// end inline asm
	// begin inline asm
	mov.b32 %r16155, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16156, %r16143, %r16155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16159, %r15842, %r16156;
	// end inline asm
	// begin inline asm
	mov.b32 %r16162, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16163, %r16143, %r16162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16166, %r15850, %r16163;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16169, %r16145, %r16159, %r4437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16173, %r16152, %r16166, %r4437;
	// end inline asm
	shl.b32 	%r16180, %r16173, 4;
	// begin inline asm
	lop3.b32 %r16177, %r4443, %r16169, %r16180, 202;
	// end inline asm
	xor.b32  	%r16220, %r16177, -2004318072;
	st.shared.u32 	[%rd117], %r16213;
	st.shared.u32 	[%rd118], %r16214;
	st.shared.u32 	[%rd119], %r16215;
	st.shared.u32 	[%rd120], %r16216;
	st.shared.u32 	[%rd121], %r16217;
	st.shared.u32 	[%rd122], %r16218;
	st.shared.u32 	[%rd123], %r16219;
	st.shared.u32 	[%rd124], %r16220;
	add.s32 	%r16367, %r16367, -128;
	add.s64 	%rd173, %rd173, 16644;
	setp.eq.s32 	%p325, %r16367, 0;
	@%p325 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass26125
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16226, [%rd21];
	ld.shared.u32 	%r16227, [%rd22+128];
	ld.shared.u32 	%r16234, [%rd22+4];
	ld.shared.u32 	%r16235, [%rd22+132];
	ld.shared.u32 	%r16242, [%rd23];
	ld.shared.u32 	%r16243, [%rd24+128];
	ld.shared.u32 	%r16250, [%rd24+4];
	ld.shared.u32 	%r16251, [%rd24+132];
	ld.shared.u32 	%r16258, [%rd22+16644];
	ld.shared.u32 	%r16259, [%rd25];
	ld.shared.u32 	%r16266, [%rd22+16648];
	ld.shared.u32 	%r16267, [%rd22+16776];
	ld.shared.u32 	%r16274, [%rd24+16644];
	ld.shared.u32 	%r16275, [%rd26];
	ld.shared.u32 	%r16282, [%rd24+16648];
	ld.shared.u32 	%r16283, [%rd24+16776];
	// begin inline asm
	prmt.b32 %r16221, %r16226, %r16227, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16225, %r16226, %r16227, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16229, %r16234, %r16235, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16233, %r16234, %r16235, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16237, %r16242, %r16243, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16241, %r16242, %r16243, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16245, %r16250, %r16251, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16249, %r16250, %r16251, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16253, %r16258, %r16259, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16257, %r16258, %r16259, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16261, %r16266, %r16267, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16265, %r16266, %r16267, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16269, %r16274, %r16275, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16273, %r16274, %r16275, %r835;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16277, %r16282, %r16283, %r831;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16281, %r16282, %r16283, %r835;
	// end inline asm
	selp.b32 	%r16285, %r16225, %r16221, %p312;
	shfl.sync.bfly.b32	%r234, %r16285, 8, 31, -1;
	selp.b32 	%r16286, %r16233, %r16229, %p312;
	shfl.sync.bfly.b32	%r235, %r16286, 8, 31, -1;
	selp.b32 	%r16287, %r16241, %r16237, %p312;
	shfl.sync.bfly.b32	%r236, %r16287, 8, 31, -1;
	selp.b32 	%r16288, %r16249, %r16245, %p312;
	shfl.sync.bfly.b32	%r237, %r16288, 8, 31, -1;
	selp.b32 	%r16289, %r16257, %r16253, %p312;
	shfl.sync.bfly.b32	%r16290, %r16289, 8, 31, -1;
	selp.b32 	%r16291, %r16265, %r16261, %p312;
	shfl.sync.bfly.b32	%r16292, %r16291, 8, 31, -1;
	selp.b32 	%r16293, %r16273, %r16269, %p312;
	shfl.sync.bfly.b32	%r16294, %r16293, 8, 31, -1;
	selp.b32 	%r16295, %r16281, %r16277, %p312;
	shfl.sync.bfly.b32	%r16296, %r16295, 8, 31, -1;
	and.b32  	%r246, %r16342, 768;
	setp.lt.u32 	%p327, %r246, 384;
	shl.b32 	%r16321, %r16342, 12;
	@%p327 bra 	LBB0_186;
// %bb.185:                             // %L80585
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r16297, %r237, %r16249, %p312;
	selp.b32 	%r16298, %r16245, %r237, %p312;
	selp.b32 	%r16299, %r236, %r16241, %p312;
	selp.b32 	%r16300, %r16237, %r236, %p312;
	selp.b32 	%r16301, %r235, %r16233, %p312;
	selp.b32 	%r16302, %r16229, %r235, %p312;
	selp.b32 	%r16303, %r234, %r16225, %p312;
	selp.b32 	%r16304, %r16221, %r234, %p312;
	or.b32  	%r16306, %r125, %r16321;
	or.b32  	%r16307, %r131, %r16306;
	or.b32  	%r16308, %r132, %r16307;
	cvt.u64.u32 	%rd125, %r16308;
	add.s64 	%rd126, %rd125, %rd27;
	shr.u64 	%rd127, %rd126, 39;
	add.s64 	%rd128, %rd126, %rd127;
	shr.s64 	%rd129, %rd128, 25;
	and.b64  	%rd130, %rd128, -33554432;
	setp.ne.s64 	%p329, %rd130, %rd126;
	setp.lt.s64 	%p330, %rd126, 0;
	and.pred  	%p331, %p330, %p329;
	selp.u64 	%rd131, 1, 0, %p331;
	sub.s64 	%rd132, %rd131, %rd129;
	shl.b64 	%rd133, %rd132, 25;
	add.s64 	%rd134, %rd133, %rd126;
	shl.b64 	%rd135, %rd134, 2;
	add.s64 	%rd136, %rd3, %rd135;
	st.global.v4.u32 	[%rd136], {%r16304, %r16302, %r16303, %r16301};
	or.b32  	%r16309, %r16308, 16384;
	cvt.s64.s32 	%rd137, %r16309;
	add.s64 	%rd138, %rd137, %rd27;
	shr.u64 	%rd139, %rd138, 39;
	add.s64 	%rd140, %rd138, %rd139;
	shr.u64 	%rd141, %rd140, 25;
	shr.u64 	%rd142, %rd138, 63;
	sub.s64 	%rd143, %rd142, %rd141;
	shl.b64 	%rd144, %rd143, 25;
	add.s64 	%rd145, %rd144, %rd138;
	shl.b64 	%rd146, %rd145, 2;
	add.s64 	%rd147, %rd3, %rd146;
	st.global.v4.u32 	[%rd147], {%r16300, %r16298, %r16299, %r16297};
LBB0_186:                               // %pass25534
                                        //   in Loop: Header=BB0_182 Depth=1
	or.b32  	%r16310, %r246, 128;
	setp.lt.u32 	%p332, %r16310, 384;
	@%p332 bra 	LBB0_188;
// %bb.187:                             // %L81038
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r238, %r16253, %r16290, %p312;
	selp.b32 	%r239, %r16290, %r16257, %p312;
	selp.b32 	%r240, %r16261, %r16292, %p312;
	selp.b32 	%r241, %r16292, %r16265, %p312;
	selp.b32 	%r242, %r16269, %r16294, %p312;
	selp.b32 	%r243, %r16294, %r16273, %p312;
	selp.b32 	%r244, %r16277, %r16296, %p312;
	selp.b32 	%r245, %r16296, %r16281, %p312;
	or.b32  	%r16312, %r125, %r16321;
	or.b32  	%r16313, %r131, %r16312;
	or.b32  	%r16314, %r132, %r16313;
	or.b32  	%r16315, %r16314, 524288;
	cvt.s64.s32 	%rd148, %r16315;
	add.s64 	%rd149, %rd148, %rd27;
	shr.u64 	%rd150, %rd149, 39;
	add.s64 	%rd151, %rd149, %rd150;
	shr.s64 	%rd152, %rd151, 25;
	and.b64  	%rd153, %rd151, -33554432;
	setp.ne.s64 	%p333, %rd153, %rd149;
	setp.lt.s64 	%p334, %rd149, 0;
	and.pred  	%p335, %p334, %p333;
	selp.u64 	%rd154, 1, 0, %p335;
	sub.s64 	%rd155, %rd154, %rd152;
	shl.b64 	%rd156, %rd155, 25;
	add.s64 	%rd157, %rd156, %rd149;
	shl.b64 	%rd158, %rd157, 2;
	add.s64 	%rd159, %rd3, %rd158;
	st.global.v4.u32 	[%rd159], {%r238, %r240, %r239, %r241};
	or.b32  	%r16316, %r16314, 540672;
	cvt.s64.s32 	%rd160, %r16316;
	add.s64 	%rd161, %rd160, %rd27;
	shr.u64 	%rd162, %rd161, 39;
	add.s64 	%rd163, %rd161, %rd162;
	shr.u64 	%rd164, %rd163, 25;
	shr.u64 	%rd165, %rd161, 63;
	sub.s64 	%rd166, %rd165, %rd164;
	shl.b64 	%rd167, %rd166, 25;
	add.s64 	%rd168, %rd167, %rd161;
	shl.b64 	%rd169, %rd168, 2;
	add.s64 	%rd170, %rd3, %rd169;
	st.global.v4.u32 	[%rd170], {%r242, %r244, %r243, %r245};
	bra.uni 	LBB0_188;
LBB0_189:                               // %L81496
	st.global.u32 	[%rd4], %r16320;
	ret;
LBB0_7:                                 // %L291
	mov.u32 	%r16319, 2;
	st.global.u32 	[%rd4], %r16319;
	mov.u64 	%rd171, exception5788;
	cvta.global.u64 	%rd172, %rd171;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd172;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r247;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L9
	mov.u64 	%rd67, exception1;
	cvta.global.u64 	%rd68, %rd67;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd68;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r247;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
