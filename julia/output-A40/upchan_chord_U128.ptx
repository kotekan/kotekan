// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<341>;
	.reg .b16 	%rs<2396>;
	.reg .b32 	%r<16415>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<179>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r264, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r265, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r265, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd25, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r266, %r4, 9;
	or.b32  	%r267, %r3, %r1;
	or.b32  	%r268, %r267, %r266;
	mul.wide.u32 	%rd47, %r268, 4;
	add.s64 	%rd4, %rd41, %rd47;
	mov.u32 	%r269, 1;
	st.global.u32 	[%rd4], %r269;
	ld.global.u32 	%r5, [%rd25];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd29];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd33, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd33];
	sub.s32 	%r270, %r6, %r5;
	and.b32  	%r271, %r270, 255;
	setp.ne.s32 	%p6, %r271, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd37];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r272, %r8, %r7;
	and.b32  	%r273, %r272, 1;
	setp.eq.b32 	%p12, %r273, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass170
	bfe.u32 	%r233, %r1, 1, 1;
	and.b32  	%r234, %r1, 1;
	bfe.u32 	%r236, %r1, 2, 1;
	shr.u32 	%r237, %r1, 4;
	shl.b32 	%r281, %r237, 2;
	shl.b32 	%r282, %r236, 3;
	shl.b32 	%r283, %r234, 4;
	shl.b32 	%r284, %r233, 5;
	or.b32  	%r285, %r283, %r284;
	or.b32  	%r286, %r282, %r285;
	or.b32  	%r287, %r281, %r286;
	bfe.u32 	%r239, %r1, 3, 1;
	shl.b32 	%r288, %r239, 1;
	or.b32  	%r240, %r288, %r287;
	or.b32  	%r241, %r240, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r240;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L735
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L738
	cvt.rn.f32.s32 	%f293, %r241;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L755
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L758
	or.b32  	%r306, %r240, 1;
	or.b32  	%r10, %r240, 65;
	cvt.rn.f32.s32 	%f328, %r306;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L837
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L840
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L857
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L860
	or.b32  	%r324, %r240, 128;
	or.b32  	%r12, %r240, 192;
	cvt.rn.f32.s32 	%f397, %r324;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L939
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L942
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L959
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L962
	or.b32  	%r342, %r240, 129;
	or.b32  	%r14, %r240, 193;
	cvt.rn.f32.s32 	%f466, %r342;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1041
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1044
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1061
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1064
	or.b32  	%r360, %r240, 256;
	or.b32  	%r16, %r240, 320;
	cvt.rn.f32.s32 	%f535, %r360;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1143
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1146
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1163
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1166
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r378, %r240, 257;
	or.b32  	%r18, %r240, 321;
	cvt.rn.f32.s32 	%f604, %r378;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1245
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1248
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1265
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1268
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r396, %r240, 384;
	or.b32  	%r20, %r240, 448;
	cvt.rn.f32.s32 	%f673, %r396;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1347
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1350
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1367
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1370
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r414, %r240, 385;
	or.b32  	%r22, %r240, 449;
	cvt.rn.f32.s32 	%f742, %r414;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1449
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1452
	mov.b32 	%r289, %f266;
	mov.b32 	%r296, %f300;
	mov.b32 	%r307, %f335;
	mov.b32 	%r314, %f369;
	mov.b32 	%r325, %f404;
	mov.b32 	%r332, %f438;
	mov.b32 	%r343, %f473;
	mov.b32 	%r350, %f507;
	mov.b32 	%r361, %f542;
	mov.b32 	%r368, %f576;
	mov.b32 	%r379, %f611;
	mov.b32 	%r386, %f645;
	mov.b32 	%r397, %f680;
	mov.b32 	%r404, %f714;
	mov.b32 	%r415, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r422, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1469
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1472
	and.b32  	%r290, %r289, -2147483648;
	and.b32  	%r297, %r296, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r315, %r314, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r351, %r350, -2147483648;
	and.b32  	%r362, %r361, -2147483648;
	and.b32  	%r369, %r368, -2147483648;
	and.b32  	%r380, %r379, -2147483648;
	and.b32  	%r387, %r386, -2147483648;
	and.b32  	%r398, %r397, -2147483648;
	and.b32  	%r405, %r404, -2147483648;
	and.b32  	%r416, %r415, -2147483648;
	and.b32  	%r423, %r422, -2147483648;
	mul.lo.s32 	%r24, %r240, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r432, %r26, 8388607;
	or.b32  	%r16345, %r432, 1065353216;
	mov.b32 	%f1353, %r16345;
	add.s32 	%r433, %r26, -1073741824;
	and.b32  	%r16346, %r433, -8388608;
	setp.eq.s32 	%p118, %r16346, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r434, %r16346, 192937984;
	add.s32 	%r435, %r16345, %r434;
	mov.b32 	%f822, %r435;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16346, %r16346, %r434;
	mov.b32 	%r16345, %f1353;
	setp.ne.s32 	%p119, %r16346, 0;
	setp.ne.s32 	%p120, %r16345, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r291, %r290, 1056964608;
	or.b32  	%r298, %r297, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r316, %r315, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r352, %r351, 1056964608;
	or.b32  	%r363, %r362, 1056964608;
	or.b32  	%r370, %r369, 1056964608;
	or.b32  	%r381, %r380, 1056964608;
	or.b32  	%r388, %r387, 1056964608;
	or.b32  	%r399, %r398, 1056964608;
	or.b32  	%r406, %r405, 1056964608;
	or.b32  	%r417, %r416, 1056964608;
	or.b32  	%r424, %r423, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r436, %f71;
	and.b32  	%r437, %r436, -2147483648;
	mov.b32 	%r438, %f1354;
	or.b32  	%r439, %r437, %r438;
	mov.b32 	%f1354, %r439;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r291;
	mov.b32 	%f301, %r298;
	mov.b32 	%f336, %r309;
	mov.b32 	%f370, %r316;
	mov.b32 	%f405, %r327;
	mov.b32 	%f439, %r334;
	mov.b32 	%f474, %r345;
	mov.b32 	%f508, %r352;
	mov.b32 	%f543, %r363;
	mov.b32 	%f577, %r370;
	mov.b32 	%f612, %r381;
	mov.b32 	%f646, %r388;
	mov.b32 	%f681, %r399;
	mov.b32 	%f715, %r406;
	mov.b32 	%f750, %r417;
	mov.b32 	%f784, %r424;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r440, %f832;
	and.b32  	%r441, %r440, -2147483648;
	or.b32  	%r442, %r441, 1056964608;
	mov.b32 	%f833, %r442;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r448, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r448;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r449, %r34, 8388607;
	or.b32  	%r16347, %r449, 1065353216;
	mov.b32 	%f1357, %r16347;
	add.s32 	%r450, %r34, -1073741824;
	and.b32  	%r16348, %r450, -8388608;
	setp.eq.s32 	%p138, %r16348, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r451, %r16348, 192937984;
	add.s32 	%r452, %r16347, %r451;
	mov.b32 	%f874, %r452;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16348, %r16348, %r451;
	mov.b32 	%r16347, %f1357;
	setp.ne.s32 	%p139, %r16348, 0;
	setp.ne.s32 	%p140, %r16347, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r232, %r1, 1;
	shr.u32 	%r238, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r453, %f90;
	and.b32  	%r454, %r453, -2147483648;
	mov.b32 	%r455, %f1358;
	or.b32  	%r456, %r454, %r455;
	mov.b32 	%f1358, %r456;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r469, %f884;
	and.b32  	%r470, %r469, -2147483648;
	or.b32  	%r471, %r470, 1056964608;
	mov.b32 	%f885, %r471;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r477, %r238, 2;
	or.b32  	%r478, %r236, %r477;
	and.b32  	%r479, %r232, 4;
	or.b32  	%r45, %r478, %r479;
	and.b32  	%r480, %r1, 3;
	mul.lo.s32 	%r481, %r480, %r45;
	shl.b32 	%r482, %r481, 1;
	neg.s32 	%r483, %r482;
	cvt.rn.f32.s32 	%f916, %r483;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r484, %r47, 8388607;
	or.b32  	%r16349, %r484, 1065353216;
	mov.b32 	%f1361, %r16349;
	add.s32 	%r485, %r47, -1073741824;
	and.b32  	%r16350, %r485, -8388608;
	setp.eq.s32 	%p158, %r16350, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r486, %r16350, 192937984;
	add.s32 	%r487, %r16349, %r486;
	mov.b32 	%f928, %r487;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16350, %r16350, %r486;
	mov.b32 	%r16349, %f1361;
	setp.ne.s32 	%p159, %r16350, 0;
	setp.ne.s32 	%p160, %r16349, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r225, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r488, %f107;
	and.b32  	%r489, %r488, -2147483648;
	mov.b32 	%r490, %f1362;
	or.b32  	%r491, %r489, %r490;
	mov.b32 	%f1362, %r491;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r492, %f938;
	and.b32  	%r493, %r492, -2147483648;
	or.b32  	%r494, %r493, 1056964608;
	mov.b32 	%f939, %r494;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r500, %r225, 6;
	mov.u32 	%r501, -8;
	sub.s32 	%r502, %r501, %r500;
	mul.lo.s32 	%r503, %r45, %r502;
	cvt.rn.f32.s32 	%f968, %r503;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r504, %r55, 8388607;
	or.b32  	%r16351, %r504, 1065353216;
	mov.b32 	%f1365, %r16351;
	add.s32 	%r505, %r55, -1073741824;
	and.b32  	%r16352, %r505, -8388608;
	setp.eq.s32 	%p178, %r16352, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r506, %r16352, 192937984;
	add.s32 	%r507, %r16351, %r506;
	mov.b32 	%f980, %r507;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16352, %r16352, %r506;
	mov.b32 	%r16351, %f1365;
	setp.ne.s32 	%p179, %r16352, 0;
	setp.ne.s32 	%p180, %r16351, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r508, %f126;
	and.b32  	%r509, %r508, -2147483648;
	mov.b32 	%r510, %f1366;
	or.b32  	%r511, %r509, %r510;
	mov.b32 	%f1366, %r511;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	shl.b32 	%r224, %r1, 2;
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r524, %f990;
	and.b32  	%r525, %r524, -2147483648;
	or.b32  	%r526, %r525, 1056964608;
	mov.b32 	%f991, %r526;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r532, %r234, 2147483646;
	shl.b32 	%r533, %r233, 2;
	sub.s32 	%r534, %r532, %r533;
	mul.lo.s32 	%r535, %r534, %r45;
	shl.b32 	%r66, %r535, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r536, %r68, 8388607;
	or.b32  	%r16353, %r536, 1065353216;
	mov.b32 	%f1369, %r16353;
	add.s32 	%r537, %r68, -1073741824;
	and.b32  	%r16354, %r537, -8388608;
	setp.eq.s32 	%p198, %r16354, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r538, %r16354, 192937984;
	add.s32 	%r539, %r16353, %r538;
	mov.b32 	%f1033, %r539;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16354, %r16354, %r538;
	mov.b32 	%r16353, %f1369;
	setp.ne.s32 	%p199, %r16354, 0;
	setp.ne.s32 	%p200, %r16353, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	and.b32  	%r275, %r1, 18;
	and.b32  	%r276, %r224, 36;
	cvt.rzi.s32.f32 	%r292, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r299, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r317, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r328, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r335, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r346, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r353, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r364, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r371, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r382, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r389, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r400, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r407, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r418, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r425, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r443, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r472, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r495, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r527, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r540, %f144;
	and.b32  	%r541, %r540, -2147483648;
	mov.b32 	%r542, %f1370;
	or.b32  	%r543, %r541, %r542;
	mov.b32 	%f1370, %r543;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	and.b32  	%r226, %r225, 8;
	shl.b32 	%r274, %r4, 4;
	or.b32  	%r277, %r275, %r276;
	add.s32 	%r293, %r292, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r300, %r299, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r311, %r310, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r318, %r317, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r329, %r328, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r336, %r335, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r347, %r346, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r354, %r353, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r372, %r371, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r383, %r382, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r390, %r389, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r401, %r400, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r408, %r407, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r419, %r418, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r426, %r425, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r444, %r443, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r473, %r472, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r496, %r495, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r528, %r527, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r544, %f1043;
	and.b32  	%r545, %r544, -2147483648;
	or.b32  	%r546, %r545, 1056964608;
	mov.b32 	%f1044, %r546;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r547, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r552, %r45, 4;
	sub.s32 	%r553, %r66, %r552;
	cvt.rn.f32.s32 	%f163, %r553;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r554, %r76, 8388607;
	or.b32  	%r16355, %r554, 1065353216;
	mov.b32 	%f1373, %r16355;
	add.s32 	%r555, %r76, -1073741824;
	and.b32  	%r16356, %r555, -8388608;
	setp.eq.s32 	%p218, %r16356, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r556, %r16356, 192937984;
	add.s32 	%r557, %r16355, %r556;
	mov.b32 	%f1084, %r557;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16356, %r16356, %r556;
	mov.b32 	%r16355, %f1373;
	setp.ne.s32 	%p219, %r16356, 0;
	setp.ne.s32 	%p220, %r16355, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	and.b32  	%r228, %r274, 1920;
	or.b32  	%r229, %r277, %r226;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r301, %r300, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r319, %r318, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r330, %r329, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r355, %r354, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r373, %r372, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r391, %r390, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r402, %r401, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r409, %r408, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r420, %r419, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r427, %r426, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r444, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r473, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r496, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r528, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r548, %r547, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r558, %f164;
	and.b32  	%r559, %r558, -2147483648;
	mov.b32 	%r560, %f1374;
	or.b32  	%r561, %r559, %r560;
	mov.b32 	%f1374, %r561;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	or.b32  	%r278, %r229, %r228;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r294, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r301, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r312, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r319, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r330, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r337, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r348, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r355, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r366, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r373, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r384, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r391, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r402, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r409, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r420, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r427, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r445, %r443, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r474, %r472, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r497, %r495, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r529, %r527, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r548, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r568, %f1094;
	and.b32  	%r569, %r568, -2147483648;
	or.b32  	%r570, %r569, 1056964608;
	mov.b32 	%f1095, %r570;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r571, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r572, %r571, 1;
	setp.eq.b32 	%p226, %r572, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r576, %r86, 8388607;
	or.b32  	%r16357, %r576, 1065353216;
	mov.b32 	%f1377, %r16357;
	add.s32 	%r577, %r86, -1073741824;
	and.b32  	%r16358, %r577, -8388608;
	setp.eq.s32 	%p238, %r16358, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r578, %r16358, 192937984;
	add.s32 	%r579, %r16357, %r578;
	mov.b32 	%f1137, %r579;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16358, %r16358, %r578;
	mov.b32 	%r16357, %f1377;
	setp.ne.s32 	%p239, %r16358, 0;
	setp.ne.s32 	%p240, %r16357, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	cvt.u16.u32 	%rs2, %r278;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r295, %r293, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r302, %r300, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r320, %r318, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r331, %r329, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r338, %r336, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r356, %r354, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r374, %r372, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r385, %r383, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r392, %r390, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r403, %r401, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r410, %r408, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r421, %r419, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r428, %r426, 2;
	setp.eq.s32 	%p127, %r445, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r446, %r443, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r474, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r475, %r472, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r497, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r498, %r495, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r529, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r530, %r527, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r549, %r547, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r573, %r571, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r580, %f181;
	and.b32  	%r581, %r580, -2147483648;
	mov.b32 	%r582, %f1378;
	or.b32  	%r583, %r581, %r582;
	mov.b32 	%f1378, %r583;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	shr.u16 	%rs3, %rs2, 1;
	setp.eq.s32 	%p19, %r295, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r302, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r313, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r320, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r331, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r338, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r349, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r356, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r367, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r374, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r385, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r392, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r403, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r410, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r421, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r428, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r447, %r446, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r476, %r475, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r499, %r498, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r531, %r530, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r549, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r550, %r547, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r573, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r574, %r571, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r584, %f1147;
	and.b32  	%r585, %r584, -2147483648;
	or.b32  	%r586, %r585, 1056964608;
	mov.b32 	%f1148, %r586;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r587, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r588, %r587, 1;
	setp.eq.b32 	%p246, %r588, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r589, %r587, 2;
	setp.eq.s32 	%p247, %r589, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r590, %r587, 1;
	and.b32  	%r591, %r590, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r592, %r94, 8388607;
	or.b32  	%r16359, %r592, 1065353216;
	mov.b32 	%f1381, %r16359;
	add.s32 	%r593, %r94, -1073741824;
	and.b32  	%r16360, %r593, -8388608;
	setp.eq.s32 	%p258, %r16360, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16360, 192937984;
	add.s32 	%r595, %r16359, %r594;
	mov.b32 	%f1188, %r595;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16360, %r16360, %r594;
	mov.b32 	%r16359, %f1381;
	setp.ne.s32 	%p259, %r16360, 0;
	setp.ne.s32 	%p260, %r16359, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	or.b16  	%rs1, %rs3, 32;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r447, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r476, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r499, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r531, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r551, %r550, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r575, %r574, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r591, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r227, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r596, %f200;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1382;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1382, %r599;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	and.b16  	%rs4, %rs1, 1023;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r551, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r575, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r612, %f1198;
	and.b32  	%r613, %r612, -2147483648;
	or.b32  	%r614, %r613, 1056964608;
	mov.b32 	%f1199, %r614;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r615, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r616, %r615, 1;
	setp.eq.b32 	%p266, %r616, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r617, %r615, 2;
	setp.eq.s32 	%p267, %r617, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r618, %r615, 1;
	and.b32  	%r619, %r618, 2;
	setp.eq.s32 	%p268, %r619, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r620, %r236, 2147483640;
	cvt.u16.u32 	%rs5, %r1;
	shr.u16 	%rs6, %rs5, 8;
	shl.b16 	%rs7, %rs5, 8;
	or.b16  	%rs8, %rs7, %rs6;
	shl.b16 	%rs9, %rs8, 4;
	shr.u16 	%rs10, %rs8, 4;
	and.b16  	%rs11, %rs10, 3840;
	or.b16  	%rs12, %rs11, %rs9;
	and.b16  	%rs13, %rs12, 13107;
	shl.b16 	%rs14, %rs13, 2;
	shr.u16 	%rs15, %rs12, 2;
	and.b16  	%rs16, %rs15, 13107;
	or.b16  	%rs17, %rs16, %rs14;
	and.b16  	%rs18, %rs17, 20480;
	shl.b16 	%rs19, %rs18, 1;
	shr.u16 	%rs20, %rs17, 1;
	and.b16  	%rs21, %rs20, 16384;
	or.b16  	%rs22, %rs21, %rs19;
	shr.u16 	%rs23, %rs22, 13;
	sub.s32 	%r621, %r620, %r227;
	mad.lo.s32 	%r622, %r239, 2147483616, %r621;
	or.b16  	%rs24, %rs23, 1;
	cvt.u32.u16 	%r623, %rs24;
	and.b16  	%rs25, %rs23, 6;
	cvt.u32.u16 	%r624, %rs25;
	sub.s32 	%r625, %r622, %r624;
	shl.b32 	%r626, %r625, 1;
	cvt.rn.f32.s32 	%f1230, %r626;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r627, %r107, 8388607;
	or.b32  	%r16361, %r627, 1065353216;
	mov.b32 	%f1385, %r16361;
	add.s32 	%r628, %r107, -1073741824;
	and.b32  	%r16362, %r628, -8388608;
	setp.eq.s32 	%p278, %r16362, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r629, %r16362, 192937984;
	add.s32 	%r630, %r16361, %r629;
	mov.b32 	%f1242, %r630;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16362, %r16362, %r629;
	mov.b32 	%r16361, %f1385;
	setp.ne.s32 	%p279, %r16362, 0;
	setp.ne.s32 	%p280, %r16361, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r279, %r278, 1;
	cvt.u32.u16 	%r280, %rs4;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r622, %r623;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r631, %f217;
	and.b32  	%r632, %r631, -2147483648;
	mov.b32 	%r633, %f1386;
	or.b32  	%r634, %r632, %r633;
	mov.b32 	%f1386, %r634;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd48, %r279, 4;
	mul.wide.u32 	%rd50, %r280, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r459, %f915;
	mov.b32 	%r458, %f89;
	mov.b32 	%r465, %f912;
	mov.b32 	%r464, %f88;
	mov.b32 	%r514, %f1021;
	mov.b32 	%r513, %f125;
	mov.b32 	%r520, %f1018;
	mov.b32 	%r519, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r602, %f1229;
	mov.b32 	%r601, %f199;
	mov.b32 	%r608, %f1226;
	mov.b32 	%r607, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r635, %f1252;
	and.b32  	%r636, %r635, -2147483648;
	or.b32  	%r637, %r636, 1056964608;
	mov.b32 	%f1253, %r637;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r638, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r639, %r638, 1;
	setp.eq.b32 	%p286, %r639, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r640, %r638, 2;
	setp.eq.s32 	%p287, %r640, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r641, %r638, 1;
	and.b32  	%r642, %r641, 2;
	setp.eq.s32 	%p288, %r642, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r643, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r643;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r644, %r115, 8388607;
	or.b32  	%r16363, %r644, 1065353216;
	mov.b32 	%f1389, %r16363;
	add.s32 	%r645, %r115, -1073741824;
	and.b32  	%r16364, %r645, -8388608;
	setp.eq.s32 	%p298, %r16364, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r646, %r16364, 192937984;
	add.s32 	%r647, %r16363, %r646;
	mov.b32 	%f1294, %r647;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16364, %r16364, %r646;
	mov.b32 	%r16363, %f1389;
	setp.ne.s32 	%p299, %r16364, 0;
	setp.ne.s32 	%p300, %r16363, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd49, %rd1, %rd48;
	add.s64 	%rd51, %rd1, %rd50;
	shr.u32 	%r235, %r1, 2;
	mov.b32 	%r305, %f327;
	mov.b32 	%r304, %f3;
	mov.b32 	%r323, %f396;
	mov.b32 	%r322, %f12;
	mov.b32 	%r341, %f465;
	mov.b32 	%r340, %f21;
	mov.b32 	%r359, %f534;
	mov.b32 	%r358, %f30;
	mov.b32 	%r377, %f603;
	mov.b32 	%r376, %f39;
	mov.b32 	%r395, %f672;
	mov.b32 	%r394, %f48;
	mov.b32 	%r413, %f741;
	mov.b32 	%r412, %f57;
	mov.b32 	%r431, %f809;
	mov.b32 	%r430, %f66;
	xor.b32  	%r517, %r520, -2147483648;
	xor.b32  	%r516, %r519, -2147483648;
	mov.b32 	%r564, %f1125;
	mov.b32 	%r563, %f162;
	mov.b32 	%r567, %f1122;
	mov.b32 	%r566, %f161;
	xor.b32  	%r605, %r608, -2147483648;
	xor.b32  	%r604, %r607, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r648, %f236;
	and.b32  	%r649, %r648, -2147483648;
	mov.b32 	%r650, %f1390;
	or.b32  	%r651, %r649, %r650;
	mov.b32 	%f1390, %r651;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r230, [%rd49];
	ld.global.u32 	%r231, [%rd51];
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r339, %r341, %r340;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r357, %r359, %r358;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r375, %r377, %r376;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r411, %r413, %r412;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r431, %r430;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r457, %r459, %r458;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r460, %r459, %r458;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r463, %r465, %r464;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r466, %r465, %r464;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r512, %r514, %r513;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r515, %r517, %r516;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r518, %r520, %r519;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r521, %r514, %r513;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r562, %r564, %r563;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r565, %r567, %r566;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r600, %r602, %r601;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r603, %r605, %r604;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r606, %r608, %r607;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r609, %r602, %r601;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r659, %f1304;
	and.b32  	%r660, %r659, -2147483648;
	or.b32  	%r661, %r660, 1056964608;
	mov.b32 	%f1305, %r661;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r662, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r663, %r662, 1;
	setp.eq.b32 	%p306, %r663, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r664, %r662, 2;
	setp.eq.s32 	%p307, %r664, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r665, %r662, 1;
	and.b32  	%r666, %r665, 2;
	setp.eq.s32 	%p308, %r666, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r654, %f1335;
	mov.b32 	%r653, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r652, %r654, %r653;
	// end inline asm
	mov.b32 	%r657, %f1332;
	mov.b32 	%r656, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r655, %r657, %r656;
	// end inline asm
	shl.b32 	%r667, %r5, 12;
	and.b32  	%r668, %r224, 28;
	shl.b32 	%r669, %r4, 5;
	shl.b32 	%r670, %r1, 3;
	and.b32  	%r671, %r670, 64;
	or.b32  	%r672, %r671, %r2;
	and.b32  	%r673, %r225, 32;
	or.b32  	%r124, %r672, %r673;
	and.b32  	%r674, %r669, 224;
	or.b32  	%r675, %r668, %r674;
	or.b32  	%r125, %r667, %r675;
	bfe.s32 	%r676, %r1, 3, 1;
	and.b32  	%r126, %r1, 8;
	shl.b32 	%r677, %r1, 4;
	or.b32  	%r678, %r126, %r677;
	shr.u32 	%r679, %r678, 2;
	and.b32  	%r680, %r679, 30;
	and.b32  	%r681, %r677, 48;
	or.b32  	%r127, %r226, %r681;
	and.b32  	%r128, %r235, 6;
	and.b32  	%r682, %r3, 32;
	shr.u32 	%r683, %r2, 1;
	or.b32  	%r684, %r682, %r683;
	or.b32  	%r685, %r684, 8;
	or.b32  	%r686, %r684, 16;
	or.b32  	%r687, %r684, 24;
	shr.u32 	%r688, %r229, 1;
	mul.lo.s32 	%r689, %r688, 65;
	add.s32 	%r129, %r689, %r684;
	add.s32 	%r130, %r689, %r685;
	add.s32 	%r131, %r689, %r686;
	add.s32 	%r132, %r689, %r687;
	and.b16  	%rs26, %rs1, 63;
	mul.lo.s16 	%rs27, %rs26, 65;
	cvt.u32.u16 	%r690, %rs27;
	add.s32 	%r133, %r684, %r690;
	add.s32 	%r134, %r685, %r690;
	add.s32 	%r135, %r686, %r690;
	add.s32 	%r136, %r687, %r690;
	shl.b32 	%r691, %r2, 1;
	or.b32  	%r692, %r237, %r691;
	mul.lo.s32 	%r693, %r692, 65;
	add.s32 	%r694, %r680, %r693;
	mul.wide.u32 	%rd52, %r694, 4;
	mov.u64 	%rd53, shmem;
	add.s64 	%rd5, %rd53, %rd52;
	cvt.u64.u32 	%rd54, %r680;
	cvt.u64.u32 	%rd55, %r693;
	add.s64 	%rd56, %rd55, %rd54;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd6, %rd53, %rd57;
	or.b32  	%r695, %r692, 32;
	mul.lo.s32 	%r696, %r695, 65;
	add.s32 	%r697, %r680, %r696;
	mul.wide.u32 	%rd58, %r697, 4;
	add.s64 	%rd7, %rd53, %rd58;
	cvt.u64.u32 	%rd59, %r696;
	add.s64 	%rd60, %rd54, %rd59;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd8, %rd53, %rd61;
	shl.b32 	%r698, %r7, 19;
	add.s32 	%r699, %r698, -1572864;
	shl.b32 	%r700, %r2, 2;
	or.b32  	%r701, %r238, %r700;
	or.b32  	%r702, %r701, %r228;
	shl.b32 	%r703, %r702, 8;
	or.b32  	%r137, %r703, %r675;
	cvt.s64.s32 	%rd9, %r699;
	or.b32  	%r138, %r137, 16384;
	bfe.u32 	%r704, %r677, 5, 1;
	mul.lo.s32 	%r705, %r237, 65;
	and.b32  	%r706, %r2, 1;
	neg.s32 	%r707, %r706;
	and.b32  	%r708, %r707, 2080;
	bfe.s32 	%r709, %r2, 1, 1;
	and.b32  	%r710, %r2, 2;
	setp.eq.s32 	%p311, %r710, 0;
	and.b32  	%r711, %r709, 1040;
	shr.u32 	%r712, %r2, 3;
	mul.lo.s32 	%r713, %r712, 260;
	bfe.s32 	%r714, %r2, 2, 1;
	and.b32  	%r715, %r2, 4;
	setp.eq.s32 	%p312, %r715, 0;
	and.b32  	%r716, %r714, 520;
	or.b32  	%r717, %r708, %r680;
	add.s32 	%r718, %r717, %r705;
	add.s32 	%r719, %r718, %r711;
	add.s32 	%r720, %r719, %r713;
	add.s32 	%r721, %r720, %r716;
	mul.wide.u32 	%rd62, %r721, 4;
	add.s64 	%rd10, %rd53, %rd62;
	selp.b64 	%rd63, 0, 520, %p312;
	cvt.u64.u32 	%rd64, %r713;
	selp.b64 	%rd65, 0, 1040, %p311;
	cvt.u64.u32 	%rd66, %r705;
	cvt.u64.u32 	%rd67, %r717;
	add.s64 	%rd68, %rd67, %rd66;
	add.s64 	%rd69, %rd68, %rd65;
	add.s64 	%rd70, %rd69, %rd64;
	add.s64 	%rd71, %rd70, %rd63;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd11, %rd53, %rd72;
	cvt.u64.u32 	%rd73, %r719;
	add.s64 	%rd74, %rd73, %rd64;
	add.s64 	%rd75, %rd74, %rd63;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd12, %rd53, %rd76;
	add.s32 	%r722, %r721, 162;
	mul.wide.u32 	%rd77, %r722, 4;
	add.s64 	%rd13, %rd53, %rd77;
	add.s32 	%r723, %r721, 131;
	mul.wide.u32 	%rd78, %r723, 4;
	add.s64 	%rd14, %rd53, %rd78;
	add.s32 	%r724, %r721, 163;
	mul.wide.u32 	%rd79, %r724, 4;
	add.s64 	%rd15, %rd53, %rd79;
	cvt.u64.u32 	%rd80, %r720;
	add.s64 	%rd81, %rd80, %rd63;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd16, %rd53, %rd82;
	add.s32 	%r725, %r721, 4193;
	mul.wide.u32 	%rd83, %r725, 4;
	add.s64 	%rd17, %rd53, %rd83;
	add.s32 	%r726, %r721, 4162;
	mul.wide.u32 	%rd84, %r726, 4;
	add.s64 	%rd18, %rd53, %rd84;
	add.s32 	%r727, %r721, 4194;
	mul.wide.u32 	%rd85, %r727, 4;
	add.s64 	%rd19, %rd53, %rd85;
	add.s32 	%r728, %r721, 4291;
	mul.wide.u32 	%rd86, %r728, 4;
	add.s64 	%rd20, %rd53, %rd86;
	add.s32 	%r729, %r721, 4323;
	mul.wide.u32 	%rd87, %r729, 4;
	add.s64 	%rd21, %rd53, %rd87;
	add.s32 	%r730, %r721, 4292;
	mul.wide.u32 	%rd88, %r730, 4;
	add.s64 	%rd22, %rd53, %rd88;
	add.s32 	%r731, %r721, 4324;
	mul.wide.u32 	%rd89, %r731, 4;
	add.s64 	%rd23, %rd53, %rd89;
	mul.lo.s32 	%r732, %r704, 65;
	and.b32  	%r733, %r676, 1040;
	setp.lt.u32 	%p313, %r1, 16;
	selp.b32 	%r139, 0, 520, %p313;
	add.s32 	%r734, %r684, %r732;
	add.s32 	%r140, %r734, %r733;
	add.s32 	%r735, %r685, %r732;
	add.s32 	%r141, %r735, %r733;
	add.s32 	%r736, %r686, %r732;
	add.s32 	%r142, %r736, %r733;
	add.s32 	%r737, %r687, %r732;
	add.s32 	%r143, %r737, %r733;
	add.s32 	%r144, %r734, 2080;
	add.s32 	%r145, %r734, 2088;
	add.s32 	%r146, %r734, 2096;
	add.s32 	%r147, %r734, 2104;
	mov.u32 	%r16365, 0;
	setp.eq.s32 	%p315, %r126, 0;
	mov.u16 	%rs2387, 25600;
	mov.u16 	%rs2179, 21504;
	mov.u16 	%rs2395, 18432;
	mov.u32 	%r16366, %r16365;
	mov.u32 	%r16367, %r16365;
	mov.u32 	%r16368, %r16365;
	mov.u32 	%r16369, %r16365;
	mov.u32 	%r16370, %r16365;
	mov.u32 	%r16371, %r16365;
	mov.u32 	%r16372, %r16365;
	mov.u32 	%r16373, %r16365;
	mov.u32 	%r16374, %r16365;
	mov.u32 	%r16375, %r16365;
	mov.u32 	%r16376, %r16365;
	mov.u32 	%r16377, %r16365;
	mov.u32 	%r16378, %r16365;
	mov.u32 	%r16379, %r16365;
	mov.u32 	%r16380, %r16365;
	mov.u32 	%r16381, %r16365;
	mov.u32 	%r16382, %r16365;
	mov.u32 	%r16383, %r16365;
	mov.u32 	%r16384, %r16365;
	mov.u32 	%r16385, %r16365;
	mov.u32 	%r16386, %r16365;
	mov.u32 	%r16387, %r16365;
	mov.u32 	%r16388, %r16365;
	mov.u32 	%r16389, %r16365;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70753
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r223, %r16389, 256;
	setp.ne.s32 	%p340, %r16389, 7936;
	mov.u32 	%r16389, %r223;
	@%p340 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2417
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r738, %r16389, %r5;
	setp.gt.s32 	%p314, %r6, %r738;
	@%p314 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass886
                                        //   in Loop: Header=BB0_181 Depth=1
	and.b32  	%r804, %r16389, 7936;
	or.b32  	%r805, %r124, %r804;
	shl.b32 	%r806, %r805, 12;
	add.s32 	%r807, %r125, %r806;
	shr.s32 	%r808, %r807, 31;
	shr.u32 	%r809, %r808, 7;
	add.s32 	%r810, %r807, %r809;
	shr.s32 	%r811, %r810, 25;
	setp.lt.s32 	%p316, %r807, 0;
	and.b32  	%r812, %r810, -33554432;
	setp.ne.s32 	%p317, %r812, %r807;
	and.pred  	%p318, %p316, %p317;
	selp.u32 	%r813, 1, 0, %p318;
	sub.s32 	%r814, %r813, %r811;
	shl.b32 	%r815, %r814, 25;
	add.s32 	%r816, %r815, %r807;
	mul.wide.s32 	%rd90, %r816, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r817, %r818, %r819, %r820}, [%rd91];
	or.b32  	%r821, %r806, 65536;
	add.s32 	%r822, %r125, %r821;
	shr.s32 	%r823, %r822, 31;
	shr.u32 	%r824, %r823, 7;
	add.s32 	%r825, %r822, %r824;
	shr.s32 	%r826, %r825, 25;
	setp.lt.s32 	%p319, %r822, 0;
	and.b32  	%r827, %r825, -33554432;
	setp.ne.s32 	%p320, %r827, %r822;
	and.pred  	%p321, %p319, %p320;
	selp.u32 	%r828, 1, 0, %p321;
	sub.s32 	%r829, %r828, %r826;
	shl.b32 	%r830, %r829, 25;
	add.s32 	%r831, %r830, %r822;
	mul.wide.s32 	%rd92, %r831, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r832, %r833, %r834, %r835}, [%rd93];
	or.b32  	%r836, %r806, 524288;
	add.s32 	%r837, %r125, %r836;
	shr.s32 	%r838, %r837, 31;
	shr.u32 	%r839, %r838, 7;
	add.s32 	%r840, %r837, %r839;
	shr.s32 	%r841, %r840, 25;
	setp.lt.s32 	%p322, %r837, 0;
	and.b32  	%r842, %r840, -33554432;
	setp.ne.s32 	%p323, %r842, %r837;
	and.pred  	%p324, %p322, %p323;
	selp.u32 	%r843, 1, 0, %p324;
	sub.s32 	%r844, %r843, %r841;
	shl.b32 	%r845, %r844, 25;
	add.s32 	%r846, %r845, %r837;
	mul.wide.s32 	%rd94, %r846, 4;
	add.s64 	%rd95, %rd2, %rd94;
	ld.global.v4.u32 	{%r847, %r848, %r849, %r850}, [%rd95];
	or.b32  	%r851, %r806, 589824;
	add.s32 	%r852, %r125, %r851;
	shr.s32 	%r853, %r852, 31;
	shr.u32 	%r854, %r853, 7;
	add.s32 	%r855, %r852, %r854;
	shr.s32 	%r856, %r855, 25;
	setp.lt.s32 	%p325, %r852, 0;
	and.b32  	%r857, %r855, -33554432;
	setp.ne.s32 	%p326, %r857, %r852;
	and.pred  	%p327, %p325, %p326;
	selp.u32 	%r858, 1, 0, %p327;
	sub.s32 	%r859, %r858, %r856;
	shl.b32 	%r860, %r859, 25;
	add.s32 	%r861, %r860, %r852;
	mul.wide.s32 	%rd96, %r861, 4;
	add.s64 	%rd97, %rd2, %rd96;
	ld.global.v4.u32 	{%r862, %r863, %r864, %r865}, [%rd97];
	selp.b32 	%r866, %r819, %r817, %p315;
	shfl.sync.bfly.b32	%r867, %r866, 8, 31, -1;
	selp.b32 	%r740, %r817, %r867, %p315;
	selp.b32 	%r741, %r867, %r819, %p315;
	selp.b32 	%r868, %r820, %r818, %p315;
	shfl.sync.bfly.b32	%r869, %r868, 8, 31, -1;
	selp.b32 	%r748, %r818, %r869, %p315;
	selp.b32 	%r749, %r869, %r820, %p315;
	selp.b32 	%r870, %r834, %r832, %p315;
	shfl.sync.bfly.b32	%r871, %r870, 8, 31, -1;
	selp.b32 	%r756, %r832, %r871, %p315;
	selp.b32 	%r757, %r871, %r834, %p315;
	selp.b32 	%r872, %r835, %r833, %p315;
	shfl.sync.bfly.b32	%r873, %r872, 8, 31, -1;
	selp.b32 	%r764, %r833, %r873, %p315;
	selp.b32 	%r765, %r873, %r835, %p315;
	selp.b32 	%r874, %r849, %r847, %p315;
	shfl.sync.bfly.b32	%r875, %r874, 8, 31, -1;
	selp.b32 	%r772, %r847, %r875, %p315;
	selp.b32 	%r773, %r875, %r849, %p315;
	selp.b32 	%r876, %r850, %r848, %p315;
	shfl.sync.bfly.b32	%r877, %r876, 8, 31, -1;
	selp.b32 	%r780, %r848, %r877, %p315;
	selp.b32 	%r781, %r877, %r850, %p315;
	selp.b32 	%r878, %r864, %r862, %p315;
	shfl.sync.bfly.b32	%r879, %r878, 8, 31, -1;
	selp.b32 	%r788, %r862, %r879, %p315;
	selp.b32 	%r789, %r879, %r864, %p315;
	selp.b32 	%r880, %r865, %r863, %p315;
	shfl.sync.bfly.b32	%r881, %r880, 8, 31, -1;
	selp.b32 	%r796, %r863, %r881, %p315;
	selp.b32 	%r797, %r881, %r865, %p315;
	mov.u32 	%r798, 21520;
	// begin inline asm
	prmt.b32 %r739, %r740, %r741, %r798;
	// end inline asm
	mov.u32 	%r802, 30258;
	// begin inline asm
	prmt.b32 %r743, %r740, %r741, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r747, %r748, %r749, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r751, %r748, %r749, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r756, %r757, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r756, %r757, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r763, %r764, %r765, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r767, %r764, %r765, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r771, %r772, %r773, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r775, %r772, %r773, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r779, %r780, %r781, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r783, %r780, %r781, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r787, %r788, %r789, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r791, %r788, %r789, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r795, %r796, %r797, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r799, %r796, %r797, %r802;
	// end inline asm
	st.shared.u32 	[%rd10], %r739;
	st.shared.u32 	[%rd11+128], %r743;
	st.shared.u32 	[%rd11+4], %r747;
	st.shared.u32 	[%rd11+132], %r751;
	st.shared.u32 	[%rd12+520], %r755;
	st.shared.u32 	[%rd13], %r759;
	st.shared.u32 	[%rd14], %r763;
	st.shared.u32 	[%rd15], %r767;
	st.shared.u32 	[%rd16+16644], %r771;
	st.shared.u32 	[%rd17], %r775;
	st.shared.u32 	[%rd18], %r779;
	st.shared.u32 	[%rd19], %r783;
	st.shared.u32 	[%rd20], %r787;
	st.shared.u32 	[%rd21], %r791;
	st.shared.u32 	[%rd22], %r795;
	st.shared.u32 	[%rd23], %r799;
	bar.sync 	0;
	or.b32  	%r242, %r127, %r16389;
	mov.u32 	%r803, 0;
	mov.u32 	%r16414, %r803;
$L__BB0_183:                            // %L13860
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16146, %r242, %r16414;
	bfe.s32 	%r16147, %r16146, 4, 1;
	and.b32  	%r16148, %r16147, 130;
	bfe.s32 	%r16149, %r16146, 3, 1;
	and.b32  	%r16150, %r16149, 260;
	bfe.s32 	%r16151, %r16146, 7, 1;
	and.b32  	%r16152, %r16151, 4161;
	add.s32 	%r16153, %r140, %r16148;
	add.s32 	%r16154, %r16153, %r16150;
	add.s32 	%r16155, %r16154, %r16152;
	add.s32 	%r16156, %r16155, %r139;
	mul.wide.u32 	%rd98, %r16156, 4;
	add.s64 	%rd100, %rd53, %rd98;
	ld.shared.u32 	%r16157, [%rd100];
	add.s32 	%r16158, %r141, %r16148;
	add.s32 	%r16159, %r16158, %r16150;
	add.s32 	%r16160, %r16159, %r16152;
	add.s32 	%r16161, %r16160, %r139;
	mul.wide.u32 	%rd101, %r16161, 4;
	add.s64 	%rd102, %rd53, %rd101;
	ld.shared.u32 	%r16162, [%rd102];
	add.s32 	%r16163, %r142, %r16148;
	add.s32 	%r16164, %r16163, %r16150;
	add.s32 	%r16165, %r16164, %r16152;
	add.s32 	%r16166, %r16165, %r139;
	mul.wide.u32 	%rd103, %r16166, 4;
	add.s64 	%rd104, %rd53, %rd103;
	ld.shared.u32 	%r16167, [%rd104];
	add.s32 	%r16168, %r143, %r16148;
	add.s32 	%r16169, %r16168, %r16150;
	add.s32 	%r16170, %r16169, %r16152;
	add.s32 	%r16171, %r16170, %r139;
	mul.wide.u32 	%rd105, %r16171, 4;
	add.s64 	%rd106, %rd53, %rd105;
	ld.shared.u32 	%r16172, [%rd106];
	add.s32 	%r16173, %r16146, 1;
	or.b32  	%r16174, %r16173, %r128;
	bfe.s32 	%r16175, %r16174, 1, 1;
	and.b32  	%r16176, %r16175, 1040;
	bfe.s32 	%r16177, %r16173, 4, 1;
	and.b32  	%r16178, %r16177, 130;
	bfe.s32 	%r16179, %r16173, 3, 1;
	and.b32  	%r16180, %r16179, 260;
	bfe.s32 	%r16181, %r16173, 7, 1;
	and.b32  	%r16182, %r16181, 4161;
	bfe.s32 	%r16183, %r16174, 2, 1;
	and.b32  	%r16184, %r16183, 520;
	add.s32 	%r16185, %r144, %r16176;
	add.s32 	%r16186, %r16185, %r16178;
	add.s32 	%r16187, %r16186, %r16180;
	add.s32 	%r16188, %r16187, %r16182;
	add.s32 	%r16189, %r16188, %r16184;
	mul.wide.u32 	%rd107, %r16189, 4;
	add.s64 	%rd108, %rd53, %rd107;
	ld.shared.u32 	%r16190, [%rd108];
	add.s32 	%r16191, %r145, %r16176;
	add.s32 	%r16192, %r16191, %r16178;
	add.s32 	%r16193, %r16192, %r16180;
	add.s32 	%r16194, %r16193, %r16182;
	add.s32 	%r16195, %r16194, %r16184;
	mul.wide.u32 	%rd109, %r16195, 4;
	add.s64 	%rd110, %rd53, %rd109;
	ld.shared.u32 	%r16196, [%rd110];
	add.s32 	%r16197, %r146, %r16176;
	add.s32 	%r16198, %r16197, %r16178;
	add.s32 	%r16199, %r16198, %r16180;
	add.s32 	%r16200, %r16199, %r16182;
	add.s32 	%r16201, %r16200, %r16184;
	mul.wide.u32 	%rd111, %r16201, 4;
	add.s64 	%rd112, %rd53, %rd111;
	ld.shared.u32 	%r16202, [%rd112];
	add.s32 	%r16203, %r147, %r16176;
	add.s32 	%r16204, %r16203, %r16178;
	add.s32 	%r16205, %r16204, %r16180;
	add.s32 	%r16206, %r16205, %r16182;
	add.s32 	%r16207, %r16206, %r16184;
	mul.wide.u32 	%rd113, %r16207, 4;
	add.s64 	%rd114, %rd53, %rd113;
	ld.shared.u32 	%r16208, [%rd114];
	// begin inline asm
	mov.b32 %r887, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r898, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r886, %r16157, -2004318072;
	mov.u32 	%r885, 983055;
	// begin inline asm
	lop3.b32 %r884, %r885, %r886, %r887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r887, %r888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r892, %r884, %r889;
	// end inline asm
	mov.u32 	%r896, 15728880;
	// begin inline asm
	lop3.b32 %r895, %r896, %r886, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r898, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	shr.u32 	%r908, %r886, 8;
	// begin inline asm
	lop3.b32 %r906, %r885, %r908, %r887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r910, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r911, %r887, %r910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r914, %r906, %r911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r917, %r896, %r908, %r898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r898, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r932, %r16162, -2004318072;
	// begin inline asm
	lop3.b32 %r930, %r885, %r932, %r933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r933, %r934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r938, %r930, %r935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r941, %r896, %r932, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r944, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	shr.u32 	%r954, %r932, 8;
	// begin inline asm
	lop3.b32 %r952, %r885, %r954, %r933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r957, %r933, %r956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r960, %r952, %r957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r963, %r896, %r954, %r944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r944, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r978, %r16167, -2004318072;
	// begin inline asm
	lop3.b32 %r976, %r885, %r978, %r979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r979, %r980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r984, %r976, %r981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r987, %r896, %r978, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r990, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	shr.u32 	%r1000, %r978, 8;
	// begin inline asm
	lop3.b32 %r998, %r885, %r1000, %r979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r979, %r1002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1006, %r998, %r1003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1009, %r896, %r1000, %r990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r990, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1017, %r1009, %r1014;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1024, %r16172, -2004318072;
	// begin inline asm
	lop3.b32 %r1022, %r885, %r1024, %r1025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1027, %r1025, %r1026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1030, %r1022, %r1027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1033, %r896, %r1024, %r1036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1036, %r1037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1041, %r1033, %r1038;
	// end inline asm
	shr.u32 	%r1046, %r1024, 8;
	// begin inline asm
	lop3.b32 %r1044, %r885, %r1046, %r1025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1049, %r1025, %r1048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1052, %r1044, %r1049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1055, %r896, %r1046, %r1036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1036, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1070, %r16190, -2004318072;
	// begin inline asm
	lop3.b32 %r1068, %r885, %r1070, %r1071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1071, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1079, %r896, %r1070, %r1082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1082, %r1083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1087, %r1079, %r1084;
	// end inline asm
	shr.u32 	%r1092, %r1070, 8;
	// begin inline asm
	lop3.b32 %r1090, %r885, %r1092, %r1071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1095, %r1071, %r1094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1098, %r1090, %r1095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1101, %r896, %r1092, %r1082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1106, %r1082, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1109, %r1101, %r1106;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1128, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1116, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1114, %r885, %r1116, %r1117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1117, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1125, %r896, %r1116, %r1128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1128, %r1129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1133, %r1125, %r1130;
	// end inline asm
	shr.u32 	%r1138, %r1116, 8;
	// begin inline asm
	lop3.b32 %r1136, %r885, %r1138, %r1117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1141, %r1117, %r1140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1144, %r1136, %r1141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1147, %r896, %r1138, %r1128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1152, %r1128, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1155, %r1147, %r1152;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1162, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1160, %r885, %r1162, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1163, %r1164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1168, %r1160, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1171, %r896, %r1162, %r1174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1174, %r1175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1179, %r1171, %r1176;
	// end inline asm
	shr.u32 	%r1184, %r1162, 8;
	// begin inline asm
	lop3.b32 %r1182, %r885, %r1184, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1187, %r1163, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1190, %r1182, %r1187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1193, %r896, %r1184, %r1174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1198, %r1174, %r1197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1201, %r1193, %r1198;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1208, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1206, %r885, %r1208, %r1209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1209, %r1210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1214, %r1206, %r1211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1217, %r896, %r1208, %r1220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1220, %r1221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1225, %r1217, %r1222;
	// end inline asm
	shr.u32 	%r1230, %r1208, 8;
	// begin inline asm
	lop3.b32 %r1228, %r885, %r1230, %r1209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1233, %r1209, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1236, %r1228, %r1233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1239, %r896, %r1230, %r1220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1244, %r1220, %r1243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1247, %r1239, %r1244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r1360, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1365, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r1365, %r1155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1375, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1377, %r1375, %r1179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1380, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r1380, %r1190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1385, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1387, %r1385, %r1201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1392, %r1390, %r1214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1395, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1397, %r1395, %r1225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1400, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1402, %r1400, %r1236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1405, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1407, %r1405, %r1247;
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1414, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r1412, %r885, %r1414, %r1415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1417, %r1415, %r1416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1420, %r1412, %r1417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1423, %r896, %r1414, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1428, %r1426, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1431, %r1423, %r1428;
	// end inline asm
	shr.u32 	%r1436, %r1414, 8;
	// begin inline asm
	lop3.b32 %r1434, %r885, %r1436, %r1415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1438, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1439, %r1415, %r1438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1442, %r1434, %r1439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1445, %r896, %r1436, %r1426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1426, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1460, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r1458, %r885, %r1460, %r1461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1461, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1466, %r1458, %r1463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1469, %r896, %r1460, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1472, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	shr.u32 	%r1482, %r1460, 8;
	// begin inline asm
	lop3.b32 %r1480, %r885, %r1482, %r1461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1485, %r1461, %r1484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1488, %r1480, %r1485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1491, %r896, %r1482, %r1472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1472, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1506, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r1504, %r885, %r1506, %r1507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1509, %r1507, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1512, %r1504, %r1509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1515, %r896, %r1506, %r1518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1518, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1523, %r1515, %r1520;
	// end inline asm
	shr.u32 	%r1528, %r1506, 8;
	// begin inline asm
	lop3.b32 %r1526, %r885, %r1528, %r1507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1531, %r1507, %r1530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1534, %r1526, %r1531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1537, %r896, %r1528, %r1518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1518, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1552, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r1550, %r885, %r1552, %r1553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1555, %r1553, %r1554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1558, %r1550, %r1555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1561, %r896, %r1552, %r1564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1566, %r1564, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1569, %r1561, %r1566;
	// end inline asm
	shr.u32 	%r1574, %r1552, 8;
	// begin inline asm
	lop3.b32 %r1572, %r885, %r1574, %r1553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1576, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1577, %r1553, %r1576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1580, %r1572, %r1577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1583, %r896, %r1574, %r1564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1564, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1610, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1598, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r1596, %r885, %r1598, %r1599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1601, %r1599, %r1600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1604, %r1596, %r1601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1607, %r896, %r1598, %r1610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1612, %r1610, %r1611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1615, %r1607, %r1612;
	// end inline asm
	shr.u32 	%r1620, %r1598, 8;
	// begin inline asm
	lop3.b32 %r1618, %r885, %r1620, %r1599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1622, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1623, %r1599, %r1622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1626, %r1618, %r1623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1629, %r896, %r1620, %r1610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1634, %r1610, %r1633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1637, %r1629, %r1634;
	// end inline asm
	// begin inline asm
	mov.b32 %r1645, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1656, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1644, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r1642, %r885, %r1644, %r1645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1647, %r1645, %r1646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1650, %r1642, %r1647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1653, %r896, %r1644, %r1656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1658, %r1656, %r1657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1661, %r1653, %r1658;
	// end inline asm
	shr.u32 	%r1666, %r1644, 8;
	// begin inline asm
	lop3.b32 %r1664, %r885, %r1666, %r1645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1669, %r1645, %r1668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1672, %r1664, %r1669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1675, %r896, %r1666, %r1656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1680, %r1656, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1683, %r1675, %r1680;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1702, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1690, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r1688, %r885, %r1690, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1693, %r1691, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1696, %r1688, %r1693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1699, %r896, %r1690, %r1702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1704, %r1702, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1707, %r1699, %r1704;
	// end inline asm
	shr.u32 	%r1712, %r1690, 8;
	// begin inline asm
	lop3.b32 %r1710, %r885, %r1712, %r1691, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1715, %r1691, %r1714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1718, %r1710, %r1715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1721, %r896, %r1712, %r1702, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1725, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1726, %r1702, %r1725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1729, %r1721, %r1726;
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1748, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1736, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1734, %r885, %r1736, %r1737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1738, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1739, %r1737, %r1738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1742, %r1734, %r1739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1745, %r896, %r1736, %r1748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1749, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1750, %r1748, %r1749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1753, %r1745, %r1750;
	// end inline asm
	shr.u32 	%r1758, %r1736, 8;
	// begin inline asm
	lop3.b32 %r1756, %r885, %r1758, %r1737, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1760, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1761, %r1737, %r1760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1764, %r1756, %r1761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1767, %r896, %r1758, %r1748, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1771, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1772, %r1748, %r1771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1775, %r1767, %r1772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r303, %r1420, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r303, %r1431, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r303, %r1442, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r303, %r1453, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r303, %r1466, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r303, %r1477, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r303, %r1488, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r303, %r1499, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r303, %r1512, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r303, %r1523, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r303, %r1534, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r303, %r1545, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r303, %r1558, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r303, %r1569, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r303, %r1580, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r303, %r1591, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r321, %r1604, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r321, %r1615, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r321, %r1626, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r321, %r1637, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r321, %r1650, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r321, %r1661, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r321, %r1672, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r321, %r1683, %r1367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r321, %r1696, %r1372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1878, %r321, %r1707, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r321, %r1718, %r1382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1886, %r321, %r1729, %r1387;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1890, %r321, %r1742, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r321, %r1753, %r1397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1898, %r321, %r1764, %r1402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r321, %r1775, %r1407;
	// end inline asm
	// begin inline asm
	mov.b32 %r1911, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1922, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1910, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r1908, %r885, %r1910, %r1911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1912, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1913, %r1911, %r1912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1916, %r1908, %r1913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1919, %r896, %r1910, %r1922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1924, %r1922, %r1923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1927, %r1919, %r1924;
	// end inline asm
	shr.u32 	%r1932, %r1910, 8;
	// begin inline asm
	lop3.b32 %r1930, %r885, %r1932, %r1911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1935, %r1911, %r1934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1938, %r1930, %r1935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1941, %r896, %r1932, %r1922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1946, %r1922, %r1945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1949, %r1941, %r1946;
	// end inline asm
	// begin inline asm
	mov.b32 %r1957, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1956, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r1954, %r885, %r1956, %r1957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1959, %r1957, %r1958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1962, %r1954, %r1959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1965, %r896, %r1956, %r1968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1970, %r1968, %r1969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1973, %r1965, %r1970;
	// end inline asm
	shr.u32 	%r1978, %r1956, 8;
	// begin inline asm
	lop3.b32 %r1976, %r885, %r1978, %r1957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1981, %r1957, %r1980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1984, %r1976, %r1981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1987, %r896, %r1978, %r1968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1992, %r1968, %r1991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1995, %r1987, %r1992;
	// end inline asm
	// begin inline asm
	mov.b32 %r2003, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2014, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2002, %r16371, -2004318072;
	// begin inline asm
	lop3.b32 %r2000, %r885, %r2002, %r2003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2005, %r2003, %r2004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2008, %r2000, %r2005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2011, %r896, %r2002, %r2014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2016, %r2014, %r2015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2019, %r2011, %r2016;
	// end inline asm
	shr.u32 	%r2024, %r2002, 8;
	// begin inline asm
	lop3.b32 %r2022, %r885, %r2024, %r2003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2027, %r2003, %r2026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2030, %r2022, %r2027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2033, %r896, %r2024, %r2014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2038, %r2014, %r2037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2041, %r2033, %r2038;
	// end inline asm
	// begin inline asm
	mov.b32 %r2049, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2060, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2048, %r16372, -2004318072;
	// begin inline asm
	lop3.b32 %r2046, %r885, %r2048, %r2049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2051, %r2049, %r2050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2054, %r2046, %r2051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2057, %r896, %r2048, %r2060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2062, %r2060, %r2061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2065, %r2057, %r2062;
	// end inline asm
	shr.u32 	%r2070, %r2048, 8;
	// begin inline asm
	lop3.b32 %r2068, %r885, %r2070, %r2049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2073, %r2049, %r2072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2076, %r2068, %r2073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2079, %r896, %r2070, %r2060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2084, %r2060, %r2083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2087, %r2079, %r2084;
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2106, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2094, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r2092, %r885, %r2094, %r2095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2097, %r2095, %r2096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2100, %r2092, %r2097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2103, %r896, %r2094, %r2106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2108, %r2106, %r2107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2111, %r2103, %r2108;
	// end inline asm
	shr.u32 	%r2116, %r2094, 8;
	// begin inline asm
	lop3.b32 %r2114, %r885, %r2116, %r2095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2119, %r2095, %r2118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2122, %r2114, %r2119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2125, %r896, %r2116, %r2106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2130, %r2106, %r2129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2133, %r2125, %r2130;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2152, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2140, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r2138, %r885, %r2140, %r2141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2143, %r2141, %r2142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2146, %r2138, %r2143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2149, %r896, %r2140, %r2152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2154, %r2152, %r2153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2157, %r2149, %r2154;
	// end inline asm
	shr.u32 	%r2162, %r2140, 8;
	// begin inline asm
	lop3.b32 %r2160, %r885, %r2162, %r2141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2165, %r2141, %r2164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2168, %r2160, %r2165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2171, %r896, %r2162, %r2152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2152, %r2175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2179, %r2171, %r2176;
	// end inline asm
	// begin inline asm
	mov.b32 %r2187, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2186, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r2184, %r885, %r2186, %r2187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2187, %r2188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2192, %r2184, %r2189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2195, %r896, %r2186, %r2198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2200, %r2198, %r2199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2203, %r2195, %r2200;
	// end inline asm
	shr.u32 	%r2208, %r2186, 8;
	// begin inline asm
	lop3.b32 %r2206, %r885, %r2208, %r2187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2211, %r2187, %r2210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2214, %r2206, %r2211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2217, %r896, %r2208, %r2198, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2198, %r2221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2225, %r2217, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2233, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2244, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2232, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r2230, %r885, %r2232, %r2233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2234, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2235, %r2233, %r2234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2238, %r2230, %r2235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2241, %r896, %r2232, %r2244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2246, %r2244, %r2245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2249, %r2241, %r2246;
	// end inline asm
	shr.u32 	%r2254, %r2232, 8;
	// begin inline asm
	lop3.b32 %r2252, %r885, %r2254, %r2233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2233, %r2256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2260, %r2252, %r2257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2263, %r896, %r2254, %r2244, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2267, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2268, %r2244, %r2267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2271, %r2263, %r2268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2274, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r2274, %r1916, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2280, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2282, %r2280, %r1927, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2286, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2288, %r2286, %r1938, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2292, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2294, %r2292, %r1949, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r2298, %r1962, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2304, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r2304, %r1973, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2310, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r2310, %r1984, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2316, %r1995, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2322, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2324, %r2322, %r2008, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2328, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r2328, %r2019, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2334, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2336, %r2334, %r2030, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2340, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r2340, %r2041, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2346, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2348, %r2346, %r2054, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2352, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2354, %r2352, %r2065, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2358, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2360, %r2358, %r2076, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2364, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2366, %r2364, %r2087, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2370, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2372, %r2370, %r2100, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2376, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2378, %r2376, %r2111, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2382, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2384, %r2382, %r2122, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2388, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2390, %r2388, %r2133, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2394, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2396, %r2394, %r2146, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2400, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2402, %r2400, %r2157, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2406, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2408, %r2406, %r2168, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2412, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2414, %r2412, %r2179, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2418, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2420, %r2418, %r2192, %r1874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2424, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2426, %r2424, %r2203, %r1878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2430, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2432, %r2430, %r2214, %r1882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2436, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2438, %r2436, %r2225, %r1886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2442, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2444, %r2442, %r2238, %r1890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2448, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2450, %r2448, %r2249, %r1894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2454, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2456, %r2454, %r2260, %r1898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2460, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2462, %r2460, %r2271, %r1902;
	// end inline asm
	// begin inline asm
	mov.b32 %r2471, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2482, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2470, %r16373, -2004318072;
	// begin inline asm
	lop3.b32 %r2468, %r885, %r2470, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2473, %r2471, %r2472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2476, %r2468, %r2473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2479, %r896, %r2470, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2484, %r2482, %r2483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2487, %r2479, %r2484;
	// end inline asm
	shr.u32 	%r2492, %r2470, 8;
	// begin inline asm
	lop3.b32 %r2490, %r885, %r2492, %r2471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2495, %r2471, %r2494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2498, %r2490, %r2495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2501, %r896, %r2492, %r2482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2482, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	// begin inline asm
	mov.b32 %r2517, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2528, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2516, %r16374, -2004318072;
	// begin inline asm
	lop3.b32 %r2514, %r885, %r2516, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2519, %r2517, %r2518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2522, %r2514, %r2519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2525, %r896, %r2516, %r2528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2530, %r2528, %r2529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2533, %r2525, %r2530;
	// end inline asm
	shr.u32 	%r2538, %r2516, 8;
	// begin inline asm
	lop3.b32 %r2536, %r885, %r2538, %r2517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2541, %r2517, %r2540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2544, %r2536, %r2541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2547, %r896, %r2538, %r2528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2552, %r2528, %r2551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2555, %r2547, %r2552;
	// end inline asm
	// begin inline asm
	mov.b32 %r2563, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2574, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2562, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r2560, %r885, %r2562, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2565, %r2563, %r2564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2568, %r2560, %r2565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2571, %r896, %r2562, %r2574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2576, %r2574, %r2575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2579, %r2571, %r2576;
	// end inline asm
	shr.u32 	%r2584, %r2562, 8;
	// begin inline asm
	lop3.b32 %r2582, %r885, %r2584, %r2563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2587, %r2563, %r2586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2590, %r2582, %r2587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2593, %r896, %r2584, %r2574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2574, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	// begin inline asm
	mov.b32 %r2609, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2620, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2608, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r2606, %r885, %r2608, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2609, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2617, %r896, %r2608, %r2620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2620, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	shr.u32 	%r2630, %r2608, 8;
	// begin inline asm
	lop3.b32 %r2628, %r885, %r2630, %r2609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2632, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2633, %r2609, %r2632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2636, %r2628, %r2633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2639, %r896, %r2630, %r2620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2644, %r2620, %r2643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2647, %r2639, %r2644;
	// end inline asm
	// begin inline asm
	mov.b32 %r2655, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2666, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2654, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r2652, %r885, %r2654, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2657, %r2655, %r2656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2660, %r2652, %r2657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2663, %r896, %r2654, %r2666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2668, %r2666, %r2667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2671, %r2663, %r2668;
	// end inline asm
	shr.u32 	%r2676, %r2654, 8;
	// begin inline asm
	lop3.b32 %r2674, %r885, %r2676, %r2655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2678, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2679, %r2655, %r2678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2682, %r2674, %r2679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2685, %r896, %r2676, %r2666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2690, %r2666, %r2689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2693, %r2685, %r2690;
	// end inline asm
	// begin inline asm
	mov.b32 %r2701, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2700, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r2698, %r885, %r2700, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2703, %r2701, %r2702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2706, %r2698, %r2703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2709, %r896, %r2700, %r2712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2714, %r2712, %r2713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2717, %r2709, %r2714;
	// end inline asm
	shr.u32 	%r2722, %r2700, 8;
	// begin inline asm
	lop3.b32 %r2720, %r885, %r2722, %r2701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2724, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2725, %r2701, %r2724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2728, %r2720, %r2725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2731, %r896, %r2722, %r2712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2712, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	// begin inline asm
	mov.b32 %r2747, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2746, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r2744, %r885, %r2746, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2749, %r2747, %r2748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2752, %r2744, %r2749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2755, %r896, %r2746, %r2758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2760, %r2758, %r2759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2763, %r2755, %r2760;
	// end inline asm
	shr.u32 	%r2768, %r2746, 8;
	// begin inline asm
	lop3.b32 %r2766, %r885, %r2768, %r2747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2770, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2771, %r2747, %r2770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2774, %r2766, %r2771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2777, %r896, %r2768, %r2758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2781, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2782, %r2758, %r2781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2785, %r2777, %r2782;
	// end inline asm
	// begin inline asm
	mov.b32 %r2793, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2804, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2792, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r2790, %r885, %r2792, %r2793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2794, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2795, %r2793, %r2794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2798, %r2790, %r2795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2801, %r896, %r2792, %r2804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2805, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2806, %r2804, %r2805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2809, %r2801, %r2806;
	// end inline asm
	shr.u32 	%r2814, %r2792, 8;
	// begin inline asm
	lop3.b32 %r2812, %r885, %r2814, %r2793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2816, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2817, %r2793, %r2816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2820, %r2812, %r2817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2823, %r896, %r2814, %r2804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2827, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2828, %r2804, %r2827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2831, %r2823, %r2828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r375, %r2476, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r375, %r2487, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r375, %r2498, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r375, %r2509, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r375, %r2522, %r2300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r375, %r2533, %r2306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r375, %r2544, %r2312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r375, %r2555, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r375, %r2568, %r2324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r375, %r2579, %r2330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r375, %r2590, %r2336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r375, %r2601, %r2342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r375, %r2614, %r2348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r375, %r2625, %r2354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r375, %r2636, %r2360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r375, %r2647, %r2366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r393, %r2660, %r2372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r393, %r2671, %r2378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r393, %r2682, %r2384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r393, %r2693, %r2390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r393, %r2706, %r2396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r393, %r2717, %r2402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r393, %r2728, %r2408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r393, %r2739, %r2414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r393, %r2752, %r2420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r393, %r2763, %r2426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r393, %r2774, %r2432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r393, %r2785, %r2438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r393, %r2798, %r2444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r393, %r2809, %r2450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r393, %r2820, %r2456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r393, %r2831, %r2462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2962, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2964, %r2962, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r457, %r2969, %r2964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2971, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2973, %r2971, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r457, %r2978, %r2973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2980, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2982, %r2980, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r457, %r2987, %r2982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2989, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2991, %r2989, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r457, %r2996, %r2991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2998, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3000, %r2998, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r457, %r3005, %r3000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3007, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3009, %r3007, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r457, %r3014, %r3009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3016, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3018, %r3016, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r457, %r3023, %r3018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3025, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3027, %r3025, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r457, %r3032, %r3027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3034, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r3034, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r460, %r3041, %r3036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3043, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r3043, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r460, %r3050, %r3045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3052, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r3052, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r460, %r3059, %r3054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3061, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r3061, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r460, %r3068, %r3063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3070, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3072, %r3070, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r460, %r3077, %r3072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r3079, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r460, %r3086, %r3081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3088, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3090, %r3088, %r3092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r460, %r3095, %r3090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3097, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r3097, %r3101;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r460, %r3104, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r463, %r2969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r457, %r2966, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r463, %r2978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r457, %r2975, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r463, %r2987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r457, %r2984, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r463, %r2996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r457, %r2993, %r3127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r463, %r3005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r457, %r3002, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r463, %r3014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r457, %r3011, %r3141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3148, %r463, %r3023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r457, %r3020, %r3148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3155, %r463, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r457, %r3029, %r3155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3162, %r466, %r3041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r460, %r3038, %r3162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3169, %r466, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r460, %r3047, %r3169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3176, %r466, %r3059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r460, %r3056, %r3176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3183, %r466, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3186, %r460, %r3065, %r3183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3190, %r466, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r460, %r3074, %r3190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3197, %r466, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r460, %r3083, %r3197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3204, %r466, %r3095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r460, %r3092, %r3204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3211, %r466, %r3104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3214, %r460, %r3101, %r3211;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3385, %r3382}, {%r512, %r518, %r515, %r521}, {%r2967, %r3109}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3394, %r3391}, {%r512, %r518, %r515, %r521}, {%r2976, %r3116}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3403, %r3400}, {%r512, %r518, %r515, %r521}, {%r2985, %r3123}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3412, %r3409}, {%r512, %r518, %r515, %r521}, {%r2994, %r3130}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3421, %r3418}, {%r512, %r518, %r515, %r521}, {%r3003, %r3137}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3430, %r3427}, {%r512, %r518, %r515, %r521}, {%r3012, %r3144}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3439, %r3436}, {%r512, %r518, %r515, %r521}, {%r3021, %r3151}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3448, %r3445}, {%r512, %r518, %r515, %r521}, {%r3030, %r3158}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3457, %r3454}, {%r512, %r518, %r515, %r521}, {%r3039, %r3165}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3466, %r3463}, {%r512, %r518, %r515, %r521}, {%r3048, %r3172}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3475, %r3472}, {%r512, %r518, %r515, %r521}, {%r3057, %r3179}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3484, %r3481}, {%r512, %r518, %r515, %r521}, {%r3066, %r3186}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3493, %r3490}, {%r512, %r518, %r515, %r521}, {%r3075, %r3193}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3502, %r3499}, {%r512, %r518, %r515, %r521}, {%r3084, %r3200}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3511, %r3508}, {%r512, %r518, %r515, %r521}, {%r3093, %r3207}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3520, %r3517}, {%r512, %r518, %r515, %r521}, {%r3102, %r3214}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3378, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3380, %r3378, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r562, %r3385, %r3380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3387, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3389, %r3387, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r562, %r3394, %r3389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3396, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3398, %r3396, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r562, %r3403, %r3398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3405, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3407, %r3405, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r562, %r3412, %r3407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3414, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3416, %r3414, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r562, %r3421, %r3416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3423, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3425, %r3423, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r562, %r3430, %r3425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3432, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3434, %r3432, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r562, %r3439, %r3434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3441, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r3441, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r562, %r3448, %r3443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3450, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r3450, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r562, %r3457, %r3452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3459, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r3459, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r562, %r3466, %r3461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3468, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r3468, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r562, %r3475, %r3470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3477, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r3477, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r562, %r3484, %r3479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3486, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r3486, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r562, %r3493, %r3488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3495, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r3495, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r562, %r3502, %r3497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3504, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3506, %r3504, %r3508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r562, %r3511, %r3506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3513, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r3513, %r3517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r562, %r3520, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r565, %r3385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r562, %r3382, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r565, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r562, %r3391, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r565, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r562, %r3400, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r565, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r562, %r3409, %r3543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r565, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r562, %r3418, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r565, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r562, %r3427, %r3557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3564, %r565, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r562, %r3436, %r3564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r565, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r562, %r3445, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r565, %r3457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r562, %r3454, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r565, %r3466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r562, %r3463, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r565, %r3475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r562, %r3472, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r565, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r562, %r3481, %r3599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r565, %r3493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r562, %r3490, %r3606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r565, %r3502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r562, %r3499, %r3613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3620, %r565, %r3511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3623, %r562, %r3508, %r3620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3627, %r565, %r3520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3630, %r562, %r3517, %r3627;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3923, %r3926}, {%r600, %r606, %r603, %r609}, {%r3383, %r3525}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3929, %r3932}, {%r600, %r606, %r603, %r609}, {%r3392, %r3532}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3935, %r3938}, {%r600, %r606, %r603, %r609}, {%r3401, %r3539}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3941, %r3944}, {%r600, %r606, %r603, %r609}, {%r3410, %r3546}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3947, %r3950}, {%r600, %r606, %r603, %r609}, {%r3419, %r3553}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3953, %r3956}, {%r600, %r606, %r603, %r609}, {%r3428, %r3560}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3959, %r3962}, {%r600, %r606, %r603, %r609}, {%r3437, %r3567}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3965, %r3968}, {%r600, %r606, %r603, %r609}, {%r3446, %r3574}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3924, %r3927}, {%r600, %r606, %r603, %r609}, {%r3455, %r3581}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3930, %r3933}, {%r600, %r606, %r603, %r609}, {%r3464, %r3588}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3936, %r3939}, {%r600, %r606, %r603, %r609}, {%r3473, %r3595}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3942, %r3945}, {%r600, %r606, %r603, %r609}, {%r3482, %r3602}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3948, %r3951}, {%r600, %r606, %r603, %r609}, {%r3491, %r3609}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3954, %r3957}, {%r600, %r606, %r603, %r609}, {%r3500, %r3616}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3960, %r3963}, {%r600, %r606, %r603, %r609}, {%r3509, %r3623}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3966, %r3969}, {%r600, %r606, %r603, %r609}, {%r3518, %r3630}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3922, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3925, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3928, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3931, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3934, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3937, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3940, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3943, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3946, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3949, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3952, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3955, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3958, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3961, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3964, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3967, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3970, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3973, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3976, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3979, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3982, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3985, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3988, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3991, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3994, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3997, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4000, %r3953, %r3954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4003, %r3956, %r3957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4006, %r3959, %r3960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4009, %r3962, %r3963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4012, %r3965, %r3966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4015, %r3968, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r230, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r230, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r230, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r230, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r230, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r230, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r230, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r230, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r230, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r230, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r230, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r230, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r230, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r230, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r230, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r230, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r231, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r231, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r231, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r231, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r231, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r231, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r231, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r231, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r231, %r3994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4093, %r231, %r3997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4096, %r231, %r4000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4099, %r231, %r4003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4102, %r231, %r4006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4105, %r231, %r4009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4108, %r231, %r4012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4111, %r231, %r4015;
	// end inline asm
	mov.u16 	%rs412, -14592;
	// begin inline asm
	mov.b32 %r4114, {%rs412, %rs412};
	// end inline asm
	mov.u16 	%rs414, 18176;
	// begin inline asm
	mov.b32 %r4115, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4116, %r4018, %r4114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4119, %r4116, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4122, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4124, %r4021, %r4122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4127, %r4124, %r4123;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4132, %r4024, %r4130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4135, %r4132, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4140, %r4027, %r4138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4143, %r4140, %r4139;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4148, %r4030, %r4146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4151, %r4148, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4156, %r4033, %r4154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4159, %r4156, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4164, %r4036, %r4162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4167, %r4164, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4172, %r4039, %r4170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4175, %r4172, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4180, %r4042, %r4178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4183, %r4180, %r4179;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4188, %r4045, %r4186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4191, %r4188, %r4187;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4196, %r4048, %r4194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4199, %r4196, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4204, %r4051, %r4202;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4207, %r4204, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4212, %r4054, %r4210;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4215, %r4212, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4220, %r4057, %r4218;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4223, %r4220, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4228, %r4060, %r4226;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4231, %r4228, %r4227;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4236, %r4063, %r4234;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4239, %r4236, %r4235;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4244, %r4066, %r4242;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4247, %r4244, %r4243;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4252, %r4069, %r4250;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4255, %r4252, %r4251;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4260, %r4072, %r4258;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4263, %r4260, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4268, %r4075, %r4266;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4271, %r4268, %r4267;
	// end inline asm
	// begin inline asm
	mov.b32 %r4274, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4276, %r4078, %r4274;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4279, %r4276, %r4275;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4284, %r4081, %r4282;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4287, %r4284, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4291, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4292, %r4084, %r4290;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4295, %r4292, %r4291;
	// end inline asm
	// begin inline asm
	mov.b32 %r4298, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4300, %r4087, %r4298;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4303, %r4300, %r4299;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4308, %r4090, %r4306;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4311, %r4308, %r4307;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4315, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4316, %r4093, %r4314;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4319, %r4316, %r4315;
	// end inline asm
	// begin inline asm
	mov.b32 %r4322, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4324, %r4096, %r4322;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4327, %r4324, %r4323;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4331, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4332, %r4099, %r4330;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4335, %r4332, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4338, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4340, %r4102, %r4338;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4343, %r4340, %r4339;
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4348, %r4105, %r4346;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4351, %r4348, %r4347;
	// end inline asm
	// begin inline asm
	mov.b32 %r4354, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4356, %r4108, %r4354;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4359, %r4356, %r4355;
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4363, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4364, %r4111, %r4362;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4367, %r4364, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4373, %r4371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4119, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4378, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4373, %r4378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4382, %r4127, %r4379;
	// end inline asm
	// begin inline asm
	mov.b32 %r4385, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4373, %r4385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4135, %r4386;
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4373, %r4392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4143, %r4393;
	// end inline asm
	mov.u32 	%r4402, 25152;
	// begin inline asm
	prmt.b32 %r4399, %r4375, %r4389, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4403, %r4382, %r4396, %r4402;
	// end inline asm
	shl.b32 	%r4410, %r4403, 4;
	mov.u32 	%r4408, 252645135;
	// begin inline asm
	lop3.b32 %r4407, %r4408, %r4399, %r4410, 202;
	// end inline asm
	xor.b32  	%r16209, %r4407, -2004318072;
	// begin inline asm
	mov.b32 %r4414, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4414, %r4412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4151, %r4413;
	// end inline asm
	// begin inline asm
	mov.b32 %r4419, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4414, %r4419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4423, %r4159, %r4420;
	// end inline asm
	// begin inline asm
	mov.b32 %r4426, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4414, %r4426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4167, %r4427;
	// end inline asm
	// begin inline asm
	mov.b32 %r4433, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4414, %r4433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4437, %r4175, %r4434;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4440, %r4416, %r4430, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4444, %r4423, %r4437, %r4402;
	// end inline asm
	shl.b32 	%r4451, %r4444, 4;
	// begin inline asm
	lop3.b32 %r4448, %r4408, %r4440, %r4451, 202;
	// end inline asm
	xor.b32  	%r16210, %r4448, -2004318072;
	// begin inline asm
	mov.b32 %r4455, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4455, %r4453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4183, %r4454;
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4455, %r4460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4464, %r4191, %r4461;
	// end inline asm
	// begin inline asm
	mov.b32 %r4467, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4455, %r4467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4199, %r4468;
	// end inline asm
	// begin inline asm
	mov.b32 %r4474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4455, %r4474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4478, %r4207, %r4475;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4481, %r4457, %r4471, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4485, %r4464, %r4478, %r4402;
	// end inline asm
	shl.b32 	%r4492, %r4485, 4;
	// begin inline asm
	lop3.b32 %r4489, %r4408, %r4481, %r4492, 202;
	// end inline asm
	xor.b32  	%r16211, %r4489, -2004318072;
	// begin inline asm
	mov.b32 %r4496, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4496, %r4494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4215, %r4495;
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4496, %r4501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4505, %r4223, %r4502;
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4496, %r4508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4231, %r4509;
	// end inline asm
	// begin inline asm
	mov.b32 %r4515, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4496, %r4515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4239, %r4516;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4522, %r4498, %r4512, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4526, %r4505, %r4519, %r4402;
	// end inline asm
	shl.b32 	%r4533, %r4526, 4;
	// begin inline asm
	lop3.b32 %r4530, %r4408, %r4522, %r4533, 202;
	// end inline asm
	xor.b32  	%r16212, %r4530, -2004318072;
	// begin inline asm
	mov.b32 %r4537, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4537, %r4535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4247, %r4536;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4537, %r4542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4255, %r4543;
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4537, %r4549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4263, %r4550;
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4537, %r4556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4271, %r4557;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4563, %r4539, %r4553, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4567, %r4546, %r4560, %r4402;
	// end inline asm
	shl.b32 	%r4574, %r4567, 4;
	// begin inline asm
	lop3.b32 %r4571, %r4408, %r4563, %r4574, 202;
	// end inline asm
	xor.b32  	%r16213, %r4571, -2004318072;
	// begin inline asm
	mov.b32 %r4578, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4578, %r4576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4279, %r4577;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4578, %r4583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4587, %r4287, %r4584;
	// end inline asm
	// begin inline asm
	mov.b32 %r4590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4578, %r4590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4295, %r4591;
	// end inline asm
	// begin inline asm
	mov.b32 %r4597, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4578, %r4597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4303, %r4598;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4604, %r4580, %r4594, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4608, %r4587, %r4601, %r4402;
	// end inline asm
	shl.b32 	%r4615, %r4608, 4;
	// begin inline asm
	lop3.b32 %r4612, %r4408, %r4604, %r4615, 202;
	// end inline asm
	xor.b32  	%r16214, %r4612, -2004318072;
	// begin inline asm
	mov.b32 %r4619, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4619, %r4617;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4311, %r4618;
	// end inline asm
	// begin inline asm
	mov.b32 %r4624, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4625, %r4619, %r4624;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4628, %r4319, %r4625;
	// end inline asm
	// begin inline asm
	mov.b32 %r4631, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4619, %r4631;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4635, %r4327, %r4632;
	// end inline asm
	// begin inline asm
	mov.b32 %r4638, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4619, %r4638;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4335, %r4639;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4645, %r4621, %r4635, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4649, %r4628, %r4642, %r4402;
	// end inline asm
	shl.b32 	%r4656, %r4649, 4;
	// begin inline asm
	lop3.b32 %r4653, %r4408, %r4645, %r4656, 202;
	// end inline asm
	xor.b32  	%r16215, %r4653, -2004318072;
	// begin inline asm
	mov.b32 %r4660, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4660, %r4658;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4343, %r4659;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4660, %r4665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4669, %r4351, %r4666;
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4660, %r4672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4676, %r4359, %r4673;
	// end inline asm
	// begin inline asm
	mov.b32 %r4679, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4680, %r4660, %r4679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4683, %r4367, %r4680;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4686, %r4662, %r4676, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4690, %r4669, %r4683, %r4402;
	// end inline asm
	shl.b32 	%r4697, %r4690, 4;
	// begin inline asm
	lop3.b32 %r4694, %r4408, %r4686, %r4697, 202;
	// end inline asm
	xor.b32  	%r16216, %r4694, -2004318072;
	setp.eq.s32 	%p328, %r16414, 0;
	selp.b32 	%r16217, 0, 4161, %p328;
	add.s32 	%r16218, %r129, %r16217;
	mul.wide.u32 	%rd115, %r16218, 4;
	add.s64 	%rd116, %rd53, %rd115;
	st.shared.u32 	[%rd116], %r16209;
	add.s32 	%r16219, %r130, %r16217;
	mul.wide.u32 	%rd117, %r16219, 4;
	add.s64 	%rd118, %rd53, %rd117;
	st.shared.u32 	[%rd118], %r16210;
	add.s32 	%r16220, %r131, %r16217;
	mul.wide.u32 	%rd119, %r16220, 4;
	add.s64 	%rd120, %rd53, %rd119;
	st.shared.u32 	[%rd120], %r16211;
	add.s32 	%r16221, %r132, %r16217;
	mul.wide.u32 	%rd121, %r16221, 4;
	add.s64 	%rd122, %rd53, %rd121;
	st.shared.u32 	[%rd122], %r16212;
	add.s32 	%r16222, %r133, %r16217;
	mul.wide.u32 	%rd123, %r16222, 4;
	add.s64 	%rd124, %rd53, %rd123;
	st.shared.u32 	[%rd124], %r16213;
	add.s32 	%r16223, %r134, %r16217;
	mul.wide.u32 	%rd125, %r16223, 4;
	add.s64 	%rd126, %rd53, %rd125;
	st.shared.u32 	[%rd126], %r16214;
	add.s32 	%r16224, %r135, %r16217;
	mul.wide.u32 	%rd127, %r16224, 4;
	add.s64 	%rd128, %rd53, %rd127;
	st.shared.u32 	[%rd128], %r16215;
	add.s32 	%r16225, %r136, %r16217;
	mul.wide.u32 	%rd129, %r16225, 4;
	add.s64 	%rd130, %rd53, %rd129;
	st.shared.u32 	[%rd130], %r16216;
	ld.shared.u32 	%r16365, [%rd100];
	ld.shared.u32 	%r16366, [%rd102];
	ld.shared.u32 	%r16367, [%rd104];
	ld.shared.u32 	%r16368, [%rd106];
	ld.shared.u32 	%r16377, [%rd108];
	ld.shared.u32 	%r16378, [%rd110];
	ld.shared.u32 	%r16379, [%rd112];
	ld.shared.u32 	%r16380, [%rd114];
	// begin inline asm
	mov.b32 %r4703, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4702, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r4700, %r885, %r4702, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4705, %r4703, %r4704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4708, %r4700, %r4705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4711, %r896, %r4702, %r4714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4716, %r4714, %r4715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4719, %r4711, %r4716;
	// end inline asm
	shr.u32 	%r4724, %r4702, 8;
	// begin inline asm
	lop3.b32 %r4722, %r885, %r4724, %r4703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4726, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4727, %r4703, %r4726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4730, %r4722, %r4727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4733, %r896, %r4724, %r4714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4714, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	// begin inline asm
	mov.b32 %r4749, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4748, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r4746, %r885, %r4748, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4749, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r896, %r4748, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4760, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	shr.u32 	%r4770, %r4748, 8;
	// begin inline asm
	lop3.b32 %r4768, %r885, %r4770, %r4749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4773, %r4749, %r4772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4776, %r4768, %r4773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r896, %r4770, %r4760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4760, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4794, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r4792, %r885, %r4794, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4795, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r896, %r4794, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4806, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	shr.u32 	%r4816, %r4794, 8;
	// begin inline asm
	lop3.b32 %r4814, %r885, %r4816, %r4795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4819, %r4795, %r4818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4822, %r4814, %r4819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4825, %r896, %r4816, %r4806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4806, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4852, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4840, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r4838, %r885, %r4840, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4843, %r4841, %r4842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4846, %r4838, %r4843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4849, %r896, %r4840, %r4852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4854, %r4852, %r4853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4857, %r4849, %r4854;
	// end inline asm
	shr.u32 	%r4862, %r4840, 8;
	// begin inline asm
	lop3.b32 %r4860, %r885, %r4862, %r4841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4865, %r4841, %r4864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4868, %r4860, %r4865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4871, %r896, %r4862, %r4852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4875, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4876, %r4852, %r4875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4879, %r4871, %r4876;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4898, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4886, %r16377, -2004318072;
	// begin inline asm
	lop3.b32 %r4884, %r885, %r4886, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4889, %r4887, %r4888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4892, %r4884, %r4889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4895, %r896, %r4886, %r4898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4900, %r4898, %r4899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4903, %r4895, %r4900;
	// end inline asm
	shr.u32 	%r4908, %r4886, 8;
	// begin inline asm
	lop3.b32 %r4906, %r885, %r4908, %r4887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4911, %r4887, %r4910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4914, %r4906, %r4911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4917, %r896, %r4908, %r4898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4922, %r4898, %r4921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4925, %r4917, %r4922;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4944, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4932, %r16378, -2004318072;
	// begin inline asm
	lop3.b32 %r4930, %r885, %r4932, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4935, %r4933, %r4934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4938, %r4930, %r4935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4941, %r896, %r4932, %r4944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4946, %r4944, %r4945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4949, %r4941, %r4946;
	// end inline asm
	shr.u32 	%r4954, %r4932, 8;
	// begin inline asm
	lop3.b32 %r4952, %r885, %r4954, %r4933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4957, %r4933, %r4956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4960, %r4952, %r4957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4963, %r896, %r4954, %r4944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4968, %r4944, %r4967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4971, %r4963, %r4968;
	// end inline asm
	// begin inline asm
	mov.b32 %r4979, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4990, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4978, %r16379, -2004318072;
	// begin inline asm
	lop3.b32 %r4976, %r885, %r4978, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4981, %r4979, %r4980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4984, %r4976, %r4981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4987, %r896, %r4978, %r4990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4992, %r4990, %r4991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4995, %r4987, %r4992;
	// end inline asm
	shr.u32 	%r5000, %r4978, 8;
	// begin inline asm
	lop3.b32 %r4998, %r885, %r5000, %r4979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5003, %r4979, %r5002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5006, %r4998, %r5003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5009, %r896, %r5000, %r4990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5013, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5014, %r4990, %r5013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5017, %r5009, %r5014;
	// end inline asm
	// begin inline asm
	mov.b32 %r5025, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5036, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r5024, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r5022, %r885, %r5024, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5027, %r5025, %r5026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5030, %r5022, %r5027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5033, %r896, %r5024, %r5036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5038, %r5036, %r5037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5041, %r5033, %r5038;
	// end inline asm
	shr.u32 	%r5046, %r5024, 8;
	// begin inline asm
	lop3.b32 %r5044, %r885, %r5046, %r5025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5049, %r5025, %r5048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5052, %r5044, %r5049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5055, %r896, %r5046, %r5036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5060, %r5036, %r5059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5063, %r5055, %r5060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r4938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r4949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5176, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5178, %r5176, %r4960;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5181, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5183, %r5181, %r4971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5186, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5188, %r5186, %r4984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5191, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5193, %r5191, %r4995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5196, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5198, %r5196, %r5006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5201, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5203, %r5201, %r5017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5206, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5208, %r5206, %r5030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5211, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5213, %r5211, %r5041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5216, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5218, %r5216, %r5052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5221, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5223, %r5221, %r5063;
	// end inline asm
	// begin inline asm
	mov.b32 %r5231, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5242, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5228, %r885, %r1910, %r5231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5233, %r5231, %r5232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5236, %r5228, %r5233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5239, %r896, %r1910, %r5242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5244, %r5242, %r5243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5247, %r5239, %r5244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5250, %r885, %r1932, %r5231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5254, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5255, %r5231, %r5254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5258, %r5250, %r5255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5261, %r896, %r1932, %r5242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5265, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5266, %r5242, %r5265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5269, %r5261, %r5266;
	// end inline asm
	// begin inline asm
	mov.b32 %r5277, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5288, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5274, %r885, %r1956, %r5277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5279, %r5277, %r5278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5282, %r5274, %r5279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5285, %r896, %r1956, %r5288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5290, %r5288, %r5289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5293, %r5285, %r5290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5296, %r885, %r1978, %r5277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5300, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5301, %r5277, %r5300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5304, %r5296, %r5301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5307, %r896, %r1978, %r5288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5311, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5312, %r5288, %r5311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5315, %r5307, %r5312;
	// end inline asm
	// begin inline asm
	mov.b32 %r5323, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5334, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5320, %r885, %r2002, %r5323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5325, %r5323, %r5324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5328, %r5320, %r5325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5331, %r896, %r2002, %r5334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5336, %r5334, %r5335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5339, %r5331, %r5336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5342, %r885, %r2024, %r5323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5346, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5347, %r5323, %r5346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5350, %r5342, %r5347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5353, %r896, %r2024, %r5334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5357, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5358, %r5334, %r5357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5361, %r5353, %r5358;
	// end inline asm
	// begin inline asm
	mov.b32 %r5369, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5380, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5366, %r885, %r2048, %r5369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5371, %r5369, %r5370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5374, %r5366, %r5371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5377, %r896, %r2048, %r5380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5382, %r5380, %r5381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5385, %r5377, %r5382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5388, %r885, %r2070, %r5369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5392, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5393, %r5369, %r5392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5396, %r5388, %r5393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5399, %r896, %r2070, %r5380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5403, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5404, %r5380, %r5403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5407, %r5399, %r5404;
	// end inline asm
	// begin inline asm
	mov.b32 %r5415, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5426, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5412, %r885, %r2094, %r5415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5416, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5417, %r5415, %r5416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5420, %r5412, %r5417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5423, %r896, %r2094, %r5426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5428, %r5426, %r5427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5431, %r5423, %r5428;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5434, %r885, %r2116, %r5415, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5438, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5439, %r5415, %r5438;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5442, %r5434, %r5439;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5445, %r896, %r2116, %r5426, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5449, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5450, %r5426, %r5449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5453, %r5445, %r5450;
	// end inline asm
	// begin inline asm
	mov.b32 %r5461, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5472, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5458, %r885, %r2140, %r5461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5463, %r5461, %r5462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5466, %r5458, %r5463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5469, %r896, %r2140, %r5472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5474, %r5472, %r5473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5477, %r5469, %r5474;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5480, %r885, %r2162, %r5461, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5484, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5485, %r5461, %r5484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5488, %r5480, %r5485;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5491, %r896, %r2162, %r5472, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5495, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5496, %r5472, %r5495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5499, %r5491, %r5496;
	// end inline asm
	// begin inline asm
	mov.b32 %r5507, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5518, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5504, %r885, %r2186, %r5507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5509, %r5507, %r5508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5512, %r5504, %r5509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5515, %r896, %r2186, %r5518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5519, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5520, %r5518, %r5519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5523, %r5515, %r5520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5526, %r885, %r2208, %r5507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5530, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5531, %r5507, %r5530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5534, %r5526, %r5531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5537, %r896, %r2208, %r5518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5541, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5542, %r5518, %r5541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5545, %r5537, %r5542;
	// end inline asm
	// begin inline asm
	mov.b32 %r5553, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5564, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5550, %r885, %r2232, %r5553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5554, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5555, %r5553, %r5554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5558, %r5550, %r5555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5561, %r896, %r2232, %r5564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5565, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5566, %r5564, %r5565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5569, %r5561, %r5566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5572, %r885, %r2254, %r5553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5576, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5577, %r5553, %r5576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5580, %r5572, %r5577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5583, %r896, %r2254, %r5564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5587, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5588, %r5564, %r5587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5591, %r5583, %r5588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r303, %r5236, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r303, %r5247, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r303, %r5258, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r303, %r5269, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r303, %r5282, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r303, %r5293, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r303, %r5304, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r303, %r5315, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r303, %r5328, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r303, %r5339, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r303, %r5350, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r303, %r5361, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r303, %r5374, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r303, %r5385, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r303, %r5396, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r303, %r5407, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r321, %r5420, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r321, %r5431, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r321, %r5442, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r321, %r5453, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r321, %r5466, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r321, %r5477, %r5173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r321, %r5488, %r5178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r321, %r5499, %r5183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5690, %r321, %r5512, %r5188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5694, %r321, %r5523, %r5193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5698, %r321, %r5534, %r5198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5702, %r321, %r5545, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5706, %r321, %r5558, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5710, %r321, %r5569, %r5213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5714, %r321, %r5580, %r5218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5718, %r321, %r5591, %r5223;
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5738, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5724, %r885, %r2470, %r5727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5729, %r5727, %r5728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5732, %r5724, %r5729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5735, %r896, %r2470, %r5738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5740, %r5738, %r5739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5743, %r5735, %r5740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5746, %r885, %r2492, %r5727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5751, %r5727, %r5750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5754, %r5746, %r5751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5757, %r896, %r2492, %r5738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5762, %r5738, %r5761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5765, %r5757, %r5762;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5784, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5770, %r885, %r2516, %r5773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5773, %r5774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5778, %r5770, %r5775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5781, %r896, %r2516, %r5784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5786, %r5784, %r5785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5789, %r5781, %r5786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5792, %r885, %r2538, %r5773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5797, %r5773, %r5796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5800, %r5792, %r5797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5803, %r896, %r2538, %r5784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5784, %r5807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5811, %r5803, %r5808;
	// end inline asm
	// begin inline asm
	mov.b32 %r5819, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5816, %r885, %r2562, %r5819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5819, %r5820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5824, %r5816, %r5821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5827, %r896, %r2562, %r5830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5832, %r5830, %r5831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5835, %r5827, %r5832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5838, %r885, %r2584, %r5819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5843, %r5819, %r5842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5846, %r5838, %r5843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5849, %r896, %r2584, %r5830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5854, %r5830, %r5853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5857, %r5849, %r5854;
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5876, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5862, %r885, %r2608, %r5865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5865, %r5866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5870, %r5862, %r5867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5873, %r896, %r2608, %r5876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5878, %r5876, %r5877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5881, %r5873, %r5878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5884, %r885, %r2630, %r5865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5865, %r5888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5892, %r5884, %r5889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5895, %r896, %r2630, %r5876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5876, %r5899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5903, %r5895, %r5900;
	// end inline asm
	// begin inline asm
	mov.b32 %r5911, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5922, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5908, %r885, %r2654, %r5911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5911, %r5912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5916, %r5908, %r5913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5919, %r896, %r2654, %r5922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5922, %r5923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5927, %r5919, %r5924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5930, %r885, %r2676, %r5911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5935, %r5911, %r5934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5938, %r5930, %r5935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5941, %r896, %r2676, %r5922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5922, %r5945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5949, %r5941, %r5946;
	// end inline asm
	// begin inline asm
	mov.b32 %r5957, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5968, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5954, %r885, %r2700, %r5957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5957, %r5958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5962, %r5954, %r5959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5965, %r896, %r2700, %r5968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5968, %r5969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5973, %r5965, %r5970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5976, %r885, %r2722, %r5957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5957, %r5980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5984, %r5976, %r5981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5987, %r896, %r2722, %r5968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5968, %r5991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5995, %r5987, %r5992;
	// end inline asm
	// begin inline asm
	mov.b32 %r6003, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6000, %r885, %r2746, %r6003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r6003, %r6004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6008, %r6000, %r6005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6011, %r896, %r2746, %r6014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r6014, %r6015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6019, %r6011, %r6016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6022, %r885, %r2768, %r6003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6027, %r6003, %r6026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6030, %r6022, %r6027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6033, %r896, %r2768, %r6014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6038, %r6014, %r6037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6041, %r6033, %r6038;
	// end inline asm
	// begin inline asm
	mov.b32 %r6049, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6060, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6046, %r885, %r2792, %r6049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6051, %r6049, %r6050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6054, %r6046, %r6051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6057, %r896, %r2792, %r6060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6061, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6062, %r6060, %r6061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6065, %r6057, %r6062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6068, %r885, %r2814, %r6049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6073, %r6049, %r6072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6076, %r6068, %r6073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6079, %r896, %r2814, %r6060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6084, %r6060, %r6083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6087, %r6079, %r6084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6090, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6092, %r6090, %r5732, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6096, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6098, %r6096, %r5743, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6102, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6104, %r6102, %r5754, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6110, %r6108, %r5765, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6116, %r6114, %r5778, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6122, %r6120, %r5789, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6128, %r6126, %r5800, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6134, %r6132, %r5811, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6140, %r6138, %r5824, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6146, %r6144, %r5835, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6152, %r6150, %r5846, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6158, %r6156, %r5857, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6164, %r6162, %r5870, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6170, %r6168, %r5881, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6176, %r6174, %r5892, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6182, %r6180, %r5903, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6186, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6188, %r6186, %r5916, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6194, %r6192, %r5927, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6200, %r6198, %r5938, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6204, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6206, %r6204, %r5949, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6210, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6212, %r6210, %r5962, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6216, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6218, %r6216, %r5973, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6222, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6224, %r6222, %r5984, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6230, %r6228, %r5995, %r5686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6234, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6236, %r6234, %r6008, %r5690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6240, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6242, %r6240, %r6019, %r5694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6246, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6248, %r6246, %r6030, %r5698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6252, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6254, %r6252, %r6041, %r5702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6260, %r6258, %r6054, %r5706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6264, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6266, %r6264, %r6065, %r5710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6270, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6272, %r6270, %r6076, %r5714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6276, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6278, %r6276, %r6087, %r5718;
	// end inline asm
	// begin inline asm
	mov.b32 %r6287, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6298, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6284, %r885, %r886, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6289, %r6287, %r6288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6292, %r6284, %r6289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6295, %r896, %r886, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6300, %r6298, %r6299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6303, %r6295, %r6300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r885, %r908, %r6287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6287, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r896, %r908, %r6298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6298, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	mov.b32 %r6333, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6344, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6330, %r885, %r932, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6335, %r6333, %r6334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6338, %r6330, %r6335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r896, %r932, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6344, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r885, %r954, %r6333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6333, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r896, %r954, %r6344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6344, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	mov.b32 %r6379, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6390, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6376, %r885, %r978, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6381, %r6379, %r6380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6384, %r6376, %r6381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6387, %r896, %r978, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6392, %r6390, %r6391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6395, %r6387, %r6392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r885, %r1000, %r6379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6379, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r896, %r1000, %r6390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6390, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	mov.b32 %r6425, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6436, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6422, %r885, %r1024, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6427, %r6425, %r6426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6430, %r6422, %r6427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r896, %r1024, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6436, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r885, %r1046, %r6425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6425, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r896, %r1046, %r6436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6436, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	mov.b32 %r6471, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6482, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6468, %r885, %r1070, %r6471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6473, %r6471, %r6472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6476, %r6468, %r6473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6479, %r896, %r1070, %r6482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6484, %r6482, %r6483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6487, %r6479, %r6484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6490, %r885, %r1092, %r6471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6494, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6495, %r6471, %r6494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6498, %r6490, %r6495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6501, %r896, %r1092, %r6482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6506, %r6482, %r6505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6509, %r6501, %r6506;
	// end inline asm
	// begin inline asm
	mov.b32 %r6517, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6528, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6514, %r885, %r1116, %r6517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6519, %r6517, %r6518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6522, %r6514, %r6519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6525, %r896, %r1116, %r6528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6530, %r6528, %r6529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6533, %r6525, %r6530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6536, %r885, %r1138, %r6517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6540, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6541, %r6517, %r6540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6544, %r6536, %r6541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6547, %r896, %r1138, %r6528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6552, %r6528, %r6551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6555, %r6547, %r6552;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6560, %r885, %r1162, %r6563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6565, %r6563, %r6564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6568, %r6560, %r6565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r896, %r1162, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6574, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6582, %r885, %r1184, %r6563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6586, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6587, %r6563, %r6586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6590, %r6582, %r6587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6593, %r896, %r1184, %r6574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6598, %r6574, %r6597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6601, %r6593, %r6598;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6620, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6606, %r885, %r1208, %r6609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6610, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6611, %r6609, %r6610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6614, %r6606, %r6611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6617, %r896, %r1208, %r6620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6621, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6622, %r6620, %r6621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6625, %r6617, %r6622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6628, %r885, %r1230, %r6609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6632, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6633, %r6609, %r6632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6636, %r6628, %r6633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6639, %r896, %r1230, %r6620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6643, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6644, %r6620, %r6643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6647, %r6639, %r6644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r375, %r6292, %r6092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r375, %r6303, %r6098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r375, %r6314, %r6104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r375, %r6325, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r375, %r6338, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r375, %r6349, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r375, %r6360, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r375, %r6371, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r375, %r6384, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r375, %r6395, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r375, %r6406, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r375, %r6417, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r375, %r6430, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r375, %r6441, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r375, %r6452, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r375, %r6463, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r393, %r6476, %r6188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r393, %r6487, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r393, %r6498, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r393, %r6509, %r6206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r393, %r6522, %r6212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r393, %r6533, %r6218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r393, %r6544, %r6224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r393, %r6555, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r393, %r6568, %r6236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r393, %r6579, %r6242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r393, %r6590, %r6248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r393, %r6601, %r6254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r393, %r6614, %r6260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r393, %r6625, %r6266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r393, %r6636, %r6272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r393, %r6647, %r6278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6778, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6780, %r6778, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r457, %r6785, %r6780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6787, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6789, %r6787, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r457, %r6794, %r6789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6796, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6798, %r6796, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r457, %r6803, %r6798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6805, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6807, %r6805, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r457, %r6812, %r6807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6814, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6816, %r6814, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r457, %r6821, %r6816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6823, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6825, %r6823, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r457, %r6830, %r6825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6832, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6834, %r6832, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r457, %r6839, %r6834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6841, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6843, %r6841, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r457, %r6848, %r6843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6850, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r6850, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r460, %r6857, %r6852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6859, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r6859, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r460, %r6866, %r6861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6868, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r6868, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r460, %r6875, %r6870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6877, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r6877, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r460, %r6884, %r6879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6886, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6888, %r6886, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r460, %r6893, %r6888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6895, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r6895, %r6899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r460, %r6902, %r6897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6904, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6906, %r6904, %r6908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r460, %r6911, %r6906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6913, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r6913, %r6917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r460, %r6920, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r463, %r6785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r457, %r6782, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r463, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r457, %r6791, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r463, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r457, %r6800, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r463, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r457, %r6809, %r6943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r463, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r457, %r6818, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r463, %r6830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r457, %r6827, %r6957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r463, %r6839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r457, %r6836, %r6964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r463, %r6848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r457, %r6845, %r6971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r466, %r6857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r460, %r6854, %r6978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r466, %r6866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r460, %r6863, %r6985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r466, %r6875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r460, %r6872, %r6992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r466, %r6884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r460, %r6881, %r6999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r466, %r6893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r460, %r6890, %r7006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7013, %r466, %r6902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r460, %r6899, %r7013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7020, %r466, %r6911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r460, %r6908, %r7020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7027, %r466, %r6920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r460, %r6917, %r7027;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7201, %r7198}, {%r512, %r518, %r515, %r521}, {%r6783, %r6925}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7210, %r7207}, {%r512, %r518, %r515, %r521}, {%r6792, %r6932}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r512, %r518, %r515, %r521}, {%r6801, %r6939}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r512, %r518, %r515, %r521}, {%r6810, %r6946}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r512, %r518, %r515, %r521}, {%r6819, %r6953}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r512, %r518, %r515, %r521}, {%r6828, %r6960}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7255, %r7252}, {%r512, %r518, %r515, %r521}, {%r6837, %r6967}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7264, %r7261}, {%r512, %r518, %r515, %r521}, {%r6846, %r6974}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7273, %r7270}, {%r512, %r518, %r515, %r521}, {%r6855, %r6981}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7282, %r7279}, {%r512, %r518, %r515, %r521}, {%r6864, %r6988}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7291, %r7288}, {%r512, %r518, %r515, %r521}, {%r6873, %r6995}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7300, %r7297}, {%r512, %r518, %r515, %r521}, {%r6882, %r7002}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7306}, {%r512, %r518, %r515, %r521}, {%r6891, %r7009}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7315}, {%r512, %r518, %r515, %r521}, {%r6900, %r7016}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7327, %r7324}, {%r512, %r518, %r515, %r521}, {%r6909, %r7023}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7336, %r7333}, {%r512, %r518, %r515, %r521}, {%r6918, %r7030}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7194, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7196, %r7194, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7199, %r562, %r7201, %r7196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7203, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r7203, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r562, %r7210, %r7205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r562, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r562, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r562, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r562, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7248, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r7248, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r562, %r7255, %r7250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7257, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r7257, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r562, %r7264, %r7259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7266, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r7266, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r562, %r7273, %r7268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7275, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r7275, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r562, %r7282, %r7277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7284, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r7284, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r562, %r7291, %r7286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7293, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r7293, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r562, %r7300, %r7295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7302, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r7302, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r562, %r7309, %r7304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7311, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r7311, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r562, %r7318, %r7313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7320, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r7320, %r7324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r562, %r7327, %r7322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7329, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r7329, %r7333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r562, %r7336, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r565, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r562, %r7198, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r565, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r562, %r7207, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r565, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r562, %r7216, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r565, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r562, %r7225, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r565, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r562, %r7234, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r565, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r562, %r7243, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r565, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r562, %r7252, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r565, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r562, %r7261, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r565, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r562, %r7270, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r565, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r562, %r7279, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r565, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r562, %r7288, %r7408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r565, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7418, %r562, %r7297, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r565, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7425, %r562, %r7306, %r7422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r565, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7432, %r562, %r7315, %r7429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r565, %r7327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7439, %r562, %r7324, %r7436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7443, %r565, %r7336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7446, %r562, %r7333, %r7443;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7739, %r7742}, {%r600, %r606, %r603, %r609}, {%r7199, %r7341}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7745, %r7748}, {%r600, %r606, %r603, %r609}, {%r7208, %r7348}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7751, %r7754}, {%r600, %r606, %r603, %r609}, {%r7217, %r7355}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7757, %r7760}, {%r600, %r606, %r603, %r609}, {%r7226, %r7362}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7763, %r7766}, {%r600, %r606, %r603, %r609}, {%r7235, %r7369}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7769, %r7772}, {%r600, %r606, %r603, %r609}, {%r7244, %r7376}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7775, %r7778}, {%r600, %r606, %r603, %r609}, {%r7253, %r7383}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7781, %r7784}, {%r600, %r606, %r603, %r609}, {%r7262, %r7390}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7740, %r7743}, {%r600, %r606, %r603, %r609}, {%r7271, %r7397}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7746, %r7749}, {%r600, %r606, %r603, %r609}, {%r7280, %r7404}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7752, %r7755}, {%r600, %r606, %r603, %r609}, {%r7289, %r7411}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7758, %r7761}, {%r600, %r606, %r603, %r609}, {%r7298, %r7418}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7764, %r7767}, {%r600, %r606, %r603, %r609}, {%r7307, %r7425}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7770, %r7773}, {%r600, %r606, %r603, %r609}, {%r7316, %r7432}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7776, %r7779}, {%r600, %r606, %r603, %r609}, {%r7325, %r7439}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7782, %r7785}, {%r600, %r606, %r603, %r609}, {%r7334, %r7446}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7768, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7771, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7780, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7783, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7786, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7789, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7792, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7795, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7798, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7801, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7804, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7807, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7810, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7813, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7816, %r7769, %r7770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7819, %r7772, %r7773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7822, %r7775, %r7776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7825, %r7778, %r7779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7828, %r7781, %r7782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7831, %r7784, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r230, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r230, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r230, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r230, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r230, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r230, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r230, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r230, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r230, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r230, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r230, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r230, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r230, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r230, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r230, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r230, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r231, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r231, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r231, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r231, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r231, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r231, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r231, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r231, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r231, %r7810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7909, %r231, %r7813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7912, %r231, %r7816;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7915, %r231, %r7819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7918, %r231, %r7822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7921, %r231, %r7825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7924, %r231, %r7828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7927, %r231, %r7831;
	// end inline asm
	// begin inline asm
	mov.b32 %r7930, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7932, %r7834, %r7930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7935, %r7932, %r7931;
	// end inline asm
	// begin inline asm
	mov.b32 %r7938, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7940, %r7837, %r7938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7943, %r7940, %r7939;
	// end inline asm
	// begin inline asm
	mov.b32 %r7946, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7948, %r7840, %r7946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7951, %r7948, %r7947;
	// end inline asm
	// begin inline asm
	mov.b32 %r7954, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7956, %r7843, %r7954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7959, %r7956, %r7955;
	// end inline asm
	// begin inline asm
	mov.b32 %r7962, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7964, %r7846, %r7962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7967, %r7964, %r7963;
	// end inline asm
	// begin inline asm
	mov.b32 %r7970, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7972, %r7849, %r7970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7975, %r7972, %r7971;
	// end inline asm
	// begin inline asm
	mov.b32 %r7978, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7980, %r7852, %r7978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7983, %r7980, %r7979;
	// end inline asm
	// begin inline asm
	mov.b32 %r7986, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7988, %r7855, %r7986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7991, %r7988, %r7987;
	// end inline asm
	// begin inline asm
	mov.b32 %r7994, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7996, %r7858, %r7994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7999, %r7996, %r7995;
	// end inline asm
	// begin inline asm
	mov.b32 %r8002, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8004, %r7861, %r8002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8007, %r8004, %r8003;
	// end inline asm
	// begin inline asm
	mov.b32 %r8010, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8012, %r7864, %r8010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8015, %r8012, %r8011;
	// end inline asm
	// begin inline asm
	mov.b32 %r8018, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8020, %r7867, %r8018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8023, %r8020, %r8019;
	// end inline asm
	// begin inline asm
	mov.b32 %r8026, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8028, %r7870, %r8026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8031, %r8028, %r8027;
	// end inline asm
	// begin inline asm
	mov.b32 %r8034, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8036, %r7873, %r8034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8039, %r8036, %r8035;
	// end inline asm
	// begin inline asm
	mov.b32 %r8042, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8044, %r7876, %r8042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8047, %r8044, %r8043;
	// end inline asm
	// begin inline asm
	mov.b32 %r8050, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8052, %r7879, %r8050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8055, %r8052, %r8051;
	// end inline asm
	// begin inline asm
	mov.b32 %r8058, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8060, %r7882, %r8058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8063, %r8060, %r8059;
	// end inline asm
	// begin inline asm
	mov.b32 %r8066, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8068, %r7885, %r8066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8071, %r8068, %r8067;
	// end inline asm
	// begin inline asm
	mov.b32 %r8074, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8076, %r7888, %r8074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8079, %r8076, %r8075;
	// end inline asm
	// begin inline asm
	mov.b32 %r8082, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8084, %r7891, %r8082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8087, %r8084, %r8083;
	// end inline asm
	// begin inline asm
	mov.b32 %r8090, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8092, %r7894, %r8090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8095, %r8092, %r8091;
	// end inline asm
	// begin inline asm
	mov.b32 %r8098, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8099, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8100, %r7897, %r8098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8103, %r8100, %r8099;
	// end inline asm
	// begin inline asm
	mov.b32 %r8106, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8107, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8108, %r7900, %r8106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8111, %r8108, %r8107;
	// end inline asm
	// begin inline asm
	mov.b32 %r8114, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8116, %r7903, %r8114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8119, %r8116, %r8115;
	// end inline asm
	// begin inline asm
	mov.b32 %r8122, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8123, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8124, %r7906, %r8122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8127, %r8124, %r8123;
	// end inline asm
	// begin inline asm
	mov.b32 %r8130, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8131, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8132, %r7909, %r8130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8135, %r8132, %r8131;
	// end inline asm
	// begin inline asm
	mov.b32 %r8138, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8140, %r7912, %r8138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8143, %r8140, %r8139;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8147, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8148, %r7915, %r8146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8151, %r8148, %r8147;
	// end inline asm
	// begin inline asm
	mov.b32 %r8154, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8155, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8156, %r7918, %r8154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8159, %r8156, %r8155;
	// end inline asm
	// begin inline asm
	mov.b32 %r8162, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8164, %r7921, %r8162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8167, %r8164, %r8163;
	// end inline asm
	// begin inline asm
	mov.b32 %r8170, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8172, %r7924, %r8170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8175, %r8172, %r8171;
	// end inline asm
	// begin inline asm
	mov.b32 %r8178, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8179, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8180, %r7927, %r8178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8183, %r8180, %r8179;
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r8189, %r8187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r7935, %r8188;
	// end inline asm
	// begin inline asm
	mov.b32 %r8194, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r8189, %r8194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8198, %r7943, %r8195;
	// end inline asm
	// begin inline asm
	mov.b32 %r8201, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r8189, %r8201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8205, %r7951, %r8202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8208, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r8189, %r8208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8212, %r7959, %r8209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8215, %r8191, %r8205, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8219, %r8198, %r8212, %r4402;
	// end inline asm
	shl.b32 	%r8226, %r8219, 4;
	// begin inline asm
	lop3.b32 %r8223, %r4408, %r8215, %r8226, 202;
	// end inline asm
	xor.b32  	%r16226, %r8223, -2004318072;
	// begin inline asm
	mov.b32 %r8230, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r8230, %r8228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r7967, %r8229;
	// end inline asm
	// begin inline asm
	mov.b32 %r8235, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r8230, %r8235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8239, %r7975, %r8236;
	// end inline asm
	// begin inline asm
	mov.b32 %r8242, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r8230, %r8242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8246, %r7983, %r8243;
	// end inline asm
	// begin inline asm
	mov.b32 %r8249, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r8230, %r8249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8253, %r7991, %r8250;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8256, %r8232, %r8246, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8260, %r8239, %r8253, %r4402;
	// end inline asm
	shl.b32 	%r8267, %r8260, 4;
	// begin inline asm
	lop3.b32 %r8264, %r4408, %r8256, %r8267, 202;
	// end inline asm
	xor.b32  	%r16227, %r8264, -2004318072;
	// begin inline asm
	mov.b32 %r8271, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8269, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8271, %r8269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r7999, %r8270;
	// end inline asm
	// begin inline asm
	mov.b32 %r8276, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8271, %r8276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8280, %r8007, %r8277;
	// end inline asm
	// begin inline asm
	mov.b32 %r8283, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8271, %r8283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8287, %r8015, %r8284;
	// end inline asm
	// begin inline asm
	mov.b32 %r8290, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8271, %r8290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8294, %r8023, %r8291;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8297, %r8273, %r8287, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8301, %r8280, %r8294, %r4402;
	// end inline asm
	shl.b32 	%r8308, %r8301, 4;
	// begin inline asm
	lop3.b32 %r8305, %r4408, %r8297, %r8308, 202;
	// end inline asm
	xor.b32  	%r16228, %r8305, -2004318072;
	// begin inline asm
	mov.b32 %r8312, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8310, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8312, %r8310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8031, %r8311;
	// end inline asm
	// begin inline asm
	mov.b32 %r8317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8312, %r8317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8321, %r8039, %r8318;
	// end inline asm
	// begin inline asm
	mov.b32 %r8324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8312, %r8324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8328, %r8047, %r8325;
	// end inline asm
	// begin inline asm
	mov.b32 %r8331, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8312, %r8331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8335, %r8055, %r8332;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8338, %r8314, %r8328, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8342, %r8321, %r8335, %r4402;
	// end inline asm
	shl.b32 	%r8349, %r8342, 4;
	// begin inline asm
	lop3.b32 %r8346, %r4408, %r8338, %r8349, 202;
	// end inline asm
	xor.b32  	%r16229, %r8346, -2004318072;
	// begin inline asm
	mov.b32 %r8353, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8351, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8353, %r8351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8063, %r8352;
	// end inline asm
	// begin inline asm
	mov.b32 %r8358, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8353, %r8358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8362, %r8071, %r8359;
	// end inline asm
	// begin inline asm
	mov.b32 %r8365, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8353, %r8365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8369, %r8079, %r8366;
	// end inline asm
	// begin inline asm
	mov.b32 %r8372, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8353, %r8372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8376, %r8087, %r8373;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8379, %r8355, %r8369, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8383, %r8362, %r8376, %r4402;
	// end inline asm
	shl.b32 	%r8390, %r8383, 4;
	// begin inline asm
	lop3.b32 %r8387, %r4408, %r8379, %r8390, 202;
	// end inline asm
	xor.b32  	%r16230, %r8387, -2004318072;
	// begin inline asm
	mov.b32 %r8394, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8392, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8394, %r8392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8095, %r8393;
	// end inline asm
	// begin inline asm
	mov.b32 %r8399, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8394, %r8399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8403, %r8103, %r8400;
	// end inline asm
	// begin inline asm
	mov.b32 %r8406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8394, %r8406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8410, %r8111, %r8407;
	// end inline asm
	// begin inline asm
	mov.b32 %r8413, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8394, %r8413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8417, %r8119, %r8414;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8420, %r8396, %r8410, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8424, %r8403, %r8417, %r4402;
	// end inline asm
	shl.b32 	%r8431, %r8424, 4;
	// begin inline asm
	lop3.b32 %r8428, %r4408, %r8420, %r8431, 202;
	// end inline asm
	xor.b32  	%r16231, %r8428, -2004318072;
	// begin inline asm
	mov.b32 %r8435, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8433, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8434, %r8435, %r8433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8127, %r8434;
	// end inline asm
	// begin inline asm
	mov.b32 %r8440, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8441, %r8435, %r8440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8444, %r8135, %r8441;
	// end inline asm
	// begin inline asm
	mov.b32 %r8447, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8435, %r8447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8451, %r8143, %r8448;
	// end inline asm
	// begin inline asm
	mov.b32 %r8454, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8455, %r8435, %r8454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8458, %r8151, %r8455;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8461, %r8437, %r8451, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8465, %r8444, %r8458, %r4402;
	// end inline asm
	shl.b32 	%r8472, %r8465, 4;
	// begin inline asm
	lop3.b32 %r8469, %r4408, %r8461, %r8472, 202;
	// end inline asm
	xor.b32  	%r16232, %r8469, -2004318072;
	// begin inline asm
	mov.b32 %r8476, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8476, %r8474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8478, %r8159, %r8475;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8476, %r8481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8485, %r8167, %r8482;
	// end inline asm
	// begin inline asm
	mov.b32 %r8488, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8476, %r8488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8492, %r8175, %r8489;
	// end inline asm
	// begin inline asm
	mov.b32 %r8495, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8496, %r8476, %r8495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8499, %r8183, %r8496;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8502, %r8478, %r8492, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8506, %r8485, %r8499, %r4402;
	// end inline asm
	shl.b32 	%r8513, %r8506, 4;
	// begin inline asm
	lop3.b32 %r8510, %r4408, %r8502, %r8513, 202;
	// end inline asm
	xor.b32  	%r16233, %r8510, -2004318072;
	st.shared.u32 	[%rd116], %r16226;
	st.shared.u32 	[%rd118], %r16227;
	st.shared.u32 	[%rd120], %r16228;
	st.shared.u32 	[%rd122], %r16229;
	st.shared.u32 	[%rd124], %r16230;
	st.shared.u32 	[%rd126], %r16231;
	st.shared.u32 	[%rd128], %r16232;
	st.shared.u32 	[%rd130], %r16233;
	ld.shared.u32 	%r16369, [%rd100];
	ld.shared.u32 	%r16370, [%rd102];
	ld.shared.u32 	%r16371, [%rd104];
	ld.shared.u32 	%r16372, [%rd106];
	ld.shared.u32 	%r16381, [%rd108];
	ld.shared.u32 	%r16382, [%rd110];
	ld.shared.u32 	%r16383, [%rd112];
	ld.shared.u32 	%r16384, [%rd114];
	// begin inline asm
	mov.b32 %r8519, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8530, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8518, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r8516, %r885, %r8518, %r8519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8520, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8521, %r8519, %r8520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8524, %r8516, %r8521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8527, %r896, %r8518, %r8530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8531, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8532, %r8530, %r8531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8535, %r8527, %r8532;
	// end inline asm
	shr.u32 	%r8540, %r8518, 8;
	// begin inline asm
	lop3.b32 %r8538, %r885, %r8540, %r8519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8542, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8543, %r8519, %r8542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8546, %r8538, %r8543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8549, %r896, %r8540, %r8530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8553, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8554, %r8530, %r8553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8557, %r8549, %r8554;
	// end inline asm
	// begin inline asm
	mov.b32 %r8565, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8576, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8564, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r8562, %r885, %r8564, %r8565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8566, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8567, %r8565, %r8566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8570, %r8562, %r8567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8573, %r896, %r8564, %r8576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8578, %r8576, %r8577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8581, %r8573, %r8578;
	// end inline asm
	shr.u32 	%r8586, %r8564, 8;
	// begin inline asm
	lop3.b32 %r8584, %r885, %r8586, %r8565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8588, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8589, %r8565, %r8588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8592, %r8584, %r8589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8595, %r896, %r8586, %r8576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8599, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8600, %r8576, %r8599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8603, %r8595, %r8600;
	// end inline asm
	// begin inline asm
	mov.b32 %r8611, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8622, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8610, %r16371, -2004318072;
	// begin inline asm
	lop3.b32 %r8608, %r885, %r8610, %r8611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8612, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8613, %r8611, %r8612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8616, %r8608, %r8613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8619, %r896, %r8610, %r8622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8624, %r8622, %r8623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8627, %r8619, %r8624;
	// end inline asm
	shr.u32 	%r8632, %r8610, 8;
	// begin inline asm
	lop3.b32 %r8630, %r885, %r8632, %r8611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8634, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8635, %r8611, %r8634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8638, %r8630, %r8635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8641, %r896, %r8632, %r8622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8645, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8646, %r8622, %r8645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8649, %r8641, %r8646;
	// end inline asm
	// begin inline asm
	mov.b32 %r8657, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8668, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8656, %r16372, -2004318072;
	// begin inline asm
	lop3.b32 %r8654, %r885, %r8656, %r8657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8659, %r8657, %r8658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8662, %r8654, %r8659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8665, %r896, %r8656, %r8668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8670, %r8668, %r8669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8673, %r8665, %r8670;
	// end inline asm
	shr.u32 	%r8678, %r8656, 8;
	// begin inline asm
	lop3.b32 %r8676, %r885, %r8678, %r8657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8680, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8681, %r8657, %r8680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8684, %r8676, %r8681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8687, %r896, %r8678, %r8668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8691, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8692, %r8668, %r8691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8695, %r8687, %r8692;
	// end inline asm
	// begin inline asm
	mov.b32 %r8703, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8714, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8702, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r8700, %r885, %r8702, %r8703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8704, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8705, %r8703, %r8704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8708, %r8700, %r8705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8711, %r896, %r8702, %r8714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8716, %r8714, %r8715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8719, %r8711, %r8716;
	// end inline asm
	shr.u32 	%r8724, %r8702, 8;
	// begin inline asm
	lop3.b32 %r8722, %r885, %r8724, %r8703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8726, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8727, %r8703, %r8726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8730, %r8722, %r8727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8733, %r896, %r8724, %r8714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8737, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8738, %r8714, %r8737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8741, %r8733, %r8738;
	// end inline asm
	// begin inline asm
	mov.b32 %r8749, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8760, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8748, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r8746, %r885, %r8748, %r8749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8750, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8751, %r8749, %r8750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8754, %r8746, %r8751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8757, %r896, %r8748, %r8760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8762, %r8760, %r8761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8765, %r8757, %r8762;
	// end inline asm
	shr.u32 	%r8770, %r8748, 8;
	// begin inline asm
	lop3.b32 %r8768, %r885, %r8770, %r8749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8772, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8773, %r8749, %r8772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8776, %r8768, %r8773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8779, %r896, %r8770, %r8760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8783, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8784, %r8760, %r8783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8787, %r8779, %r8784;
	// end inline asm
	// begin inline asm
	mov.b32 %r8795, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8806, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8794, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r8792, %r885, %r8794, %r8795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8797, %r8795, %r8796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8800, %r8792, %r8797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8803, %r896, %r8794, %r8806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8808, %r8806, %r8807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8811, %r8803, %r8808;
	// end inline asm
	shr.u32 	%r8816, %r8794, 8;
	// begin inline asm
	lop3.b32 %r8814, %r885, %r8816, %r8795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8818, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8819, %r8795, %r8818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8822, %r8814, %r8819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8825, %r896, %r8816, %r8806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8829, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8830, %r8806, %r8829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8833, %r8825, %r8830;
	// end inline asm
	// begin inline asm
	mov.b32 %r8841, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8852, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8840, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r8838, %r885, %r8840, %r8841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8843, %r8841, %r8842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8846, %r8838, %r8843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8849, %r896, %r8840, %r8852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8854, %r8852, %r8853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8857, %r8849, %r8854;
	// end inline asm
	shr.u32 	%r8862, %r8840, 8;
	// begin inline asm
	lop3.b32 %r8860, %r885, %r8862, %r8841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8864, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8865, %r8841, %r8864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8868, %r8860, %r8865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8871, %r896, %r8862, %r8852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8875, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8876, %r8852, %r8875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8879, %r8871, %r8876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8992, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8994, %r8992, %r8776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8997, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8999, %r8997, %r8787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9002, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9004, %r9002, %r8800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9007, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9009, %r9007, %r8811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9012, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9014, %r9012, %r8822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9017, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9019, %r9017, %r8833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9022, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9024, %r9022, %r8846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9027, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9029, %r9027, %r8857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9032, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9034, %r9032, %r8868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9037, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9039, %r9037, %r8879;
	// end inline asm
	// begin inline asm
	mov.b32 %r9047, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9058, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9044, %r885, %r2470, %r9047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9049, %r9047, %r9048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9052, %r9044, %r9049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9055, %r896, %r2470, %r9058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9060, %r9058, %r9059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9063, %r9055, %r9060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9066, %r885, %r2492, %r9047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9070, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9071, %r9047, %r9070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9074, %r9066, %r9071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9077, %r896, %r2492, %r9058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9081, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9082, %r9058, %r9081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9085, %r9077, %r9082;
	// end inline asm
	// begin inline asm
	mov.b32 %r9093, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9104, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9090, %r885, %r2516, %r9093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9095, %r9093, %r9094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9098, %r9090, %r9095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9101, %r896, %r2516, %r9104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9106, %r9104, %r9105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9109, %r9101, %r9106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9112, %r885, %r2538, %r9093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9116, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9117, %r9093, %r9116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9120, %r9112, %r9117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9123, %r896, %r2538, %r9104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9127, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9128, %r9104, %r9127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9131, %r9123, %r9128;
	// end inline asm
	// begin inline asm
	mov.b32 %r9139, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9150, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9136, %r885, %r2562, %r9139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9141, %r9139, %r9140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9144, %r9136, %r9141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9147, %r896, %r2562, %r9150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9152, %r9150, %r9151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9155, %r9147, %r9152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9158, %r885, %r2584, %r9139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9162, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9163, %r9139, %r9162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9166, %r9158, %r9163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9169, %r896, %r2584, %r9150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9173, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9174, %r9150, %r9173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9177, %r9169, %r9174;
	// end inline asm
	// begin inline asm
	mov.b32 %r9185, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9196, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9182, %r885, %r2608, %r9185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9187, %r9185, %r9186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9190, %r9182, %r9187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9193, %r896, %r2608, %r9196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9198, %r9196, %r9197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9201, %r9193, %r9198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9204, %r885, %r2630, %r9185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9208, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9209, %r9185, %r9208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9212, %r9204, %r9209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9215, %r896, %r2630, %r9196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9219, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9220, %r9196, %r9219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9223, %r9215, %r9220;
	// end inline asm
	// begin inline asm
	mov.b32 %r9231, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9242, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9228, %r885, %r2654, %r9231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9233, %r9231, %r9232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9236, %r9228, %r9233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9239, %r896, %r2654, %r9242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9244, %r9242, %r9243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9247, %r9239, %r9244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9250, %r885, %r2676, %r9231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9254, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9255, %r9231, %r9254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9258, %r9250, %r9255;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9261, %r896, %r2676, %r9242, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9265, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9266, %r9242, %r9265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9269, %r9261, %r9266;
	// end inline asm
	// begin inline asm
	mov.b32 %r9277, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9288, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9274, %r885, %r2700, %r9277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9279, %r9277, %r9278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9282, %r9274, %r9279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9285, %r896, %r2700, %r9288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9290, %r9288, %r9289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9293, %r9285, %r9290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9296, %r885, %r2722, %r9277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9300, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9301, %r9277, %r9300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9304, %r9296, %r9301;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9307, %r896, %r2722, %r9288, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9311, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9312, %r9288, %r9311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9315, %r9307, %r9312;
	// end inline asm
	// begin inline asm
	mov.b32 %r9323, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9334, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9320, %r885, %r2746, %r9323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9325, %r9323, %r9324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9328, %r9320, %r9325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9331, %r896, %r2746, %r9334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9335, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9336, %r9334, %r9335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9339, %r9331, %r9336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9342, %r885, %r2768, %r9323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9346, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9347, %r9323, %r9346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9350, %r9342, %r9347;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9353, %r896, %r2768, %r9334, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9357, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9358, %r9334, %r9357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9361, %r9353, %r9358;
	// end inline asm
	// begin inline asm
	mov.b32 %r9369, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9380, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9366, %r885, %r2792, %r9369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9371, %r9369, %r9370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9374, %r9366, %r9371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9377, %r896, %r2792, %r9380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9381, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9382, %r9380, %r9381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9385, %r9377, %r9382;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9388, %r885, %r2814, %r9369, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9392, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9393, %r9369, %r9392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9396, %r9388, %r9393;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9399, %r896, %r2814, %r9380, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9403, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9404, %r9380, %r9403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9407, %r9399, %r9404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r303, %r9052, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r303, %r9063, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r303, %r9074, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r303, %r9085, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r303, %r9098, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r303, %r9109, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r303, %r9120, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r303, %r9131, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r303, %r9144, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r303, %r9155, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r303, %r9166, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r303, %r9177, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r303, %r9190, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r303, %r9201, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r303, %r9212, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r303, %r9223, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r321, %r9236, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r321, %r9247, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r321, %r9258, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r321, %r9269, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r321, %r9282, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r321, %r9293, %r8989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r321, %r9304, %r8994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r321, %r9315, %r8999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9506, %r321, %r9328, %r9004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9510, %r321, %r9339, %r9009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9514, %r321, %r9350, %r9014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9518, %r321, %r9361, %r9019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9522, %r321, %r9374, %r9024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9526, %r321, %r9385, %r9029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9530, %r321, %r9396, %r9034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9534, %r321, %r9407, %r9039;
	// end inline asm
	// begin inline asm
	mov.b32 %r9543, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9554, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9540, %r885, %r886, %r9543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9545, %r9543, %r9544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9548, %r9540, %r9545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9551, %r896, %r886, %r9554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9555, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9556, %r9554, %r9555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9559, %r9551, %r9556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9562, %r885, %r908, %r9543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9566, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9567, %r9543, %r9566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9570, %r9562, %r9567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9573, %r896, %r908, %r9554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9577, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9578, %r9554, %r9577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9581, %r9573, %r9578;
	// end inline asm
	// begin inline asm
	mov.b32 %r9589, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9600, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9586, %r885, %r932, %r9589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9591, %r9589, %r9590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9594, %r9586, %r9591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9597, %r896, %r932, %r9600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9602, %r9600, %r9601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9605, %r9597, %r9602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9608, %r885, %r954, %r9589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9612, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9613, %r9589, %r9612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9616, %r9608, %r9613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9619, %r896, %r954, %r9600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9623, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9624, %r9600, %r9623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9627, %r9619, %r9624;
	// end inline asm
	// begin inline asm
	mov.b32 %r9635, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9646, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9632, %r885, %r978, %r9635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9637, %r9635, %r9636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9640, %r9632, %r9637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9643, %r896, %r978, %r9646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9648, %r9646, %r9647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9651, %r9643, %r9648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9654, %r885, %r1000, %r9635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9659, %r9635, %r9658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9662, %r9654, %r9659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9665, %r896, %r1000, %r9646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9669, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9670, %r9646, %r9669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9673, %r9665, %r9670;
	// end inline asm
	// begin inline asm
	mov.b32 %r9681, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9692, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9678, %r885, %r1024, %r9681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9683, %r9681, %r9682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9686, %r9678, %r9683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9689, %r896, %r1024, %r9692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9694, %r9692, %r9693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9697, %r9689, %r9694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9700, %r885, %r1046, %r9681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9704, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9705, %r9681, %r9704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9708, %r9700, %r9705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9711, %r896, %r1046, %r9692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9715, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9716, %r9692, %r9715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9719, %r9711, %r9716;
	// end inline asm
	// begin inline asm
	mov.b32 %r9727, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9738, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9724, %r885, %r1070, %r9727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9729, %r9727, %r9728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9732, %r9724, %r9729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9735, %r896, %r1070, %r9738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9740, %r9738, %r9739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9743, %r9735, %r9740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9746, %r885, %r1092, %r9727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9750, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9751, %r9727, %r9750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9754, %r9746, %r9751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9757, %r896, %r1092, %r9738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9761, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9762, %r9738, %r9761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9765, %r9757, %r9762;
	// end inline asm
	// begin inline asm
	mov.b32 %r9773, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9784, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9770, %r885, %r1116, %r9773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9774, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9775, %r9773, %r9774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9778, %r9770, %r9775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9781, %r896, %r1116, %r9784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9786, %r9784, %r9785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9789, %r9781, %r9786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9792, %r885, %r1138, %r9773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9797, %r9773, %r9796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9800, %r9792, %r9797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9803, %r896, %r1138, %r9784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9808, %r9784, %r9807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9811, %r9803, %r9808;
	// end inline asm
	// begin inline asm
	mov.b32 %r9819, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9830, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9816, %r885, %r1162, %r9819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9820, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9821, %r9819, %r9820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9824, %r9816, %r9821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9827, %r896, %r1162, %r9830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9832, %r9830, %r9831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9835, %r9827, %r9832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9838, %r885, %r1184, %r9819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9843, %r9819, %r9842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9846, %r9838, %r9843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9849, %r896, %r1184, %r9830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9854, %r9830, %r9853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9857, %r9849, %r9854;
	// end inline asm
	// begin inline asm
	mov.b32 %r9865, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9876, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9862, %r885, %r1208, %r9865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9866, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9867, %r9865, %r9866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9870, %r9862, %r9867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9873, %r896, %r1208, %r9876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9878, %r9876, %r9877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9881, %r9873, %r9878;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9884, %r885, %r1230, %r9865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9889, %r9865, %r9888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9892, %r9884, %r9889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9895, %r896, %r1230, %r9876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9900, %r9876, %r9899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9903, %r9895, %r9900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9906, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9908, %r9906, %r9548, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9912, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9914, %r9912, %r9559, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9918, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9920, %r9918, %r9570, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9924, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9926, %r9924, %r9581, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9930, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9932, %r9930, %r9594, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9936, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9938, %r9936, %r9605, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9942, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9944, %r9942, %r9616, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9948, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9950, %r9948, %r9627, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9954, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9956, %r9954, %r9640, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9960, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9962, %r9960, %r9651, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9966, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9968, %r9966, %r9662, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9972, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9974, %r9972, %r9673, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9978, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9980, %r9978, %r9686, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9984, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9986, %r9984, %r9697, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9990, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9992, %r9990, %r9708, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9996, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9998, %r9996, %r9719, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10002, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10004, %r10002, %r9732, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10008, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10010, %r10008, %r9743, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10014, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10016, %r10014, %r9754, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10020, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10022, %r10020, %r9765, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10026, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10028, %r10026, %r9778, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10032, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10034, %r10032, %r9789, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10038, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10040, %r10038, %r9800, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10044, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10046, %r10044, %r9811, %r9502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10050, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10052, %r10050, %r9824, %r9506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10056, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10058, %r10056, %r9835, %r9510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10062, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10064, %r10062, %r9846, %r9514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10068, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10070, %r10068, %r9857, %r9518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10074, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10076, %r10074, %r9870, %r9522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10080, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10082, %r10080, %r9881, %r9526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10086, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10088, %r10086, %r9892, %r9530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10092, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10094, %r10092, %r9903, %r9534;
	// end inline asm
	// begin inline asm
	mov.b32 %r10103, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10114, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10100, %r885, %r4702, %r10103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10104, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10105, %r10103, %r10104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10108, %r10100, %r10105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10111, %r896, %r4702, %r10114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10115, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10116, %r10114, %r10115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10119, %r10111, %r10116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10122, %r885, %r4724, %r10103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10126, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10127, %r10103, %r10126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10130, %r10122, %r10127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10133, %r896, %r4724, %r10114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10137, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10138, %r10114, %r10137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10141, %r10133, %r10138;
	// end inline asm
	// begin inline asm
	mov.b32 %r10149, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10160, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10146, %r885, %r4748, %r10149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10150, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10151, %r10149, %r10150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10154, %r10146, %r10151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10157, %r896, %r4748, %r10160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10162, %r10160, %r10161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10165, %r10157, %r10162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10168, %r885, %r4770, %r10149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10172, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10173, %r10149, %r10172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10176, %r10168, %r10173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10179, %r896, %r4770, %r10160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10183, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10184, %r10160, %r10183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10187, %r10179, %r10184;
	// end inline asm
	// begin inline asm
	mov.b32 %r10195, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10206, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10192, %r885, %r4794, %r10195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10196, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10197, %r10195, %r10196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10200, %r10192, %r10197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10203, %r896, %r4794, %r10206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10208, %r10206, %r10207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10211, %r10203, %r10208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10214, %r885, %r4816, %r10195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10218, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10219, %r10195, %r10218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10222, %r10214, %r10219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10225, %r896, %r4816, %r10206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10229, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10230, %r10206, %r10229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10233, %r10225, %r10230;
	// end inline asm
	// begin inline asm
	mov.b32 %r10241, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10252, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10238, %r885, %r4840, %r10241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10242, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10243, %r10241, %r10242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10246, %r10238, %r10243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10249, %r896, %r4840, %r10252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10254, %r10252, %r10253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10257, %r10249, %r10254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10260, %r885, %r4862, %r10241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10264, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10265, %r10241, %r10264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10268, %r10260, %r10265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10271, %r896, %r4862, %r10252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10275, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10276, %r10252, %r10275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10279, %r10271, %r10276;
	// end inline asm
	// begin inline asm
	mov.b32 %r10287, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10298, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10284, %r885, %r4886, %r10287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10288, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10289, %r10287, %r10288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10292, %r10284, %r10289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10295, %r896, %r4886, %r10298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10300, %r10298, %r10299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10303, %r10295, %r10300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10306, %r885, %r4908, %r10287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10310, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10311, %r10287, %r10310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10314, %r10306, %r10311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10317, %r896, %r4908, %r10298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10321, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10322, %r10298, %r10321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10325, %r10317, %r10322;
	// end inline asm
	// begin inline asm
	mov.b32 %r10333, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10344, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10330, %r885, %r4932, %r10333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10334, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10335, %r10333, %r10334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10338, %r10330, %r10335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10341, %r896, %r4932, %r10344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10346, %r10344, %r10345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10349, %r10341, %r10346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10352, %r885, %r4954, %r10333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10356, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10357, %r10333, %r10356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10360, %r10352, %r10357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10363, %r896, %r4954, %r10344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10367, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10368, %r10344, %r10367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10371, %r10363, %r10368;
	// end inline asm
	// begin inline asm
	mov.b32 %r10379, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10390, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10376, %r885, %r4978, %r10379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10380, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10381, %r10379, %r10380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10384, %r10376, %r10381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10387, %r896, %r4978, %r10390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10391, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10392, %r10390, %r10391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10395, %r10387, %r10392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10398, %r885, %r5000, %r10379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10402, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10403, %r10379, %r10402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10406, %r10398, %r10403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10409, %r896, %r5000, %r10390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10413, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10414, %r10390, %r10413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10417, %r10409, %r10414;
	// end inline asm
	// begin inline asm
	mov.b32 %r10425, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10436, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10422, %r885, %r5024, %r10425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10426, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10427, %r10425, %r10426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10430, %r10422, %r10427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10433, %r896, %r5024, %r10436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10437, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10438, %r10436, %r10437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10441, %r10433, %r10438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10444, %r885, %r5046, %r10425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10448, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10449, %r10425, %r10448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10452, %r10444, %r10449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10455, %r896, %r5046, %r10436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10459, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10460, %r10436, %r10459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10463, %r10455, %r10460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r375, %r10108, %r9908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r375, %r10119, %r9914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r375, %r10130, %r9920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r375, %r10141, %r9926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r375, %r10154, %r9932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r375, %r10165, %r9938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r375, %r10176, %r9944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r375, %r10187, %r9950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r375, %r10200, %r9956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r375, %r10211, %r9962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r375, %r10222, %r9968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r375, %r10233, %r9974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r375, %r10246, %r9980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r375, %r10257, %r9986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r375, %r10268, %r9992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r375, %r10279, %r9998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r393, %r10292, %r10004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r393, %r10303, %r10010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r393, %r10314, %r10016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r393, %r10325, %r10022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r393, %r10338, %r10028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r393, %r10349, %r10034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r393, %r10360, %r10040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r393, %r10371, %r10046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r393, %r10384, %r10052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r393, %r10395, %r10058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r393, %r10406, %r10064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r393, %r10417, %r10070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r393, %r10430, %r10076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r393, %r10441, %r10082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r393, %r10452, %r10088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r393, %r10463, %r10094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10594, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10596, %r10594, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r457, %r10601, %r10596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10603, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10605, %r10603, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r457, %r10610, %r10605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10612, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10614, %r10612, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r457, %r10619, %r10614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10621, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10623, %r10621, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r457, %r10628, %r10623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10630, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10632, %r10630, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r457, %r10637, %r10632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10639, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10641, %r10639, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r457, %r10646, %r10641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10648, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10650, %r10648, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r457, %r10655, %r10650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10657, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10659, %r10657, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r457, %r10664, %r10659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10666, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r10666, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r460, %r10673, %r10668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10675, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r10675, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r460, %r10682, %r10677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10684, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r10684, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r460, %r10691, %r10686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10693, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r10693, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r460, %r10700, %r10695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10702, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10704, %r10702, %r10706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r460, %r10709, %r10704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10711, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r10711, %r10715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r460, %r10718, %r10713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10720, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10722, %r10720, %r10724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r460, %r10727, %r10722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10729, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r10729, %r10733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r460, %r10736, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r463, %r10601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r457, %r10598, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r463, %r10610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r457, %r10607, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r463, %r10619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r457, %r10616, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r463, %r10628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r457, %r10625, %r10759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r463, %r10637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r457, %r10634, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r463, %r10646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r457, %r10643, %r10773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10780, %r463, %r10655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r457, %r10652, %r10780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10787, %r463, %r10664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10790, %r457, %r10661, %r10787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10794, %r466, %r10673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10797, %r460, %r10670, %r10794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10801, %r466, %r10682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10804, %r460, %r10679, %r10801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10808, %r466, %r10691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10811, %r460, %r10688, %r10808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10815, %r466, %r10700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10818, %r460, %r10697, %r10815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10822, %r466, %r10709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10825, %r460, %r10706, %r10822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10829, %r466, %r10718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10832, %r460, %r10715, %r10829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10836, %r466, %r10727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10839, %r460, %r10724, %r10836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10843, %r466, %r10736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10846, %r460, %r10733, %r10843;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11017, %r11014}, {%r512, %r518, %r515, %r521}, {%r10599, %r10741}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11026, %r11023}, {%r512, %r518, %r515, %r521}, {%r10608, %r10748}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11035, %r11032}, {%r512, %r518, %r515, %r521}, {%r10617, %r10755}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11044, %r11041}, {%r512, %r518, %r515, %r521}, {%r10626, %r10762}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11053, %r11050}, {%r512, %r518, %r515, %r521}, {%r10635, %r10769}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11062, %r11059}, {%r512, %r518, %r515, %r521}, {%r10644, %r10776}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11071, %r11068}, {%r512, %r518, %r515, %r521}, {%r10653, %r10783}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11080, %r11077}, {%r512, %r518, %r515, %r521}, {%r10662, %r10790}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11089, %r11086}, {%r512, %r518, %r515, %r521}, {%r10671, %r10797}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11098, %r11095}, {%r512, %r518, %r515, %r521}, {%r10680, %r10804}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11107, %r11104}, {%r512, %r518, %r515, %r521}, {%r10689, %r10811}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11116, %r11113}, {%r512, %r518, %r515, %r521}, {%r10698, %r10818}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11125, %r11122}, {%r512, %r518, %r515, %r521}, {%r10707, %r10825}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11134, %r11131}, {%r512, %r518, %r515, %r521}, {%r10716, %r10832}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11143, %r11140}, {%r512, %r518, %r515, %r521}, {%r10725, %r10839}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11152, %r11149}, {%r512, %r518, %r515, %r521}, {%r10734, %r10846}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11010, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11012, %r11010, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11015, %r562, %r11017, %r11012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11019, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11021, %r11019, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11024, %r562, %r11026, %r11021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11028, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11030, %r11028, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11033, %r562, %r11035, %r11030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11037, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11039, %r11037, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11042, %r562, %r11044, %r11039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11046, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11048, %r11046, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11051, %r562, %r11053, %r11048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11055, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11057, %r11055, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11060, %r562, %r11062, %r11057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11064, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11066, %r11064, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11069, %r562, %r11071, %r11066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11073, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11075, %r11073, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11078, %r562, %r11080, %r11075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11082, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r11082, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r562, %r11089, %r11084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11091, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r11091, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r562, %r11098, %r11093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11100, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r11100, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r562, %r11107, %r11102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11109, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r11109, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r562, %r11116, %r11111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11118, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11120, %r11118, %r11122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11123, %r562, %r11125, %r11120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11127, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r11127, %r11131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r562, %r11134, %r11129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11136, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11138, %r11136, %r11140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11141, %r562, %r11143, %r11138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11145, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r11145, %r11149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r562, %r11152, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r565, %r11017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r562, %r11014, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r565, %r11026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r562, %r11023, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r565, %r11035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r562, %r11032, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r565, %r11044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r562, %r11041, %r11175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r565, %r11053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r562, %r11050, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r565, %r11062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r562, %r11059, %r11189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11196, %r565, %r11071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11199, %r562, %r11068, %r11196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11203, %r565, %r11080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11206, %r562, %r11077, %r11203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11210, %r565, %r11089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11213, %r562, %r11086, %r11210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11217, %r565, %r11098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11220, %r562, %r11095, %r11217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11224, %r565, %r11107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11227, %r562, %r11104, %r11224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11231, %r565, %r11116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11234, %r562, %r11113, %r11231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11238, %r565, %r11125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11241, %r562, %r11122, %r11238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11245, %r565, %r11134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11248, %r562, %r11131, %r11245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11252, %r565, %r11143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11255, %r562, %r11140, %r11252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11259, %r565, %r11152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11262, %r562, %r11149, %r11259;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11555, %r11558}, {%r600, %r606, %r603, %r609}, {%r11015, %r11157}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11561, %r11564}, {%r600, %r606, %r603, %r609}, {%r11024, %r11164}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11567, %r11570}, {%r600, %r606, %r603, %r609}, {%r11033, %r11171}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11573, %r11576}, {%r600, %r606, %r603, %r609}, {%r11042, %r11178}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11579, %r11582}, {%r600, %r606, %r603, %r609}, {%r11051, %r11185}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11585, %r11588}, {%r600, %r606, %r603, %r609}, {%r11060, %r11192}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11591, %r11594}, {%r600, %r606, %r603, %r609}, {%r11069, %r11199}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11597, %r11600}, {%r600, %r606, %r603, %r609}, {%r11078, %r11206}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11556, %r11559}, {%r600, %r606, %r603, %r609}, {%r11087, %r11213}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11562, %r11565}, {%r600, %r606, %r603, %r609}, {%r11096, %r11220}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11568, %r11571}, {%r600, %r606, %r603, %r609}, {%r11105, %r11227}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11574, %r11577}, {%r600, %r606, %r603, %r609}, {%r11114, %r11234}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11580, %r11583}, {%r600, %r606, %r603, %r609}, {%r11123, %r11241}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11586, %r11589}, {%r600, %r606, %r603, %r609}, {%r11132, %r11248}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11592, %r11595}, {%r600, %r606, %r603, %r609}, {%r11141, %r11255}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11598, %r11601}, {%r600, %r606, %r603, %r609}, {%r11150, %r11262}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11554, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11557, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11560, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11563, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11566, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11569, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11572, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11575, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11578, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11581, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11584, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11587, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11590, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11593, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11596, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11599, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11602, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11605, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11608, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11611, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11614, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11617, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11620, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11623, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11626, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11629, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11632, %r11585, %r11586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11635, %r11588, %r11589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11638, %r11591, %r11592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11641, %r11594, %r11595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11644, %r11597, %r11598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11647, %r11600, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r230, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r230, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r230, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r230, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r230, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r230, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r230, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r230, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r230, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r230, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r230, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r230, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r230, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r230, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r230, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r230, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r231, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r231, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r231, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r231, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r231, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r231, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r231, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r231, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r231, %r11626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11725, %r231, %r11629;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11728, %r231, %r11632;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11731, %r231, %r11635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11734, %r231, %r11638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11737, %r231, %r11641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11740, %r231, %r11644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11743, %r231, %r11647;
	// end inline asm
	// begin inline asm
	mov.b32 %r11746, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11748, %r11650, %r11746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11751, %r11748, %r11747;
	// end inline asm
	// begin inline asm
	mov.b32 %r11754, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11756, %r11653, %r11754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11759, %r11756, %r11755;
	// end inline asm
	// begin inline asm
	mov.b32 %r11762, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11764, %r11656, %r11762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11767, %r11764, %r11763;
	// end inline asm
	// begin inline asm
	mov.b32 %r11770, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11772, %r11659, %r11770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11775, %r11772, %r11771;
	// end inline asm
	// begin inline asm
	mov.b32 %r11778, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11780, %r11662, %r11778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11783, %r11780, %r11779;
	// end inline asm
	// begin inline asm
	mov.b32 %r11786, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11788, %r11665, %r11786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11791, %r11788, %r11787;
	// end inline asm
	// begin inline asm
	mov.b32 %r11794, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11796, %r11668, %r11794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11799, %r11796, %r11795;
	// end inline asm
	// begin inline asm
	mov.b32 %r11802, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11804, %r11671, %r11802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11807, %r11804, %r11803;
	// end inline asm
	// begin inline asm
	mov.b32 %r11810, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11812, %r11674, %r11810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11815, %r11812, %r11811;
	// end inline asm
	// begin inline asm
	mov.b32 %r11818, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11820, %r11677, %r11818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11823, %r11820, %r11819;
	// end inline asm
	// begin inline asm
	mov.b32 %r11826, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11828, %r11680, %r11826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11831, %r11828, %r11827;
	// end inline asm
	// begin inline asm
	mov.b32 %r11834, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11836, %r11683, %r11834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11839, %r11836, %r11835;
	// end inline asm
	// begin inline asm
	mov.b32 %r11842, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11844, %r11686, %r11842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11847, %r11844, %r11843;
	// end inline asm
	// begin inline asm
	mov.b32 %r11850, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11852, %r11689, %r11850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11855, %r11852, %r11851;
	// end inline asm
	// begin inline asm
	mov.b32 %r11858, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11860, %r11692, %r11858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11863, %r11860, %r11859;
	// end inline asm
	// begin inline asm
	mov.b32 %r11866, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11868, %r11695, %r11866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11871, %r11868, %r11867;
	// end inline asm
	// begin inline asm
	mov.b32 %r11874, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11876, %r11698, %r11874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11879, %r11876, %r11875;
	// end inline asm
	// begin inline asm
	mov.b32 %r11882, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11884, %r11701, %r11882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11887, %r11884, %r11883;
	// end inline asm
	// begin inline asm
	mov.b32 %r11890, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11892, %r11704, %r11890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11895, %r11892, %r11891;
	// end inline asm
	// begin inline asm
	mov.b32 %r11898, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11900, %r11707, %r11898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11903, %r11900, %r11899;
	// end inline asm
	// begin inline asm
	mov.b32 %r11906, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11908, %r11710, %r11906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11911, %r11908, %r11907;
	// end inline asm
	// begin inline asm
	mov.b32 %r11914, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11915, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11916, %r11713, %r11914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11919, %r11916, %r11915;
	// end inline asm
	// begin inline asm
	mov.b32 %r11922, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11923, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11924, %r11716, %r11922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11927, %r11924, %r11923;
	// end inline asm
	// begin inline asm
	mov.b32 %r11930, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11932, %r11719, %r11930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11935, %r11932, %r11931;
	// end inline asm
	// begin inline asm
	mov.b32 %r11938, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11939, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11940, %r11722, %r11938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11943, %r11940, %r11939;
	// end inline asm
	// begin inline asm
	mov.b32 %r11946, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11947, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11948, %r11725, %r11946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11951, %r11948, %r11947;
	// end inline asm
	// begin inline asm
	mov.b32 %r11954, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11956, %r11728, %r11954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11959, %r11956, %r11955;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11963, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11964, %r11731, %r11962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11967, %r11964, %r11963;
	// end inline asm
	// begin inline asm
	mov.b32 %r11970, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11971, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11972, %r11734, %r11970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11975, %r11972, %r11971;
	// end inline asm
	// begin inline asm
	mov.b32 %r11978, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11980, %r11737, %r11978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11983, %r11980, %r11979;
	// end inline asm
	// begin inline asm
	mov.b32 %r11986, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11988, %r11740, %r11986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11991, %r11988, %r11987;
	// end inline asm
	// begin inline asm
	mov.b32 %r11994, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11995, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11996, %r11743, %r11994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11999, %r11996, %r11995;
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r12005, %r12003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11751, %r12004;
	// end inline asm
	// begin inline asm
	mov.b32 %r12010, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r12005, %r12010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12014, %r11759, %r12011;
	// end inline asm
	// begin inline asm
	mov.b32 %r12017, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r12005, %r12017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12021, %r11767, %r12018;
	// end inline asm
	// begin inline asm
	mov.b32 %r12024, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r12005, %r12024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12028, %r11775, %r12025;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12031, %r12007, %r12021, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12035, %r12014, %r12028, %r4402;
	// end inline asm
	shl.b32 	%r12042, %r12035, 4;
	// begin inline asm
	lop3.b32 %r12039, %r4408, %r12031, %r12042, 202;
	// end inline asm
	xor.b32  	%r16234, %r12039, -2004318072;
	// begin inline asm
	mov.b32 %r12046, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r12046, %r12044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r11783, %r12045;
	// end inline asm
	// begin inline asm
	mov.b32 %r12051, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r12046, %r12051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12055, %r11791, %r12052;
	// end inline asm
	// begin inline asm
	mov.b32 %r12058, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r12046, %r12058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12062, %r11799, %r12059;
	// end inline asm
	// begin inline asm
	mov.b32 %r12065, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r12046, %r12065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12069, %r11807, %r12066;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12072, %r12048, %r12062, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12076, %r12055, %r12069, %r4402;
	// end inline asm
	shl.b32 	%r12083, %r12076, 4;
	// begin inline asm
	lop3.b32 %r12080, %r4408, %r12072, %r12083, 202;
	// end inline asm
	xor.b32  	%r16235, %r12080, -2004318072;
	// begin inline asm
	mov.b32 %r12087, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12085, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r12087, %r12085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r11815, %r12086;
	// end inline asm
	// begin inline asm
	mov.b32 %r12092, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r12087, %r12092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12096, %r11823, %r12093;
	// end inline asm
	// begin inline asm
	mov.b32 %r12099, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r12087, %r12099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12103, %r11831, %r12100;
	// end inline asm
	// begin inline asm
	mov.b32 %r12106, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r12087, %r12106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12110, %r11839, %r12107;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12113, %r12089, %r12103, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12117, %r12096, %r12110, %r4402;
	// end inline asm
	shl.b32 	%r12124, %r12117, 4;
	// begin inline asm
	lop3.b32 %r12121, %r4408, %r12113, %r12124, 202;
	// end inline asm
	xor.b32  	%r16236, %r12121, -2004318072;
	// begin inline asm
	mov.b32 %r12128, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12126, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r12128, %r12126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r11847, %r12127;
	// end inline asm
	// begin inline asm
	mov.b32 %r12133, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r12128, %r12133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12137, %r11855, %r12134;
	// end inline asm
	// begin inline asm
	mov.b32 %r12140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r12128, %r12140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12144, %r11863, %r12141;
	// end inline asm
	// begin inline asm
	mov.b32 %r12147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r12128, %r12147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12151, %r11871, %r12148;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12154, %r12130, %r12144, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12158, %r12137, %r12151, %r4402;
	// end inline asm
	shl.b32 	%r12165, %r12158, 4;
	// begin inline asm
	lop3.b32 %r12162, %r4408, %r12154, %r12165, 202;
	// end inline asm
	xor.b32  	%r16237, %r12162, -2004318072;
	// begin inline asm
	mov.b32 %r12169, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12167, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r12169, %r12167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r11879, %r12168;
	// end inline asm
	// begin inline asm
	mov.b32 %r12174, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r12169, %r12174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12178, %r11887, %r12175;
	// end inline asm
	// begin inline asm
	mov.b32 %r12181, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r12169, %r12181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12185, %r11895, %r12182;
	// end inline asm
	// begin inline asm
	mov.b32 %r12188, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r12169, %r12188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12192, %r11903, %r12189;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12195, %r12171, %r12185, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12199, %r12178, %r12192, %r4402;
	// end inline asm
	shl.b32 	%r12206, %r12199, 4;
	// begin inline asm
	lop3.b32 %r12203, %r4408, %r12195, %r12206, 202;
	// end inline asm
	xor.b32  	%r16238, %r12203, -2004318072;
	// begin inline asm
	mov.b32 %r12210, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12208, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r12210, %r12208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r11911, %r12209;
	// end inline asm
	// begin inline asm
	mov.b32 %r12215, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r12210, %r12215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12219, %r11919, %r12216;
	// end inline asm
	// begin inline asm
	mov.b32 %r12222, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r12210, %r12222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12226, %r11927, %r12223;
	// end inline asm
	// begin inline asm
	mov.b32 %r12229, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r12210, %r12229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12233, %r11935, %r12230;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12236, %r12212, %r12226, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12240, %r12219, %r12233, %r4402;
	// end inline asm
	shl.b32 	%r12247, %r12240, 4;
	// begin inline asm
	lop3.b32 %r12244, %r4408, %r12236, %r12247, 202;
	// end inline asm
	xor.b32  	%r16239, %r12244, -2004318072;
	// begin inline asm
	mov.b32 %r12251, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12249, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12250, %r12251, %r12249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r11943, %r12250;
	// end inline asm
	// begin inline asm
	mov.b32 %r12256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12257, %r12251, %r12256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12260, %r11951, %r12257;
	// end inline asm
	// begin inline asm
	mov.b32 %r12263, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r12251, %r12263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12267, %r11959, %r12264;
	// end inline asm
	// begin inline asm
	mov.b32 %r12270, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12271, %r12251, %r12270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12274, %r11967, %r12271;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12277, %r12253, %r12267, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12281, %r12260, %r12274, %r4402;
	// end inline asm
	shl.b32 	%r12288, %r12281, 4;
	// begin inline asm
	lop3.b32 %r12285, %r4408, %r12277, %r12288, 202;
	// end inline asm
	xor.b32  	%r16240, %r12285, -2004318072;
	// begin inline asm
	mov.b32 %r12292, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12290, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r12292, %r12290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12294, %r11975, %r12291;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12292, %r12297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12301, %r11983, %r12298;
	// end inline asm
	// begin inline asm
	mov.b32 %r12304, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r12292, %r12304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12308, %r11991, %r12305;
	// end inline asm
	// begin inline asm
	mov.b32 %r12311, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12312, %r12292, %r12311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12315, %r11999, %r12312;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12318, %r12294, %r12308, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12322, %r12301, %r12315, %r4402;
	// end inline asm
	shl.b32 	%r12329, %r12322, 4;
	// begin inline asm
	lop3.b32 %r12326, %r4408, %r12318, %r12329, 202;
	// end inline asm
	xor.b32  	%r16241, %r12326, -2004318072;
	st.shared.u32 	[%rd116], %r16234;
	st.shared.u32 	[%rd118], %r16235;
	st.shared.u32 	[%rd120], %r16236;
	st.shared.u32 	[%rd122], %r16237;
	st.shared.u32 	[%rd124], %r16238;
	st.shared.u32 	[%rd126], %r16239;
	st.shared.u32 	[%rd128], %r16240;
	st.shared.u32 	[%rd130], %r16241;
	ld.shared.u32 	%r16373, [%rd100];
	ld.shared.u32 	%r16374, [%rd102];
	ld.shared.u32 	%r16375, [%rd104];
	ld.shared.u32 	%r16376, [%rd106];
	ld.shared.u32 	%r16385, [%rd108];
	ld.shared.u32 	%r16386, [%rd110];
	ld.shared.u32 	%r16387, [%rd112];
	ld.shared.u32 	%r16388, [%rd114];
	// begin inline asm
	mov.b32 %r12335, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12346, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12334, %r16373, -2004318072;
	// begin inline asm
	lop3.b32 %r12332, %r885, %r12334, %r12335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12336, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12337, %r12335, %r12336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12340, %r12332, %r12337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12343, %r896, %r12334, %r12346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12347, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12348, %r12346, %r12347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12351, %r12343, %r12348;
	// end inline asm
	shr.u32 	%r12356, %r12334, 8;
	// begin inline asm
	lop3.b32 %r12354, %r885, %r12356, %r12335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12358, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12359, %r12335, %r12358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12362, %r12354, %r12359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12365, %r896, %r12356, %r12346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12369, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12370, %r12346, %r12369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12373, %r12365, %r12370;
	// end inline asm
	// begin inline asm
	mov.b32 %r12381, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12392, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12380, %r16374, -2004318072;
	// begin inline asm
	lop3.b32 %r12378, %r885, %r12380, %r12381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12382, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12383, %r12381, %r12382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12386, %r12378, %r12383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12389, %r896, %r12380, %r12392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12394, %r12392, %r12393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12397, %r12389, %r12394;
	// end inline asm
	shr.u32 	%r12402, %r12380, 8;
	// begin inline asm
	lop3.b32 %r12400, %r885, %r12402, %r12381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12404, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12405, %r12381, %r12404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12408, %r12400, %r12405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12411, %r896, %r12402, %r12392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12415, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12416, %r12392, %r12415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12419, %r12411, %r12416;
	// end inline asm
	// begin inline asm
	mov.b32 %r12427, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12438, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12426, %r16375, -2004318072;
	// begin inline asm
	lop3.b32 %r12424, %r885, %r12426, %r12427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12428, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12429, %r12427, %r12428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12432, %r12424, %r12429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12435, %r896, %r12426, %r12438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12440, %r12438, %r12439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12443, %r12435, %r12440;
	// end inline asm
	shr.u32 	%r12448, %r12426, 8;
	// begin inline asm
	lop3.b32 %r12446, %r885, %r12448, %r12427, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12450, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12451, %r12427, %r12450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12454, %r12446, %r12451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12457, %r896, %r12448, %r12438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12461, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12462, %r12438, %r12461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12465, %r12457, %r12462;
	// end inline asm
	// begin inline asm
	mov.b32 %r12473, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12484, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12472, %r16376, -2004318072;
	// begin inline asm
	lop3.b32 %r12470, %r885, %r12472, %r12473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12475, %r12473, %r12474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12478, %r12470, %r12475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12481, %r896, %r12472, %r12484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12486, %r12484, %r12485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12489, %r12481, %r12486;
	// end inline asm
	shr.u32 	%r12494, %r12472, 8;
	// begin inline asm
	lop3.b32 %r12492, %r885, %r12494, %r12473, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12496, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12497, %r12473, %r12496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12500, %r12492, %r12497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12503, %r896, %r12494, %r12484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12507, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12508, %r12484, %r12507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12511, %r12503, %r12508;
	// end inline asm
	// begin inline asm
	mov.b32 %r12519, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12530, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12518, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r12516, %r885, %r12518, %r12519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12520, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12521, %r12519, %r12520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12524, %r12516, %r12521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12527, %r896, %r12518, %r12530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12532, %r12530, %r12531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12535, %r12527, %r12532;
	// end inline asm
	shr.u32 	%r12540, %r12518, 8;
	// begin inline asm
	lop3.b32 %r12538, %r885, %r12540, %r12519, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12542, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12543, %r12519, %r12542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12546, %r12538, %r12543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12549, %r896, %r12540, %r12530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12553, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12554, %r12530, %r12553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12557, %r12549, %r12554;
	// end inline asm
	// begin inline asm
	mov.b32 %r12565, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12576, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12564, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r12562, %r885, %r12564, %r12565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12566, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12567, %r12565, %r12566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12570, %r12562, %r12567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12573, %r896, %r12564, %r12576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12578, %r12576, %r12577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12581, %r12573, %r12578;
	// end inline asm
	shr.u32 	%r12586, %r12564, 8;
	// begin inline asm
	lop3.b32 %r12584, %r885, %r12586, %r12565, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12588, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12589, %r12565, %r12588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12592, %r12584, %r12589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12595, %r896, %r12586, %r12576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12599, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12600, %r12576, %r12599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12603, %r12595, %r12600;
	// end inline asm
	// begin inline asm
	mov.b32 %r12611, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12622, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12610, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r12608, %r885, %r12610, %r12611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12612, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12613, %r12611, %r12612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12616, %r12608, %r12613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12619, %r896, %r12610, %r12622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12623, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12624, %r12622, %r12623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12627, %r12619, %r12624;
	// end inline asm
	shr.u32 	%r12632, %r12610, 8;
	// begin inline asm
	lop3.b32 %r12630, %r885, %r12632, %r12611, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12634, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12635, %r12611, %r12634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12638, %r12630, %r12635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12641, %r896, %r12632, %r12622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12645, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12646, %r12622, %r12645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12649, %r12641, %r12646;
	// end inline asm
	// begin inline asm
	mov.b32 %r12657, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12668, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12656, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r12654, %r885, %r12656, %r12657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12659, %r12657, %r12658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12662, %r12654, %r12659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12665, %r896, %r12656, %r12668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12669, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12670, %r12668, %r12669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12673, %r12665, %r12670;
	// end inline asm
	shr.u32 	%r12678, %r12656, 8;
	// begin inline asm
	lop3.b32 %r12676, %r885, %r12678, %r12657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12680, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12681, %r12657, %r12680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12684, %r12676, %r12681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12687, %r896, %r12678, %r12668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12691, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12692, %r12668, %r12691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12695, %r12687, %r12692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12808, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12810, %r12808, %r12592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12813, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12815, %r12813, %r12603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12818, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12820, %r12818, %r12616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12823, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12825, %r12823, %r12627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12828, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12830, %r12828, %r12638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12833, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12835, %r12833, %r12649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12838, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12840, %r12838, %r12662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12843, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12845, %r12843, %r12673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12848, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12850, %r12848, %r12684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12853, %r429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12855, %r12853, %r12695;
	// end inline asm
	// begin inline asm
	mov.b32 %r12863, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12874, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12860, %r885, %r886, %r12863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12864, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12865, %r12863, %r12864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12868, %r12860, %r12865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12871, %r896, %r886, %r12874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12875, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12876, %r12874, %r12875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12879, %r12871, %r12876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12882, %r885, %r908, %r12863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12886, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12887, %r12863, %r12886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12890, %r12882, %r12887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12893, %r896, %r908, %r12874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12897, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12898, %r12874, %r12897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12901, %r12893, %r12898;
	// end inline asm
	// begin inline asm
	mov.b32 %r12909, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12920, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12906, %r885, %r932, %r12909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12910, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12911, %r12909, %r12910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12914, %r12906, %r12911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12917, %r896, %r932, %r12920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12922, %r12920, %r12921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12925, %r12917, %r12922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12928, %r885, %r954, %r12909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12932, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12933, %r12909, %r12932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12936, %r12928, %r12933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12939, %r896, %r954, %r12920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12943, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12944, %r12920, %r12943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12947, %r12939, %r12944;
	// end inline asm
	// begin inline asm
	mov.b32 %r12955, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12966, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12952, %r885, %r978, %r12955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12957, %r12955, %r12956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12960, %r12952, %r12957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12963, %r896, %r978, %r12966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12968, %r12966, %r12967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12971, %r12963, %r12968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12974, %r885, %r1000, %r12955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12978, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12979, %r12955, %r12978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12982, %r12974, %r12979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12985, %r896, %r1000, %r12966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12989, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12990, %r12966, %r12989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12993, %r12985, %r12990;
	// end inline asm
	// begin inline asm
	mov.b32 %r13001, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13012, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12998, %r885, %r1024, %r13001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13003, %r13001, %r13002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13006, %r12998, %r13003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13009, %r896, %r1024, %r13012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13014, %r13012, %r13013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13017, %r13009, %r13014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13020, %r885, %r1046, %r13001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13024, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13025, %r13001, %r13024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13028, %r13020, %r13025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13031, %r896, %r1046, %r13012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13035, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13036, %r13012, %r13035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13039, %r13031, %r13036;
	// end inline asm
	// begin inline asm
	mov.b32 %r13047, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13058, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13044, %r885, %r1070, %r13047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13049, %r13047, %r13048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13052, %r13044, %r13049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13055, %r896, %r1070, %r13058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13060, %r13058, %r13059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13063, %r13055, %r13060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13066, %r885, %r1092, %r13047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13070, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13071, %r13047, %r13070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13074, %r13066, %r13071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13077, %r896, %r1092, %r13058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13081, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13082, %r13058, %r13081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13085, %r13077, %r13082;
	// end inline asm
	// begin inline asm
	mov.b32 %r13093, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13104, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13090, %r885, %r1116, %r13093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13095, %r13093, %r13094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13098, %r13090, %r13095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13101, %r896, %r1116, %r13104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13106, %r13104, %r13105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13109, %r13101, %r13106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13112, %r885, %r1138, %r13093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13116, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13117, %r13093, %r13116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13120, %r13112, %r13117;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13123, %r896, %r1138, %r13104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13127, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13128, %r13104, %r13127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13131, %r13123, %r13128;
	// end inline asm
	// begin inline asm
	mov.b32 %r13139, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13150, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13136, %r885, %r1162, %r13139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13141, %r13139, %r13140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13144, %r13136, %r13141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13147, %r896, %r1162, %r13150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13151, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13152, %r13150, %r13151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13155, %r13147, %r13152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13158, %r885, %r1184, %r13139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13162, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13163, %r13139, %r13162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13166, %r13158, %r13163;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13169, %r896, %r1184, %r13150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13173, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13174, %r13150, %r13173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13177, %r13169, %r13174;
	// end inline asm
	// begin inline asm
	mov.b32 %r13185, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13196, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13182, %r885, %r1208, %r13185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13187, %r13185, %r13186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13190, %r13182, %r13187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13193, %r896, %r1208, %r13196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13197, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13198, %r13196, %r13197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13201, %r13193, %r13198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13204, %r885, %r1230, %r13185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13208, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13209, %r13185, %r13208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13212, %r13204, %r13209;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13215, %r896, %r1230, %r13196, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13219, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13220, %r13196, %r13219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13223, %r13215, %r13220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r303, %r12868, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r303, %r12879, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r303, %r12890, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r303, %r12901, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r303, %r12914, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r303, %r12925, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r303, %r12936, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r303, %r12947, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r303, %r12960, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r303, %r12971, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r303, %r12982, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r303, %r12993, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r303, %r13006, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r303, %r13017, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r303, %r13028, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r303, %r13039, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r321, %r13052, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r321, %r13063, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r321, %r13074, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r321, %r13085, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r321, %r13098, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r321, %r13109, %r12805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r321, %r13120, %r12810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r321, %r13131, %r12815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13322, %r321, %r13144, %r12820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13326, %r321, %r13155, %r12825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13330, %r321, %r13166, %r12830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13334, %r321, %r13177, %r12835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13338, %r321, %r13190, %r12840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13342, %r321, %r13201, %r12845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13346, %r321, %r13212, %r12850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13350, %r321, %r13223, %r12855;
	// end inline asm
	// begin inline asm
	mov.b32 %r13359, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13370, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13356, %r885, %r4702, %r13359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13360, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13361, %r13359, %r13360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13364, %r13356, %r13361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13367, %r896, %r4702, %r13370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13371, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13372, %r13370, %r13371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13375, %r13367, %r13372;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13378, %r885, %r4724, %r13359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13382, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13383, %r13359, %r13382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13386, %r13378, %r13383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13389, %r896, %r4724, %r13370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13393, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13394, %r13370, %r13393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13397, %r13389, %r13394;
	// end inline asm
	// begin inline asm
	mov.b32 %r13405, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13416, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13402, %r885, %r4748, %r13405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13407, %r13405, %r13406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13410, %r13402, %r13407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13413, %r896, %r4748, %r13416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13418, %r13416, %r13417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13421, %r13413, %r13418;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13424, %r885, %r4770, %r13405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13428, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13429, %r13405, %r13428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13432, %r13424, %r13429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13435, %r896, %r4770, %r13416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13439, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13440, %r13416, %r13439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13443, %r13435, %r13440;
	// end inline asm
	// begin inline asm
	mov.b32 %r13451, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13462, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13448, %r885, %r4794, %r13451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13453, %r13451, %r13452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13456, %r13448, %r13453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13459, %r896, %r4794, %r13462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13464, %r13462, %r13463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13467, %r13459, %r13464;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13470, %r885, %r4816, %r13451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13475, %r13451, %r13474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13478, %r13470, %r13475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13481, %r896, %r4816, %r13462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13485, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13486, %r13462, %r13485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13489, %r13481, %r13486;
	// end inline asm
	// begin inline asm
	mov.b32 %r13497, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13508, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13494, %r885, %r4840, %r13497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13499, %r13497, %r13498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13502, %r13494, %r13499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13505, %r896, %r4840, %r13508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13510, %r13508, %r13509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13513, %r13505, %r13510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13516, %r885, %r4862, %r13497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13520, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13521, %r13497, %r13520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13524, %r13516, %r13521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13527, %r896, %r4862, %r13508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13531, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13532, %r13508, %r13531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13535, %r13527, %r13532;
	// end inline asm
	// begin inline asm
	mov.b32 %r13543, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13554, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13540, %r885, %r4886, %r13543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13545, %r13543, %r13544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13548, %r13540, %r13545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13551, %r896, %r4886, %r13554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13556, %r13554, %r13555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13559, %r13551, %r13556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13562, %r885, %r4908, %r13543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13566, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13567, %r13543, %r13566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13570, %r13562, %r13567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13573, %r896, %r4908, %r13554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13577, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13578, %r13554, %r13577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13581, %r13573, %r13578;
	// end inline asm
	// begin inline asm
	mov.b32 %r13589, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13600, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13586, %r885, %r4932, %r13589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13591, %r13589, %r13590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13594, %r13586, %r13591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13597, %r896, %r4932, %r13600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13602, %r13600, %r13601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13605, %r13597, %r13602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13608, %r885, %r4954, %r13589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13612, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13613, %r13589, %r13612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13616, %r13608, %r13613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13619, %r896, %r4954, %r13600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13623, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13624, %r13600, %r13623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13627, %r13619, %r13624;
	// end inline asm
	// begin inline asm
	mov.b32 %r13635, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13646, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13632, %r885, %r4978, %r13635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13637, %r13635, %r13636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13640, %r13632, %r13637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13643, %r896, %r4978, %r13646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13647, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13648, %r13646, %r13647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13651, %r13643, %r13648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13654, %r885, %r5000, %r13635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13659, %r13635, %r13658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13662, %r13654, %r13659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13665, %r896, %r5000, %r13646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13669, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13670, %r13646, %r13669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13673, %r13665, %r13670;
	// end inline asm
	// begin inline asm
	mov.b32 %r13681, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13692, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13678, %r885, %r5024, %r13681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13683, %r13681, %r13682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13686, %r13678, %r13683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13689, %r896, %r5024, %r13692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13693, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13694, %r13692, %r13693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13697, %r13689, %r13694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13700, %r885, %r5046, %r13681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13704, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13705, %r13681, %r13704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13708, %r13700, %r13705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13711, %r896, %r5046, %r13692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13715, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13716, %r13692, %r13715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13719, %r13711, %r13716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13722, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13724, %r13722, %r13364, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13728, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13730, %r13728, %r13375, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13734, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13736, %r13734, %r13386, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13740, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13742, %r13740, %r13397, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13746, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13748, %r13746, %r13410, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13752, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13754, %r13752, %r13421, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13758, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13760, %r13758, %r13432, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13764, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13766, %r13764, %r13443, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13770, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13772, %r13770, %r13456, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13776, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13778, %r13776, %r13467, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13782, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13784, %r13782, %r13478, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13788, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13790, %r13788, %r13489, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13794, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13796, %r13794, %r13502, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13800, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13802, %r13800, %r13513, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13806, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13808, %r13806, %r13524, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13812, %r339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13814, %r13812, %r13535, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13818, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13820, %r13818, %r13548, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13824, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13826, %r13824, %r13559, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13830, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13832, %r13830, %r13570, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13836, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13838, %r13836, %r13581, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13842, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13844, %r13842, %r13594, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13848, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13850, %r13848, %r13605, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13854, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13856, %r13854, %r13616, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13860, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13862, %r13860, %r13627, %r13318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13866, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13868, %r13866, %r13640, %r13322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13872, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13874, %r13872, %r13651, %r13326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13878, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13880, %r13878, %r13662, %r13330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13884, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13886, %r13884, %r13673, %r13334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13890, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13892, %r13890, %r13686, %r13338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13896, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13898, %r13896, %r13697, %r13342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13902, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13904, %r13902, %r13708, %r13346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13908, %r357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13910, %r13908, %r13719, %r13350;
	// end inline asm
	// begin inline asm
	mov.b32 %r13919, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13930, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13916, %r885, %r8518, %r13919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13920, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13921, %r13919, %r13920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13924, %r13916, %r13921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13927, %r896, %r8518, %r13930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13931, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13932, %r13930, %r13931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13935, %r13927, %r13932;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13938, %r885, %r8540, %r13919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13942, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13943, %r13919, %r13942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13946, %r13938, %r13943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13949, %r896, %r8540, %r13930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13953, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13954, %r13930, %r13953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13957, %r13949, %r13954;
	// end inline asm
	// begin inline asm
	mov.b32 %r13965, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13976, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13962, %r885, %r8564, %r13965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13966, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13967, %r13965, %r13966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13970, %r13962, %r13967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13973, %r896, %r8564, %r13976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13978, %r13976, %r13977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13981, %r13973, %r13978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13984, %r885, %r8586, %r13965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13988, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13989, %r13965, %r13988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13992, %r13984, %r13989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13995, %r896, %r8586, %r13976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13999, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14000, %r13976, %r13999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14003, %r13995, %r14000;
	// end inline asm
	// begin inline asm
	mov.b32 %r14011, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14022, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14008, %r885, %r8610, %r14011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14012, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14013, %r14011, %r14012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14016, %r14008, %r14013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14019, %r896, %r8610, %r14022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14024, %r14022, %r14023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14027, %r14019, %r14024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14030, %r885, %r8632, %r14011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14034, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14035, %r14011, %r14034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14038, %r14030, %r14035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14041, %r896, %r8632, %r14022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14045, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14046, %r14022, %r14045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14049, %r14041, %r14046;
	// end inline asm
	// begin inline asm
	mov.b32 %r14057, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14068, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14054, %r885, %r8656, %r14057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14058, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14059, %r14057, %r14058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14062, %r14054, %r14059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14065, %r896, %r8656, %r14068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14070, %r14068, %r14069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14073, %r14065, %r14070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14076, %r885, %r8678, %r14057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14080, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14081, %r14057, %r14080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14084, %r14076, %r14081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14087, %r896, %r8678, %r14068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14091, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14092, %r14068, %r14091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14095, %r14087, %r14092;
	// end inline asm
	// begin inline asm
	mov.b32 %r14103, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14114, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14100, %r885, %r8702, %r14103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14104, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14105, %r14103, %r14104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14108, %r14100, %r14105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14111, %r896, %r8702, %r14114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14116, %r14114, %r14115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14119, %r14111, %r14116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14122, %r885, %r8724, %r14103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14126, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14127, %r14103, %r14126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14130, %r14122, %r14127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14133, %r896, %r8724, %r14114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14137, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14138, %r14114, %r14137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14141, %r14133, %r14138;
	// end inline asm
	// begin inline asm
	mov.b32 %r14149, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14160, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14146, %r885, %r8748, %r14149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14150, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14151, %r14149, %r14150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14154, %r14146, %r14151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14157, %r896, %r8748, %r14160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14162, %r14160, %r14161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14165, %r14157, %r14162;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14168, %r885, %r8770, %r14149, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14172, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14173, %r14149, %r14172;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14176, %r14168, %r14173;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14179, %r896, %r8770, %r14160, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14183, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14184, %r14160, %r14183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14187, %r14179, %r14184;
	// end inline asm
	// begin inline asm
	mov.b32 %r14195, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14206, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14192, %r885, %r8794, %r14195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14196, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14197, %r14195, %r14196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14200, %r14192, %r14197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14203, %r896, %r8794, %r14206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14207, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14208, %r14206, %r14207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14211, %r14203, %r14208;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14214, %r885, %r8816, %r14195, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14218, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14219, %r14195, %r14218;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14222, %r14214, %r14219;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14225, %r896, %r8816, %r14206, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14229, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14230, %r14206, %r14229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14233, %r14225, %r14230;
	// end inline asm
	// begin inline asm
	mov.b32 %r14241, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14252, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14238, %r885, %r8840, %r14241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14242, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14243, %r14241, %r14242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14246, %r14238, %r14243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14249, %r896, %r8840, %r14252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14253, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14254, %r14252, %r14253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14257, %r14249, %r14254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14260, %r885, %r8862, %r14241, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14264, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14265, %r14241, %r14264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14268, %r14260, %r14265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14271, %r896, %r8862, %r14252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14275, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14276, %r14252, %r14275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14279, %r14271, %r14276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r375, %r13924, %r13724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r375, %r13935, %r13730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r375, %r13946, %r13736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r375, %r13957, %r13742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r375, %r13970, %r13748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r375, %r13981, %r13754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r375, %r13992, %r13760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r375, %r14003, %r13766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r375, %r14016, %r13772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r375, %r14027, %r13778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r375, %r14038, %r13784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r375, %r14049, %r13790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r375, %r14062, %r13796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r375, %r14073, %r13802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r375, %r14084, %r13808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r375, %r14095, %r13814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r393, %r14108, %r13820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r393, %r14119, %r13826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r393, %r14130, %r13832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r393, %r14141, %r13838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r393, %r14154, %r13844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r393, %r14165, %r13850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r393, %r14176, %r13856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r393, %r14187, %r13862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r393, %r14200, %r13868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r393, %r14211, %r13874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r393, %r14222, %r13880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r393, %r14233, %r13886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r393, %r14246, %r13892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r393, %r14257, %r13898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r393, %r14268, %r13904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r393, %r14279, %r13910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14410, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14412, %r14410, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r457, %r14417, %r14412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14419, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14421, %r14419, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r457, %r14426, %r14421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14428, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14430, %r14428, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r457, %r14435, %r14430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14437, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14439, %r14437, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r457, %r14444, %r14439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14446, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14448, %r14446, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r457, %r14453, %r14448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14455, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14457, %r14455, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r457, %r14462, %r14457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14464, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14466, %r14464, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r457, %r14471, %r14466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14473, %r463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14475, %r14473, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r457, %r14480, %r14475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14482, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r14482, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r460, %r14489, %r14484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14491, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r14491, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r460, %r14498, %r14493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14500, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r14500, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r460, %r14507, %r14502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14509, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r14509, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r460, %r14516, %r14511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14518, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14520, %r14518, %r14522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r460, %r14525, %r14520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14527, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r14527, %r14531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r460, %r14534, %r14529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14536, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14538, %r14536, %r14540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r460, %r14543, %r14538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14545, %r466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r14545, %r14549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r460, %r14552, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r463, %r14417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r457, %r14414, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r463, %r14426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r457, %r14423, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r463, %r14435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r457, %r14432, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r463, %r14444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r457, %r14441, %r14575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r463, %r14453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r457, %r14450, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r463, %r14462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r457, %r14459, %r14589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14596, %r463, %r14471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r457, %r14468, %r14596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14603, %r463, %r14480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14606, %r457, %r14477, %r14603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14610, %r466, %r14489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14613, %r460, %r14486, %r14610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14617, %r466, %r14498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14620, %r460, %r14495, %r14617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14624, %r466, %r14507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14627, %r460, %r14504, %r14624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14631, %r466, %r14516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14634, %r460, %r14513, %r14631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14638, %r466, %r14525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14641, %r460, %r14522, %r14638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14645, %r466, %r14534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14648, %r460, %r14531, %r14645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14652, %r466, %r14543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14655, %r460, %r14540, %r14652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14659, %r466, %r14552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14662, %r460, %r14549, %r14659;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14833, %r14830}, {%r512, %r518, %r515, %r521}, {%r14415, %r14557}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14842, %r14839}, {%r512, %r518, %r515, %r521}, {%r14424, %r14564}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14851, %r14848}, {%r512, %r518, %r515, %r521}, {%r14433, %r14571}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14860, %r14857}, {%r512, %r518, %r515, %r521}, {%r14442, %r14578}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14869, %r14866}, {%r512, %r518, %r515, %r521}, {%r14451, %r14585}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14878, %r14875}, {%r512, %r518, %r515, %r521}, {%r14460, %r14592}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14887, %r14884}, {%r512, %r518, %r515, %r521}, {%r14469, %r14599}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14896, %r14893}, {%r512, %r518, %r515, %r521}, {%r14478, %r14606}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14905, %r14902}, {%r512, %r518, %r515, %r521}, {%r14487, %r14613}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14914, %r14911}, {%r512, %r518, %r515, %r521}, {%r14496, %r14620}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14923, %r14920}, {%r512, %r518, %r515, %r521}, {%r14505, %r14627}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14932, %r14929}, {%r512, %r518, %r515, %r521}, {%r14514, %r14634}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14941, %r14938}, {%r512, %r518, %r515, %r521}, {%r14523, %r14641}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14950, %r14947}, {%r512, %r518, %r515, %r521}, {%r14532, %r14648}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14959, %r14956}, {%r512, %r518, %r515, %r521}, {%r14541, %r14655}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14968, %r14965}, {%r512, %r518, %r515, %r521}, {%r14550, %r14662}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14826, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14828, %r14826, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14831, %r562, %r14833, %r14828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14835, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14837, %r14835, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14840, %r562, %r14842, %r14837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14844, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14846, %r14844, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14849, %r562, %r14851, %r14846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14853, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14855, %r14853, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14858, %r562, %r14860, %r14855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14862, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14864, %r14862, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14867, %r562, %r14869, %r14864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14871, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14873, %r14871, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14876, %r562, %r14878, %r14873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14880, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14882, %r14880, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14885, %r562, %r14887, %r14882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14889, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14891, %r14889, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14894, %r562, %r14896, %r14891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14898, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r14898, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r562, %r14905, %r14900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14907, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r14907, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r562, %r14914, %r14909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14916, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r14916, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r562, %r14923, %r14918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14925, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r14925, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r562, %r14932, %r14927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14934, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14936, %r14934, %r14938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14939, %r562, %r14941, %r14936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14943, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r14943, %r14947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r562, %r14950, %r14945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14952, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14954, %r14952, %r14956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14957, %r562, %r14959, %r14954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14961, %r565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r14961, %r14965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r562, %r14968, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r565, %r14833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r562, %r14830, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r565, %r14842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r562, %r14839, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r565, %r14851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r562, %r14848, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r565, %r14860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r562, %r14857, %r14991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r565, %r14869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r562, %r14866, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r565, %r14878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r562, %r14875, %r15005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15012, %r565, %r14887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15015, %r562, %r14884, %r15012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15019, %r565, %r14896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15022, %r562, %r14893, %r15019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15026, %r565, %r14905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15029, %r562, %r14902, %r15026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15033, %r565, %r14914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15036, %r562, %r14911, %r15033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15040, %r565, %r14923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15043, %r562, %r14920, %r15040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15047, %r565, %r14932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15050, %r562, %r14929, %r15047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15054, %r565, %r14941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15057, %r562, %r14938, %r15054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15061, %r565, %r14950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15064, %r562, %r14947, %r15061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15068, %r565, %r14959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15071, %r562, %r14956, %r15068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15075, %r565, %r14968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15078, %r562, %r14965, %r15075;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15371, %r15374}, {%r600, %r606, %r603, %r609}, {%r14831, %r14973}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15377, %r15380}, {%r600, %r606, %r603, %r609}, {%r14840, %r14980}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15383, %r15386}, {%r600, %r606, %r603, %r609}, {%r14849, %r14987}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15389, %r15392}, {%r600, %r606, %r603, %r609}, {%r14858, %r14994}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15395, %r15398}, {%r600, %r606, %r603, %r609}, {%r14867, %r15001}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15401, %r15404}, {%r600, %r606, %r603, %r609}, {%r14876, %r15008}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15407, %r15410}, {%r600, %r606, %r603, %r609}, {%r14885, %r15015}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15413, %r15416}, {%r600, %r606, %r603, %r609}, {%r14894, %r15022}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15372, %r15375}, {%r600, %r606, %r603, %r609}, {%r14903, %r15029}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15378, %r15381}, {%r600, %r606, %r603, %r609}, {%r14912, %r15036}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15384, %r15387}, {%r600, %r606, %r603, %r609}, {%r14921, %r15043}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15390, %r15393}, {%r600, %r606, %r603, %r609}, {%r14930, %r15050}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15396, %r15399}, {%r600, %r606, %r603, %r609}, {%r14939, %r15057}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15402, %r15405}, {%r600, %r606, %r603, %r609}, {%r14948, %r15064}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15408, %r15411}, {%r600, %r606, %r603, %r609}, {%r14957, %r15071}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15414, %r15417}, {%r600, %r606, %r603, %r609}, {%r14966, %r15078}, {%r803, %r803};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15370, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15373, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15376, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15379, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15382, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15385, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15388, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15391, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15394, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15397, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15400, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15403, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15406, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15409, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15412, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15415, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15418, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15421, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15424, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15427, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15430, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15433, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15436, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15439, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15442, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15445, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15448, %r15401, %r15402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15451, %r15404, %r15405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15454, %r15407, %r15408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15457, %r15410, %r15411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15460, %r15413, %r15414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15463, %r15416, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r230, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r230, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r230, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r230, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r230, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r230, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r230, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r230, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r230, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r230, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r230, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r230, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r230, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r230, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r230, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r230, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r231, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r231, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r231, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r231, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r231, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r231, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r231, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r231, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r231, %r15442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15541, %r231, %r15445;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15544, %r231, %r15448;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15547, %r231, %r15451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15550, %r231, %r15454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15553, %r231, %r15457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15556, %r231, %r15460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15559, %r231, %r15463;
	// end inline asm
	// begin inline asm
	mov.b32 %r15562, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15564, %r15466, %r15562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15567, %r15564, %r15563;
	// end inline asm
	// begin inline asm
	mov.b32 %r15570, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15572, %r15469, %r15570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15575, %r15572, %r15571;
	// end inline asm
	// begin inline asm
	mov.b32 %r15578, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15580, %r15472, %r15578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15583, %r15580, %r15579;
	// end inline asm
	// begin inline asm
	mov.b32 %r15586, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15588, %r15475, %r15586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15591, %r15588, %r15587;
	// end inline asm
	// begin inline asm
	mov.b32 %r15594, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15596, %r15478, %r15594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15599, %r15596, %r15595;
	// end inline asm
	// begin inline asm
	mov.b32 %r15602, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15604, %r15481, %r15602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15607, %r15604, %r15603;
	// end inline asm
	// begin inline asm
	mov.b32 %r15610, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15612, %r15484, %r15610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15615, %r15612, %r15611;
	// end inline asm
	// begin inline asm
	mov.b32 %r15618, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15620, %r15487, %r15618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15623, %r15620, %r15619;
	// end inline asm
	// begin inline asm
	mov.b32 %r15626, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15628, %r15490, %r15626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15631, %r15628, %r15627;
	// end inline asm
	// begin inline asm
	mov.b32 %r15634, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15636, %r15493, %r15634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15639, %r15636, %r15635;
	// end inline asm
	// begin inline asm
	mov.b32 %r15642, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15644, %r15496, %r15642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15647, %r15644, %r15643;
	// end inline asm
	// begin inline asm
	mov.b32 %r15650, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15652, %r15499, %r15650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15655, %r15652, %r15651;
	// end inline asm
	// begin inline asm
	mov.b32 %r15658, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15660, %r15502, %r15658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15663, %r15660, %r15659;
	// end inline asm
	// begin inline asm
	mov.b32 %r15666, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15668, %r15505, %r15666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15671, %r15668, %r15667;
	// end inline asm
	// begin inline asm
	mov.b32 %r15674, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15676, %r15508, %r15674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15679, %r15676, %r15675;
	// end inline asm
	// begin inline asm
	mov.b32 %r15682, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15684, %r15511, %r15682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15687, %r15684, %r15683;
	// end inline asm
	// begin inline asm
	mov.b32 %r15690, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15692, %r15514, %r15690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15695, %r15692, %r15691;
	// end inline asm
	// begin inline asm
	mov.b32 %r15698, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15700, %r15517, %r15698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15703, %r15700, %r15699;
	// end inline asm
	// begin inline asm
	mov.b32 %r15706, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15708, %r15520, %r15706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15711, %r15708, %r15707;
	// end inline asm
	// begin inline asm
	mov.b32 %r15714, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15716, %r15523, %r15714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15719, %r15716, %r15715;
	// end inline asm
	// begin inline asm
	mov.b32 %r15722, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15724, %r15526, %r15722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15727, %r15724, %r15723;
	// end inline asm
	// begin inline asm
	mov.b32 %r15730, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15731, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15732, %r15529, %r15730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15735, %r15732, %r15731;
	// end inline asm
	// begin inline asm
	mov.b32 %r15738, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15739, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15740, %r15532, %r15738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15743, %r15740, %r15739;
	// end inline asm
	// begin inline asm
	mov.b32 %r15746, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15748, %r15535, %r15746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15751, %r15748, %r15747;
	// end inline asm
	// begin inline asm
	mov.b32 %r15754, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15755, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15756, %r15538, %r15754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15759, %r15756, %r15755;
	// end inline asm
	// begin inline asm
	mov.b32 %r15762, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15763, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15764, %r15541, %r15762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15767, %r15764, %r15763;
	// end inline asm
	// begin inline asm
	mov.b32 %r15770, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15772, %r15544, %r15770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15775, %r15772, %r15771;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15779, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15780, %r15547, %r15778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15783, %r15780, %r15779;
	// end inline asm
	// begin inline asm
	mov.b32 %r15786, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15787, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15788, %r15550, %r15786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15791, %r15788, %r15787;
	// end inline asm
	// begin inline asm
	mov.b32 %r15794, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15796, %r15553, %r15794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15799, %r15796, %r15795;
	// end inline asm
	// begin inline asm
	mov.b32 %r15802, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15804, %r15556, %r15802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15807, %r15804, %r15803;
	// end inline asm
	// begin inline asm
	mov.b32 %r15810, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15811, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15812, %r15559, %r15810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15815, %r15812, %r15811;
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15821, %r15819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15567, %r15820;
	// end inline asm
	// begin inline asm
	mov.b32 %r15826, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15821, %r15826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15830, %r15575, %r15827;
	// end inline asm
	// begin inline asm
	mov.b32 %r15833, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15821, %r15833;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15837, %r15583, %r15834;
	// end inline asm
	// begin inline asm
	mov.b32 %r15840, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15821, %r15840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15844, %r15591, %r15841;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15847, %r15823, %r15837, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15851, %r15830, %r15844, %r4402;
	// end inline asm
	shl.b32 	%r15858, %r15851, 4;
	// begin inline asm
	lop3.b32 %r15855, %r4408, %r15847, %r15858, 202;
	// end inline asm
	xor.b32  	%r16242, %r15855, -2004318072;
	// begin inline asm
	mov.b32 %r15862, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15862, %r15860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15599, %r15861;
	// end inline asm
	// begin inline asm
	mov.b32 %r15867, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15862, %r15867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15871, %r15607, %r15868;
	// end inline asm
	// begin inline asm
	mov.b32 %r15874, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15862, %r15874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15878, %r15615, %r15875;
	// end inline asm
	// begin inline asm
	mov.b32 %r15881, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15862, %r15881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15885, %r15623, %r15882;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15888, %r15864, %r15878, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15892, %r15871, %r15885, %r4402;
	// end inline asm
	shl.b32 	%r15899, %r15892, 4;
	// begin inline asm
	lop3.b32 %r15896, %r4408, %r15888, %r15899, 202;
	// end inline asm
	xor.b32  	%r16243, %r15896, -2004318072;
	// begin inline asm
	mov.b32 %r15903, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15901, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15903, %r15901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15631, %r15902;
	// end inline asm
	// begin inline asm
	mov.b32 %r15908, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15903, %r15908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15912, %r15639, %r15909;
	// end inline asm
	// begin inline asm
	mov.b32 %r15915, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15903, %r15915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15919, %r15647, %r15916;
	// end inline asm
	// begin inline asm
	mov.b32 %r15922, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15903, %r15922;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15926, %r15655, %r15923;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15929, %r15905, %r15919, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15933, %r15912, %r15926, %r4402;
	// end inline asm
	shl.b32 	%r15940, %r15933, 4;
	// begin inline asm
	lop3.b32 %r15937, %r4408, %r15929, %r15940, 202;
	// end inline asm
	xor.b32  	%r16244, %r15937, -2004318072;
	// begin inline asm
	mov.b32 %r15944, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15942, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15944, %r15942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15663, %r15943;
	// end inline asm
	// begin inline asm
	mov.b32 %r15949, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15944, %r15949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15953, %r15671, %r15950;
	// end inline asm
	// begin inline asm
	mov.b32 %r15956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15944, %r15956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15960, %r15679, %r15957;
	// end inline asm
	// begin inline asm
	mov.b32 %r15963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15944, %r15963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15967, %r15687, %r15964;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15970, %r15946, %r15960, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15974, %r15953, %r15967, %r4402;
	// end inline asm
	shl.b32 	%r15981, %r15974, 4;
	// begin inline asm
	lop3.b32 %r15978, %r4408, %r15970, %r15981, 202;
	// end inline asm
	xor.b32  	%r16245, %r15978, -2004318072;
	// begin inline asm
	mov.b32 %r15985, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15983, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15985, %r15983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15695, %r15984;
	// end inline asm
	// begin inline asm
	mov.b32 %r15990, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15985, %r15990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15994, %r15703, %r15991;
	// end inline asm
	// begin inline asm
	mov.b32 %r15997, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15985, %r15997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16001, %r15711, %r15998;
	// end inline asm
	// begin inline asm
	mov.b32 %r16004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15985, %r16004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16008, %r15719, %r16005;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16011, %r15987, %r16001, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16015, %r15994, %r16008, %r4402;
	// end inline asm
	shl.b32 	%r16022, %r16015, 4;
	// begin inline asm
	lop3.b32 %r16019, %r4408, %r16011, %r16022, 202;
	// end inline asm
	xor.b32  	%r16246, %r16019, -2004318072;
	// begin inline asm
	mov.b32 %r16026, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16024, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r16026, %r16024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r15727, %r16025;
	// end inline asm
	// begin inline asm
	mov.b32 %r16031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r16026, %r16031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16035, %r15735, %r16032;
	// end inline asm
	// begin inline asm
	mov.b32 %r16038, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r16026, %r16038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16042, %r15743, %r16039;
	// end inline asm
	// begin inline asm
	mov.b32 %r16045, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r16026, %r16045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16049, %r15751, %r16046;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16052, %r16028, %r16042, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16056, %r16035, %r16049, %r4402;
	// end inline asm
	shl.b32 	%r16063, %r16056, 4;
	// begin inline asm
	lop3.b32 %r16060, %r4408, %r16052, %r16063, 202;
	// end inline asm
	xor.b32  	%r16247, %r16060, -2004318072;
	// begin inline asm
	mov.b32 %r16067, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16065, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16066, %r16067, %r16065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r15759, %r16066;
	// end inline asm
	// begin inline asm
	mov.b32 %r16072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16073, %r16067, %r16072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16076, %r15767, %r16073;
	// end inline asm
	// begin inline asm
	mov.b32 %r16079, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16080, %r16067, %r16079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16083, %r15775, %r16080;
	// end inline asm
	// begin inline asm
	mov.b32 %r16086, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16087, %r16067, %r16086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16090, %r15783, %r16087;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16093, %r16069, %r16083, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16097, %r16076, %r16090, %r4402;
	// end inline asm
	shl.b32 	%r16104, %r16097, 4;
	// begin inline asm
	lop3.b32 %r16101, %r4408, %r16093, %r16104, 202;
	// end inline asm
	xor.b32  	%r16248, %r16101, -2004318072;
	// begin inline asm
	mov.b32 %r16108, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16106, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16107, %r16108, %r16106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16110, %r15791, %r16107;
	// end inline asm
	// begin inline asm
	mov.b32 %r16113, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16114, %r16108, %r16113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16117, %r15799, %r16114;
	// end inline asm
	// begin inline asm
	mov.b32 %r16120, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16121, %r16108, %r16120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16124, %r15807, %r16121;
	// end inline asm
	// begin inline asm
	mov.b32 %r16127, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16128, %r16108, %r16127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16131, %r15815, %r16128;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16134, %r16110, %r16124, %r4402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16138, %r16117, %r16131, %r4402;
	// end inline asm
	shl.b32 	%r16145, %r16138, 4;
	// begin inline asm
	lop3.b32 %r16142, %r4408, %r16134, %r16145, 202;
	// end inline asm
	xor.b32  	%r16249, %r16142, -2004318072;
	st.shared.u32 	[%rd116], %r16242;
	st.shared.u32 	[%rd118], %r16243;
	st.shared.u32 	[%rd120], %r16244;
	st.shared.u32 	[%rd122], %r16245;
	st.shared.u32 	[%rd124], %r16246;
	st.shared.u32 	[%rd126], %r16247;
	st.shared.u32 	[%rd128], %r16248;
	st.shared.u32 	[%rd130], %r16249;
	add.s32 	%r16414, %r16414, 128;
	setp.eq.s32 	%p329, %r16414, 256;
	@%p329 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29817
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16255, [%rd5];
	ld.shared.u32 	%r16256, [%rd6+128];
	ld.shared.u32 	%r16263, [%rd6+4];
	ld.shared.u32 	%r16264, [%rd6+132];
	ld.shared.u32 	%r16271, [%rd7];
	ld.shared.u32 	%r16272, [%rd8+128];
	ld.shared.u32 	%r16279, [%rd8+4];
	ld.shared.u32 	%r16280, [%rd8+132];
	ld.shared.u32 	%r16287, [%rd5+16644];
	ld.shared.u32 	%r16288, [%rd6+16772];
	ld.shared.u32 	%r16295, [%rd6+16648];
	ld.shared.u32 	%r16296, [%rd6+16776];
	ld.shared.u32 	%r16303, [%rd7+16644];
	ld.shared.u32 	%r16304, [%rd8+16772];
	ld.shared.u32 	%r16311, [%rd8+16648];
	ld.shared.u32 	%r16312, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16250, %r16255, %r16256, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16254, %r16255, %r16256, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16258, %r16263, %r16264, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16262, %r16263, %r16264, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16266, %r16271, %r16272, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16270, %r16271, %r16272, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16274, %r16279, %r16280, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16278, %r16279, %r16280, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16282, %r16287, %r16288, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16286, %r16287, %r16288, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16290, %r16295, %r16296, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16294, %r16295, %r16296, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16298, %r16303, %r16304, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16302, %r16303, %r16304, %r802;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16306, %r16311, %r16312, %r798;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16310, %r16311, %r16312, %r802;
	// end inline asm
	selp.b32 	%r16314, %r16254, %r16250, %p315;
	shfl.sync.bfly.b32	%r251, %r16314, 8, 31, -1;
	selp.b32 	%r16315, %r16262, %r16258, %p315;
	shfl.sync.bfly.b32	%r252, %r16315, 8, 31, -1;
	selp.b32 	%r16316, %r16270, %r16266, %p315;
	shfl.sync.bfly.b32	%r253, %r16316, 8, 31, -1;
	selp.b32 	%r16317, %r16278, %r16274, %p315;
	shfl.sync.bfly.b32	%r254, %r16317, 8, 31, -1;
	selp.b32 	%r16318, %r16286, %r16282, %p315;
	shfl.sync.bfly.b32	%r16319, %r16318, 8, 31, -1;
	selp.b32 	%r16320, %r16294, %r16290, %p315;
	shfl.sync.bfly.b32	%r16321, %r16320, 8, 31, -1;
	selp.b32 	%r16322, %r16302, %r16298, %p315;
	shfl.sync.bfly.b32	%r16323, %r16322, 8, 31, -1;
	selp.b32 	%r16324, %r16310, %r16306, %p315;
	shfl.sync.bfly.b32	%r16325, %r16324, 8, 31, -1;
	and.b32  	%r263, %r16389, 768;
	setp.lt.u32 	%p331, %r263, 384;
	shl.b32 	%r16344, %r16389, 12;
	@%p331 bra 	$L__BB0_186;
// %bb.185:                             // %pass28509
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16326, %r254, %r16278, %p315;
	selp.b32 	%r16327, %r16274, %r254, %p315;
	selp.b32 	%r16328, %r253, %r16270, %p315;
	selp.b32 	%r16329, %r16266, %r253, %p315;
	selp.b32 	%r16330, %r252, %r16262, %p315;
	selp.b32 	%r16331, %r16258, %r252, %p315;
	selp.b32 	%r16332, %r251, %r16254, %p315;
	selp.b32 	%r16333, %r16250, %r251, %p315;
	or.b32  	%r16335, %r16344, %r137;
	cvt.s64.s32 	%rd131, %r16335;
	add.s64 	%rd132, %rd131, %rd9;
	shr.u64 	%rd133, %rd132, 39;
	add.s64 	%rd134, %rd132, %rd133;
	shr.s64 	%rd135, %rd134, 25;
	setp.lt.s64 	%p333, %rd132, 0;
	and.b64  	%rd136, %rd134, -33554432;
	setp.ne.s64 	%p334, %rd136, %rd132;
	and.pred  	%p335, %p333, %p334;
	selp.u64 	%rd137, 1, 0, %p335;
	sub.s64 	%rd138, %rd137, %rd135;
	shl.b64 	%rd139, %rd138, 25;
	add.s64 	%rd140, %rd139, %rd132;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd142, %rd3, %rd141;
	st.global.v4.u32 	[%rd142], {%r16333, %r16331, %r16332, %r16330};
	add.s32 	%r16336, %r138, %r16344;
	cvt.s64.s32 	%rd143, %r16336;
	add.s64 	%rd144, %rd143, %rd9;
	shr.u64 	%rd145, %rd144, 39;
	add.s64 	%rd146, %rd144, %rd145;
	shr.u64 	%rd147, %rd146, 25;
	shr.u64 	%rd148, %rd144, 63;
	sub.s64 	%rd149, %rd148, %rd147;
	shl.b64 	%rd150, %rd149, 25;
	add.s64 	%rd151, %rd150, %rd144;
	shl.b64 	%rd152, %rd151, 2;
	add.s64 	%rd153, %rd3, %rd152;
	st.global.v4.u32 	[%rd153], {%r16329, %r16327, %r16328, %r16326};
$L__BB0_186:                            // %pass28635
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16337, %r263, 128;
	setp.lt.u32 	%p336, %r16337, 384;
	@%p336 bra 	$L__BB0_187;
// %bb.189:                             // %pass28729
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r255, %r16282, %r16319, %p315;
	selp.b32 	%r256, %r16319, %r16286, %p315;
	selp.b32 	%r257, %r16290, %r16321, %p315;
	selp.b32 	%r258, %r16321, %r16294, %p315;
	selp.b32 	%r259, %r16298, %r16323, %p315;
	selp.b32 	%r260, %r16323, %r16302, %p315;
	selp.b32 	%r261, %r16306, %r16325, %p315;
	selp.b32 	%r262, %r16325, %r16310, %p315;
	or.b32  	%r16339, %r16344, 524288;
	or.b32  	%r16340, %r16339, %r137;
	cvt.s64.s32 	%rd154, %r16340;
	add.s64 	%rd155, %rd154, %rd9;
	shr.u64 	%rd156, %rd155, 39;
	add.s64 	%rd157, %rd155, %rd156;
	shr.s64 	%rd158, %rd157, 25;
	setp.lt.s64 	%p337, %rd155, 0;
	and.b64  	%rd159, %rd157, -33554432;
	setp.ne.s64 	%p338, %rd159, %rd155;
	and.pred  	%p339, %p337, %p338;
	selp.u64 	%rd160, 1, 0, %p339;
	sub.s64 	%rd161, %rd160, %rd158;
	shl.b64 	%rd162, %rd161, 25;
	add.s64 	%rd163, %rd162, %rd155;
	shl.b64 	%rd164, %rd163, 2;
	add.s64 	%rd165, %rd3, %rd164;
	st.global.v4.u32 	[%rd165], {%r255, %r257, %r256, %r258};
	add.s32 	%r16341, %r138, %r16339;
	cvt.s64.s32 	%rd166, %r16341;
	add.s64 	%rd167, %rd166, %rd9;
	shr.u64 	%rd168, %rd167, 39;
	add.s64 	%rd169, %rd167, %rd168;
	shr.u64 	%rd170, %rd169, 25;
	shr.u64 	%rd171, %rd167, 63;
	sub.s64 	%rd172, %rd171, %rd170;
	shl.b64 	%rd173, %rd172, 25;
	add.s64 	%rd174, %rd173, %rd167;
	shl.b64 	%rd175, %rd174, 2;
	add.s64 	%rd176, %rd3, %rd175;
	st.global.v4.u32 	[%rd176], {%r259, %r261, %r260, %r262};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70764
	mov.u32 	%r16342, 0;
	st.global.u32 	[%rd4], %r16342;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r16343, 2;
	st.global.u32 	[%rd4], %r16343;
	mov.u64 	%rd177, exception5808;
	cvta.global.u64 	%rd178, %rd177;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd178;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r264;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd45, exception1;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd24;
	st.param.b32 	[param0+8], %r264;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
