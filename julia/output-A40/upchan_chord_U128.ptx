// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5817[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15841[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<310>;
	.reg .b16 	%rs<2415>;
	.reg .b32 	%r<16317>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<117>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r219, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r226, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r226, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r220, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r227, %r4, 9;
	or.b32  	%r228, %r3, %r1;
	or.b32  	%r229, %r228, %r227;
	mul.wide.u32 	%rd30, %r229, 4;
	add.s64 	%rd3, %rd24, %rd30;
	mov.u32 	%r230, 1;
	st.global.u32 	[%rd3], %r230;
	setp.gt.u32 	%p2, %r220, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r221, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r221, %r220;
	setp.gt.s32 	%p4, %r221, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r222, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r231, %r221, %r220;
	and.b32  	%r232, %r231, 255;
	setp.ne.s32 	%p6, %r232, 0;
	setp.gt.u32 	%p7, %r222, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r223, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r223, %r222;
	setp.gt.s32 	%p10, %r223, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r233, %r223, %r222;
	and.b32  	%r234, %r233, 1;
	setp.eq.b32 	%p12, %r234, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r224, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r224, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r225, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r224, %r225;
	setp.lt.s32 	%p17, %r225, 49;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r127, %r1, 1, 1;
	and.b32  	%r128, %r1, 1;
	bfe.u32 	%r130, %r1, 2, 1;
	shr.u32 	%r131, %r1, 4;
	shl.b32 	%r243, %r131, 2;
	shl.b32 	%r244, %r130, 3;
	shl.b32 	%r245, %r128, 4;
	shl.b32 	%r246, %r127, 5;
	or.b32  	%r247, %r245, %r246;
	or.b32  	%r248, %r244, %r247;
	or.b32  	%r249, %r243, %r248;
	bfe.u32 	%r133, %r1, 3, 1;
	shl.b32 	%r250, %r133, 1;
	or.b32  	%r134, %r250, %r249;
	or.b32  	%r135, %r134, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r134;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L767
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L770
	cvt.rn.f32.s32 	%f257, %r135;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L787
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L790
	or.b32  	%r268, %r134, 1;
	or.b32  	%r6, %r134, 65;
	cvt.rn.f32.s32 	%f292, %r268;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L869
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L872
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L889
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L892
	or.b32  	%r286, %r134, 128;
	or.b32  	%r8, %r134, 192;
	cvt.rn.f32.s32 	%f361, %r286;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L971
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L974
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L991
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L994
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r304, %r134, 129;
	or.b32  	%r10, %r134, 193;
	cvt.rn.f32.s32 	%f430, %r304;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1073
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1076
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1093
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1096
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r322, %r134, 256;
	or.b32  	%r12, %r134, 320;
	cvt.rn.f32.s32 	%f499, %r322;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1175
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1178
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1195
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1198
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r340, %r134, 257;
	or.b32  	%r14, %r134, 321;
	cvt.rn.f32.s32 	%f568, %r340;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1277
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1280
	mov.b32 	%r251, %f230;
	mov.b32 	%r258, %f264;
	mov.b32 	%r269, %f299;
	mov.b32 	%r276, %f333;
	mov.b32 	%r287, %f368;
	mov.b32 	%r294, %f402;
	mov.b32 	%r305, %f437;
	mov.b32 	%r312, %f471;
	mov.b32 	%r323, %f506;
	mov.b32 	%r330, %f540;
	mov.b32 	%r341, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r348, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1297
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1300
	shr.u32 	%r235, %r4, 3;
	and.b32  	%r252, %r251, -2147483648;
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r270, %r269, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r288, %r287, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r306, %r305, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r324, %r323, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r342, %r341, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	or.b32  	%r358, %r134, 384;
	or.b32  	%r16, %r134, 448;
	cvt.rn.f32.s32 	%f637, %r358;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r359, %f644;
	and.b32  	%r360, %r359, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1379
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1382
	cvt.u16.u32 	%rs1, %r235;
	or.b32  	%r253, %r252, 1056964608;
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r271, %r270, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r289, %r288, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r307, %r306, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r325, %r324, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r343, %r342, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r361, %r360, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r366, %f678;
	and.b32  	%r367, %r366, -2147483648;
	or.b32  	%r368, %r367, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1399
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1402
	and.b16  	%rs2, %rs1, 255;
	mov.b32 	%f231, %r253;
	mov.b32 	%f265, %r260;
	mov.b32 	%f300, %r271;
	mov.b32 	%f334, %r278;
	mov.b32 	%f369, %r289;
	mov.b32 	%f403, %r296;
	mov.b32 	%f438, %r307;
	mov.b32 	%f472, %r314;
	mov.b32 	%f507, %r325;
	mov.b32 	%f541, %r332;
	mov.b32 	%f576, %r343;
	mov.b32 	%f610, %r350;
	mov.b32 	%f645, %r361;
	mov.b32 	%f679, %r368;
	or.b32  	%r376, %r134, 385;
	or.b32  	%r18, %r134, 449;
	cvt.rn.f32.s32 	%f706, %r376;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r377, %f713;
	and.b32  	%r378, %r377, -2147483648;
	or.b32  	%r379, %r378, 1056964608;
	mov.b32 	%f714, %r379;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1481
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1484
	mul.lo.s16 	%rs3, %rs2, 171;
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r126, %r1, 1;
	shr.u32 	%r132, %r1, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r384, %f747;
	and.b32  	%r385, %r384, -2147483648;
	or.b32  	%r386, %r385, 1056964608;
	mov.b32 	%f748, %r386;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1501
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1504
	shl.b32 	%r116, %r1, 2;
	shr.u16 	%rs4, %rs3, 13;
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r406, %r134, 127;
	and.b32  	%r407, %r406, 255;
	cvt.rn.f32.s32 	%f774, %r407;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r408, %f777;
	and.b32  	%r409, %r408, -2147483648;
	or.b32  	%r410, %r409, 1056964608;
	mov.b32 	%f778, %r410;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r416, %r406, 192;
	and.b32  	%r417, %r416, 255;
	cvt.rn.f32.s32 	%f809, %r417;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r418, %f811;
	and.b32  	%r419, %r418, -2147483648;
	or.b32  	%r420, %r419, 1056964608;
	mov.b32 	%f812, %r420;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r426, %r132, 2;
	and.b32  	%r427, %r126, 4;
	or.b32  	%r428, %r130, %r426;
	or.b32  	%r24, %r428, %r427;
	and.b32  	%r429, %r1, 3;
	mul.lo.s32 	%r430, %r429, %r24;
	shl.b32 	%r431, %r430, 1;
	neg.s32 	%r432, %r431;
	cvt.rn.f32.s32 	%f842, %r432;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_125;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_45;
$L__BB0_121:
	mov.b32 	%r137, %f1296;
	and.b32  	%r433, %r137, 8388607;
	or.b32  	%r16284, %r433, 1065353216;
	mov.b32 	%f1295, %r16284;
	add.s32 	%r434, %r137, -1073741824;
	and.b32  	%r16285, %r434, -8388608;
	setp.eq.s32 	%p136, %r16285, 0;
	@%p136 bra 	$L__BB0_124;
// %bb.122:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_123:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r435, %r16285, 192937984;
	add.s32 	%r436, %r16284, %r435;
	mov.b32 	%f854, %r436;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16285, %r16285, %r435;
	mov.b32 	%r16284, %f1295;
	setp.ne.s32 	%p137, %r16285, 0;
	setp.ne.s32 	%p138, %r16284, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_123;
$L__BB0_124:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r137, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_125;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r136, %f144;
	setp.lt.u32 	%p131, %r136, 1073741824;
	@%p131 bra 	$L__BB0_120;
// %bb.46:
	setp.lt.u32 	%p132, %r136, -2147483647;
	@%p132 bra 	$L__BB0_118;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_120;
$L__BB0_118:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_120;
// %bb.119:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_120:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_125:                            // %__internal_fmodf_kernel.exit.i1717
	and.b32  	%r117, %r116, 4;
	shl.b32 	%r119, %r1, 1;
	mul.lo.s16 	%rs5, %rs4, 48;
	and.b32  	%r123, %r1, 18;
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_127;
// %bb.126:
	mov.b32 	%r437, %f71;
	and.b32  	%r438, %r437, -2147483648;
	mov.b32 	%r439, %f1296;
	or.b32  	%r440, %r438, %r439;
	mov.b32 	%f1296, %r440;
$L__BB0_127:                            // %__nv_fmodf.exit1718
	and.b32  	%r120, %r119, 8;
	sub.s16 	%rs6, %rs1, %rs5;
	or.b32  	%r236, %r123, %r117;
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r441, %f864;
	and.b32  	%r442, %r441, -2147483648;
	or.b32  	%r443, %r442, 1056964608;
	mov.b32 	%f865, %r443;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r449, %r119, 6;
	mov.u32 	%r450, -8;
	sub.s32 	%r451, %r450, %r449;
	mul.lo.s32 	%r452, %r24, %r451;
	cvt.rn.f32.s32 	%f894, %r452;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r453, %r26, 8388607;
	or.b32  	%r16251, %r453, 1065353216;
	mov.b32 	%f1279, %r16251;
	add.s32 	%r454, %r26, -1073741824;
	and.b32  	%r16252, %r454, -8388608;
	setp.eq.s32 	%p156, %r16252, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r455, %r16252, 192937984;
	add.s32 	%r456, %r16251, %r455;
	mov.b32 	%f906, %r456;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16252, %r16252, %r455;
	mov.b32 	%r16251, %f1279;
	setp.ne.s32 	%p157, %r16252, 0;
	setp.ne.s32 	%p158, %r16251, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	and.b32  	%r121, %r116, 32;
	and.b16  	%rs7, %rs6, 255;
	or.b32  	%r237, %r236, %r120;
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r457, %f160;
	and.b32  	%r458, %r457, -2147483648;
	mov.b32 	%r459, %f1280;
	or.b32  	%r460, %r458, %r459;
	mov.b32 	%f1280, %r460;
$L__BB0_61:                             // %__nv_fmodf.exit
	mul.wide.u16 	%r122, %rs7, 128;
	or.b32  	%r238, %r237, %r121;
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r473, %f916;
	and.b32  	%r474, %r473, -2147483648;
	or.b32  	%r475, %r474, 1056964608;
	mov.b32 	%f917, %r475;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r481, %r128, 2147483646;
	shl.b32 	%r482, %r127, 2;
	sub.s32 	%r483, %r481, %r482;
	mul.lo.s32 	%r484, %r483, %r24;
	shl.b32 	%r37, %r484, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_135;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_63;
$L__BB0_131:
	mov.b32 	%r145, %f1300;
	and.b32  	%r485, %r145, 8388607;
	or.b32  	%r16286, %r485, 1065353216;
	mov.b32 	%f1299, %r16286;
	add.s32 	%r486, %r145, -1073741824;
	and.b32  	%r16287, %r486, -8388608;
	setp.eq.s32 	%p176, %r16287, 0;
	@%p176 bra 	$L__BB0_134;
// %bb.132:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_133:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r487, %r16287, 192937984;
	add.s32 	%r488, %r16286, %r487;
	mov.b32 	%f959, %r488;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16287, %r16287, %r487;
	mov.b32 	%r16286, %f1299;
	setp.ne.s32 	%p177, %r16287, 0;
	setp.ne.s32 	%p178, %r16286, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_133;
$L__BB0_134:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r145, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_135;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r144, %f163;
	setp.lt.u32 	%p171, %r144, 1073741824;
	@%p171 bra 	$L__BB0_130;
// %bb.64:
	setp.lt.u32 	%p172, %r144, -2147483647;
	@%p172 bra 	$L__BB0_128;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_130;
$L__BB0_128:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_130;
// %bb.129:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_130:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_135:                            // %__internal_fmodf_kernel.exit.i1748
	or.b32  	%r239, %r238, %r122;
	cvt.rzi.s32.f32 	%r254, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r272, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r290, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r308, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r326, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r344, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r362, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r380, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r411, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r421, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r444, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r476, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_137;
// %bb.136:
	mov.b32 	%r489, %f89;
	and.b32  	%r490, %r489, -2147483648;
	mov.b32 	%r491, %f1300;
	or.b32  	%r492, %r490, %r491;
	mov.b32 	%f1300, %r492;
$L__BB0_137:                            // %__nv_fmodf.exit1749
	cvt.u16.u32 	%rs13, %r239;
	add.s32 	%r255, %r254, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r273, %r272, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r291, %r290, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r309, %r308, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r327, %r326, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r345, %r344, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r363, %r362, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r381, %r380, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r422, %r421, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r445, %r444, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r477, %r476, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r493, %f969;
	and.b32  	%r494, %r493, -2147483648;
	or.b32  	%r495, %r494, 1056964608;
	mov.b32 	%f970, %r495;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r496, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r501, %r24, 4;
	sub.s32 	%r502, %r37, %r501;
	cvt.rn.f32.s32 	%f179, %r502;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r503, %r39, 8388607;
	or.b32  	%r16253, %r503, 1065353216;
	mov.b32 	%f1283, %r16253;
	add.s32 	%r504, %r39, -1073741824;
	and.b32  	%r16254, %r504, -8388608;
	setp.eq.s32 	%p196, %r16254, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r505, %r16254, 192937984;
	add.s32 	%r506, %r16253, %r505;
	mov.b32 	%f1010, %r506;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16254, %r16254, %r505;
	mov.b32 	%r16253, %f1283;
	setp.ne.s32 	%p197, %r16254, 0;
	setp.ne.s32 	%p198, %r16253, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	shr.u32 	%r240, %r239, 1;
	shr.u16 	%rs14, %rs13, 1;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r256, %r255, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r274, %r273, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r292, %r291, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r328, %r327, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r346, %r345, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r364, %r363, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r382, %r381, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r412, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r422, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r445, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r477, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r497, %r496, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r507, %f180;
	and.b32  	%r508, %r507, -2147483648;
	mov.b32 	%r509, %f1284;
	or.b32  	%r510, %r508, %r509;
	mov.b32 	%f1284, %r510;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	cvt.u16.u32 	%rs8, %r240;
	or.b16  	%rs15, %rs14, 32;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r256, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r263, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r274, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r281, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r292, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r299, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r310, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r317, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r328, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r335, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r346, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r353, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r364, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r371, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r382, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r389, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r413, %r411, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r423, %r421, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r446, %r444, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r478, %r476, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r497, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r517, %f1020;
	and.b32  	%r518, %r517, -2147483648;
	or.b32  	%r519, %r518, 1056964608;
	mov.b32 	%f1021, %r519;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r520, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r521, %r520, 1;
	setp.eq.b32 	%p204, %r521, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_145;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_141;
	bra.uni 	$L__BB0_81;
$L__BB0_141:
	mov.b32 	%r153, %f1304;
	and.b32  	%r525, %r153, 8388607;
	or.b32  	%r16288, %r525, 1065353216;
	mov.b32 	%f1303, %r16288;
	add.s32 	%r526, %r153, -1073741824;
	and.b32  	%r16289, %r526, -8388608;
	setp.eq.s32 	%p216, %r16289, 0;
	@%p216 bra 	$L__BB0_144;
// %bb.142:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_143:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r527, %r16289, 192937984;
	add.s32 	%r528, %r16288, %r527;
	mov.b32 	%f1063, %r528;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16289, %r16289, %r527;
	mov.b32 	%r16288, %f1303;
	setp.ne.s32 	%p217, %r16289, 0;
	setp.ne.s32 	%p218, %r16288, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_143;
$L__BB0_144:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r153, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_145;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r152, %f183;
	setp.lt.u32 	%p211, %r152, 1073741824;
	@%p211 bra 	$L__BB0_140;
// %bb.82:
	setp.lt.u32 	%p212, %r152, -2147483647;
	@%p212 bra 	$L__BB0_138;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_140;
$L__BB0_138:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_140;
// %bb.139:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_140:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_145:                            // %__internal_fmodf_kernel.exit.i1779
	mul.hi.u16 	%rs9, %rs8, -21845;
	mul.hi.u16 	%rs16, %rs15, -21845;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r257, %r255, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r264, %r262, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r275, %r273, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r293, %r291, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r329, %r327, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r347, %r345, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r365, %r363, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r383, %r381, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r390, %r388, 2;
	setp.eq.s32 	%p118, %r413, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r414, %r411, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r423, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r424, %r421, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r446, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r447, %r444, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r478, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r479, %r476, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r498, %r496, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r522, %r520, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_147;
// %bb.146:
	mov.b32 	%r529, %f106;
	and.b32  	%r530, %r529, -2147483648;
	mov.b32 	%r531, %f1304;
	or.b32  	%r532, %r530, %r531;
	mov.b32 	%f1304, %r532;
$L__BB0_147:                            // %__nv_fmodf.exit1780
	shr.u16 	%rs10, %rs9, 11;
	shr.u16 	%rs17, %rs16, 11;
	setp.eq.s32 	%p23, %r257, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r264, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r275, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r282, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r293, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r300, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r311, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r318, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r329, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r336, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r347, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r354, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r365, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r372, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r383, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r390, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r415, %r414, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r425, %r424, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r448, %r447, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r480, %r479, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r498, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r499, %r496, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r522, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r523, %r520, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r533, %f1073;
	and.b32  	%r534, %r533, -2147483648;
	or.b32  	%r535, %r534, 1056964608;
	mov.b32 	%f1074, %r535;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r536, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r537, %r536, 1;
	setp.eq.b32 	%p224, %r537, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r538, %r536, 2;
	setp.eq.s32 	%p225, %r538, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r539, %r536, 1;
	and.b32  	%r540, %r539, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r541, %r49, 8388607;
	or.b32  	%r16255, %r541, 1065353216;
	mov.b32 	%f1287, %r16255;
	add.s32 	%r542, %r49, -1073741824;
	and.b32  	%r16256, %r542, -8388608;
	setp.eq.s32 	%p236, %r16256, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r543, %r16256, 192937984;
	add.s32 	%r544, %r16255, %r543;
	mov.b32 	%f1114, %r544;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16256, %r16256, %r543;
	mov.b32 	%r16255, %f1287;
	setp.ne.s32 	%p237, %r16256, 0;
	setp.ne.s32 	%p238, %r16255, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	mul.lo.s16 	%rs11, %rs10, 3072;
	mul.lo.s16 	%rs18, %rs17, 3072;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r415, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r425, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r448, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r480, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r500, %r499, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r524, %r523, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r540, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	and.b32  	%r118, %r1, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r545, %f199;
	and.b32  	%r546, %r545, -2147483648;
	mov.b32 	%r547, %f1288;
	or.b32  	%r548, %r546, %r547;
	mov.b32 	%f1288, %r548;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	sub.s16 	%rs12, %rs8, %rs11;
	sub.s16 	%rs19, %rs15, %rs18;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r500, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r524, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r561, %f1124;
	and.b32  	%r562, %r561, -2147483648;
	or.b32  	%r563, %r562, 1056964608;
	mov.b32 	%f1125, %r563;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r564, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r565, %r564, 1;
	setp.eq.b32 	%p244, %r565, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r566, %r564, 2;
	setp.eq.s32 	%p245, %r566, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r567, %r564, 1;
	and.b32  	%r568, %r567, 2;
	setp.eq.s32 	%p246, %r568, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r569, %r130, 2147483640;
	cvt.u16.u32 	%rs20, %r1;
	shr.u16 	%rs21, %rs20, 8;
	shl.b16 	%rs22, %rs20, 8;
	or.b16  	%rs23, %rs22, %rs21;
	shl.b16 	%rs24, %rs23, 4;
	shr.u16 	%rs25, %rs23, 4;
	and.b16  	%rs26, %rs25, 3840;
	or.b16  	%rs27, %rs26, %rs24;
	and.b16  	%rs28, %rs27, 13107;
	shl.b16 	%rs29, %rs28, 2;
	shr.u16 	%rs30, %rs27, 2;
	and.b16  	%rs31, %rs30, 13107;
	or.b16  	%rs32, %rs31, %rs29;
	and.b16  	%rs33, %rs32, 20480;
	shl.b16 	%rs34, %rs33, 1;
	shr.u16 	%rs35, %rs32, 1;
	and.b16  	%rs36, %rs35, 16384;
	or.b16  	%rs37, %rs36, %rs34;
	shr.u16 	%rs38, %rs37, 13;
	sub.s32 	%r570, %r569, %r118;
	mad.lo.s32 	%r571, %r133, 2147483616, %r570;
	or.b16  	%rs39, %rs38, 1;
	cvt.u32.u16 	%r572, %rs39;
	and.b16  	%rs40, %rs38, 6;
	cvt.u32.u16 	%r573, %rs40;
	sub.s32 	%r574, %r571, %r573;
	shl.b32 	%r575, %r574, 1;
	cvt.rn.f32.s32 	%f1156, %r575;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_155;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_99;
$L__BB0_151:
	mov.b32 	%r161, %f1308;
	and.b32  	%r576, %r161, 8388607;
	or.b32  	%r16290, %r576, 1065353216;
	mov.b32 	%f1307, %r16290;
	add.s32 	%r577, %r161, -1073741824;
	and.b32  	%r16291, %r577, -8388608;
	setp.eq.s32 	%p256, %r16291, 0;
	@%p256 bra 	$L__BB0_154;
// %bb.152:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_153:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r578, %r16291, 192937984;
	add.s32 	%r579, %r16290, %r578;
	mov.b32 	%f1168, %r579;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16291, %r16291, %r578;
	mov.b32 	%r16290, %f1307;
	setp.ne.s32 	%p257, %r16291, 0;
	setp.ne.s32 	%p258, %r16290, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_153;
$L__BB0_154:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r161, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_155;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r160, %f202;
	setp.lt.u32 	%p251, %r160, 1073741824;
	@%p251 bra 	$L__BB0_150;
// %bb.100:
	setp.lt.u32 	%p252, %r160, -2147483647;
	@%p252 bra 	$L__BB0_148;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_150;
$L__BB0_148:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_150;
// %bb.149:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_150:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_155:                            // %__internal_fmodf_kernel.exit.i1810
	cvt.u32.u16 	%r241, %rs12;
	cvt.u32.u16 	%r242, %rs19;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r571, %r572;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_157;
// %bb.156:
	mov.b32 	%r580, %f123;
	and.b32  	%r581, %r580, -2147483648;
	mov.b32 	%r582, %f1308;
	or.b32  	%r583, %r581, %r582;
	mov.b32 	%f1308, %r583;
$L__BB0_157:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd31, %r241, 4;
	mul.wide.u32 	%rd33, %r242, 4;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r398, %f808;
	mov.b32 	%r399, %f841;
	mov.b32 	%r404, %f805;
	mov.b32 	%r405, %f838;
	mov.b32 	%r472, %f947;
	mov.b32 	%r471, %f159;
	mov.b32 	%r469, %f944;
	mov.b32 	%r468, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r560, %f1155;
	mov.b32 	%r559, %f198;
	mov.b32 	%r557, %f1152;
	mov.b32 	%r556, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r584, %f1178;
	and.b32  	%r585, %r584, -2147483648;
	or.b32  	%r586, %r585, 1056964608;
	mov.b32 	%f1179, %r586;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r587, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r588, %r587, 1;
	setp.eq.b32 	%p264, %r588, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r589, %r587, 2;
	setp.eq.s32 	%p265, %r589, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r590, %r587, 1;
	and.b32  	%r591, %r590, 2;
	setp.eq.s32 	%p266, %r591, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r592, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r592;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r593, %r62, 8388607;
	or.b32  	%r16257, %r593, 1065353216;
	mov.b32 	%f1291, %r16257;
	add.s32 	%r594, %r62, -1073741824;
	and.b32  	%r16258, %r594, -8388608;
	setp.eq.s32 	%p276, %r16258, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r595, %r16258, 192937984;
	add.s32 	%r596, %r16257, %r595;
	mov.b32 	%f1220, %r596;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16258, %r16258, %r595;
	mov.b32 	%r16257, %f1291;
	setp.ne.s32 	%p277, %r16258, 0;
	setp.ne.s32 	%p278, %r16257, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd32, %rd1, %rd31;
	add.s64 	%rd34, %rd1, %rd33;
	shr.u32 	%r129, %r1, 2;
	mov.b32 	%r267, %f291;
	mov.b32 	%r266, %f3;
	mov.b32 	%r285, %f360;
	mov.b32 	%r284, %f12;
	mov.b32 	%r303, %f429;
	mov.b32 	%r302, %f21;
	mov.b32 	%r321, %f498;
	mov.b32 	%r320, %f30;
	mov.b32 	%r339, %f567;
	mov.b32 	%r338, %f39;
	mov.b32 	%r357, %f636;
	mov.b32 	%r356, %f48;
	mov.b32 	%r375, %f705;
	mov.b32 	%r374, %f57;
	mov.b32 	%r393, %f773;
	mov.b32 	%r392, %f66;
	xor.b32  	%r466, %r469, -2147483648;
	xor.b32  	%r465, %r468, -2147483648;
	mov.b32 	%r513, %f1051;
	mov.b32 	%r512, %f178;
	mov.b32 	%r516, %f1048;
	mov.b32 	%r515, %f177;
	xor.b32  	%r554, %r557, -2147483648;
	xor.b32  	%r553, %r556, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r597, %f218;
	and.b32  	%r598, %r597, -2147483648;
	mov.b32 	%r599, %f1292;
	or.b32  	%r600, %r598, %r599;
	mov.b32 	%f1292, %r600;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.global.u32 	%r124, [%rd32];
	ld.global.u32 	%r125, [%rd34];
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r301, %r303, %r302;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r319, %r321, %r320;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r337, %r339, %r338;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r355, %r357, %r356;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r373, %r375, %r374;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r405, %r404;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r461, %r472, %r471;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r464, %r466, %r465;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r472, %r471;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r511, %r513, %r512;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r514, %r516, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r549, %r560, %r559;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r552, %r554, %r553;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r555, %r557, %r556;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r558, %r560, %r559;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r608, %f1230;
	and.b32  	%r609, %r608, -2147483648;
	or.b32  	%r610, %r609, 1056964608;
	mov.b32 	%f1231, %r610;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r611, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r612, %r611, 1;
	setp.eq.b32 	%p284, %r612, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r613, %r611, 2;
	setp.eq.s32 	%p285, %r613, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r614, %r611, 1;
	and.b32  	%r615, %r614, 2;
	setp.eq.s32 	%p286, %r615, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r603, %f1261;
	mov.b32 	%r602, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r601, %r603, %r602;
	// end inline asm
	mov.b32 	%r606, %f1258;
	mov.b32 	%r605, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r604, %r606, %r605;
	// end inline asm
	shl.b32 	%r616, %r224, 8;
	cvt.u16.u32 	%rs41, %r122;
	mul.hi.u16 	%rs42, %rs41, -21845;
	shr.u16 	%rs43, %rs42, 5;
	mul.lo.s16 	%rs44, %rs43, 48;
	sub.s16 	%rs45, %rs41, %rs44;
	shl.b16 	%rs46, %rs45, 8;
	cvt.u32.u16 	%r617, %rs46;
	shl.b32 	%r618, %r4, 5;
	shl.b32 	%r619, %r1, 3;
	and.b32  	%r71, %r619, 64;
	and.b32  	%r620, %r116, 28;
	and.b32  	%r621, %r618, 224;
	or.b32  	%r622, %r621, %r620;
	or.b32  	%r623, %r622, %r616;
	add.s32 	%r72, %r623, %r617;
	and.b32  	%r73, %r1, 8;
	shl.b32 	%r624, %r1, 4;
	or.b32  	%r625, %r73, %r624;
	shr.u32 	%r626, %r625, 2;
	and.b32  	%r627, %r626, 30;
	and.b32  	%r74, %r129, 6;
	and.b32  	%r628, %r3, 32;
	shr.u32 	%r629, %r2, 1;
	or.b32  	%r630, %r628, %r629;
	or.b32  	%r631, %r630, 8;
	or.b32  	%r632, %r630, 16;
	or.b32  	%r633, %r630, 24;
	or.b32  	%r634, %r123, %r121;
	or.b32  	%r635, %r634, %r120;
	or.b32  	%r636, %r635, %r117;
	shr.u32 	%r637, %r636, 1;
	mul.lo.s32 	%r638, %r637, 65;
	add.s32 	%r75, %r630, %r638;
	add.s32 	%r76, %r631, %r638;
	add.s32 	%r77, %r632, %r638;
	add.s32 	%r78, %r633, %r638;
	add.s32 	%r639, %r638, 2080;
	add.s32 	%r79, %r630, %r639;
	add.s32 	%r80, %r631, %r639;
	add.s32 	%r81, %r632, %r639;
	add.s32 	%r82, %r633, %r639;
	shl.b32 	%r640, %r2, 1;
	or.b32  	%r641, %r131, %r640;
	mul.lo.s32 	%r642, %r641, 65;
	add.s32 	%r643, %r627, %r642;
	mul.wide.u32 	%rd35, %r643, 4;
	mov.u64 	%rd36, shmem;
	add.s64 	%rd4, %rd36, %rd35;
	cvt.u64.u32 	%rd37, %r627;
	cvt.u64.u32 	%rd38, %r642;
	add.s64 	%rd39, %rd38, %rd37;
	shl.b64 	%rd40, %rd39, 2;
	add.s64 	%rd5, %rd36, %rd40;
	or.b32  	%r644, %r641, 32;
	mul.lo.s32 	%r645, %r644, 65;
	add.s32 	%r646, %r645, %r627;
	mul.wide.u32 	%rd41, %r646, 4;
	add.s64 	%rd6, %rd36, %rd41;
	cvt.u64.u32 	%rd42, %r645;
	add.s64 	%rd43, %rd42, %rd37;
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd7, %rd36, %rd44;
	and.b32  	%r83, %r119, 32;
	bfe.s32 	%r647, %r2, 2, 1;
	and.b32  	%r648, %r2, 4;
	setp.eq.s32 	%p289, %r648, 0;
	and.b32  	%r649, %r647, 520;
	mul.lo.s32 	%r650, %r131, 65;
	and.b32  	%r651, %r2, 1;
	neg.s32 	%r652, %r651;
	and.b32  	%r653, %r652, 2080;
	bfe.s32 	%r654, %r2, 1, 1;
	and.b32  	%r655, %r2, 2;
	setp.eq.s32 	%p290, %r655, 0;
	and.b32  	%r656, %r654, 1040;
	shr.u32 	%r657, %r2, 3;
	mul.lo.s32 	%r658, %r657, 260;
	or.b32  	%r659, %r653, %r627;
	add.s32 	%r660, %r659, %r649;
	add.s32 	%r661, %r660, %r650;
	add.s32 	%r662, %r661, %r656;
	add.s32 	%r663, %r662, %r658;
	mul.wide.u32 	%rd45, %r663, 4;
	add.s64 	%rd8, %rd36, %rd45;
	cvt.u64.u32 	%rd46, %r658;
	selp.b64 	%rd47, 0, 1040, %p290;
	cvt.u64.u32 	%rd48, %r650;
	selp.b64 	%rd49, 0, 520, %p289;
	cvt.u64.u32 	%rd50, %r659;
	add.s64 	%rd51, %rd50, %rd49;
	add.s64 	%rd52, %rd51, %rd48;
	add.s64 	%rd53, %rd52, %rd47;
	add.s64 	%rd54, %rd53, %rd46;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd10, %rd36, %rd55;
	add.s32 	%r664, %r663, 162;
	mul.wide.u32 	%rd56, %r664, 4;
	add.s64 	%rd11, %rd36, %rd56;
	add.s32 	%r665, %r663, 131;
	mul.wide.u32 	%rd57, %r665, 4;
	add.s64 	%rd12, %rd36, %rd57;
	add.s32 	%r666, %r663, 163;
	mul.wide.u32 	%rd58, %r666, 4;
	add.s64 	%rd13, %rd36, %rd58;
	cvt.u64.u32 	%rd59, %r660;
	add.s64 	%rd60, %rd59, %rd48;
	add.s64 	%rd61, %rd60, %rd47;
	add.s64 	%rd62, %rd61, %rd46;
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd14, %rd36, %rd63;
	add.s32 	%r667, %r663, 4193;
	mul.wide.u32 	%rd64, %r667, 4;
	add.s64 	%rd15, %rd36, %rd64;
	add.s32 	%r668, %r663, 4162;
	mul.wide.u32 	%rd65, %r668, 4;
	add.s64 	%rd16, %rd36, %rd65;
	add.s32 	%r669, %r663, 4194;
	mul.wide.u32 	%rd66, %r669, 4;
	add.s64 	%rd17, %rd36, %rd66;
	add.s32 	%r670, %r663, 4291;
	mul.wide.u32 	%rd67, %r670, 4;
	add.s64 	%rd18, %rd36, %rd67;
	add.s32 	%r671, %r663, 4323;
	mul.wide.u32 	%rd68, %r671, 4;
	add.s64 	%rd19, %rd36, %rd68;
	add.s32 	%r672, %r663, 4292;
	mul.wide.u32 	%rd69, %r672, 4;
	add.s64 	%rd20, %rd36, %rd69;
	add.s32 	%r673, %r663, 4324;
	mul.wide.u32 	%rd70, %r673, 4;
	add.s64 	%rd21, %rd36, %rd70;
	setp.eq.s32 	%p291, %r128, 0;
	selp.b32 	%r674, 0, 130, %p291;
	bfe.s32 	%r675, %r1, 1, 1;
	and.b32  	%r84, %r675, 65;
	setp.eq.s32 	%p292, %r120, 0;
	selp.b32 	%r85, 0, 260, %p292;
	add.s32 	%r86, %r630, %r674;
	add.s32 	%r87, %r631, %r674;
	add.s32 	%r88, %r632, %r674;
	add.s32 	%r89, %r633, %r674;
	bfe.s32 	%r676, %r1, 2, 1;
	and.b32  	%r90, %r676, 260;
	add.s32 	%r677, %r646, 4193;
	mul.wide.u32 	%rd71, %r677, 4;
	add.s64 	%rd22, %rd36, %rd71;
	mov.u32 	%r16259, 0;
	setp.eq.s32 	%p294, %r73, 0;
	mov.u16 	%rs2406, 25600;
	mov.u16 	%rs2198, 21504;
	mov.u16 	%rs2414, 18432;
	mov.u32 	%r16260, %r16259;
	mov.u32 	%r16261, %r16259;
	mov.u32 	%r16262, %r16259;
	mov.u32 	%r16263, %r16259;
	mov.u32 	%r16264, %r16259;
	mov.u32 	%r16265, %r16259;
	mov.u32 	%r16266, %r16259;
	mov.u32 	%r16267, %r16259;
	mov.u32 	%r16268, %r16259;
	mov.u32 	%r16269, %r16259;
	mov.u32 	%r16270, %r16259;
	mov.u32 	%r16271, %r16259;
	mov.u32 	%r16272, %r16259;
	mov.u32 	%r16273, %r16259;
	mov.u32 	%r16274, %r16259;
	mov.u32 	%r16275, %r16259;
	mov.u32 	%r16276, %r16259;
	mov.u32 	%r16277, %r16259;
	mov.u32 	%r16278, %r16259;
	mov.u32 	%r16279, %r16259;
	mov.u32 	%r16280, %r16259;
	mov.u32 	%r16281, %r16259;
	mov.u32 	%r16282, %r16259;
	mov.u32 	%r16283, %r16259;
$L__BB0_116:                            // %L2125
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_159 Depth 2
	add.s32 	%r678, %r16283, %r220;
	setp.lt.s32 	%p293, %r678, %r221;
	@%p293 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_117;
$L__BB0_158:                            // %pass837
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r745, %r16283, %r83;
	or.b32  	%r746, %r745, %r71;
	or.b32  	%r747, %r746, %r2;
	add.s32 	%r748, %r747, %r220;
	mad.lo.s32 	%r749, %r748, 12288, %r72;
	mul.hi.s32 	%r750, %r749, 715827883;
	shr.u32 	%r751, %r750, 31;
	shr.s32 	%r752, %r750, 26;
	add.s32 	%r753, %r752, %r751;
	setp.lt.s32 	%p295, %r749, 0;
	mul.lo.s32 	%r754, %r753, 402653184;
	setp.ne.s32 	%p296, %r754, %r749;
	and.pred  	%p297, %p295, %p296;
	selp.s32 	%r755, -1, 0, %p297;
	add.s32 	%r756, %r753, %r755;
	mad.lo.s32 	%r757, %r756, -402653184, %r749;
	mul.wide.s32 	%rd72, %r757, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r758, %r759, %r760, %r761}, [%rd73];
	or.b32  	%r762, %r747, 16;
	add.s32 	%r763, %r762, %r220;
	mad.lo.s32 	%r764, %r763, 12288, %r72;
	mul.hi.s32 	%r765, %r764, 715827883;
	shr.u32 	%r766, %r765, 31;
	shr.s32 	%r767, %r765, 26;
	add.s32 	%r768, %r767, %r766;
	setp.lt.s32 	%p298, %r764, 0;
	mul.lo.s32 	%r769, %r768, 402653184;
	setp.ne.s32 	%p299, %r769, %r764;
	and.pred  	%p300, %p298, %p299;
	selp.s32 	%r770, -1, 0, %p300;
	add.s32 	%r771, %r768, %r770;
	mad.lo.s32 	%r772, %r771, -402653184, %r764;
	mul.wide.s32 	%rd74, %r772, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r773, %r774, %r775, %r776}, [%rd75];
	or.b32  	%r777, %r747, 128;
	add.s32 	%r778, %r777, %r220;
	mad.lo.s32 	%r779, %r778, 12288, %r72;
	mul.hi.s32 	%r780, %r779, 715827883;
	shr.u32 	%r781, %r780, 31;
	shr.s32 	%r782, %r780, 26;
	add.s32 	%r783, %r782, %r781;
	setp.lt.s32 	%p301, %r779, 0;
	mul.lo.s32 	%r784, %r783, 402653184;
	setp.ne.s32 	%p302, %r784, %r779;
	and.pred  	%p303, %p301, %p302;
	selp.s32 	%r785, -1, 0, %p303;
	add.s32 	%r786, %r783, %r785;
	mad.lo.s32 	%r787, %r786, -402653184, %r779;
	mul.wide.s32 	%rd76, %r787, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r788, %r789, %r790, %r791}, [%rd77];
	or.b32  	%r792, %r747, 144;
	add.s32 	%r793, %r792, %r220;
	mad.lo.s32 	%r794, %r793, 12288, %r72;
	mul.hi.s32 	%r795, %r794, 715827883;
	shr.u32 	%r796, %r795, 31;
	shr.s32 	%r797, %r795, 26;
	add.s32 	%r798, %r797, %r796;
	setp.lt.s32 	%p304, %r794, 0;
	mul.lo.s32 	%r799, %r798, 402653184;
	setp.ne.s32 	%p305, %r799, %r794;
	and.pred  	%p306, %p304, %p305;
	selp.s32 	%r800, -1, 0, %p306;
	add.s32 	%r801, %r798, %r800;
	mad.lo.s32 	%r802, %r801, -402653184, %r794;
	mul.wide.s32 	%rd78, %r802, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r803, %r804, %r805, %r806}, [%rd79];
	selp.b32 	%r807, %r760, %r758, %p294;
	shfl.sync.bfly.b32	%r808, %r807, 8, 31, -1;
	selp.b32 	%r681, %r758, %r808, %p294;
	selp.b32 	%r682, %r808, %r760, %p294;
	selp.b32 	%r809, %r761, %r759, %p294;
	shfl.sync.bfly.b32	%r810, %r809, 8, 31, -1;
	selp.b32 	%r689, %r759, %r810, %p294;
	selp.b32 	%r690, %r810, %r761, %p294;
	selp.b32 	%r811, %r775, %r773, %p294;
	shfl.sync.bfly.b32	%r812, %r811, 8, 31, -1;
	selp.b32 	%r697, %r773, %r812, %p294;
	selp.b32 	%r698, %r812, %r775, %p294;
	selp.b32 	%r813, %r776, %r774, %p294;
	shfl.sync.bfly.b32	%r814, %r813, 8, 31, -1;
	selp.b32 	%r705, %r774, %r814, %p294;
	selp.b32 	%r706, %r814, %r776, %p294;
	selp.b32 	%r815, %r790, %r788, %p294;
	shfl.sync.bfly.b32	%r816, %r815, 8, 31, -1;
	selp.b32 	%r713, %r788, %r816, %p294;
	selp.b32 	%r714, %r816, %r790, %p294;
	selp.b32 	%r817, %r791, %r789, %p294;
	shfl.sync.bfly.b32	%r818, %r817, 8, 31, -1;
	selp.b32 	%r721, %r789, %r818, %p294;
	selp.b32 	%r722, %r818, %r791, %p294;
	selp.b32 	%r819, %r805, %r803, %p294;
	shfl.sync.bfly.b32	%r820, %r819, 8, 31, -1;
	selp.b32 	%r729, %r803, %r820, %p294;
	selp.b32 	%r730, %r820, %r805, %p294;
	selp.b32 	%r821, %r806, %r804, %p294;
	shfl.sync.bfly.b32	%r822, %r821, 8, 31, -1;
	selp.b32 	%r737, %r804, %r822, %p294;
	selp.b32 	%r738, %r822, %r806, %p294;
	mov.u32 	%r16171, 21520;
	// begin inline asm
	prmt.b32 %r680, %r681, %r682, %r16171;
	// end inline asm
	mov.u32 	%r16175, 30258;
	// begin inline asm
	prmt.b32 %r684, %r681, %r682, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r688, %r689, %r690, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r692, %r689, %r690, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r696, %r697, %r698, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r700, %r697, %r698, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r704, %r705, %r706, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r708, %r705, %r706, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r712, %r713, %r714, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r716, %r713, %r714, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r720, %r721, %r722, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r724, %r721, %r722, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r728, %r729, %r730, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r732, %r729, %r730, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r736, %r737, %r738, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r740, %r737, %r738, %r16175;
	// end inline asm
	st.shared.u32 	[%rd8], %r680;
	st.shared.u32 	[%rd10+128], %r684;
	st.shared.u32 	[%rd10+4], %r688;
	st.shared.u32 	[%rd10+132], %r692;
	st.shared.u32 	[%rd10+520], %r696;
	st.shared.u32 	[%rd11], %r700;
	st.shared.u32 	[%rd12], %r704;
	st.shared.u32 	[%rd13], %r708;
	st.shared.u32 	[%rd14+16644], %r712;
	st.shared.u32 	[%rd15], %r716;
	st.shared.u32 	[%rd16], %r720;
	st.shared.u32 	[%rd17], %r724;
	st.shared.u32 	[%rd18], %r728;
	st.shared.u32 	[%rd19], %r732;
	st.shared.u32 	[%rd20], %r736;
	st.shared.u32 	[%rd21], %r740;
	bar.sync 	0;
	or.b32  	%r168, %r16283, %r74;
	mov.u32 	%r3167, 0;
	mov.u32 	%r16292, %r3167;
$L__BB0_159:                            // %pass6356
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16087, %r168, %r16292;
	bfe.s32 	%r16088, %r16087, 2, 1;
	and.b32  	%r16089, %r16088, 520;
	bfe.s32 	%r16090, %r16087, 7, 1;
	and.b32  	%r16091, %r16090, 4161;
	bfe.s32 	%r16092, %r16087, 1, 1;
	and.b32  	%r16093, %r16092, 1040;
	add.s32 	%r16094, %r86, %r16089;
	add.s32 	%r16095, %r16094, %r16091;
	add.s32 	%r16096, %r16095, %r84;
	add.s32 	%r16097, %r16096, %r16093;
	add.s32 	%r16098, %r16097, %r85;
	mul.wide.u32 	%rd80, %r16098, 4;
	add.s64 	%rd82, %rd36, %rd80;
	ld.shared.u32 	%r16099, [%rd82];
	add.s32 	%r16100, %r87, %r16089;
	add.s32 	%r16101, %r16100, %r16091;
	add.s32 	%r16102, %r16101, %r84;
	add.s32 	%r16103, %r16102, %r16093;
	add.s32 	%r16104, %r16103, %r85;
	mul.wide.u32 	%rd83, %r16104, 4;
	add.s64 	%rd84, %rd36, %rd83;
	ld.shared.u32 	%r16105, [%rd84];
	add.s32 	%r16106, %r88, %r16089;
	add.s32 	%r16107, %r16106, %r16091;
	add.s32 	%r16108, %r16107, %r84;
	add.s32 	%r16109, %r16108, %r16093;
	add.s32 	%r16110, %r16109, %r85;
	mul.wide.u32 	%rd85, %r16110, 4;
	add.s64 	%rd86, %rd36, %rd85;
	ld.shared.u32 	%r16111, [%rd86];
	add.s32 	%r16112, %r89, %r16089;
	add.s32 	%r16113, %r16112, %r16091;
	add.s32 	%r16114, %r16113, %r84;
	add.s32 	%r16115, %r16114, %r16093;
	add.s32 	%r16116, %r16115, %r85;
	mul.wide.u32 	%rd87, %r16116, 4;
	add.s64 	%rd88, %rd36, %rd87;
	ld.shared.u32 	%r16117, [%rd88];
	add.s32 	%r16118, %r16097, %r90;
	add.s32 	%r16119, %r16118, 2080;
	mul.wide.u32 	%rd89, %r16119, 4;
	add.s64 	%rd90, %rd36, %rd89;
	ld.shared.u32 	%r16120, [%rd90];
	add.s32 	%r16121, %r16118, 2088;
	mul.wide.u32 	%rd91, %r16121, 4;
	add.s64 	%rd92, %rd36, %rd91;
	ld.shared.u32 	%r16122, [%rd92];
	add.s32 	%r16123, %r16118, 2096;
	mul.wide.u32 	%rd93, %r16123, 4;
	add.s64 	%rd94, %rd36, %rd93;
	ld.shared.u32 	%r16124, [%rd94];
	add.s32 	%r16125, %r16118, 2104;
	mul.wide.u32 	%rd95, %r16125, 4;
	add.s64 	%rd96, %rd36, %rd95;
	ld.shared.u32 	%r16126, [%rd96];
	// begin inline asm
	mov.b32 %r828, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r827, %r16099, -2004318072;
	mov.u32 	%r826, 983055;
	// begin inline asm
	lop3.b32 %r825, %r826, %r827, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r828, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	mov.u32 	%r837, 15728880;
	// begin inline asm
	lop3.b32 %r836, %r837, %r827, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r840, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r841, %r839, %r840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r844, %r836, %r841;
	// end inline asm
	shr.u32 	%r849, %r827, 8;
	// begin inline asm
	lop3.b32 %r847, %r826, %r849, %r828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r828, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r858, %r837, %r849, %r839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r839, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	// begin inline asm
	mov.b32 %r874, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r885, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r873, %r16105, -2004318072;
	// begin inline asm
	lop3.b32 %r871, %r826, %r873, %r874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r875, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r876, %r874, %r875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r879, %r871, %r876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r882, %r837, %r873, %r885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r886, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r887, %r885, %r886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r890, %r882, %r887;
	// end inline asm
	shr.u32 	%r895, %r873, 8;
	// begin inline asm
	lop3.b32 %r893, %r826, %r895, %r874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r874, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r904, %r837, %r895, %r885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r909, %r885, %r908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r912, %r904, %r909;
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r931, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r919, %r16111, -2004318072;
	// begin inline asm
	lop3.b32 %r917, %r826, %r919, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r922, %r920, %r921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r925, %r917, %r922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r928, %r837, %r919, %r931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r933, %r931, %r932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r936, %r928, %r933;
	// end inline asm
	shr.u32 	%r941, %r919, 8;
	// begin inline asm
	lop3.b32 %r939, %r826, %r941, %r920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r920, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r950, %r837, %r941, %r931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r931, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r965, %r16117, -2004318072;
	// begin inline asm
	lop3.b32 %r963, %r826, %r965, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r968, %r966, %r967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r971, %r963, %r968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r974, %r837, %r965, %r977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r979, %r977, %r978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r982, %r974, %r979;
	// end inline asm
	shr.u32 	%r987, %r965, 8;
	// begin inline asm
	lop3.b32 %r985, %r826, %r987, %r966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r966, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r996, %r837, %r987, %r977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r977, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1023, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1011, %r16120, -2004318072;
	// begin inline asm
	lop3.b32 %r1009, %r826, %r1011, %r1012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r1012, %r1013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1017, %r1009, %r1014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1020, %r837, %r1011, %r1023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1025, %r1023, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1028, %r1020, %r1025;
	// end inline asm
	shr.u32 	%r1033, %r1011, 8;
	// begin inline asm
	lop3.b32 %r1031, %r826, %r1033, %r1012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1012, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1042, %r837, %r1033, %r1023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1023, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	// begin inline asm
	mov.b32 %r1058, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1057, %r16122, -2004318072;
	// begin inline asm
	lop3.b32 %r1055, %r826, %r1057, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1060, %r1058, %r1059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1063, %r1055, %r1060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1066, %r837, %r1057, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1069, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	shr.u32 	%r1079, %r1057, 8;
	// begin inline asm
	lop3.b32 %r1077, %r826, %r1079, %r1058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1058, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1088, %r837, %r1079, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1069, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	mov.b32 %r1104, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1115, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1103, %r16124, -2004318072;
	// begin inline asm
	lop3.b32 %r1101, %r826, %r1103, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1105, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1106, %r1104, %r1105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1109, %r1101, %r1106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1112, %r837, %r1103, %r1115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1116, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1117, %r1115, %r1116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1120, %r1112, %r1117;
	// end inline asm
	shr.u32 	%r1125, %r1103, 8;
	// begin inline asm
	lop3.b32 %r1123, %r826, %r1125, %r1104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1104, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1134, %r837, %r1125, %r1115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1139, %r1115, %r1138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1142, %r1134, %r1139;
	// end inline asm
	// begin inline asm
	mov.b32 %r1150, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1161, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1149, %r16126, -2004318072;
	// begin inline asm
	lop3.b32 %r1147, %r826, %r1149, %r1150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1151, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1152, %r1150, %r1151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1155, %r1147, %r1152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1158, %r837, %r1149, %r1161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1162, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1163, %r1161, %r1162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1166, %r1158, %r1163;
	// end inline asm
	shr.u32 	%r1171, %r1149, 8;
	// begin inline asm
	lop3.b32 %r1169, %r826, %r1171, %r1150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1173, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1174, %r1150, %r1173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1177, %r1169, %r1174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1180, %r837, %r1171, %r1161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1184, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1185, %r1161, %r1184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1188, %r1180, %r1185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1191, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1193, %r1191, %r833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1196, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1198, %r1196, %r844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1201, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1203, %r1201, %r855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1206, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1208, %r1206, %r866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1211, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r1211, %r879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1216, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1218, %r1216, %r890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1221, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1223, %r1221, %r901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1226, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1228, %r1226, %r912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1231, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1233, %r1231, %r925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1238, %r1236, %r936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1241, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1243, %r1241, %r947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1248, %r1246, %r958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1253, %r1251, %r971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1258, %r1256, %r982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r1017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r1028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r1050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r1063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r1074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r1085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1328, %r1326, %r1142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r1331, %r1155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r1336, %r1166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1341, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1343, %r1341, %r1177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1346, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1348, %r1346, %r1188;
	// end inline asm
	// begin inline asm
	mov.b32 %r1356, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1367, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1355, %r16259, -2004318072;
	// begin inline asm
	lop3.b32 %r1353, %r826, %r1355, %r1356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1357, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1358, %r1356, %r1357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1361, %r1353, %r1358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1364, %r837, %r1355, %r1367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1368, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1369, %r1367, %r1368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1372, %r1364, %r1369;
	// end inline asm
	shr.u32 	%r1377, %r1355, 8;
	// begin inline asm
	lop3.b32 %r1375, %r826, %r1377, %r1356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1380, %r1356, %r1379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1383, %r1375, %r1380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1386, %r837, %r1377, %r1367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1390, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1391, %r1367, %r1390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1394, %r1386, %r1391;
	// end inline asm
	// begin inline asm
	mov.b32 %r1402, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1413, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1401, %r16260, -2004318072;
	// begin inline asm
	lop3.b32 %r1399, %r826, %r1401, %r1402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1403, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1404, %r1402, %r1403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1407, %r1399, %r1404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1410, %r837, %r1401, %r1413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1415, %r1413, %r1414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1418, %r1410, %r1415;
	// end inline asm
	shr.u32 	%r1423, %r1401, 8;
	// begin inline asm
	lop3.b32 %r1421, %r826, %r1423, %r1402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1402, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1432, %r837, %r1423, %r1413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1437, %r1413, %r1436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1440, %r1432, %r1437;
	// end inline asm
	// begin inline asm
	mov.b32 %r1448, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1447, %r16261, -2004318072;
	// begin inline asm
	lop3.b32 %r1445, %r826, %r1447, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1448, %r1449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1453, %r1445, %r1450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1456, %r837, %r1447, %r1459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1459, %r1460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1464, %r1456, %r1461;
	// end inline asm
	shr.u32 	%r1469, %r1447, 8;
	// begin inline asm
	lop3.b32 %r1467, %r826, %r1469, %r1448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1448, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1478, %r837, %r1469, %r1459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1459, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1505, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1493, %r16262, -2004318072;
	// begin inline asm
	lop3.b32 %r1491, %r826, %r1493, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1496, %r1494, %r1495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1499, %r1491, %r1496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1502, %r837, %r1493, %r1505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1505, %r1506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1510, %r1502, %r1507;
	// end inline asm
	shr.u32 	%r1515, %r1493, 8;
	// begin inline asm
	lop3.b32 %r1513, %r826, %r1515, %r1494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1494, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1524, %r837, %r1515, %r1505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1529, %r1505, %r1528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1532, %r1524, %r1529;
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1551, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1539, %r16271, -2004318072;
	// begin inline asm
	lop3.b32 %r1537, %r826, %r1539, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1542, %r1540, %r1541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1545, %r1537, %r1542;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1548, %r837, %r1539, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1553, %r1551, %r1552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1556, %r1548, %r1553;
	// end inline asm
	shr.u32 	%r1561, %r1539, 8;
	// begin inline asm
	lop3.b32 %r1559, %r826, %r1561, %r1540, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1540, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1570, %r837, %r1561, %r1551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1551, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1585, %r16272, -2004318072;
	// begin inline asm
	lop3.b32 %r1583, %r826, %r1585, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1588, %r1586, %r1587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1591, %r1583, %r1588;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1594, %r837, %r1585, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1599, %r1597, %r1598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1602, %r1594, %r1599;
	// end inline asm
	shr.u32 	%r1607, %r1585, 8;
	// begin inline asm
	lop3.b32 %r1605, %r826, %r1607, %r1586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1586, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r837, %r1607, %r1597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1597, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	// begin inline asm
	mov.b32 %r1632, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1643, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1631, %r16273, -2004318072;
	// begin inline asm
	lop3.b32 %r1629, %r826, %r1631, %r1632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1633, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1634, %r1632, %r1633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1637, %r1629, %r1634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1640, %r837, %r1631, %r1643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1644, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1645, %r1643, %r1644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1648, %r1640, %r1645;
	// end inline asm
	shr.u32 	%r1653, %r1631, 8;
	// begin inline asm
	lop3.b32 %r1651, %r826, %r1653, %r1632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1655, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1656, %r1632, %r1655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1659, %r1651, %r1656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1662, %r837, %r1653, %r1643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1666, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1667, %r1643, %r1666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1670, %r1662, %r1667;
	// end inline asm
	// begin inline asm
	mov.b32 %r1678, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1689, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1677, %r16274, -2004318072;
	// begin inline asm
	lop3.b32 %r1675, %r826, %r1677, %r1678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1680, %r1678, %r1679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1683, %r1675, %r1680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1686, %r837, %r1677, %r1689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1690, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1691, %r1689, %r1690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1694, %r1686, %r1691;
	// end inline asm
	shr.u32 	%r1699, %r1677, 8;
	// begin inline asm
	lop3.b32 %r1697, %r826, %r1699, %r1678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1701, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1702, %r1678, %r1701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1705, %r1697, %r1702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1708, %r837, %r1699, %r1689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1712, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1713, %r1689, %r1712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1716, %r1708, %r1713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r265, %r1361, %r1193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r265, %r1372, %r1198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r265, %r1383, %r1203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r265, %r1394, %r1208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r265, %r1407, %r1213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r265, %r1418, %r1218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r265, %r1429, %r1223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r265, %r1440, %r1228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r265, %r1453, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r265, %r1464, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r265, %r1475, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r265, %r1486, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r265, %r1499, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r265, %r1510, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r265, %r1521, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r265, %r1532, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r283, %r1545, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r283, %r1556, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r283, %r1567, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r283, %r1578, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r283, %r1591, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r283, %r1602, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r283, %r1613, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r283, %r1624, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r283, %r1637, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r283, %r1648, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r283, %r1659, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r283, %r1670, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r283, %r1683, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r283, %r1694, %r1338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r283, %r1705, %r1343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r283, %r1716, %r1348;
	// end inline asm
	// begin inline asm
	mov.b32 %r1852, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1863, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1851, %r16263, -2004318072;
	// begin inline asm
	lop3.b32 %r1849, %r826, %r1851, %r1852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1853, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1854, %r1852, %r1853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1857, %r1849, %r1854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1860, %r837, %r1851, %r1863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1864, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1865, %r1863, %r1864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1868, %r1860, %r1865;
	// end inline asm
	shr.u32 	%r1873, %r1851, 8;
	// begin inline asm
	lop3.b32 %r1871, %r826, %r1873, %r1852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1875, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1876, %r1852, %r1875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1879, %r1871, %r1876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1882, %r837, %r1873, %r1863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1886, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1887, %r1863, %r1886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1890, %r1882, %r1887;
	// end inline asm
	// begin inline asm
	mov.b32 %r1898, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1909, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1897, %r16264, -2004318072;
	// begin inline asm
	lop3.b32 %r1895, %r826, %r1897, %r1898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1899, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1900, %r1898, %r1899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1903, %r1895, %r1900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1906, %r837, %r1897, %r1909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1910, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1911, %r1909, %r1910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1914, %r1906, %r1911;
	// end inline asm
	shr.u32 	%r1919, %r1897, 8;
	// begin inline asm
	lop3.b32 %r1917, %r826, %r1919, %r1898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1921, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1898, %r1921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1925, %r1917, %r1922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1928, %r837, %r1919, %r1909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1933, %r1909, %r1932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1936, %r1928, %r1933;
	// end inline asm
	// begin inline asm
	mov.b32 %r1944, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r1955, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1943, %r16265, -2004318072;
	// begin inline asm
	lop3.b32 %r1941, %r826, %r1943, %r1944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1945, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1946, %r1944, %r1945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1949, %r1941, %r1946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1952, %r837, %r1943, %r1955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1956, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1957, %r1955, %r1956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1960, %r1952, %r1957;
	// end inline asm
	shr.u32 	%r1965, %r1943, 8;
	// begin inline asm
	lop3.b32 %r1963, %r826, %r1965, %r1944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1968, %r1944, %r1967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1971, %r1963, %r1968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1974, %r837, %r1965, %r1955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1979, %r1955, %r1978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1982, %r1974, %r1979;
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2001, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r1989, %r16266, -2004318072;
	// begin inline asm
	lop3.b32 %r1987, %r826, %r1989, %r1990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1991, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1992, %r1990, %r1991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1995, %r1987, %r1992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1998, %r837, %r1989, %r2001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2002, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2003, %r2001, %r2002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2006, %r1998, %r2003;
	// end inline asm
	shr.u32 	%r2011, %r1989, 8;
	// begin inline asm
	lop3.b32 %r2009, %r826, %r2011, %r1990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2014, %r1990, %r2013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2017, %r2009, %r2014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2020, %r837, %r2011, %r2001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2024, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2025, %r2001, %r2024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2028, %r2020, %r2025;
	// end inline asm
	// begin inline asm
	mov.b32 %r2036, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2047, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2035, %r16275, -2004318072;
	// begin inline asm
	lop3.b32 %r2033, %r826, %r2035, %r2036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2037, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2038, %r2036, %r2037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2041, %r2033, %r2038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2044, %r837, %r2035, %r2047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2048, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2049, %r2047, %r2048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2052, %r2044, %r2049;
	// end inline asm
	shr.u32 	%r2057, %r2035, 8;
	// begin inline asm
	lop3.b32 %r2055, %r826, %r2057, %r2036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2060, %r2036, %r2059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2063, %r2055, %r2060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2066, %r837, %r2057, %r2047, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2071, %r2047, %r2070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2074, %r2066, %r2071;
	// end inline asm
	// begin inline asm
	mov.b32 %r2082, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2081, %r16276, -2004318072;
	// begin inline asm
	lop3.b32 %r2079, %r826, %r2081, %r2082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2083, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2084, %r2082, %r2083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2087, %r2079, %r2084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2090, %r837, %r2081, %r2093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2095, %r2093, %r2094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2098, %r2090, %r2095;
	// end inline asm
	shr.u32 	%r2103, %r2081, 8;
	// begin inline asm
	lop3.b32 %r2101, %r826, %r2103, %r2082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2106, %r2082, %r2105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2109, %r2101, %r2106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2112, %r837, %r2103, %r2093, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2117, %r2093, %r2116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2120, %r2112, %r2117;
	// end inline asm
	// begin inline asm
	mov.b32 %r2128, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2139, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2127, %r16277, -2004318072;
	// begin inline asm
	lop3.b32 %r2125, %r826, %r2127, %r2128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2129, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2130, %r2128, %r2129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2133, %r2125, %r2130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2136, %r837, %r2127, %r2139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2140, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2141, %r2139, %r2140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2144, %r2136, %r2141;
	// end inline asm
	shr.u32 	%r2149, %r2127, 8;
	// begin inline asm
	lop3.b32 %r2147, %r826, %r2149, %r2128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2152, %r2128, %r2151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2155, %r2147, %r2152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2158, %r837, %r2149, %r2139, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2163, %r2139, %r2162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2166, %r2158, %r2163;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2185, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2173, %r16278, -2004318072;
	// begin inline asm
	lop3.b32 %r2171, %r826, %r2173, %r2174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2176, %r2174, %r2175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2179, %r2171, %r2176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2182, %r837, %r2173, %r2185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2186, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2187, %r2185, %r2186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2190, %r2182, %r2187;
	// end inline asm
	shr.u32 	%r2195, %r2173, 8;
	// begin inline asm
	lop3.b32 %r2193, %r826, %r2195, %r2174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2198, %r2174, %r2197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2201, %r2193, %r2198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2204, %r837, %r2195, %r2185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2208, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2185, %r2208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2212, %r2204, %r2209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2215, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2217, %r2215, %r1857, %r1719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2221, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2223, %r2221, %r1868, %r1723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2227, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2229, %r2227, %r1879, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2233, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2235, %r2233, %r1890, %r1731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2239, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2241, %r2239, %r1903, %r1735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2245, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2247, %r2245, %r1914, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2251, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2253, %r2251, %r1925, %r1743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2257, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2259, %r2257, %r1936, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2263, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2265, %r2263, %r1949, %r1751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2269, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2271, %r2269, %r1960, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2275, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2277, %r2275, %r1971, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2281, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2283, %r2281, %r1982, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2287, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2289, %r2287, %r1995, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2293, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2295, %r2293, %r2006, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2299, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2301, %r2299, %r2017, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2305, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2307, %r2305, %r2028, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2311, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2313, %r2311, %r2041, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2317, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2319, %r2317, %r2052, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2323, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2325, %r2323, %r2063, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2329, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2331, %r2329, %r2074, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2335, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2337, %r2335, %r2087, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2341, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2343, %r2341, %r2098, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2347, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2349, %r2347, %r2109, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2353, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2355, %r2353, %r2120, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2359, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2361, %r2359, %r2133, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2365, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2367, %r2365, %r2144, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2371, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2373, %r2371, %r2155, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2377, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2379, %r2377, %r2166, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2383, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2385, %r2383, %r2179, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2389, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2391, %r2389, %r2190, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2395, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2397, %r2395, %r2201, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2401, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2403, %r2401, %r2212, %r1843;
	// end inline asm
	// begin inline asm
	mov.b32 %r2412, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2423, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2411, %r16267, -2004318072;
	// begin inline asm
	lop3.b32 %r2409, %r826, %r2411, %r2412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2413, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2414, %r2412, %r2413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2417, %r2409, %r2414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2420, %r837, %r2411, %r2423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2424, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2425, %r2423, %r2424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2428, %r2420, %r2425;
	// end inline asm
	shr.u32 	%r2433, %r2411, 8;
	// begin inline asm
	lop3.b32 %r2431, %r826, %r2433, %r2412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2436, %r2412, %r2435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2439, %r2431, %r2436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2442, %r837, %r2433, %r2423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2446, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2447, %r2423, %r2446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2450, %r2442, %r2447;
	// end inline asm
	// begin inline asm
	mov.b32 %r2458, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2469, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2457, %r16268, -2004318072;
	// begin inline asm
	lop3.b32 %r2455, %r826, %r2457, %r2458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2460, %r2458, %r2459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2463, %r2455, %r2460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2466, %r837, %r2457, %r2469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2470, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2471, %r2469, %r2470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2474, %r2466, %r2471;
	// end inline asm
	shr.u32 	%r2479, %r2457, 8;
	// begin inline asm
	lop3.b32 %r2477, %r826, %r2479, %r2458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2482, %r2458, %r2481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2485, %r2477, %r2482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2488, %r837, %r2479, %r2469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2493, %r2469, %r2492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2496, %r2488, %r2493;
	// end inline asm
	// begin inline asm
	mov.b32 %r2504, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2515, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2503, %r16269, -2004318072;
	// begin inline asm
	lop3.b32 %r2501, %r826, %r2503, %r2504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2504, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2512, %r837, %r2503, %r2515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2516, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2517, %r2515, %r2516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2520, %r2512, %r2517;
	// end inline asm
	shr.u32 	%r2525, %r2503, 8;
	// begin inline asm
	lop3.b32 %r2523, %r826, %r2525, %r2504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2528, %r2504, %r2527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2531, %r2523, %r2528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2534, %r837, %r2525, %r2515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2538, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2539, %r2515, %r2538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2542, %r2534, %r2539;
	// end inline asm
	// begin inline asm
	mov.b32 %r2550, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2561, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2549, %r16270, -2004318072;
	// begin inline asm
	lop3.b32 %r2547, %r826, %r2549, %r2550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2552, %r2550, %r2551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2555, %r2547, %r2552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2558, %r837, %r2549, %r2561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2562, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2563, %r2561, %r2562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2566, %r2558, %r2563;
	// end inline asm
	shr.u32 	%r2571, %r2549, 8;
	// begin inline asm
	lop3.b32 %r2569, %r826, %r2571, %r2550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2574, %r2550, %r2573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2577, %r2569, %r2574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2580, %r837, %r2571, %r2561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2584, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2585, %r2561, %r2584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2588, %r2580, %r2585;
	// end inline asm
	// begin inline asm
	mov.b32 %r2596, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2607, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2595, %r16279, -2004318072;
	// begin inline asm
	lop3.b32 %r2593, %r826, %r2595, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2596, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2604, %r837, %r2595, %r2607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2609, %r2607, %r2608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2612, %r2604, %r2609;
	// end inline asm
	shr.u32 	%r2617, %r2595, 8;
	// begin inline asm
	lop3.b32 %r2615, %r826, %r2617, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2596, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2626, %r837, %r2617, %r2607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2630, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2631, %r2607, %r2630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2634, %r2626, %r2631;
	// end inline asm
	// begin inline asm
	mov.b32 %r2642, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2653, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2641, %r16280, -2004318072;
	// begin inline asm
	lop3.b32 %r2639, %r826, %r2641, %r2642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2643, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2644, %r2642, %r2643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2647, %r2639, %r2644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2650, %r837, %r2641, %r2653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2654, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2655, %r2653, %r2654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2658, %r2650, %r2655;
	// end inline asm
	shr.u32 	%r2663, %r2641, 8;
	// begin inline asm
	lop3.b32 %r2661, %r826, %r2663, %r2642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2666, %r2642, %r2665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2669, %r2661, %r2666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2672, %r837, %r2663, %r2653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2676, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2677, %r2653, %r2676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2680, %r2672, %r2677;
	// end inline asm
	// begin inline asm
	mov.b32 %r2688, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2699, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2687, %r16281, -2004318072;
	// begin inline asm
	lop3.b32 %r2685, %r826, %r2687, %r2688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2689, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2690, %r2688, %r2689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2693, %r2685, %r2690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2696, %r837, %r2687, %r2699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2700, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2701, %r2699, %r2700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2704, %r2696, %r2701;
	// end inline asm
	shr.u32 	%r2709, %r2687, 8;
	// begin inline asm
	lop3.b32 %r2707, %r826, %r2709, %r2688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2712, %r2688, %r2711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2715, %r2707, %r2712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2718, %r837, %r2709, %r2699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2723, %r2699, %r2722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2726, %r2718, %r2723;
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r2733, %r16282, -2004318072;
	// begin inline asm
	lop3.b32 %r2731, %r826, %r2733, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2735, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2736, %r2734, %r2735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2739, %r2731, %r2736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2742, %r837, %r2733, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2746, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2747, %r2745, %r2746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2750, %r2742, %r2747;
	// end inline asm
	shr.u32 	%r2755, %r2733, 8;
	// begin inline asm
	lop3.b32 %r2753, %r826, %r2755, %r2734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2758, %r2734, %r2757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2761, %r2753, %r2758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2764, %r837, %r2755, %r2745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2769, %r2745, %r2768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2772, %r2764, %r2769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r337, %r2417, %r2217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r337, %r2428, %r2223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r337, %r2439, %r2229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r337, %r2450, %r2235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r337, %r2463, %r2241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r337, %r2474, %r2247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r337, %r2485, %r2253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r337, %r2496, %r2259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r337, %r2509, %r2265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r337, %r2520, %r2271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r337, %r2531, %r2277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r337, %r2542, %r2283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r337, %r2555, %r2289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r337, %r2566, %r2295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r337, %r2577, %r2301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r337, %r2588, %r2307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r355, %r2601, %r2313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r355, %r2612, %r2319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r355, %r2623, %r2325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r355, %r2634, %r2331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r355, %r2647, %r2337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r355, %r2658, %r2343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r355, %r2669, %r2349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r355, %r2680, %r2355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r355, %r2693, %r2361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r355, %r2704, %r2367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r355, %r2715, %r2373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r355, %r2726, %r2379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r355, %r2739, %r2385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r355, %r2750, %r2391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r355, %r2761, %r2397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r355, %r2772, %r2403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2903, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2905, %r2903, %r2907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r394, %r2910, %r2905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2912, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2914, %r2912, %r2916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r394, %r2919, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2921, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2923, %r2921, %r2925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r394, %r2928, %r2923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2930, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2932, %r2930, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r394, %r2937, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2939, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2941, %r2939, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r394, %r2946, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2948, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2950, %r2948, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r394, %r2955, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2957, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2959, %r2957, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r394, %r2964, %r2959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2966, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2968, %r2966, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r394, %r2973, %r2968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2975, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2977, %r2975, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r397, %r2982, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2984, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2986, %r2984, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r397, %r2991, %r2986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2993, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2995, %r2993, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r397, %r3000, %r2995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3002, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3004, %r3002, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r397, %r3009, %r3004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3011, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3013, %r3011, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r397, %r3018, %r3013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3020, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r3020, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r397, %r3027, %r3022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3031, %r3029, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r397, %r3036, %r3031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3038, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r3038, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r397, %r3045, %r3040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3047, %r400, %r2910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r394, %r2907, %r3047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r400, %r2919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r394, %r2916, %r3054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3061, %r400, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r394, %r2925, %r3061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3068, %r400, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r394, %r2934, %r3068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3075, %r400, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3078, %r394, %r2943, %r3075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3082, %r400, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r394, %r2952, %r3082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3089, %r400, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3092, %r394, %r2961, %r3089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3096, %r400, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r394, %r2970, %r3096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3103, %r403, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r397, %r2979, %r3103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3110, %r403, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3113, %r397, %r2988, %r3110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3117, %r403, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3120, %r397, %r2997, %r3117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3124, %r403, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3127, %r397, %r3006, %r3124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3131, %r403, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3134, %r397, %r3015, %r3131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3138, %r403, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r397, %r3024, %r3138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3145, %r403, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3148, %r397, %r3033, %r3145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3152, %r403, %r3045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3155, %r397, %r3042, %r3152;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3326, %r3323}, {%r461, %r467, %r464, %r470}, {%r2908, %r3050}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3335, %r3332}, {%r461, %r467, %r464, %r470}, {%r2917, %r3057}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3344, %r3341}, {%r461, %r467, %r464, %r470}, {%r2926, %r3064}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3353, %r3350}, {%r461, %r467, %r464, %r470}, {%r2935, %r3071}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3362, %r3359}, {%r461, %r467, %r464, %r470}, {%r2944, %r3078}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3371, %r3368}, {%r461, %r467, %r464, %r470}, {%r2953, %r3085}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3380, %r3377}, {%r461, %r467, %r464, %r470}, {%r2962, %r3092}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3389, %r3386}, {%r461, %r467, %r464, %r470}, {%r2971, %r3099}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3398, %r3395}, {%r461, %r467, %r464, %r470}, {%r2980, %r3106}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3407, %r3404}, {%r461, %r467, %r464, %r470}, {%r2989, %r3113}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3416, %r3413}, {%r461, %r467, %r464, %r470}, {%r2998, %r3120}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3425, %r3422}, {%r461, %r467, %r464, %r470}, {%r3007, %r3127}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3434, %r3431}, {%r461, %r467, %r464, %r470}, {%r3016, %r3134}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3443, %r3440}, {%r461, %r467, %r464, %r470}, {%r3025, %r3141}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3452, %r3449}, {%r461, %r467, %r464, %r470}, {%r3034, %r3148}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3461, %r3458}, {%r461, %r467, %r464, %r470}, {%r3043, %r3155}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3319, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3321, %r3319, %r3323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3324, %r511, %r3326, %r3321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3328, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3330, %r3328, %r3332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3333, %r511, %r3335, %r3330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3337, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3339, %r3337, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3342, %r511, %r3344, %r3339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3346, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3348, %r3346, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3351, %r511, %r3353, %r3348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3355, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3357, %r3355, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3360, %r511, %r3362, %r3357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3364, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3366, %r3364, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3369, %r511, %r3371, %r3366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r511, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r511, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r511, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r511, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r511, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r511, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r511, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3436, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r3436, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r511, %r3443, %r3438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3445, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r3445, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r511, %r3452, %r3447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3454, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r3454, %r3458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r511, %r3461, %r3456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3463, %r514, %r3326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r511, %r3323, %r3463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r514, %r3335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r511, %r3332, %r3470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3477, %r514, %r3344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3480, %r511, %r3341, %r3477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r514, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r511, %r3350, %r3484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3491, %r514, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3494, %r511, %r3359, %r3491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3498, %r514, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r511, %r3368, %r3498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3505, %r514, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3508, %r511, %r3377, %r3505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3512, %r514, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3515, %r511, %r3386, %r3512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3519, %r514, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r511, %r3395, %r3519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r514, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r511, %r3404, %r3526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3533, %r514, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3536, %r511, %r3413, %r3533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3540, %r514, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r511, %r3422, %r3540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r514, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r511, %r3431, %r3547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3554, %r514, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r511, %r3440, %r3554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3561, %r514, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r511, %r3449, %r3561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3568, %r514, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3571, %r511, %r3458, %r3568;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3864, %r3867}, {%r549, %r555, %r552, %r558}, {%r3324, %r3466}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3870, %r3873}, {%r549, %r555, %r552, %r558}, {%r3333, %r3473}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3876, %r3879}, {%r549, %r555, %r552, %r558}, {%r3342, %r3480}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3882, %r3885}, {%r549, %r555, %r552, %r558}, {%r3351, %r3487}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3888, %r3891}, {%r549, %r555, %r552, %r558}, {%r3360, %r3494}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3894, %r3897}, {%r549, %r555, %r552, %r558}, {%r3369, %r3501}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3900, %r3903}, {%r549, %r555, %r552, %r558}, {%r3378, %r3508}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3906, %r3909}, {%r549, %r555, %r552, %r558}, {%r3387, %r3515}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3865, %r3868}, {%r549, %r555, %r552, %r558}, {%r3396, %r3522}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3871, %r3874}, {%r549, %r555, %r552, %r558}, {%r3405, %r3529}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3877, %r3880}, {%r549, %r555, %r552, %r558}, {%r3414, %r3536}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3883, %r3886}, {%r549, %r555, %r552, %r558}, {%r3423, %r3543}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3889, %r3892}, {%r549, %r555, %r552, %r558}, {%r3432, %r3550}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3895, %r3898}, {%r549, %r555, %r552, %r558}, {%r3441, %r3557}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3901, %r3904}, {%r549, %r555, %r552, %r558}, {%r3450, %r3564}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3907, %r3910}, {%r549, %r555, %r552, %r558}, {%r3459, %r3571}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3884, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3887, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3890, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3893, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3896, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3899, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3902, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3905, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3908, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3932, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3935, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3938, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3941, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3944, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3947, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3950, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3953, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3956, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r124, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r124, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r124, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r124, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r124, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r124, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r124, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r124, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r124, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r124, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r124, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r124, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r124, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r124, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r124, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r124, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r125, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r125, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r125, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r125, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r125, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r125, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r125, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r125, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r125, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r125, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r125, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r125, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r125, %r3947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4046, %r125, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4049, %r125, %r3953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4052, %r125, %r3956;
	// end inline asm
	mov.u16 	%rs431, -14592;
	// begin inline asm
	mov.b32 %r4055, {%rs431, %rs431};
	// end inline asm
	mov.u16 	%rs433, 18176;
	// begin inline asm
	mov.b32 %r4056, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4057, %r3959, %r4055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4060, %r4057, %r4056;
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4065, %r3962, %r4063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4068, %r4065, %r4064;
	// end inline asm
	// begin inline asm
	mov.b32 %r4071, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4073, %r3965, %r4071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4076, %r4073, %r4072;
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4081, %r3968, %r4079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4084, %r4081, %r4080;
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4089, %r3971, %r4087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4092, %r4089, %r4088;
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4097, %r3974, %r4095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4100, %r4097, %r4096;
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4105, %r3977, %r4103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4108, %r4105, %r4104;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4113, %r3980, %r4111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4116, %r4113, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4121, %r3983, %r4119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4124, %r4121, %r4120;
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4129, %r3986, %r4127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4132, %r4129, %r4128;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4137, %r3989, %r4135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4140, %r4137, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4145, %r3992, %r4143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4148, %r4145, %r4144;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4153, %r3995, %r4151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4156, %r4153, %r4152;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4161, %r3998, %r4159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4164, %r4161, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4169, %r4001, %r4167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4172, %r4169, %r4168;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4177, %r4004, %r4175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4180, %r4177, %r4176;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4185, %r4007, %r4183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4188, %r4185, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4193, %r4010, %r4191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4196, %r4193, %r4192;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4201, %r4013, %r4199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4204, %r4201, %r4200;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4209, %r4016, %r4207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4212, %r4209, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4217, %r4019, %r4215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4220, %r4217, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4225, %r4022, %r4223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4228, %r4225, %r4224;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4233, %r4025, %r4231;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4236, %r4233, %r4232;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4241, %r4028, %r4239;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4244, %r4241, %r4240;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4249, %r4031, %r4247;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4252, %r4249, %r4248;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4257, %r4034, %r4255;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4260, %r4257, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4265, %r4037, %r4263;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4268, %r4265, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4273, %r4040, %r4271;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4276, %r4273, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4281, %r4043, %r4279;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4284, %r4281, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4289, %r4046, %r4287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4292, %r4289, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4297, %r4049, %r4295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4300, %r4297, %r4296;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4305, %r4052, %r4303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4308, %r4305, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4314, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4313, %r4314, %r4312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4316, %r4060, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4320, %r4314, %r4319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4323, %r4068, %r4320;
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4327, %r4314, %r4326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4076, %r4327;
	// end inline asm
	// begin inline asm
	mov.b32 %r4333, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4334, %r4314, %r4333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4337, %r4084, %r4334;
	// end inline asm
	mov.u32 	%r4343, 25152;
	// begin inline asm
	prmt.b32 %r4340, %r4316, %r4330, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4344, %r4323, %r4337, %r4343;
	// end inline asm
	shl.b32 	%r4351, %r4344, 4;
	mov.u32 	%r4349, 252645135;
	// begin inline asm
	lop3.b32 %r4348, %r4349, %r4340, %r4351, 202;
	// end inline asm
	xor.b32  	%r16127, %r4348, -2004318072;
	// begin inline asm
	mov.b32 %r4355, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4355, %r4353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4092, %r4354;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4355, %r4360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4364, %r4100, %r4361;
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4355, %r4367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4371, %r4108, %r4368;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4355, %r4374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4378, %r4116, %r4375;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4381, %r4357, %r4371, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4385, %r4364, %r4378, %r4343;
	// end inline asm
	shl.b32 	%r4392, %r4385, 4;
	// begin inline asm
	lop3.b32 %r4389, %r4349, %r4381, %r4392, 202;
	// end inline asm
	xor.b32  	%r16128, %r4389, -2004318072;
	// begin inline asm
	mov.b32 %r4396, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4396, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4124, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4396, %r4401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4132, %r4402;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4396, %r4408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4140, %r4409;
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4396, %r4415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4419, %r4148, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4422, %r4398, %r4412, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4426, %r4405, %r4419, %r4343;
	// end inline asm
	shl.b32 	%r4433, %r4426, 4;
	// begin inline asm
	lop3.b32 %r4430, %r4349, %r4422, %r4433, 202;
	// end inline asm
	xor.b32  	%r16129, %r4430, -2004318072;
	// begin inline asm
	mov.b32 %r4437, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4437, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4156, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4437, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4164, %r4443;
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4437, %r4449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4172, %r4450;
	// end inline asm
	// begin inline asm
	mov.b32 %r4456, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4437, %r4456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4460, %r4180, %r4457;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4463, %r4439, %r4453, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4467, %r4446, %r4460, %r4343;
	// end inline asm
	shl.b32 	%r4474, %r4467, 4;
	// begin inline asm
	lop3.b32 %r4471, %r4349, %r4463, %r4474, 202;
	// end inline asm
	xor.b32  	%r16130, %r4471, -2004318072;
	// begin inline asm
	mov.b32 %r4478, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4478, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4188, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4478, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4196, %r4484;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4478, %r4490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4204, %r4491;
	// end inline asm
	// begin inline asm
	mov.b32 %r4497, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4478, %r4497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4501, %r4212, %r4498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4504, %r4480, %r4494, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4508, %r4487, %r4501, %r4343;
	// end inline asm
	shl.b32 	%r4515, %r4508, 4;
	// begin inline asm
	lop3.b32 %r4512, %r4349, %r4504, %r4515, 202;
	// end inline asm
	xor.b32  	%r16131, %r4512, -2004318072;
	// begin inline asm
	mov.b32 %r4519, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4519, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4220, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4519, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4228, %r4525;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4519, %r4531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4236, %r4532;
	// end inline asm
	// begin inline asm
	mov.b32 %r4538, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4519, %r4538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4542, %r4244, %r4539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4545, %r4521, %r4535, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4549, %r4528, %r4542, %r4343;
	// end inline asm
	shl.b32 	%r4556, %r4549, 4;
	// begin inline asm
	lop3.b32 %r4553, %r4349, %r4545, %r4556, 202;
	// end inline asm
	xor.b32  	%r16132, %r4553, -2004318072;
	// begin inline asm
	mov.b32 %r4560, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4560, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4252, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4560, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4260, %r4566;
	// end inline asm
	// begin inline asm
	mov.b32 %r4572, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4560, %r4572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4268, %r4573;
	// end inline asm
	// begin inline asm
	mov.b32 %r4579, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4560, %r4579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4276, %r4580;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4586, %r4562, %r4576, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4590, %r4569, %r4583, %r4343;
	// end inline asm
	shl.b32 	%r4597, %r4590, 4;
	// begin inline asm
	lop3.b32 %r4594, %r4349, %r4586, %r4597, 202;
	// end inline asm
	xor.b32  	%r16133, %r4594, -2004318072;
	// begin inline asm
	mov.b32 %r4601, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4601, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4284, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4601, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4292, %r4607;
	// end inline asm
	// begin inline asm
	mov.b32 %r4613, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4601, %r4613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4617, %r4300, %r4614;
	// end inline asm
	// begin inline asm
	mov.b32 %r4620, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4601, %r4620;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4624, %r4308, %r4621;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4627, %r4603, %r4617, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4631, %r4610, %r4624, %r4343;
	// end inline asm
	shl.b32 	%r4638, %r4631, 4;
	// begin inline asm
	lop3.b32 %r4635, %r4349, %r4627, %r4638, 202;
	// end inline asm
	xor.b32  	%r16134, %r4635, -2004318072;
	setp.eq.s32 	%p307, %r16292, 0;
	selp.b32 	%r16135, 0, 4161, %p307;
	add.s32 	%r16136, %r75, %r16135;
	mul.wide.u32 	%rd97, %r16136, 4;
	add.s64 	%rd98, %rd36, %rd97;
	st.shared.u32 	[%rd98], %r16127;
	add.s32 	%r16137, %r76, %r16135;
	mul.wide.u32 	%rd99, %r16137, 4;
	add.s64 	%rd100, %rd36, %rd99;
	st.shared.u32 	[%rd100], %r16128;
	add.s32 	%r16138, %r77, %r16135;
	mul.wide.u32 	%rd101, %r16138, 4;
	add.s64 	%rd102, %rd36, %rd101;
	st.shared.u32 	[%rd102], %r16129;
	add.s32 	%r16139, %r78, %r16135;
	mul.wide.u32 	%rd103, %r16139, 4;
	add.s64 	%rd104, %rd36, %rd103;
	st.shared.u32 	[%rd104], %r16130;
	add.s32 	%r16140, %r79, %r16135;
	mul.wide.u32 	%rd105, %r16140, 4;
	add.s64 	%rd106, %rd36, %rd105;
	st.shared.u32 	[%rd106], %r16131;
	add.s32 	%r16141, %r80, %r16135;
	mul.wide.u32 	%rd107, %r16141, 4;
	add.s64 	%rd108, %rd36, %rd107;
	st.shared.u32 	[%rd108], %r16132;
	add.s32 	%r16142, %r81, %r16135;
	mul.wide.u32 	%rd109, %r16142, 4;
	add.s64 	%rd110, %rd36, %rd109;
	st.shared.u32 	[%rd110], %r16133;
	add.s32 	%r16143, %r82, %r16135;
	mul.wide.u32 	%rd111, %r16143, 4;
	add.s64 	%rd112, %rd36, %rd111;
	st.shared.u32 	[%rd112], %r16134;
	ld.shared.u32 	%r16259, [%rd82];
	ld.shared.u32 	%r16260, [%rd84];
	ld.shared.u32 	%r16261, [%rd86];
	ld.shared.u32 	%r16262, [%rd88];
	ld.shared.u32 	%r16271, [%rd90];
	ld.shared.u32 	%r16272, [%rd92];
	ld.shared.u32 	%r16273, [%rd94];
	ld.shared.u32 	%r16274, [%rd96];
	// begin inline asm
	mov.b32 %r4644, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4655, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4643, %r16259, -2004318072;
	// begin inline asm
	lop3.b32 %r4641, %r826, %r4643, %r4644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4645, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4644, %r4645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4649, %r4641, %r4646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4652, %r837, %r4643, %r4655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4656, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4657, %r4655, %r4656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4660, %r4652, %r4657;
	// end inline asm
	shr.u32 	%r4665, %r4643, 8;
	// begin inline asm
	lop3.b32 %r4663, %r826, %r4665, %r4644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4668, %r4644, %r4667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4671, %r4663, %r4668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4674, %r837, %r4665, %r4655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4678, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4679, %r4655, %r4678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4682, %r4674, %r4679;
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4689, %r16260, -2004318072;
	// begin inline asm
	lop3.b32 %r4687, %r826, %r4689, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4690, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4698, %r837, %r4689, %r4701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4702, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4703, %r4701, %r4702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4706, %r4698, %r4703;
	// end inline asm
	shr.u32 	%r4711, %r4689, 8;
	// begin inline asm
	lop3.b32 %r4709, %r826, %r4711, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4690, %r4713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4717, %r4709, %r4714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4720, %r837, %r4711, %r4701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4701, %r4724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4728, %r4720, %r4725;
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4735, %r16261, -2004318072;
	// begin inline asm
	lop3.b32 %r4733, %r826, %r4735, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4736, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4744, %r837, %r4735, %r4747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4748, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4749, %r4747, %r4748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4752, %r4744, %r4749;
	// end inline asm
	shr.u32 	%r4757, %r4735, 8;
	// begin inline asm
	lop3.b32 %r4755, %r826, %r4757, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4760, %r4736, %r4759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4763, %r4755, %r4760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4766, %r837, %r4757, %r4747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4771, %r4747, %r4770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4774, %r4766, %r4771;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4781, %r16262, -2004318072;
	// begin inline asm
	lop3.b32 %r4779, %r826, %r4781, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4782, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4790, %r837, %r4781, %r4793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4795, %r4793, %r4794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4798, %r4790, %r4795;
	// end inline asm
	shr.u32 	%r4803, %r4781, 8;
	// begin inline asm
	lop3.b32 %r4801, %r826, %r4803, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4806, %r4782, %r4805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4809, %r4801, %r4806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4812, %r837, %r4803, %r4793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4817, %r4793, %r4816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4820, %r4812, %r4817;
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4839, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4827, %r16271, -2004318072;
	// begin inline asm
	lop3.b32 %r4825, %r826, %r4827, %r4828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4828, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4836, %r837, %r4827, %r4839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4840, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4841, %r4839, %r4840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4844, %r4836, %r4841;
	// end inline asm
	shr.u32 	%r4849, %r4827, 8;
	// begin inline asm
	lop3.b32 %r4847, %r826, %r4849, %r4828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4852, %r4828, %r4851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4855, %r4847, %r4852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4858, %r837, %r4849, %r4839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4862, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4863, %r4839, %r4862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4866, %r4858, %r4863;
	// end inline asm
	// begin inline asm
	mov.b32 %r4874, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4885, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4873, %r16272, -2004318072;
	// begin inline asm
	lop3.b32 %r4871, %r826, %r4873, %r4874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4875, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4876, %r4874, %r4875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4879, %r4871, %r4876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4882, %r837, %r4873, %r4885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4886, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4887, %r4885, %r4886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4890, %r4882, %r4887;
	// end inline asm
	shr.u32 	%r4895, %r4873, 8;
	// begin inline asm
	lop3.b32 %r4893, %r826, %r4895, %r4874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4897, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4898, %r4874, %r4897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4901, %r4893, %r4898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4904, %r837, %r4895, %r4885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4908, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4909, %r4885, %r4908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4912, %r4904, %r4909;
	// end inline asm
	// begin inline asm
	mov.b32 %r4920, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4931, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4919, %r16273, -2004318072;
	// begin inline asm
	lop3.b32 %r4917, %r826, %r4919, %r4920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4921, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4922, %r4920, %r4921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4925, %r4917, %r4922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4928, %r837, %r4919, %r4931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4932, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4933, %r4931, %r4932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4936, %r4928, %r4933;
	// end inline asm
	shr.u32 	%r4941, %r4919, 8;
	// begin inline asm
	lop3.b32 %r4939, %r826, %r4941, %r4920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4944, %r4920, %r4943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4947, %r4939, %r4944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4950, %r837, %r4941, %r4931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4954, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4955, %r4931, %r4954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4958, %r4950, %r4955;
	// end inline asm
	// begin inline asm
	mov.b32 %r4966, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r4977, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r4965, %r16274, -2004318072;
	// begin inline asm
	lop3.b32 %r4963, %r826, %r4965, %r4966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4967, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4968, %r4966, %r4967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4971, %r4963, %r4968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4974, %r837, %r4965, %r4977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4978, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4979, %r4977, %r4978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4982, %r4974, %r4979;
	// end inline asm
	shr.u32 	%r4987, %r4965, 8;
	// begin inline asm
	lop3.b32 %r4985, %r826, %r4987, %r4966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4989, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4990, %r4966, %r4989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4993, %r4985, %r4990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4996, %r837, %r4987, %r4977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5000, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5001, %r4977, %r5000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5004, %r4996, %r5001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5007, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5009, %r5007, %r4649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5012, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5014, %r5012, %r4660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5017, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5019, %r5017, %r4671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5022, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5024, %r5022, %r4682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5027, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5029, %r5027, %r4695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5032, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5034, %r5032, %r4706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5037, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5039, %r5037, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5042, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5044, %r5042, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5047, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5049, %r5047, %r4741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5052, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5054, %r5052, %r4752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5057, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5059, %r5057, %r4763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5062, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5064, %r5062, %r4774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5067, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5069, %r5067, %r4787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5072, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5074, %r5072, %r4798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5077, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5079, %r5077, %r4809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5142, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5144, %r5142, %r4958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5147, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5149, %r5147, %r4971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5152, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5154, %r5152, %r4982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5157, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5159, %r5157, %r4993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5162, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5164, %r5162, %r5004;
	// end inline asm
	// begin inline asm
	mov.b32 %r5172, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5183, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5169, %r826, %r1851, %r5172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5173, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5174, %r5172, %r5173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5177, %r5169, %r5174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5180, %r837, %r1851, %r5183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5184, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5185, %r5183, %r5184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5188, %r5180, %r5185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5191, %r826, %r1873, %r5172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5195, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5196, %r5172, %r5195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5199, %r5191, %r5196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5202, %r837, %r1873, %r5183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5206, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5207, %r5183, %r5206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5210, %r5202, %r5207;
	// end inline asm
	// begin inline asm
	mov.b32 %r5218, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5229, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5215, %r826, %r1897, %r5218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5219, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5220, %r5218, %r5219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5223, %r5215, %r5220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5226, %r837, %r1897, %r5229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5230, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5231, %r5229, %r5230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5234, %r5226, %r5231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5237, %r826, %r1919, %r5218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5241, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5242, %r5218, %r5241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5245, %r5237, %r5242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5248, %r837, %r1919, %r5229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5252, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5253, %r5229, %r5252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5256, %r5248, %r5253;
	// end inline asm
	// begin inline asm
	mov.b32 %r5264, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5275, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5261, %r826, %r1943, %r5264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5265, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5266, %r5264, %r5265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5269, %r5261, %r5266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5272, %r837, %r1943, %r5275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5276, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5277, %r5275, %r5276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5280, %r5272, %r5277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5283, %r826, %r1965, %r5264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5287, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5288, %r5264, %r5287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5291, %r5283, %r5288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5294, %r837, %r1965, %r5275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5298, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5299, %r5275, %r5298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5302, %r5294, %r5299;
	// end inline asm
	// begin inline asm
	mov.b32 %r5310, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5321, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5307, %r826, %r1989, %r5310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5311, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5312, %r5310, %r5311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5315, %r5307, %r5312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5318, %r837, %r1989, %r5321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5322, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5323, %r5321, %r5322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5326, %r5318, %r5323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5329, %r826, %r2011, %r5310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5333, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5334, %r5310, %r5333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5337, %r5329, %r5334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5340, %r837, %r2011, %r5321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5344, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5345, %r5321, %r5344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5348, %r5340, %r5345;
	// end inline asm
	// begin inline asm
	mov.b32 %r5356, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5367, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5353, %r826, %r2035, %r5356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5357, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5358, %r5356, %r5357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5361, %r5353, %r5358;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5364, %r837, %r2035, %r5367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5368, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5369, %r5367, %r5368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5372, %r5364, %r5369;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5375, %r826, %r2057, %r5356, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5379, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5380, %r5356, %r5379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5383, %r5375, %r5380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5386, %r837, %r2057, %r5367, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5390, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5391, %r5367, %r5390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5394, %r5386, %r5391;
	// end inline asm
	// begin inline asm
	mov.b32 %r5402, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5413, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5399, %r826, %r2081, %r5402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5403, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5404, %r5402, %r5403;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5407, %r5399, %r5404;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5410, %r837, %r2081, %r5413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5414, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5415, %r5413, %r5414;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5418, %r5410, %r5415;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5421, %r826, %r2103, %r5402, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5425, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5426, %r5402, %r5425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5429, %r5421, %r5426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5432, %r837, %r2103, %r5413, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5436, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5437, %r5413, %r5436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5440, %r5432, %r5437;
	// end inline asm
	// begin inline asm
	mov.b32 %r5448, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5459, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5445, %r826, %r2127, %r5448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5449, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5450, %r5448, %r5449;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5453, %r5445, %r5450;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5456, %r837, %r2127, %r5459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5460, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5461, %r5459, %r5460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5464, %r5456, %r5461;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5467, %r826, %r2149, %r5448, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5471, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5472, %r5448, %r5471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5475, %r5467, %r5472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5478, %r837, %r2149, %r5459, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5482, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5483, %r5459, %r5482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5486, %r5478, %r5483;
	// end inline asm
	// begin inline asm
	mov.b32 %r5494, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5505, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5491, %r826, %r2173, %r5494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5495, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5496, %r5494, %r5495;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5499, %r5491, %r5496;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5502, %r837, %r2173, %r5505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5506, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5507, %r5505, %r5506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5510, %r5502, %r5507;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5513, %r826, %r2195, %r5494, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5517, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5518, %r5494, %r5517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5521, %r5513, %r5518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5524, %r837, %r2195, %r5505, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5528, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5529, %r5505, %r5528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5532, %r5524, %r5529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5535, %r265, %r5177, %r5009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5539, %r265, %r5188, %r5014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5543, %r265, %r5199, %r5019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5547, %r265, %r5210, %r5024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r265, %r5223, %r5029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5555, %r265, %r5234, %r5034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r265, %r5245, %r5039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r265, %r5256, %r5044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r265, %r5269, %r5049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r265, %r5280, %r5054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r265, %r5291, %r5059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r265, %r5302, %r5064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r265, %r5315, %r5069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r265, %r5326, %r5074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r265, %r5337, %r5079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r265, %r5348, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r283, %r5361, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r283, %r5372, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r283, %r5383, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r283, %r5394, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r283, %r5407, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r283, %r5418, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r283, %r5429, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r283, %r5440, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r283, %r5453, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r283, %r5464, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r283, %r5475, %r5139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r283, %r5486, %r5144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r283, %r5499, %r5149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r283, %r5510, %r5154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r283, %r5521, %r5159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r283, %r5532, %r5164;
	// end inline asm
	// begin inline asm
	mov.b32 %r5668, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5665, %r826, %r2411, %r5668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5669, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5670, %r5668, %r5669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5673, %r5665, %r5670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5676, %r837, %r2411, %r5679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5680, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5681, %r5679, %r5680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5684, %r5676, %r5681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5687, %r826, %r2433, %r5668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5691, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5692, %r5668, %r5691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5695, %r5687, %r5692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5698, %r837, %r2433, %r5679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5703, %r5679, %r5702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5706, %r5698, %r5703;
	// end inline asm
	// begin inline asm
	mov.b32 %r5714, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5711, %r826, %r2457, %r5714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5715, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5716, %r5714, %r5715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5719, %r5711, %r5716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5722, %r837, %r2457, %r5725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5727, %r5725, %r5726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5730, %r5722, %r5727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5733, %r826, %r2479, %r5714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5738, %r5714, %r5737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5741, %r5733, %r5738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5744, %r837, %r2479, %r5725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5749, %r5725, %r5748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5752, %r5744, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5760, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5771, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5757, %r826, %r2503, %r5760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5761, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5762, %r5760, %r5761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5765, %r5757, %r5762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5768, %r837, %r2503, %r5771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5773, %r5771, %r5772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5776, %r5768, %r5773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5779, %r826, %r2525, %r5760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5760, %r5783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5787, %r5779, %r5784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5790, %r837, %r2525, %r5771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5794, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5795, %r5771, %r5794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5798, %r5790, %r5795;
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5817, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5803, %r826, %r2549, %r5806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5806, %r5807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5811, %r5803, %r5808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5814, %r837, %r2549, %r5817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5818, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5819, %r5817, %r5818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5822, %r5814, %r5819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5825, %r826, %r2571, %r5806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5830, %r5806, %r5829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5833, %r5825, %r5830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5836, %r837, %r2571, %r5817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5840, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5817, %r5840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5844, %r5836, %r5841;
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5849, %r826, %r2595, %r5852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5854, %r5852, %r5853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5857, %r5849, %r5854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5860, %r837, %r2595, %r5863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5864, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5863, %r5864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5868, %r5860, %r5865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5871, %r826, %r2617, %r5852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5852, %r5875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5879, %r5871, %r5876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5882, %r837, %r2617, %r5863, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5863, %r5886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5890, %r5882, %r5887;
	// end inline asm
	// begin inline asm
	mov.b32 %r5898, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5895, %r826, %r2641, %r5898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5899, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5900, %r5898, %r5899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5903, %r5895, %r5900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5906, %r837, %r2641, %r5909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5910, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5911, %r5909, %r5910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5914, %r5906, %r5911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5917, %r826, %r2663, %r5898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5898, %r5921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5925, %r5917, %r5922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5928, %r837, %r2663, %r5909, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5932, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5909, %r5932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5936, %r5928, %r5933;
	// end inline asm
	// begin inline asm
	mov.b32 %r5944, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r5955, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5941, %r826, %r2687, %r5944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5945, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5946, %r5944, %r5945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5949, %r5941, %r5946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5952, %r837, %r2687, %r5955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5956, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5957, %r5955, %r5956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5960, %r5952, %r5957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5963, %r826, %r2709, %r5944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5944, %r5967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5971, %r5963, %r5968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5974, %r837, %r2709, %r5955, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5978, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5979, %r5955, %r5978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5982, %r5974, %r5979;
	// end inline asm
	// begin inline asm
	mov.b32 %r5990, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6001, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5987, %r826, %r2733, %r5990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5991, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5992, %r5990, %r5991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5995, %r5987, %r5992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5998, %r837, %r2733, %r6001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6002, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6003, %r6001, %r6002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6006, %r5998, %r6003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6009, %r826, %r2755, %r5990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6013, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6014, %r5990, %r6013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6017, %r6009, %r6014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6020, %r837, %r2755, %r6001, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6024, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r6001, %r6024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6028, %r6020, %r6025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6031, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6033, %r6031, %r5673, %r5535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6037, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6039, %r6037, %r5684, %r5539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6043, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6045, %r6043, %r5695, %r5543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6049, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6051, %r6049, %r5706, %r5547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6055, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6057, %r6055, %r5719, %r5551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6061, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6063, %r6061, %r5730, %r5555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6067, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6069, %r6067, %r5741, %r5559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6073, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6075, %r6073, %r5752, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6079, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6081, %r6079, %r5765, %r5567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6085, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6087, %r6085, %r5776, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6091, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6093, %r6091, %r5787, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6097, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6099, %r6097, %r5798, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6103, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6105, %r6103, %r5811, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6109, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6111, %r6109, %r5822, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6115, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6117, %r6115, %r5833, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6121, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6123, %r6121, %r5844, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6129, %r6127, %r5857, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6133, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6135, %r6133, %r5868, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6141, %r6139, %r5879, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6147, %r6145, %r5890, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6151, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6153, %r6151, %r5903, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6159, %r6157, %r5914, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6165, %r6163, %r5925, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6171, %r6169, %r5936, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6177, %r6175, %r5949, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6181, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6183, %r6181, %r5960, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6189, %r6187, %r5971, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6195, %r6193, %r5982, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6199, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6201, %r6199, %r5995, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6205, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6207, %r6205, %r6006, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6211, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6213, %r6211, %r6017, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6217, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6219, %r6217, %r6028, %r5659;
	// end inline asm
	// begin inline asm
	mov.b32 %r6228, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6239, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6225, %r826, %r827, %r6228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6229, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6230, %r6228, %r6229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6233, %r6225, %r6230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6236, %r837, %r827, %r6239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6240, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6241, %r6239, %r6240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6244, %r6236, %r6241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6247, %r826, %r849, %r6228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6251, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6252, %r6228, %r6251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6255, %r6247, %r6252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6258, %r837, %r849, %r6239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6262, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6263, %r6239, %r6262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6266, %r6258, %r6263;
	// end inline asm
	// begin inline asm
	mov.b32 %r6274, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6285, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6271, %r826, %r873, %r6274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6275, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6276, %r6274, %r6275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6279, %r6271, %r6276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6282, %r837, %r873, %r6285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6286, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6287, %r6285, %r6286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6290, %r6282, %r6287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6293, %r826, %r895, %r6274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6298, %r6274, %r6297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6301, %r6293, %r6298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6304, %r837, %r895, %r6285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6309, %r6285, %r6308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6312, %r6304, %r6309;
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r826, %r919, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6320, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6328, %r837, %r919, %r6331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6333, %r6331, %r6332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6336, %r6328, %r6333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r826, %r941, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6320, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r837, %r941, %r6331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6331, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6377, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r826, %r965, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6366, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6374, %r837, %r965, %r6377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6379, %r6377, %r6378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6382, %r6374, %r6379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r826, %r987, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6366, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6396, %r837, %r987, %r6377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6401, %r6377, %r6400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6404, %r6396, %r6401;
	// end inline asm
	// begin inline asm
	mov.b32 %r6412, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6423, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r826, %r1011, %r6412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6412, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6420, %r837, %r1011, %r6423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6424, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6425, %r6423, %r6424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6428, %r6420, %r6425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6431, %r826, %r1033, %r6412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6436, %r6412, %r6435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6439, %r6431, %r6436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6442, %r837, %r1033, %r6423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6447, %r6423, %r6446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6450, %r6442, %r6447;
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6469, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r826, %r1057, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6458, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6466, %r837, %r1057, %r6469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6471, %r6469, %r6470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6474, %r6466, %r6471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r826, %r1079, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6458, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r837, %r1079, %r6469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6469, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	mov.b32 %r6504, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6515, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6501, %r826, %r1103, %r6504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6505, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6506, %r6504, %r6505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6509, %r6501, %r6506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6512, %r837, %r1103, %r6515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6516, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6517, %r6515, %r6516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6520, %r6512, %r6517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6523, %r826, %r1125, %r6504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6528, %r6504, %r6527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6531, %r6523, %r6528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6534, %r837, %r1125, %r6515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6539, %r6515, %r6538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6542, %r6534, %r6539;
	// end inline asm
	// begin inline asm
	mov.b32 %r6550, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r6561, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6547, %r826, %r1149, %r6550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6552, %r6550, %r6551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6555, %r6547, %r6552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6558, %r837, %r1149, %r6561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6562, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6563, %r6561, %r6562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6566, %r6558, %r6563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6569, %r826, %r1171, %r6550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6573, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6574, %r6550, %r6573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6577, %r6569, %r6574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6580, %r837, %r1171, %r6561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6584, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6585, %r6561, %r6584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6588, %r6580, %r6585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r337, %r6233, %r6033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r337, %r6244, %r6039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r337, %r6255, %r6045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r337, %r6266, %r6051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r337, %r6279, %r6057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r337, %r6290, %r6063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r337, %r6301, %r6069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r337, %r6312, %r6075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r337, %r6325, %r6081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r337, %r6336, %r6087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r337, %r6347, %r6093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r337, %r6358, %r6099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r337, %r6371, %r6105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r337, %r6382, %r6111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r337, %r6393, %r6117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r337, %r6404, %r6123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r355, %r6417, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r355, %r6428, %r6135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r355, %r6439, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r355, %r6450, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r355, %r6463, %r6153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r355, %r6474, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r355, %r6485, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r355, %r6496, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r355, %r6509, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r355, %r6520, %r6183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r355, %r6531, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r355, %r6542, %r6195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r355, %r6555, %r6201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r355, %r6566, %r6207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r355, %r6577, %r6213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r355, %r6588, %r6219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6719, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6721, %r6719, %r6723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r394, %r6726, %r6721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6728, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6730, %r6728, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r394, %r6735, %r6730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6739, %r6737, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r394, %r6744, %r6739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6746, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6748, %r6746, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r394, %r6753, %r6748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6757, %r6755, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r394, %r6762, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6764, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6766, %r6764, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r394, %r6771, %r6766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6775, %r6773, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r394, %r6780, %r6775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6782, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6784, %r6782, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r394, %r6789, %r6784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6793, %r6791, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r397, %r6798, %r6793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6800, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6802, %r6800, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r397, %r6807, %r6802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6811, %r6809, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r397, %r6816, %r6811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6818, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6820, %r6818, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r397, %r6825, %r6820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6827, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6829, %r6827, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r397, %r6834, %r6829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6836, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r6836, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r397, %r6843, %r6838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6845, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6847, %r6845, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r397, %r6852, %r6847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6854, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r6854, %r6858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r397, %r6861, %r6856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6863, %r400, %r6726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r394, %r6723, %r6863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r400, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r394, %r6732, %r6870;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6877, %r400, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r394, %r6741, %r6877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6884, %r400, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r394, %r6750, %r6884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6891, %r400, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6894, %r394, %r6759, %r6891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6898, %r400, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r394, %r6768, %r6898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6905, %r400, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6908, %r394, %r6777, %r6905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6912, %r400, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6915, %r394, %r6786, %r6912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6919, %r403, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r397, %r6795, %r6919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6926, %r403, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6929, %r397, %r6804, %r6926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6933, %r403, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6936, %r397, %r6813, %r6933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6940, %r403, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6943, %r397, %r6822, %r6940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6947, %r403, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6950, %r397, %r6831, %r6947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6954, %r403, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6957, %r397, %r6840, %r6954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6961, %r403, %r6852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6964, %r397, %r6849, %r6961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6968, %r403, %r6861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6971, %r397, %r6858, %r6968;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7142, %r7139}, {%r461, %r467, %r464, %r470}, {%r6724, %r6866}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7151, %r7148}, {%r461, %r467, %r464, %r470}, {%r6733, %r6873}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7160, %r7157}, {%r461, %r467, %r464, %r470}, {%r6742, %r6880}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7169, %r7166}, {%r461, %r467, %r464, %r470}, {%r6751, %r6887}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r461, %r467, %r464, %r470}, {%r6760, %r6894}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r461, %r467, %r464, %r470}, {%r6769, %r6901}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r461, %r467, %r464, %r470}, {%r6778, %r6908}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r461, %r467, %r464, %r470}, {%r6787, %r6915}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r461, %r467, %r464, %r470}, {%r6796, %r6922}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r461, %r467, %r464, %r470}, {%r6805, %r6929}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r461, %r467, %r464, %r470}, {%r6814, %r6936}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r461, %r467, %r464, %r470}, {%r6823, %r6943}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r461, %r467, %r464, %r470}, {%r6832, %r6950}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r461, %r467, %r464, %r470}, {%r6841, %r6957}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r461, %r467, %r464, %r470}, {%r6850, %r6964}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7277, %r7274}, {%r461, %r467, %r464, %r470}, {%r6859, %r6971}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7135, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7137, %r7135, %r7139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7140, %r511, %r7142, %r7137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7144, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7146, %r7144, %r7148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r511, %r7151, %r7146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7153, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7155, %r7153, %r7157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r511, %r7160, %r7155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7162, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r7162, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r511, %r7169, %r7164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r511, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r511, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r511, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r511, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r511, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r511, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r511, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r511, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r511, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r511, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r511, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7270, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r7270, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r511, %r7277, %r7272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7279, %r514, %r7142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7282, %r511, %r7139, %r7279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r514, %r7151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r511, %r7148, %r7286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r514, %r7160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r511, %r7157, %r7293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r514, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r511, %r7166, %r7300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7307, %r514, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7310, %r511, %r7175, %r7307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7314, %r514, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7317, %r511, %r7184, %r7314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7321, %r514, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7324, %r511, %r7193, %r7321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7328, %r514, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7331, %r511, %r7202, %r7328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r514, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r511, %r7211, %r7335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7342, %r514, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7345, %r511, %r7220, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7349, %r514, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7352, %r511, %r7229, %r7349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7356, %r514, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7359, %r511, %r7238, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7363, %r514, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7366, %r511, %r7247, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7370, %r514, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7373, %r511, %r7256, %r7370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7377, %r514, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7380, %r511, %r7265, %r7377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7384, %r514, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7387, %r511, %r7274, %r7384;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7680, %r7683}, {%r549, %r555, %r552, %r558}, {%r7140, %r7282}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7686, %r7689}, {%r549, %r555, %r552, %r558}, {%r7149, %r7289}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7692, %r7695}, {%r549, %r555, %r552, %r558}, {%r7158, %r7296}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7698, %r7701}, {%r549, %r555, %r552, %r558}, {%r7167, %r7303}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7704, %r7707}, {%r549, %r555, %r552, %r558}, {%r7176, %r7310}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7710, %r7713}, {%r549, %r555, %r552, %r558}, {%r7185, %r7317}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7716, %r7719}, {%r549, %r555, %r552, %r558}, {%r7194, %r7324}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7722, %r7725}, {%r549, %r555, %r552, %r558}, {%r7203, %r7331}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7681, %r7684}, {%r549, %r555, %r552, %r558}, {%r7212, %r7338}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7687, %r7690}, {%r549, %r555, %r552, %r558}, {%r7221, %r7345}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7693, %r7696}, {%r549, %r555, %r552, %r558}, {%r7230, %r7352}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7699, %r7702}, {%r549, %r555, %r552, %r558}, {%r7239, %r7359}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7705, %r7708}, {%r549, %r555, %r552, %r558}, {%r7248, %r7366}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7711, %r7714}, {%r549, %r555, %r552, %r558}, {%r7257, %r7373}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7717, %r7720}, {%r549, %r555, %r552, %r558}, {%r7266, %r7380}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7723, %r7726}, {%r549, %r555, %r552, %r558}, {%r7275, %r7387}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7748, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7751, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7754, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7757, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7760, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7763, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7766, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7769, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7772, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r124, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r124, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r124, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r124, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r124, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r124, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r124, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r124, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r124, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r124, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r124, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r124, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r124, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r124, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r124, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r124, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r125, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r125, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r125, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r125, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r125, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r125, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r125, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r125, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r125, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r125, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r125, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r125, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r125, %r7763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7862, %r125, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7865, %r125, %r7769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7868, %r125, %r7772;
	// end inline asm
	// begin inline asm
	mov.b32 %r7871, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7872, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7873, %r7775, %r7871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7876, %r7873, %r7872;
	// end inline asm
	// begin inline asm
	mov.b32 %r7879, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7880, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7881, %r7778, %r7879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7884, %r7881, %r7880;
	// end inline asm
	// begin inline asm
	mov.b32 %r7887, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7889, %r7781, %r7887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7892, %r7889, %r7888;
	// end inline asm
	// begin inline asm
	mov.b32 %r7895, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7897, %r7784, %r7895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7900, %r7897, %r7896;
	// end inline asm
	// begin inline asm
	mov.b32 %r7903, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7905, %r7787, %r7903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7908, %r7905, %r7904;
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7913, %r7790, %r7911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7916, %r7913, %r7912;
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7921, %r7793, %r7919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7924, %r7921, %r7920;
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7929, %r7796, %r7927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7932, %r7929, %r7928;
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7937, %r7799, %r7935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7940, %r7937, %r7936;
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7945, %r7802, %r7943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7948, %r7945, %r7944;
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7953, %r7805, %r7951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7956, %r7953, %r7952;
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7961, %r7808, %r7959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7964, %r7961, %r7960;
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7969, %r7811, %r7967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7972, %r7969, %r7968;
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7977, %r7814, %r7975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7980, %r7977, %r7976;
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7985, %r7817, %r7983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7988, %r7985, %r7984;
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7993, %r7820, %r7991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7996, %r7993, %r7992;
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8001, %r7823, %r7999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8004, %r8001, %r8000;
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8009, %r7826, %r8007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8012, %r8009, %r8008;
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8017, %r7829, %r8015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8020, %r8017, %r8016;
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8025, %r7832, %r8023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8028, %r8025, %r8024;
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8033, %r7835, %r8031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8036, %r8033, %r8032;
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8041, %r7838, %r8039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8044, %r8041, %r8040;
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8049, %r7841, %r8047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8052, %r8049, %r8048;
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8057, %r7844, %r8055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8060, %r8057, %r8056;
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8065, %r7847, %r8063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8068, %r8065, %r8064;
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8073, %r7850, %r8071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8076, %r8073, %r8072;
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8081, %r7853, %r8079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8084, %r8081, %r8080;
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8089, %r7856, %r8087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8092, %r8089, %r8088;
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8097, %r7859, %r8095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8100, %r8097, %r8096;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8105, %r7862, %r8103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8108, %r8105, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8113, %r7865, %r8111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8116, %r8113, %r8112;
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8121, %r7868, %r8119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8124, %r8121, %r8120;
	// end inline asm
	// begin inline asm
	mov.b32 %r8130, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8129, %r8130, %r8128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8132, %r7876, %r8129;
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8136, %r8130, %r8135;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8139, %r7884, %r8136;
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8143, %r8130, %r8142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8146, %r7892, %r8143;
	// end inline asm
	// begin inline asm
	mov.b32 %r8149, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8150, %r8130, %r8149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8153, %r7900, %r8150;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8156, %r8132, %r8146, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8160, %r8139, %r8153, %r4343;
	// end inline asm
	shl.b32 	%r8167, %r8160, 4;
	// begin inline asm
	lop3.b32 %r8164, %r4349, %r8156, %r8167, 202;
	// end inline asm
	xor.b32  	%r16144, %r8164, -2004318072;
	// begin inline asm
	mov.b32 %r8171, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r8171, %r8169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r7908, %r8170;
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r8171, %r8176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8180, %r7916, %r8177;
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r8171, %r8183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8187, %r7924, %r8184;
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r8171, %r8190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8194, %r7932, %r8191;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8197, %r8173, %r8187, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8201, %r8180, %r8194, %r4343;
	// end inline asm
	shl.b32 	%r8208, %r8201, 4;
	// begin inline asm
	lop3.b32 %r8205, %r4349, %r8197, %r8208, 202;
	// end inline asm
	xor.b32  	%r16145, %r8205, -2004318072;
	// begin inline asm
	mov.b32 %r8212, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8212, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7940, %r8211;
	// end inline asm
	// begin inline asm
	mov.b32 %r8217, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r8212, %r8217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r7948, %r8218;
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r8212, %r8224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8228, %r7956, %r8225;
	// end inline asm
	// begin inline asm
	mov.b32 %r8231, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r8212, %r8231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8235, %r7964, %r8232;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8238, %r8214, %r8228, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8242, %r8221, %r8235, %r4343;
	// end inline asm
	shl.b32 	%r8249, %r8242, 4;
	// begin inline asm
	lop3.b32 %r8246, %r4349, %r8238, %r8249, 202;
	// end inline asm
	xor.b32  	%r16146, %r8246, -2004318072;
	// begin inline asm
	mov.b32 %r8253, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8253, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7972, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8253, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r7980, %r8259;
	// end inline asm
	// begin inline asm
	mov.b32 %r8265, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r8253, %r8265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8269, %r7988, %r8266;
	// end inline asm
	// begin inline asm
	mov.b32 %r8272, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r8253, %r8272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8276, %r7996, %r8273;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8279, %r8255, %r8269, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8283, %r8262, %r8276, %r4343;
	// end inline asm
	shl.b32 	%r8290, %r8283, 4;
	// begin inline asm
	lop3.b32 %r8287, %r4349, %r8279, %r8290, 202;
	// end inline asm
	xor.b32  	%r16147, %r8287, -2004318072;
	// begin inline asm
	mov.b32 %r8294, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8294, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8004, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8294, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8012, %r8300;
	// end inline asm
	// begin inline asm
	mov.b32 %r8306, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8294, %r8306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8310, %r8020, %r8307;
	// end inline asm
	// begin inline asm
	mov.b32 %r8313, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8294, %r8313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8317, %r8028, %r8314;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8320, %r8296, %r8310, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8324, %r8303, %r8317, %r4343;
	// end inline asm
	shl.b32 	%r8331, %r8324, 4;
	// begin inline asm
	lop3.b32 %r8328, %r4349, %r8320, %r8331, 202;
	// end inline asm
	xor.b32  	%r16148, %r8328, -2004318072;
	// begin inline asm
	mov.b32 %r8335, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8335, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8036, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8335, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8044, %r8341;
	// end inline asm
	// begin inline asm
	mov.b32 %r8347, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8335, %r8347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8351, %r8052, %r8348;
	// end inline asm
	// begin inline asm
	mov.b32 %r8354, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8335, %r8354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8358, %r8060, %r8355;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8361, %r8337, %r8351, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8365, %r8344, %r8358, %r4343;
	// end inline asm
	shl.b32 	%r8372, %r8365, 4;
	// begin inline asm
	lop3.b32 %r8369, %r4349, %r8361, %r8372, 202;
	// end inline asm
	xor.b32  	%r16149, %r8369, -2004318072;
	// begin inline asm
	mov.b32 %r8376, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8376, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8068, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8376, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8076, %r8382;
	// end inline asm
	// begin inline asm
	mov.b32 %r8388, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8376, %r8388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8392, %r8084, %r8389;
	// end inline asm
	// begin inline asm
	mov.b32 %r8395, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8376, %r8395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8399, %r8092, %r8396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8402, %r8378, %r8392, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8406, %r8385, %r8399, %r4343;
	// end inline asm
	shl.b32 	%r8413, %r8406, 4;
	// begin inline asm
	lop3.b32 %r8410, %r4349, %r8402, %r8413, 202;
	// end inline asm
	xor.b32  	%r16150, %r8410, -2004318072;
	// begin inline asm
	mov.b32 %r8417, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8417, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8100, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8417, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8108, %r8423;
	// end inline asm
	// begin inline asm
	mov.b32 %r8429, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8417, %r8429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8433, %r8116, %r8430;
	// end inline asm
	// begin inline asm
	mov.b32 %r8436, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8417, %r8436;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8440, %r8124, %r8437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8443, %r8419, %r8433, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8447, %r8426, %r8440, %r4343;
	// end inline asm
	shl.b32 	%r8454, %r8447, 4;
	// begin inline asm
	lop3.b32 %r8451, %r4349, %r8443, %r8454, 202;
	// end inline asm
	xor.b32  	%r16151, %r8451, -2004318072;
	st.shared.u32 	[%rd98], %r16144;
	st.shared.u32 	[%rd100], %r16145;
	st.shared.u32 	[%rd102], %r16146;
	st.shared.u32 	[%rd104], %r16147;
	st.shared.u32 	[%rd106], %r16148;
	st.shared.u32 	[%rd108], %r16149;
	st.shared.u32 	[%rd110], %r16150;
	st.shared.u32 	[%rd112], %r16151;
	ld.shared.u32 	%r16263, [%rd82];
	ld.shared.u32 	%r16264, [%rd84];
	ld.shared.u32 	%r16265, [%rd86];
	ld.shared.u32 	%r16266, [%rd88];
	ld.shared.u32 	%r16275, [%rd90];
	ld.shared.u32 	%r16276, [%rd92];
	ld.shared.u32 	%r16277, [%rd94];
	ld.shared.u32 	%r16278, [%rd96];
	// begin inline asm
	mov.b32 %r8460, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8471, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8459, %r16263, -2004318072;
	// begin inline asm
	lop3.b32 %r8457, %r826, %r8459, %r8460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8461, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8462, %r8460, %r8461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8465, %r8457, %r8462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8468, %r837, %r8459, %r8471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8472, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8473, %r8471, %r8472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8476, %r8468, %r8473;
	// end inline asm
	shr.u32 	%r8481, %r8459, 8;
	// begin inline asm
	lop3.b32 %r8479, %r826, %r8481, %r8460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8483, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8484, %r8460, %r8483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8487, %r8479, %r8484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8490, %r837, %r8481, %r8471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8494, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8495, %r8471, %r8494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8498, %r8490, %r8495;
	// end inline asm
	// begin inline asm
	mov.b32 %r8506, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8517, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8505, %r16264, -2004318072;
	// begin inline asm
	lop3.b32 %r8503, %r826, %r8505, %r8506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8507, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8508, %r8506, %r8507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8511, %r8503, %r8508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8514, %r837, %r8505, %r8517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8518, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8519, %r8517, %r8518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8522, %r8514, %r8519;
	// end inline asm
	shr.u32 	%r8527, %r8505, 8;
	// begin inline asm
	lop3.b32 %r8525, %r826, %r8527, %r8506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8529, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8530, %r8506, %r8529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8533, %r8525, %r8530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8536, %r837, %r8527, %r8517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8540, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8541, %r8517, %r8540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8544, %r8536, %r8541;
	// end inline asm
	// begin inline asm
	mov.b32 %r8552, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8563, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8551, %r16265, -2004318072;
	// begin inline asm
	lop3.b32 %r8549, %r826, %r8551, %r8552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8553, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8554, %r8552, %r8553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8557, %r8549, %r8554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8560, %r837, %r8551, %r8563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8564, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8565, %r8563, %r8564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8568, %r8560, %r8565;
	// end inline asm
	shr.u32 	%r8573, %r8551, 8;
	// begin inline asm
	lop3.b32 %r8571, %r826, %r8573, %r8552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8575, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8576, %r8552, %r8575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8579, %r8571, %r8576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8582, %r837, %r8573, %r8563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8586, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8587, %r8563, %r8586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8590, %r8582, %r8587;
	// end inline asm
	// begin inline asm
	mov.b32 %r8598, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8609, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8597, %r16266, -2004318072;
	// begin inline asm
	lop3.b32 %r8595, %r826, %r8597, %r8598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8599, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8600, %r8598, %r8599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8603, %r8595, %r8600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8606, %r837, %r8597, %r8609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8610, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8611, %r8609, %r8610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8614, %r8606, %r8611;
	// end inline asm
	shr.u32 	%r8619, %r8597, 8;
	// begin inline asm
	lop3.b32 %r8617, %r826, %r8619, %r8598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8621, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8622, %r8598, %r8621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8625, %r8617, %r8622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8628, %r837, %r8619, %r8609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8632, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8633, %r8609, %r8632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8636, %r8628, %r8633;
	// end inline asm
	// begin inline asm
	mov.b32 %r8644, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8655, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8643, %r16275, -2004318072;
	// begin inline asm
	lop3.b32 %r8641, %r826, %r8643, %r8644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8645, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8646, %r8644, %r8645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8649, %r8641, %r8646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8652, %r837, %r8643, %r8655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8656, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8657, %r8655, %r8656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8660, %r8652, %r8657;
	// end inline asm
	shr.u32 	%r8665, %r8643, 8;
	// begin inline asm
	lop3.b32 %r8663, %r826, %r8665, %r8644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8667, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8668, %r8644, %r8667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8671, %r8663, %r8668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8674, %r837, %r8665, %r8655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8678, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8679, %r8655, %r8678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8682, %r8674, %r8679;
	// end inline asm
	// begin inline asm
	mov.b32 %r8690, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8701, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8689, %r16276, -2004318072;
	// begin inline asm
	lop3.b32 %r8687, %r826, %r8689, %r8690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8691, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8692, %r8690, %r8691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8695, %r8687, %r8692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8698, %r837, %r8689, %r8701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8702, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8703, %r8701, %r8702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8706, %r8698, %r8703;
	// end inline asm
	shr.u32 	%r8711, %r8689, 8;
	// begin inline asm
	lop3.b32 %r8709, %r826, %r8711, %r8690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8713, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8714, %r8690, %r8713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8717, %r8709, %r8714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8720, %r837, %r8711, %r8701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8724, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8725, %r8701, %r8724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8728, %r8720, %r8725;
	// end inline asm
	// begin inline asm
	mov.b32 %r8736, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8747, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8735, %r16277, -2004318072;
	// begin inline asm
	lop3.b32 %r8733, %r826, %r8735, %r8736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8737, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8738, %r8736, %r8737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8741, %r8733, %r8738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8744, %r837, %r8735, %r8747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8748, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8749, %r8747, %r8748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8752, %r8744, %r8749;
	// end inline asm
	shr.u32 	%r8757, %r8735, 8;
	// begin inline asm
	lop3.b32 %r8755, %r826, %r8757, %r8736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8759, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8760, %r8736, %r8759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8763, %r8755, %r8760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8766, %r837, %r8757, %r8747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8770, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8771, %r8747, %r8770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8774, %r8766, %r8771;
	// end inline asm
	// begin inline asm
	mov.b32 %r8782, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8793, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r8781, %r16278, -2004318072;
	// begin inline asm
	lop3.b32 %r8779, %r826, %r8781, %r8782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8783, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8784, %r8782, %r8783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8787, %r8779, %r8784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8790, %r837, %r8781, %r8793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8794, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8795, %r8793, %r8794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8798, %r8790, %r8795;
	// end inline asm
	shr.u32 	%r8803, %r8781, 8;
	// begin inline asm
	lop3.b32 %r8801, %r826, %r8803, %r8782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8805, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8806, %r8782, %r8805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8809, %r8801, %r8806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8812, %r837, %r8803, %r8793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8816, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8817, %r8793, %r8816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8820, %r8812, %r8817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8823, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8825, %r8823, %r8465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8828, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8830, %r8828, %r8476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8833, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8835, %r8833, %r8487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8838, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8840, %r8838, %r8498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8843, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8845, %r8843, %r8511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8848, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8850, %r8848, %r8522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8853, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8855, %r8853, %r8533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8858, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8860, %r8858, %r8544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8863, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8865, %r8863, %r8557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8868, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8870, %r8868, %r8568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8873, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8875, %r8873, %r8579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8878, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8880, %r8878, %r8590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8883, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8885, %r8883, %r8603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8888, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8890, %r8888, %r8614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8893, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8895, %r8893, %r8625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8958, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8960, %r8958, %r8774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8963, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8965, %r8963, %r8787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8968, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8970, %r8968, %r8798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8973, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8975, %r8973, %r8809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8978, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8980, %r8978, %r8820;
	// end inline asm
	// begin inline asm
	mov.b32 %r8988, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r8999, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8985, %r826, %r2411, %r8988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8989, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8990, %r8988, %r8989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8993, %r8985, %r8990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8996, %r837, %r2411, %r8999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9000, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9001, %r8999, %r9000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9004, %r8996, %r9001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9007, %r826, %r2433, %r8988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9011, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9012, %r8988, %r9011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9015, %r9007, %r9012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9018, %r837, %r2433, %r8999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9022, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9023, %r8999, %r9022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9026, %r9018, %r9023;
	// end inline asm
	// begin inline asm
	mov.b32 %r9034, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9045, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9031, %r826, %r2457, %r9034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9035, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9036, %r9034, %r9035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9039, %r9031, %r9036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9042, %r837, %r2457, %r9045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9046, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9047, %r9045, %r9046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9050, %r9042, %r9047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9053, %r826, %r2479, %r9034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9057, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9058, %r9034, %r9057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9061, %r9053, %r9058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9064, %r837, %r2479, %r9045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9068, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9069, %r9045, %r9068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9072, %r9064, %r9069;
	// end inline asm
	// begin inline asm
	mov.b32 %r9080, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9091, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9077, %r826, %r2503, %r9080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9081, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9082, %r9080, %r9081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9085, %r9077, %r9082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9088, %r837, %r2503, %r9091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9092, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9093, %r9091, %r9092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9096, %r9088, %r9093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9099, %r826, %r2525, %r9080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9103, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9104, %r9080, %r9103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9107, %r9099, %r9104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9110, %r837, %r2525, %r9091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9114, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9115, %r9091, %r9114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9118, %r9110, %r9115;
	// end inline asm
	// begin inline asm
	mov.b32 %r9126, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9137, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9123, %r826, %r2549, %r9126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9127, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9128, %r9126, %r9127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9131, %r9123, %r9128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9134, %r837, %r2549, %r9137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9138, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9139, %r9137, %r9138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9142, %r9134, %r9139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9145, %r826, %r2571, %r9126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9149, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9150, %r9126, %r9149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9153, %r9145, %r9150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9156, %r837, %r2571, %r9137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9160, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9161, %r9137, %r9160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9164, %r9156, %r9161;
	// end inline asm
	// begin inline asm
	mov.b32 %r9172, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9183, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9169, %r826, %r2595, %r9172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9173, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9174, %r9172, %r9173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9177, %r9169, %r9174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9180, %r837, %r2595, %r9183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9184, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9185, %r9183, %r9184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9188, %r9180, %r9185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9191, %r826, %r2617, %r9172, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9195, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9196, %r9172, %r9195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9199, %r9191, %r9196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9202, %r837, %r2617, %r9183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9206, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9207, %r9183, %r9206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9210, %r9202, %r9207;
	// end inline asm
	// begin inline asm
	mov.b32 %r9218, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9229, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9215, %r826, %r2641, %r9218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9219, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9220, %r9218, %r9219;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9223, %r9215, %r9220;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9226, %r837, %r2641, %r9229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9230, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9231, %r9229, %r9230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9234, %r9226, %r9231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9237, %r826, %r2663, %r9218, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9241, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9242, %r9218, %r9241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9245, %r9237, %r9242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9248, %r837, %r2663, %r9229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9252, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9253, %r9229, %r9252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9256, %r9248, %r9253;
	// end inline asm
	// begin inline asm
	mov.b32 %r9264, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9275, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9261, %r826, %r2687, %r9264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9265, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9266, %r9264, %r9265;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9269, %r9261, %r9266;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9272, %r837, %r2687, %r9275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9276, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9277, %r9275, %r9276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9280, %r9272, %r9277;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9283, %r826, %r2709, %r9264, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9287, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9288, %r9264, %r9287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9291, %r9283, %r9288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9294, %r837, %r2709, %r9275, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9298, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9299, %r9275, %r9298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9302, %r9294, %r9299;
	// end inline asm
	// begin inline asm
	mov.b32 %r9310, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9321, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9307, %r826, %r2733, %r9310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9311, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9312, %r9310, %r9311;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9315, %r9307, %r9312;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9318, %r837, %r2733, %r9321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9322, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9323, %r9321, %r9322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9326, %r9318, %r9323;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9329, %r826, %r2755, %r9310, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9333, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9334, %r9310, %r9333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9337, %r9329, %r9334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9340, %r837, %r2755, %r9321, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9344, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9345, %r9321, %r9344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9348, %r9340, %r9345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9351, %r265, %r8993, %r8825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9355, %r265, %r9004, %r8830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9359, %r265, %r9015, %r8835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9363, %r265, %r9026, %r8840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9367, %r265, %r9039, %r8845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9371, %r265, %r9050, %r8850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9375, %r265, %r9061, %r8855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9379, %r265, %r9072, %r8860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9383, %r265, %r9085, %r8865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r265, %r9096, %r8870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r265, %r9107, %r8875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r265, %r9118, %r8880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r265, %r9131, %r8885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r265, %r9142, %r8890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r265, %r9153, %r8895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r265, %r9164, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r283, %r9177, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r283, %r9188, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r283, %r9199, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r283, %r9210, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r283, %r9223, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r283, %r9234, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r283, %r9245, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r283, %r9256, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r283, %r9269, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r283, %r9280, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r283, %r9291, %r8955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r283, %r9302, %r8960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r283, %r9315, %r8965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r283, %r9326, %r8970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r283, %r9337, %r8975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r283, %r9348, %r8980;
	// end inline asm
	// begin inline asm
	mov.b32 %r9484, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9495, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9481, %r826, %r827, %r9484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9485, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9486, %r9484, %r9485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9489, %r9481, %r9486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9492, %r837, %r827, %r9495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9496, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9497, %r9495, %r9496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9500, %r9492, %r9497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9503, %r826, %r849, %r9484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9507, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9508, %r9484, %r9507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9511, %r9503, %r9508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9514, %r837, %r849, %r9495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9518, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9519, %r9495, %r9518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9522, %r9514, %r9519;
	// end inline asm
	// begin inline asm
	mov.b32 %r9530, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9541, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9527, %r826, %r873, %r9530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9531, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9532, %r9530, %r9531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9535, %r9527, %r9532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9538, %r837, %r873, %r9541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9542, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9543, %r9541, %r9542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9546, %r9538, %r9543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9549, %r826, %r895, %r9530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9553, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9554, %r9530, %r9553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9557, %r9549, %r9554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9560, %r837, %r895, %r9541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9564, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9565, %r9541, %r9564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9568, %r9560, %r9565;
	// end inline asm
	// begin inline asm
	mov.b32 %r9576, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9587, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9573, %r826, %r919, %r9576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9577, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9578, %r9576, %r9577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9581, %r9573, %r9578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9584, %r837, %r919, %r9587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9588, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9589, %r9587, %r9588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9592, %r9584, %r9589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9595, %r826, %r941, %r9576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9599, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9600, %r9576, %r9599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9603, %r9595, %r9600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9606, %r837, %r941, %r9587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9610, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9611, %r9587, %r9610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9614, %r9606, %r9611;
	// end inline asm
	// begin inline asm
	mov.b32 %r9622, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9633, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9619, %r826, %r965, %r9622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9623, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9624, %r9622, %r9623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9627, %r9619, %r9624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9630, %r837, %r965, %r9633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9634, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9635, %r9633, %r9634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9638, %r9630, %r9635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9641, %r826, %r987, %r9622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9645, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9646, %r9622, %r9645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9649, %r9641, %r9646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9652, %r837, %r987, %r9633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9656, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9657, %r9633, %r9656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9660, %r9652, %r9657;
	// end inline asm
	// begin inline asm
	mov.b32 %r9668, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9679, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9665, %r826, %r1011, %r9668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9669, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9670, %r9668, %r9669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9673, %r9665, %r9670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9676, %r837, %r1011, %r9679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9680, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9681, %r9679, %r9680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9684, %r9676, %r9681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9687, %r826, %r1033, %r9668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9691, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9692, %r9668, %r9691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9695, %r9687, %r9692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9698, %r837, %r1033, %r9679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9702, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9703, %r9679, %r9702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9706, %r9698, %r9703;
	// end inline asm
	// begin inline asm
	mov.b32 %r9714, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9725, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9711, %r826, %r1057, %r9714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9715, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9716, %r9714, %r9715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9719, %r9711, %r9716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9722, %r837, %r1057, %r9725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9726, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9727, %r9725, %r9726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9730, %r9722, %r9727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9733, %r826, %r1079, %r9714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9737, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9738, %r9714, %r9737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9741, %r9733, %r9738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9744, %r837, %r1079, %r9725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9748, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9749, %r9725, %r9748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9752, %r9744, %r9749;
	// end inline asm
	// begin inline asm
	mov.b32 %r9760, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9771, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9757, %r826, %r1103, %r9760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9761, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9762, %r9760, %r9761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9765, %r9757, %r9762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9768, %r837, %r1103, %r9771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9772, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9773, %r9771, %r9772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9776, %r9768, %r9773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9779, %r826, %r1125, %r9760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9783, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9784, %r9760, %r9783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9787, %r9779, %r9784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9790, %r837, %r1125, %r9771, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9794, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9795, %r9771, %r9794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9798, %r9790, %r9795;
	// end inline asm
	// begin inline asm
	mov.b32 %r9806, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r9817, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9803, %r826, %r1149, %r9806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9807, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9808, %r9806, %r9807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9811, %r9803, %r9808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9814, %r837, %r1149, %r9817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9818, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9819, %r9817, %r9818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9822, %r9814, %r9819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9825, %r826, %r1171, %r9806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9829, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9830, %r9806, %r9829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9833, %r9825, %r9830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9836, %r837, %r1171, %r9817, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9840, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9841, %r9817, %r9840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9844, %r9836, %r9841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9847, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9849, %r9847, %r9489, %r9351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9853, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9855, %r9853, %r9500, %r9355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9859, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9861, %r9859, %r9511, %r9359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9865, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9867, %r9865, %r9522, %r9363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9871, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9873, %r9871, %r9535, %r9367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9877, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9879, %r9877, %r9546, %r9371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9883, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9885, %r9883, %r9557, %r9375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9889, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9891, %r9889, %r9568, %r9379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9895, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9897, %r9895, %r9581, %r9383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9901, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9903, %r9901, %r9592, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9907, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9909, %r9907, %r9603, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9913, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9915, %r9913, %r9614, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9919, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9921, %r9919, %r9627, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9925, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9927, %r9925, %r9638, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9931, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9933, %r9931, %r9649, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9937, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9939, %r9937, %r9660, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9943, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9945, %r9943, %r9673, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9949, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9951, %r9949, %r9684, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9955, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9957, %r9955, %r9695, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9961, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9963, %r9961, %r9706, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9967, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9969, %r9967, %r9719, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9973, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9975, %r9973, %r9730, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9979, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9981, %r9979, %r9741, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9985, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9987, %r9985, %r9752, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9991, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9993, %r9991, %r9765, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9997, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9999, %r9997, %r9776, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10003, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10005, %r10003, %r9787, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10009, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10011, %r10009, %r9798, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10015, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10017, %r10015, %r9811, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10021, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10023, %r10021, %r9822, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10027, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10029, %r10027, %r9833, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10033, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10035, %r10033, %r9844, %r9475;
	// end inline asm
	// begin inline asm
	mov.b32 %r10044, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10055, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10041, %r826, %r4643, %r10044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10045, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10046, %r10044, %r10045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10049, %r10041, %r10046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10052, %r837, %r4643, %r10055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10056, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10057, %r10055, %r10056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10060, %r10052, %r10057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10063, %r826, %r4665, %r10044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10067, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10068, %r10044, %r10067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10071, %r10063, %r10068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10074, %r837, %r4665, %r10055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10078, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10079, %r10055, %r10078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10082, %r10074, %r10079;
	// end inline asm
	// begin inline asm
	mov.b32 %r10090, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10101, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10087, %r826, %r4689, %r10090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10091, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10092, %r10090, %r10091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10095, %r10087, %r10092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10098, %r837, %r4689, %r10101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10102, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10103, %r10101, %r10102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10106, %r10098, %r10103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10109, %r826, %r4711, %r10090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10113, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10114, %r10090, %r10113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10117, %r10109, %r10114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10120, %r837, %r4711, %r10101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10124, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10125, %r10101, %r10124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10128, %r10120, %r10125;
	// end inline asm
	// begin inline asm
	mov.b32 %r10136, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10147, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10133, %r826, %r4735, %r10136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10137, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10138, %r10136, %r10137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10141, %r10133, %r10138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10144, %r837, %r4735, %r10147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10148, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10149, %r10147, %r10148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10152, %r10144, %r10149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10155, %r826, %r4757, %r10136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10159, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10160, %r10136, %r10159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10163, %r10155, %r10160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10166, %r837, %r4757, %r10147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10170, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10171, %r10147, %r10170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10174, %r10166, %r10171;
	// end inline asm
	// begin inline asm
	mov.b32 %r10182, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10193, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10179, %r826, %r4781, %r10182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10183, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10184, %r10182, %r10183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10187, %r10179, %r10184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10190, %r837, %r4781, %r10193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10194, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10195, %r10193, %r10194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10198, %r10190, %r10195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10201, %r826, %r4803, %r10182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10205, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10206, %r10182, %r10205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10209, %r10201, %r10206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10212, %r837, %r4803, %r10193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10216, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10217, %r10193, %r10216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10220, %r10212, %r10217;
	// end inline asm
	// begin inline asm
	mov.b32 %r10228, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10239, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10225, %r826, %r4827, %r10228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10229, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10230, %r10228, %r10229;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10233, %r10225, %r10230;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10236, %r837, %r4827, %r10239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10240, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10241, %r10239, %r10240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10244, %r10236, %r10241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10247, %r826, %r4849, %r10228, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10251, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10252, %r10228, %r10251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10255, %r10247, %r10252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10258, %r837, %r4849, %r10239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10262, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10263, %r10239, %r10262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10266, %r10258, %r10263;
	// end inline asm
	// begin inline asm
	mov.b32 %r10274, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10285, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10271, %r826, %r4873, %r10274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10275, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10276, %r10274, %r10275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10279, %r10271, %r10276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10282, %r837, %r4873, %r10285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10286, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10287, %r10285, %r10286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10290, %r10282, %r10287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10293, %r826, %r4895, %r10274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10297, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10298, %r10274, %r10297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10301, %r10293, %r10298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10304, %r837, %r4895, %r10285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10308, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10309, %r10285, %r10308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10312, %r10304, %r10309;
	// end inline asm
	// begin inline asm
	mov.b32 %r10320, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10331, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10317, %r826, %r4919, %r10320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10321, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10322, %r10320, %r10321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10325, %r10317, %r10322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10328, %r837, %r4919, %r10331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10332, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10333, %r10331, %r10332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10336, %r10328, %r10333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10339, %r826, %r4941, %r10320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10343, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10344, %r10320, %r10343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10347, %r10339, %r10344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10350, %r837, %r4941, %r10331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10354, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10355, %r10331, %r10354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10358, %r10350, %r10355;
	// end inline asm
	// begin inline asm
	mov.b32 %r10366, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r10377, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10363, %r826, %r4965, %r10366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10367, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10368, %r10366, %r10367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10371, %r10363, %r10368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10374, %r837, %r4965, %r10377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10378, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10379, %r10377, %r10378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10382, %r10374, %r10379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10385, %r826, %r4987, %r10366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10389, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10390, %r10366, %r10389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10393, %r10385, %r10390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10396, %r837, %r4987, %r10377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10400, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10401, %r10377, %r10400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10404, %r10396, %r10401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r337, %r10049, %r9849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r337, %r10060, %r9855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r337, %r10071, %r9861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r337, %r10082, %r9867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r337, %r10095, %r9873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r337, %r10106, %r9879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r337, %r10117, %r9885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r337, %r10128, %r9891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r337, %r10141, %r9897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r337, %r10152, %r9903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r337, %r10163, %r9909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r337, %r10174, %r9915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r337, %r10187, %r9921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r337, %r10198, %r9927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r337, %r10209, %r9933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r337, %r10220, %r9939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r355, %r10233, %r9945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r355, %r10244, %r9951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r355, %r10255, %r9957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r355, %r10266, %r9963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r355, %r10279, %r9969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r355, %r10290, %r9975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r355, %r10301, %r9981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r355, %r10312, %r9987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r355, %r10325, %r9993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r355, %r10336, %r9999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r355, %r10347, %r10005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r355, %r10358, %r10011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r355, %r10371, %r10017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r355, %r10382, %r10023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r355, %r10393, %r10029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r355, %r10404, %r10035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10535, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10537, %r10535, %r10539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10540, %r394, %r10542, %r10537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10544, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10546, %r10544, %r10548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r394, %r10551, %r10546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10553, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10555, %r10553, %r10557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r394, %r10560, %r10555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10562, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10564, %r10562, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r394, %r10569, %r10564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10571, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10573, %r10571, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r394, %r10578, %r10573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10580, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10582, %r10580, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r394, %r10587, %r10582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10589, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10591, %r10589, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r394, %r10596, %r10591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10598, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10600, %r10598, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r394, %r10605, %r10600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10607, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10609, %r10607, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r397, %r10614, %r10609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10616, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10618, %r10616, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r397, %r10623, %r10618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10625, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10627, %r10625, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r397, %r10632, %r10627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10634, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10636, %r10634, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r397, %r10641, %r10636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10643, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10645, %r10643, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r397, %r10650, %r10645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10652, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r10652, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r397, %r10659, %r10654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10661, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10663, %r10661, %r10665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r397, %r10668, %r10663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10670, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r10670, %r10674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r397, %r10677, %r10672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10679, %r400, %r10542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r394, %r10539, %r10679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r400, %r10551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r394, %r10548, %r10686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10693, %r400, %r10560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r394, %r10557, %r10693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10700, %r400, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r394, %r10566, %r10700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10707, %r400, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10710, %r394, %r10575, %r10707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10714, %r400, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r394, %r10584, %r10714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10721, %r400, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10724, %r394, %r10593, %r10721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10728, %r400, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10731, %r394, %r10602, %r10728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10735, %r403, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r397, %r10611, %r10735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10742, %r403, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10745, %r397, %r10620, %r10742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10749, %r403, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10752, %r397, %r10629, %r10749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10756, %r403, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10759, %r397, %r10638, %r10756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10763, %r403, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10766, %r397, %r10647, %r10763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10770, %r403, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10773, %r397, %r10656, %r10770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10777, %r403, %r10668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10780, %r397, %r10665, %r10777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10784, %r403, %r10677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10787, %r397, %r10674, %r10784;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10958, %r10955}, {%r461, %r467, %r464, %r470}, {%r10540, %r10682}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10967, %r10964}, {%r461, %r467, %r464, %r470}, {%r10549, %r10689}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10976, %r10973}, {%r461, %r467, %r464, %r470}, {%r10558, %r10696}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10985, %r10982}, {%r461, %r467, %r464, %r470}, {%r10567, %r10703}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10994, %r10991}, {%r461, %r467, %r464, %r470}, {%r10576, %r10710}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11003, %r11000}, {%r461, %r467, %r464, %r470}, {%r10585, %r10717}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11012, %r11009}, {%r461, %r467, %r464, %r470}, {%r10594, %r10724}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11021, %r11018}, {%r461, %r467, %r464, %r470}, {%r10603, %r10731}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11030, %r11027}, {%r461, %r467, %r464, %r470}, {%r10612, %r10738}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11039, %r11036}, {%r461, %r467, %r464, %r470}, {%r10621, %r10745}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11048, %r11045}, {%r461, %r467, %r464, %r470}, {%r10630, %r10752}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11057, %r11054}, {%r461, %r467, %r464, %r470}, {%r10639, %r10759}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11066, %r11063}, {%r461, %r467, %r464, %r470}, {%r10648, %r10766}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11075, %r11072}, {%r461, %r467, %r464, %r470}, {%r10657, %r10773}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11084, %r11081}, {%r461, %r467, %r464, %r470}, {%r10666, %r10780}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11093, %r11090}, {%r461, %r467, %r464, %r470}, {%r10675, %r10787}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10951, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10953, %r10951, %r10955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10956, %r511, %r10958, %r10953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10960, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10962, %r10960, %r10964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10965, %r511, %r10967, %r10962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10969, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10971, %r10969, %r10973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10974, %r511, %r10976, %r10971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10978, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10980, %r10978, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10983, %r511, %r10985, %r10980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10987, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10989, %r10987, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10992, %r511, %r10994, %r10989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10996, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10998, %r10996, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11001, %r511, %r11003, %r10998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11005, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11007, %r11005, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11010, %r511, %r11012, %r11007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11014, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11016, %r11014, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11019, %r511, %r11021, %r11016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11023, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11025, %r11023, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11028, %r511, %r11030, %r11025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11032, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11034, %r11032, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11037, %r511, %r11039, %r11034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11041, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11043, %r11041, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11046, %r511, %r11048, %r11043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11050, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11052, %r11050, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11055, %r511, %r11057, %r11052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11059, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11061, %r11059, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11064, %r511, %r11066, %r11061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11068, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r11068, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r511, %r11075, %r11070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11077, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11079, %r11077, %r11081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11082, %r511, %r11084, %r11079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11086, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r11086, %r11090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r511, %r11093, %r11088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11095, %r514, %r10958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11098, %r511, %r10955, %r11095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r514, %r10967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r511, %r10964, %r11102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11109, %r514, %r10976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11112, %r511, %r10973, %r11109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11116, %r514, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11119, %r511, %r10982, %r11116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11123, %r514, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11126, %r511, %r10991, %r11123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11130, %r514, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11133, %r511, %r11000, %r11130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11137, %r514, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11140, %r511, %r11009, %r11137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11144, %r514, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11147, %r511, %r11018, %r11144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11151, %r514, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11154, %r511, %r11027, %r11151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11158, %r514, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11161, %r511, %r11036, %r11158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11165, %r514, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11168, %r511, %r11045, %r11165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11172, %r514, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11175, %r511, %r11054, %r11172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11179, %r514, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11182, %r511, %r11063, %r11179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11186, %r514, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11189, %r511, %r11072, %r11186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11193, %r514, %r11084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11196, %r511, %r11081, %r11193;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11200, %r514, %r11093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11203, %r511, %r11090, %r11200;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11496, %r11499}, {%r549, %r555, %r552, %r558}, {%r10956, %r11098}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11502, %r11505}, {%r549, %r555, %r552, %r558}, {%r10965, %r11105}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11508, %r11511}, {%r549, %r555, %r552, %r558}, {%r10974, %r11112}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11514, %r11517}, {%r549, %r555, %r552, %r558}, {%r10983, %r11119}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11520, %r11523}, {%r549, %r555, %r552, %r558}, {%r10992, %r11126}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11526, %r11529}, {%r549, %r555, %r552, %r558}, {%r11001, %r11133}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11532, %r11535}, {%r549, %r555, %r552, %r558}, {%r11010, %r11140}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11538, %r11541}, {%r549, %r555, %r552, %r558}, {%r11019, %r11147}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11497, %r11500}, {%r549, %r555, %r552, %r558}, {%r11028, %r11154}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11503, %r11506}, {%r549, %r555, %r552, %r558}, {%r11037, %r11161}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11509, %r11512}, {%r549, %r555, %r552, %r558}, {%r11046, %r11168}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11515, %r11518}, {%r549, %r555, %r552, %r558}, {%r11055, %r11175}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11521, %r11524}, {%r549, %r555, %r552, %r558}, {%r11064, %r11182}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11527, %r11530}, {%r549, %r555, %r552, %r558}, {%r11073, %r11189}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11533, %r11536}, {%r549, %r555, %r552, %r558}, {%r11082, %r11196}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11539, %r11542}, {%r549, %r555, %r552, %r558}, {%r11091, %r11203}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11516, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11519, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11522, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11525, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11528, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11531, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11534, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11537, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11540, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11564, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11567, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11570, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11573, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11576, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11579, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11582, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11585, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11588, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r124, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r124, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r124, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r124, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r124, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r124, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r124, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r124, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r124, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r124, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r124, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r124, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r124, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r124, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r124, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r124, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r125, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r125, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r125, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r125, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r125, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r125, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r125, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r125, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r125, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r125, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r125, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r125, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r125, %r11579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11678, %r125, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11681, %r125, %r11585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11684, %r125, %r11588;
	// end inline asm
	// begin inline asm
	mov.b32 %r11687, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11688, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11689, %r11591, %r11687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11692, %r11689, %r11688;
	// end inline asm
	// begin inline asm
	mov.b32 %r11695, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11696, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11697, %r11594, %r11695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11700, %r11697, %r11696;
	// end inline asm
	// begin inline asm
	mov.b32 %r11703, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11705, %r11597, %r11703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11708, %r11705, %r11704;
	// end inline asm
	// begin inline asm
	mov.b32 %r11711, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11713, %r11600, %r11711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11716, %r11713, %r11712;
	// end inline asm
	// begin inline asm
	mov.b32 %r11719, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11721, %r11603, %r11719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11724, %r11721, %r11720;
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11729, %r11606, %r11727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11732, %r11729, %r11728;
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11737, %r11609, %r11735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11740, %r11737, %r11736;
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11745, %r11612, %r11743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11748, %r11745, %r11744;
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11753, %r11615, %r11751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11756, %r11753, %r11752;
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11761, %r11618, %r11759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11764, %r11761, %r11760;
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11769, %r11621, %r11767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11772, %r11769, %r11768;
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11777, %r11624, %r11775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11780, %r11777, %r11776;
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11785, %r11627, %r11783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11788, %r11785, %r11784;
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11793, %r11630, %r11791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11796, %r11793, %r11792;
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11801, %r11633, %r11799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11804, %r11801, %r11800;
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11809, %r11636, %r11807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11812, %r11809, %r11808;
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11817, %r11639, %r11815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11820, %r11817, %r11816;
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11825, %r11642, %r11823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11828, %r11825, %r11824;
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11833, %r11645, %r11831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11836, %r11833, %r11832;
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11841, %r11648, %r11839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11844, %r11841, %r11840;
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11849, %r11651, %r11847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11852, %r11849, %r11848;
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11857, %r11654, %r11855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11860, %r11857, %r11856;
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11865, %r11657, %r11863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11868, %r11865, %r11864;
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11873, %r11660, %r11871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11876, %r11873, %r11872;
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11881, %r11663, %r11879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11884, %r11881, %r11880;
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11889, %r11666, %r11887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11892, %r11889, %r11888;
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11897, %r11669, %r11895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11900, %r11897, %r11896;
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11905, %r11672, %r11903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11908, %r11905, %r11904;
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11913, %r11675, %r11911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11916, %r11913, %r11912;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11921, %r11678, %r11919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11924, %r11921, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11929, %r11681, %r11927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11932, %r11929, %r11928;
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11937, %r11684, %r11935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11940, %r11937, %r11936;
	// end inline asm
	// begin inline asm
	mov.b32 %r11946, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11945, %r11946, %r11944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11948, %r11692, %r11945;
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11952, %r11946, %r11951;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11955, %r11700, %r11952;
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11959, %r11946, %r11958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11962, %r11708, %r11959;
	// end inline asm
	// begin inline asm
	mov.b32 %r11965, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11966, %r11946, %r11965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11969, %r11716, %r11966;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11972, %r11948, %r11962, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11976, %r11955, %r11969, %r4343;
	// end inline asm
	shl.b32 	%r11983, %r11976, 4;
	// begin inline asm
	lop3.b32 %r11980, %r4349, %r11972, %r11983, 202;
	// end inline asm
	xor.b32  	%r16152, %r11980, -2004318072;
	// begin inline asm
	mov.b32 %r11987, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11987, %r11985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11724, %r11986;
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11987, %r11992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11996, %r11732, %r11993;
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11987, %r11999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12003, %r11740, %r12000;
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11987, %r12006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12010, %r11748, %r12007;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12013, %r11989, %r12003, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12017, %r11996, %r12010, %r4343;
	// end inline asm
	shl.b32 	%r12024, %r12017, 4;
	// begin inline asm
	lop3.b32 %r12021, %r4349, %r12013, %r12024, 202;
	// end inline asm
	xor.b32  	%r16153, %r12021, -2004318072;
	// begin inline asm
	mov.b32 %r12028, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12028, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11756, %r12027;
	// end inline asm
	// begin inline asm
	mov.b32 %r12033, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r12028, %r12033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r11764, %r12034;
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r12028, %r12040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12044, %r11772, %r12041;
	// end inline asm
	// begin inline asm
	mov.b32 %r12047, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r12028, %r12047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12051, %r11780, %r12048;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12054, %r12030, %r12044, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12058, %r12037, %r12051, %r4343;
	// end inline asm
	shl.b32 	%r12065, %r12058, 4;
	// begin inline asm
	lop3.b32 %r12062, %r4349, %r12054, %r12065, 202;
	// end inline asm
	xor.b32  	%r16154, %r12062, -2004318072;
	// begin inline asm
	mov.b32 %r12069, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12069, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11788, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12069, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11796, %r12075;
	// end inline asm
	// begin inline asm
	mov.b32 %r12081, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r12069, %r12081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12085, %r11804, %r12082;
	// end inline asm
	// begin inline asm
	mov.b32 %r12088, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r12069, %r12088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12092, %r11812, %r12089;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12095, %r12071, %r12085, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12099, %r12078, %r12092, %r4343;
	// end inline asm
	shl.b32 	%r12106, %r12099, 4;
	// begin inline asm
	lop3.b32 %r12103, %r4349, %r12095, %r12106, 202;
	// end inline asm
	xor.b32  	%r16155, %r12103, -2004318072;
	// begin inline asm
	mov.b32 %r12110, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12110, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11820, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12110, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11828, %r12116;
	// end inline asm
	// begin inline asm
	mov.b32 %r12122, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r12110, %r12122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12126, %r11836, %r12123;
	// end inline asm
	// begin inline asm
	mov.b32 %r12129, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r12110, %r12129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12133, %r11844, %r12130;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12136, %r12112, %r12126, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12140, %r12119, %r12133, %r4343;
	// end inline asm
	shl.b32 	%r12147, %r12140, 4;
	// begin inline asm
	lop3.b32 %r12144, %r4349, %r12136, %r12147, 202;
	// end inline asm
	xor.b32  	%r16156, %r12144, -2004318072;
	// begin inline asm
	mov.b32 %r12151, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12151, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11852, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12151, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11860, %r12157;
	// end inline asm
	// begin inline asm
	mov.b32 %r12163, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r12151, %r12163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12167, %r11868, %r12164;
	// end inline asm
	// begin inline asm
	mov.b32 %r12170, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r12151, %r12170;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12174, %r11876, %r12171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12177, %r12153, %r12167, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12181, %r12160, %r12174, %r4343;
	// end inline asm
	shl.b32 	%r12188, %r12181, 4;
	// begin inline asm
	lop3.b32 %r12185, %r4349, %r12177, %r12188, 202;
	// end inline asm
	xor.b32  	%r16157, %r12185, -2004318072;
	// begin inline asm
	mov.b32 %r12192, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12192, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11884, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12192, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11892, %r12198;
	// end inline asm
	// begin inline asm
	mov.b32 %r12204, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r12192, %r12204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12208, %r11900, %r12205;
	// end inline asm
	// begin inline asm
	mov.b32 %r12211, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r12192, %r12211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12215, %r11908, %r12212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12218, %r12194, %r12208, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12222, %r12201, %r12215, %r4343;
	// end inline asm
	shl.b32 	%r12229, %r12222, 4;
	// begin inline asm
	lop3.b32 %r12226, %r4349, %r12218, %r12229, 202;
	// end inline asm
	xor.b32  	%r16158, %r12226, -2004318072;
	// begin inline asm
	mov.b32 %r12233, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12233, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11916, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12233, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11924, %r12239;
	// end inline asm
	// begin inline asm
	mov.b32 %r12245, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r12233, %r12245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12249, %r11932, %r12246;
	// end inline asm
	// begin inline asm
	mov.b32 %r12252, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r12233, %r12252;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12256, %r11940, %r12253;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12259, %r12235, %r12249, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12263, %r12242, %r12256, %r4343;
	// end inline asm
	shl.b32 	%r12270, %r12263, 4;
	// begin inline asm
	lop3.b32 %r12267, %r4349, %r12259, %r12270, 202;
	// end inline asm
	xor.b32  	%r16159, %r12267, -2004318072;
	st.shared.u32 	[%rd98], %r16152;
	st.shared.u32 	[%rd100], %r16153;
	st.shared.u32 	[%rd102], %r16154;
	st.shared.u32 	[%rd104], %r16155;
	st.shared.u32 	[%rd106], %r16156;
	st.shared.u32 	[%rd108], %r16157;
	st.shared.u32 	[%rd110], %r16158;
	st.shared.u32 	[%rd112], %r16159;
	ld.shared.u32 	%r16267, [%rd82];
	ld.shared.u32 	%r16268, [%rd84];
	ld.shared.u32 	%r16269, [%rd86];
	ld.shared.u32 	%r16270, [%rd88];
	ld.shared.u32 	%r16279, [%rd90];
	ld.shared.u32 	%r16280, [%rd92];
	ld.shared.u32 	%r16281, [%rd94];
	ld.shared.u32 	%r16282, [%rd96];
	// begin inline asm
	mov.b32 %r12276, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12287, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12275, %r16267, -2004318072;
	// begin inline asm
	lop3.b32 %r12273, %r826, %r12275, %r12276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12277, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12278, %r12276, %r12277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12281, %r12273, %r12278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12284, %r837, %r12275, %r12287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12288, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12289, %r12287, %r12288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12292, %r12284, %r12289;
	// end inline asm
	shr.u32 	%r12297, %r12275, 8;
	// begin inline asm
	lop3.b32 %r12295, %r826, %r12297, %r12276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12299, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12300, %r12276, %r12299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12303, %r12295, %r12300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12306, %r837, %r12297, %r12287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12310, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12311, %r12287, %r12310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12314, %r12306, %r12311;
	// end inline asm
	// begin inline asm
	mov.b32 %r12322, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12333, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12321, %r16268, -2004318072;
	// begin inline asm
	lop3.b32 %r12319, %r826, %r12321, %r12322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12323, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12324, %r12322, %r12323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12327, %r12319, %r12324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12330, %r837, %r12321, %r12333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12334, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12335, %r12333, %r12334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12338, %r12330, %r12335;
	// end inline asm
	shr.u32 	%r12343, %r12321, 8;
	// begin inline asm
	lop3.b32 %r12341, %r826, %r12343, %r12322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12345, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12346, %r12322, %r12345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12349, %r12341, %r12346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12352, %r837, %r12343, %r12333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12356, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12357, %r12333, %r12356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12360, %r12352, %r12357;
	// end inline asm
	// begin inline asm
	mov.b32 %r12368, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12379, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12367, %r16269, -2004318072;
	// begin inline asm
	lop3.b32 %r12365, %r826, %r12367, %r12368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12369, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12370, %r12368, %r12369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12373, %r12365, %r12370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12376, %r837, %r12367, %r12379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12380, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12381, %r12379, %r12380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12384, %r12376, %r12381;
	// end inline asm
	shr.u32 	%r12389, %r12367, 8;
	// begin inline asm
	lop3.b32 %r12387, %r826, %r12389, %r12368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12391, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12392, %r12368, %r12391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12395, %r12387, %r12392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12398, %r837, %r12389, %r12379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12402, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12403, %r12379, %r12402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12406, %r12398, %r12403;
	// end inline asm
	// begin inline asm
	mov.b32 %r12414, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12425, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12413, %r16270, -2004318072;
	// begin inline asm
	lop3.b32 %r12411, %r826, %r12413, %r12414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12415, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12416, %r12414, %r12415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12419, %r12411, %r12416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12422, %r837, %r12413, %r12425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12426, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12427, %r12425, %r12426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12430, %r12422, %r12427;
	// end inline asm
	shr.u32 	%r12435, %r12413, 8;
	// begin inline asm
	lop3.b32 %r12433, %r826, %r12435, %r12414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12437, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12438, %r12414, %r12437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12441, %r12433, %r12438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12444, %r837, %r12435, %r12425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12448, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12449, %r12425, %r12448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12452, %r12444, %r12449;
	// end inline asm
	// begin inline asm
	mov.b32 %r12460, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12471, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12459, %r16279, -2004318072;
	// begin inline asm
	lop3.b32 %r12457, %r826, %r12459, %r12460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12461, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12462, %r12460, %r12461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12465, %r12457, %r12462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12468, %r837, %r12459, %r12471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12472, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12473, %r12471, %r12472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12476, %r12468, %r12473;
	// end inline asm
	shr.u32 	%r12481, %r12459, 8;
	// begin inline asm
	lop3.b32 %r12479, %r826, %r12481, %r12460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12483, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12484, %r12460, %r12483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12487, %r12479, %r12484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12490, %r837, %r12481, %r12471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12494, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12495, %r12471, %r12494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12498, %r12490, %r12495;
	// end inline asm
	// begin inline asm
	mov.b32 %r12506, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12517, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12505, %r16280, -2004318072;
	// begin inline asm
	lop3.b32 %r12503, %r826, %r12505, %r12506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12507, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12508, %r12506, %r12507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12511, %r12503, %r12508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12514, %r837, %r12505, %r12517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12518, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12519, %r12517, %r12518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12522, %r12514, %r12519;
	// end inline asm
	shr.u32 	%r12527, %r12505, 8;
	// begin inline asm
	lop3.b32 %r12525, %r826, %r12527, %r12506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12529, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12530, %r12506, %r12529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12533, %r12525, %r12530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12536, %r837, %r12527, %r12517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12540, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12541, %r12517, %r12540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12544, %r12536, %r12541;
	// end inline asm
	// begin inline asm
	mov.b32 %r12552, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12563, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12551, %r16281, -2004318072;
	// begin inline asm
	lop3.b32 %r12549, %r826, %r12551, %r12552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12553, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12554, %r12552, %r12553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12557, %r12549, %r12554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12560, %r837, %r12551, %r12563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12564, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12565, %r12563, %r12564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12568, %r12560, %r12565;
	// end inline asm
	shr.u32 	%r12573, %r12551, 8;
	// begin inline asm
	lop3.b32 %r12571, %r826, %r12573, %r12552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12575, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12576, %r12552, %r12575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12579, %r12571, %r12576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12582, %r837, %r12573, %r12563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12586, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12587, %r12563, %r12586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12590, %r12582, %r12587;
	// end inline asm
	// begin inline asm
	mov.b32 %r12598, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12609, {%rs2198, %rs2198};
	// end inline asm
	xor.b32  	%r12597, %r16282, -2004318072;
	// begin inline asm
	lop3.b32 %r12595, %r826, %r12597, %r12598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12599, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12600, %r12598, %r12599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12603, %r12595, %r12600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12606, %r837, %r12597, %r12609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12610, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12611, %r12609, %r12610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12614, %r12606, %r12611;
	// end inline asm
	shr.u32 	%r12619, %r12597, 8;
	// begin inline asm
	lop3.b32 %r12617, %r826, %r12619, %r12598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12621, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12622, %r12598, %r12621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12625, %r12617, %r12622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12628, %r837, %r12619, %r12609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12632, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12633, %r12609, %r12632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12636, %r12628, %r12633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12639, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12641, %r12639, %r12281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12644, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12646, %r12644, %r12292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12649, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12651, %r12649, %r12303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12654, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12656, %r12654, %r12314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12659, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12661, %r12659, %r12327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12664, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12666, %r12664, %r12338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12669, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12671, %r12669, %r12349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12674, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12676, %r12674, %r12360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12679, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12681, %r12679, %r12373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12684, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12686, %r12684, %r12384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12689, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12691, %r12689, %r12395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12694, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12696, %r12694, %r12406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12699, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12701, %r12699, %r12419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12704, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12706, %r12704, %r12430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12709, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12711, %r12709, %r12441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12557;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12774, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12776, %r12774, %r12590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12779, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12781, %r12779, %r12603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12784, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12786, %r12784, %r12614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12789, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12791, %r12789, %r12625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12794, %r391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12796, %r12794, %r12636;
	// end inline asm
	// begin inline asm
	mov.b32 %r12804, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12815, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12801, %r826, %r827, %r12804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12805, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12806, %r12804, %r12805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12809, %r12801, %r12806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12812, %r837, %r827, %r12815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12816, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12817, %r12815, %r12816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12820, %r12812, %r12817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12823, %r826, %r849, %r12804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12827, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12828, %r12804, %r12827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12831, %r12823, %r12828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12834, %r837, %r849, %r12815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12838, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12839, %r12815, %r12838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12842, %r12834, %r12839;
	// end inline asm
	// begin inline asm
	mov.b32 %r12850, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12861, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12847, %r826, %r873, %r12850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12851, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12852, %r12850, %r12851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12855, %r12847, %r12852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12858, %r837, %r873, %r12861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12862, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12863, %r12861, %r12862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12866, %r12858, %r12863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12869, %r826, %r895, %r12850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12873, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12874, %r12850, %r12873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12877, %r12869, %r12874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12880, %r837, %r895, %r12861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12884, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12885, %r12861, %r12884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12888, %r12880, %r12885;
	// end inline asm
	// begin inline asm
	mov.b32 %r12896, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12907, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12893, %r826, %r919, %r12896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12897, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12898, %r12896, %r12897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12901, %r12893, %r12898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12904, %r837, %r919, %r12907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12908, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12909, %r12907, %r12908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12912, %r12904, %r12909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12915, %r826, %r941, %r12896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12919, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12920, %r12896, %r12919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12923, %r12915, %r12920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12926, %r837, %r941, %r12907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12930, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12931, %r12907, %r12930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12934, %r12926, %r12931;
	// end inline asm
	// begin inline asm
	mov.b32 %r12942, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12953, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12939, %r826, %r965, %r12942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12943, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12944, %r12942, %r12943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12947, %r12939, %r12944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12950, %r837, %r965, %r12953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12954, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12955, %r12953, %r12954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12958, %r12950, %r12955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12961, %r826, %r987, %r12942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12965, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12966, %r12942, %r12965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12969, %r12961, %r12966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12972, %r837, %r987, %r12953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12976, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12977, %r12953, %r12976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12980, %r12972, %r12977;
	// end inline asm
	// begin inline asm
	mov.b32 %r12988, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r12999, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12985, %r826, %r1011, %r12988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12989, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12990, %r12988, %r12989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12993, %r12985, %r12990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12996, %r837, %r1011, %r12999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13000, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13001, %r12999, %r13000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13004, %r12996, %r13001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13007, %r826, %r1033, %r12988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13011, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13012, %r12988, %r13011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13015, %r13007, %r13012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13018, %r837, %r1033, %r12999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13022, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13023, %r12999, %r13022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13026, %r13018, %r13023;
	// end inline asm
	// begin inline asm
	mov.b32 %r13034, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13045, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13031, %r826, %r1057, %r13034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13035, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13036, %r13034, %r13035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13039, %r13031, %r13036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13042, %r837, %r1057, %r13045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13046, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13047, %r13045, %r13046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13050, %r13042, %r13047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13053, %r826, %r1079, %r13034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13057, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13058, %r13034, %r13057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13061, %r13053, %r13058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13064, %r837, %r1079, %r13045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13068, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13069, %r13045, %r13068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13072, %r13064, %r13069;
	// end inline asm
	// begin inline asm
	mov.b32 %r13080, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13091, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13077, %r826, %r1103, %r13080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13081, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13082, %r13080, %r13081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13085, %r13077, %r13082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13088, %r837, %r1103, %r13091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13092, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13093, %r13091, %r13092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13096, %r13088, %r13093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13099, %r826, %r1125, %r13080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13103, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13104, %r13080, %r13103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13107, %r13099, %r13104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13110, %r837, %r1125, %r13091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13114, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13115, %r13091, %r13114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13118, %r13110, %r13115;
	// end inline asm
	// begin inline asm
	mov.b32 %r13126, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13137, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13123, %r826, %r1149, %r13126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13127, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13128, %r13126, %r13127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13131, %r13123, %r13128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13134, %r837, %r1149, %r13137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13138, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13139, %r13137, %r13138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13142, %r13134, %r13139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13145, %r826, %r1171, %r13126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13149, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13150, %r13126, %r13149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13153, %r13145, %r13150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13156, %r837, %r1171, %r13137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13160, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13161, %r13137, %r13160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13164, %r13156, %r13161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13167, %r265, %r12809, %r12641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13171, %r265, %r12820, %r12646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13175, %r265, %r12831, %r12651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13179, %r265, %r12842, %r12656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13183, %r265, %r12855, %r12661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13187, %r265, %r12866, %r12666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13191, %r265, %r12877, %r12671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13195, %r265, %r12888, %r12676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13199, %r265, %r12901, %r12681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r265, %r12912, %r12686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r265, %r12923, %r12691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r265, %r12934, %r12696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r265, %r12947, %r12701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r265, %r12958, %r12706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r265, %r12969, %r12711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r265, %r12980, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r283, %r12993, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r283, %r13004, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r283, %r13015, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r283, %r13026, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r283, %r13039, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r283, %r13050, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r283, %r13061, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r283, %r13072, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r283, %r13085, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r283, %r13096, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r283, %r13107, %r12771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r283, %r13118, %r12776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r283, %r13131, %r12781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r283, %r13142, %r12786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r283, %r13153, %r12791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r283, %r13164, %r12796;
	// end inline asm
	// begin inline asm
	mov.b32 %r13300, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13311, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13297, %r826, %r4643, %r13300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13301, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13302, %r13300, %r13301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13305, %r13297, %r13302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13308, %r837, %r4643, %r13311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13312, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13313, %r13311, %r13312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13316, %r13308, %r13313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13319, %r826, %r4665, %r13300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13323, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13324, %r13300, %r13323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13327, %r13319, %r13324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13330, %r837, %r4665, %r13311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13334, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13335, %r13311, %r13334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13338, %r13330, %r13335;
	// end inline asm
	// begin inline asm
	mov.b32 %r13346, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13357, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13343, %r826, %r4689, %r13346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13347, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13348, %r13346, %r13347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13351, %r13343, %r13348;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13354, %r837, %r4689, %r13357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13358, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13359, %r13357, %r13358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13362, %r13354, %r13359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13365, %r826, %r4711, %r13346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13369, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13370, %r13346, %r13369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13373, %r13365, %r13370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13376, %r837, %r4711, %r13357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13380, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13381, %r13357, %r13380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13384, %r13376, %r13381;
	// end inline asm
	// begin inline asm
	mov.b32 %r13392, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13403, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13389, %r826, %r4735, %r13392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13393, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13394, %r13392, %r13393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13397, %r13389, %r13394;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13400, %r837, %r4735, %r13403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13404, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13405, %r13403, %r13404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13408, %r13400, %r13405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13411, %r826, %r4757, %r13392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13415, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13416, %r13392, %r13415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13419, %r13411, %r13416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13422, %r837, %r4757, %r13403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13426, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13427, %r13403, %r13426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13430, %r13422, %r13427;
	// end inline asm
	// begin inline asm
	mov.b32 %r13438, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13449, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13435, %r826, %r4781, %r13438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13439, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13440, %r13438, %r13439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13443, %r13435, %r13440;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13446, %r837, %r4781, %r13449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13450, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13451, %r13449, %r13450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13454, %r13446, %r13451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13457, %r826, %r4803, %r13438, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13461, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13462, %r13438, %r13461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13465, %r13457, %r13462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13468, %r837, %r4803, %r13449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13472, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13473, %r13449, %r13472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13476, %r13468, %r13473;
	// end inline asm
	// begin inline asm
	mov.b32 %r13484, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13495, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13481, %r826, %r4827, %r13484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13485, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13486, %r13484, %r13485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13489, %r13481, %r13486;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13492, %r837, %r4827, %r13495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13496, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13497, %r13495, %r13496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13500, %r13492, %r13497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13503, %r826, %r4849, %r13484, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13507, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13508, %r13484, %r13507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13511, %r13503, %r13508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13514, %r837, %r4849, %r13495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13518, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13519, %r13495, %r13518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13522, %r13514, %r13519;
	// end inline asm
	// begin inline asm
	mov.b32 %r13530, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13541, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13527, %r826, %r4873, %r13530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13531, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13532, %r13530, %r13531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13535, %r13527, %r13532;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13538, %r837, %r4873, %r13541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13542, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13543, %r13541, %r13542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13546, %r13538, %r13543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13549, %r826, %r4895, %r13530, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13553, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13554, %r13530, %r13553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13557, %r13549, %r13554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13560, %r837, %r4895, %r13541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13564, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13565, %r13541, %r13564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13568, %r13560, %r13565;
	// end inline asm
	// begin inline asm
	mov.b32 %r13576, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13587, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13573, %r826, %r4919, %r13576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13577, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13578, %r13576, %r13577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13581, %r13573, %r13578;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13584, %r837, %r4919, %r13587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13588, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13589, %r13587, %r13588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13592, %r13584, %r13589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13595, %r826, %r4941, %r13576, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13599, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13600, %r13576, %r13599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13603, %r13595, %r13600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13606, %r837, %r4941, %r13587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13610, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13611, %r13587, %r13610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13614, %r13606, %r13611;
	// end inline asm
	// begin inline asm
	mov.b32 %r13622, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13633, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13619, %r826, %r4965, %r13622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13623, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13624, %r13622, %r13623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13627, %r13619, %r13624;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13630, %r837, %r4965, %r13633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13634, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13635, %r13633, %r13634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13638, %r13630, %r13635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13641, %r826, %r4987, %r13622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13645, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13646, %r13622, %r13645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13649, %r13641, %r13646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13652, %r837, %r4987, %r13633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13656, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13657, %r13633, %r13656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13660, %r13652, %r13657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13663, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13665, %r13663, %r13305, %r13167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13669, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13671, %r13669, %r13316, %r13171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13675, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13677, %r13675, %r13327, %r13175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13681, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13683, %r13681, %r13338, %r13179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13687, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13689, %r13687, %r13351, %r13183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13693, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13695, %r13693, %r13362, %r13187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13699, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13701, %r13699, %r13373, %r13191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13705, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13707, %r13705, %r13384, %r13195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13711, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13713, %r13711, %r13397, %r13199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13717, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13719, %r13717, %r13408, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13723, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13725, %r13723, %r13419, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13729, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13731, %r13729, %r13430, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13735, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13737, %r13735, %r13443, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13741, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13743, %r13741, %r13454, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13747, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13749, %r13747, %r13465, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13753, %r301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13755, %r13753, %r13476, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13759, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13761, %r13759, %r13489, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13765, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13767, %r13765, %r13500, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13771, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13773, %r13771, %r13511, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13777, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13779, %r13777, %r13522, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13783, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13785, %r13783, %r13535, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13789, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13791, %r13789, %r13546, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13795, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13797, %r13795, %r13557, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13801, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13803, %r13801, %r13568, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13807, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13809, %r13807, %r13581, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13813, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13815, %r13813, %r13592, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13819, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13821, %r13819, %r13603, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13825, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13827, %r13825, %r13614, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13831, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13833, %r13831, %r13627, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13837, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13839, %r13837, %r13638, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13843, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13845, %r13843, %r13649, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13849, %r319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13851, %r13849, %r13660, %r13291;
	// end inline asm
	// begin inline asm
	mov.b32 %r13860, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13871, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13857, %r826, %r8459, %r13860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13861, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13862, %r13860, %r13861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13865, %r13857, %r13862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13868, %r837, %r8459, %r13871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13872, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13873, %r13871, %r13872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13876, %r13868, %r13873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13879, %r826, %r8481, %r13860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13883, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13884, %r13860, %r13883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13887, %r13879, %r13884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13890, %r837, %r8481, %r13871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13894, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13895, %r13871, %r13894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13898, %r13890, %r13895;
	// end inline asm
	// begin inline asm
	mov.b32 %r13906, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13917, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13903, %r826, %r8505, %r13906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13907, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13908, %r13906, %r13907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13911, %r13903, %r13908;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13914, %r837, %r8505, %r13917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13918, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13919, %r13917, %r13918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13922, %r13914, %r13919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13925, %r826, %r8527, %r13906, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13929, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13930, %r13906, %r13929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13933, %r13925, %r13930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13936, %r837, %r8527, %r13917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13940, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13941, %r13917, %r13940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13944, %r13936, %r13941;
	// end inline asm
	// begin inline asm
	mov.b32 %r13952, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r13963, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13949, %r826, %r8551, %r13952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13953, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13954, %r13952, %r13953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13957, %r13949, %r13954;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13960, %r837, %r8551, %r13963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13964, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13965, %r13963, %r13964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13968, %r13960, %r13965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13971, %r826, %r8573, %r13952, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13975, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13976, %r13952, %r13975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13979, %r13971, %r13976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13982, %r837, %r8573, %r13963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13986, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13987, %r13963, %r13986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13990, %r13982, %r13987;
	// end inline asm
	// begin inline asm
	mov.b32 %r13998, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r14009, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13995, %r826, %r8597, %r13998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13999, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14000, %r13998, %r13999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14003, %r13995, %r14000;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14006, %r837, %r8597, %r14009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14010, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14011, %r14009, %r14010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14014, %r14006, %r14011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14017, %r826, %r8619, %r13998, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14021, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14022, %r13998, %r14021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14025, %r14017, %r14022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14028, %r837, %r8619, %r14009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14032, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14033, %r14009, %r14032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14036, %r14028, %r14033;
	// end inline asm
	// begin inline asm
	mov.b32 %r14044, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r14055, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14041, %r826, %r8643, %r14044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14045, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14046, %r14044, %r14045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14049, %r14041, %r14046;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14052, %r837, %r8643, %r14055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14056, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14057, %r14055, %r14056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14060, %r14052, %r14057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14063, %r826, %r8665, %r14044, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14067, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14068, %r14044, %r14067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14071, %r14063, %r14068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14074, %r837, %r8665, %r14055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14078, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14079, %r14055, %r14078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14082, %r14074, %r14079;
	// end inline asm
	// begin inline asm
	mov.b32 %r14090, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r14101, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14087, %r826, %r8689, %r14090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14091, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14092, %r14090, %r14091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14095, %r14087, %r14092;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14098, %r837, %r8689, %r14101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14102, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14103, %r14101, %r14102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14106, %r14098, %r14103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14109, %r826, %r8711, %r14090, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14113, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14114, %r14090, %r14113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14117, %r14109, %r14114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14120, %r837, %r8711, %r14101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14124, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14125, %r14101, %r14124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14128, %r14120, %r14125;
	// end inline asm
	// begin inline asm
	mov.b32 %r14136, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r14147, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14133, %r826, %r8735, %r14136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14137, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14138, %r14136, %r14137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14141, %r14133, %r14138;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14144, %r837, %r8735, %r14147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14148, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14149, %r14147, %r14148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14152, %r14144, %r14149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14155, %r826, %r8757, %r14136, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14159, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14160, %r14136, %r14159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14163, %r14155, %r14160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14166, %r837, %r8757, %r14147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14170, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14171, %r14147, %r14170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14174, %r14166, %r14171;
	// end inline asm
	// begin inline asm
	mov.b32 %r14182, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r14193, {%rs2198, %rs2198};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14179, %r826, %r8781, %r14182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14183, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14184, %r14182, %r14183;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14187, %r14179, %r14184;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14190, %r837, %r8781, %r14193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14194, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14195, %r14193, %r14194;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14198, %r14190, %r14195;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14201, %r826, %r8803, %r14182, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14205, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14206, %r14182, %r14205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14209, %r14201, %r14206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14212, %r837, %r8803, %r14193, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14216, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14217, %r14193, %r14216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14220, %r14212, %r14217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r337, %r13865, %r13665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r337, %r13876, %r13671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r337, %r13887, %r13677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r337, %r13898, %r13683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r337, %r13911, %r13689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r337, %r13922, %r13695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r337, %r13933, %r13701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r337, %r13944, %r13707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r337, %r13957, %r13713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r337, %r13968, %r13719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r337, %r13979, %r13725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r337, %r13990, %r13731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r337, %r14003, %r13737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r337, %r14014, %r13743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r337, %r14025, %r13749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r337, %r14036, %r13755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r355, %r14049, %r13761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r355, %r14060, %r13767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r355, %r14071, %r13773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r355, %r14082, %r13779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r355, %r14095, %r13785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r355, %r14106, %r13791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r355, %r14117, %r13797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r355, %r14128, %r13803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r355, %r14141, %r13809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r355, %r14152, %r13815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r355, %r14163, %r13821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r355, %r14174, %r13827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r355, %r14187, %r13833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r355, %r14198, %r13839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r355, %r14209, %r13845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r355, %r14220, %r13851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14351, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14353, %r14351, %r14355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14356, %r394, %r14358, %r14353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14360, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14362, %r14360, %r14364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r394, %r14367, %r14362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14369, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14371, %r14369, %r14373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r394, %r14376, %r14371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14378, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14380, %r14378, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r394, %r14385, %r14380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14387, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14389, %r14387, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r394, %r14394, %r14389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14396, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14398, %r14396, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r394, %r14403, %r14398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14405, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14407, %r14405, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r394, %r14412, %r14407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14414, %r400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14416, %r14414, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r394, %r14421, %r14416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14423, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14425, %r14423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r397, %r14430, %r14425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14432, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14434, %r14432, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r397, %r14439, %r14434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14441, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14443, %r14441, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r397, %r14448, %r14443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14450, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14452, %r14450, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r397, %r14457, %r14452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14459, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14461, %r14459, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r397, %r14466, %r14461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14468, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r14468, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r397, %r14475, %r14470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14477, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14479, %r14477, %r14481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r397, %r14484, %r14479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14486, %r403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r14486, %r14490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r397, %r14493, %r14488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14495, %r400, %r14358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r394, %r14355, %r14495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r400, %r14367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r394, %r14364, %r14502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14509, %r400, %r14376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r394, %r14373, %r14509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14516, %r400, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r394, %r14382, %r14516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14523, %r400, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14526, %r394, %r14391, %r14523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14530, %r400, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r394, %r14400, %r14530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14537, %r400, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14540, %r394, %r14409, %r14537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14544, %r400, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14547, %r394, %r14418, %r14544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14551, %r403, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r397, %r14427, %r14551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14558, %r403, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14561, %r397, %r14436, %r14558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14565, %r403, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14568, %r397, %r14445, %r14565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14572, %r403, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14575, %r397, %r14454, %r14572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14579, %r403, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14582, %r397, %r14463, %r14579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14586, %r403, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14589, %r397, %r14472, %r14586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14593, %r403, %r14484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14596, %r397, %r14481, %r14593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14600, %r403, %r14493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14603, %r397, %r14490, %r14600;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14774, %r14771}, {%r461, %r467, %r464, %r470}, {%r14356, %r14498}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14783, %r14780}, {%r461, %r467, %r464, %r470}, {%r14365, %r14505}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14792, %r14789}, {%r461, %r467, %r464, %r470}, {%r14374, %r14512}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14801, %r14798}, {%r461, %r467, %r464, %r470}, {%r14383, %r14519}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14810, %r14807}, {%r461, %r467, %r464, %r470}, {%r14392, %r14526}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14819, %r14816}, {%r461, %r467, %r464, %r470}, {%r14401, %r14533}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14828, %r14825}, {%r461, %r467, %r464, %r470}, {%r14410, %r14540}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14837, %r14834}, {%r461, %r467, %r464, %r470}, {%r14419, %r14547}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14846, %r14843}, {%r461, %r467, %r464, %r470}, {%r14428, %r14554}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14855, %r14852}, {%r461, %r467, %r464, %r470}, {%r14437, %r14561}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14864, %r14861}, {%r461, %r467, %r464, %r470}, {%r14446, %r14568}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14873, %r14870}, {%r461, %r467, %r464, %r470}, {%r14455, %r14575}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14882, %r14879}, {%r461, %r467, %r464, %r470}, {%r14464, %r14582}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14891, %r14888}, {%r461, %r467, %r464, %r470}, {%r14473, %r14589}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14900, %r14897}, {%r461, %r467, %r464, %r470}, {%r14482, %r14596}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14909, %r14906}, {%r461, %r467, %r464, %r470}, {%r14491, %r14603}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14767, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14769, %r14767, %r14771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14772, %r511, %r14774, %r14769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14776, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14778, %r14776, %r14780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14781, %r511, %r14783, %r14778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14785, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14787, %r14785, %r14789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14790, %r511, %r14792, %r14787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14794, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14796, %r14794, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14799, %r511, %r14801, %r14796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14803, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14805, %r14803, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14808, %r511, %r14810, %r14805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14812, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14814, %r14812, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14817, %r511, %r14819, %r14814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14821, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14823, %r14821, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14826, %r511, %r14828, %r14823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14830, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14832, %r14830, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14835, %r511, %r14837, %r14832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14839, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14841, %r14839, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14844, %r511, %r14846, %r14841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14848, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14850, %r14848, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14853, %r511, %r14855, %r14850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14857, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14859, %r14857, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14862, %r511, %r14864, %r14859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14866, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14868, %r14866, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14871, %r511, %r14873, %r14868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14875, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14877, %r14875, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14880, %r511, %r14882, %r14877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14884, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r14884, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r511, %r14891, %r14886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14893, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14895, %r14893, %r14897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14898, %r511, %r14900, %r14895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14902, %r514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r14902, %r14906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r511, %r14909, %r14904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14911, %r514, %r14774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14914, %r511, %r14771, %r14911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r514, %r14783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r511, %r14780, %r14918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14925, %r514, %r14792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14928, %r511, %r14789, %r14925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14932, %r514, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14935, %r511, %r14798, %r14932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14939, %r514, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14942, %r511, %r14807, %r14939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14946, %r514, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14949, %r511, %r14816, %r14946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14953, %r514, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14956, %r511, %r14825, %r14953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14960, %r514, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14963, %r511, %r14834, %r14960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14967, %r514, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14970, %r511, %r14843, %r14967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14974, %r514, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14977, %r511, %r14852, %r14974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14981, %r514, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14984, %r511, %r14861, %r14981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14988, %r514, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14991, %r511, %r14870, %r14988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14995, %r514, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14998, %r511, %r14879, %r14995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15002, %r514, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15005, %r511, %r14888, %r15002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15009, %r514, %r14900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15012, %r511, %r14897, %r15009;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15016, %r514, %r14909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15019, %r511, %r14906, %r15016;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15312, %r15315}, {%r549, %r555, %r552, %r558}, {%r14772, %r14914}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15318, %r15321}, {%r549, %r555, %r552, %r558}, {%r14781, %r14921}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15324, %r15327}, {%r549, %r555, %r552, %r558}, {%r14790, %r14928}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15330, %r15333}, {%r549, %r555, %r552, %r558}, {%r14799, %r14935}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15336, %r15339}, {%r549, %r555, %r552, %r558}, {%r14808, %r14942}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15342, %r15345}, {%r549, %r555, %r552, %r558}, {%r14817, %r14949}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15348, %r15351}, {%r549, %r555, %r552, %r558}, {%r14826, %r14956}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15354, %r15357}, {%r549, %r555, %r552, %r558}, {%r14835, %r14963}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15313, %r15316}, {%r549, %r555, %r552, %r558}, {%r14844, %r14970}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15319, %r15322}, {%r549, %r555, %r552, %r558}, {%r14853, %r14977}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15325, %r15328}, {%r549, %r555, %r552, %r558}, {%r14862, %r14984}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15331, %r15334}, {%r549, %r555, %r552, %r558}, {%r14871, %r14991}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15337, %r15340}, {%r549, %r555, %r552, %r558}, {%r14880, %r14998}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15343, %r15346}, {%r549, %r555, %r552, %r558}, {%r14889, %r15005}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15349, %r15352}, {%r549, %r555, %r552, %r558}, {%r14898, %r15012}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15355, %r15358}, {%r549, %r555, %r552, %r558}, {%r14907, %r15019}, {%r3167, %r3167};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15332, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15335, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15338, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15341, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15344, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15347, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15350, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15353, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15356, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15380, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15383, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15386, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15389, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15392, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15395, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15398, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15401, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15404, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r124, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r124, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r124, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r124, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r124, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r124, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r124, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r124, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r124, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r124, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r124, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r124, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r124, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r124, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r124, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r124, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r125, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r125, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r125, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r125, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r125, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r125, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r125, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r125, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r125, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r125, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r125, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r125, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r125, %r15395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15494, %r125, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15497, %r125, %r15401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15500, %r125, %r15404;
	// end inline asm
	// begin inline asm
	mov.b32 %r15503, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15504, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15505, %r15407, %r15503;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15508, %r15505, %r15504;
	// end inline asm
	// begin inline asm
	mov.b32 %r15511, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15512, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15513, %r15410, %r15511;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15516, %r15513, %r15512;
	// end inline asm
	// begin inline asm
	mov.b32 %r15519, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15521, %r15413, %r15519;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15524, %r15521, %r15520;
	// end inline asm
	// begin inline asm
	mov.b32 %r15527, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15529, %r15416, %r15527;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15532, %r15529, %r15528;
	// end inline asm
	// begin inline asm
	mov.b32 %r15535, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15537, %r15419, %r15535;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15540, %r15537, %r15536;
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15545, %r15422, %r15543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15548, %r15545, %r15544;
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15553, %r15425, %r15551;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15556, %r15553, %r15552;
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15561, %r15428, %r15559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15564, %r15561, %r15560;
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15569, %r15431, %r15567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15572, %r15569, %r15568;
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15577, %r15434, %r15575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15580, %r15577, %r15576;
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15585, %r15437, %r15583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15588, %r15585, %r15584;
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15593, %r15440, %r15591;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15596, %r15593, %r15592;
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15601, %r15443, %r15599;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15604, %r15601, %r15600;
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15609, %r15446, %r15607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15612, %r15609, %r15608;
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15617, %r15449, %r15615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15620, %r15617, %r15616;
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15625, %r15452, %r15623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15628, %r15625, %r15624;
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15633, %r15455, %r15631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15636, %r15633, %r15632;
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15641, %r15458, %r15639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15644, %r15641, %r15640;
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15649, %r15461, %r15647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15652, %r15649, %r15648;
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15657, %r15464, %r15655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15660, %r15657, %r15656;
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15665, %r15467, %r15663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15668, %r15665, %r15664;
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15673, %r15470, %r15671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15676, %r15673, %r15672;
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15681, %r15473, %r15679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15684, %r15681, %r15680;
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15689, %r15476, %r15687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15692, %r15689, %r15688;
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15697, %r15479, %r15695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15700, %r15697, %r15696;
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15705, %r15482, %r15703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15708, %r15705, %r15704;
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15713, %r15485, %r15711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15716, %r15713, %r15712;
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15721, %r15488, %r15719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15724, %r15721, %r15720;
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15729, %r15491, %r15727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15732, %r15729, %r15728;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15737, %r15494, %r15735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15740, %r15737, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15745, %r15497, %r15743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15748, %r15745, %r15744;
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs431, %rs431};
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs433, %rs433};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15753, %r15500, %r15751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15756, %r15753, %r15752;
	// end inline asm
	// begin inline asm
	mov.b32 %r15762, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15761, %r15762, %r15760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15764, %r15508, %r15761;
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15768, %r15762, %r15767;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15771, %r15516, %r15768;
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15775, %r15762, %r15774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15778, %r15524, %r15775;
	// end inline asm
	// begin inline asm
	mov.b32 %r15781, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15782, %r15762, %r15781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15785, %r15532, %r15782;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15788, %r15764, %r15778, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15792, %r15771, %r15785, %r4343;
	// end inline asm
	shl.b32 	%r15799, %r15792, 4;
	// begin inline asm
	lop3.b32 %r15796, %r4349, %r15788, %r15799, 202;
	// end inline asm
	xor.b32  	%r16160, %r15796, -2004318072;
	// begin inline asm
	mov.b32 %r15803, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15803, %r15801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15540, %r15802;
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15803, %r15808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15812, %r15548, %r15809;
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15803, %r15815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15819, %r15556, %r15816;
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15803, %r15822;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15826, %r15564, %r15823;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15829, %r15805, %r15819, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15833, %r15812, %r15826, %r4343;
	// end inline asm
	shl.b32 	%r15840, %r15833, 4;
	// begin inline asm
	lop3.b32 %r15837, %r4349, %r15829, %r15840, 202;
	// end inline asm
	xor.b32  	%r16161, %r15837, -2004318072;
	// begin inline asm
	mov.b32 %r15844, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15844, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15572, %r15843;
	// end inline asm
	// begin inline asm
	mov.b32 %r15849, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15844, %r15849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15580, %r15850;
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15844, %r15856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15860, %r15588, %r15857;
	// end inline asm
	// begin inline asm
	mov.b32 %r15863, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15844, %r15863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15867, %r15596, %r15864;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15870, %r15846, %r15860, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15874, %r15853, %r15867, %r4343;
	// end inline asm
	shl.b32 	%r15881, %r15874, 4;
	// begin inline asm
	lop3.b32 %r15878, %r4349, %r15870, %r15881, 202;
	// end inline asm
	xor.b32  	%r16162, %r15878, -2004318072;
	// begin inline asm
	mov.b32 %r15885, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15885, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15604, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15885, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15612, %r15891;
	// end inline asm
	// begin inline asm
	mov.b32 %r15897, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15885, %r15897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15901, %r15620, %r15898;
	// end inline asm
	// begin inline asm
	mov.b32 %r15904, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15885, %r15904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15908, %r15628, %r15905;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15911, %r15887, %r15901, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15915, %r15894, %r15908, %r4343;
	// end inline asm
	shl.b32 	%r15922, %r15915, 4;
	// begin inline asm
	lop3.b32 %r15919, %r4349, %r15911, %r15922, 202;
	// end inline asm
	xor.b32  	%r16163, %r15919, -2004318072;
	// begin inline asm
	mov.b32 %r15926, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15926, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15636, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15926, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15644, %r15932;
	// end inline asm
	// begin inline asm
	mov.b32 %r15938, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15926, %r15938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15942, %r15652, %r15939;
	// end inline asm
	// begin inline asm
	mov.b32 %r15945, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15926, %r15945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15949, %r15660, %r15946;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15952, %r15928, %r15942, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15956, %r15935, %r15949, %r4343;
	// end inline asm
	shl.b32 	%r15963, %r15956, 4;
	// begin inline asm
	lop3.b32 %r15960, %r4349, %r15952, %r15963, 202;
	// end inline asm
	xor.b32  	%r16164, %r15960, -2004318072;
	// begin inline asm
	mov.b32 %r15967, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15967, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15668, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15967, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15676, %r15973;
	// end inline asm
	// begin inline asm
	mov.b32 %r15979, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15967, %r15979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15983, %r15684, %r15980;
	// end inline asm
	// begin inline asm
	mov.b32 %r15986, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15967, %r15986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15990, %r15692, %r15987;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15993, %r15969, %r15983, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15997, %r15976, %r15990, %r4343;
	// end inline asm
	shl.b32 	%r16004, %r15997, 4;
	// begin inline asm
	lop3.b32 %r16001, %r4349, %r15993, %r16004, 202;
	// end inline asm
	xor.b32  	%r16165, %r16001, -2004318072;
	// begin inline asm
	mov.b32 %r16008, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r16008, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15700, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r16008, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15708, %r16014;
	// end inline asm
	// begin inline asm
	mov.b32 %r16020, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r16008, %r16020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16024, %r15716, %r16021;
	// end inline asm
	// begin inline asm
	mov.b32 %r16027, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r16008, %r16027;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16031, %r15724, %r16028;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16034, %r16010, %r16024, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16038, %r16017, %r16031, %r4343;
	// end inline asm
	shl.b32 	%r16045, %r16038, 4;
	// begin inline asm
	lop3.b32 %r16042, %r4349, %r16034, %r16045, 202;
	// end inline asm
	xor.b32  	%r16166, %r16042, -2004318072;
	// begin inline asm
	mov.b32 %r16049, {%rs2406, %rs2406};
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16049, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15732, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16049, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15740, %r16055;
	// end inline asm
	// begin inline asm
	mov.b32 %r16061, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r16049, %r16061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16065, %r15748, %r16062;
	// end inline asm
	// begin inline asm
	mov.b32 %r16068, {%rs2414, %rs2414};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r16049, %r16068;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16072, %r15756, %r16069;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16075, %r16051, %r16065, %r4343;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16079, %r16058, %r16072, %r4343;
	// end inline asm
	shl.b32 	%r16086, %r16079, 4;
	// begin inline asm
	lop3.b32 %r16083, %r4349, %r16075, %r16086, 202;
	// end inline asm
	xor.b32  	%r16167, %r16083, -2004318072;
	st.shared.u32 	[%rd98], %r16160;
	st.shared.u32 	[%rd100], %r16161;
	st.shared.u32 	[%rd102], %r16162;
	st.shared.u32 	[%rd104], %r16163;
	st.shared.u32 	[%rd106], %r16164;
	st.shared.u32 	[%rd108], %r16165;
	st.shared.u32 	[%rd110], %r16166;
	st.shared.u32 	[%rd112], %r16167;
	add.s32 	%r16292, %r16292, 128;
	setp.ne.s32 	%p308, %r16292, 256;
	@%p308 bra 	$L__BB0_159;
// %bb.160:                             // %guard_exit29693
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16173, [%rd4];
	ld.shared.u32 	%r16174, [%rd5+128];
	ld.shared.u32 	%r16181, [%rd5+4];
	ld.shared.u32 	%r16182, [%rd5+132];
	ld.shared.u32 	%r16189, [%rd6];
	ld.shared.u32 	%r16190, [%rd7+128];
	ld.shared.u32 	%r16197, [%rd7+4];
	ld.shared.u32 	%r16198, [%rd7+132];
	ld.shared.u32 	%r16205, [%rd4+16644];
	ld.shared.u32 	%r16206, [%rd5+16772];
	ld.shared.u32 	%r16213, [%rd5+16648];
	ld.shared.u32 	%r16214, [%rd5+16776];
	ld.shared.u32 	%r16221, [%rd6+16644];
	ld.shared.u32 	%r16222, [%rd22];
	ld.shared.u32 	%r16229, [%rd7+16648];
	ld.shared.u32 	%r16230, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16168, %r16173, %r16174, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16172, %r16173, %r16174, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16176, %r16181, %r16182, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16180, %r16181, %r16182, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16184, %r16189, %r16190, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16188, %r16189, %r16190, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16192, %r16197, %r16198, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16196, %r16197, %r16198, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16200, %r16205, %r16206, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16204, %r16205, %r16206, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16208, %r16213, %r16214, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16212, %r16213, %r16214, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16216, %r16221, %r16222, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16220, %r16221, %r16222, %r16175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16224, %r16229, %r16230, %r16171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16228, %r16229, %r16230, %r16175;
	// end inline asm
	selp.b32 	%r16233, %r16172, %r16168, %p294;
	shfl.sync.bfly.b32	%r16234, %r16233, 8, 31, -1;
	selp.b32 	%r16235, %r16180, %r16176, %p294;
	shfl.sync.bfly.b32	%r16236, %r16235, 8, 31, -1;
	selp.b32 	%r16237, %r16188, %r16184, %p294;
	shfl.sync.bfly.b32	%r16238, %r16237, 8, 31, -1;
	selp.b32 	%r16239, %r16196, %r16192, %p294;
	shfl.sync.bfly.b32	%r16240, %r16239, 8, 31, -1;
	selp.b32 	%r16241, %r16204, %r16200, %p294;
	shfl.sync.bfly.b32	%r16242, %r16241, 8, 31, -1;
	selp.b32 	%r16243, %r16212, %r16208, %p294;
	shfl.sync.bfly.b32	%r16244, %r16243, 8, 31, -1;
	selp.b32 	%r16245, %r16220, %r16216, %p294;
	shfl.sync.bfly.b32	%r16246, %r16245, 8, 31, -1;
	selp.b32 	%r16247, %r16228, %r16224, %p294;
	shfl.sync.bfly.b32	%r16248, %r16247, 8, 31, -1;
	mov.u32 	%r16283, 256;
	bra.uni 	$L__BB0_116;
$L__BB0_117:                            // %L70688
	mov.u32 	%r679, 0;
	st.global.u32 	[%rd3], %r679;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r16250, 2;
	st.global.u32 	[%rd3], %r16250;
	mov.u64 	%rd115, exception5817;
	cvta.global.u64 	%rd116, %rd115;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd116;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16249, 3;
	st.global.u32 	[%rd3], %r16249;
	mov.u64 	%rd113, exception5817;
	cvta.global.u64 	%rd114, %rd113;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd114;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd28, exception15841;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r219;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
