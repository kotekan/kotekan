// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5817[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception15841[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<310>;
	.reg .b16 	%rs<2414>;
	.reg .b32 	%r<16355>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<115>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r220, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r227, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r227, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r221, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r228, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r229, %r3, %r4;
	or.b32  	%r230, %r229, %r228;
	mul.wide.u32 	%rd29, %r230, 4;
	add.s64 	%rd3, %rd23, %rd29;
	mov.u32 	%r231, 1;
	st.global.u32 	[%rd3], %r231;
	setp.gt.u32 	%p2, %r221, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r222, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r222, %r221;
	setp.gt.s32 	%p4, %r222, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r223, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r232, %r222, %r221;
	and.b32  	%r233, %r232, 255;
	setp.ne.s32 	%p6, %r233, 0;
	setp.gt.u32 	%p7, %r223, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r224, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r224, %r223;
	setp.gt.s32 	%p10, %r224, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r234, %r224, %r223;
	and.b32  	%r235, %r234, 1;
	setp.eq.b32 	%p12, %r235, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r225, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r225, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r226, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r225, %r226;
	setp.lt.s32 	%p17, %r226, 49;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass180
	bfe.u32 	%r128, %r4, 1, 1;
	and.b32  	%r129, %r4, 1;
	bfe.u32 	%r131, %r4, 2, 1;
	shr.u32 	%r132, %r4, 4;
	shl.b32 	%r245, %r132, 2;
	shl.b32 	%r246, %r131, 3;
	shl.b32 	%r247, %r129, 4;
	shl.b32 	%r248, %r128, 5;
	or.b32  	%r249, %r247, %r248;
	or.b32  	%r250, %r246, %r249;
	or.b32  	%r251, %r245, %r250;
	bfe.u32 	%r134, %r4, 3, 1;
	shl.b32 	%r252, %r134, 1;
	or.b32  	%r135, %r252, %r251;
	or.b32  	%r136, %r135, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f140, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r135;
	sub.f32 	%f224, %f223, %f140;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f142, %f224, %f253;
	setp.ne.f32 	%p24, %f142, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L767
	sin.approx.f32 	%f254, %f142;
	div.approx.f32 	%f1262, %f254, %f142;
$L__BB0_13:                             // %L770
	cvt.rn.f32.s32 	%f257, %r136;
	sub.f32 	%f258, %f257, %f140;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p30, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p30 bra 	$L__BB0_15;
// %bb.14:                              // %L787
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_15:                             // %L790
	or.b32  	%r270, %r135, 1;
	or.b32  	%r6, %r135, 65;
	cvt.rn.f32.s32 	%f292, %r270;
	sub.f32 	%f293, %f292, %f140;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p36, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p36 bra 	$L__BB0_17;
// %bb.16:                              // %L869
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_17:                             // %L872
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f140;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p42, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p42 bra 	$L__BB0_19;
// %bb.18:                              // %L889
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_19:                             // %L892
	or.b32  	%r288, %r135, 128;
	or.b32  	%r8, %r135, 192;
	cvt.rn.f32.s32 	%f361, %r288;
	sub.f32 	%f362, %f361, %f140;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p48, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p48 bra 	$L__BB0_21;
// %bb.20:                              // %L971
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_21:                             // %L974
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f140;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p54, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p54 bra 	$L__BB0_23;
// %bb.22:                              // %L991
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_23:                             // %L994
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r306, %r135, 129;
	or.b32  	%r10, %r135, 193;
	cvt.rn.f32.s32 	%f430, %r306;
	sub.f32 	%f431, %f430, %f140;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p60, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p60 bra 	$L__BB0_25;
// %bb.24:                              // %L1073
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_25:                             // %L1076
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f140;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p66, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p66 bra 	$L__BB0_27;
// %bb.26:                              // %L1093
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_27:                             // %L1096
	shr.u32 	%r236, %r1, 3;
	setp.gt.f32 	%p19, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p25, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p31, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p37, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p43, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p49, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p55, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p61, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	or.b32  	%r324, %r135, 256;
	or.b32  	%r12, %r135, 320;
	cvt.rn.f32.s32 	%f499, %r324;
	sub.f32 	%f500, %f499, %f140;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p67, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p72, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p72 bra 	$L__BB0_29;
// %bb.28:                              // %L1175
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_29:                             // %L1178
	cvt.u16.u32 	%rs1, %r236;
	selp.f32 	%f229, %f228, %f226, %p19;
	selp.f32 	%f263, %f262, %f260, %p25;
	selp.f32 	%f298, %f297, %f295, %p31;
	selp.f32 	%f332, %f331, %f329, %p37;
	selp.f32 	%f367, %f366, %f364, %p43;
	selp.f32 	%f401, %f400, %f398, %p49;
	selp.f32 	%f436, %f435, %f433, %p55;
	selp.f32 	%f470, %f469, %f467, %p61;
	selp.f32 	%f505, %f504, %f502, %p67;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f140;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p73, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p73;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p78, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p78 bra 	$L__BB0_31;
// %bb.30:                              // %L1195
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_31:                             // %L1198
	and.b16  	%rs2, %rs1, 255;
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	or.b32  	%r342, %r135, 257;
	or.b32  	%r14, %r135, 321;
	cvt.rn.f32.s32 	%f568, %r342;
	sub.f32 	%f569, %f568, %f140;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p79, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p79;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p84, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p84 bra 	$L__BB0_33;
// %bb.32:                              // %L1277
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_33:                             // %L1280
	mul.lo.s16 	%rs3, %rs2, 171;
	mov.b32 	%r253, %f230;
	mov.b32 	%r260, %f264;
	mov.b32 	%r271, %f299;
	mov.b32 	%r278, %f333;
	mov.b32 	%r289, %f368;
	mov.b32 	%r296, %f402;
	mov.b32 	%r307, %f437;
	mov.b32 	%r314, %f471;
	mov.b32 	%r325, %f506;
	mov.b32 	%r332, %f540;
	mov.b32 	%r343, %f575;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f140;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p85, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p85;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r350, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p90, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p90 bra 	$L__BB0_35;
// %bb.34:                              // %L1297
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_35:                             // %L1300
	shr.u16 	%rs4, %rs3, 13;
	and.b32  	%r254, %r253, -2147483648;
	and.b32  	%r261, %r260, -2147483648;
	and.b32  	%r272, %r271, -2147483648;
	and.b32  	%r279, %r278, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	and.b32  	%r297, %r296, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r315, %r314, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	and.b32  	%r333, %r332, -2147483648;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r351, %r350, -2147483648;
	or.b32  	%r360, %r135, 384;
	or.b32  	%r16, %r135, 448;
	cvt.rn.f32.s32 	%f637, %r360;
	sub.f32 	%f638, %f637, %f140;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p91, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p91;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r361, %f644;
	and.b32  	%r362, %r361, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p96, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p96 bra 	$L__BB0_37;
// %bb.36:                              // %L1379
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_37:                             // %L1382
	mul.lo.s16 	%rs5, %rs4, 48;
	or.b32  	%r255, %r254, 1056964608;
	or.b32  	%r262, %r261, 1056964608;
	or.b32  	%r273, %r272, 1056964608;
	or.b32  	%r280, %r279, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	or.b32  	%r298, %r297, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r316, %r315, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	or.b32  	%r334, %r333, 1056964608;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r352, %r351, 1056964608;
	or.b32  	%r363, %r362, 1056964608;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f140;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p97, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p97;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r368, %f678;
	and.b32  	%r369, %r368, -2147483648;
	or.b32  	%r370, %r369, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p102, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p102 bra 	$L__BB0_39;
// %bb.38:                              // %L1399
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_39:                             // %L1402
	sub.s16 	%rs6, %rs1, %rs5;
	mov.b32 	%f231, %r255;
	mov.b32 	%f265, %r262;
	mov.b32 	%f300, %r273;
	mov.b32 	%f334, %r280;
	mov.b32 	%f369, %r291;
	mov.b32 	%f403, %r298;
	mov.b32 	%f438, %r309;
	mov.b32 	%f472, %r316;
	mov.b32 	%f507, %r327;
	mov.b32 	%f541, %r334;
	mov.b32 	%f576, %r345;
	mov.b32 	%f610, %r352;
	mov.b32 	%f645, %r363;
	mov.b32 	%f679, %r370;
	or.b32  	%r378, %r135, 385;
	or.b32  	%r18, %r135, 449;
	cvt.rn.f32.s32 	%f706, %r378;
	sub.f32 	%f707, %f706, %f140;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p103, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p103;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r379, %f713;
	and.b32  	%r380, %r379, -2147483648;
	or.b32  	%r381, %r380, 1056964608;
	mov.b32 	%f714, %r381;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p108, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p108 bra 	$L__BB0_41;
// %bb.40:                              // %L1481
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_41:                             // %L1484
	shl.b32 	%r118, %r4, 2;
	and.b16  	%rs7, %rs6, 255;
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	shr.u32 	%r127, %r4, 1;
	shr.u32 	%r133, %r4, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f140;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p109, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p109;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r386, %f747;
	and.b32  	%r387, %r386, -2147483648;
	or.b32  	%r388, %r387, 1056964608;
	mov.b32 	%f748, %r388;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p114, %f68, 0f00000000;
	@%p114 bra 	$L__BB0_43;
// %bb.42:                              // %L1501
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_43:                             // %L1504
	and.b32  	%r119, %r118, 32;
	mul.wide.u16 	%r120, %rs7, 128;
	shl.b32 	%r121, %r4, 1;
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p20, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p26, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p32, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p38, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p44, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p50, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p56, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p62, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p68, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p74, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p80, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p86, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p92, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p98, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p104, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p110, %f751, 0f4B000000;
	mul.lo.s32 	%r408, %r135, 127;
	and.b32  	%r409, %r408, 255;
	cvt.rn.f32.s32 	%f774, %r409;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r410, %f777;
	and.b32  	%r411, %r410, -2147483648;
	or.b32  	%r412, %r411, 1056964608;
	mov.b32 	%f778, %r412;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p115, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p115;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p116, %f781, 0f3F000000;
	add.s32 	%r418, %r408, 192;
	and.b32  	%r419, %r418, 255;
	cvt.rn.f32.s32 	%f809, %r419;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r420, %f811;
	and.b32  	%r421, %r420, -2147483648;
	or.b32  	%r422, %r421, 1056964608;
	mov.b32 	%f812, %r422;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p122, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p122;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p123, %f815, 0f3F000000;
	and.b32  	%r428, %r133, 2;
	and.b32  	%r429, %r127, 4;
	or.b32  	%r430, %r131, %r428;
	or.b32  	%r24, %r430, %r429;
	and.b32  	%r431, %r4, 3;
	mul.lo.s32 	%r432, %r431, %r24;
	shl.b32 	%r433, %r432, 1;
	neg.s32 	%r434, %r433;
	cvt.rn.f32.s32 	%f842, %r434;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1296, %f71;
	setp.lt.f32 	%p129, %f1296, 0f40000000;
	@%p129 bra 	$L__BB0_125;
// %bb.44:
	setp.gtu.f32 	%p130, %f1296, 0f4B800000;
	@%p130 bra 	$L__BB0_121;
	bra.uni 	$L__BB0_45;
$L__BB0_121:
	mov.b32 	%r138, %f1296;
	and.b32  	%r435, %r138, 8388607;
	or.b32  	%r16322, %r435, 1065353216;
	mov.b32 	%f1295, %r16322;
	add.s32 	%r436, %r138, -1073741824;
	and.b32  	%r16323, %r436, -8388608;
	setp.eq.s32 	%p136, %r16323, 0;
	@%p136 bra 	$L__BB0_124;
// %bb.122:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_123:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r437, %r16323, 192937984;
	add.s32 	%r438, %r16322, %r437;
	mov.b32 	%f854, %r438;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1295, %f854, %f860;
	sub.s32 	%r16323, %r16323, %r437;
	mov.b32 	%r16322, %f1295;
	setp.ne.s32 	%p137, %r16323, 0;
	setp.ne.s32 	%p138, %r16322, 0;
	and.pred  	%p139, %p137, %p138;
	@%p139 bra 	$L__BB0_123;
$L__BB0_124:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p140, %r138, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p140;
	mul.f32 	%f862, %f1295, 0f34000000;
	mul.f32 	%f1296, %f861, %f862;
	bra.uni 	$L__BB0_125;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f845, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f845;
	fma.rn.f32 	%f144, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r137, %f144;
	setp.lt.u32 	%p131, %r137, 1073741824;
	@%p131 bra 	$L__BB0_120;
// %bb.46:
	setp.lt.u32 	%p132, %r137, -2147483647;
	@%p132 bra 	$L__BB0_118;
// %bb.47:
	add.f32 	%f850, %f1294, 0fBF800000;
	setp.lt.f32 	%p135, %f144, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1294, %f851, %f850, %p135;
	bra.uni 	$L__BB0_120;
$L__BB0_118:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p133, %f144, 0f40800000;
	@%p133 bra 	$L__BB0_120;
// %bb.119:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f846, %f1294, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f144;
	setp.ge.f32 	%p134, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1294, %f849, %f846, %p134;
$L__BB0_120:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_125:                            // %__internal_fmodf_kernel.exit.i1717
	or.b32  	%r237, %r120, %r119;
	and.b32  	%r122, %r121, 8;
	selp.f32 	%f235, %f230, %f233, %p20;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p21, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p26;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p27, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p32;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p33, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p38;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p39, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p44;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p45, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p50;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p51, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p56;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p57, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p62;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p63, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p68;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p69, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p74;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p75, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p80;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p81, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p86;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p87, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p92;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p93, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p98;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p99, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p104;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p105, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p110;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p111, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p116;
	selp.f32 	%f818, %f817, %f816, %p123;
	abs.f32 	%f863, %f1296;
	setp.gtu.f32 	%p141, %f863, 0f7F800000;
	@%p141 bra 	$L__BB0_127;
// %bb.126:
	mov.b32 	%r439, %f71;
	and.b32  	%r440, %r439, -2147483648;
	mov.b32 	%r441, %f1296;
	or.b32  	%r442, %r440, %r441;
	mov.b32 	%f1296, %r442;
$L__BB0_127:                            // %__nv_fmodf.exit1718
	or.b32  	%r238, %r237, %r122;
	and.b32  	%r123, %r4, 16;
	selp.f32 	%f237, %f236, %f235, %p21;
	selp.f32 	%f271, %f270, %f269, %p27;
	selp.f32 	%f306, %f305, %f304, %p33;
	selp.f32 	%f340, %f339, %f338, %p39;
	selp.f32 	%f375, %f374, %f373, %p45;
	selp.f32 	%f409, %f408, %f407, %p51;
	selp.f32 	%f444, %f443, %f442, %p57;
	selp.f32 	%f478, %f477, %f476, %p63;
	selp.f32 	%f513, %f512, %f511, %p69;
	selp.f32 	%f547, %f546, %f545, %p75;
	selp.f32 	%f582, %f581, %f580, %p81;
	selp.f32 	%f616, %f615, %f614, %p87;
	selp.f32 	%f651, %f650, %f649, %p93;
	selp.f32 	%f685, %f684, %f683, %p99;
	selp.f32 	%f720, %f719, %f718, %p105;
	selp.f32 	%f754, %f753, %f752, %p111;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	add.f32 	%f864, %f1296, %f1296;
	mov.b32 	%r443, %f864;
	and.b32  	%r444, %r443, -2147483648;
	or.b32  	%r445, %r444, 1056964608;
	mov.b32 	%f865, %r445;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p142, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p142;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p143, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p143;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1296;
	and.b32  	%r451, %r121, 6;
	mov.u32 	%r452, -8;
	sub.s32 	%r453, %r452, %r451;
	mul.lo.s32 	%r454, %r24, %r453;
	cvt.rn.f32.s32 	%f894, %r454;
	div.approx.f32 	%f160, %f894, %f843;
	abs.f32 	%f1280, %f160;
	setp.lt.f32 	%p149, %f1280, 0f40000000;
	@%p149 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p150, %f1280, 0f4B800000;
	@%p150 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r26, %f1280;
	and.b32  	%r455, %r26, 8388607;
	or.b32  	%r16289, %r455, 1065353216;
	mov.b32 	%f1279, %r16289;
	add.s32 	%r456, %r26, -1073741824;
	and.b32  	%r16290, %r456, -8388608;
	setp.eq.s32 	%p156, %r16290, 0;
	@%p156 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r457, %r16290, 192937984;
	add.s32 	%r458, %r16289, %r457;
	mov.b32 	%f906, %r458;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16290, %r16290, %r457;
	mov.b32 	%r16289, %f1279;
	setp.ne.s32 	%p157, %r16290, 0;
	setp.ne.s32 	%p158, %r16289, 0;
	and.pred  	%p159, %p157, %p158;
	@%p159 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p160, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p160;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p151, %r25, 1073741824;
	@%p151 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p152, %r25, -2147483647;
	@%p152 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p155, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p155;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p153, %f74, 0f40800000;
	@%p153 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p154, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p154;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r239, %r238, %r123;
	and.b32  	%r124, %r118, 4;
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p161, %f915, 0f7F800000;
	@%p161 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r459, %f160;
	and.b32  	%r460, %r459, -2147483648;
	mov.b32 	%r461, %f1280;
	or.b32  	%r462, %r460, %r461;
	mov.b32 	%f1280, %r462;
$L__BB0_61:                             // %__nv_fmodf.exit
	or.b32  	%r240, %r239, %r124;
	and.b32  	%r241, %r4, 2;
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r475, %f916;
	and.b32  	%r476, %r475, -2147483648;
	or.b32  	%r477, %r476, 1056964608;
	mov.b32 	%f917, %r477;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p162, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p162;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p163, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p163;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r483, %r129, 2147483646;
	shl.b32 	%r484, %r128, 2;
	sub.s32 	%r485, %r483, %r484;
	mul.lo.s32 	%r486, %r485, %r24;
	shl.b32 	%r37, %r486, 1;
	cvt.rn.f32.s32 	%f88, %r37;
	mov.f32 	%f948, 0f42800000;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1300, %f89;
	setp.lt.f32 	%p169, %f1300, 0f40000000;
	@%p169 bra 	$L__BB0_135;
// %bb.62:
	setp.gtu.f32 	%p170, %f1300, 0f4B800000;
	@%p170 bra 	$L__BB0_131;
	bra.uni 	$L__BB0_63;
$L__BB0_131:
	mov.b32 	%r146, %f1300;
	and.b32  	%r487, %r146, 8388607;
	or.b32  	%r16324, %r487, 1065353216;
	mov.b32 	%f1299, %r16324;
	add.s32 	%r488, %r146, -1073741824;
	and.b32  	%r16325, %r488, -8388608;
	setp.eq.s32 	%p176, %r16325, 0;
	@%p176 bra 	$L__BB0_134;
// %bb.132:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_133:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r489, %r16325, 192937984;
	add.s32 	%r490, %r16324, %r489;
	mov.b32 	%f959, %r490;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1299, %f959, %f965;
	sub.s32 	%r16325, %r16325, %r489;
	mov.b32 	%r16324, %f1299;
	setp.ne.s32 	%p177, %r16325, 0;
	setp.ne.s32 	%p178, %r16324, 0;
	and.pred  	%p179, %p177, %p178;
	@%p179 bra 	$L__BB0_133;
$L__BB0_134:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p180, %r146, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p180;
	mul.f32 	%f967, %f1299, 0f34000000;
	mul.f32 	%f1300, %f966, %f967;
	bra.uni 	$L__BB0_135;
$L__BB0_63:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f950, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f950;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r145, %f163;
	setp.lt.u32 	%p171, %r145, 1073741824;
	@%p171 bra 	$L__BB0_130;
// %bb.64:
	setp.lt.u32 	%p172, %r145, -2147483647;
	@%p172 bra 	$L__BB0_128;
// %bb.65:
	add.f32 	%f955, %f1298, 0fBF800000;
	setp.lt.f32 	%p175, %f163, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1298, %f956, %f955, %p175;
	bra.uni 	$L__BB0_130;
$L__BB0_128:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p173, %f163, 0f40800000;
	@%p173 bra 	$L__BB0_130;
// %bb.129:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f951, %f1298, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p174, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1298, %f954, %f951, %p174;
$L__BB0_130:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_135:                            // %__internal_fmodf_kernel.exit.i1748
	or.b32  	%r242, %r240, %r241;
	cvt.rzi.s32.f32 	%r256, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r263, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r274, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r281, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r292, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r299, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r317, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r328, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r335, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r346, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r353, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r364, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r371, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r382, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r389, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r413, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r423, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r446, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r478, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1300;
	setp.gtu.f32 	%p181, %f968, 0f7F800000;
	@%p181 bra 	$L__BB0_137;
// %bb.136:
	mov.b32 	%r491, %f89;
	and.b32  	%r492, %r491, -2147483648;
	mov.b32 	%r493, %f1300;
	or.b32  	%r494, %r492, %r493;
	mov.b32 	%f1300, %r494;
$L__BB0_137:                            // %__nv_fmodf.exit1749
	cvt.u16.u32 	%rs8, %r242;
	add.s32 	%r257, %r256, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r264, %r263, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r275, %r274, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r282, %r281, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r293, %r292, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r300, %r299, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r311, %r310, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r318, %r317, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r329, %r328, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r336, %r335, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r347, %r346, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r354, %r353, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r372, %r371, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r383, %r382, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r390, %r389, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r414, %r413, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r424, %r423, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r447, %r446, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r479, %r478, 1;
	add.f32 	%f969, %f1300, %f1300;
	mov.b32 	%r495, %f969;
	and.b32  	%r496, %r495, -2147483648;
	or.b32  	%r497, %r496, 1056964608;
	mov.b32 	%f970, %r497;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p182, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p182;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p183, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p183;
	cvt.rzi.s32.f32 	%r498, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1300;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r503, %r24, 4;
	sub.s32 	%r504, %r37, %r503;
	cvt.rn.f32.s32 	%f179, %r504;
	div.approx.f32 	%f180, %f179, %f948;
	abs.f32 	%f1284, %f180;
	setp.lt.f32 	%p189, %f1284, 0f40000000;
	@%p189 bra 	$L__BB0_77;
// %bb.66:
	setp.gtu.f32 	%p190, %f1284, 0f4B800000;
	@%p190 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_67;
$L__BB0_73:
	mov.b32 	%r39, %f1284;
	and.b32  	%r505, %r39, 8388607;
	or.b32  	%r16291, %r505, 1065353216;
	mov.b32 	%f1283, %r16291;
	add.s32 	%r506, %r39, -1073741824;
	and.b32  	%r16292, %r506, -8388608;
	setp.eq.s32 	%p196, %r16292, 0;
	@%p196 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r507, %r16292, 192937984;
	add.s32 	%r508, %r16291, %r507;
	mov.b32 	%f1010, %r508;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16292, %r16292, %r507;
	mov.b32 	%r16291, %f1283;
	setp.ne.s32 	%p197, %r16292, 0;
	setp.ne.s32 	%p198, %r16291, 0;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p200, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p200;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_77;
$L__BB0_67:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p191, %r38, 1073741824;
	@%p191 bra 	$L__BB0_72;
// %bb.68:
	setp.lt.u32 	%p192, %r38, -2147483647;
	@%p192 bra 	$L__BB0_70;
// %bb.69:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p195, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p195;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p193, %f92, 0f40800000;
	@%p193 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p194, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p194;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i1624
	shr.u16 	%rs9, %rs8, 1;
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r258, %r257, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r265, %r264, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r276, %r275, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r283, %r282, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r301, %r300, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r319, %r318, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r330, %r329, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r355, %r354, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r373, %r372, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r391, %r390, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p117, %r414, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p124, %r424, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p144, %r447, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p164, %r479, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r499, %r498, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p201, %f1019, 0f7F800000;
	@%p201 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r509, %f180;
	and.b32  	%r510, %r509, -2147483648;
	mov.b32 	%r511, %f1284;
	or.b32  	%r512, %r510, %r511;
	mov.b32 	%f1284, %r512;
$L__BB0_79:                             // %__nv_fmodf.exit1625
	or.b16  	%rs14, %rs9, 32;
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p22, %r258, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p28, %r265, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p34, %r276, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p40, %r283, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p46, %r294, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p52, %r301, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p58, %r312, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p64, %r319, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p70, %r330, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p76, %r337, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p82, %r348, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p88, %r355, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p94, %r366, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p100, %r373, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p106, %r384, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p112, %r391, 1;
	selp.f32 	%f796, %f794, %f795, %p117;
	and.b32  	%r415, %r413, 2;
	selp.f32 	%f830, %f828, %f829, %p124;
	and.b32  	%r425, %r423, 2;
	selp.f32 	%f883, %f881, %f882, %p144;
	and.b32  	%r448, %r446, 2;
	selp.f32 	%f935, %f933, %f934, %p164;
	and.b32  	%r480, %r478, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p184, %r499, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r519, %f1020;
	and.b32  	%r520, %r519, -2147483648;
	or.b32  	%r521, %r520, 1056964608;
	mov.b32 	%f1021, %r521;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p202, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p202;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p203, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p203;
	cvt.rzi.s32.f32 	%r522, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r523, %r522, 1;
	setp.eq.b32 	%p204, %r523, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1304, %f106;
	setp.lt.f32 	%p209, %f1304, 0f40000000;
	@%p209 bra 	$L__BB0_145;
// %bb.80:
	setp.gtu.f32 	%p210, %f1304, 0f4B800000;
	@%p210 bra 	$L__BB0_141;
	bra.uni 	$L__BB0_81;
$L__BB0_141:
	mov.b32 	%r154, %f1304;
	and.b32  	%r527, %r154, 8388607;
	or.b32  	%r16326, %r527, 1065353216;
	mov.b32 	%f1303, %r16326;
	add.s32 	%r528, %r154, -1073741824;
	and.b32  	%r16327, %r528, -8388608;
	setp.eq.s32 	%p216, %r16327, 0;
	@%p216 bra 	$L__BB0_144;
// %bb.142:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_143:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r529, %r16327, 192937984;
	add.s32 	%r530, %r16326, %r529;
	mov.b32 	%f1063, %r530;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1303, %f1063, %f1069;
	sub.s32 	%r16327, %r16327, %r529;
	mov.b32 	%r16326, %f1303;
	setp.ne.s32 	%p217, %r16327, 0;
	setp.ne.s32 	%p218, %r16326, 0;
	and.pred  	%p219, %p217, %p218;
	@%p219 bra 	$L__BB0_143;
$L__BB0_144:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p220, %r154, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p220;
	mul.f32 	%f1071, %f1303, 0f34000000;
	mul.f32 	%f1304, %f1070, %f1071;
	bra.uni 	$L__BB0_145;
$L__BB0_81:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f1054, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f1054;
	fma.rn.f32 	%f183, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r153, %f183;
	setp.lt.u32 	%p211, %r153, 1073741824;
	@%p211 bra 	$L__BB0_140;
// %bb.82:
	setp.lt.u32 	%p212, %r153, -2147483647;
	@%p212 bra 	$L__BB0_138;
// %bb.83:
	add.f32 	%f1059, %f1302, 0fBF800000;
	setp.lt.f32 	%p215, %f183, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1302, %f1060, %f1059, %p215;
	bra.uni 	$L__BB0_140;
$L__BB0_138:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p213, %f183, 0f40800000;
	@%p213 bra 	$L__BB0_140;
// %bb.139:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f1055, %f1302, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f183;
	setp.ge.f32 	%p214, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1302, %f1058, %f1055, %p214;
$L__BB0_140:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_145:                            // %__internal_fmodf_kernel.exit.i1779
	mul.hi.u16 	%rs10, %rs9, -21845;
	mul.hi.u16 	%rs15, %rs14, -21845;
	selp.f32 	%f249, %f247, %f248, %p22;
	and.b32  	%r259, %r257, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p28;
	and.b32  	%r266, %r264, 2;
	selp.f32 	%f318, %f316, %f317, %p34;
	and.b32  	%r277, %r275, 2;
	selp.f32 	%f352, %f350, %f351, %p40;
	and.b32  	%r284, %r282, 2;
	selp.f32 	%f387, %f385, %f386, %p46;
	and.b32  	%r295, %r293, 2;
	selp.f32 	%f421, %f419, %f420, %p52;
	and.b32  	%r302, %r300, 2;
	selp.f32 	%f456, %f454, %f455, %p58;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f490, %f488, %f489, %p64;
	and.b32  	%r320, %r318, 2;
	selp.f32 	%f525, %f523, %f524, %p70;
	and.b32  	%r331, %r329, 2;
	selp.f32 	%f559, %f557, %f558, %p76;
	and.b32  	%r338, %r336, 2;
	selp.f32 	%f594, %f592, %f593, %p82;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f628, %f626, %f627, %p88;
	and.b32  	%r356, %r354, 2;
	selp.f32 	%f663, %f661, %f662, %p94;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f697, %f695, %f696, %p100;
	and.b32  	%r374, %r372, 2;
	selp.f32 	%f732, %f730, %f731, %p106;
	and.b32  	%r385, %r383, 2;
	selp.f32 	%f766, %f764, %f765, %p112;
	and.b32  	%r392, %r390, 2;
	setp.eq.s32 	%p118, %r415, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r416, %r413, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p125, %r425, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r426, %r423, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p145, %r448, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r449, %r446, 1;
	cvt.rzi.f32.f32 	%f890, %f1296;
	setp.eq.s32 	%p165, %r480, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r481, %r478, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p184;
	and.b32  	%r500, %r498, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p204;
	and.b32  	%r524, %r522, 2;
	abs.f32 	%f1072, %f1304;
	setp.gtu.f32 	%p221, %f1072, 0f7F800000;
	@%p221 bra 	$L__BB0_147;
// %bb.146:
	mov.b32 	%r531, %f106;
	and.b32  	%r532, %r531, -2147483648;
	mov.b32 	%r533, %f1304;
	or.b32  	%r534, %r532, %r533;
	mov.b32 	%f1304, %r534;
$L__BB0_147:                            // %__nv_fmodf.exit1780
	shr.u16 	%rs11, %rs10, 11;
	shr.u16 	%rs16, %rs15, 11;
	setp.eq.s32 	%p23, %r259, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p29, %r266, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p35, %r277, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p41, %r284, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p47, %r295, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p53, %r302, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p59, %r313, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p65, %r320, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p71, %r331, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p77, %r338, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p83, %r349, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p89, %r356, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p95, %r367, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p101, %r374, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p107, %r385, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p113, %r392, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p117;
	selp.f32 	%f799, %f796, %f798, %p118;
	and.b32  	%r417, %r416, 2;
	setp.eq.f32 	%p120, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p124;
	selp.f32 	%f833, %f830, %f832, %p125;
	and.b32  	%r427, %r426, 2;
	setp.eq.f32 	%p127, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p144;
	selp.f32 	%f886, %f883, %f885, %p145;
	and.b32  	%r450, %r449, 2;
	setp.eq.f32 	%p147, %f890, %f1296;
	mul.f32 	%f891, %f1296, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p164;
	selp.f32 	%f938, %f935, %f937, %p165;
	and.b32  	%r482, %r481, 2;
	setp.eq.f32 	%p167, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p185, %r500, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r501, %r498, 1;
	cvt.rzi.f32.f32 	%f995, %f1300;
	setp.eq.s32 	%p205, %r524, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r525, %r522, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1304, %f1304;
	mov.b32 	%r535, %f1073;
	and.b32  	%r536, %r535, -2147483648;
	or.b32  	%r537, %r536, 1056964608;
	mov.b32 	%f1074, %r537;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p222, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p222;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p223, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p223;
	cvt.rzi.s32.f32 	%r538, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1304;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r539, %r538, 1;
	setp.eq.b32 	%p224, %r539, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p224;
	selp.f32 	%f1093, %f1091, %f1090, %p224;
	and.b32  	%r540, %r538, 2;
	setp.eq.s32 	%p225, %r540, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p225;
	add.s32 	%r541, %r538, 1;
	and.b32  	%r542, %r541, 2;
	cvt.rzi.f32.f32 	%f1099, %f1304;
	setp.eq.f32 	%p227, %f1099, %f1304;
	mul.f32 	%f1100, %f1304, 0f00000000;
	div.approx.f32 	%f199, %f179, %f843;
	abs.f32 	%f1288, %f199;
	setp.lt.f32 	%p229, %f1288, 0f40000000;
	@%p229 bra 	$L__BB0_95;
// %bb.84:
	setp.gtu.f32 	%p230, %f1288, 0f4B800000;
	@%p230 bra 	$L__BB0_91;
	bra.uni 	$L__BB0_85;
$L__BB0_91:
	mov.b32 	%r49, %f1288;
	and.b32  	%r543, %r49, 8388607;
	or.b32  	%r16293, %r543, 1065353216;
	mov.b32 	%f1287, %r16293;
	add.s32 	%r544, %r49, -1073741824;
	and.b32  	%r16294, %r544, -8388608;
	setp.eq.s32 	%p236, %r16294, 0;
	@%p236 bra 	$L__BB0_94;
// %bb.92:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_93:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r545, %r16294, 192937984;
	add.s32 	%r546, %r16293, %r545;
	mov.b32 	%f1114, %r546;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16294, %r16294, %r545;
	mov.b32 	%r16293, %f1287;
	setp.ne.s32 	%p237, %r16294, 0;
	setp.ne.s32 	%p238, %r16293, 0;
	and.pred  	%p239, %p237, %p238;
	@%p239 bra 	$L__BB0_93;
$L__BB0_94:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p240, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p240;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_95;
$L__BB0_85:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p231, %r48, 1073741824;
	@%p231 bra 	$L__BB0_90;
// %bb.86:
	setp.lt.u32 	%p232, %r48, -2147483647;
	@%p232 bra 	$L__BB0_88;
// %bb.87:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p235, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p235;
	bra.uni 	$L__BB0_90;
$L__BB0_88:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p233, %f109, 0f40800000;
	@%p233 bra 	$L__BB0_90;
// %bb.89:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p234, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p234;
$L__BB0_90:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_95:                             // %__internal_fmodf_kernel.exit.i1655
	mul.lo.s16 	%rs12, %rs11, 3072;
	mul.lo.s16 	%rs17, %rs16, 3072;
	selp.f32 	%f252, %f249, %f251, %p23;
	selp.f32 	%f286, %f283, %f285, %p29;
	selp.f32 	%f321, %f318, %f320, %p35;
	selp.f32 	%f355, %f352, %f354, %p41;
	selp.f32 	%f390, %f387, %f389, %p47;
	selp.f32 	%f424, %f421, %f423, %p53;
	selp.f32 	%f459, %f456, %f458, %p59;
	selp.f32 	%f493, %f490, %f492, %p65;
	selp.f32 	%f528, %f525, %f527, %p71;
	selp.f32 	%f562, %f559, %f561, %p77;
	selp.f32 	%f597, %f594, %f596, %p83;
	selp.f32 	%f631, %f628, %f630, %p89;
	selp.f32 	%f666, %f663, %f665, %p95;
	selp.f32 	%f700, %f697, %f699, %p101;
	selp.f32 	%f735, %f732, %f734, %p107;
	selp.f32 	%f769, %f766, %f768, %p113;
	setp.eq.s32 	%p119, %r417, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p120;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p126, %r427, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p127;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p146, %r450, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f158, %f891, %f886, %p147;
	abs.f32 	%f892, %f1296;
	setp.eq.s32 	%p166, %r482, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p167;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p184;
	selp.f32 	%f991, %f988, %f990, %p185;
	and.b32  	%r502, %r501, 2;
	setp.eq.f32 	%p187, %f995, %f1300;
	mul.f32 	%f996, %f1300, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p204;
	selp.f32 	%f1042, %f1039, %f1041, %p205;
	and.b32  	%r526, %r525, 2;
	setp.eq.f32 	%p207, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p226, %r542, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f197, %f1100, %f1095, %p227;
	abs.f32 	%f1101, %f1304;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p241, %f1123, 0f7F800000;
	@%p241 bra 	$L__BB0_97;
// %bb.96:
	mov.b32 	%r547, %f199;
	and.b32  	%r548, %r547, -2147483648;
	mov.b32 	%r549, %f1288;
	or.b32  	%r550, %r548, %r549;
	mov.b32 	%f1288, %r550;
$L__BB0_97:                             // %__nv_fmodf.exit1656
	sub.s16 	%rs13, %rs9, %rs12;
	sub.s16 	%rs18, %rs14, %rs17;
	mul.f32 	%f141, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p119;
	setp.gt.f32 	%p121, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p126;
	setp.gt.f32 	%p128, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p146;
	setp.gt.f32 	%p148, %f892, 0f4B800000;
	add.f32 	%f893, %f158, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p166;
	setp.gt.f32 	%p168, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p186, %r502, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f177, %f996, %f991, %p187;
	abs.f32 	%f997, %f1300;
	setp.eq.s32 	%p206, %r526, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p207;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p226;
	setp.gt.f32 	%p228, %f1101, 0f4B800000;
	add.f32 	%f1102, %f197, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r563, %f1124;
	and.b32  	%r564, %r563, -2147483648;
	or.b32  	%r565, %r564, 1056964608;
	mov.b32 	%f1125, %r565;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p242, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p242;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p243, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p243;
	cvt.rzi.s32.f32 	%r566, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r567, %r566, 1;
	setp.eq.b32 	%p244, %r567, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p244;
	selp.f32 	%f1144, %f1142, %f1141, %p244;
	and.b32  	%r568, %r566, 2;
	setp.eq.s32 	%p245, %r568, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p245;
	add.s32 	%r569, %r566, 1;
	and.b32  	%r570, %r569, 2;
	setp.eq.s32 	%p246, %r570, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p246;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p247, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p247;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p248, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r571, %r131, 2147483640;
	cvt.u16.u32 	%rs19, %r4;
	shr.u16 	%rs20, %rs19, 8;
	shl.b16 	%rs21, %rs19, 8;
	or.b16  	%rs22, %rs21, %rs20;
	shl.b16 	%rs23, %rs22, 4;
	shr.u16 	%rs24, %rs22, 4;
	and.b16  	%rs25, %rs24, 3840;
	or.b16  	%rs26, %rs25, %rs23;
	and.b16  	%rs27, %rs26, 13107;
	shl.b16 	%rs28, %rs27, 2;
	shr.u16 	%rs29, %rs26, 2;
	and.b16  	%rs30, %rs29, 13107;
	or.b16  	%rs31, %rs30, %rs28;
	and.b16  	%rs32, %rs31, 20480;
	shl.b16 	%rs33, %rs32, 1;
	shr.u16 	%rs34, %rs31, 1;
	and.b16  	%rs35, %rs34, 16384;
	or.b16  	%rs36, %rs35, %rs33;
	shr.u16 	%rs37, %rs36, 13;
	sub.s32 	%r572, %r571, %r123;
	mad.lo.s32 	%r573, %r134, 2147483616, %r572;
	or.b16  	%rs38, %rs37, 1;
	cvt.u32.u16 	%r574, %rs38;
	and.b16  	%rs39, %rs37, 6;
	cvt.u32.u16 	%r575, %rs39;
	sub.s32 	%r576, %r573, %r575;
	shl.b32 	%r577, %r576, 1;
	cvt.rn.f32.s32 	%f1156, %r577;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1308, %f123;
	setp.lt.f32 	%p249, %f1308, 0f40000000;
	@%p249 bra 	$L__BB0_155;
// %bb.98:
	setp.gtu.f32 	%p250, %f1308, 0f4B800000;
	@%p250 bra 	$L__BB0_151;
	bra.uni 	$L__BB0_99;
$L__BB0_151:
	mov.b32 	%r162, %f1308;
	and.b32  	%r578, %r162, 8388607;
	or.b32  	%r16328, %r578, 1065353216;
	mov.b32 	%f1307, %r16328;
	add.s32 	%r579, %r162, -1073741824;
	and.b32  	%r16329, %r579, -8388608;
	setp.eq.s32 	%p256, %r16329, 0;
	@%p256 bra 	$L__BB0_154;
// %bb.152:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_153:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r580, %r16329, 192937984;
	add.s32 	%r581, %r16328, %r580;
	mov.b32 	%f1168, %r581;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1307, %f1168, %f1174;
	sub.s32 	%r16329, %r16329, %r580;
	mov.b32 	%r16328, %f1307;
	setp.ne.s32 	%p257, %r16329, 0;
	setp.ne.s32 	%p258, %r16328, 0;
	and.pred  	%p259, %p257, %p258;
	@%p259 bra 	$L__BB0_153;
$L__BB0_154:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p260, %r162, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p260;
	mul.f32 	%f1176, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1175, %f1176;
	bra.uni 	$L__BB0_155;
$L__BB0_99:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1159, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1159;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r161, %f202;
	setp.lt.u32 	%p251, %r161, 1073741824;
	@%p251 bra 	$L__BB0_150;
// %bb.100:
	setp.lt.u32 	%p252, %r161, -2147483647;
	@%p252 bra 	$L__BB0_148;
// %bb.101:
	add.f32 	%f1164, %f1306, 0fBF800000;
	setp.lt.f32 	%p255, %f202, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1306, %f1165, %f1164, %p255;
	bra.uni 	$L__BB0_150;
$L__BB0_148:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p253, %f202, 0f40800000;
	@%p253 bra 	$L__BB0_150;
// %bb.149:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1160, %f1306, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p254, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1306, %f1163, %f1160, %p254;
$L__BB0_150:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_155:                            // %__internal_fmodf_kernel.exit.i1810
	cvt.u32.u16 	%r243, %rs13;
	cvt.u32.u16 	%r244, %rs18;
	mul.f32 	%f256, %f141, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p121;
	selp.f32 	%f841, %f840, %f835, %p128;
	selp.f32 	%f159, %f893, %f889, %p148;
	selp.f32 	%f947, %f946, %f941, %p168;
	selp.f32 	%f994, %f989, %f993, %p186;
	setp.gt.f32 	%p188, %f997, 0f4B800000;
	add.f32 	%f998, %f177, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p206;
	setp.gt.f32 	%p208, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f198, %f1102, %f1098, %p228;
	selp.f32 	%f1155, %f1154, %f1149, %p248;
	sub.s32 	%r60, %r573, %r574;
	abs.f32 	%f1177, %f1308;
	setp.gtu.f32 	%p261, %f1177, 0f7F800000;
	@%p261 bra 	$L__BB0_157;
// %bb.156:
	mov.b32 	%r582, %f123;
	and.b32  	%r583, %r582, -2147483648;
	mov.b32 	%r584, %f1308;
	or.b32  	%r585, %r583, %r584;
	mov.b32 	%f1308, %r585;
$L__BB0_157:                            // %__nv_fmodf.exit1811
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd30, %r243, 4;
	mul.wide.u32 	%rd32, %r244, 4;
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r400, %f808;
	mov.b32 	%r401, %f841;
	mov.b32 	%r406, %f805;
	mov.b32 	%r407, %f838;
	mov.b32 	%r474, %f947;
	mov.b32 	%r473, %f159;
	mov.b32 	%r471, %f944;
	mov.b32 	%r470, %f158;
	selp.f32 	%f178, %f998, %f994, %p188;
	selp.f32 	%f1051, %f1050, %f1045, %p208;
	mov.b32 	%r562, %f1155;
	mov.b32 	%r561, %f198;
	mov.b32 	%r559, %f1152;
	mov.b32 	%r558, %f197;
	add.f32 	%f1178, %f1308, %f1308;
	mov.b32 	%r586, %f1178;
	and.b32  	%r587, %r586, -2147483648;
	or.b32  	%r588, %r587, 1056964608;
	mov.b32 	%f1179, %r588;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p262, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p262;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p263, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p263;
	cvt.rzi.s32.f32 	%r589, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1308;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r590, %r589, 1;
	setp.eq.b32 	%p264, %r590, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p264;
	selp.f32 	%f1198, %f1196, %f1195, %p264;
	and.b32  	%r591, %r589, 2;
	setp.eq.s32 	%p265, %r591, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p265;
	add.s32 	%r592, %r589, 1;
	and.b32  	%r593, %r592, 2;
	setp.eq.s32 	%p266, %r593, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p266;
	cvt.rzi.f32.f32 	%f1204, %f1308;
	setp.eq.f32 	%p267, %f1204, %f1308;
	mul.f32 	%f1205, %f1308, 0f00000000;
	selp.f32 	%f216, %f1205, %f1200, %p267;
	abs.f32 	%f1206, %f1308;
	setp.gt.f32 	%p268, %f1206, 0f4B800000;
	add.f32 	%f1207, %f216, 0f3F800000;
	shl.b32 	%r594, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r594;
	div.approx.f32 	%f218, %f1208, %f253;
	abs.f32 	%f1292, %f218;
	setp.lt.f32 	%p269, %f1292, 0f40000000;
	@%p269 bra 	$L__BB0_113;
// %bb.102:
	setp.gtu.f32 	%p270, %f1292, 0f4B800000;
	@%p270 bra 	$L__BB0_109;
	bra.uni 	$L__BB0_103;
$L__BB0_109:
	mov.b32 	%r62, %f1292;
	and.b32  	%r595, %r62, 8388607;
	or.b32  	%r16295, %r595, 1065353216;
	mov.b32 	%f1291, %r16295;
	add.s32 	%r596, %r62, -1073741824;
	and.b32  	%r16296, %r596, -8388608;
	setp.eq.s32 	%p276, %r16296, 0;
	@%p276 bra 	$L__BB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_111:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r597, %r16296, 192937984;
	add.s32 	%r598, %r16295, %r597;
	mov.b32 	%f1220, %r598;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1291, %f1220, %f1226;
	sub.s32 	%r16296, %r16296, %r597;
	mov.b32 	%r16295, %f1291;
	setp.ne.s32 	%p277, %r16296, 0;
	setp.ne.s32 	%p278, %r16295, 0;
	and.pred  	%p279, %p277, %p278;
	@%p279 bra 	$L__BB0_111;
$L__BB0_112:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p280, %r62, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p280;
	mul.f32 	%f1228, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1227, %f1228;
	bra.uni 	$L__BB0_113;
$L__BB0_103:                            // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1211, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1211;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p271, %r61, 1073741824;
	@%p271 bra 	$L__BB0_108;
// %bb.104:
	setp.lt.u32 	%p272, %r61, -2147483647;
	@%p272 bra 	$L__BB0_106;
// %bb.105:
	add.f32 	%f1216, %f1290, 0fBF800000;
	setp.lt.f32 	%p275, %f126, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1290, %f1217, %f1216, %p275;
	bra.uni 	$L__BB0_108;
$L__BB0_106:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p273, %f126, 0f40800000;
	@%p273 bra 	$L__BB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1212, %f1290, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p274, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1290, %f1215, %f1212, %p274;
$L__BB0_108:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_113:                            // %__internal_fmodf_kernel.exit.i1686
	add.s64 	%rd31, %rd1, %rd30;
	add.s64 	%rd33, %rd1, %rd32;
	shr.u32 	%r130, %r4, 2;
	mov.b32 	%r269, %f291;
	mov.b32 	%r268, %f3;
	mov.b32 	%r287, %f360;
	mov.b32 	%r286, %f12;
	mov.b32 	%r305, %f429;
	mov.b32 	%r304, %f21;
	mov.b32 	%r323, %f498;
	mov.b32 	%r322, %f30;
	mov.b32 	%r341, %f567;
	mov.b32 	%r340, %f39;
	mov.b32 	%r359, %f636;
	mov.b32 	%r358, %f48;
	mov.b32 	%r377, %f705;
	mov.b32 	%r376, %f57;
	mov.b32 	%r395, %f773;
	mov.b32 	%r394, %f66;
	xor.b32  	%r468, %r471, -2147483648;
	xor.b32  	%r467, %r470, -2147483648;
	mov.b32 	%r515, %f1051;
	mov.b32 	%r514, %f178;
	mov.b32 	%r518, %f1048;
	mov.b32 	%r517, %f177;
	xor.b32  	%r556, %r559, -2147483648;
	xor.b32  	%r555, %r558, -2147483648;
	selp.f32 	%f217, %f1207, %f1203, %p268;
	abs.f32 	%f1229, %f1292;
	setp.gtu.f32 	%p281, %f1229, 0f7F800000;
	@%p281 bra 	$L__BB0_115;
// %bb.114:
	mov.b32 	%r599, %f218;
	and.b32  	%r600, %r599, -2147483648;
	mov.b32 	%r601, %f1292;
	or.b32  	%r602, %r600, %r601;
	mov.b32 	%f1292, %r602;
$L__BB0_115:                            // %__nv_fmodf.exit1687
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.global.u32 	%r125, [%rd31];
	ld.global.u32 	%r126, [%rd33];
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r287, %r286;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r339, %r341, %r340;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r357, %r359, %r358;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r375, %r377, %r376;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r407, %r406;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r405, %r407, %r406;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r463, %r474, %r473;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r466, %r468, %r467;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r469, %r471, %r470;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r472, %r474, %r473;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r513, %r515, %r514;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r516, %r518, %r517;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r551, %r562, %r561;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r554, %r556, %r555;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r557, %r559, %r558;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r560, %r562, %r561;
	// end inline asm
	add.f32 	%f1230, %f1292, %f1292;
	mov.b32 	%r610, %f1230;
	and.b32  	%r611, %r610, -2147483648;
	or.b32  	%r612, %r611, 1056964608;
	mov.b32 	%f1231, %r612;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p282, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p282;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p283, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p283;
	cvt.rzi.s32.f32 	%r613, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1292;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r614, %r613, 1;
	setp.eq.b32 	%p284, %r614, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p284;
	selp.f32 	%f1250, %f1248, %f1247, %p284;
	and.b32  	%r615, %r613, 2;
	setp.eq.s32 	%p285, %r615, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p285;
	add.s32 	%r616, %r613, 1;
	and.b32  	%r617, %r616, 2;
	setp.eq.s32 	%p286, %r617, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p286;
	cvt.rzi.f32.f32 	%f1256, %f1292;
	setp.eq.f32 	%p287, %f1256, %f1292;
	mul.f32 	%f1257, %f1292, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p287;
	abs.f32 	%f1259, %f1292;
	setp.gt.f32 	%p288, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p288;
	mov.b32 	%r605, %f1261;
	mov.b32 	%r604, %f217;
	// begin inline asm
	cvt.rn.f16x2.f32 %r603, %r605, %r604;
	// end inline asm
	mov.b32 	%r608, %f1258;
	mov.b32 	%r607, %f216;
	// begin inline asm
	cvt.rn.f16x2.f32 %r606, %r608, %r607;
	// end inline asm
	shl.b32 	%r618, %r225, 8;
	shl.b32 	%r619, %r1, 5;
	and.b32  	%r620, %r118, 28;
	cvt.u16.u32 	%rs40, %r120;
	mul.hi.u16 	%rs41, %rs40, -21845;
	shr.u16 	%rs42, %rs41, 5;
	mul.lo.s16 	%rs43, %rs42, 48;
	sub.s16 	%rs44, %rs40, %rs43;
	shl.b16 	%rs45, %rs44, 8;
	cvt.u32.u16 	%r621, %rs45;
	and.b32  	%r622, %r619, 224;
	or.b32  	%r623, %r622, %r620;
	shl.b32 	%r624, %r4, 3;
	and.b32  	%r625, %r624, 64;
	or.b32  	%r71, %r625, %r2;
	or.b32  	%r626, %r618, %r623;
	add.s32 	%r72, %r626, %r621;
	bfe.s32 	%r627, %r4, 3, 1;
	and.b32  	%r73, %r4, 8;
	shl.b32 	%r628, %r4, 4;
	or.b32  	%r629, %r73, %r628;
	shr.u32 	%r630, %r629, 2;
	and.b32  	%r631, %r630, 30;
	and.b32  	%r632, %r130, 6;
	or.b32  	%r633, %r122, %r632;
	and.b32  	%r634, %r628, 48;
	shr.u32 	%r635, %r2, 1;
	and.b32  	%r636, %r3, 32;
	or.b32  	%r637, %r636, %r635;
	or.b32  	%r638, %r637, 8;
	or.b32  	%r639, %r637, 16;
	or.b32  	%r640, %r637, 24;
	or.b32  	%r74, %r634, %r633;
	and.b32  	%r641, %r4, 18;
	or.b32  	%r642, %r641, %r122;
	or.b32  	%r643, %r642, %r119;
	or.b32  	%r644, %r643, %r124;
	shr.u32 	%r645, %r644, 1;
	mul.lo.s32 	%r646, %r645, 65;
	add.s32 	%r75, %r637, %r646;
	add.s32 	%r76, %r638, %r646;
	add.s32 	%r77, %r639, %r646;
	add.s32 	%r78, %r640, %r646;
	add.s32 	%r647, %r646, 2080;
	add.s32 	%r79, %r637, %r647;
	add.s32 	%r80, %r638, %r647;
	add.s32 	%r81, %r639, %r647;
	add.s32 	%r82, %r640, %r647;
	shl.b32 	%r648, %r2, 1;
	or.b32  	%r649, %r132, %r648;
	mul.lo.s32 	%r650, %r649, 65;
	add.s32 	%r651, %r631, %r650;
	mul.wide.u32 	%rd34, %r651, 4;
	mov.u64 	%rd35, shmem;
	add.s64 	%rd4, %rd35, %rd34;
	cvt.u64.u32 	%rd36, %r631;
	cvt.u64.u32 	%rd37, %r650;
	add.s64 	%rd38, %rd37, %rd36;
	shl.b64 	%rd39, %rd38, 2;
	add.s64 	%rd5, %rd35, %rd39;
	or.b32  	%r652, %r649, 32;
	mul.lo.s32 	%r653, %r652, 65;
	add.s32 	%r654, %r631, %r653;
	mul.wide.u32 	%rd40, %r654, 4;
	add.s64 	%rd6, %rd35, %rd40;
	cvt.u64.u32 	%rd41, %r653;
	add.s64 	%rd42, %rd41, %rd36;
	shl.b64 	%rd43, %rd42, 2;
	add.s64 	%rd7, %rd35, %rd43;
	shr.u32 	%r655, %r122, 3;
	setp.gt.u32 	%p289, %r4, 15;
	bfe.u32 	%r656, %r628, 5, 1;
	and.b32  	%r83, %r121, 32;
	shr.u32 	%r657, %r2, 3;
	mul.lo.s32 	%r658, %r657, 260;
	bfe.s32 	%r659, %r2, 1, 1;
	and.b32  	%r660, %r2, 2;
	setp.eq.s32 	%p290, %r660, 0;
	and.b32  	%r661, %r659, 1040;
	bfe.s32 	%r662, %r2, 2, 1;
	and.b32  	%r663, %r2, 4;
	setp.eq.s32 	%p291, %r663, 0;
	and.b32  	%r664, %r662, 520;
	mul.lo.s32 	%r665, %r132, 65;
	and.b32  	%r666, %r2, 1;
	neg.s32 	%r667, %r666;
	and.b32  	%r668, %r667, 2080;
	or.b32  	%r669, %r668, %r631;
	add.s32 	%r670, %r669, %r661;
	add.s32 	%r671, %r670, %r658;
	add.s32 	%r672, %r671, %r664;
	add.s32 	%r673, %r672, %r665;
	mul.wide.u32 	%rd44, %r673, 4;
	add.s64 	%rd8, %rd35, %rd44;
	cvt.u64.u32 	%rd45, %r665;
	selp.b64 	%rd46, 0, 520, %p291;
	cvt.u64.u32 	%rd47, %r658;
	selp.b64 	%rd48, 0, 1040, %p290;
	cvt.u64.u32 	%rd49, %r669;
	add.s64 	%rd50, %rd49, %rd48;
	add.s64 	%rd51, %rd50, %rd47;
	add.s64 	%rd52, %rd51, %rd46;
	add.s64 	%rd53, %rd52, %rd45;
	shl.b64 	%rd54, %rd53, 2;
	add.s64 	%rd9, %rd35, %rd54;
	cvt.u64.u32 	%rd55, %r671;
	add.s64 	%rd56, %rd55, %rd46;
	add.s64 	%rd57, %rd56, %rd45;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd10, %rd35, %rd58;
	add.s32 	%r674, %r673, 162;
	mul.wide.u32 	%rd59, %r674, 4;
	add.s64 	%rd11, %rd35, %rd59;
	add.s32 	%r675, %r673, 131;
	mul.wide.u32 	%rd60, %r675, 4;
	add.s64 	%rd12, %rd35, %rd60;
	add.s32 	%r676, %r673, 163;
	mul.wide.u32 	%rd61, %r676, 4;
	add.s64 	%rd13, %rd35, %rd61;
	add.s32 	%r677, %r673, 4193;
	mul.wide.u32 	%rd62, %r677, 4;
	add.s64 	%rd14, %rd35, %rd62;
	add.s32 	%r678, %r673, 4162;
	mul.wide.u32 	%rd63, %r678, 4;
	add.s64 	%rd15, %rd35, %rd63;
	add.s32 	%r679, %r673, 4194;
	mul.wide.u32 	%rd64, %r679, 4;
	add.s64 	%rd16, %rd35, %rd64;
	add.s32 	%r680, %r673, 4291;
	mul.wide.u32 	%rd65, %r680, 4;
	add.s64 	%rd17, %rd35, %rd65;
	add.s32 	%r681, %r673, 4323;
	mul.wide.u32 	%rd66, %r681, 4;
	add.s64 	%rd18, %rd35, %rd66;
	add.s32 	%r682, %r673, 4292;
	mul.wide.u32 	%rd67, %r682, 4;
	add.s64 	%rd19, %rd35, %rd67;
	add.s32 	%r683, %r673, 4324;
	mul.wide.u32 	%rd68, %r683, 4;
	add.s64 	%rd20, %rd35, %rd68;
	mul.lo.s32 	%r684, %r655, 260;
	and.b32  	%r685, %r627, 1040;
	setp.eq.s32 	%p292, %r129, 0;
	selp.b32 	%r686, 0, 130, %p292;
	selp.b32 	%r687, 520, 0, %p289;
	mul.lo.s32 	%r84, %r656, 65;
	or.b32  	%r688, %r637, %r685;
	add.s32 	%r689, %r688, %r684;
	add.s32 	%r690, %r689, %r686;
	add.s32 	%r691, %r690, %r687;
	add.s32 	%r85, %r691, %r84;
	or.b32  	%r692, %r638, %r685;
	add.s32 	%r693, %r692, %r684;
	add.s32 	%r694, %r693, %r686;
	add.s32 	%r695, %r694, %r687;
	add.s32 	%r86, %r695, %r84;
	add.s32 	%r696, %r639, %r685;
	add.s32 	%r697, %r696, %r684;
	add.s32 	%r698, %r697, %r686;
	add.s32 	%r699, %r698, %r687;
	add.s32 	%r87, %r699, %r84;
	add.s32 	%r700, %r640, %r685;
	add.s32 	%r701, %r700, %r684;
	add.s32 	%r702, %r701, %r686;
	add.s32 	%r703, %r702, %r687;
	add.s32 	%r88, %r703, %r84;
	add.s32 	%r89, %r637, 2080;
	add.s32 	%r90, %r638, 2080;
	add.s32 	%r91, %r639, 2080;
	add.s32 	%r92, %r640, 2080;
	add.s32 	%r704, %r654, 4193;
	mul.wide.u32 	%rd69, %r704, 4;
	add.s64 	%rd21, %rd35, %rd69;
	mov.u32 	%r16297, 0;
	setp.eq.s32 	%p294, %r73, 0;
	mov.u16 	%rs2405, 25600;
	mov.u16 	%rs2197, 21504;
	mov.u16 	%rs2413, 18432;
	mov.u32 	%r16298, %r16297;
	mov.u32 	%r16299, %r16297;
	mov.u32 	%r16300, %r16297;
	mov.u32 	%r16301, %r16297;
	mov.u32 	%r16302, %r16297;
	mov.u32 	%r16303, %r16297;
	mov.u32 	%r16304, %r16297;
	mov.u32 	%r16305, %r16297;
	mov.u32 	%r16306, %r16297;
	mov.u32 	%r16307, %r16297;
	mov.u32 	%r16308, %r16297;
	mov.u32 	%r16309, %r16297;
	mov.u32 	%r16310, %r16297;
	mov.u32 	%r16311, %r16297;
	mov.u32 	%r16312, %r16297;
	mov.u32 	%r16313, %r16297;
	mov.u32 	%r16314, %r16297;
	mov.u32 	%r16315, %r16297;
	mov.u32 	%r16316, %r16297;
	mov.u32 	%r16317, %r16297;
	mov.u32 	%r16318, %r16297;
	mov.u32 	%r16319, %r16297;
	mov.u32 	%r16320, %r16297;
	mov.u32 	%r16321, %r16297;
$L__BB0_116:                            // %L2125
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_159 Depth 2
	add.s32 	%r705, %r16321, %r221;
	setp.lt.s32 	%p293, %r705, %r222;
	@%p293 bra 	$L__BB0_158;
	bra.uni 	$L__BB0_117;
$L__BB0_158:                            // %pass837
                                        //   in Loop: Header=BB0_116 Depth=1
	or.b32  	%r772, %r16321, %r83;
	or.b32  	%r773, %r71, %r772;
	add.s32 	%r774, %r773, %r221;
	mad.lo.s32 	%r775, %r774, 12288, %r72;
	mul.hi.s32 	%r776, %r775, 715827883;
	shr.u32 	%r777, %r776, 31;
	shr.s32 	%r778, %r776, 26;
	add.s32 	%r779, %r778, %r777;
	setp.lt.s32 	%p295, %r775, 0;
	mul.lo.s32 	%r780, %r779, 402653184;
	setp.ne.s32 	%p296, %r780, %r775;
	and.pred  	%p297, %p295, %p296;
	selp.s32 	%r781, -1, 0, %p297;
	add.s32 	%r782, %r779, %r781;
	or.b32  	%r783, %r775, 1;
	mad.lo.s32 	%r784, %r782, -402653184, %r783;
	mul.wide.s32 	%rd70, %r784, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r785, %r786, %r787, %r788}, [%rd71+-4];
	or.b32  	%r789, %r773, 16;
	add.s32 	%r790, %r789, %r221;
	mad.lo.s32 	%r791, %r790, 12288, %r72;
	mul.hi.s32 	%r792, %r791, 715827883;
	shr.u32 	%r793, %r792, 31;
	shr.s32 	%r794, %r792, 26;
	add.s32 	%r795, %r794, %r793;
	setp.lt.s32 	%p298, %r791, 0;
	mul.lo.s32 	%r796, %r795, 402653184;
	setp.ne.s32 	%p299, %r796, %r791;
	and.pred  	%p300, %p298, %p299;
	selp.s32 	%r797, -1, 0, %p300;
	add.s32 	%r798, %r795, %r797;
	or.b32  	%r799, %r791, 1;
	mad.lo.s32 	%r800, %r798, -402653184, %r799;
	mul.wide.s32 	%rd72, %r800, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r801, %r802, %r803, %r804}, [%rd73+-4];
	or.b32  	%r805, %r773, 128;
	add.s32 	%r806, %r805, %r221;
	mad.lo.s32 	%r807, %r806, 12288, %r72;
	mul.hi.s32 	%r808, %r807, 715827883;
	shr.u32 	%r809, %r808, 31;
	shr.s32 	%r810, %r808, 26;
	add.s32 	%r811, %r810, %r809;
	setp.lt.s32 	%p301, %r807, 0;
	mul.lo.s32 	%r812, %r811, 402653184;
	setp.ne.s32 	%p302, %r812, %r807;
	and.pred  	%p303, %p301, %p302;
	selp.s32 	%r813, -1, 0, %p303;
	add.s32 	%r814, %r811, %r813;
	or.b32  	%r815, %r807, 1;
	mad.lo.s32 	%r816, %r814, -402653184, %r815;
	mul.wide.s32 	%rd74, %r816, 4;
	add.s64 	%rd75, %rd2, %rd74;
	ld.global.v4.u32 	{%r817, %r818, %r819, %r820}, [%rd75+-4];
	or.b32  	%r821, %r773, 144;
	add.s32 	%r822, %r821, %r221;
	mad.lo.s32 	%r823, %r822, 12288, %r72;
	mul.hi.s32 	%r824, %r823, 715827883;
	shr.u32 	%r825, %r824, 31;
	shr.s32 	%r826, %r824, 26;
	add.s32 	%r827, %r826, %r825;
	setp.lt.s32 	%p304, %r823, 0;
	mul.lo.s32 	%r828, %r827, 402653184;
	setp.ne.s32 	%p305, %r828, %r823;
	and.pred  	%p306, %p304, %p305;
	selp.s32 	%r829, -1, 0, %p306;
	add.s32 	%r830, %r827, %r829;
	or.b32  	%r831, %r823, 1;
	mad.lo.s32 	%r832, %r830, -402653184, %r831;
	mul.wide.s32 	%rd76, %r832, 4;
	add.s64 	%rd77, %rd2, %rd76;
	ld.global.v4.u32 	{%r833, %r834, %r835, %r836}, [%rd77+-4];
	selp.b32 	%r837, %r787, %r785, %p294;
	shfl.sync.bfly.b32	%r838, %r837, 8, 31, -1;
	selp.b32 	%r708, %r785, %r838, %p294;
	selp.b32 	%r709, %r838, %r787, %p294;
	selp.b32 	%r839, %r788, %r786, %p294;
	shfl.sync.bfly.b32	%r840, %r839, 8, 31, -1;
	selp.b32 	%r716, %r786, %r840, %p294;
	selp.b32 	%r717, %r840, %r788, %p294;
	selp.b32 	%r841, %r803, %r801, %p294;
	shfl.sync.bfly.b32	%r842, %r841, 8, 31, -1;
	selp.b32 	%r724, %r801, %r842, %p294;
	selp.b32 	%r725, %r842, %r803, %p294;
	selp.b32 	%r843, %r804, %r802, %p294;
	shfl.sync.bfly.b32	%r844, %r843, 8, 31, -1;
	selp.b32 	%r732, %r802, %r844, %p294;
	selp.b32 	%r733, %r844, %r804, %p294;
	selp.b32 	%r845, %r819, %r817, %p294;
	shfl.sync.bfly.b32	%r846, %r845, 8, 31, -1;
	selp.b32 	%r740, %r817, %r846, %p294;
	selp.b32 	%r741, %r846, %r819, %p294;
	selp.b32 	%r847, %r820, %r818, %p294;
	shfl.sync.bfly.b32	%r848, %r847, 8, 31, -1;
	selp.b32 	%r748, %r818, %r848, %p294;
	selp.b32 	%r749, %r848, %r820, %p294;
	selp.b32 	%r849, %r835, %r833, %p294;
	shfl.sync.bfly.b32	%r850, %r849, 8, 31, -1;
	selp.b32 	%r756, %r833, %r850, %p294;
	selp.b32 	%r757, %r850, %r835, %p294;
	selp.b32 	%r851, %r836, %r834, %p294;
	shfl.sync.bfly.b32	%r852, %r851, 8, 31, -1;
	selp.b32 	%r764, %r834, %r852, %p294;
	selp.b32 	%r765, %r852, %r836, %p294;
	mov.u32 	%r16209, 21520;
	// begin inline asm
	prmt.b32 %r707, %r708, %r709, %r16209;
	// end inline asm
	mov.u32 	%r16213, 30258;
	// begin inline asm
	prmt.b32 %r711, %r708, %r709, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r715, %r716, %r717, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r719, %r716, %r717, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r723, %r724, %r725, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r727, %r724, %r725, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r731, %r732, %r733, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r735, %r732, %r733, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r739, %r740, %r741, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r743, %r740, %r741, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r747, %r748, %r749, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r751, %r748, %r749, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r755, %r756, %r757, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r759, %r756, %r757, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r763, %r764, %r765, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r767, %r764, %r765, %r16213;
	// end inline asm
	st.shared.u32 	[%rd8], %r707;
	st.shared.u32 	[%rd9+128], %r711;
	st.shared.u32 	[%rd9+4], %r715;
	st.shared.u32 	[%rd9+132], %r719;
	st.shared.u32 	[%rd10+520], %r723;
	st.shared.u32 	[%rd11], %r727;
	st.shared.u32 	[%rd12], %r731;
	st.shared.u32 	[%rd13], %r735;
	st.shared.u32 	[%rd8+16644], %r739;
	st.shared.u32 	[%rd14], %r743;
	st.shared.u32 	[%rd15], %r747;
	st.shared.u32 	[%rd16], %r751;
	st.shared.u32 	[%rd17], %r755;
	st.shared.u32 	[%rd18], %r759;
	st.shared.u32 	[%rd19], %r763;
	st.shared.u32 	[%rd20], %r767;
	bar.sync 	0;
	or.b32  	%r853, %r74, %r16321;
	or.b32  	%r169, %r853, 1;
	mov.u32 	%r3198, 0;
	mov.u32 	%r16330, %r3198;
$L__BB0_159:                            // %pass6356
                                        //   Parent Loop BB0_116 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p307, %r16330, 0;
	selp.b32 	%r16118, 0, 4161, %p307;
	add.s32 	%r16119, %r85, %r16118;
	mul.wide.u32 	%rd78, %r16119, 4;
	add.s64 	%rd80, %rd35, %rd78;
	ld.shared.u32 	%r16120, [%rd80];
	add.s32 	%r16121, %r86, %r16118;
	mul.wide.u32 	%rd81, %r16121, 4;
	add.s64 	%rd82, %rd35, %rd81;
	ld.shared.u32 	%r16122, [%rd82];
	add.s32 	%r16123, %r87, %r16118;
	mul.wide.u32 	%rd83, %r16123, 4;
	add.s64 	%rd84, %rd35, %rd83;
	ld.shared.u32 	%r16124, [%rd84];
	add.s32 	%r16125, %r88, %r16118;
	mul.wide.u32 	%rd85, %r16125, 4;
	add.s64 	%rd86, %rd35, %rd85;
	ld.shared.u32 	%r16126, [%rd86];
	add.s32 	%r16127, %r169, %r16330;
	bfe.s32 	%r16128, %r16127, 3, 1;
	and.b32  	%r16129, %r16128, 260;
	bfe.s32 	%r16130, %r16127, 1, 1;
	and.b32  	%r16131, %r16130, 1040;
	bfe.s32 	%r16132, %r16127, 4, 1;
	and.b32  	%r16133, %r16132, 130;
	bfe.s32 	%r16134, %r16127, 2, 1;
	and.b32  	%r16135, %r16134, 520;
	bfe.s32 	%r16136, %r16127, 7, 1;
	and.b32  	%r16137, %r16136, 4161;
	or.b32  	%r16138, %r89, %r16131;
	add.s32 	%r16139, %r16138, %r16129;
	add.s32 	%r16140, %r16139, %r16133;
	add.s32 	%r16141, %r16140, %r16135;
	add.s32 	%r16142, %r16141, %r84;
	add.s32 	%r16143, %r16142, %r16137;
	mul.wide.u32 	%rd87, %r16143, 4;
	add.s64 	%rd88, %rd35, %rd87;
	ld.shared.u32 	%r16144, [%rd88];
	or.b32  	%r16145, %r90, %r16131;
	add.s32 	%r16146, %r16145, %r16129;
	add.s32 	%r16147, %r16146, %r16133;
	add.s32 	%r16148, %r16147, %r16135;
	add.s32 	%r16149, %r16148, %r84;
	add.s32 	%r16150, %r16149, %r16137;
	mul.wide.u32 	%rd89, %r16150, 4;
	add.s64 	%rd90, %rd35, %rd89;
	ld.shared.u32 	%r16151, [%rd90];
	add.s32 	%r16152, %r91, %r16131;
	add.s32 	%r16153, %r16152, %r16129;
	add.s32 	%r16154, %r16153, %r16133;
	add.s32 	%r16155, %r16154, %r16135;
	add.s32 	%r16156, %r16155, %r84;
	add.s32 	%r16157, %r16156, %r16137;
	mul.wide.u32 	%rd91, %r16157, 4;
	add.s64 	%rd92, %rd35, %rd91;
	ld.shared.u32 	%r16158, [%rd92];
	add.s32 	%r16159, %r92, %r16131;
	add.s32 	%r16160, %r16159, %r16129;
	add.s32 	%r16161, %r16160, %r16133;
	add.s32 	%r16162, %r16161, %r16135;
	add.s32 	%r16163, %r16162, %r84;
	add.s32 	%r16164, %r16163, %r16137;
	mul.wide.u32 	%rd93, %r16164, 4;
	add.s64 	%rd94, %rd35, %rd93;
	ld.shared.u32 	%r16165, [%rd94];
	// begin inline asm
	mov.b32 %r859, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r870, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r858, %r16120, -2004318072;
	mov.u32 	%r857, 983055;
	// begin inline asm
	lop3.b32 %r856, %r857, %r858, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	mov.u32 	%r868, 15728880;
	// begin inline asm
	lop3.b32 %r867, %r868, %r858, %r870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r870, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	shr.u32 	%r880, %r858, 8;
	// begin inline asm
	lop3.b32 %r878, %r857, %r880, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r889, %r868, %r880, %r870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r894, %r870, %r893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r897, %r889, %r894;
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r904, %r16122, -2004318072;
	// begin inline asm
	lop3.b32 %r902, %r857, %r904, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r868, %r904, %r916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r916, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	shr.u32 	%r926, %r904, 8;
	// begin inline asm
	lop3.b32 %r924, %r857, %r926, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r935, %r868, %r926, %r916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r940, %r916, %r939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r943, %r935, %r940;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r950, %r16124, -2004318072;
	// begin inline asm
	lop3.b32 %r948, %r857, %r950, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r959, %r868, %r950, %r962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r962, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	shr.u32 	%r972, %r950, 8;
	// begin inline asm
	lop3.b32 %r970, %r857, %r972, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r981, %r868, %r972, %r962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r962, %r985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r989, %r981, %r986;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r996, %r16126, -2004318072;
	// begin inline asm
	lop3.b32 %r994, %r857, %r996, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r997, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1005, %r868, %r996, %r1008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r1008, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	shr.u32 	%r1018, %r996, 8;
	// begin inline asm
	lop3.b32 %r1016, %r857, %r1018, %r997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1020, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1021, %r997, %r1020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1024, %r1016, %r1021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1027, %r868, %r1018, %r1008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1032, %r1008, %r1031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1035, %r1027, %r1032;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1042, %r16144, -2004318072;
	// begin inline asm
	lop3.b32 %r1040, %r857, %r1042, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1051, %r868, %r1042, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1054, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	shr.u32 	%r1064, %r1042, 8;
	// begin inline asm
	lop3.b32 %r1062, %r857, %r1064, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1043, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1073, %r868, %r1064, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1054, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1088, %r16151, -2004318072;
	// begin inline asm
	lop3.b32 %r1086, %r857, %r1088, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1089, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1097, %r868, %r1088, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1100, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	shr.u32 	%r1110, %r1088, 8;
	// begin inline asm
	lop3.b32 %r1108, %r857, %r1110, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1089, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1119, %r868, %r1110, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1100, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1134, %r16158, -2004318072;
	// begin inline asm
	lop3.b32 %r1132, %r857, %r1134, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1135, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1143, %r868, %r1134, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1146, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	shr.u32 	%r1156, %r1134, 8;
	// begin inline asm
	lop3.b32 %r1154, %r857, %r1156, %r1135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1158, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1159, %r1135, %r1158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1162, %r1154, %r1159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1165, %r868, %r1156, %r1146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1170, %r1146, %r1169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1173, %r1165, %r1170;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1180, %r16165, -2004318072;
	// begin inline asm
	lop3.b32 %r1178, %r857, %r1180, %r1181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1183, %r1181, %r1182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1186, %r1178, %r1183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1189, %r868, %r1180, %r1192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1192, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	shr.u32 	%r1202, %r1180, 8;
	// begin inline asm
	lop3.b32 %r1200, %r857, %r1202, %r1181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1204, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1205, %r1181, %r1204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1208, %r1200, %r1205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1211, %r868, %r1202, %r1192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1216, %r1192, %r1215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1219, %r1211, %r1216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1222, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1224, %r1222, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1229, %r1227, %r875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1369, %r1367, %r1197;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r1377, %r1219;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1386, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r1384, %r857, %r1386, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1387, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1395, %r868, %r1386, %r1398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1398, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	shr.u32 	%r1408, %r1386, 8;
	// begin inline asm
	lop3.b32 %r1406, %r857, %r1408, %r1387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1411, %r1387, %r1410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1414, %r1406, %r1411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1417, %r868, %r1408, %r1398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1422, %r1398, %r1421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1425, %r1417, %r1422;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1432, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r1430, %r857, %r1432, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1433, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1441, %r868, %r1432, %r1444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1444, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	shr.u32 	%r1454, %r1432, 8;
	// begin inline asm
	lop3.b32 %r1452, %r857, %r1454, %r1433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1456, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1433, %r1456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1460, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1463, %r868, %r1454, %r1444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1444, %r1467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1471, %r1463, %r1468;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1478, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r1476, %r857, %r1478, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1479, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1487, %r868, %r1478, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1490, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	shr.u32 	%r1500, %r1478, 8;
	// begin inline asm
	lop3.b32 %r1498, %r857, %r1500, %r1479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1502, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1479, %r1502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1506, %r1498, %r1503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1509, %r868, %r1500, %r1490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1490, %r1513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1517, %r1509, %r1514;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1524, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r1522, %r857, %r1524, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1525, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1533, %r868, %r1524, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1536, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	shr.u32 	%r1546, %r1524, 8;
	// begin inline asm
	lop3.b32 %r1544, %r857, %r1546, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1525, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1555, %r868, %r1546, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1536, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1570, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r1568, %r857, %r1570, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1579, %r868, %r1570, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1582, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	shr.u32 	%r1592, %r1570, 8;
	// begin inline asm
	lop3.b32 %r1590, %r857, %r1592, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1601, %r868, %r1592, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1582, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1616, %r16310, -2004318072;
	// begin inline asm
	lop3.b32 %r1614, %r857, %r1616, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1617, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1625, %r868, %r1616, %r1628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1628, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	shr.u32 	%r1638, %r1616, 8;
	// begin inline asm
	lop3.b32 %r1636, %r857, %r1638, %r1617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1640, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1641, %r1617, %r1640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1644, %r1636, %r1641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1647, %r868, %r1638, %r1628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1652, %r1628, %r1651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1655, %r1647, %r1652;
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1662, %r16311, -2004318072;
	// begin inline asm
	lop3.b32 %r1660, %r857, %r1662, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1663, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1671, %r868, %r1662, %r1674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1675, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1676, %r1674, %r1675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1679, %r1671, %r1676;
	// end inline asm
	shr.u32 	%r1684, %r1662, 8;
	// begin inline asm
	lop3.b32 %r1682, %r857, %r1684, %r1663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1686, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1687, %r1663, %r1686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1690, %r1682, %r1687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1693, %r868, %r1684, %r1674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1697, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1698, %r1674, %r1697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1701, %r1693, %r1698;
	// end inline asm
	// begin inline asm
	mov.b32 %r1709, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1720, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1708, %r16312, -2004318072;
	// begin inline asm
	lop3.b32 %r1706, %r857, %r1708, %r1709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1710, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1711, %r1709, %r1710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1714, %r1706, %r1711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1717, %r868, %r1708, %r1720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1721, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1722, %r1720, %r1721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1725, %r1717, %r1722;
	// end inline asm
	shr.u32 	%r1730, %r1708, 8;
	// begin inline asm
	lop3.b32 %r1728, %r857, %r1730, %r1709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1732, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1733, %r1709, %r1732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1736, %r1728, %r1733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1739, %r868, %r1730, %r1720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1743, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1744, %r1720, %r1743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1747, %r1739, %r1744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r267, %r1392, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r267, %r1403, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r267, %r1414, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r267, %r1425, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r267, %r1438, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r267, %r1449, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r267, %r1460, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r267, %r1471, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r267, %r1484, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r267, %r1495, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r267, %r1506, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r267, %r1517, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r267, %r1530, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r267, %r1541, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r267, %r1552, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r267, %r1563, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r285, %r1576, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r285, %r1587, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r285, %r1598, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r285, %r1609, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r285, %r1622, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r285, %r1633, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r285, %r1644, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1842, %r285, %r1655, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1846, %r285, %r1668, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1850, %r285, %r1679, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1854, %r285, %r1690, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1858, %r285, %r1701, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1862, %r285, %r1714, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1866, %r285, %r1725, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r285, %r1736, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r285, %r1747, %r1379;
	// end inline asm
	// begin inline asm
	mov.b32 %r1883, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1894, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1882, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r1880, %r857, %r1882, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1883, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1891, %r868, %r1882, %r1894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1895, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1894, %r1895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1899, %r1891, %r1896;
	// end inline asm
	shr.u32 	%r1904, %r1882, 8;
	// begin inline asm
	lop3.b32 %r1902, %r857, %r1904, %r1883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1906, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1907, %r1883, %r1906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1910, %r1902, %r1907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1913, %r868, %r1904, %r1894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1917, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1918, %r1894, %r1917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1921, %r1913, %r1918;
	// end inline asm
	// begin inline asm
	mov.b32 %r1929, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1940, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1928, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r1926, %r857, %r1928, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1929, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1937, %r868, %r1928, %r1940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1941, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1940, %r1941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1945, %r1937, %r1942;
	// end inline asm
	shr.u32 	%r1950, %r1928, 8;
	// begin inline asm
	lop3.b32 %r1948, %r857, %r1950, %r1929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1952, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1953, %r1929, %r1952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1956, %r1948, %r1953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1959, %r868, %r1950, %r1940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1964, %r1940, %r1963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1967, %r1959, %r1964;
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r1986, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r1974, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r1972, %r857, %r1974, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1975, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1983, %r868, %r1974, %r1986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1986, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	shr.u32 	%r1996, %r1974, 8;
	// begin inline asm
	lop3.b32 %r1994, %r857, %r1996, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1975, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2005, %r868, %r1996, %r1986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2009, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2010, %r1986, %r2009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2013, %r2005, %r2010;
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2032, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2020, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r2018, %r857, %r2020, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r2021, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2029, %r868, %r2020, %r2032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2032, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	shr.u32 	%r2042, %r2020, 8;
	// begin inline asm
	lop3.b32 %r2040, %r857, %r2042, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2045, %r2021, %r2044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2048, %r2040, %r2045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2051, %r868, %r2042, %r2032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2056, %r2032, %r2055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2059, %r2051, %r2056;
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2066, %r16313, -2004318072;
	// begin inline asm
	lop3.b32 %r2064, %r857, %r2066, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2067, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2075, %r868, %r2066, %r2078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2078, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	shr.u32 	%r2088, %r2066, 8;
	// begin inline asm
	lop3.b32 %r2086, %r857, %r2088, %r2067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2090, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2091, %r2067, %r2090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2094, %r2086, %r2091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2097, %r868, %r2088, %r2078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2102, %r2078, %r2101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2105, %r2097, %r2102;
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2112, %r16314, -2004318072;
	// begin inline asm
	lop3.b32 %r2110, %r857, %r2112, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2113, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2121, %r868, %r2112, %r2124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2126, %r2124, %r2125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2129, %r2121, %r2126;
	// end inline asm
	shr.u32 	%r2134, %r2112, 8;
	// begin inline asm
	lop3.b32 %r2132, %r857, %r2134, %r2113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2136, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2137, %r2113, %r2136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2140, %r2132, %r2137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2143, %r868, %r2134, %r2124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2148, %r2124, %r2147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2151, %r2143, %r2148;
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2158, %r16315, -2004318072;
	// begin inline asm
	lop3.b32 %r2156, %r857, %r2158, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2159, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2167, %r868, %r2158, %r2170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2170, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	shr.u32 	%r2180, %r2158, 8;
	// begin inline asm
	lop3.b32 %r2178, %r857, %r2180, %r2159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2183, %r2159, %r2182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2186, %r2178, %r2183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2189, %r868, %r2180, %r2170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2193, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2194, %r2170, %r2193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2197, %r2189, %r2194;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2204, %r16316, -2004318072;
	// begin inline asm
	lop3.b32 %r2202, %r857, %r2204, %r2205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2207, %r2205, %r2206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2210, %r2202, %r2207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2213, %r868, %r2204, %r2216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2217, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2218, %r2216, %r2217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2221, %r2213, %r2218;
	// end inline asm
	shr.u32 	%r2226, %r2204, 8;
	// begin inline asm
	lop3.b32 %r2224, %r857, %r2226, %r2205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2205, %r2228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2232, %r2224, %r2229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2235, %r868, %r2226, %r2216, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2239, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2240, %r2216, %r2239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2243, %r2235, %r2240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2246, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2248, %r2246, %r1888, %r1750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2252, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2254, %r2252, %r1899, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2258, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2260, %r2258, %r1910, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2264, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2266, %r2264, %r1921, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2270, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2272, %r2270, %r1934, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2276, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2278, %r2276, %r1945, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2282, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2284, %r2282, %r1956, %r1774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2288, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r2288, %r1967, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r1980, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r1991, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r2002, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r2013, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r2026, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r2037, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2048, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2059, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2072, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2083, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2094, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2105, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2118, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2129, %r1834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2140, %r1838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2151, %r1842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2164, %r1846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2175, %r1850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2186, %r1854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2197, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2210, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2420, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2422, %r2420, %r2221, %r1866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2426, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2428, %r2426, %r2232, %r1870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2432, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2434, %r2432, %r2243, %r1874;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2442, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r2440, %r857, %r2442, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2443, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2451, %r868, %r2442, %r2454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2454, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	shr.u32 	%r2464, %r2442, 8;
	// begin inline asm
	lop3.b32 %r2462, %r857, %r2464, %r2443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2466, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2467, %r2443, %r2466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2470, %r2462, %r2467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2473, %r868, %r2464, %r2454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2478, %r2454, %r2477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2481, %r2473, %r2478;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2488, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r2486, %r857, %r2488, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2489, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2497, %r868, %r2488, %r2500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2500, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	shr.u32 	%r2510, %r2488, 8;
	// begin inline asm
	lop3.b32 %r2508, %r857, %r2510, %r2489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2512, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2513, %r2489, %r2512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2516, %r2508, %r2513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2519, %r868, %r2510, %r2500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2524, %r2500, %r2523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2527, %r2519, %r2524;
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2534, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r2532, %r857, %r2534, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2535, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2543, %r868, %r2534, %r2546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2547, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2548, %r2546, %r2547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2551, %r2543, %r2548;
	// end inline asm
	shr.u32 	%r2556, %r2534, 8;
	// begin inline asm
	lop3.b32 %r2554, %r857, %r2556, %r2535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2558, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2559, %r2535, %r2558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2562, %r2554, %r2559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2565, %r868, %r2556, %r2546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2570, %r2546, %r2569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2573, %r2565, %r2570;
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2580, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r2578, %r857, %r2580, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2581, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2589, %r868, %r2580, %r2592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2593, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2594, %r2592, %r2593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2597, %r2589, %r2594;
	// end inline asm
	shr.u32 	%r2602, %r2580, 8;
	// begin inline asm
	lop3.b32 %r2600, %r857, %r2602, %r2581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2604, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2605, %r2581, %r2604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2608, %r2600, %r2605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2611, %r868, %r2602, %r2592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2616, %r2592, %r2615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2619, %r2611, %r2616;
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2638, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2626, %r16317, -2004318072;
	// begin inline asm
	lop3.b32 %r2624, %r857, %r2626, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2627, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2635, %r868, %r2626, %r2638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2638, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	shr.u32 	%r2648, %r2626, 8;
	// begin inline asm
	lop3.b32 %r2646, %r857, %r2648, %r2627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2650, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2651, %r2627, %r2650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2654, %r2646, %r2651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2657, %r868, %r2648, %r2638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2662, %r2638, %r2661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2665, %r2657, %r2662;
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2684, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2672, %r16318, -2004318072;
	// begin inline asm
	lop3.b32 %r2670, %r857, %r2672, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2673, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2681, %r868, %r2672, %r2684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2684, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	shr.u32 	%r2694, %r2672, 8;
	// begin inline asm
	lop3.b32 %r2692, %r857, %r2694, %r2673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2696, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2697, %r2673, %r2696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2700, %r2692, %r2697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2703, %r868, %r2694, %r2684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2708, %r2684, %r2707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2711, %r2703, %r2708;
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2730, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2718, %r16319, -2004318072;
	// begin inline asm
	lop3.b32 %r2716, %r857, %r2718, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2719, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2727, %r868, %r2718, %r2730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2730, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	shr.u32 	%r2740, %r2718, 8;
	// begin inline asm
	lop3.b32 %r2738, %r857, %r2740, %r2719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2742, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2743, %r2719, %r2742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2746, %r2738, %r2743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2749, %r868, %r2740, %r2730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2753, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2754, %r2730, %r2753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2757, %r2749, %r2754;
	// end inline asm
	// begin inline asm
	mov.b32 %r2765, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r2776, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r2764, %r16320, -2004318072;
	// begin inline asm
	lop3.b32 %r2762, %r857, %r2764, %r2765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2767, %r2765, %r2766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2770, %r2762, %r2767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2773, %r868, %r2764, %r2776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2777, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2778, %r2776, %r2777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2781, %r2773, %r2778;
	// end inline asm
	shr.u32 	%r2786, %r2764, 8;
	// begin inline asm
	lop3.b32 %r2784, %r857, %r2786, %r2765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2788, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2789, %r2765, %r2788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2792, %r2784, %r2789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2795, %r868, %r2786, %r2776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2799, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2800, %r2776, %r2799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2803, %r2795, %r2800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2941, %r339, %r2448, %r2248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r339, %r2459, %r2254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r339, %r2470, %r2260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r339, %r2481, %r2266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r339, %r2494, %r2272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r339, %r2505, %r2278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r339, %r2516, %r2284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r339, %r2527, %r2290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r339, %r2540, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r339, %r2551, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r339, %r2562, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r339, %r2573, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r339, %r2586, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r339, %r2597, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r339, %r2608, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r339, %r2619, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r357, %r2632, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r357, %r2643, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r357, %r2654, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r357, %r2665, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r357, %r2678, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r357, %r2689, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r357, %r2700, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r357, %r2711, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r357, %r2724, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r357, %r2735, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r357, %r2746, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r357, %r2757, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r357, %r2770, %r2416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r357, %r2781, %r2422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r357, %r2792, %r2428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r357, %r2803, %r2434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2934, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2936, %r2934, %r2938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2939, %r396, %r2941, %r2936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2943, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2945, %r2943, %r2947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r396, %r2950, %r2945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2952, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2954, %r2952, %r2956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r396, %r2959, %r2954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2961, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2963, %r2961, %r2965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r396, %r2968, %r2963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2970, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2972, %r2970, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r396, %r2977, %r2972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r396, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r396, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r396, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r399, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r399, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r399, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r399, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r399, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r399, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r399, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r399, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3078, %r402, %r2941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r396, %r2938, %r3078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3085, %r402, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r396, %r2947, %r3085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3092, %r402, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3095, %r396, %r2956, %r3092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3099, %r402, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3102, %r396, %r2965, %r3099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3106, %r402, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r396, %r2974, %r3106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r402, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r396, %r2983, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r402, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r396, %r2992, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r402, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r396, %r3001, %r3127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r405, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r399, %r3010, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r405, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r399, %r3019, %r3141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3148, %r405, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r399, %r3028, %r3148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3155, %r405, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r399, %r3037, %r3155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3162, %r405, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r399, %r3046, %r3162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3169, %r405, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r399, %r3055, %r3169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3176, %r405, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r399, %r3064, %r3176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3183, %r405, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3186, %r399, %r3073, %r3183;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3357, %r3354}, {%r463, %r469, %r466, %r472}, {%r2939, %r3081}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3366, %r3363}, {%r463, %r469, %r466, %r472}, {%r2948, %r3088}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3375, %r3372}, {%r463, %r469, %r466, %r472}, {%r2957, %r3095}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3384, %r3381}, {%r463, %r469, %r466, %r472}, {%r2966, %r3102}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3393, %r3390}, {%r463, %r469, %r466, %r472}, {%r2975, %r3109}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r463, %r469, %r466, %r472}, {%r2984, %r3116}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r463, %r469, %r466, %r472}, {%r2993, %r3123}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r463, %r469, %r466, %r472}, {%r3002, %r3130}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r463, %r469, %r466, %r472}, {%r3011, %r3137}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r463, %r469, %r466, %r472}, {%r3020, %r3144}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r463, %r469, %r466, %r472}, {%r3029, %r3151}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r463, %r469, %r466, %r472}, {%r3038, %r3158}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r463, %r469, %r466, %r472}, {%r3047, %r3165}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r463, %r469, %r466, %r472}, {%r3056, %r3172}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3483, %r3480}, {%r463, %r469, %r466, %r472}, {%r3065, %r3179}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3492, %r3489}, {%r463, %r469, %r466, %r472}, {%r3074, %r3186}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3350, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3352, %r3350, %r3354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3355, %r513, %r3357, %r3352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3359, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3361, %r3359, %r3363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3364, %r513, %r3366, %r3361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3368, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3370, %r3368, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r513, %r3375, %r3370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3377, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3379, %r3377, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r513, %r3384, %r3379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r513, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r513, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r513, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r513, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r513, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r513, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r513, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r513, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r513, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r513, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3476, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r3476, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r513, %r3483, %r3478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3485, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r3485, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r513, %r3492, %r3487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r516, %r3357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r513, %r3354, %r3494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r516, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r513, %r3363, %r3501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r516, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r513, %r3372, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r516, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r513, %r3381, %r3515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3522, %r516, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r513, %r3390, %r3522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r516, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r513, %r3399, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r516, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r513, %r3408, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r516, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r513, %r3417, %r3543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r516, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r513, %r3426, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r516, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r513, %r3435, %r3557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3564, %r516, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r513, %r3444, %r3564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r516, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r513, %r3453, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r516, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r513, %r3462, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r516, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r513, %r3471, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r516, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r513, %r3480, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r516, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r513, %r3489, %r3599;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3895, %r3898}, {%r551, %r557, %r554, %r560}, {%r3355, %r3497}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3901, %r3904}, {%r551, %r557, %r554, %r560}, {%r3364, %r3504}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3907, %r3910}, {%r551, %r557, %r554, %r560}, {%r3373, %r3511}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3913, %r3916}, {%r551, %r557, %r554, %r560}, {%r3382, %r3518}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3919, %r3922}, {%r551, %r557, %r554, %r560}, {%r3391, %r3525}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3925, %r3928}, {%r551, %r557, %r554, %r560}, {%r3400, %r3532}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3931, %r3934}, {%r551, %r557, %r554, %r560}, {%r3409, %r3539}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3937, %r3940}, {%r551, %r557, %r554, %r560}, {%r3418, %r3546}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3896, %r3899}, {%r551, %r557, %r554, %r560}, {%r3427, %r3553}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3902, %r3905}, {%r551, %r557, %r554, %r560}, {%r3436, %r3560}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3908, %r3911}, {%r551, %r557, %r554, %r560}, {%r3445, %r3567}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3914, %r3917}, {%r551, %r557, %r554, %r560}, {%r3454, %r3574}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3920, %r3923}, {%r551, %r557, %r554, %r560}, {%r3463, %r3581}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3926, %r3929}, {%r551, %r557, %r554, %r560}, {%r3472, %r3588}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3932, %r3935}, {%r551, %r557, %r554, %r560}, {%r3481, %r3595}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r551, %r557, %r554, %r560}, {%r3490, %r3602}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3894, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3897, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3900, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3903, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3906, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3909, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3912, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3915, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3918, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3921, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3924, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3927, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3930, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3933, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3936, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3942, %r3895, %r3896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3945, %r3898, %r3899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3948, %r3901, %r3902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3951, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3954, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3957, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3960, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3963, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3966, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3969, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3972, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3975, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3978, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3981, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3984, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3990, %r125, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3993, %r125, %r3897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3996, %r125, %r3900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r125, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r125, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r125, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r125, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r125, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r125, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r125, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r125, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r125, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r125, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r125, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r125, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r125, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r126, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r126, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r126, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r126, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r126, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r126, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r126, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r126, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r126, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r126, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r126, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r126, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r126, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r126, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r126, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r126, %r3987;
	// end inline asm
	mov.u16 	%rs430, -14592;
	// begin inline asm
	mov.b32 %r4086, {%rs430, %rs430};
	// end inline asm
	mov.u16 	%rs432, 18176;
	// begin inline asm
	mov.b32 %r4087, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4088, %r3990, %r4086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4091, %r4088, %r4087;
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4096, %r3993, %r4094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4099, %r4096, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4104, %r3996, %r4102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4107, %r4104, %r4103;
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4112, %r3999, %r4110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4115, %r4112, %r4111;
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4120, %r4002, %r4118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4123, %r4120, %r4119;
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4128, %r4005, %r4126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4131, %r4128, %r4127;
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4136, %r4008, %r4134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4139, %r4136, %r4135;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4144, %r4011, %r4142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4147, %r4144, %r4143;
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4152, %r4014, %r4150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4155, %r4152, %r4151;
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4160, %r4017, %r4158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4163, %r4160, %r4159;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4168, %r4020, %r4166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4171, %r4168, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4176, %r4023, %r4174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4179, %r4176, %r4175;
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4184, %r4026, %r4182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4187, %r4184, %r4183;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4192, %r4029, %r4190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4195, %r4192, %r4191;
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4200, %r4032, %r4198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4203, %r4200, %r4199;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4208, %r4035, %r4206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4211, %r4208, %r4207;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4216, %r4038, %r4214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4219, %r4216, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4224, %r4041, %r4222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4227, %r4224, %r4223;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4232, %r4044, %r4230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4235, %r4232, %r4231;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4240, %r4047, %r4238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4243, %r4240, %r4239;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4248, %r4050, %r4246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4251, %r4248, %r4247;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4256, %r4053, %r4254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4259, %r4256, %r4255;
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4264, %r4056, %r4262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4267, %r4264, %r4263;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4272, %r4059, %r4270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4275, %r4272, %r4271;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4280, %r4062, %r4278;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4283, %r4280, %r4279;
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4288, %r4065, %r4286;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4291, %r4288, %r4287;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4296, %r4068, %r4294;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4299, %r4296, %r4295;
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4304, %r4071, %r4302;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4307, %r4304, %r4303;
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4312, %r4074, %r4310;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4315, %r4312, %r4311;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4320, %r4077, %r4318;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4323, %r4320, %r4319;
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4328, %r4080, %r4326;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4331, %r4328, %r4327;
	// end inline asm
	// begin inline asm
	mov.b32 %r4334, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4336, %r4083, %r4334;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4339, %r4336, %r4335;
	// end inline asm
	// begin inline asm
	mov.b32 %r4345, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4344, %r4345, %r4343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4091, %r4344;
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4351, %r4345, %r4350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4099, %r4351;
	// end inline asm
	// begin inline asm
	mov.b32 %r4357, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4358, %r4345, %r4357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4107, %r4358;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4345, %r4364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4115, %r4365;
	// end inline asm
	mov.u32 	%r4374, 25152;
	// begin inline asm
	prmt.b32 %r4371, %r4347, %r4361, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4375, %r4354, %r4368, %r4374;
	// end inline asm
	shl.b32 	%r4382, %r4375, 4;
	mov.u32 	%r4380, 252645135;
	// begin inline asm
	lop3.b32 %r4379, %r4380, %r4371, %r4382, 202;
	// end inline asm
	xor.b32  	%r16166, %r4379, -2004318072;
	// begin inline asm
	mov.b32 %r4386, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4384, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4385, %r4386, %r4384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4123, %r4385;
	// end inline asm
	// begin inline asm
	mov.b32 %r4391, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4392, %r4386, %r4391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4131, %r4392;
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4386, %r4398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4139, %r4399;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4386, %r4405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4147, %r4406;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4412, %r4388, %r4402, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4416, %r4395, %r4409, %r4374;
	// end inline asm
	shl.b32 	%r4423, %r4416, 4;
	// begin inline asm
	lop3.b32 %r4420, %r4380, %r4412, %r4423, 202;
	// end inline asm
	xor.b32  	%r16167, %r4420, -2004318072;
	// begin inline asm
	mov.b32 %r4427, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4425, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4426, %r4427, %r4425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4155, %r4426;
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4427, %r4432;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4163, %r4433;
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4427, %r4439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4171, %r4440;
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4427, %r4446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4179, %r4447;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4453, %r4429, %r4443, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4457, %r4436, %r4450, %r4374;
	// end inline asm
	shl.b32 	%r4464, %r4457, 4;
	// begin inline asm
	lop3.b32 %r4461, %r4380, %r4453, %r4464, 202;
	// end inline asm
	xor.b32  	%r16168, %r4461, -2004318072;
	// begin inline asm
	mov.b32 %r4468, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4466, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4467, %r4468, %r4466;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4187, %r4467;
	// end inline asm
	// begin inline asm
	mov.b32 %r4473, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4468, %r4473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4195, %r4474;
	// end inline asm
	// begin inline asm
	mov.b32 %r4480, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4468, %r4480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4203, %r4481;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4468, %r4487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4211, %r4488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4494, %r4470, %r4484, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4498, %r4477, %r4491, %r4374;
	// end inline asm
	shl.b32 	%r4505, %r4498, 4;
	// begin inline asm
	lop3.b32 %r4502, %r4380, %r4494, %r4505, 202;
	// end inline asm
	xor.b32  	%r16169, %r4502, -2004318072;
	// begin inline asm
	mov.b32 %r4509, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4507, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4508, %r4509, %r4507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4219, %r4508;
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4509, %r4514;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4227, %r4515;
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4509, %r4521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4235, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4509, %r4528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4243, %r4529;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4535, %r4511, %r4525, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4539, %r4518, %r4532, %r4374;
	// end inline asm
	shl.b32 	%r4546, %r4539, 4;
	// begin inline asm
	lop3.b32 %r4543, %r4380, %r4535, %r4546, 202;
	// end inline asm
	xor.b32  	%r16170, %r4543, -2004318072;
	// begin inline asm
	mov.b32 %r4550, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4549, %r4550, %r4548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4251, %r4549;
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4550, %r4555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4259, %r4556;
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4550, %r4562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4267, %r4563;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4550, %r4569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4275, %r4570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4576, %r4552, %r4566, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4580, %r4559, %r4573, %r4374;
	// end inline asm
	shl.b32 	%r4587, %r4580, 4;
	// begin inline asm
	lop3.b32 %r4584, %r4380, %r4576, %r4587, 202;
	// end inline asm
	xor.b32  	%r16171, %r4584, -2004318072;
	// begin inline asm
	mov.b32 %r4591, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4589, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4590, %r4591, %r4589;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4283, %r4590;
	// end inline asm
	// begin inline asm
	mov.b32 %r4596, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4597, %r4591, %r4596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4291, %r4597;
	// end inline asm
	// begin inline asm
	mov.b32 %r4603, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4604, %r4591, %r4603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4299, %r4604;
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4611, %r4591, %r4610;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4307, %r4611;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4617, %r4593, %r4607, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4621, %r4600, %r4614, %r4374;
	// end inline asm
	shl.b32 	%r4628, %r4621, 4;
	// begin inline asm
	lop3.b32 %r4625, %r4380, %r4617, %r4628, 202;
	// end inline asm
	xor.b32  	%r16172, %r4625, -2004318072;
	// begin inline asm
	mov.b32 %r4632, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4630, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4631, %r4632, %r4630;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4315, %r4631;
	// end inline asm
	// begin inline asm
	mov.b32 %r4637, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4638, %r4632, %r4637;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4323, %r4638;
	// end inline asm
	// begin inline asm
	mov.b32 %r4644, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4645, %r4632, %r4644;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4331, %r4645;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4632, %r4651;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4339, %r4652;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4658, %r4634, %r4648, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4662, %r4641, %r4655, %r4374;
	// end inline asm
	shl.b32 	%r4669, %r4662, 4;
	// begin inline asm
	lop3.b32 %r4666, %r4380, %r4658, %r4669, 202;
	// end inline asm
	xor.b32  	%r16173, %r4666, -2004318072;
	add.s32 	%r16174, %r75, %r16118;
	mul.wide.u32 	%rd95, %r16174, 4;
	add.s64 	%rd96, %rd35, %rd95;
	st.shared.u32 	[%rd96], %r16166;
	add.s32 	%r16175, %r76, %r16118;
	mul.wide.u32 	%rd97, %r16175, 4;
	add.s64 	%rd98, %rd35, %rd97;
	st.shared.u32 	[%rd98], %r16167;
	add.s32 	%r16176, %r77, %r16118;
	mul.wide.u32 	%rd99, %r16176, 4;
	add.s64 	%rd100, %rd35, %rd99;
	st.shared.u32 	[%rd100], %r16168;
	add.s32 	%r16177, %r78, %r16118;
	mul.wide.u32 	%rd101, %r16177, 4;
	add.s64 	%rd102, %rd35, %rd101;
	st.shared.u32 	[%rd102], %r16169;
	add.s32 	%r16178, %r79, %r16118;
	mul.wide.u32 	%rd103, %r16178, 4;
	add.s64 	%rd104, %rd35, %rd103;
	st.shared.u32 	[%rd104], %r16170;
	add.s32 	%r16179, %r80, %r16118;
	mul.wide.u32 	%rd105, %r16179, 4;
	add.s64 	%rd106, %rd35, %rd105;
	st.shared.u32 	[%rd106], %r16171;
	add.s32 	%r16180, %r81, %r16118;
	mul.wide.u32 	%rd107, %r16180, 4;
	add.s64 	%rd108, %rd35, %rd107;
	st.shared.u32 	[%rd108], %r16172;
	add.s32 	%r16181, %r82, %r16118;
	mul.wide.u32 	%rd109, %r16181, 4;
	add.s64 	%rd110, %rd35, %rd109;
	st.shared.u32 	[%rd110], %r16173;
	ld.shared.u32 	%r16297, [%rd80];
	ld.shared.u32 	%r16298, [%rd82];
	ld.shared.u32 	%r16299, [%rd84];
	ld.shared.u32 	%r16300, [%rd86];
	ld.shared.u32 	%r16309, [%rd88];
	ld.shared.u32 	%r16310, [%rd90];
	ld.shared.u32 	%r16311, [%rd92];
	ld.shared.u32 	%r16312, [%rd94];
	// begin inline asm
	mov.b32 %r4675, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4674, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r4672, %r857, %r4674, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4675, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4683, %r868, %r4674, %r4686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4686, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	shr.u32 	%r4696, %r4674, 8;
	// begin inline asm
	lop3.b32 %r4694, %r857, %r4696, %r4675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4698, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4699, %r4675, %r4698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4702, %r4694, %r4699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4705, %r868, %r4696, %r4686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4710, %r4686, %r4709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4713, %r4705, %r4710;
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4720, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r4718, %r857, %r4720, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4721, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4729, %r868, %r4720, %r4732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4732, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	shr.u32 	%r4742, %r4720, 8;
	// begin inline asm
	lop3.b32 %r4740, %r857, %r4742, %r4721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4744, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4745, %r4721, %r4744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4748, %r4740, %r4745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4751, %r868, %r4742, %r4732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4756, %r4732, %r4755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4759, %r4751, %r4756;
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4766, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r4764, %r857, %r4766, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4767, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r868, %r4766, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4778, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	shr.u32 	%r4788, %r4766, 8;
	// begin inline asm
	lop3.b32 %r4786, %r857, %r4788, %r4767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4790, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4791, %r4767, %r4790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4794, %r4786, %r4791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4797, %r868, %r4788, %r4778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4802, %r4778, %r4801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4805, %r4797, %r4802;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4812, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r4810, %r857, %r4812, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4813, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4821, %r868, %r4812, %r4824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4824, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	shr.u32 	%r4834, %r4812, 8;
	// begin inline asm
	lop3.b32 %r4832, %r857, %r4834, %r4813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4836, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4837, %r4813, %r4836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4840, %r4832, %r4837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4843, %r868, %r4834, %r4824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4848, %r4824, %r4847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4851, %r4843, %r4848;
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4858, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r4856, %r857, %r4858, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4859, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4867, %r868, %r4858, %r4870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4870, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	shr.u32 	%r4880, %r4858, 8;
	// begin inline asm
	lop3.b32 %r4878, %r857, %r4880, %r4859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4882, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4883, %r4859, %r4882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4886, %r4878, %r4883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4889, %r868, %r4880, %r4870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4894, %r4870, %r4893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4897, %r4889, %r4894;
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4904, %r16310, -2004318072;
	// begin inline asm
	lop3.b32 %r4902, %r857, %r4904, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4905, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4913, %r868, %r4904, %r4916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4916, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	shr.u32 	%r4926, %r4904, 8;
	// begin inline asm
	lop3.b32 %r4924, %r857, %r4926, %r4905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4928, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4929, %r4905, %r4928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4932, %r4924, %r4929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4935, %r868, %r4926, %r4916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4940, %r4916, %r4939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4943, %r4935, %r4940;
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r4962, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4950, %r16311, -2004318072;
	// begin inline asm
	lop3.b32 %r4948, %r857, %r4950, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4951, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4959, %r868, %r4950, %r4962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4962, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	shr.u32 	%r4972, %r4950, 8;
	// begin inline asm
	lop3.b32 %r4970, %r857, %r4972, %r4951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4974, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4975, %r4951, %r4974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4978, %r4970, %r4975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4981, %r868, %r4972, %r4962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4985, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4986, %r4962, %r4985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4989, %r4981, %r4986;
	// end inline asm
	// begin inline asm
	mov.b32 %r4997, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5008, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r4996, %r16312, -2004318072;
	// begin inline asm
	lop3.b32 %r4994, %r857, %r4996, %r4997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4999, %r4997, %r4998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5002, %r4994, %r4999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5005, %r868, %r4996, %r5008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5009, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5010, %r5008, %r5009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5013, %r5005, %r5010;
	// end inline asm
	shr.u32 	%r5018, %r4996, 8;
	// begin inline asm
	lop3.b32 %r5016, %r857, %r5018, %r4997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5020, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5021, %r4997, %r5020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5024, %r5016, %r5021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5027, %r868, %r5018, %r5008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5031, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5032, %r5008, %r5031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5035, %r5027, %r5032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5038, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5040, %r5038, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5043, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5045, %r5043, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r4989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r5002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r5013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r5024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r5035;
	// end inline asm
	// begin inline asm
	mov.b32 %r5203, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5214, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r857, %r1882, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5203, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5211, %r868, %r1882, %r5214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5215, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5216, %r5214, %r5215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5219, %r5211, %r5216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5222, %r857, %r1904, %r5203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5226, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5227, %r5203, %r5226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5230, %r5222, %r5227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5233, %r868, %r1904, %r5214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5237, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5238, %r5214, %r5237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5241, %r5233, %r5238;
	// end inline asm
	// begin inline asm
	mov.b32 %r5249, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5260, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r857, %r1928, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5249, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5257, %r868, %r1928, %r5260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5261, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5262, %r5260, %r5261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5265, %r5257, %r5262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5268, %r857, %r1950, %r5249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5272, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5273, %r5249, %r5272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5276, %r5268, %r5273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5279, %r868, %r1950, %r5260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5283, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5284, %r5260, %r5283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5287, %r5279, %r5284;
	// end inline asm
	// begin inline asm
	mov.b32 %r5295, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5306, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r857, %r1974, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5295, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5303, %r868, %r1974, %r5306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5307, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5308, %r5306, %r5307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5311, %r5303, %r5308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5314, %r857, %r1996, %r5295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5318, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5319, %r5295, %r5318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5322, %r5314, %r5319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5325, %r868, %r1996, %r5306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5329, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5330, %r5306, %r5329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5333, %r5325, %r5330;
	// end inline asm
	// begin inline asm
	mov.b32 %r5341, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5352, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r857, %r2020, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5341, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5349, %r868, %r2020, %r5352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5353, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5354, %r5352, %r5353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5357, %r5349, %r5354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5360, %r857, %r2042, %r5341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5364, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5365, %r5341, %r5364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5368, %r5360, %r5365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5371, %r868, %r2042, %r5352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5375, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5376, %r5352, %r5375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5379, %r5371, %r5376;
	// end inline asm
	// begin inline asm
	mov.b32 %r5387, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5398, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r857, %r2066, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5387, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5395, %r868, %r2066, %r5398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5399, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5400, %r5398, %r5399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5403, %r5395, %r5400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5406, %r857, %r2088, %r5387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5410, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5411, %r5387, %r5410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5414, %r5406, %r5411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5417, %r868, %r2088, %r5398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5421, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5422, %r5398, %r5421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5425, %r5417, %r5422;
	// end inline asm
	// begin inline asm
	mov.b32 %r5433, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5444, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r857, %r2112, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5433, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5441, %r868, %r2112, %r5444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5445, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5446, %r5444, %r5445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5449, %r5441, %r5446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5452, %r857, %r2134, %r5433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5456, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5457, %r5433, %r5456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5460, %r5452, %r5457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5463, %r868, %r2134, %r5444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5467, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5468, %r5444, %r5467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5471, %r5463, %r5468;
	// end inline asm
	// begin inline asm
	mov.b32 %r5479, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5490, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r857, %r2158, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5479, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5487, %r868, %r2158, %r5490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5491, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5492, %r5490, %r5491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5495, %r5487, %r5492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5498, %r857, %r2180, %r5479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5502, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5503, %r5479, %r5502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5506, %r5498, %r5503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5509, %r868, %r2180, %r5490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5513, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5514, %r5490, %r5513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5517, %r5509, %r5514;
	// end inline asm
	// begin inline asm
	mov.b32 %r5525, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5536, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5522, %r857, %r2204, %r5525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5526, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5527, %r5525, %r5526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5530, %r5522, %r5527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5533, %r868, %r2204, %r5536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5537, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5538, %r5536, %r5537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5541, %r5533, %r5538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5544, %r857, %r2226, %r5525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5548, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5549, %r5525, %r5548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5552, %r5544, %r5549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5555, %r868, %r2226, %r5536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5559, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5560, %r5536, %r5559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5563, %r5555, %r5560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r267, %r5208, %r5040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r267, %r5219, %r5045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r267, %r5230, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r267, %r5241, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r267, %r5254, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r267, %r5265, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5590, %r267, %r5276, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r267, %r5287, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r267, %r5300, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r267, %r5311, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r267, %r5322, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r267, %r5333, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r267, %r5346, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r267, %r5357, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r267, %r5368, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r267, %r5379, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r285, %r5392, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r285, %r5403, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r285, %r5414, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r285, %r5425, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r285, %r5438, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r285, %r5449, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5654, %r285, %r5460, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5658, %r285, %r5471, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5662, %r285, %r5484, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5666, %r285, %r5495, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5670, %r285, %r5506, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5674, %r285, %r5517, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5678, %r285, %r5530, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5682, %r285, %r5541, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5686, %r285, %r5552, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5690, %r285, %r5563, %r5195;
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r857, %r2442, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5699, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5707, %r868, %r2442, %r5710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5712, %r5710, %r5711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5715, %r5707, %r5712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5718, %r857, %r2464, %r5699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5722, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5723, %r5699, %r5722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5726, %r5718, %r5723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5729, %r868, %r2464, %r5710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5734, %r5710, %r5733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5737, %r5729, %r5734;
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r857, %r2488, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5745, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5753, %r868, %r2488, %r5756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5756, %r5757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5761, %r5753, %r5758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5764, %r857, %r2510, %r5745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5768, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5769, %r5745, %r5768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5772, %r5764, %r5769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5775, %r868, %r2510, %r5756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5780, %r5756, %r5779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5783, %r5775, %r5780;
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r857, %r2534, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5791, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5799, %r868, %r2534, %r5802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5802, %r5803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5807, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5810, %r857, %r2556, %r5791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5815, %r5791, %r5814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5818, %r5810, %r5815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5821, %r868, %r2556, %r5802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5826, %r5802, %r5825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5829, %r5821, %r5826;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r857, %r2580, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5837, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5845, %r868, %r2580, %r5848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5848, %r5849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5853, %r5845, %r5850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5856, %r857, %r2602, %r5837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5861, %r5837, %r5860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5864, %r5856, %r5861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5867, %r868, %r2602, %r5848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5848, %r5871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5875, %r5867, %r5872;
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r857, %r2626, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5883, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5891, %r868, %r2626, %r5894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5894, %r5895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5899, %r5891, %r5896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5902, %r857, %r2648, %r5883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5883, %r5906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5910, %r5902, %r5907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5913, %r868, %r2648, %r5894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5918, %r5894, %r5917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5921, %r5913, %r5918;
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r857, %r2672, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5929, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5937, %r868, %r2672, %r5940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5940, %r5941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5945, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5948, %r857, %r2694, %r5929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5929, %r5952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5956, %r5948, %r5953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5959, %r868, %r2694, %r5940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5963, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5964, %r5940, %r5963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5967, %r5959, %r5964;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r857, %r2718, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5975, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5983, %r868, %r2718, %r5986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5986, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5994, %r857, %r2740, %r5975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5975, %r5998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6002, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6005, %r868, %r2740, %r5986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6009, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6010, %r5986, %r6009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6013, %r6005, %r6010;
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6032, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6018, %r857, %r2764, %r6021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6023, %r6021, %r6022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6026, %r6018, %r6023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6029, %r868, %r2764, %r6032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6034, %r6032, %r6033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6037, %r6029, %r6034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6040, %r857, %r2786, %r6021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6044, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6045, %r6021, %r6044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6048, %r6040, %r6045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6051, %r868, %r2786, %r6032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6055, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6056, %r6032, %r6055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6059, %r6051, %r6056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6062, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6064, %r6062, %r5704, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6068, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6070, %r6068, %r5715, %r5570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6074, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6076, %r6074, %r5726, %r5574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6080, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6082, %r6080, %r5737, %r5578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6086, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6088, %r6086, %r5750, %r5582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6092, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6094, %r6092, %r5761, %r5586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6098, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6100, %r6098, %r5772, %r5590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6106, %r6104, %r5783, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5796, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5807, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5818, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5829, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5842, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5853, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5864, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5875, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5888, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5899, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5910, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5921, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5934, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5945, %r5650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5956, %r5654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5967, %r5658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5980, %r5662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r5991, %r5666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r6002, %r5670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r6013, %r5674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r6026, %r5678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6238, %r6236, %r6037, %r5682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6244, %r6242, %r6048, %r5686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6250, %r6248, %r6059, %r5690;
	// end inline asm
	// begin inline asm
	mov.b32 %r6259, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6270, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r857, %r858, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6259, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r868, %r858, %r6270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6270, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6278, %r857, %r880, %r6259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6282, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6283, %r6259, %r6282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6286, %r6278, %r6283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6289, %r868, %r880, %r6270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6294, %r6270, %r6293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6297, %r6289, %r6294;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r857, %r904, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6305, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r868, %r904, %r6316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6316, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6324, %r857, %r926, %r6305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6328, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6329, %r6305, %r6328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6332, %r6324, %r6329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6335, %r868, %r926, %r6316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6340, %r6316, %r6339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6343, %r6335, %r6340;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r857, %r950, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6351, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r868, %r950, %r6362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6362, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6370, %r857, %r972, %r6351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6374, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6375, %r6351, %r6374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6378, %r6370, %r6375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6381, %r868, %r972, %r6362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6386, %r6362, %r6385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6389, %r6381, %r6386;
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r857, %r996, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6397, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r868, %r996, %r6408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6408, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6416, %r857, %r1018, %r6397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6420, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6421, %r6397, %r6420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6424, %r6416, %r6421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6427, %r868, %r1018, %r6408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6432, %r6408, %r6431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6435, %r6427, %r6432;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r857, %r1042, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6443, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r868, %r1042, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6454, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6462, %r857, %r1064, %r6443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6466, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6467, %r6443, %r6466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6470, %r6462, %r6467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6473, %r868, %r1064, %r6454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6478, %r6454, %r6477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6481, %r6473, %r6478;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r857, %r1088, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6489, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r868, %r1088, %r6500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6500, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6508, %r857, %r1110, %r6489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6512, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6513, %r6489, %r6512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6516, %r6508, %r6513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6519, %r868, %r1110, %r6500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6524, %r6500, %r6523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6527, %r6519, %r6524;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r857, %r1134, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6535, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r868, %r1134, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6546, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r857, %r1156, %r6535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6535, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r868, %r1156, %r6546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6546, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	mov.b32 %r6581, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6578, %r857, %r1180, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6583, %r6581, %r6582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6586, %r6578, %r6583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6589, %r868, %r1180, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6594, %r6592, %r6593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6597, %r6589, %r6594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6600, %r857, %r1202, %r6581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6605, %r6581, %r6604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6608, %r6600, %r6605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6611, %r868, %r1202, %r6592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6615, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6616, %r6592, %r6615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6619, %r6611, %r6616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r339, %r6264, %r6064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6754, %r339, %r6275, %r6070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r339, %r6286, %r6076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r339, %r6297, %r6082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r339, %r6310, %r6088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r339, %r6321, %r6094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r339, %r6332, %r6100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r339, %r6343, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r339, %r6356, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r339, %r6367, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r339, %r6378, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r339, %r6389, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r339, %r6402, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r339, %r6413, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r339, %r6424, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r339, %r6435, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r357, %r6448, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r357, %r6459, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r357, %r6470, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r357, %r6481, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r357, %r6494, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r357, %r6505, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r357, %r6516, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r357, %r6527, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r357, %r6540, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r357, %r6551, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r357, %r6562, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r357, %r6573, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r357, %r6586, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r357, %r6597, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r357, %r6608, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r357, %r6619, %r6250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6750, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6752, %r6750, %r6754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6755, %r396, %r6757, %r6752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6759, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6761, %r6759, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r396, %r6766, %r6761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6770, %r6768, %r6772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r396, %r6775, %r6770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6779, %r6777, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r396, %r6784, %r6779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6788, %r6786, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r396, %r6793, %r6788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r396, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r396, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r396, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r399, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r399, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r399, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r399, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r399, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r399, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6876, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r6876, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r399, %r6883, %r6878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6885, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r6885, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r399, %r6892, %r6887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6894, %r402, %r6757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6897, %r396, %r6754, %r6894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6901, %r402, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r396, %r6763, %r6901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6908, %r402, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6911, %r396, %r6772, %r6908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6915, %r402, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6918, %r396, %r6781, %r6915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6922, %r402, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r396, %r6790, %r6922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r402, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r396, %r6799, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r402, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r396, %r6808, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r402, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r396, %r6817, %r6943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r405, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r399, %r6826, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r405, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r399, %r6835, %r6957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r405, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r399, %r6844, %r6964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r405, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r399, %r6853, %r6971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r405, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r399, %r6862, %r6978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r405, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r399, %r6871, %r6985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r405, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r399, %r6880, %r6992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r405, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r399, %r6889, %r6999;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7173, %r7170}, {%r463, %r469, %r466, %r472}, {%r6755, %r6897}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7182, %r7179}, {%r463, %r469, %r466, %r472}, {%r6764, %r6904}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7191, %r7188}, {%r463, %r469, %r466, %r472}, {%r6773, %r6911}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7200, %r7197}, {%r463, %r469, %r466, %r472}, {%r6782, %r6918}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r463, %r469, %r466, %r472}, {%r6791, %r6925}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r463, %r469, %r466, %r472}, {%r6800, %r6932}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r463, %r469, %r466, %r472}, {%r6809, %r6939}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r463, %r469, %r466, %r472}, {%r6818, %r6946}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r463, %r469, %r466, %r472}, {%r6827, %r6953}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r463, %r469, %r466, %r472}, {%r6836, %r6960}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r463, %r469, %r466, %r472}, {%r6845, %r6967}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r463, %r469, %r466, %r472}, {%r6854, %r6974}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r463, %r469, %r466, %r472}, {%r6863, %r6981}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r463, %r469, %r466, %r472}, {%r6872, %r6988}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r463, %r469, %r466, %r472}, {%r6881, %r6995}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r463, %r469, %r466, %r472}, {%r6890, %r7002}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7166, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7168, %r7166, %r7170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7171, %r513, %r7173, %r7168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7175, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7177, %r7175, %r7179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7180, %r513, %r7182, %r7177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7184, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r7184, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r513, %r7191, %r7186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7193, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r7193, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r513, %r7200, %r7195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r513, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r513, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r513, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r513, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r513, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r513, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r513, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r513, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r513, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r513, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r513, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r513, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r516, %r7173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r513, %r7170, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r516, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r513, %r7179, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r516, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r513, %r7188, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r516, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r513, %r7197, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r516, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r513, %r7206, %r7338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r516, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r513, %r7215, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r516, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r513, %r7224, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r516, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r513, %r7233, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r516, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r513, %r7242, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r516, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r513, %r7251, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r516, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r513, %r7260, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r516, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r513, %r7269, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r516, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r513, %r7278, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r516, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r513, %r7287, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r516, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r513, %r7296, %r7408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r516, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7418, %r513, %r7305, %r7415;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7711, %r7714}, {%r551, %r557, %r554, %r560}, {%r7171, %r7313}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7717, %r7720}, {%r551, %r557, %r554, %r560}, {%r7180, %r7320}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7723, %r7726}, {%r551, %r557, %r554, %r560}, {%r7189, %r7327}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7729, %r7732}, {%r551, %r557, %r554, %r560}, {%r7198, %r7334}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7735, %r7738}, {%r551, %r557, %r554, %r560}, {%r7207, %r7341}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7741, %r7744}, {%r551, %r557, %r554, %r560}, {%r7216, %r7348}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7747, %r7750}, {%r551, %r557, %r554, %r560}, {%r7225, %r7355}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7753, %r7756}, {%r551, %r557, %r554, %r560}, {%r7234, %r7362}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7712, %r7715}, {%r551, %r557, %r554, %r560}, {%r7243, %r7369}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7718, %r7721}, {%r551, %r557, %r554, %r560}, {%r7252, %r7376}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7724, %r7727}, {%r551, %r557, %r554, %r560}, {%r7261, %r7383}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7730, %r7733}, {%r551, %r557, %r554, %r560}, {%r7270, %r7390}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7736, %r7739}, {%r551, %r557, %r554, %r560}, {%r7279, %r7397}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7742, %r7745}, {%r551, %r557, %r554, %r560}, {%r7288, %r7404}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7748, %r7751}, {%r551, %r557, %r554, %r560}, {%r7297, %r7411}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r551, %r557, %r554, %r560}, {%r7306, %r7418}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7758, %r7711, %r7712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7761, %r7714, %r7715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7764, %r7717, %r7718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7767, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7770, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7773, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7776, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7779, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7782, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7785, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7788, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7791, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7794, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7797, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7800, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7806, %r125, %r7710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7809, %r125, %r7713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7812, %r125, %r7716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r125, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r125, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r125, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r125, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r125, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r125, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r125, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r125, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r125, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r125, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r125, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r125, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r125, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r126, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r126, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r126, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r126, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r126, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r126, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r126, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r126, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r126, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r126, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r126, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r126, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r126, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r126, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r126, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r126, %r7803;
	// end inline asm
	// begin inline asm
	mov.b32 %r7902, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7903, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7904, %r7806, %r7902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7907, %r7904, %r7903;
	// end inline asm
	// begin inline asm
	mov.b32 %r7910, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7912, %r7809, %r7910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7915, %r7912, %r7911;
	// end inline asm
	// begin inline asm
	mov.b32 %r7918, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7920, %r7812, %r7918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7923, %r7920, %r7919;
	// end inline asm
	// begin inline asm
	mov.b32 %r7926, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7928, %r7815, %r7926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7931, %r7928, %r7927;
	// end inline asm
	// begin inline asm
	mov.b32 %r7934, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7936, %r7818, %r7934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7939, %r7936, %r7935;
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7944, %r7821, %r7942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7947, %r7944, %r7943;
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7952, %r7824, %r7950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7955, %r7952, %r7951;
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7960, %r7827, %r7958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7963, %r7960, %r7959;
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7968, %r7830, %r7966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7971, %r7968, %r7967;
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7976, %r7833, %r7974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7979, %r7976, %r7975;
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7984, %r7836, %r7982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7987, %r7984, %r7983;
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7992, %r7839, %r7990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7995, %r7992, %r7991;
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8000, %r7842, %r7998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8003, %r8000, %r7999;
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8008, %r7845, %r8006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8011, %r8008, %r8007;
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8016, %r7848, %r8014;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8019, %r8016, %r8015;
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8024, %r7851, %r8022;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8027, %r8024, %r8023;
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8032, %r7854, %r8030;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8035, %r8032, %r8031;
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8040, %r7857, %r8038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8043, %r8040, %r8039;
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8048, %r7860, %r8046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8051, %r8048, %r8047;
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8056, %r7863, %r8054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8059, %r8056, %r8055;
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8064, %r7866, %r8062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8067, %r8064, %r8063;
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8072, %r7869, %r8070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8075, %r8072, %r8071;
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8080, %r7872, %r8078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8083, %r8080, %r8079;
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8088, %r7875, %r8086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8091, %r8088, %r8087;
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8096, %r7878, %r8094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8099, %r8096, %r8095;
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8104, %r7881, %r8102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8107, %r8104, %r8103;
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8112, %r7884, %r8110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8115, %r8112, %r8111;
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8120, %r7887, %r8118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8123, %r8120, %r8119;
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8128, %r7890, %r8126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8131, %r8128, %r8127;
	// end inline asm
	// begin inline asm
	mov.b32 %r8134, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8136, %r7893, %r8134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8139, %r8136, %r8135;
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8144, %r7896, %r8142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8147, %r8144, %r8143;
	// end inline asm
	// begin inline asm
	mov.b32 %r8150, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8152, %r7899, %r8150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8155, %r8152, %r8151;
	// end inline asm
	// begin inline asm
	mov.b32 %r8161, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8160, %r8161, %r8159;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r7907, %r8160;
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8167, %r8161, %r8166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r7915, %r8167;
	// end inline asm
	// begin inline asm
	mov.b32 %r8173, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8174, %r8161, %r8173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r7923, %r8174;
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8181, %r8161, %r8180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r7931, %r8181;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8187, %r8163, %r8177, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8191, %r8170, %r8184, %r4374;
	// end inline asm
	shl.b32 	%r8198, %r8191, 4;
	// begin inline asm
	lop3.b32 %r8195, %r4380, %r8187, %r8198, 202;
	// end inline asm
	xor.b32  	%r16182, %r8195, -2004318072;
	// begin inline asm
	mov.b32 %r8202, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8200, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8201, %r8202, %r8200;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r7939, %r8201;
	// end inline asm
	// begin inline asm
	mov.b32 %r8207, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8208, %r8202, %r8207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r7947, %r8208;
	// end inline asm
	// begin inline asm
	mov.b32 %r8214, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8215, %r8202, %r8214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r7955, %r8215;
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r8202, %r8221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r7963, %r8222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8228, %r8204, %r8218, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8232, %r8211, %r8225, %r4374;
	// end inline asm
	shl.b32 	%r8239, %r8232, 4;
	// begin inline asm
	lop3.b32 %r8236, %r4380, %r8228, %r8239, 202;
	// end inline asm
	xor.b32  	%r16183, %r8236, -2004318072;
	// begin inline asm
	mov.b32 %r8243, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8241, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8242, %r8243, %r8241;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r7971, %r8242;
	// end inline asm
	// begin inline asm
	mov.b32 %r8248, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8249, %r8243, %r8248;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r7979, %r8249;
	// end inline asm
	// begin inline asm
	mov.b32 %r8255, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8256, %r8243, %r8255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r7987, %r8256;
	// end inline asm
	// begin inline asm
	mov.b32 %r8262, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8243, %r8262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r7995, %r8263;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8269, %r8245, %r8259, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8273, %r8252, %r8266, %r4374;
	// end inline asm
	shl.b32 	%r8280, %r8273, 4;
	// begin inline asm
	lop3.b32 %r8277, %r4380, %r8269, %r8280, 202;
	// end inline asm
	xor.b32  	%r16184, %r8277, -2004318072;
	// begin inline asm
	mov.b32 %r8284, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8282, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8283, %r8284, %r8282;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r8003, %r8283;
	// end inline asm
	// begin inline asm
	mov.b32 %r8289, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8290, %r8284, %r8289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8011, %r8290;
	// end inline asm
	// begin inline asm
	mov.b32 %r8296, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8297, %r8284, %r8296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8019, %r8297;
	// end inline asm
	// begin inline asm
	mov.b32 %r8303, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8284, %r8303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8027, %r8304;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8310, %r8286, %r8300, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8314, %r8293, %r8307, %r4374;
	// end inline asm
	shl.b32 	%r8321, %r8314, 4;
	// begin inline asm
	lop3.b32 %r8318, %r4380, %r8310, %r8321, 202;
	// end inline asm
	xor.b32  	%r16185, %r8318, -2004318072;
	// begin inline asm
	mov.b32 %r8325, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8323, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8324, %r8325, %r8323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8035, %r8324;
	// end inline asm
	// begin inline asm
	mov.b32 %r8330, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8331, %r8325, %r8330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8043, %r8331;
	// end inline asm
	// begin inline asm
	mov.b32 %r8337, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8338, %r8325, %r8337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8051, %r8338;
	// end inline asm
	// begin inline asm
	mov.b32 %r8344, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8325, %r8344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8059, %r8345;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8351, %r8327, %r8341, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8355, %r8334, %r8348, %r4374;
	// end inline asm
	shl.b32 	%r8362, %r8355, 4;
	// begin inline asm
	lop3.b32 %r8359, %r4380, %r8351, %r8362, 202;
	// end inline asm
	xor.b32  	%r16186, %r8359, -2004318072;
	// begin inline asm
	mov.b32 %r8366, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8364, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8365, %r8366, %r8364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8067, %r8365;
	// end inline asm
	// begin inline asm
	mov.b32 %r8371, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8372, %r8366, %r8371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8075, %r8372;
	// end inline asm
	// begin inline asm
	mov.b32 %r8378, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8379, %r8366, %r8378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8083, %r8379;
	// end inline asm
	// begin inline asm
	mov.b32 %r8385, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8366, %r8385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8091, %r8386;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8392, %r8368, %r8382, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8396, %r8375, %r8389, %r4374;
	// end inline asm
	shl.b32 	%r8403, %r8396, 4;
	// begin inline asm
	lop3.b32 %r8400, %r4380, %r8392, %r8403, 202;
	// end inline asm
	xor.b32  	%r16187, %r8400, -2004318072;
	// begin inline asm
	mov.b32 %r8407, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8405, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8406, %r8407, %r8405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8099, %r8406;
	// end inline asm
	// begin inline asm
	mov.b32 %r8412, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8413, %r8407, %r8412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8107, %r8413;
	// end inline asm
	// begin inline asm
	mov.b32 %r8419, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8420, %r8407, %r8419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8115, %r8420;
	// end inline asm
	// begin inline asm
	mov.b32 %r8426, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8427, %r8407, %r8426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8123, %r8427;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8433, %r8409, %r8423, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8437, %r8416, %r8430, %r4374;
	// end inline asm
	shl.b32 	%r8444, %r8437, 4;
	// begin inline asm
	lop3.b32 %r8441, %r4380, %r8433, %r8444, 202;
	// end inline asm
	xor.b32  	%r16188, %r8441, -2004318072;
	// begin inline asm
	mov.b32 %r8448, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8446, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8447, %r8448, %r8446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8450, %r8131, %r8447;
	// end inline asm
	// begin inline asm
	mov.b32 %r8453, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8454, %r8448, %r8453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8139, %r8454;
	// end inline asm
	// begin inline asm
	mov.b32 %r8460, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8461, %r8448, %r8460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8147, %r8461;
	// end inline asm
	// begin inline asm
	mov.b32 %r8467, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8448, %r8467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8155, %r8468;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8474, %r8450, %r8464, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8478, %r8457, %r8471, %r4374;
	// end inline asm
	shl.b32 	%r8485, %r8478, 4;
	// begin inline asm
	lop3.b32 %r8482, %r4380, %r8474, %r8485, 202;
	// end inline asm
	xor.b32  	%r16189, %r8482, -2004318072;
	st.shared.u32 	[%rd96], %r16182;
	st.shared.u32 	[%rd98], %r16183;
	st.shared.u32 	[%rd100], %r16184;
	st.shared.u32 	[%rd102], %r16185;
	st.shared.u32 	[%rd104], %r16186;
	st.shared.u32 	[%rd106], %r16187;
	st.shared.u32 	[%rd108], %r16188;
	st.shared.u32 	[%rd110], %r16189;
	ld.shared.u32 	%r16301, [%rd80];
	ld.shared.u32 	%r16302, [%rd82];
	ld.shared.u32 	%r16303, [%rd84];
	ld.shared.u32 	%r16304, [%rd86];
	ld.shared.u32 	%r16313, [%rd88];
	ld.shared.u32 	%r16314, [%rd90];
	ld.shared.u32 	%r16315, [%rd92];
	ld.shared.u32 	%r16316, [%rd94];
	// begin inline asm
	mov.b32 %r8491, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8502, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8490, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r8488, %r857, %r8490, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8491, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8499, %r868, %r8490, %r8502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8502, %r8503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8507, %r8499, %r8504;
	// end inline asm
	shr.u32 	%r8512, %r8490, 8;
	// begin inline asm
	lop3.b32 %r8510, %r857, %r8512, %r8491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8514, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8515, %r8491, %r8514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8518, %r8510, %r8515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8521, %r868, %r8512, %r8502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8525, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8526, %r8502, %r8525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8529, %r8521, %r8526;
	// end inline asm
	// begin inline asm
	mov.b32 %r8537, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8548, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8536, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r8534, %r857, %r8536, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8537, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8545, %r868, %r8536, %r8548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8549, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8550, %r8548, %r8549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8553, %r8545, %r8550;
	// end inline asm
	shr.u32 	%r8558, %r8536, 8;
	// begin inline asm
	lop3.b32 %r8556, %r857, %r8558, %r8537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8560, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8561, %r8537, %r8560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8564, %r8556, %r8561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8567, %r868, %r8558, %r8548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8571, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8572, %r8548, %r8571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8575, %r8567, %r8572;
	// end inline asm
	// begin inline asm
	mov.b32 %r8583, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8594, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8582, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r8580, %r857, %r8582, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8583, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8591, %r868, %r8582, %r8594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8595, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8596, %r8594, %r8595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8599, %r8591, %r8596;
	// end inline asm
	shr.u32 	%r8604, %r8582, 8;
	// begin inline asm
	lop3.b32 %r8602, %r857, %r8604, %r8583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8606, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8607, %r8583, %r8606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8610, %r8602, %r8607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8613, %r868, %r8604, %r8594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8617, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8618, %r8594, %r8617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8621, %r8613, %r8618;
	// end inline asm
	// begin inline asm
	mov.b32 %r8629, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8640, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8628, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r8626, %r857, %r8628, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8629, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8637, %r868, %r8628, %r8640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8641, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8642, %r8640, %r8641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8645, %r8637, %r8642;
	// end inline asm
	shr.u32 	%r8650, %r8628, 8;
	// begin inline asm
	lop3.b32 %r8648, %r857, %r8650, %r8629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8652, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8653, %r8629, %r8652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8656, %r8648, %r8653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8659, %r868, %r8650, %r8640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8663, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8664, %r8640, %r8663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8667, %r8659, %r8664;
	// end inline asm
	// begin inline asm
	mov.b32 %r8675, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8686, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8674, %r16313, -2004318072;
	// begin inline asm
	lop3.b32 %r8672, %r857, %r8674, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8675, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8683, %r868, %r8674, %r8686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8687, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8688, %r8686, %r8687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8691, %r8683, %r8688;
	// end inline asm
	shr.u32 	%r8696, %r8674, 8;
	// begin inline asm
	lop3.b32 %r8694, %r857, %r8696, %r8675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8698, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8699, %r8675, %r8698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8702, %r8694, %r8699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8705, %r868, %r8696, %r8686, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8709, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8710, %r8686, %r8709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8713, %r8705, %r8710;
	// end inline asm
	// begin inline asm
	mov.b32 %r8721, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8732, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8720, %r16314, -2004318072;
	// begin inline asm
	lop3.b32 %r8718, %r857, %r8720, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8721, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8729, %r868, %r8720, %r8732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8733, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8734, %r8732, %r8733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8737, %r8729, %r8734;
	// end inline asm
	shr.u32 	%r8742, %r8720, 8;
	// begin inline asm
	lop3.b32 %r8740, %r857, %r8742, %r8721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8744, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8745, %r8721, %r8744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8748, %r8740, %r8745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8751, %r868, %r8742, %r8732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8755, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8756, %r8732, %r8755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8759, %r8751, %r8756;
	// end inline asm
	// begin inline asm
	mov.b32 %r8767, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8778, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8766, %r16315, -2004318072;
	// begin inline asm
	lop3.b32 %r8764, %r857, %r8766, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8767, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8775, %r868, %r8766, %r8778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8779, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8780, %r8778, %r8779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8783, %r8775, %r8780;
	// end inline asm
	shr.u32 	%r8788, %r8766, 8;
	// begin inline asm
	lop3.b32 %r8786, %r857, %r8788, %r8767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8790, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8791, %r8767, %r8790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8794, %r8786, %r8791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8797, %r868, %r8788, %r8778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8801, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8802, %r8778, %r8801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8805, %r8797, %r8802;
	// end inline asm
	// begin inline asm
	mov.b32 %r8813, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r8824, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r8812, %r16316, -2004318072;
	// begin inline asm
	lop3.b32 %r8810, %r857, %r8812, %r8813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8814, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8815, %r8813, %r8814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8818, %r8810, %r8815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8821, %r868, %r8812, %r8824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8825, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8826, %r8824, %r8825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8829, %r8821, %r8826;
	// end inline asm
	shr.u32 	%r8834, %r8812, 8;
	// begin inline asm
	lop3.b32 %r8832, %r857, %r8834, %r8813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8836, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8837, %r8813, %r8836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8840, %r8832, %r8837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8843, %r868, %r8834, %r8824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8847, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8848, %r8824, %r8847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8851, %r8843, %r8848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8854, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8856, %r8854, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8859, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8861, %r8859, %r8507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8999, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9001, %r8999, %r8829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9004, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9006, %r9004, %r8840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9009, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9011, %r9009, %r8851;
	// end inline asm
	// begin inline asm
	mov.b32 %r9019, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9030, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r857, %r2442, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r9019, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9027, %r868, %r2442, %r9030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9031, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9032, %r9030, %r9031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9035, %r9027, %r9032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9038, %r857, %r2464, %r9019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9042, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9043, %r9019, %r9042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9046, %r9038, %r9043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9049, %r868, %r2464, %r9030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9053, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9054, %r9030, %r9053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9057, %r9049, %r9054;
	// end inline asm
	// begin inline asm
	mov.b32 %r9065, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9076, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r857, %r2488, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9065, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9073, %r868, %r2488, %r9076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9077, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9078, %r9076, %r9077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9081, %r9073, %r9078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9084, %r857, %r2510, %r9065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9088, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9089, %r9065, %r9088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9092, %r9084, %r9089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9095, %r868, %r2510, %r9076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9099, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9100, %r9076, %r9099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9103, %r9095, %r9100;
	// end inline asm
	// begin inline asm
	mov.b32 %r9111, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9122, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r857, %r2534, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9111, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9119, %r868, %r2534, %r9122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9123, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9124, %r9122, %r9123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9127, %r9119, %r9124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9130, %r857, %r2556, %r9111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9134, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9135, %r9111, %r9134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9138, %r9130, %r9135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9141, %r868, %r2556, %r9122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9145, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9146, %r9122, %r9145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9149, %r9141, %r9146;
	// end inline asm
	// begin inline asm
	mov.b32 %r9157, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9168, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r857, %r2580, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9157, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9165, %r868, %r2580, %r9168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9169, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9170, %r9168, %r9169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9173, %r9165, %r9170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9176, %r857, %r2602, %r9157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9180, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9181, %r9157, %r9180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9184, %r9176, %r9181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9187, %r868, %r2602, %r9168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9191, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9192, %r9168, %r9191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9195, %r9187, %r9192;
	// end inline asm
	// begin inline asm
	mov.b32 %r9203, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9214, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r857, %r2626, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9203, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9211, %r868, %r2626, %r9214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9215, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9216, %r9214, %r9215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9219, %r9211, %r9216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9222, %r857, %r2648, %r9203, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9226, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9227, %r9203, %r9226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9230, %r9222, %r9227;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9233, %r868, %r2648, %r9214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9237, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9238, %r9214, %r9237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9241, %r9233, %r9238;
	// end inline asm
	// begin inline asm
	mov.b32 %r9249, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9260, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r857, %r2672, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9249, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9257, %r868, %r2672, %r9260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9261, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9262, %r9260, %r9261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9265, %r9257, %r9262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9268, %r857, %r2694, %r9249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9272, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9273, %r9249, %r9272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9276, %r9268, %r9273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9279, %r868, %r2694, %r9260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9283, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9284, %r9260, %r9283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9287, %r9279, %r9284;
	// end inline asm
	// begin inline asm
	mov.b32 %r9295, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9306, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r857, %r2718, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9295, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9303, %r868, %r2718, %r9306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9307, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9308, %r9306, %r9307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9311, %r9303, %r9308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9314, %r857, %r2740, %r9295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9318, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9319, %r9295, %r9318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9322, %r9314, %r9319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9325, %r868, %r2740, %r9306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9329, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9330, %r9306, %r9329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9333, %r9325, %r9330;
	// end inline asm
	// begin inline asm
	mov.b32 %r9341, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9352, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9338, %r857, %r2764, %r9341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9342, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9343, %r9341, %r9342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9346, %r9338, %r9343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9349, %r868, %r2764, %r9352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9353, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9354, %r9352, %r9353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9357, %r9349, %r9354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9360, %r857, %r2786, %r9341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9364, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9365, %r9341, %r9364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9368, %r9360, %r9365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9371, %r868, %r2786, %r9352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9375, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9376, %r9352, %r9375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9379, %r9371, %r9376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9382, %r267, %r9024, %r8856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9386, %r267, %r9035, %r8861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9390, %r267, %r9046, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9394, %r267, %r9057, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9398, %r267, %r9070, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9402, %r267, %r9081, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9406, %r267, %r9092, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r267, %r9103, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r267, %r9116, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r267, %r9127, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r267, %r9138, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r267, %r9149, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r267, %r9162, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r267, %r9173, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r267, %r9184, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r267, %r9195, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r285, %r9208, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r285, %r9219, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r285, %r9230, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r285, %r9241, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r285, %r9254, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r285, %r9265, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9470, %r285, %r9276, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9474, %r285, %r9287, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9478, %r285, %r9300, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9482, %r285, %r9311, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9486, %r285, %r9322, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9490, %r285, %r9333, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9494, %r285, %r9346, %r8996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9498, %r285, %r9357, %r9001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9502, %r285, %r9368, %r9006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9506, %r285, %r9379, %r9011;
	// end inline asm
	// begin inline asm
	mov.b32 %r9515, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9526, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r857, %r858, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9515, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9523, %r868, %r858, %r9526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9527, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9528, %r9526, %r9527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9531, %r9523, %r9528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9534, %r857, %r880, %r9515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9538, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9539, %r9515, %r9538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9542, %r9534, %r9539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9545, %r868, %r880, %r9526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9549, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9550, %r9526, %r9549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9553, %r9545, %r9550;
	// end inline asm
	// begin inline asm
	mov.b32 %r9561, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9572, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r857, %r904, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9561, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9569, %r868, %r904, %r9572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9573, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9574, %r9572, %r9573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9577, %r9569, %r9574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9580, %r857, %r926, %r9561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9584, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9585, %r9561, %r9584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9588, %r9580, %r9585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9591, %r868, %r926, %r9572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9595, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9596, %r9572, %r9595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9599, %r9591, %r9596;
	// end inline asm
	// begin inline asm
	mov.b32 %r9607, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9618, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r857, %r950, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9607, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9615, %r868, %r950, %r9618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9619, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9620, %r9618, %r9619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9623, %r9615, %r9620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9626, %r857, %r972, %r9607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9630, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9631, %r9607, %r9630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9634, %r9626, %r9631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9637, %r868, %r972, %r9618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9641, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9642, %r9618, %r9641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9645, %r9637, %r9642;
	// end inline asm
	// begin inline asm
	mov.b32 %r9653, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9664, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r857, %r996, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9653, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9661, %r868, %r996, %r9664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9665, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9666, %r9664, %r9665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9669, %r9661, %r9666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9672, %r857, %r1018, %r9653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9676, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9677, %r9653, %r9676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9680, %r9672, %r9677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9683, %r868, %r1018, %r9664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9687, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9688, %r9664, %r9687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9691, %r9683, %r9688;
	// end inline asm
	// begin inline asm
	mov.b32 %r9699, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9710, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r857, %r1042, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9699, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9707, %r868, %r1042, %r9710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9711, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9712, %r9710, %r9711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9715, %r9707, %r9712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9718, %r857, %r1064, %r9699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9722, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9723, %r9699, %r9722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9726, %r9718, %r9723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9729, %r868, %r1064, %r9710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9733, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9734, %r9710, %r9733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9737, %r9729, %r9734;
	// end inline asm
	// begin inline asm
	mov.b32 %r9745, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9756, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r857, %r1088, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9745, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9753, %r868, %r1088, %r9756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9757, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9758, %r9756, %r9757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9761, %r9753, %r9758;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9764, %r857, %r1110, %r9745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9768, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9769, %r9745, %r9768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9772, %r9764, %r9769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9775, %r868, %r1110, %r9756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9779, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9780, %r9756, %r9779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9783, %r9775, %r9780;
	// end inline asm
	// begin inline asm
	mov.b32 %r9791, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9802, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r857, %r1134, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9791, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9799, %r868, %r1134, %r9802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9803, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9804, %r9802, %r9803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9807, %r9799, %r9804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9810, %r857, %r1156, %r9791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9814, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9815, %r9791, %r9814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9818, %r9810, %r9815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9821, %r868, %r1156, %r9802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9825, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9826, %r9802, %r9825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9829, %r9821, %r9826;
	// end inline asm
	// begin inline asm
	mov.b32 %r9837, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r9848, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9834, %r857, %r1180, %r9837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9838, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9839, %r9837, %r9838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9842, %r9834, %r9839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9845, %r868, %r1180, %r9848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9849, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9850, %r9848, %r9849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9853, %r9845, %r9850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9856, %r857, %r1202, %r9837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9860, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9861, %r9837, %r9860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9864, %r9856, %r9861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9867, %r868, %r1202, %r9848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9871, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9872, %r9848, %r9871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9875, %r9867, %r9872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9878, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9880, %r9878, %r9520, %r9382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9884, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9886, %r9884, %r9531, %r9386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9890, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9892, %r9890, %r9542, %r9390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9896, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9898, %r9896, %r9553, %r9394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9902, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9904, %r9902, %r9566, %r9398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9908, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9910, %r9908, %r9577, %r9402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9914, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9916, %r9914, %r9588, %r9406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9920, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9922, %r9920, %r9599, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9612, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9623, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9634, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9645, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9658, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9669, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9680, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9691, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9704, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9715, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9726, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9737, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9750, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9761, %r9466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9772, %r9470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9783, %r9474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9796, %r9478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9807, %r9482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9818, %r9486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9829, %r9490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9842, %r9494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10052, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10054, %r10052, %r9853, %r9498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10058, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10060, %r10058, %r9864, %r9502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10064, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10066, %r10064, %r9875, %r9506;
	// end inline asm
	// begin inline asm
	mov.b32 %r10075, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10086, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r857, %r4674, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10075, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10083, %r868, %r4674, %r10086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10087, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10088, %r10086, %r10087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10091, %r10083, %r10088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10094, %r857, %r4696, %r10075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10098, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10099, %r10075, %r10098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10102, %r10094, %r10099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10105, %r868, %r4696, %r10086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10109, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10110, %r10086, %r10109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10113, %r10105, %r10110;
	// end inline asm
	// begin inline asm
	mov.b32 %r10121, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10132, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r857, %r4720, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10121, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10129, %r868, %r4720, %r10132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10133, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10134, %r10132, %r10133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10137, %r10129, %r10134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10140, %r857, %r4742, %r10121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10144, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10145, %r10121, %r10144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10148, %r10140, %r10145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10151, %r868, %r4742, %r10132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10155, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10156, %r10132, %r10155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10159, %r10151, %r10156;
	// end inline asm
	// begin inline asm
	mov.b32 %r10167, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10178, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r857, %r4766, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10167, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10175, %r868, %r4766, %r10178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10179, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10180, %r10178, %r10179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10183, %r10175, %r10180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10186, %r857, %r4788, %r10167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10190, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10191, %r10167, %r10190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10194, %r10186, %r10191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10197, %r868, %r4788, %r10178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10201, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10202, %r10178, %r10201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10205, %r10197, %r10202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10213, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10224, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r857, %r4812, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10213, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10221, %r868, %r4812, %r10224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10225, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10226, %r10224, %r10225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10229, %r10221, %r10226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10232, %r857, %r4834, %r10213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10236, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10237, %r10213, %r10236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10240, %r10232, %r10237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10243, %r868, %r4834, %r10224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10247, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10248, %r10224, %r10247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10251, %r10243, %r10248;
	// end inline asm
	// begin inline asm
	mov.b32 %r10259, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10270, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r857, %r4858, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10259, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10267, %r868, %r4858, %r10270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10271, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10272, %r10270, %r10271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10275, %r10267, %r10272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10278, %r857, %r4880, %r10259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10282, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10283, %r10259, %r10282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10286, %r10278, %r10283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10289, %r868, %r4880, %r10270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10293, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10294, %r10270, %r10293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10297, %r10289, %r10294;
	// end inline asm
	// begin inline asm
	mov.b32 %r10305, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10316, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r857, %r4904, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10305, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10313, %r868, %r4904, %r10316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10317, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10318, %r10316, %r10317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10321, %r10313, %r10318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10324, %r857, %r4926, %r10305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10328, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10329, %r10305, %r10328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10332, %r10324, %r10329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10335, %r868, %r4926, %r10316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10339, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10340, %r10316, %r10339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10343, %r10335, %r10340;
	// end inline asm
	// begin inline asm
	mov.b32 %r10351, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10362, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r857, %r4950, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10351, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10359, %r868, %r4950, %r10362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10363, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10364, %r10362, %r10363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10367, %r10359, %r10364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10370, %r857, %r4972, %r10351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10374, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10375, %r10351, %r10374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10378, %r10370, %r10375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10381, %r868, %r4972, %r10362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10385, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10386, %r10362, %r10385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10389, %r10381, %r10386;
	// end inline asm
	// begin inline asm
	mov.b32 %r10397, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r10408, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10394, %r857, %r4996, %r10397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10398, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10399, %r10397, %r10398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10402, %r10394, %r10399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10405, %r868, %r4996, %r10408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10409, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10410, %r10408, %r10409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10413, %r10405, %r10410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10416, %r857, %r5018, %r10397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10420, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10421, %r10397, %r10420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10424, %r10416, %r10421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10427, %r868, %r5018, %r10408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10431, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10432, %r10408, %r10431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10435, %r10427, %r10432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10573, %r339, %r10080, %r9880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10570, %r339, %r10091, %r9886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r339, %r10102, %r9892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r339, %r10113, %r9898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r339, %r10126, %r9904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r339, %r10137, %r9910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r339, %r10148, %r9916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r339, %r10159, %r9922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r339, %r10172, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r339, %r10183, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r339, %r10194, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r339, %r10205, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r339, %r10218, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r339, %r10229, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r339, %r10240, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r339, %r10251, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r357, %r10264, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r357, %r10275, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r357, %r10286, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r357, %r10297, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r357, %r10310, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r357, %r10321, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r357, %r10332, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r357, %r10343, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r357, %r10356, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r357, %r10367, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r357, %r10378, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r357, %r10389, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r357, %r10402, %r10048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r357, %r10413, %r10054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r357, %r10424, %r10060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r357, %r10435, %r10066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10566, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10568, %r10566, %r10570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10571, %r396, %r10573, %r10568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10575, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10577, %r10575, %r10579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r396, %r10582, %r10577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10584, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10586, %r10584, %r10588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r396, %r10591, %r10586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10593, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10595, %r10593, %r10597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r396, %r10600, %r10595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10602, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10604, %r10602, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r396, %r10609, %r10604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r396, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r396, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r396, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r399, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r399, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r399, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r399, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r399, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r399, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10692, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r10692, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r399, %r10699, %r10694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10701, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r10701, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r399, %r10708, %r10703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10710, %r402, %r10573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10713, %r396, %r10570, %r10710;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10717, %r402, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r396, %r10579, %r10717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10724, %r402, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10727, %r396, %r10588, %r10724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10731, %r402, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10734, %r396, %r10597, %r10731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10738, %r402, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r396, %r10606, %r10738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r402, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r396, %r10615, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r402, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r396, %r10624, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r402, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r396, %r10633, %r10759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r405, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r399, %r10642, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r405, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r399, %r10651, %r10773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10780, %r405, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r399, %r10660, %r10780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10787, %r405, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10790, %r399, %r10669, %r10787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10794, %r405, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10797, %r399, %r10678, %r10794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10801, %r405, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10804, %r399, %r10687, %r10801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10808, %r405, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10811, %r399, %r10696, %r10808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10815, %r405, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10818, %r399, %r10705, %r10815;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10989, %r10986}, {%r463, %r469, %r466, %r472}, {%r10571, %r10713}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10998, %r10995}, {%r463, %r469, %r466, %r472}, {%r10580, %r10720}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11007, %r11004}, {%r463, %r469, %r466, %r472}, {%r10589, %r10727}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11016, %r11013}, {%r463, %r469, %r466, %r472}, {%r10598, %r10734}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11025, %r11022}, {%r463, %r469, %r466, %r472}, {%r10607, %r10741}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r463, %r469, %r466, %r472}, {%r10616, %r10748}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r463, %r469, %r466, %r472}, {%r10625, %r10755}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r463, %r469, %r466, %r472}, {%r10634, %r10762}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r463, %r469, %r466, %r472}, {%r10643, %r10769}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r463, %r469, %r466, %r472}, {%r10652, %r10776}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r463, %r469, %r466, %r472}, {%r10661, %r10783}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r463, %r469, %r466, %r472}, {%r10670, %r10790}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r463, %r469, %r466, %r472}, {%r10679, %r10797}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r463, %r469, %r466, %r472}, {%r10688, %r10804}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11115, %r11112}, {%r463, %r469, %r466, %r472}, {%r10697, %r10811}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11124, %r11121}, {%r463, %r469, %r466, %r472}, {%r10706, %r10818}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10982, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10984, %r10982, %r10986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10987, %r513, %r10989, %r10984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10991, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10993, %r10991, %r10995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10996, %r513, %r10998, %r10993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11000, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11002, %r11000, %r11004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11005, %r513, %r11007, %r11002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11009, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11011, %r11009, %r11013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11014, %r513, %r11016, %r11011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11018, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11020, %r11018, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11023, %r513, %r11025, %r11020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r513, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r513, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r513, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r513, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r513, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r513, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r513, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r513, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r513, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11108, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r11108, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r513, %r11115, %r11110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11117, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r11117, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r513, %r11124, %r11119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11126, %r516, %r10989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11129, %r513, %r10986, %r11126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11133, %r516, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11136, %r513, %r10995, %r11133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11140, %r516, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11143, %r513, %r11004, %r11140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11147, %r516, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11150, %r513, %r11013, %r11147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11154, %r516, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11157, %r513, %r11022, %r11154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r516, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r513, %r11031, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r516, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r513, %r11040, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r516, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r513, %r11049, %r11175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r516, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r513, %r11058, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r516, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r513, %r11067, %r11189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11196, %r516, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11199, %r513, %r11076, %r11196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11203, %r516, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11206, %r513, %r11085, %r11203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11210, %r516, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11213, %r513, %r11094, %r11210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11217, %r516, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11220, %r513, %r11103, %r11217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11224, %r516, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11227, %r513, %r11112, %r11224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11231, %r516, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11234, %r513, %r11121, %r11231;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11527, %r11530}, {%r551, %r557, %r554, %r560}, {%r10987, %r11129}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11533, %r11536}, {%r551, %r557, %r554, %r560}, {%r10996, %r11136}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11539, %r11542}, {%r551, %r557, %r554, %r560}, {%r11005, %r11143}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11545, %r11548}, {%r551, %r557, %r554, %r560}, {%r11014, %r11150}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11551, %r11554}, {%r551, %r557, %r554, %r560}, {%r11023, %r11157}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11557, %r11560}, {%r551, %r557, %r554, %r560}, {%r11032, %r11164}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11563, %r11566}, {%r551, %r557, %r554, %r560}, {%r11041, %r11171}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11569, %r11572}, {%r551, %r557, %r554, %r560}, {%r11050, %r11178}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11528, %r11531}, {%r551, %r557, %r554, %r560}, {%r11059, %r11185}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11534, %r11537}, {%r551, %r557, %r554, %r560}, {%r11068, %r11192}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11540, %r11543}, {%r551, %r557, %r554, %r560}, {%r11077, %r11199}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11546, %r11549}, {%r551, %r557, %r554, %r560}, {%r11086, %r11206}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11552, %r11555}, {%r551, %r557, %r554, %r560}, {%r11095, %r11213}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11558, %r11561}, {%r551, %r557, %r554, %r560}, {%r11104, %r11220}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11564, %r11567}, {%r551, %r557, %r554, %r560}, {%r11113, %r11227}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r551, %r557, %r554, %r560}, {%r11122, %r11234}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11526, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11529, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11532, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11535, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11538, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11541, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11544, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11547, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11550, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11553, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11556, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11559, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11562, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11565, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11568, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11574, %r11527, %r11528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11577, %r11530, %r11531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11580, %r11533, %r11534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11583, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11586, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11589, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11592, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11595, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11598, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11601, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11604, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11607, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11610, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11613, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11616, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11622, %r125, %r11526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11625, %r125, %r11529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11628, %r125, %r11532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r125, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r125, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r125, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r125, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r125, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r125, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r125, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r125, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r125, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r125, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r125, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r125, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r125, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r126, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r126, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r126, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r126, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r126, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r126, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r126, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r126, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r126, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r126, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r126, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r126, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r126, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r126, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r126, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r126, %r11619;
	// end inline asm
	// begin inline asm
	mov.b32 %r11718, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11719, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11720, %r11622, %r11718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11723, %r11720, %r11719;
	// end inline asm
	// begin inline asm
	mov.b32 %r11726, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11728, %r11625, %r11726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11731, %r11728, %r11727;
	// end inline asm
	// begin inline asm
	mov.b32 %r11734, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11736, %r11628, %r11734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11739, %r11736, %r11735;
	// end inline asm
	// begin inline asm
	mov.b32 %r11742, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11744, %r11631, %r11742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11747, %r11744, %r11743;
	// end inline asm
	// begin inline asm
	mov.b32 %r11750, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11752, %r11634, %r11750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11755, %r11752, %r11751;
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11760, %r11637, %r11758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11763, %r11760, %r11759;
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11768, %r11640, %r11766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11771, %r11768, %r11767;
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11776, %r11643, %r11774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11779, %r11776, %r11775;
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11784, %r11646, %r11782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11787, %r11784, %r11783;
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11792, %r11649, %r11790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11795, %r11792, %r11791;
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11800, %r11652, %r11798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11803, %r11800, %r11799;
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11808, %r11655, %r11806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11811, %r11808, %r11807;
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11816, %r11658, %r11814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11819, %r11816, %r11815;
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11824, %r11661, %r11822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11827, %r11824, %r11823;
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11832, %r11664, %r11830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11835, %r11832, %r11831;
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11840, %r11667, %r11838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11843, %r11840, %r11839;
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11848, %r11670, %r11846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11851, %r11848, %r11847;
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11856, %r11673, %r11854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11859, %r11856, %r11855;
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11864, %r11676, %r11862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11867, %r11864, %r11863;
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11872, %r11679, %r11870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11875, %r11872, %r11871;
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11880, %r11682, %r11878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11883, %r11880, %r11879;
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11888, %r11685, %r11886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11891, %r11888, %r11887;
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11896, %r11688, %r11894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11899, %r11896, %r11895;
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11904, %r11691, %r11902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11907, %r11904, %r11903;
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11912, %r11694, %r11910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11915, %r11912, %r11911;
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11920, %r11697, %r11918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11923, %r11920, %r11919;
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11928, %r11700, %r11926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11931, %r11928, %r11927;
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11936, %r11703, %r11934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11939, %r11936, %r11935;
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11944, %r11706, %r11942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11947, %r11944, %r11943;
	// end inline asm
	// begin inline asm
	mov.b32 %r11950, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11952, %r11709, %r11950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11955, %r11952, %r11951;
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11960, %r11712, %r11958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11963, %r11960, %r11959;
	// end inline asm
	// begin inline asm
	mov.b32 %r11966, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11968, %r11715, %r11966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11971, %r11968, %r11967;
	// end inline asm
	// begin inline asm
	mov.b32 %r11977, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11976, %r11977, %r11975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11723, %r11976;
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11983, %r11977, %r11982;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11731, %r11983;
	// end inline asm
	// begin inline asm
	mov.b32 %r11989, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11990, %r11977, %r11989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11739, %r11990;
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11997, %r11977, %r11996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11747, %r11997;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12003, %r11979, %r11993, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12007, %r11986, %r12000, %r4374;
	// end inline asm
	shl.b32 	%r12014, %r12007, 4;
	// begin inline asm
	lop3.b32 %r12011, %r4380, %r12003, %r12014, 202;
	// end inline asm
	xor.b32  	%r16190, %r12011, -2004318072;
	// begin inline asm
	mov.b32 %r12018, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12016, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12017, %r12018, %r12016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r11755, %r12017;
	// end inline asm
	// begin inline asm
	mov.b32 %r12023, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12024, %r12018, %r12023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r11763, %r12024;
	// end inline asm
	// begin inline asm
	mov.b32 %r12030, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12031, %r12018, %r12030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r11771, %r12031;
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r12018, %r12037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r11779, %r12038;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12044, %r12020, %r12034, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12048, %r12027, %r12041, %r4374;
	// end inline asm
	shl.b32 	%r12055, %r12048, 4;
	// begin inline asm
	lop3.b32 %r12052, %r4380, %r12044, %r12055, 202;
	// end inline asm
	xor.b32  	%r16191, %r12052, -2004318072;
	// begin inline asm
	mov.b32 %r12059, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12057, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12058, %r12059, %r12057;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r11787, %r12058;
	// end inline asm
	// begin inline asm
	mov.b32 %r12064, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12065, %r12059, %r12064;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r11795, %r12065;
	// end inline asm
	// begin inline asm
	mov.b32 %r12071, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12072, %r12059, %r12071;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r11803, %r12072;
	// end inline asm
	// begin inline asm
	mov.b32 %r12078, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r12059, %r12078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r11811, %r12079;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12085, %r12061, %r12075, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12089, %r12068, %r12082, %r4374;
	// end inline asm
	shl.b32 	%r12096, %r12089, 4;
	// begin inline asm
	lop3.b32 %r12093, %r4380, %r12085, %r12096, 202;
	// end inline asm
	xor.b32  	%r16192, %r12093, -2004318072;
	// begin inline asm
	mov.b32 %r12100, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12098, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12099, %r12100, %r12098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r11819, %r12099;
	// end inline asm
	// begin inline asm
	mov.b32 %r12105, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12106, %r12100, %r12105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r11827, %r12106;
	// end inline asm
	// begin inline asm
	mov.b32 %r12112, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12113, %r12100, %r12112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r11835, %r12113;
	// end inline asm
	// begin inline asm
	mov.b32 %r12119, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r12100, %r12119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r11843, %r12120;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12126, %r12102, %r12116, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12130, %r12109, %r12123, %r4374;
	// end inline asm
	shl.b32 	%r12137, %r12130, 4;
	// begin inline asm
	lop3.b32 %r12134, %r4380, %r12126, %r12137, 202;
	// end inline asm
	xor.b32  	%r16193, %r12134, -2004318072;
	// begin inline asm
	mov.b32 %r12141, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12139, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12140, %r12141, %r12139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r11851, %r12140;
	// end inline asm
	// begin inline asm
	mov.b32 %r12146, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12147, %r12141, %r12146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r11859, %r12147;
	// end inline asm
	// begin inline asm
	mov.b32 %r12153, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12154, %r12141, %r12153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r11867, %r12154;
	// end inline asm
	// begin inline asm
	mov.b32 %r12160, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r12141, %r12160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r11875, %r12161;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12167, %r12143, %r12157, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12171, %r12150, %r12164, %r4374;
	// end inline asm
	shl.b32 	%r12178, %r12171, 4;
	// begin inline asm
	lop3.b32 %r12175, %r4380, %r12167, %r12178, 202;
	// end inline asm
	xor.b32  	%r16194, %r12175, -2004318072;
	// begin inline asm
	mov.b32 %r12182, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12180, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12181, %r12182, %r12180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r11883, %r12181;
	// end inline asm
	// begin inline asm
	mov.b32 %r12187, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12188, %r12182, %r12187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r11891, %r12188;
	// end inline asm
	// begin inline asm
	mov.b32 %r12194, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12195, %r12182, %r12194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r11899, %r12195;
	// end inline asm
	// begin inline asm
	mov.b32 %r12201, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r12182, %r12201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r11907, %r12202;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12208, %r12184, %r12198, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12212, %r12191, %r12205, %r4374;
	// end inline asm
	shl.b32 	%r12219, %r12212, 4;
	// begin inline asm
	lop3.b32 %r12216, %r4380, %r12208, %r12219, 202;
	// end inline asm
	xor.b32  	%r16195, %r12216, -2004318072;
	// begin inline asm
	mov.b32 %r12223, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12221, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12222, %r12223, %r12221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r11915, %r12222;
	// end inline asm
	// begin inline asm
	mov.b32 %r12228, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12229, %r12223, %r12228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r11923, %r12229;
	// end inline asm
	// begin inline asm
	mov.b32 %r12235, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12236, %r12223, %r12235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r11931, %r12236;
	// end inline asm
	// begin inline asm
	mov.b32 %r12242, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12243, %r12223, %r12242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r11939, %r12243;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12249, %r12225, %r12239, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12253, %r12232, %r12246, %r4374;
	// end inline asm
	shl.b32 	%r12260, %r12253, 4;
	// begin inline asm
	lop3.b32 %r12257, %r4380, %r12249, %r12260, 202;
	// end inline asm
	xor.b32  	%r16196, %r12257, -2004318072;
	// begin inline asm
	mov.b32 %r12264, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12262, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12263, %r12264, %r12262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12266, %r11947, %r12263;
	// end inline asm
	// begin inline asm
	mov.b32 %r12269, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12270, %r12264, %r12269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r11955, %r12270;
	// end inline asm
	// begin inline asm
	mov.b32 %r12276, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12277, %r12264, %r12276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r11963, %r12277;
	// end inline asm
	// begin inline asm
	mov.b32 %r12283, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r12264, %r12283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r11971, %r12284;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12290, %r12266, %r12280, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12294, %r12273, %r12287, %r4374;
	// end inline asm
	shl.b32 	%r12301, %r12294, 4;
	// begin inline asm
	lop3.b32 %r12298, %r4380, %r12290, %r12301, 202;
	// end inline asm
	xor.b32  	%r16197, %r12298, -2004318072;
	st.shared.u32 	[%rd96], %r16190;
	st.shared.u32 	[%rd98], %r16191;
	st.shared.u32 	[%rd100], %r16192;
	st.shared.u32 	[%rd102], %r16193;
	st.shared.u32 	[%rd104], %r16194;
	st.shared.u32 	[%rd106], %r16195;
	st.shared.u32 	[%rd108], %r16196;
	st.shared.u32 	[%rd110], %r16197;
	ld.shared.u32 	%r16305, [%rd80];
	ld.shared.u32 	%r16306, [%rd82];
	ld.shared.u32 	%r16307, [%rd84];
	ld.shared.u32 	%r16308, [%rd86];
	ld.shared.u32 	%r16317, [%rd88];
	ld.shared.u32 	%r16318, [%rd90];
	ld.shared.u32 	%r16319, [%rd92];
	ld.shared.u32 	%r16320, [%rd94];
	// begin inline asm
	mov.b32 %r12307, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12318, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12306, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r12304, %r857, %r12306, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12307, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12315, %r868, %r12306, %r12318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12318, %r12319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12323, %r12315, %r12320;
	// end inline asm
	shr.u32 	%r12328, %r12306, 8;
	// begin inline asm
	lop3.b32 %r12326, %r857, %r12328, %r12307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12330, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12331, %r12307, %r12330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12334, %r12326, %r12331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12337, %r868, %r12328, %r12318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12341, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12342, %r12318, %r12341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12345, %r12337, %r12342;
	// end inline asm
	// begin inline asm
	mov.b32 %r12353, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12364, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12352, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r12350, %r857, %r12352, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12353, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12361, %r868, %r12352, %r12364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12365, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12366, %r12364, %r12365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12369, %r12361, %r12366;
	// end inline asm
	shr.u32 	%r12374, %r12352, 8;
	// begin inline asm
	lop3.b32 %r12372, %r857, %r12374, %r12353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12376, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12377, %r12353, %r12376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12380, %r12372, %r12377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12383, %r868, %r12374, %r12364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12387, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12388, %r12364, %r12387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12391, %r12383, %r12388;
	// end inline asm
	// begin inline asm
	mov.b32 %r12399, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12410, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12398, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r12396, %r857, %r12398, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12399, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12407, %r868, %r12398, %r12410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12411, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12412, %r12410, %r12411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12415, %r12407, %r12412;
	// end inline asm
	shr.u32 	%r12420, %r12398, 8;
	// begin inline asm
	lop3.b32 %r12418, %r857, %r12420, %r12399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12422, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12423, %r12399, %r12422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12426, %r12418, %r12423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12429, %r868, %r12420, %r12410, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12433, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12434, %r12410, %r12433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12437, %r12429, %r12434;
	// end inline asm
	// begin inline asm
	mov.b32 %r12445, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12456, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12444, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r12442, %r857, %r12444, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12445, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12453, %r868, %r12444, %r12456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12457, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12458, %r12456, %r12457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12461, %r12453, %r12458;
	// end inline asm
	shr.u32 	%r12466, %r12444, 8;
	// begin inline asm
	lop3.b32 %r12464, %r857, %r12466, %r12445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12468, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12469, %r12445, %r12468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12472, %r12464, %r12469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12475, %r868, %r12466, %r12456, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12479, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12480, %r12456, %r12479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12483, %r12475, %r12480;
	// end inline asm
	// begin inline asm
	mov.b32 %r12491, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12502, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12490, %r16317, -2004318072;
	// begin inline asm
	lop3.b32 %r12488, %r857, %r12490, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12491, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12499, %r868, %r12490, %r12502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12503, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12504, %r12502, %r12503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12507, %r12499, %r12504;
	// end inline asm
	shr.u32 	%r12512, %r12490, 8;
	// begin inline asm
	lop3.b32 %r12510, %r857, %r12512, %r12491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12514, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12515, %r12491, %r12514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12518, %r12510, %r12515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12521, %r868, %r12512, %r12502, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12525, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12526, %r12502, %r12525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12529, %r12521, %r12526;
	// end inline asm
	// begin inline asm
	mov.b32 %r12537, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12548, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12536, %r16318, -2004318072;
	// begin inline asm
	lop3.b32 %r12534, %r857, %r12536, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12537, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12545, %r868, %r12536, %r12548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12549, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12550, %r12548, %r12549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12553, %r12545, %r12550;
	// end inline asm
	shr.u32 	%r12558, %r12536, 8;
	// begin inline asm
	lop3.b32 %r12556, %r857, %r12558, %r12537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12560, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12561, %r12537, %r12560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12564, %r12556, %r12561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12567, %r868, %r12558, %r12548, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12571, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12572, %r12548, %r12571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12575, %r12567, %r12572;
	// end inline asm
	// begin inline asm
	mov.b32 %r12583, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12594, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12582, %r16319, -2004318072;
	// begin inline asm
	lop3.b32 %r12580, %r857, %r12582, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12583, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12591, %r868, %r12582, %r12594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12595, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12596, %r12594, %r12595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12599, %r12591, %r12596;
	// end inline asm
	shr.u32 	%r12604, %r12582, 8;
	// begin inline asm
	lop3.b32 %r12602, %r857, %r12604, %r12583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12606, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12607, %r12583, %r12606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12610, %r12602, %r12607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12613, %r868, %r12604, %r12594, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12617, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12618, %r12594, %r12617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12621, %r12613, %r12618;
	// end inline asm
	// begin inline asm
	mov.b32 %r12629, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12640, {%rs2197, %rs2197};
	// end inline asm
	xor.b32  	%r12628, %r16320, -2004318072;
	// begin inline asm
	lop3.b32 %r12626, %r857, %r12628, %r12629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12630, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12631, %r12629, %r12630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12634, %r12626, %r12631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12637, %r868, %r12628, %r12640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12641, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12642, %r12640, %r12641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12645, %r12637, %r12642;
	// end inline asm
	shr.u32 	%r12650, %r12628, 8;
	// begin inline asm
	lop3.b32 %r12648, %r857, %r12650, %r12629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12652, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12653, %r12629, %r12652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12656, %r12648, %r12653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12659, %r868, %r12650, %r12640, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12663, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12664, %r12640, %r12663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12667, %r12659, %r12664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12670, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12672, %r12670, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12675, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12677, %r12675, %r12323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12345;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12815, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12817, %r12815, %r12645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12820, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12822, %r12820, %r12656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12825, %r393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12827, %r12825, %r12667;
	// end inline asm
	// begin inline asm
	mov.b32 %r12835, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12846, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r857, %r858, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12835, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12843, %r868, %r858, %r12846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12847, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12848, %r12846, %r12847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12851, %r12843, %r12848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12854, %r857, %r880, %r12835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12858, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12859, %r12835, %r12858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12862, %r12854, %r12859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12865, %r868, %r880, %r12846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12869, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12870, %r12846, %r12869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12873, %r12865, %r12870;
	// end inline asm
	// begin inline asm
	mov.b32 %r12881, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12892, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r857, %r904, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12881, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12889, %r868, %r904, %r12892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12893, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12894, %r12892, %r12893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12897, %r12889, %r12894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12900, %r857, %r926, %r12881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12904, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12905, %r12881, %r12904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12908, %r12900, %r12905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12911, %r868, %r926, %r12892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12915, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12916, %r12892, %r12915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12919, %r12911, %r12916;
	// end inline asm
	// begin inline asm
	mov.b32 %r12927, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12938, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r857, %r950, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12927, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12935, %r868, %r950, %r12938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12939, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12940, %r12938, %r12939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12943, %r12935, %r12940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12946, %r857, %r972, %r12927, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12950, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12951, %r12927, %r12950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12954, %r12946, %r12951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12957, %r868, %r972, %r12938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12961, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12962, %r12938, %r12961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12965, %r12957, %r12962;
	// end inline asm
	// begin inline asm
	mov.b32 %r12973, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r12984, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r857, %r996, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12973, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12981, %r868, %r996, %r12984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12985, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12986, %r12984, %r12985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12989, %r12981, %r12986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12992, %r857, %r1018, %r12973, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12996, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12997, %r12973, %r12996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13000, %r12992, %r12997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13003, %r868, %r1018, %r12984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13007, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13008, %r12984, %r13007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13011, %r13003, %r13008;
	// end inline asm
	// begin inline asm
	mov.b32 %r13019, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13030, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r857, %r1042, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r13019, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13027, %r868, %r1042, %r13030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13031, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13032, %r13030, %r13031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13035, %r13027, %r13032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13038, %r857, %r1064, %r13019, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13042, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13043, %r13019, %r13042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13046, %r13038, %r13043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13049, %r868, %r1064, %r13030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13053, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13054, %r13030, %r13053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13057, %r13049, %r13054;
	// end inline asm
	// begin inline asm
	mov.b32 %r13065, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13076, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r857, %r1088, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13065, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13073, %r868, %r1088, %r13076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13077, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13078, %r13076, %r13077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13081, %r13073, %r13078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13084, %r857, %r1110, %r13065, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13088, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13089, %r13065, %r13088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13092, %r13084, %r13089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13095, %r868, %r1110, %r13076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13099, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13100, %r13076, %r13099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13103, %r13095, %r13100;
	// end inline asm
	// begin inline asm
	mov.b32 %r13111, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13122, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r857, %r1134, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13111, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13119, %r868, %r1134, %r13122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13123, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13124, %r13122, %r13123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13127, %r13119, %r13124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13130, %r857, %r1156, %r13111, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13134, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13135, %r13111, %r13134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13138, %r13130, %r13135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13141, %r868, %r1156, %r13122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13145, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13146, %r13122, %r13145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13149, %r13141, %r13146;
	// end inline asm
	// begin inline asm
	mov.b32 %r13157, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13168, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13154, %r857, %r1180, %r13157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13158, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13159, %r13157, %r13158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13162, %r13154, %r13159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13165, %r868, %r1180, %r13168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13169, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13170, %r13168, %r13169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13173, %r13165, %r13170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13176, %r857, %r1202, %r13157, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13180, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13181, %r13157, %r13180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13184, %r13176, %r13181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13187, %r868, %r1202, %r13168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13191, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13192, %r13168, %r13191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13195, %r13187, %r13192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13198, %r267, %r12840, %r12672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13202, %r267, %r12851, %r12677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13206, %r267, %r12862, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13210, %r267, %r12873, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13214, %r267, %r12886, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13218, %r267, %r12897, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13222, %r267, %r12908, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r267, %r12919, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r267, %r12932, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r267, %r12943, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r267, %r12954, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r267, %r12965, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r267, %r12978, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r267, %r12989, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r267, %r13000, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r267, %r13011, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r285, %r13024, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r285, %r13035, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r285, %r13046, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r285, %r13057, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r285, %r13070, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r285, %r13081, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13286, %r285, %r13092, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13290, %r285, %r13103, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13294, %r285, %r13116, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13298, %r285, %r13127, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13302, %r285, %r13138, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13306, %r285, %r13149, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13310, %r285, %r13162, %r12812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13314, %r285, %r13173, %r12817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13318, %r285, %r13184, %r12822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13322, %r285, %r13195, %r12827;
	// end inline asm
	// begin inline asm
	mov.b32 %r13331, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13342, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r857, %r4674, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13331, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13339, %r868, %r4674, %r13342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13343, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13344, %r13342, %r13343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13347, %r13339, %r13344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13350, %r857, %r4696, %r13331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13354, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13355, %r13331, %r13354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13358, %r13350, %r13355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13361, %r868, %r4696, %r13342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13365, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13366, %r13342, %r13365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13369, %r13361, %r13366;
	// end inline asm
	// begin inline asm
	mov.b32 %r13377, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13388, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r857, %r4720, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13377, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13385, %r868, %r4720, %r13388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13389, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13390, %r13388, %r13389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13393, %r13385, %r13390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13396, %r857, %r4742, %r13377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13400, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13401, %r13377, %r13400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13404, %r13396, %r13401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13407, %r868, %r4742, %r13388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13411, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13412, %r13388, %r13411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13415, %r13407, %r13412;
	// end inline asm
	// begin inline asm
	mov.b32 %r13423, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13434, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r857, %r4766, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13423, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13431, %r868, %r4766, %r13434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13435, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13436, %r13434, %r13435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13439, %r13431, %r13436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13442, %r857, %r4788, %r13423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13446, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13447, %r13423, %r13446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13450, %r13442, %r13447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13453, %r868, %r4788, %r13434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13457, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13458, %r13434, %r13457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13461, %r13453, %r13458;
	// end inline asm
	// begin inline asm
	mov.b32 %r13469, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13480, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r857, %r4812, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13469, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13477, %r868, %r4812, %r13480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13481, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13482, %r13480, %r13481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13485, %r13477, %r13482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13488, %r857, %r4834, %r13469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13492, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13493, %r13469, %r13492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13496, %r13488, %r13493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13499, %r868, %r4834, %r13480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13503, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13504, %r13480, %r13503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13507, %r13499, %r13504;
	// end inline asm
	// begin inline asm
	mov.b32 %r13515, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13526, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r857, %r4858, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13515, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13523, %r868, %r4858, %r13526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13527, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13528, %r13526, %r13527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13531, %r13523, %r13528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13534, %r857, %r4880, %r13515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13538, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13539, %r13515, %r13538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13542, %r13534, %r13539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13545, %r868, %r4880, %r13526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13549, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13550, %r13526, %r13549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13553, %r13545, %r13550;
	// end inline asm
	// begin inline asm
	mov.b32 %r13561, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13572, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r857, %r4904, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13561, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13569, %r868, %r4904, %r13572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13573, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13574, %r13572, %r13573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13577, %r13569, %r13574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13580, %r857, %r4926, %r13561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13584, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13585, %r13561, %r13584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13588, %r13580, %r13585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13591, %r868, %r4926, %r13572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13595, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13596, %r13572, %r13595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13599, %r13591, %r13596;
	// end inline asm
	// begin inline asm
	mov.b32 %r13607, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13618, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r857, %r4950, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13607, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13615, %r868, %r4950, %r13618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13619, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13620, %r13618, %r13619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13623, %r13615, %r13620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13626, %r857, %r4972, %r13607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13630, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13631, %r13607, %r13630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13634, %r13626, %r13631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13637, %r868, %r4972, %r13618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13641, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13642, %r13618, %r13641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13645, %r13637, %r13642;
	// end inline asm
	// begin inline asm
	mov.b32 %r13653, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13664, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13650, %r857, %r4996, %r13653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13654, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13655, %r13653, %r13654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13658, %r13650, %r13655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13661, %r868, %r4996, %r13664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13665, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13666, %r13664, %r13665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13669, %r13661, %r13666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13672, %r857, %r5018, %r13653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13676, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13677, %r13653, %r13676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13680, %r13672, %r13677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13683, %r868, %r5018, %r13664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13687, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13688, %r13664, %r13687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13691, %r13683, %r13688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13694, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13696, %r13694, %r13336, %r13198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13700, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13702, %r13700, %r13347, %r13202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13706, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13708, %r13706, %r13358, %r13206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13712, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13714, %r13712, %r13369, %r13210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13718, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13720, %r13718, %r13382, %r13214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13724, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13726, %r13724, %r13393, %r13218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13730, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13732, %r13730, %r13404, %r13222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13736, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13738, %r13736, %r13415, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13428, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13439, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13450, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13461, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13474, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13485, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13496, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13507, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13520, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13531, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13542, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13553, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13566, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13577, %r13282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13588, %r13286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13599, %r13290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13612, %r13294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13623, %r13298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13634, %r13302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13645, %r13306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13658, %r13310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13868, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13870, %r13868, %r13669, %r13314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13874, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13876, %r13874, %r13680, %r13318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13880, %r321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13882, %r13880, %r13691, %r13322;
	// end inline asm
	// begin inline asm
	mov.b32 %r13891, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13902, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r857, %r8490, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13891, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13899, %r868, %r8490, %r13902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13903, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13904, %r13902, %r13903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13907, %r13899, %r13904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13910, %r857, %r8512, %r13891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13914, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13915, %r13891, %r13914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13918, %r13910, %r13915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13921, %r868, %r8512, %r13902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13925, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13926, %r13902, %r13925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13929, %r13921, %r13926;
	// end inline asm
	// begin inline asm
	mov.b32 %r13937, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13948, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r857, %r8536, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13937, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13945, %r868, %r8536, %r13948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13949, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13950, %r13948, %r13949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13953, %r13945, %r13950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13956, %r857, %r8558, %r13937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13960, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13961, %r13937, %r13960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13964, %r13956, %r13961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13967, %r868, %r8558, %r13948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13971, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13972, %r13948, %r13971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13975, %r13967, %r13972;
	// end inline asm
	// begin inline asm
	mov.b32 %r13983, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r13994, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r857, %r8582, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13983, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13991, %r868, %r8582, %r13994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13995, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13996, %r13994, %r13995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13999, %r13991, %r13996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14002, %r857, %r8604, %r13983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14006, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14007, %r13983, %r14006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14010, %r14002, %r14007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14013, %r868, %r8604, %r13994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14017, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14018, %r13994, %r14017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14021, %r14013, %r14018;
	// end inline asm
	// begin inline asm
	mov.b32 %r14029, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14040, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r857, %r8628, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14029, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14037, %r868, %r8628, %r14040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14041, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14042, %r14040, %r14041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14045, %r14037, %r14042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14048, %r857, %r8650, %r14029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14052, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14053, %r14029, %r14052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14056, %r14048, %r14053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14059, %r868, %r8650, %r14040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14063, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14064, %r14040, %r14063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14067, %r14059, %r14064;
	// end inline asm
	// begin inline asm
	mov.b32 %r14075, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14086, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r857, %r8674, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14075, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14083, %r868, %r8674, %r14086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14087, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14088, %r14086, %r14087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14091, %r14083, %r14088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14094, %r857, %r8696, %r14075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14098, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14099, %r14075, %r14098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14102, %r14094, %r14099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14105, %r868, %r8696, %r14086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14109, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14110, %r14086, %r14109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14113, %r14105, %r14110;
	// end inline asm
	// begin inline asm
	mov.b32 %r14121, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14132, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r857, %r8720, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14121, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14129, %r868, %r8720, %r14132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14133, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14134, %r14132, %r14133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14137, %r14129, %r14134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14140, %r857, %r8742, %r14121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14144, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14145, %r14121, %r14144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14148, %r14140, %r14145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14151, %r868, %r8742, %r14132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14155, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14156, %r14132, %r14155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14159, %r14151, %r14156;
	// end inline asm
	// begin inline asm
	mov.b32 %r14167, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14178, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r857, %r8766, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14167, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14175, %r868, %r8766, %r14178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14179, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14180, %r14178, %r14179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14183, %r14175, %r14180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14186, %r857, %r8788, %r14167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14190, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14191, %r14167, %r14190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14194, %r14186, %r14191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14197, %r868, %r8788, %r14178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14201, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14202, %r14178, %r14201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14205, %r14197, %r14202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14213, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r14224, {%rs2197, %rs2197};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14210, %r857, %r8812, %r14213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14214, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14215, %r14213, %r14214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14218, %r14210, %r14215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14221, %r868, %r8812, %r14224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14225, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14226, %r14224, %r14225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14229, %r14221, %r14226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14232, %r857, %r8834, %r14213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14236, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14237, %r14213, %r14236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14240, %r14232, %r14237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14243, %r868, %r8834, %r14224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14247, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14248, %r14224, %r14247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14251, %r14243, %r14248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14389, %r339, %r13896, %r13696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14386, %r339, %r13907, %r13702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r339, %r13918, %r13708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r339, %r13929, %r13714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r339, %r13942, %r13720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r339, %r13953, %r13726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r339, %r13964, %r13732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r339, %r13975, %r13738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r339, %r13988, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r339, %r13999, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r339, %r14010, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r339, %r14021, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r339, %r14034, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r339, %r14045, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r339, %r14056, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r339, %r14067, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r357, %r14080, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r357, %r14091, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r357, %r14102, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r357, %r14113, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r357, %r14126, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r357, %r14137, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r357, %r14148, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r357, %r14159, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r357, %r14172, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r357, %r14183, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r357, %r14194, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r357, %r14205, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r357, %r14218, %r13864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r357, %r14229, %r13870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r357, %r14240, %r13876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r357, %r14251, %r13882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14382, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14384, %r14382, %r14386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14387, %r396, %r14389, %r14384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14391, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14393, %r14391, %r14395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r396, %r14398, %r14393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14400, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14402, %r14400, %r14404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r396, %r14407, %r14402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14409, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14411, %r14409, %r14413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r396, %r14416, %r14411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14418, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14420, %r14418, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r396, %r14425, %r14420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r396, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r396, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r396, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r399, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r399, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r399, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r399, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r399, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r399, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14508, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r14508, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r399, %r14515, %r14510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14517, %r405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r14517, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r399, %r14524, %r14519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14526, %r402, %r14389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14529, %r396, %r14386, %r14526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14533, %r402, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r396, %r14395, %r14533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14540, %r402, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14543, %r396, %r14404, %r14540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14547, %r402, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14550, %r396, %r14413, %r14547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14554, %r402, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r396, %r14422, %r14554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r402, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r396, %r14431, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r402, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r396, %r14440, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r402, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r396, %r14449, %r14575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r405, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r399, %r14458, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r405, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r399, %r14467, %r14589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14596, %r405, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r399, %r14476, %r14596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14603, %r405, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14606, %r399, %r14485, %r14603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14610, %r405, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14613, %r399, %r14494, %r14610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14617, %r405, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14620, %r399, %r14503, %r14617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14624, %r405, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14627, %r399, %r14512, %r14624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14631, %r405, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14634, %r399, %r14521, %r14631;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14805, %r14802}, {%r463, %r469, %r466, %r472}, {%r14387, %r14529}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14814, %r14811}, {%r463, %r469, %r466, %r472}, {%r14396, %r14536}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14823, %r14820}, {%r463, %r469, %r466, %r472}, {%r14405, %r14543}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14832, %r14829}, {%r463, %r469, %r466, %r472}, {%r14414, %r14550}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14841, %r14838}, {%r463, %r469, %r466, %r472}, {%r14423, %r14557}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r463, %r469, %r466, %r472}, {%r14432, %r14564}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r463, %r469, %r466, %r472}, {%r14441, %r14571}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r463, %r469, %r466, %r472}, {%r14450, %r14578}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r463, %r469, %r466, %r472}, {%r14459, %r14585}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r463, %r469, %r466, %r472}, {%r14468, %r14592}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r463, %r469, %r466, %r472}, {%r14477, %r14599}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r463, %r469, %r466, %r472}, {%r14486, %r14606}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r463, %r469, %r466, %r472}, {%r14495, %r14613}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r463, %r469, %r466, %r472}, {%r14504, %r14620}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14931, %r14928}, {%r463, %r469, %r466, %r472}, {%r14513, %r14627}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14940, %r14937}, {%r463, %r469, %r466, %r472}, {%r14522, %r14634}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14798, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14800, %r14798, %r14802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14803, %r513, %r14805, %r14800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14807, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14809, %r14807, %r14811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14812, %r513, %r14814, %r14809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14816, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14818, %r14816, %r14820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14821, %r513, %r14823, %r14818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14825, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14827, %r14825, %r14829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14830, %r513, %r14832, %r14827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14834, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14836, %r14834, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14839, %r513, %r14841, %r14836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r513, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r513, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r513, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r513, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r513, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r513, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r513, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r513, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r513, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14924, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r14924, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r513, %r14931, %r14926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14933, %r516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r14933, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r513, %r14940, %r14935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14942, %r516, %r14805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14945, %r513, %r14802, %r14942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14949, %r516, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14952, %r513, %r14811, %r14949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14956, %r516, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14959, %r513, %r14820, %r14956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14963, %r516, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14966, %r513, %r14829, %r14963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14970, %r516, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14973, %r513, %r14838, %r14970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r516, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r513, %r14847, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r516, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r513, %r14856, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r516, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r513, %r14865, %r14991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r516, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r513, %r14874, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r516, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r513, %r14883, %r15005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15012, %r516, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15015, %r513, %r14892, %r15012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15019, %r516, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15022, %r513, %r14901, %r15019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15026, %r516, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15029, %r513, %r14910, %r15026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15033, %r516, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15036, %r513, %r14919, %r15033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15040, %r516, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15043, %r513, %r14928, %r15040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15047, %r516, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15050, %r513, %r14937, %r15047;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15343, %r15346}, {%r551, %r557, %r554, %r560}, {%r14803, %r14945}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15349, %r15352}, {%r551, %r557, %r554, %r560}, {%r14812, %r14952}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15355, %r15358}, {%r551, %r557, %r554, %r560}, {%r14821, %r14959}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15361, %r15364}, {%r551, %r557, %r554, %r560}, {%r14830, %r14966}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15367, %r15370}, {%r551, %r557, %r554, %r560}, {%r14839, %r14973}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15373, %r15376}, {%r551, %r557, %r554, %r560}, {%r14848, %r14980}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15379, %r15382}, {%r551, %r557, %r554, %r560}, {%r14857, %r14987}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15385, %r15388}, {%r551, %r557, %r554, %r560}, {%r14866, %r14994}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15344, %r15347}, {%r551, %r557, %r554, %r560}, {%r14875, %r15001}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15350, %r15353}, {%r551, %r557, %r554, %r560}, {%r14884, %r15008}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15356, %r15359}, {%r551, %r557, %r554, %r560}, {%r14893, %r15015}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15362, %r15365}, {%r551, %r557, %r554, %r560}, {%r14902, %r15022}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15368, %r15371}, {%r551, %r557, %r554, %r560}, {%r14911, %r15029}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15374, %r15377}, {%r551, %r557, %r554, %r560}, {%r14920, %r15036}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15380, %r15383}, {%r551, %r557, %r554, %r560}, {%r14929, %r15043}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r551, %r557, %r554, %r560}, {%r14938, %r15050}, {%r3198, %r3198};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15342, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15345, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15348, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15351, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15354, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15357, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15360, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15363, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15366, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15369, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15372, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15375, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15378, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15381, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15384, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15390, %r15343, %r15344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15393, %r15346, %r15347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15396, %r15349, %r15350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15399, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15402, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15405, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15408, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15411, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15414, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15417, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15420, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15423, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15426, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15429, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15432, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15438, %r125, %r15342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15441, %r125, %r15345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15444, %r125, %r15348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r125, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r125, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r125, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r125, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r125, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r125, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r125, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r125, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r125, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r125, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r125, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r125, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r125, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r126, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r126, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r126, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r126, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r126, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r126, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r126, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r126, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r126, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r126, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r126, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r126, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r126, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r126, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r126, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r126, %r15435;
	// end inline asm
	// begin inline asm
	mov.b32 %r15534, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15535, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15536, %r15438, %r15534;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15539, %r15536, %r15535;
	// end inline asm
	// begin inline asm
	mov.b32 %r15542, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15544, %r15441, %r15542;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15547, %r15544, %r15543;
	// end inline asm
	// begin inline asm
	mov.b32 %r15550, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15552, %r15444, %r15550;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15555, %r15552, %r15551;
	// end inline asm
	// begin inline asm
	mov.b32 %r15558, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15560, %r15447, %r15558;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15563, %r15560, %r15559;
	// end inline asm
	// begin inline asm
	mov.b32 %r15566, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15568, %r15450, %r15566;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15571, %r15568, %r15567;
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15576, %r15453, %r15574;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15579, %r15576, %r15575;
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15584, %r15456, %r15582;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15587, %r15584, %r15583;
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15592, %r15459, %r15590;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15595, %r15592, %r15591;
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15600, %r15462, %r15598;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15603, %r15600, %r15599;
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15608, %r15465, %r15606;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15611, %r15608, %r15607;
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15616, %r15468, %r15614;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15619, %r15616, %r15615;
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15624, %r15471, %r15622;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15627, %r15624, %r15623;
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15632, %r15474, %r15630;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15635, %r15632, %r15631;
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15640, %r15477, %r15638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15643, %r15640, %r15639;
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15648, %r15480, %r15646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15651, %r15648, %r15647;
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15656, %r15483, %r15654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15659, %r15656, %r15655;
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15664, %r15486, %r15662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15667, %r15664, %r15663;
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15672, %r15489, %r15670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15675, %r15672, %r15671;
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15680, %r15492, %r15678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15683, %r15680, %r15679;
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15688, %r15495, %r15686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15691, %r15688, %r15687;
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15696, %r15498, %r15694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15699, %r15696, %r15695;
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15704, %r15501, %r15702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15707, %r15704, %r15703;
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15712, %r15504, %r15710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15715, %r15712, %r15711;
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15720, %r15507, %r15718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15723, %r15720, %r15719;
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15728, %r15510, %r15726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15731, %r15728, %r15727;
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15736, %r15513, %r15734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15739, %r15736, %r15735;
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15744, %r15516, %r15742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15747, %r15744, %r15743;
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15752, %r15519, %r15750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15755, %r15752, %r15751;
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15760, %r15522, %r15758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15763, %r15760, %r15759;
	// end inline asm
	// begin inline asm
	mov.b32 %r15766, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15768, %r15525, %r15766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15771, %r15768, %r15767;
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15776, %r15528, %r15774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15779, %r15776, %r15775;
	// end inline asm
	// begin inline asm
	mov.b32 %r15782, {%rs430, %rs430};
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs432, %rs432};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15784, %r15531, %r15782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15787, %r15784, %r15783;
	// end inline asm
	// begin inline asm
	mov.b32 %r15793, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15792, %r15793, %r15791;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15539, %r15792;
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15799, %r15793, %r15798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15547, %r15799;
	// end inline asm
	// begin inline asm
	mov.b32 %r15805, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15806, %r15793, %r15805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15555, %r15806;
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15813, %r15793, %r15812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15563, %r15813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15819, %r15795, %r15809, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15823, %r15802, %r15816, %r4374;
	// end inline asm
	shl.b32 	%r15830, %r15823, 4;
	// begin inline asm
	lop3.b32 %r15827, %r4380, %r15819, %r15830, 202;
	// end inline asm
	xor.b32  	%r16198, %r15827, -2004318072;
	// begin inline asm
	mov.b32 %r15834, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15832, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15833, %r15834, %r15832;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15571, %r15833;
	// end inline asm
	// begin inline asm
	mov.b32 %r15839, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15840, %r15834, %r15839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15579, %r15840;
	// end inline asm
	// begin inline asm
	mov.b32 %r15846, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15847, %r15834, %r15846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15587, %r15847;
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15834, %r15853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15595, %r15854;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15860, %r15836, %r15850, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15864, %r15843, %r15857, %r4374;
	// end inline asm
	shl.b32 	%r15871, %r15864, 4;
	// begin inline asm
	lop3.b32 %r15868, %r4380, %r15860, %r15871, 202;
	// end inline asm
	xor.b32  	%r16199, %r15868, -2004318072;
	// begin inline asm
	mov.b32 %r15875, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15873, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15874, %r15875, %r15873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15603, %r15874;
	// end inline asm
	// begin inline asm
	mov.b32 %r15880, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15881, %r15875, %r15880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15611, %r15881;
	// end inline asm
	// begin inline asm
	mov.b32 %r15887, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15888, %r15875, %r15887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15619, %r15888;
	// end inline asm
	// begin inline asm
	mov.b32 %r15894, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15875, %r15894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15627, %r15895;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15901, %r15877, %r15891, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15905, %r15884, %r15898, %r4374;
	// end inline asm
	shl.b32 	%r15912, %r15905, 4;
	// begin inline asm
	lop3.b32 %r15909, %r4380, %r15901, %r15912, 202;
	// end inline asm
	xor.b32  	%r16200, %r15909, -2004318072;
	// begin inline asm
	mov.b32 %r15916, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15914, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15915, %r15916, %r15914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15635, %r15915;
	// end inline asm
	// begin inline asm
	mov.b32 %r15921, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15922, %r15916, %r15921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15643, %r15922;
	// end inline asm
	// begin inline asm
	mov.b32 %r15928, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15929, %r15916, %r15928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15651, %r15929;
	// end inline asm
	// begin inline asm
	mov.b32 %r15935, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15916, %r15935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15659, %r15936;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15942, %r15918, %r15932, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15946, %r15925, %r15939, %r4374;
	// end inline asm
	shl.b32 	%r15953, %r15946, 4;
	// begin inline asm
	lop3.b32 %r15950, %r4380, %r15942, %r15953, 202;
	// end inline asm
	xor.b32  	%r16201, %r15950, -2004318072;
	// begin inline asm
	mov.b32 %r15957, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15955, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15956, %r15957, %r15955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15667, %r15956;
	// end inline asm
	// begin inline asm
	mov.b32 %r15962, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15963, %r15957, %r15962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15675, %r15963;
	// end inline asm
	// begin inline asm
	mov.b32 %r15969, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15970, %r15957, %r15969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15683, %r15970;
	// end inline asm
	// begin inline asm
	mov.b32 %r15976, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15957, %r15976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15691, %r15977;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15983, %r15959, %r15973, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15987, %r15966, %r15980, %r4374;
	// end inline asm
	shl.b32 	%r15994, %r15987, 4;
	// begin inline asm
	lop3.b32 %r15991, %r4380, %r15983, %r15994, 202;
	// end inline asm
	xor.b32  	%r16202, %r15991, -2004318072;
	// begin inline asm
	mov.b32 %r15998, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r15996, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15997, %r15998, %r15996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15699, %r15997;
	// end inline asm
	// begin inline asm
	mov.b32 %r16003, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16004, %r15998, %r16003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15707, %r16004;
	// end inline asm
	// begin inline asm
	mov.b32 %r16010, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16011, %r15998, %r16010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15715, %r16011;
	// end inline asm
	// begin inline asm
	mov.b32 %r16017, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r15998, %r16017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r15723, %r16018;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16024, %r16000, %r16014, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16028, %r16007, %r16021, %r4374;
	// end inline asm
	shl.b32 	%r16035, %r16028, 4;
	// begin inline asm
	lop3.b32 %r16032, %r4380, %r16024, %r16035, 202;
	// end inline asm
	xor.b32  	%r16203, %r16032, -2004318072;
	// begin inline asm
	mov.b32 %r16039, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r16037, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16038, %r16039, %r16037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r15731, %r16038;
	// end inline asm
	// begin inline asm
	mov.b32 %r16044, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16045, %r16039, %r16044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r15739, %r16045;
	// end inline asm
	// begin inline asm
	mov.b32 %r16051, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16052, %r16039, %r16051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r15747, %r16052;
	// end inline asm
	// begin inline asm
	mov.b32 %r16058, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16059, %r16039, %r16058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r15755, %r16059;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16065, %r16041, %r16055, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16069, %r16048, %r16062, %r4374;
	// end inline asm
	shl.b32 	%r16076, %r16069, 4;
	// begin inline asm
	lop3.b32 %r16073, %r4380, %r16065, %r16076, 202;
	// end inline asm
	xor.b32  	%r16204, %r16073, -2004318072;
	// begin inline asm
	mov.b32 %r16080, {%rs2405, %rs2405};
	// end inline asm
	// begin inline asm
	mov.b32 %r16078, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16079, %r16080, %r16078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16082, %r15763, %r16079;
	// end inline asm
	// begin inline asm
	mov.b32 %r16085, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16086, %r16080, %r16085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r15771, %r16086;
	// end inline asm
	// begin inline asm
	mov.b32 %r16092, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16093, %r16080, %r16092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r15779, %r16093;
	// end inline asm
	// begin inline asm
	mov.b32 %r16099, {%rs2413, %rs2413};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16100, %r16080, %r16099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16103, %r15787, %r16100;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16106, %r16082, %r16096, %r4374;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16110, %r16089, %r16103, %r4374;
	// end inline asm
	shl.b32 	%r16117, %r16110, 4;
	// begin inline asm
	lop3.b32 %r16114, %r4380, %r16106, %r16117, 202;
	// end inline asm
	xor.b32  	%r16205, %r16114, -2004318072;
	st.shared.u32 	[%rd96], %r16198;
	st.shared.u32 	[%rd98], %r16199;
	st.shared.u32 	[%rd100], %r16200;
	st.shared.u32 	[%rd102], %r16201;
	st.shared.u32 	[%rd104], %r16202;
	st.shared.u32 	[%rd106], %r16203;
	st.shared.u32 	[%rd108], %r16204;
	st.shared.u32 	[%rd110], %r16205;
	add.s32 	%r16330, %r16330, 128;
	setp.ne.s32 	%p308, %r16330, 256;
	@%p308 bra 	$L__BB0_159;
// %bb.160:                             // %guard_exit29693
                                        //   in Loop: Header=BB0_116 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16211, [%rd4];
	ld.shared.u32 	%r16212, [%rd5+128];
	ld.shared.u32 	%r16219, [%rd5+4];
	ld.shared.u32 	%r16220, [%rd5+132];
	ld.shared.u32 	%r16227, [%rd6];
	ld.shared.u32 	%r16228, [%rd7+128];
	ld.shared.u32 	%r16235, [%rd7+4];
	ld.shared.u32 	%r16236, [%rd7+132];
	ld.shared.u32 	%r16243, [%rd4+16644];
	ld.shared.u32 	%r16244, [%rd5+16772];
	ld.shared.u32 	%r16251, [%rd5+16648];
	ld.shared.u32 	%r16252, [%rd5+16776];
	ld.shared.u32 	%r16259, [%rd6+16644];
	ld.shared.u32 	%r16260, [%rd21];
	ld.shared.u32 	%r16267, [%rd7+16648];
	ld.shared.u32 	%r16268, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16206, %r16211, %r16212, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16210, %r16211, %r16212, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16214, %r16219, %r16220, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16218, %r16219, %r16220, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16222, %r16227, %r16228, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16226, %r16227, %r16228, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16230, %r16235, %r16236, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16234, %r16235, %r16236, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16238, %r16243, %r16244, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16242, %r16243, %r16244, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16246, %r16251, %r16252, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16250, %r16251, %r16252, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16254, %r16259, %r16260, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16258, %r16259, %r16260, %r16213;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16262, %r16267, %r16268, %r16209;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16266, %r16267, %r16268, %r16213;
	// end inline asm
	selp.b32 	%r16271, %r16210, %r16206, %p294;
	shfl.sync.bfly.b32	%r16272, %r16271, 8, 31, -1;
	selp.b32 	%r16273, %r16218, %r16214, %p294;
	shfl.sync.bfly.b32	%r16274, %r16273, 8, 31, -1;
	selp.b32 	%r16275, %r16226, %r16222, %p294;
	shfl.sync.bfly.b32	%r16276, %r16275, 8, 31, -1;
	selp.b32 	%r16277, %r16234, %r16230, %p294;
	shfl.sync.bfly.b32	%r16278, %r16277, 8, 31, -1;
	selp.b32 	%r16279, %r16242, %r16238, %p294;
	shfl.sync.bfly.b32	%r16280, %r16279, 8, 31, -1;
	selp.b32 	%r16281, %r16250, %r16246, %p294;
	shfl.sync.bfly.b32	%r16282, %r16281, 8, 31, -1;
	selp.b32 	%r16283, %r16258, %r16254, %p294;
	shfl.sync.bfly.b32	%r16284, %r16283, 8, 31, -1;
	selp.b32 	%r16285, %r16266, %r16262, %p294;
	shfl.sync.bfly.b32	%r16286, %r16285, 8, 31, -1;
	mov.u32 	%r16321, 256;
	bra.uni 	$L__BB0_116;
$L__BB0_117:                            // %L70688
	mov.u32 	%r706, 0;
	st.global.u32 	[%rd3], %r706;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r16288, 2;
	st.global.u32 	[%rd3], %r16288;
	mov.u64 	%rd113, exception5817;
	cvta.global.u64 	%rd114, %rd113;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd114;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16287, 3;
	st.global.u32 	[%rd3], %r16287;
	mov.u64 	%rd111, exception5817;
	cvta.global.u64 	%rd112, %rd111;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd112;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd27, exception15841;
	cvta.global.u64 	%rd28, %rd27;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd28;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r220;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
