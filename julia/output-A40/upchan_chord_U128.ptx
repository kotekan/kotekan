// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5818[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<313>;
	.reg .b16 	%rs<2397>;
	.reg .b32 	%r<16392>;
	.reg .f32 	%f<1424>;
	.reg .b64 	%rd<160>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r187, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r194, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r194, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r188, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r195, %r4, 9;
	or.b32  	%r196, %r2, %r3;
	or.b32  	%r197, %r196, %r195;
	mul.wide.u32 	%rd30, %r197, 4;
	add.s64 	%rd4, %rd24, %rd30;
	mov.u32 	%r198, 1;
	st.global.u32 	[%rd4], %r198;
	setp.gt.u32 	%p2, %r188, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r189, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r189, %r188;
	setp.gt.s32 	%p4, %r189, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r190, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r199, %r189, %r188;
	and.b32  	%r200, %r199, 255;
	setp.ne.s32 	%p6, %r200, 0;
	setp.gt.u32 	%p7, %r190, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r191, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r191, %r190;
	setp.gt.s32 	%p10, %r191, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r201, %r191, %r190;
	and.b32  	%r202, %r201, 1;
	setp.eq.b32 	%p12, %r202, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r192, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r192, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r193, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r192, %r193;
	setp.lt.s32 	%p17, %r193, 49;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r147, %r3, 1, 1;
	and.b32  	%r148, %r3, 1;
	bfe.u32 	%r150, %r3, 2, 1;
	shr.u32 	%r151, %r3, 4;
	shl.b32 	%r214, %r151, 2;
	shl.b32 	%r215, %r150, 3;
	shl.b32 	%r216, %r148, 4;
	shl.b32 	%r217, %r147, 5;
	or.b32  	%r218, %r216, %r217;
	or.b32  	%r219, %r215, %r218;
	or.b32  	%r220, %r214, %r219;
	bfe.u32 	%r153, %r3, 3, 1;
	shl.b32 	%r221, %r153, 1;
	or.b32  	%r154, %r221, %r220;
	shl.b32 	%r155, %r154, 1;
	add.s32 	%r222, %r155, -511;
	cvt.rn.f32.s32 	%f126, %r222;
	mov.f32 	%f127, 0f44800000;
	div.approx.f32 	%f103, %f126, %f127;
	abs.f32 	%f128, %f103;
	setp.gt.f32 	%p19, %f128, 0f4B800000;
	mul.f32 	%f129, %f103, 0f00000000;
	selp.f32 	%f130, %f129, %f103, %p19;
	add.f32 	%f131, %f130, %f130;
	mov.b32 	%r223, %f131;
	and.b32  	%r224, %r223, -2147483648;
	mov.f32 	%f151, 0f00000000;
	mul.f32 	%f105, %f103, 0f40800000;
	setp.neu.f32 	%p24, %f105, 0f00000000;
	mov.f32 	%f1415, 0f3F800000;
	mov.f32 	%f1400, %f1415;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L762
	add.f32 	%f154, %f105, %f105;
	mov.b32 	%r230, %f154;
	and.b32  	%r231, %r230, -2147483648;
	or.b32  	%r232, %r231, 1056964608;
	mov.b32 	%f155, %r232;
	add.f32 	%f156, %f154, %f155;
	cvt.rzi.f32.f32 	%f157, %f156;
	abs.f32 	%f158, %f154;
	setp.gt.f32 	%p25, %f158, 0f4B000000;
	selp.f32 	%f159, %f154, %f157, %p25;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p26, %f158, 0f3F000000;
	selp.f32 	%f161, %f160, %f159, %p26;
	cvt.rzi.s32.f32 	%r233, %f161;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f105;
	mul.f32 	%f163, %f162, %f162;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	and.b32  	%r234, %r233, 1;
	setp.eq.b32 	%p27, %r234, 1;
	selp.f32 	%f173, %f171, %f172, %p27;
	and.b32  	%r235, %r233, 2;
	setp.eq.s32 	%p28, %r235, 0;
	sub.f32 	%f175, %f151, %f173;
	selp.f32 	%f176, %f173, %f175, %p28;
	cvt.rzi.f32.f32 	%f177, %f105;
	setp.eq.f32 	%p29, %f105, %f177;
	mul.f32 	%f178, %f105, 0f00000000;
	selp.f32 	%f179, %f178, %f176, %p29;
	mul.f32 	%f180, %f103, 0f41490FDB;
	div.approx.f32 	%f1400, %f179, %f180;
$L__BB0_13:                             // %L766
	or.b32  	%r225, %r224, 1056964608;
	add.s32 	%r236, %r155, -383;
	cvt.rn.f32.s32 	%f184, %r236;
	div.approx.f32 	%f4, %f184, %f127;
	abs.f32 	%f186, %f4;
	setp.gt.f32 	%p30, %f186, 0f4B800000;
	mul.f32 	%f187, %f4, 0f00000000;
	selp.f32 	%f188, %f187, %f4, %p30;
	add.f32 	%f189, %f188, %f188;
	mov.b32 	%r237, %f189;
	and.b32  	%r238, %r237, -2147483648;
	or.b32  	%r239, %r238, 1056964608;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p35, %f6, 0f00000000;
	mov.f32 	%f1401, %f1415;
	@%p35 bra 	$L__BB0_15;
// %bb.14:                              // %L780
	add.f32 	%f212, %f6, %f6;
	mov.b32 	%r244, %f212;
	and.b32  	%r245, %r244, -2147483648;
	or.b32  	%r246, %r245, 1056964608;
	mov.b32 	%f213, %r246;
	add.f32 	%f214, %f212, %f213;
	cvt.rzi.f32.f32 	%f215, %f214;
	abs.f32 	%f216, %f212;
	setp.gt.f32 	%p36, %f216, 0f4B000000;
	selp.f32 	%f217, %f212, %f215, %p36;
	cvt.rzi.f32.f32 	%f218, %f212;
	setp.lt.f32 	%p37, %f216, 0f3F000000;
	selp.f32 	%f219, %f218, %f217, %p37;
	cvt.rzi.s32.f32 	%r247, %f219;
	fma.rn.f32 	%f220, %f219, 0fBF000000, %f6;
	mul.f32 	%f221, %f220, %f220;
	fma.rn.f32 	%f222, %f221, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f223, %f221, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f224, %f222, %f221, 0fC0A55DF6;
	fma.rn.f32 	%f225, %f223, %f221, 0f4081E0CF;
	fma.rn.f32 	%f226, %f221, %f220, 0f00000000;
	fma.rn.f32 	%f227, %f225, %f221, 0fC09DE9E6;
	fma.rn.f32 	%f228, %f224, %f226, 0f00000000;
	fma.rn.f32 	%f229, %f227, %f221, 0f3F800000;
	fma.rn.f32 	%f230, %f220, 0f40490FDB, %f228;
	and.b32  	%r248, %r247, 1;
	setp.eq.b32 	%p38, %r248, 1;
	selp.f32 	%f231, %f229, %f230, %p38;
	and.b32  	%r249, %r247, 2;
	setp.eq.s32 	%p39, %r249, 0;
	sub.f32 	%f233, %f151, %f231;
	selp.f32 	%f234, %f231, %f233, %p39;
	cvt.rzi.f32.f32 	%f235, %f6;
	setp.eq.f32 	%p40, %f6, %f235;
	mul.f32 	%f236, %f6, 0f00000000;
	selp.f32 	%f237, %f236, %f234, %p40;
	mul.f32 	%f238, %f4, 0f41490FDB;
	div.approx.f32 	%f1401, %f237, %f238;
$L__BB0_15:                             // %L784
	mov.b32 	%f132, %r225;
	mov.b32 	%f190, %r239;
	add.s32 	%r253, %r155, -509;
	cvt.rn.f32.s32 	%f243, %r253;
	div.approx.f32 	%f9, %f243, %f127;
	abs.f32 	%f245, %f9;
	setp.gt.f32 	%p41, %f245, 0f4B800000;
	mul.f32 	%f246, %f9, 0f00000000;
	selp.f32 	%f247, %f246, %f9, %p41;
	add.f32 	%f248, %f247, %f247;
	mov.b32 	%r254, %f248;
	and.b32  	%r255, %r254, -2147483648;
	or.b32  	%r256, %r255, 1056964608;
	mov.b32 	%f249, %r256;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p46, %f11, 0f00000000;
	mov.f32 	%f1402, %f1415;
	@%p46 bra 	$L__BB0_17;
// %bb.16:                              // %L860
	add.f32 	%f271, %f11, %f11;
	mov.b32 	%r261, %f271;
	and.b32  	%r262, %r261, -2147483648;
	or.b32  	%r263, %r262, 1056964608;
	mov.b32 	%f272, %r263;
	add.f32 	%f273, %f271, %f272;
	cvt.rzi.f32.f32 	%f274, %f273;
	abs.f32 	%f275, %f271;
	setp.gt.f32 	%p47, %f275, 0f4B000000;
	selp.f32 	%f276, %f271, %f274, %p47;
	cvt.rzi.f32.f32 	%f277, %f271;
	setp.lt.f32 	%p48, %f275, 0f3F000000;
	selp.f32 	%f278, %f277, %f276, %p48;
	cvt.rzi.s32.f32 	%r264, %f278;
	fma.rn.f32 	%f279, %f278, 0fBF000000, %f11;
	mul.f32 	%f280, %f279, %f279;
	fma.rn.f32 	%f281, %f280, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f282, %f280, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f283, %f281, %f280, 0fC0A55DF6;
	fma.rn.f32 	%f284, %f282, %f280, 0f4081E0CF;
	fma.rn.f32 	%f285, %f280, %f279, 0f00000000;
	fma.rn.f32 	%f286, %f284, %f280, 0fC09DE9E6;
	fma.rn.f32 	%f287, %f283, %f285, 0f00000000;
	fma.rn.f32 	%f288, %f286, %f280, 0f3F800000;
	fma.rn.f32 	%f289, %f279, 0f40490FDB, %f287;
	and.b32  	%r265, %r264, 1;
	setp.eq.b32 	%p49, %r265, 1;
	selp.f32 	%f290, %f288, %f289, %p49;
	and.b32  	%r266, %r264, 2;
	setp.eq.s32 	%p50, %r266, 0;
	sub.f32 	%f292, %f151, %f290;
	selp.f32 	%f293, %f290, %f292, %p50;
	cvt.rzi.f32.f32 	%f294, %f11;
	setp.eq.f32 	%p51, %f11, %f294;
	mul.f32 	%f295, %f11, 0f00000000;
	selp.f32 	%f296, %f295, %f293, %p51;
	mul.f32 	%f297, %f9, 0f41490FDB;
	div.approx.f32 	%f1402, %f296, %f297;
$L__BB0_17:                             // %L864
	add.f32 	%f133, %f131, %f132;
	abs.f32 	%f135, %f131;
	add.f32 	%f191, %f189, %f190;
	abs.f32 	%f193, %f189;
	add.f32 	%f250, %f248, %f249;
	abs.f32 	%f252, %f248;
	add.s32 	%r267, %r155, -381;
	cvt.rn.f32.s32 	%f301, %r267;
	div.approx.f32 	%f15, %f301, %f127;
	abs.f32 	%f303, %f15;
	setp.gt.f32 	%p52, %f303, 0f4B800000;
	mul.f32 	%f304, %f15, 0f00000000;
	selp.f32 	%f305, %f304, %f15, %p52;
	add.f32 	%f306, %f305, %f305;
	mov.b32 	%r268, %f306;
	and.b32  	%r269, %r268, -2147483648;
	or.b32  	%r270, %r269, 1056964608;
	mov.b32 	%f307, %r270;
	add.f32 	%f308, %f306, %f307;
	abs.f32 	%f310, %f306;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p57, %f17, 0f00000000;
	mov.f32 	%f1403, %f1415;
	@%p57 bra 	$L__BB0_19;
// %bb.18:                              // %L878
	add.f32 	%f329, %f17, %f17;
	mov.b32 	%r275, %f329;
	and.b32  	%r276, %r275, -2147483648;
	or.b32  	%r277, %r276, 1056964608;
	mov.b32 	%f330, %r277;
	add.f32 	%f331, %f329, %f330;
	cvt.rzi.f32.f32 	%f332, %f331;
	abs.f32 	%f333, %f329;
	setp.gt.f32 	%p58, %f333, 0f4B000000;
	selp.f32 	%f334, %f329, %f332, %p58;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p59, %f333, 0f3F000000;
	selp.f32 	%f336, %f335, %f334, %p59;
	cvt.rzi.s32.f32 	%r278, %f336;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f17;
	mul.f32 	%f338, %f337, %f337;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	and.b32  	%r279, %r278, 1;
	setp.eq.b32 	%p60, %r279, 1;
	selp.f32 	%f348, %f346, %f347, %p60;
	and.b32  	%r280, %r278, 2;
	setp.eq.s32 	%p61, %r280, 0;
	sub.f32 	%f350, %f151, %f348;
	selp.f32 	%f351, %f348, %f350, %p61;
	cvt.rzi.f32.f32 	%f352, %f17;
	setp.eq.f32 	%p62, %f17, %f352;
	mul.f32 	%f353, %f17, 0f00000000;
	selp.f32 	%f354, %f353, %f351, %p62;
	mul.f32 	%f355, %f15, 0f41490FDB;
	div.approx.f32 	%f1403, %f354, %f355;
$L__BB0_19:                             // %L882
	shr.u32 	%r204, %r4, 3;
	cvt.rzi.f32.f32 	%f134, %f133;
	setp.gt.f32 	%p20, %f135, 0f4B000000;
	cvt.rzi.f32.f32 	%f192, %f191;
	setp.gt.f32 	%p31, %f193, 0f4B000000;
	cvt.rzi.f32.f32 	%f251, %f250;
	setp.gt.f32 	%p42, %f252, 0f4B000000;
	cvt.rzi.f32.f32 	%f309, %f308;
	setp.gt.f32 	%p53, %f310, 0f4B000000;
	add.s32 	%r284, %r155, -255;
	cvt.rn.f32.s32 	%f360, %r284;
	div.approx.f32 	%f20, %f360, %f127;
	abs.f32 	%f362, %f20;
	setp.gt.f32 	%p63, %f362, 0f4B800000;
	mul.f32 	%f363, %f20, 0f00000000;
	selp.f32 	%f364, %f363, %f20, %p63;
	add.f32 	%f365, %f364, %f364;
	mov.b32 	%r285, %f365;
	and.b32  	%r286, %r285, -2147483648;
	or.b32  	%r287, %r286, 1056964608;
	mov.b32 	%f366, %r287;
	add.f32 	%f367, %f365, %f366;
	cvt.rzi.f32.f32 	%f368, %f367;
	abs.f32 	%f369, %f365;
	setp.gt.f32 	%p64, %f369, 0f4B000000;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p68, %f22, 0f00000000;
	mov.f32 	%f1404, %f1415;
	@%p68 bra 	$L__BB0_21;
// %bb.20:                              // %L958
	add.f32 	%f388, %f22, %f22;
	mov.b32 	%r292, %f388;
	and.b32  	%r293, %r292, -2147483648;
	or.b32  	%r294, %r293, 1056964608;
	mov.b32 	%f389, %r294;
	add.f32 	%f390, %f388, %f389;
	cvt.rzi.f32.f32 	%f391, %f390;
	abs.f32 	%f392, %f388;
	setp.gt.f32 	%p69, %f392, 0f4B000000;
	selp.f32 	%f393, %f388, %f391, %p69;
	cvt.rzi.f32.f32 	%f394, %f388;
	setp.lt.f32 	%p70, %f392, 0f3F000000;
	selp.f32 	%f395, %f394, %f393, %p70;
	cvt.rzi.s32.f32 	%r295, %f395;
	fma.rn.f32 	%f396, %f395, 0fBF000000, %f22;
	mul.f32 	%f397, %f396, %f396;
	fma.rn.f32 	%f398, %f397, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f399, %f397, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f400, %f398, %f397, 0fC0A55DF6;
	fma.rn.f32 	%f401, %f399, %f397, 0f4081E0CF;
	fma.rn.f32 	%f402, %f397, %f396, 0f00000000;
	fma.rn.f32 	%f403, %f401, %f397, 0fC09DE9E6;
	fma.rn.f32 	%f404, %f400, %f402, 0f00000000;
	fma.rn.f32 	%f405, %f403, %f397, 0f3F800000;
	fma.rn.f32 	%f406, %f396, 0f40490FDB, %f404;
	and.b32  	%r296, %r295, 1;
	setp.eq.b32 	%p71, %r296, 1;
	selp.f32 	%f407, %f405, %f406, %p71;
	and.b32  	%r297, %r295, 2;
	setp.eq.s32 	%p72, %r297, 0;
	sub.f32 	%f409, %f151, %f407;
	selp.f32 	%f410, %f407, %f409, %p72;
	cvt.rzi.f32.f32 	%f411, %f22;
	setp.eq.f32 	%p73, %f22, %f411;
	mul.f32 	%f412, %f22, 0f00000000;
	selp.f32 	%f413, %f412, %f410, %p73;
	mul.f32 	%f414, %f20, 0f41490FDB;
	div.approx.f32 	%f1404, %f413, %f414;
$L__BB0_21:                             // %L962
	cvt.u16.u32 	%rs1, %r204;
	selp.f32 	%f136, %f131, %f134, %p20;
	cvt.rzi.f32.f32 	%f137, %f131;
	setp.lt.f32 	%p21, %f135, 0f3F000000;
	selp.f32 	%f194, %f189, %f192, %p31;
	cvt.rzi.f32.f32 	%f195, %f189;
	setp.lt.f32 	%p32, %f193, 0f3F000000;
	selp.f32 	%f253, %f248, %f251, %p42;
	cvt.rzi.f32.f32 	%f254, %f248;
	setp.lt.f32 	%p43, %f252, 0f3F000000;
	selp.f32 	%f311, %f306, %f309, %p53;
	cvt.rzi.f32.f32 	%f312, %f306;
	setp.lt.f32 	%p54, %f310, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p64;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p65, %f369, 0f3F000000;
	add.s32 	%r298, %r155, -127;
	cvt.rn.f32.s32 	%f418, %r298;
	div.approx.f32 	%f26, %f418, %f127;
	abs.f32 	%f420, %f26;
	setp.gt.f32 	%p74, %f420, 0f4B800000;
	mul.f32 	%f421, %f26, 0f00000000;
	selp.f32 	%f422, %f421, %f26, %p74;
	add.f32 	%f423, %f422, %f422;
	mov.b32 	%r299, %f423;
	and.b32  	%r300, %r299, -2147483648;
	or.b32  	%r301, %r300, 1056964608;
	mov.b32 	%f424, %r301;
	add.f32 	%f425, %f423, %f424;
	cvt.rzi.f32.f32 	%f426, %f425;
	abs.f32 	%f427, %f423;
	setp.gt.f32 	%p75, %f427, 0f4B000000;
	selp.f32 	%f428, %f423, %f426, %p75;
	cvt.rzi.f32.f32 	%f429, %f423;
	setp.lt.f32 	%p76, %f427, 0f3F000000;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p79, %f28, 0f00000000;
	mov.f32 	%f1405, %f1415;
	@%p79 bra 	$L__BB0_23;
// %bb.22:                              // %L976
	add.f32 	%f446, %f28, %f28;
	mov.b32 	%r306, %f446;
	and.b32  	%r307, %r306, -2147483648;
	or.b32  	%r308, %r307, 1056964608;
	mov.b32 	%f447, %r308;
	add.f32 	%f448, %f446, %f447;
	cvt.rzi.f32.f32 	%f449, %f448;
	abs.f32 	%f450, %f446;
	setp.gt.f32 	%p80, %f450, 0f4B000000;
	selp.f32 	%f451, %f446, %f449, %p80;
	cvt.rzi.f32.f32 	%f452, %f446;
	setp.lt.f32 	%p81, %f450, 0f3F000000;
	selp.f32 	%f453, %f452, %f451, %p81;
	cvt.rzi.s32.f32 	%r309, %f453;
	fma.rn.f32 	%f454, %f453, 0fBF000000, %f28;
	mul.f32 	%f455, %f454, %f454;
	fma.rn.f32 	%f456, %f455, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f457, %f455, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f458, %f456, %f455, 0fC0A55DF6;
	fma.rn.f32 	%f459, %f457, %f455, 0f4081E0CF;
	fma.rn.f32 	%f460, %f455, %f454, 0f00000000;
	fma.rn.f32 	%f461, %f459, %f455, 0fC09DE9E6;
	fma.rn.f32 	%f462, %f458, %f460, 0f00000000;
	fma.rn.f32 	%f463, %f461, %f455, 0f3F800000;
	fma.rn.f32 	%f464, %f454, 0f40490FDB, %f462;
	and.b32  	%r310, %r309, 1;
	setp.eq.b32 	%p82, %r310, 1;
	selp.f32 	%f465, %f463, %f464, %p82;
	and.b32  	%r311, %r309, 2;
	setp.eq.s32 	%p83, %r311, 0;
	sub.f32 	%f467, %f151, %f465;
	selp.f32 	%f468, %f465, %f467, %p83;
	cvt.rzi.f32.f32 	%f469, %f28;
	setp.eq.f32 	%p84, %f28, %f469;
	mul.f32 	%f470, %f28, 0f00000000;
	selp.f32 	%f471, %f470, %f468, %p84;
	mul.f32 	%f472, %f26, 0f41490FDB;
	div.approx.f32 	%f1405, %f471, %f472;
$L__BB0_23:                             // %L980
	and.b16  	%rs2, %rs1, 255;
	selp.f32 	%f138, %f137, %f136, %p21;
	selp.f32 	%f196, %f195, %f194, %p32;
	selp.f32 	%f255, %f254, %f253, %p43;
	selp.f32 	%f313, %f312, %f311, %p54;
	selp.f32 	%f372, %f371, %f370, %p65;
	selp.f32 	%f430, %f429, %f428, %p76;
	add.s32 	%r315, %r155, -253;
	cvt.rn.f32.s32 	%f477, %r315;
	div.approx.f32 	%f31, %f477, %f127;
	abs.f32 	%f479, %f31;
	setp.gt.f32 	%p85, %f479, 0f4B800000;
	mul.f32 	%f480, %f31, 0f00000000;
	selp.f32 	%f481, %f480, %f31, %p85;
	add.f32 	%f482, %f481, %f481;
	mov.b32 	%r316, %f482;
	and.b32  	%r317, %r316, -2147483648;
	or.b32  	%r318, %r317, 1056964608;
	mov.b32 	%f483, %r318;
	add.f32 	%f484, %f482, %f483;
	cvt.rzi.f32.f32 	%f485, %f484;
	abs.f32 	%f486, %f482;
	setp.gt.f32 	%p86, %f486, 0f4B000000;
	selp.f32 	%f487, %f482, %f485, %p86;
	cvt.rzi.f32.f32 	%f488, %f482;
	setp.lt.f32 	%p87, %f486, 0f3F000000;
	selp.f32 	%f489, %f488, %f487, %p87;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p90, %f33, 0f00000000;
	mov.f32 	%f1406, %f1415;
	@%p90 bra 	$L__BB0_25;
// %bb.24:                              // %L1056
	add.f32 	%f505, %f33, %f33;
	mov.b32 	%r323, %f505;
	and.b32  	%r324, %r323, -2147483648;
	or.b32  	%r325, %r324, 1056964608;
	mov.b32 	%f506, %r325;
	add.f32 	%f507, %f505, %f506;
	cvt.rzi.f32.f32 	%f508, %f507;
	abs.f32 	%f509, %f505;
	setp.gt.f32 	%p91, %f509, 0f4B000000;
	selp.f32 	%f510, %f505, %f508, %p91;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p92, %f509, 0f3F000000;
	selp.f32 	%f512, %f511, %f510, %p92;
	cvt.rzi.s32.f32 	%r326, %f512;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f33;
	mul.f32 	%f514, %f513, %f513;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	and.b32  	%r327, %r326, 1;
	setp.eq.b32 	%p93, %r327, 1;
	selp.f32 	%f524, %f522, %f523, %p93;
	and.b32  	%r328, %r326, 2;
	setp.eq.s32 	%p94, %r328, 0;
	sub.f32 	%f526, %f151, %f524;
	selp.f32 	%f527, %f524, %f526, %p94;
	cvt.rzi.f32.f32 	%f528, %f33;
	setp.eq.f32 	%p95, %f33, %f528;
	mul.f32 	%f529, %f33, 0f00000000;
	selp.f32 	%f530, %f529, %f527, %p95;
	mul.f32 	%f531, %f31, 0f41490FDB;
	div.approx.f32 	%f1406, %f530, %f531;
$L__BB0_25:                             // %L1060
	mul.lo.s16 	%rs3, %rs2, 171;
	fma.rn.f32 	%f139, %f138, 0fBF000000, %f130;
	fma.rn.f32 	%f197, %f196, 0fBF000000, %f188;
	fma.rn.f32 	%f256, %f255, 0fBF000000, %f247;
	fma.rn.f32 	%f314, %f313, 0fBF000000, %f305;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f431, %f430, 0fBF000000, %f422;
	fma.rn.f32 	%f490, %f489, 0fBF000000, %f481;
	add.s32 	%r329, %r155, -125;
	cvt.rn.f32.s32 	%f535, %r329;
	div.approx.f32 	%f37, %f535, %f127;
	abs.f32 	%f537, %f37;
	setp.gt.f32 	%p96, %f537, 0f4B800000;
	mul.f32 	%f538, %f37, 0f00000000;
	selp.f32 	%f539, %f538, %f37, %p96;
	add.f32 	%f540, %f539, %f539;
	mov.b32 	%r330, %f540;
	and.b32  	%r331, %r330, -2147483648;
	or.b32  	%r332, %r331, 1056964608;
	mov.b32 	%f541, %r332;
	add.f32 	%f542, %f540, %f541;
	cvt.rzi.f32.f32 	%f543, %f542;
	abs.f32 	%f544, %f540;
	setp.gt.f32 	%p97, %f544, 0f4B000000;
	selp.f32 	%f545, %f540, %f543, %p97;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p98, %f544, 0f3F000000;
	selp.f32 	%f547, %f546, %f545, %p98;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p101, %f39, 0f00000000;
	mov.f32 	%f1407, %f1415;
	@%p101 bra 	$L__BB0_27;
// %bb.26:                              // %L1074
	add.f32 	%f563, %f39, %f39;
	mov.b32 	%r337, %f563;
	and.b32  	%r338, %r337, -2147483648;
	or.b32  	%r339, %r338, 1056964608;
	mov.b32 	%f564, %r339;
	add.f32 	%f565, %f563, %f564;
	cvt.rzi.f32.f32 	%f566, %f565;
	abs.f32 	%f567, %f563;
	setp.gt.f32 	%p102, %f567, 0f4B000000;
	selp.f32 	%f568, %f563, %f566, %p102;
	cvt.rzi.f32.f32 	%f569, %f563;
	setp.lt.f32 	%p103, %f567, 0f3F000000;
	selp.f32 	%f570, %f569, %f568, %p103;
	cvt.rzi.s32.f32 	%r340, %f570;
	fma.rn.f32 	%f571, %f570, 0fBF000000, %f39;
	mul.f32 	%f572, %f571, %f571;
	fma.rn.f32 	%f573, %f572, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f574, %f572, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f575, %f573, %f572, 0fC0A55DF6;
	fma.rn.f32 	%f576, %f574, %f572, 0f4081E0CF;
	fma.rn.f32 	%f577, %f572, %f571, 0f00000000;
	fma.rn.f32 	%f578, %f576, %f572, 0fC09DE9E6;
	fma.rn.f32 	%f579, %f575, %f577, 0f00000000;
	fma.rn.f32 	%f580, %f578, %f572, 0f3F800000;
	fma.rn.f32 	%f581, %f571, 0f40490FDB, %f579;
	and.b32  	%r341, %r340, 1;
	setp.eq.b32 	%p104, %r341, 1;
	selp.f32 	%f582, %f580, %f581, %p104;
	and.b32  	%r342, %r340, 2;
	setp.eq.s32 	%p105, %r342, 0;
	sub.f32 	%f584, %f151, %f582;
	selp.f32 	%f585, %f582, %f584, %p105;
	cvt.rzi.f32.f32 	%f586, %f39;
	setp.eq.f32 	%p106, %f39, %f586;
	mul.f32 	%f587, %f39, 0f00000000;
	selp.f32 	%f588, %f587, %f585, %p106;
	mul.f32 	%f589, %f37, 0f41490FDB;
	div.approx.f32 	%f1407, %f588, %f589;
$L__BB0_27:                             // %L1078
	shr.u16 	%rs4, %rs3, 13;
	mul.f32 	%f140, %f139, %f139;
	mul.f32 	%f198, %f197, %f197;
	mul.f32 	%f257, %f256, %f256;
	mul.f32 	%f315, %f314, %f314;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f432, %f431, %f431;
	mul.f32 	%f491, %f490, %f490;
	mul.f32 	%f549, %f548, %f548;
	or.b32  	%r346, %r155, 1;
	cvt.rn.f32.s32 	%f594, %r346;
	div.approx.f32 	%f42, %f594, %f127;
	abs.f32 	%f596, %f42;
	setp.gt.f32 	%p107, %f596, 0f4B800000;
	mul.f32 	%f597, %f42, 0f00000000;
	selp.f32 	%f598, %f597, %f42, %p107;
	add.f32 	%f599, %f598, %f598;
	mov.b32 	%r347, %f599;
	and.b32  	%r348, %r347, -2147483648;
	or.b32  	%r349, %r348, 1056964608;
	mov.b32 	%f600, %r349;
	add.f32 	%f601, %f599, %f600;
	cvt.rzi.f32.f32 	%f602, %f601;
	abs.f32 	%f603, %f599;
	setp.gt.f32 	%p108, %f603, 0f4B000000;
	selp.f32 	%f604, %f599, %f602, %p108;
	cvt.rzi.f32.f32 	%f605, %f599;
	setp.lt.f32 	%p109, %f603, 0f3F000000;
	selp.f32 	%f606, %f605, %f604, %p109;
	fma.rn.f32 	%f607, %f606, 0fBF000000, %f598;
	mul.f32 	%f608, %f607, %f607;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.eq.f32 	%p112, %f44, 0f00000000;
	mov.f32 	%f1408, %f1415;
	@%p112 bra 	$L__BB0_29;
// %bb.28:                              // %L1154
	add.f32 	%f622, %f44, %f44;
	mov.b32 	%r354, %f622;
	and.b32  	%r355, %r354, -2147483648;
	or.b32  	%r356, %r355, 1056964608;
	mov.b32 	%f623, %r356;
	add.f32 	%f624, %f622, %f623;
	cvt.rzi.f32.f32 	%f625, %f624;
	abs.f32 	%f626, %f622;
	setp.gt.f32 	%p113, %f626, 0f4B000000;
	selp.f32 	%f627, %f622, %f625, %p113;
	cvt.rzi.f32.f32 	%f628, %f622;
	setp.lt.f32 	%p114, %f626, 0f3F000000;
	selp.f32 	%f629, %f628, %f627, %p114;
	cvt.rzi.s32.f32 	%r357, %f629;
	fma.rn.f32 	%f630, %f629, 0fBF000000, %f44;
	mul.f32 	%f631, %f630, %f630;
	fma.rn.f32 	%f632, %f631, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f633, %f631, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f634, %f632, %f631, 0fC0A55DF6;
	fma.rn.f32 	%f635, %f633, %f631, 0f4081E0CF;
	fma.rn.f32 	%f636, %f631, %f630, 0f00000000;
	fma.rn.f32 	%f637, %f635, %f631, 0fC09DE9E6;
	fma.rn.f32 	%f638, %f634, %f636, 0f00000000;
	fma.rn.f32 	%f639, %f637, %f631, 0f3F800000;
	fma.rn.f32 	%f640, %f630, 0f40490FDB, %f638;
	and.b32  	%r358, %r357, 1;
	setp.eq.b32 	%p115, %r358, 1;
	selp.f32 	%f641, %f639, %f640, %p115;
	and.b32  	%r359, %r357, 2;
	setp.eq.s32 	%p116, %r359, 0;
	sub.f32 	%f643, %f151, %f641;
	selp.f32 	%f644, %f641, %f643, %p116;
	cvt.rzi.f32.f32 	%f645, %f44;
	setp.eq.f32 	%p117, %f44, %f645;
	mul.f32 	%f646, %f44, 0f00000000;
	selp.f32 	%f647, %f646, %f644, %p117;
	mul.f32 	%f648, %f42, 0f41490FDB;
	div.approx.f32 	%f1408, %f647, %f648;
$L__BB0_29:                             // %L1158
	mul.lo.s16 	%rs5, %rs4, 48;
	cvt.rzi.s32.f32 	%r226, %f138;
	fma.rn.f32 	%f141, %f140, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f142, %f140, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r240, %f196;
	fma.rn.f32 	%f199, %f198, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f200, %f198, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r257, %f255;
	fma.rn.f32 	%f258, %f257, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f259, %f257, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r271, %f313;
	fma.rn.f32 	%f316, %f315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f317, %f315, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r288, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r302, %f430;
	fma.rn.f32 	%f433, %f432, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f434, %f432, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r319, %f489;
	fma.rn.f32 	%f492, %f491, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f493, %f491, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r350, %f606;
	fma.rn.f32 	%f609, %f608, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f610, %f608, 0f3E684E12, 0fBFAAD2E0;
	add.s32 	%r360, %r155, 129;
	cvt.rn.f32.s32 	%f652, %r360;
	div.approx.f32 	%f48, %f652, %f127;
	abs.f32 	%f654, %f48;
	setp.gt.f32 	%p118, %f654, 0f4B800000;
	mul.f32 	%f655, %f48, 0f00000000;
	selp.f32 	%f656, %f655, %f48, %p118;
	add.f32 	%f657, %f656, %f656;
	mov.b32 	%r361, %f657;
	and.b32  	%r362, %r361, -2147483648;
	or.b32  	%r363, %r362, 1056964608;
	mov.b32 	%f658, %r363;
	add.f32 	%f659, %f657, %f658;
	cvt.rzi.f32.f32 	%f660, %f659;
	abs.f32 	%f661, %f657;
	setp.gt.f32 	%p119, %f661, 0f4B000000;
	selp.f32 	%f662, %f657, %f660, %p119;
	cvt.rzi.f32.f32 	%f663, %f657;
	setp.lt.f32 	%p120, %f661, 0f3F000000;
	selp.f32 	%f664, %f663, %f662, %p120;
	cvt.rzi.s32.f32 	%r364, %f664;
	fma.rn.f32 	%f665, %f664, 0fBF000000, %f656;
	mul.f32 	%f666, %f665, %f665;
	fma.rn.f32 	%f667, %f666, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f668, %f666, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f50, %f48, 0f40800000;
	setp.eq.f32 	%p123, %f50, 0f00000000;
	mov.f32 	%f1409, %f1415;
	@%p123 bra 	$L__BB0_31;
// %bb.30:                              // %L1172
	add.f32 	%f680, %f50, %f50;
	mov.b32 	%r368, %f680;
	and.b32  	%r369, %r368, -2147483648;
	or.b32  	%r370, %r369, 1056964608;
	mov.b32 	%f681, %r370;
	add.f32 	%f682, %f680, %f681;
	cvt.rzi.f32.f32 	%f683, %f682;
	abs.f32 	%f684, %f680;
	setp.gt.f32 	%p124, %f684, 0f4B000000;
	selp.f32 	%f685, %f680, %f683, %p124;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p125, %f684, 0f3F000000;
	selp.f32 	%f687, %f686, %f685, %p125;
	cvt.rzi.s32.f32 	%r371, %f687;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f50;
	mul.f32 	%f689, %f688, %f688;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	and.b32  	%r372, %r371, 1;
	setp.eq.b32 	%p126, %r372, 1;
	selp.f32 	%f699, %f697, %f698, %p126;
	and.b32  	%r373, %r371, 2;
	setp.eq.s32 	%p127, %r373, 0;
	sub.f32 	%f701, %f151, %f699;
	selp.f32 	%f702, %f699, %f701, %p127;
	cvt.rzi.f32.f32 	%f703, %f50;
	setp.eq.f32 	%p128, %f50, %f703;
	mul.f32 	%f704, %f50, 0f00000000;
	selp.f32 	%f705, %f704, %f702, %p128;
	mul.f32 	%f706, %f48, 0f41490FDB;
	div.approx.f32 	%f1409, %f705, %f706;
$L__BB0_31:                             // %L1176
	shl.b32 	%r138, %r3, 1;
	sub.s16 	%rs6, %rs1, %rs5;
	add.s32 	%r227, %r226, 1;
	fma.rn.f32 	%f143, %f141, %f140, 0fC0A55DF6;
	fma.rn.f32 	%f144, %f142, %f140, 0f4081E0CF;
	fma.rn.f32 	%f145, %f140, %f139, 0f00000000;
	add.s32 	%r241, %r240, 1;
	fma.rn.f32 	%f201, %f199, %f198, 0fC0A55DF6;
	fma.rn.f32 	%f202, %f200, %f198, 0f4081E0CF;
	fma.rn.f32 	%f203, %f198, %f197, 0f00000000;
	add.s32 	%r258, %r257, 1;
	fma.rn.f32 	%f260, %f258, %f257, 0fC0A55DF6;
	fma.rn.f32 	%f261, %f259, %f257, 0f4081E0CF;
	fma.rn.f32 	%f262, %f257, %f256, 0f00000000;
	add.s32 	%r272, %r271, 1;
	fma.rn.f32 	%f318, %f316, %f315, 0fC0A55DF6;
	fma.rn.f32 	%f319, %f317, %f315, 0f4081E0CF;
	fma.rn.f32 	%f320, %f315, %f314, 0f00000000;
	add.s32 	%r289, %r288, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r303, %r302, 1;
	fma.rn.f32 	%f435, %f433, %f432, 0fC0A55DF6;
	fma.rn.f32 	%f436, %f434, %f432, 0f4081E0CF;
	fma.rn.f32 	%f437, %f432, %f431, 0f00000000;
	add.s32 	%r320, %r319, 1;
	fma.rn.f32 	%f494, %f492, %f491, 0fC0A55DF6;
	fma.rn.f32 	%f495, %f493, %f491, 0f4081E0CF;
	fma.rn.f32 	%f496, %f491, %f490, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r351, %r350, 1;
	fma.rn.f32 	%f611, %f609, %f608, 0fC0A55DF6;
	fma.rn.f32 	%f612, %f610, %f608, 0f4081E0CF;
	fma.rn.f32 	%f613, %f608, %f607, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f669, %f667, %f666, 0fC0A55DF6;
	fma.rn.f32 	%f670, %f668, %f666, 0f4081E0CF;
	fma.rn.f32 	%f671, %f666, %f665, 0f00000000;
	or.b32  	%r377, %r155, 3;
	cvt.rn.f32.s32 	%f711, %r377;
	div.approx.f32 	%f53, %f711, %f127;
	abs.f32 	%f713, %f53;
	setp.gt.f32 	%p129, %f713, 0f4B800000;
	mul.f32 	%f714, %f53, 0f00000000;
	selp.f32 	%f715, %f714, %f53, %p129;
	add.f32 	%f716, %f715, %f715;
	mov.b32 	%r378, %f716;
	and.b32  	%r379, %r378, -2147483648;
	or.b32  	%r380, %r379, 1056964608;
	mov.b32 	%f717, %r380;
	add.f32 	%f718, %f716, %f717;
	cvt.rzi.f32.f32 	%f719, %f718;
	abs.f32 	%f720, %f716;
	setp.gt.f32 	%p130, %f720, 0f4B000000;
	selp.f32 	%f721, %f716, %f719, %p130;
	cvt.rzi.f32.f32 	%f722, %f716;
	setp.lt.f32 	%p131, %f720, 0f3F000000;
	selp.f32 	%f723, %f722, %f721, %p131;
	cvt.rzi.s32.f32 	%r381, %f723;
	add.s32 	%r382, %r381, 1;
	fma.rn.f32 	%f724, %f723, 0fBF000000, %f715;
	mul.f32 	%f725, %f724, %f724;
	fma.rn.f32 	%f726, %f725, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f727, %f725, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f728, %f726, %f725, 0fC0A55DF6;
	fma.rn.f32 	%f729, %f727, %f725, 0f4081E0CF;
	fma.rn.f32 	%f730, %f725, %f724, 0f00000000;
	mul.f32 	%f55, %f53, 0f40800000;
	setp.eq.f32 	%p134, %f55, 0f00000000;
	mov.f32 	%f1410, %f1415;
	@%p134 bra 	$L__BB0_33;
// %bb.32:                              // %L1252
	add.f32 	%f739, %f55, %f55;
	mov.b32 	%r385, %f739;
	and.b32  	%r386, %r385, -2147483648;
	or.b32  	%r387, %r386, 1056964608;
	mov.b32 	%f740, %r387;
	add.f32 	%f741, %f739, %f740;
	cvt.rzi.f32.f32 	%f742, %f741;
	abs.f32 	%f743, %f739;
	setp.gt.f32 	%p135, %f743, 0f4B000000;
	selp.f32 	%f744, %f739, %f742, %p135;
	cvt.rzi.f32.f32 	%f745, %f739;
	setp.lt.f32 	%p136, %f743, 0f3F000000;
	selp.f32 	%f746, %f745, %f744, %p136;
	cvt.rzi.s32.f32 	%r388, %f746;
	fma.rn.f32 	%f747, %f746, 0fBF000000, %f55;
	mul.f32 	%f748, %f747, %f747;
	fma.rn.f32 	%f749, %f748, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f750, %f748, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f751, %f749, %f748, 0fC0A55DF6;
	fma.rn.f32 	%f752, %f750, %f748, 0f4081E0CF;
	fma.rn.f32 	%f753, %f748, %f747, 0f00000000;
	fma.rn.f32 	%f754, %f752, %f748, 0fC09DE9E6;
	fma.rn.f32 	%f755, %f751, %f753, 0f00000000;
	fma.rn.f32 	%f756, %f754, %f748, 0f3F800000;
	fma.rn.f32 	%f757, %f747, 0f40490FDB, %f755;
	and.b32  	%r389, %r388, 1;
	setp.eq.b32 	%p137, %r389, 1;
	selp.f32 	%f758, %f756, %f757, %p137;
	and.b32  	%r390, %r388, 2;
	setp.eq.s32 	%p138, %r390, 0;
	sub.f32 	%f760, %f151, %f758;
	selp.f32 	%f761, %f758, %f760, %p138;
	cvt.rzi.f32.f32 	%f762, %f55;
	setp.eq.f32 	%p139, %f55, %f762;
	mul.f32 	%f763, %f55, 0f00000000;
	selp.f32 	%f764, %f763, %f761, %p139;
	mul.f32 	%f765, %f53, 0f41490FDB;
	div.approx.f32 	%f1410, %f764, %f765;
$L__BB0_33:                             // %L1256
	and.b32  	%r137, %r3, 16;
	and.b32  	%r139, %r138, 8;
	and.b16  	%rs7, %rs6, 255;
	fma.rn.f32 	%f146, %f144, %f140, 0fC09DE9E6;
	fma.rn.f32 	%f147, %f143, %f145, 0f00000000;
	and.b32  	%r228, %r227, 1;
	fma.rn.f32 	%f204, %f202, %f198, 0fC09DE9E6;
	fma.rn.f32 	%f205, %f201, %f203, 0f00000000;
	and.b32  	%r242, %r241, 1;
	fma.rn.f32 	%f263, %f261, %f257, 0fC09DE9E6;
	fma.rn.f32 	%f264, %f260, %f262, 0f00000000;
	and.b32  	%r259, %r258, 1;
	fma.rn.f32 	%f321, %f319, %f315, 0fC09DE9E6;
	fma.rn.f32 	%f322, %f318, %f320, 0f00000000;
	and.b32  	%r273, %r272, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r290, %r289, 1;
	fma.rn.f32 	%f438, %f436, %f432, 0fC09DE9E6;
	fma.rn.f32 	%f439, %f435, %f437, 0f00000000;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f497, %f495, %f491, 0fC09DE9E6;
	fma.rn.f32 	%f498, %f494, %f496, 0f00000000;
	and.b32  	%r321, %r320, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f614, %f612, %f608, 0fC09DE9E6;
	fma.rn.f32 	%f615, %f611, %f613, 0f00000000;
	and.b32  	%r352, %r351, 1;
	fma.rn.f32 	%f672, %f670, %f666, 0fC09DE9E6;
	fma.rn.f32 	%f673, %f669, %f671, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f731, %f729, %f725, 0fC09DE9E6;
	fma.rn.f32 	%f732, %f728, %f730, 0f00000000;
	and.b32  	%r383, %r382, 1;
	add.s32 	%r391, %r155, 131;
	cvt.rn.f32.s32 	%f769, %r391;
	div.approx.f32 	%f59, %f769, %f127;
	abs.f32 	%f771, %f59;
	setp.gt.f32 	%p140, %f771, 0f4B800000;
	mul.f32 	%f772, %f59, 0f00000000;
	selp.f32 	%f773, %f772, %f59, %p140;
	add.f32 	%f774, %f773, %f773;
	mov.b32 	%r392, %f774;
	and.b32  	%r393, %r392, -2147483648;
	or.b32  	%r394, %r393, 1056964608;
	mov.b32 	%f775, %r394;
	add.f32 	%f776, %f774, %f775;
	cvt.rzi.f32.f32 	%f777, %f776;
	abs.f32 	%f778, %f774;
	setp.gt.f32 	%p141, %f778, 0f4B000000;
	selp.f32 	%f779, %f774, %f777, %p141;
	cvt.rzi.f32.f32 	%f780, %f774;
	setp.lt.f32 	%p142, %f778, 0f3F000000;
	selp.f32 	%f781, %f780, %f779, %p142;
	cvt.rzi.s32.f32 	%r395, %f781;
	add.s32 	%r396, %r395, 1;
	fma.rn.f32 	%f782, %f781, 0fBF000000, %f773;
	mul.f32 	%f783, %f782, %f782;
	fma.rn.f32 	%f784, %f783, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f785, %f783, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f786, %f784, %f783, 0fC0A55DF6;
	fma.rn.f32 	%f787, %f785, %f783, 0f4081E0CF;
	fma.rn.f32 	%f788, %f783, %f782, 0f00000000;
	fma.rn.f32 	%f789, %f787, %f783, 0fC09DE9E6;
	fma.rn.f32 	%f790, %f786, %f788, 0f00000000;
	and.b32  	%r397, %r396, 1;
	mul.f32 	%f61, %f59, 0f40800000;
	setp.eq.f32 	%p145, %f61, 0f00000000;
	mov.f32 	%f1411, %f1415;
	@%p145 bra 	$L__BB0_35;
// %bb.34:                              // %L1270
	add.f32 	%f797, %f61, %f61;
	mov.b32 	%r399, %f797;
	and.b32  	%r400, %r399, -2147483648;
	or.b32  	%r401, %r400, 1056964608;
	mov.b32 	%f798, %r401;
	add.f32 	%f799, %f797, %f798;
	cvt.rzi.f32.f32 	%f800, %f799;
	abs.f32 	%f801, %f797;
	setp.gt.f32 	%p146, %f801, 0f4B000000;
	selp.f32 	%f802, %f797, %f800, %p146;
	cvt.rzi.f32.f32 	%f803, %f797;
	setp.lt.f32 	%p147, %f801, 0f3F000000;
	selp.f32 	%f804, %f803, %f802, %p147;
	cvt.rzi.s32.f32 	%r402, %f804;
	fma.rn.f32 	%f805, %f804, 0fBF000000, %f61;
	mul.f32 	%f806, %f805, %f805;
	fma.rn.f32 	%f807, %f806, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f808, %f806, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f809, %f807, %f806, 0fC0A55DF6;
	fma.rn.f32 	%f810, %f808, %f806, 0f4081E0CF;
	fma.rn.f32 	%f811, %f806, %f805, 0f00000000;
	fma.rn.f32 	%f812, %f810, %f806, 0fC09DE9E6;
	fma.rn.f32 	%f813, %f809, %f811, 0f00000000;
	fma.rn.f32 	%f814, %f812, %f806, 0f3F800000;
	fma.rn.f32 	%f815, %f805, 0f40490FDB, %f813;
	and.b32  	%r403, %r402, 1;
	setp.eq.b32 	%p148, %r403, 1;
	selp.f32 	%f816, %f814, %f815, %p148;
	and.b32  	%r404, %r402, 2;
	setp.eq.s32 	%p149, %r404, 0;
	sub.f32 	%f818, %f151, %f816;
	selp.f32 	%f819, %f816, %f818, %p149;
	cvt.rzi.f32.f32 	%f820, %f61;
	setp.eq.f32 	%p150, %f61, %f820;
	mul.f32 	%f821, %f61, 0f00000000;
	selp.f32 	%f822, %f821, %f819, %p150;
	mul.f32 	%f823, %f59, 0f41490FDB;
	div.approx.f32 	%f1411, %f822, %f823;
$L__BB0_35:                             // %L1274
	or.b32  	%r203, %r137, %r139;
	mul.wide.u16 	%r206, %rs7, 128;
	shl.b32 	%r141, %r3, 2;
	fma.rn.f32 	%f148, %f146, %f140, 0f3F800000;
	fma.rn.f32 	%f149, %f139, 0f40490FDB, %f147;
	setp.eq.b32 	%p22, %r228, 1;
	fma.rn.f32 	%f206, %f204, %f198, 0f3F800000;
	fma.rn.f32 	%f207, %f197, 0f40490FDB, %f205;
	setp.eq.b32 	%p33, %r242, 1;
	fma.rn.f32 	%f265, %f263, %f257, 0f3F800000;
	fma.rn.f32 	%f266, %f256, 0f40490FDB, %f264;
	setp.eq.b32 	%p44, %r259, 1;
	fma.rn.f32 	%f323, %f321, %f315, 0f3F800000;
	fma.rn.f32 	%f324, %f314, 0f40490FDB, %f322;
	setp.eq.b32 	%p55, %r273, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p66, %r290, 1;
	fma.rn.f32 	%f440, %f438, %f432, 0f3F800000;
	fma.rn.f32 	%f441, %f431, 0f40490FDB, %f439;
	setp.eq.b32 	%p77, %r304, 1;
	fma.rn.f32 	%f499, %f497, %f491, 0f3F800000;
	fma.rn.f32 	%f500, %f490, 0f40490FDB, %f498;
	setp.eq.b32 	%p88, %r321, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p99, %r335, 1;
	fma.rn.f32 	%f616, %f614, %f608, 0f3F800000;
	fma.rn.f32 	%f617, %f607, 0f40490FDB, %f615;
	setp.eq.b32 	%p110, %r352, 1;
	fma.rn.f32 	%f674, %f672, %f666, 0f3F800000;
	fma.rn.f32 	%f675, %f665, 0f40490FDB, %f673;
	setp.eq.b32 	%p121, %r366, 1;
	fma.rn.f32 	%f733, %f731, %f725, 0f3F800000;
	fma.rn.f32 	%f734, %f724, 0f40490FDB, %f732;
	setp.eq.b32 	%p132, %r383, 1;
	fma.rn.f32 	%f791, %f789, %f783, 0f3F800000;
	fma.rn.f32 	%f792, %f782, 0f40490FDB, %f790;
	setp.eq.b32 	%p143, %r397, 1;
	add.s32 	%r408, %r155, 257;
	cvt.rn.f32.s32 	%f828, %r408;
	div.approx.f32 	%f64, %f828, %f127;
	abs.f32 	%f830, %f64;
	setp.gt.f32 	%p151, %f830, 0f4B800000;
	mul.f32 	%f831, %f64, 0f00000000;
	selp.f32 	%f832, %f831, %f64, %p151;
	add.f32 	%f833, %f832, %f832;
	mov.b32 	%r409, %f833;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f834, %r411;
	add.f32 	%f835, %f833, %f834;
	cvt.rzi.f32.f32 	%f836, %f835;
	abs.f32 	%f837, %f833;
	setp.gt.f32 	%p152, %f837, 0f4B000000;
	selp.f32 	%f838, %f833, %f836, %p152;
	cvt.rzi.f32.f32 	%f839, %f833;
	setp.lt.f32 	%p153, %f837, 0f3F000000;
	selp.f32 	%f840, %f839, %f838, %p153;
	cvt.rzi.s32.f32 	%r412, %f840;
	add.s32 	%r413, %r412, 1;
	fma.rn.f32 	%f841, %f840, 0fBF000000, %f832;
	mul.f32 	%f842, %f841, %f841;
	fma.rn.f32 	%f843, %f842, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f844, %f842, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f845, %f843, %f842, 0fC0A55DF6;
	fma.rn.f32 	%f846, %f844, %f842, 0f4081E0CF;
	fma.rn.f32 	%f847, %f842, %f841, 0f00000000;
	fma.rn.f32 	%f848, %f846, %f842, 0fC09DE9E6;
	fma.rn.f32 	%f849, %f845, %f847, 0f00000000;
	fma.rn.f32 	%f850, %f848, %f842, 0f3F800000;
	fma.rn.f32 	%f851, %f841, 0f40490FDB, %f849;
	and.b32  	%r414, %r413, 1;
	setp.eq.b32 	%p154, %r414, 1;
	mul.f32 	%f66, %f64, 0f40800000;
	setp.eq.f32 	%p156, %f66, 0f00000000;
	mov.f32 	%f1412, %f1415;
	@%p156 bra 	$L__BB0_37;
// %bb.36:                              // %L1350
	add.f32 	%f856, %f66, %f66;
	mov.b32 	%r416, %f856;
	and.b32  	%r417, %r416, -2147483648;
	or.b32  	%r418, %r417, 1056964608;
	mov.b32 	%f857, %r418;
	add.f32 	%f858, %f856, %f857;
	cvt.rzi.f32.f32 	%f859, %f858;
	abs.f32 	%f860, %f856;
	setp.gt.f32 	%p157, %f860, 0f4B000000;
	selp.f32 	%f861, %f856, %f859, %p157;
	cvt.rzi.f32.f32 	%f862, %f856;
	setp.lt.f32 	%p158, %f860, 0f3F000000;
	selp.f32 	%f863, %f862, %f861, %p158;
	cvt.rzi.s32.f32 	%r419, %f863;
	fma.rn.f32 	%f864, %f863, 0fBF000000, %f66;
	mul.f32 	%f865, %f864, %f864;
	fma.rn.f32 	%f866, %f865, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f867, %f865, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f868, %f866, %f865, 0fC0A55DF6;
	fma.rn.f32 	%f869, %f867, %f865, 0f4081E0CF;
	fma.rn.f32 	%f870, %f865, %f864, 0f00000000;
	fma.rn.f32 	%f871, %f869, %f865, 0fC09DE9E6;
	fma.rn.f32 	%f872, %f868, %f870, 0f00000000;
	fma.rn.f32 	%f873, %f871, %f865, 0f3F800000;
	fma.rn.f32 	%f874, %f864, 0f40490FDB, %f872;
	and.b32  	%r420, %r419, 1;
	setp.eq.b32 	%p159, %r420, 1;
	selp.f32 	%f875, %f873, %f874, %p159;
	and.b32  	%r421, %r419, 2;
	setp.eq.s32 	%p160, %r421, 0;
	sub.f32 	%f877, %f151, %f875;
	selp.f32 	%f878, %f875, %f877, %p160;
	cvt.rzi.f32.f32 	%f879, %f66;
	setp.eq.f32 	%p161, %f66, %f879;
	mul.f32 	%f880, %f66, 0f00000000;
	selp.f32 	%f881, %f880, %f878, %p161;
	mul.f32 	%f882, %f64, 0f41490FDB;
	div.approx.f32 	%f1412, %f881, %f882;
$L__BB0_37:                             // %L1354
	or.b32  	%r207, %r206, %r203;
	and.b32  	%r142, %r141, 32;
	selp.f32 	%f150, %f148, %f149, %p22;
	and.b32  	%r229, %r227, 2;
	selp.f32 	%f208, %f206, %f207, %p33;
	and.b32  	%r243, %r241, 2;
	selp.f32 	%f267, %f265, %f266, %p44;
	and.b32  	%r260, %r258, 2;
	selp.f32 	%f325, %f323, %f324, %p55;
	and.b32  	%r274, %r272, 2;
	selp.f32 	%f384, %f382, %f383, %p66;
	and.b32  	%r291, %r289, 2;
	selp.f32 	%f442, %f440, %f441, %p77;
	and.b32  	%r305, %r303, 2;
	selp.f32 	%f501, %f499, %f500, %p88;
	and.b32  	%r322, %r320, 2;
	selp.f32 	%f559, %f557, %f558, %p99;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f618, %f616, %f617, %p110;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f676, %f674, %f675, %p121;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f735, %f733, %f734, %p132;
	and.b32  	%r384, %r382, 2;
	selp.f32 	%f793, %f791, %f792, %p143;
	and.b32  	%r398, %r396, 2;
	selp.f32 	%f852, %f850, %f851, %p154;
	and.b32  	%r415, %r413, 2;
	add.s32 	%r422, %r155, 385;
	cvt.rn.f32.s32 	%f886, %r422;
	div.approx.f32 	%f70, %f886, %f127;
	abs.f32 	%f888, %f70;
	setp.gt.f32 	%p162, %f888, 0f4B800000;
	mul.f32 	%f889, %f70, 0f00000000;
	selp.f32 	%f890, %f889, %f70, %p162;
	add.f32 	%f891, %f890, %f890;
	mov.b32 	%r423, %f891;
	and.b32  	%r424, %r423, -2147483648;
	or.b32  	%r425, %r424, 1056964608;
	mov.b32 	%f892, %r425;
	add.f32 	%f893, %f891, %f892;
	cvt.rzi.f32.f32 	%f894, %f893;
	abs.f32 	%f895, %f891;
	setp.gt.f32 	%p163, %f895, 0f4B000000;
	selp.f32 	%f896, %f891, %f894, %p163;
	cvt.rzi.f32.f32 	%f897, %f891;
	setp.lt.f32 	%p164, %f895, 0f3F000000;
	selp.f32 	%f898, %f897, %f896, %p164;
	cvt.rzi.s32.f32 	%r426, %f898;
	add.s32 	%r427, %r426, 1;
	fma.rn.f32 	%f899, %f898, 0fBF000000, %f890;
	mul.f32 	%f900, %f899, %f899;
	fma.rn.f32 	%f901, %f900, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f902, %f900, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f903, %f901, %f900, 0fC0A55DF6;
	fma.rn.f32 	%f904, %f902, %f900, 0f4081E0CF;
	fma.rn.f32 	%f905, %f900, %f899, 0f00000000;
	fma.rn.f32 	%f906, %f904, %f900, 0fC09DE9E6;
	fma.rn.f32 	%f907, %f903, %f905, 0f00000000;
	fma.rn.f32 	%f908, %f906, %f900, 0f3F800000;
	fma.rn.f32 	%f909, %f899, 0f40490FDB, %f907;
	and.b32  	%r428, %r427, 1;
	setp.eq.b32 	%p165, %r428, 1;
	selp.f32 	%f910, %f908, %f909, %p165;
	and.b32  	%r429, %r427, 2;
	mul.f32 	%f72, %f70, 0f40800000;
	setp.eq.f32 	%p167, %f72, 0f00000000;
	mov.f32 	%f1413, %f1415;
	@%p167 bra 	$L__BB0_39;
// %bb.38:                              // %L1368
	add.f32 	%f914, %f72, %f72;
	mov.b32 	%r430, %f914;
	and.b32  	%r431, %r430, -2147483648;
	or.b32  	%r432, %r431, 1056964608;
	mov.b32 	%f915, %r432;
	add.f32 	%f916, %f914, %f915;
	cvt.rzi.f32.f32 	%f917, %f916;
	abs.f32 	%f918, %f914;
	setp.gt.f32 	%p168, %f918, 0f4B000000;
	selp.f32 	%f919, %f914, %f917, %p168;
	cvt.rzi.f32.f32 	%f920, %f914;
	setp.lt.f32 	%p169, %f918, 0f3F000000;
	selp.f32 	%f921, %f920, %f919, %p169;
	cvt.rzi.s32.f32 	%r433, %f921;
	fma.rn.f32 	%f922, %f921, 0fBF000000, %f72;
	mul.f32 	%f923, %f922, %f922;
	fma.rn.f32 	%f924, %f923, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f925, %f923, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f926, %f924, %f923, 0fC0A55DF6;
	fma.rn.f32 	%f927, %f925, %f923, 0f4081E0CF;
	fma.rn.f32 	%f928, %f923, %f922, 0f00000000;
	fma.rn.f32 	%f929, %f927, %f923, 0fC09DE9E6;
	fma.rn.f32 	%f930, %f926, %f928, 0f00000000;
	fma.rn.f32 	%f931, %f929, %f923, 0f3F800000;
	fma.rn.f32 	%f932, %f922, 0f40490FDB, %f930;
	and.b32  	%r434, %r433, 1;
	setp.eq.b32 	%p170, %r434, 1;
	selp.f32 	%f933, %f931, %f932, %p170;
	and.b32  	%r435, %r433, 2;
	setp.eq.s32 	%p171, %r435, 0;
	sub.f32 	%f935, %f151, %f933;
	selp.f32 	%f936, %f933, %f935, %p171;
	cvt.rzi.f32.f32 	%f937, %f72;
	setp.eq.f32 	%p172, %f72, %f937;
	mul.f32 	%f938, %f72, 0f00000000;
	selp.f32 	%f939, %f938, %f936, %p172;
	mul.f32 	%f940, %f70, 0f41490FDB;
	div.approx.f32 	%f1413, %f939, %f940;
$L__BB0_39:                             // %L1372
	or.b32  	%r208, %r207, %r142;
	and.b32  	%r143, %r141, 4;
	setp.eq.s32 	%p23, %r229, 0;
	sub.f32 	%f152, %f151, %f150;
	setp.eq.s32 	%p34, %r243, 0;
	sub.f32 	%f210, %f151, %f208;
	setp.eq.s32 	%p45, %r260, 0;
	sub.f32 	%f269, %f151, %f267;
	setp.eq.s32 	%p56, %r274, 0;
	sub.f32 	%f327, %f151, %f325;
	setp.eq.s32 	%p67, %r291, 0;
	sub.f32 	%f386, %f151, %f384;
	setp.eq.s32 	%p78, %r305, 0;
	sub.f32 	%f444, %f151, %f442;
	setp.eq.s32 	%p89, %r322, 0;
	sub.f32 	%f503, %f151, %f501;
	setp.eq.s32 	%p100, %r336, 0;
	sub.f32 	%f561, %f151, %f559;
	setp.eq.s32 	%p111, %r353, 0;
	sub.f32 	%f620, %f151, %f618;
	setp.eq.s32 	%p122, %r367, 0;
	sub.f32 	%f678, %f151, %f676;
	setp.eq.s32 	%p133, %r384, 0;
	sub.f32 	%f737, %f151, %f735;
	setp.eq.s32 	%p144, %r398, 0;
	sub.f32 	%f795, %f151, %f793;
	setp.eq.s32 	%p155, %r415, 0;
	sub.f32 	%f854, %f151, %f852;
	setp.eq.s32 	%p166, %r429, 0;
	sub.f32 	%f912, %f151, %f910;
	add.s32 	%r439, %r155, 259;
	cvt.rn.f32.s32 	%f945, %r439;
	div.approx.f32 	%f75, %f945, %f127;
	abs.f32 	%f947, %f75;
	setp.gt.f32 	%p173, %f947, 0f4B800000;
	mul.f32 	%f948, %f75, 0f00000000;
	selp.f32 	%f949, %f948, %f75, %p173;
	add.f32 	%f950, %f949, %f949;
	mov.b32 	%r440, %f950;
	and.b32  	%r441, %r440, -2147483648;
	or.b32  	%r442, %r441, 1056964608;
	mov.b32 	%f951, %r442;
	add.f32 	%f952, %f950, %f951;
	cvt.rzi.f32.f32 	%f953, %f952;
	abs.f32 	%f954, %f950;
	setp.gt.f32 	%p174, %f954, 0f4B000000;
	selp.f32 	%f955, %f950, %f953, %p174;
	cvt.rzi.f32.f32 	%f956, %f950;
	setp.lt.f32 	%p175, %f954, 0f3F000000;
	selp.f32 	%f957, %f956, %f955, %p175;
	cvt.rzi.s32.f32 	%r443, %f957;
	add.s32 	%r444, %r443, 1;
	fma.rn.f32 	%f958, %f957, 0fBF000000, %f949;
	mul.f32 	%f959, %f958, %f958;
	fma.rn.f32 	%f960, %f959, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f961, %f959, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f962, %f960, %f959, 0fC0A55DF6;
	fma.rn.f32 	%f963, %f961, %f959, 0f4081E0CF;
	fma.rn.f32 	%f964, %f959, %f958, 0f00000000;
	fma.rn.f32 	%f965, %f963, %f959, 0fC09DE9E6;
	fma.rn.f32 	%f966, %f962, %f964, 0f00000000;
	fma.rn.f32 	%f967, %f965, %f959, 0f3F800000;
	fma.rn.f32 	%f968, %f958, 0f40490FDB, %f966;
	and.b32  	%r445, %r444, 1;
	setp.eq.b32 	%p176, %r445, 1;
	selp.f32 	%f969, %f967, %f968, %p176;
	and.b32  	%r446, %r444, 2;
	setp.eq.s32 	%p177, %r446, 0;
	sub.f32 	%f971, %f151, %f969;
	mul.f32 	%f77, %f75, 0f40800000;
	setp.eq.f32 	%p178, %f77, 0f00000000;
	mov.f32 	%f1414, %f1415;
	@%p178 bra 	$L__BB0_41;
// %bb.40:                              // %L1448
	add.f32 	%f973, %f77, %f77;
	mov.b32 	%r447, %f973;
	and.b32  	%r448, %r447, -2147483648;
	or.b32  	%r449, %r448, 1056964608;
	mov.b32 	%f974, %r449;
	add.f32 	%f975, %f973, %f974;
	cvt.rzi.f32.f32 	%f976, %f975;
	abs.f32 	%f977, %f973;
	setp.gt.f32 	%p179, %f977, 0f4B000000;
	selp.f32 	%f978, %f973, %f976, %p179;
	cvt.rzi.f32.f32 	%f979, %f973;
	setp.lt.f32 	%p180, %f977, 0f3F000000;
	selp.f32 	%f980, %f979, %f978, %p180;
	cvt.rzi.s32.f32 	%r450, %f980;
	fma.rn.f32 	%f981, %f980, 0fBF000000, %f77;
	mul.f32 	%f982, %f981, %f981;
	fma.rn.f32 	%f983, %f982, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f984, %f982, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f985, %f983, %f982, 0fC0A55DF6;
	fma.rn.f32 	%f986, %f984, %f982, 0f4081E0CF;
	fma.rn.f32 	%f987, %f982, %f981, 0f00000000;
	fma.rn.f32 	%f988, %f986, %f982, 0fC09DE9E6;
	fma.rn.f32 	%f989, %f985, %f987, 0f00000000;
	fma.rn.f32 	%f990, %f988, %f982, 0f3F800000;
	fma.rn.f32 	%f991, %f981, 0f40490FDB, %f989;
	and.b32  	%r451, %r450, 1;
	setp.eq.b32 	%p181, %r451, 1;
	selp.f32 	%f992, %f990, %f991, %p181;
	and.b32  	%r452, %r450, 2;
	setp.eq.s32 	%p182, %r452, 0;
	sub.f32 	%f994, %f151, %f992;
	selp.f32 	%f995, %f992, %f994, %p182;
	cvt.rzi.f32.f32 	%f996, %f77;
	setp.eq.f32 	%p183, %f77, %f996;
	mul.f32 	%f997, %f77, 0f00000000;
	selp.f32 	%f998, %f997, %f995, %p183;
	mul.f32 	%f999, %f75, 0f41490FDB;
	div.approx.f32 	%f1414, %f998, %f999;
$L__BB0_41:                             // %L1452
	or.b32  	%r209, %r208, %r143;
	and.b32  	%r210, %r3, 2;
	selp.f32 	%f153, %f150, %f152, %p23;
	selp.f32 	%f211, %f208, %f210, %p34;
	selp.f32 	%f270, %f267, %f269, %p45;
	selp.f32 	%f328, %f325, %f327, %p56;
	selp.f32 	%f387, %f384, %f386, %p67;
	selp.f32 	%f445, %f442, %f444, %p78;
	selp.f32 	%f504, %f501, %f503, %p89;
	selp.f32 	%f562, %f559, %f561, %p100;
	selp.f32 	%f621, %f618, %f620, %p111;
	selp.f32 	%f679, %f676, %f678, %p122;
	selp.f32 	%f738, %f735, %f737, %p133;
	selp.f32 	%f796, %f793, %f795, %p144;
	selp.f32 	%f855, %f852, %f854, %p155;
	selp.f32 	%f913, %f910, %f912, %p166;
	selp.f32 	%f972, %f969, %f971, %p177;
	mov.f32 	%f183, 0f43000000;
	shr.u32 	%r146, %r3, 1;
	shr.u32 	%r152, %r3, 3;
	add.s32 	%r453, %r155, 387;
	cvt.rn.f32.s32 	%f1003, %r453;
	div.approx.f32 	%f81, %f1003, %f127;
	abs.f32 	%f1005, %f81;
	setp.gt.f32 	%p184, %f1005, 0f4B800000;
	mul.f32 	%f1006, %f81, 0f00000000;
	selp.f32 	%f1007, %f1006, %f81, %p184;
	add.f32 	%f1008, %f1007, %f1007;
	mov.b32 	%r454, %f1008;
	and.b32  	%r455, %r454, -2147483648;
	or.b32  	%r456, %r455, 1056964608;
	mov.b32 	%f1009, %r456;
	add.f32 	%f1010, %f1008, %f1009;
	cvt.rzi.f32.f32 	%f1011, %f1010;
	abs.f32 	%f1012, %f1008;
	setp.gt.f32 	%p185, %f1012, 0f4B000000;
	selp.f32 	%f1013, %f1008, %f1011, %p185;
	cvt.rzi.f32.f32 	%f1014, %f1008;
	setp.lt.f32 	%p186, %f1012, 0f3F000000;
	selp.f32 	%f1015, %f1014, %f1013, %p186;
	cvt.rzi.s32.f32 	%r457, %f1015;
	add.s32 	%r458, %r457, 1;
	fma.rn.f32 	%f1016, %f1015, 0fBF000000, %f1007;
	mul.f32 	%f1017, %f1016, %f1016;
	fma.rn.f32 	%f1018, %f1017, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1019, %f1017, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1020, %f1018, %f1017, 0fC0A55DF6;
	fma.rn.f32 	%f1021, %f1019, %f1017, 0f4081E0CF;
	fma.rn.f32 	%f1022, %f1017, %f1016, 0f00000000;
	fma.rn.f32 	%f1023, %f1021, %f1017, 0fC09DE9E6;
	fma.rn.f32 	%f1024, %f1020, %f1022, 0f00000000;
	fma.rn.f32 	%f1025, %f1023, %f1017, 0f3F800000;
	fma.rn.f32 	%f1026, %f1016, 0f40490FDB, %f1024;
	and.b32  	%r459, %r458, 1;
	setp.eq.b32 	%p187, %r459, 1;
	selp.f32 	%f1027, %f1025, %f1026, %p187;
	and.b32  	%r460, %r458, 2;
	setp.eq.s32 	%p188, %r460, 0;
	sub.f32 	%f1029, %f151, %f1027;
	selp.f32 	%f1030, %f1027, %f1029, %p188;
	mul.f32 	%f83, %f81, 0f40800000;
	setp.eq.f32 	%p189, %f83, 0f00000000;
	@%p189 bra 	$L__BB0_43;
// %bb.42:                              // %L1466
	add.f32 	%f1031, %f83, %f83;
	mov.b32 	%r461, %f1031;
	and.b32  	%r462, %r461, -2147483648;
	or.b32  	%r463, %r462, 1056964608;
	mov.b32 	%f1032, %r463;
	add.f32 	%f1033, %f1031, %f1032;
	cvt.rzi.f32.f32 	%f1034, %f1033;
	abs.f32 	%f1035, %f1031;
	setp.gt.f32 	%p190, %f1035, 0f4B000000;
	selp.f32 	%f1036, %f1031, %f1034, %p190;
	cvt.rzi.f32.f32 	%f1037, %f1031;
	setp.lt.f32 	%p191, %f1035, 0f3F000000;
	selp.f32 	%f1038, %f1037, %f1036, %p191;
	cvt.rzi.s32.f32 	%r464, %f1038;
	fma.rn.f32 	%f1039, %f1038, 0fBF000000, %f83;
	mul.f32 	%f1040, %f1039, %f1039;
	fma.rn.f32 	%f1041, %f1040, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1042, %f1040, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1043, %f1041, %f1040, 0fC0A55DF6;
	fma.rn.f32 	%f1044, %f1042, %f1040, 0f4081E0CF;
	fma.rn.f32 	%f1045, %f1040, %f1039, 0f00000000;
	fma.rn.f32 	%f1046, %f1044, %f1040, 0fC09DE9E6;
	fma.rn.f32 	%f1047, %f1043, %f1045, 0f00000000;
	fma.rn.f32 	%f1048, %f1046, %f1040, 0f3F800000;
	fma.rn.f32 	%f1049, %f1039, 0f40490FDB, %f1047;
	and.b32  	%r465, %r464, 1;
	setp.eq.b32 	%p192, %r465, 1;
	selp.f32 	%f1050, %f1048, %f1049, %p192;
	and.b32  	%r466, %r464, 2;
	setp.eq.s32 	%p193, %r466, 0;
	sub.f32 	%f1052, %f151, %f1050;
	selp.f32 	%f1053, %f1050, %f1052, %p193;
	cvt.rzi.f32.f32 	%f1054, %f83;
	setp.eq.f32 	%p194, %f83, %f1054;
	mul.f32 	%f1055, %f83, 0f00000000;
	selp.f32 	%f1056, %f1055, %f1053, %p194;
	mul.f32 	%f1057, %f81, 0f41490FDB;
	div.approx.f32 	%f1415, %f1056, %f1057;
$L__BB0_43:                             // %L1470
	or.b32  	%r211, %r209, %r210;
	mul.f32 	%f104, %f153, %f153;
	mul.f32 	%f5, %f211, %f211;
	mul.f32 	%f10, %f270, %f270;
	mul.f32 	%f16, %f328, %f328;
	mul.f32 	%f21, %f387, %f387;
	mul.f32 	%f27, %f445, %f445;
	mul.f32 	%f32, %f504, %f504;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f621, %f621;
	mul.f32 	%f49, %f679, %f679;
	mul.f32 	%f54, %f738, %f738;
	mul.f32 	%f60, %f796, %f796;
	mul.f32 	%f65, %f855, %f855;
	mul.f32 	%f71, %f913, %f913;
	mul.f32 	%f76, %f972, %f972;
	mul.f32 	%f82, %f1030, %f1030;
	mul.lo.s32 	%r512, %r154, 127;
	and.b32  	%r513, %r512, 255;
	cvt.rn.f32.s32 	%f1061, %r513;
	div.approx.f32 	%f1062, %f1061, %f183;
	add.f32 	%f1063, %f1062, %f1062;
	mov.b32 	%r514, %f1063;
	and.b32  	%r515, %r514, -2147483648;
	or.b32  	%r516, %r515, 1056964608;
	mov.b32 	%f1064, %r516;
	add.f32 	%f1065, %f1063, %f1064;
	cvt.rzi.f32.f32 	%f1066, %f1065;
	abs.f32 	%f1067, %f1063;
	setp.gt.f32 	%p195, %f1067, 0f4B000000;
	selp.f32 	%f1068, %f1063, %f1066, %p195;
	cvt.rzi.f32.f32 	%f1069, %f1063;
	setp.lt.f32 	%p196, %f1067, 0f3F000000;
	selp.f32 	%f1070, %f1069, %f1068, %p196;
	cvt.rzi.s32.f32 	%r517, %f1070;
	fma.rn.f32 	%f1071, %f1070, 0fBF000000, %f1062;
	mul.f32 	%f1072, %f1071, %f1071;
	fma.rn.f32 	%f1073, %f1072, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1074, %f1072, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1075, %f1073, %f1072, 0fC0A55DF6;
	fma.rn.f32 	%f1076, %f1074, %f1072, 0f4081E0CF;
	fma.rn.f32 	%f1077, %f1072, %f1071, 0f00000000;
	fma.rn.f32 	%f1078, %f1076, %f1072, 0fC09DE9E6;
	fma.rn.f32 	%f1079, %f1075, %f1077, 0f00000000;
	fma.rn.f32 	%f1080, %f1078, %f1072, 0f3F800000;
	fma.rn.f32 	%f1081, %f1071, 0f40490FDB, %f1079;
	and.b32  	%r518, %r517, 1;
	setp.eq.b32 	%p197, %r518, 1;
	selp.f32 	%f1082, %f1080, %f1081, %p197;
	selp.f32 	%f1083, %f1081, %f1080, %p197;
	and.b32  	%r519, %r517, 2;
	setp.eq.s32 	%p198, %r519, 0;
	neg.f32 	%f1084, %f1082;
	selp.f32 	%f1085, %f1082, %f1084, %p198;
	add.s32 	%r520, %r517, 1;
	and.b32  	%r521, %r520, 2;
	setp.eq.s32 	%p199, %r521, 0;
	sub.f32 	%f1087, %f151, %f1083;
	selp.f32 	%f1088, %f1083, %f1087, %p199;
	cvt.rzi.f32.f32 	%f1089, %f1062;
	setp.eq.f32 	%p200, %f1089, %f1062;
	mul.f32 	%f1090, %f1062, 0f00000000;
	selp.f32 	%f1091, %f1090, %f1085, %p200;
	abs.f32 	%f1092, %f1062;
	setp.gt.f32 	%p201, %f1092, 0f4B800000;
	add.f32 	%f1093, %f1091, 0f3F800000;
	add.s32 	%r522, %r512, 192;
	and.b32  	%r523, %r522, 255;
	cvt.rn.f32.s32 	%f1095, %r523;
	div.approx.f32 	%f1096, %f1095, %f183;
	add.f32 	%f1097, %f1096, %f1096;
	mov.b32 	%r524, %f1097;
	and.b32  	%r525, %r524, -2147483648;
	or.b32  	%r526, %r525, 1056964608;
	mov.b32 	%f1098, %r526;
	add.f32 	%f1099, %f1097, %f1098;
	cvt.rzi.f32.f32 	%f1100, %f1099;
	abs.f32 	%f1101, %f1097;
	setp.gt.f32 	%p202, %f1101, 0f4B000000;
	selp.f32 	%f1102, %f1097, %f1100, %p202;
	cvt.rzi.f32.f32 	%f1103, %f1097;
	setp.lt.f32 	%p203, %f1101, 0f3F000000;
	selp.f32 	%f1104, %f1103, %f1102, %p203;
	cvt.rzi.s32.f32 	%r527, %f1104;
	fma.rn.f32 	%f1105, %f1104, 0fBF000000, %f1096;
	mul.f32 	%f1106, %f1105, %f1105;
	fma.rn.f32 	%f1107, %f1106, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1108, %f1106, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1109, %f1107, %f1106, 0fC0A55DF6;
	fma.rn.f32 	%f1110, %f1108, %f1106, 0f4081E0CF;
	fma.rn.f32 	%f1111, %f1106, %f1105, 0f00000000;
	fma.rn.f32 	%f1112, %f1110, %f1106, 0fC09DE9E6;
	fma.rn.f32 	%f1113, %f1109, %f1111, 0f00000000;
	fma.rn.f32 	%f1114, %f1112, %f1106, 0f3F800000;
	fma.rn.f32 	%f1115, %f1105, 0f40490FDB, %f1113;
	and.b32  	%r528, %r527, 1;
	setp.eq.b32 	%p204, %r528, 1;
	selp.f32 	%f1116, %f1114, %f1115, %p204;
	selp.f32 	%f1117, %f1115, %f1114, %p204;
	and.b32  	%r529, %r527, 2;
	setp.eq.s32 	%p205, %r529, 0;
	neg.f32 	%f1118, %f1116;
	selp.f32 	%f1119, %f1116, %f1118, %p205;
	add.s32 	%r530, %r527, 1;
	and.b32  	%r531, %r530, 2;
	setp.eq.s32 	%p206, %r531, 0;
	sub.f32 	%f1120, %f151, %f1117;
	selp.f32 	%f1121, %f1117, %f1120, %p206;
	cvt.rzi.f32.f32 	%f1122, %f1096;
	setp.eq.f32 	%p207, %f1122, %f1096;
	mul.f32 	%f1123, %f1096, 0f00000000;
	selp.f32 	%f1124, %f1123, %f1119, %p207;
	abs.f32 	%f1125, %f1096;
	setp.gt.f32 	%p208, %f1125, 0f4B800000;
	add.f32 	%f1126, %f1124, 0f3F800000;
	and.b32  	%r532, %r152, 2;
	and.b32  	%r533, %r146, 4;
	or.b32  	%r534, %r150, %r532;
	or.b32  	%r535, %r534, %r533;
	and.b32  	%r536, %r138, 6;
	mul.lo.s32 	%r537, %r535, %r536;
	and.b32  	%r538, %r537, 14;
	cvt.rn.f32.s32 	%f1128, %r538;
	mov.f32 	%f1129, 0f41000000;
	div.approx.f32 	%f1130, %f1128, %f1129;
	add.f32 	%f1131, %f1130, %f1130;
	mov.b32 	%r539, %f1131;
	and.b32  	%r540, %r539, -2147483648;
	or.b32  	%r541, %r540, 1056964608;
	mov.b32 	%f1132, %r541;
	add.f32 	%f1133, %f1131, %f1132;
	cvt.rzi.f32.f32 	%f1134, %f1133;
	abs.f32 	%f1135, %f1131;
	setp.gt.f32 	%p209, %f1135, 0f4B000000;
	selp.f32 	%f1136, %f1131, %f1134, %p209;
	cvt.rzi.f32.f32 	%f1137, %f1131;
	setp.lt.f32 	%p210, %f1135, 0f3F000000;
	selp.f32 	%f1138, %f1137, %f1136, %p210;
	cvt.rzi.s32.f32 	%r542, %f1138;
	fma.rn.f32 	%f1139, %f1138, 0fBF000000, %f1130;
	mul.f32 	%f1140, %f1139, %f1139;
	fma.rn.f32 	%f1141, %f1140, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1142, %f1140, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1143, %f1141, %f1140, 0fC0A55DF6;
	fma.rn.f32 	%f1144, %f1142, %f1140, 0f4081E0CF;
	fma.rn.f32 	%f1145, %f1140, %f1139, 0f00000000;
	fma.rn.f32 	%f1146, %f1144, %f1140, 0fC09DE9E6;
	fma.rn.f32 	%f1147, %f1143, %f1145, 0f00000000;
	fma.rn.f32 	%f1148, %f1146, %f1140, 0f3F800000;
	fma.rn.f32 	%f1149, %f1139, 0f40490FDB, %f1147;
	and.b32  	%r543, %r542, 1;
	setp.eq.b32 	%p211, %r543, 1;
	selp.f32 	%f1150, %f1148, %f1149, %p211;
	selp.f32 	%f1151, %f1149, %f1148, %p211;
	and.b32  	%r544, %r542, 2;
	setp.eq.s32 	%p212, %r544, 0;
	neg.f32 	%f1152, %f1150;
	selp.f32 	%f1153, %f1150, %f1152, %p212;
	add.s32 	%r545, %r542, 1;
	and.b32  	%r546, %r545, 2;
	setp.eq.s32 	%p213, %r546, 0;
	sub.f32 	%f1154, %f151, %f1151;
	selp.f32 	%f1155, %f1151, %f1154, %p213;
	cvt.rzi.f32.f32 	%f1156, %f1130;
	setp.eq.f32 	%p214, %f1156, %f1130;
	mul.f32 	%f1157, %f1130, 0f00000000;
	selp.f32 	%f1158, %f1157, %f1153, %p214;
	abs.f32 	%f1159, %f1130;
	setp.gt.f32 	%p215, %f1159, 0f4B800000;
	add.f32 	%f1160, %f1158, 0f3F800000;
	or.b32  	%r547, %r138, 8;
	mul.lo.s32 	%r548, %r535, %r547;
	and.b32  	%r549, %r548, 14;
	cvt.rn.f32.s32 	%f1162, %r549;
	div.approx.f32 	%f1163, %f1162, %f1129;
	add.f32 	%f1164, %f1163, %f1163;
	mov.b32 	%r550, %f1164;
	and.b32  	%r551, %r550, -2147483648;
	or.b32  	%r552, %r551, 1056964608;
	mov.b32 	%f1165, %r552;
	add.f32 	%f1166, %f1164, %f1165;
	cvt.rzi.f32.f32 	%f1167, %f1166;
	abs.f32 	%f1168, %f1164;
	setp.gt.f32 	%p216, %f1168, 0f4B000000;
	selp.f32 	%f1169, %f1164, %f1167, %p216;
	cvt.rzi.f32.f32 	%f1170, %f1164;
	setp.lt.f32 	%p217, %f1168, 0f3F000000;
	selp.f32 	%f1171, %f1170, %f1169, %p217;
	cvt.rzi.s32.f32 	%r553, %f1171;
	fma.rn.f32 	%f1172, %f1171, 0fBF000000, %f1163;
	mul.f32 	%f1173, %f1172, %f1172;
	fma.rn.f32 	%f1174, %f1173, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1175, %f1173, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1176, %f1174, %f1173, 0fC0A55DF6;
	fma.rn.f32 	%f1177, %f1175, %f1173, 0f4081E0CF;
	fma.rn.f32 	%f1178, %f1173, %f1172, 0f00000000;
	fma.rn.f32 	%f1179, %f1177, %f1173, 0fC09DE9E6;
	fma.rn.f32 	%f1180, %f1176, %f1178, 0f00000000;
	fma.rn.f32 	%f1181, %f1179, %f1173, 0f3F800000;
	fma.rn.f32 	%f1182, %f1172, 0f40490FDB, %f1180;
	and.b32  	%r554, %r553, 1;
	setp.eq.b32 	%p218, %r554, 1;
	selp.f32 	%f1183, %f1181, %f1182, %p218;
	selp.f32 	%f1184, %f1182, %f1181, %p218;
	and.b32  	%r555, %r553, 2;
	setp.eq.s32 	%p219, %r555, 0;
	neg.f32 	%f1185, %f1183;
	selp.f32 	%f1186, %f1183, %f1185, %p219;
	add.s32 	%r556, %r553, 1;
	and.b32  	%r557, %r556, 2;
	setp.eq.s32 	%p220, %r557, 0;
	sub.f32 	%f1187, %f151, %f1184;
	selp.f32 	%f1188, %f1184, %f1187, %p220;
	cvt.rzi.f32.f32 	%f1189, %f1163;
	setp.eq.f32 	%p221, %f1189, %f1163;
	mul.f32 	%f1190, %f1163, 0f00000000;
	selp.f32 	%f1191, %f1190, %f1186, %p221;
	abs.f32 	%f1192, %f1163;
	setp.gt.f32 	%p222, %f1192, 0f4B800000;
	add.f32 	%f1193, %f1191, 0f3F800000;
	shl.b32 	%r558, %r147, 3;
	shl.b32 	%r559, %r148, 2;
	or.b32  	%r560, %r558, %r559;
	mul.lo.s32 	%r561, %r560, %r535;
	cvt.rn.f32.s32 	%f1195, %r561;
	mov.f32 	%f1196, 0f42800000;
	div.approx.f32 	%f1197, %f1195, %f1196;
	add.f32 	%f1198, %f1197, %f1197;
	mov.b32 	%r562, %f1198;
	and.b32  	%r563, %r562, -2147483648;
	or.b32  	%r564, %r563, 1056964608;
	mov.b32 	%f1199, %r564;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p223, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p223;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p224, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p224;
	cvt.rzi.s32.f32 	%r565, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1197;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r566, %r565, 1;
	setp.eq.b32 	%p225, %r566, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p225;
	selp.f32 	%f1218, %f1216, %f1215, %p225;
	and.b32  	%r567, %r565, 2;
	setp.eq.s32 	%p226, %r567, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p226;
	add.s32 	%r568, %r565, 1;
	and.b32  	%r569, %r568, 2;
	setp.eq.s32 	%p227, %r569, 0;
	sub.f32 	%f1221, %f151, %f1218;
	cvt.rzi.f32.f32 	%f1223, %f1197;
	setp.eq.f32 	%p228, %f1223, %f1197;
	mul.f32 	%f1224, %f1197, 0f00000000;
	selp.f32 	%f1225, %f1224, %f1220, %p228;
	abs.f32 	%f1226, %f1197;
	shl.b32 	%r571, %r535, 4;
	add.s32 	%r572, %r561, %r571;
	and.b32  	%r573, %r572, 124;
	cvt.rn.f32.s32 	%f1229, %r573;
	div.approx.f32 	%f1230, %f1229, %f1196;
	add.f32 	%f1231, %f1230, %f1230;
	mov.b32 	%r574, %f1231;
	and.b32  	%r575, %r574, -2147483648;
	or.b32  	%r576, %r575, 1056964608;
	mov.b32 	%f1232, %r576;
	add.f32 	%f1233, %f1231, %f1232;
	cvt.rzi.f32.f32 	%f1234, %f1233;
	abs.f32 	%f1235, %f1231;
	setp.gt.f32 	%p230, %f1235, 0f4B000000;
	selp.f32 	%f1236, %f1231, %f1234, %p230;
	cvt.rzi.f32.f32 	%f1237, %f1231;
	setp.lt.f32 	%p231, %f1235, 0f3F000000;
	selp.f32 	%f1238, %f1237, %f1236, %p231;
	cvt.rzi.s32.f32 	%r577, %f1238;
	fma.rn.f32 	%f1239, %f1238, 0fBF000000, %f1230;
	mul.f32 	%f1240, %f1239, %f1239;
	fma.rn.f32 	%f1241, %f1240, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1242, %f1240, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1243, %f1241, %f1240, 0fC0A55DF6;
	fma.rn.f32 	%f1244, %f1242, %f1240, 0f4081E0CF;
	fma.rn.f32 	%f1245, %f1240, %f1239, 0f00000000;
	fma.rn.f32 	%f1246, %f1244, %f1240, 0fC09DE9E6;
	fma.rn.f32 	%f1247, %f1243, %f1245, 0f00000000;
	fma.rn.f32 	%f1248, %f1246, %f1240, 0f3F800000;
	fma.rn.f32 	%f1249, %f1239, 0f40490FDB, %f1247;
	and.b32  	%r578, %r577, 1;
	setp.eq.b32 	%p232, %r578, 1;
	selp.f32 	%f1250, %f1248, %f1249, %p232;
	selp.f32 	%f1251, %f1249, %f1248, %p232;
	and.b32  	%r579, %r577, 2;
	setp.eq.s32 	%p233, %r579, 0;
	neg.f32 	%f1252, %f1250;
	selp.f32 	%f1253, %f1250, %f1252, %p233;
	add.s32 	%r580, %r577, 1;
	and.b32  	%r581, %r580, 2;
	setp.eq.s32 	%p234, %r581, 0;
	sub.f32 	%f1254, %f151, %f1251;
	cvt.rzi.f32.f32 	%f1256, %f1230;
	setp.eq.f32 	%p235, %f1256, %f1230;
	mul.f32 	%f1257, %f1230, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1253, %p235;
	abs.f32 	%f1259, %f1230;
	and.b32  	%r583, %r561, 12;
	cvt.rn.f32.s32 	%f1262, %r583;
	div.approx.f32 	%f1263, %f1262, %f1129;
	add.f32 	%f1264, %f1263, %f1263;
	mov.b32 	%r584, %f1264;
	and.b32  	%r585, %r584, -2147483648;
	or.b32  	%r586, %r585, 1056964608;
	mov.b32 	%f1265, %r586;
	add.f32 	%f1266, %f1264, %f1265;
	cvt.rzi.f32.f32 	%f1267, %f1266;
	abs.f32 	%f1268, %f1264;
	setp.gt.f32 	%p237, %f1268, 0f4B000000;
	selp.f32 	%f1269, %f1264, %f1267, %p237;
	cvt.rzi.f32.f32 	%f1270, %f1264;
	setp.lt.f32 	%p238, %f1268, 0f3F000000;
	selp.f32 	%f1271, %f1270, %f1269, %p238;
	cvt.rzi.s32.f32 	%r587, %f1271;
	fma.rn.f32 	%f1272, %f1271, 0fBF000000, %f1263;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1275, %f1273, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1276, %f1274, %f1273, 0fC0A55DF6;
	fma.rn.f32 	%f1277, %f1275, %f1273, 0f4081E0CF;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1277, %f1273, 0fC09DE9E6;
	fma.rn.f32 	%f1280, %f1276, %f1278, 0f00000000;
	fma.rn.f32 	%f1281, %f1279, %f1273, 0f3F800000;
	fma.rn.f32 	%f1282, %f1272, 0f40490FDB, %f1280;
	and.b32  	%r588, %r587, 1;
	setp.eq.b32 	%p239, %r588, 1;
	selp.f32 	%f1283, %f1281, %f1282, %p239;
	selp.f32 	%f1284, %f1282, %f1281, %p239;
	and.b32  	%r589, %r587, 2;
	setp.eq.s32 	%p240, %r589, 0;
	neg.f32 	%f1285, %f1283;
	selp.f32 	%f1286, %f1283, %f1285, %p240;
	add.s32 	%r590, %r587, 1;
	and.b32  	%r591, %r590, 2;
	setp.eq.s32 	%p241, %r591, 0;
	sub.f32 	%f1287, %f151, %f1284;
	selp.f32 	%f1288, %f1284, %f1287, %p241;
	cvt.rzi.f32.f32 	%f1289, %f1263;
	setp.eq.f32 	%p242, %f1289, %f1263;
	mul.f32 	%f1290, %f1263, 0f00000000;
	selp.f32 	%f1291, %f1290, %f1286, %p242;
	abs.f32 	%f1292, %f1263;
	setp.gt.f32 	%p243, %f1292, 0f4B800000;
	add.f32 	%f1293, %f1291, 0f3F800000;
	mul.lo.s32 	%r592, %r150, 2147483640;
	cvt.u16.u32 	%rs8, %r3;
	shr.u16 	%rs9, %rs8, 8;
	shl.b16 	%rs10, %rs8, 8;
	or.b16  	%rs11, %rs10, %rs9;
	shl.b16 	%rs12, %rs11, 4;
	shr.u16 	%rs13, %rs11, 4;
	and.b16  	%rs14, %rs13, 3840;
	or.b16  	%rs15, %rs14, %rs12;
	and.b16  	%rs16, %rs15, 13107;
	shl.b16 	%rs17, %rs16, 2;
	shr.u16 	%rs18, %rs15, 2;
	and.b16  	%rs19, %rs18, 13107;
	or.b16  	%rs20, %rs19, %rs17;
	and.b16  	%rs21, %rs20, 20480;
	shl.b16 	%rs22, %rs21, 1;
	shr.u16 	%rs23, %rs20, 1;
	and.b16  	%rs24, %rs23, 16384;
	or.b16  	%rs25, %rs24, %rs22;
	shr.u16 	%rs26, %rs25, 13;
	sub.s32 	%r593, %r592, %r137;
	mad.lo.s32 	%r594, %r153, 2147483616, %r593;
	or.b16  	%rs27, %rs26, 1;
	cvt.u32.u16 	%r595, %rs27;
	and.b16  	%rs28, %rs26, 6;
	cvt.u32.u16 	%r596, %rs28;
	sub.s32 	%r597, %r594, %r596;
	shl.b32 	%r598, %r597, 1;
	cvt.rn.f32.s32 	%f1295, %r598;
	div.approx.f32 	%f86, %f1295, %f183;
	abs.f32 	%f1422, %f86;
	setp.lt.f32 	%p244, %f1422, 0f40000000;
	@%p244 bra 	$L__BB0_77;
// %bb.44:
	setp.gtu.f32 	%p245, %f1422, 0f4B800000;
	@%p245 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_45;
$L__BB0_73:
	mov.b32 	%r157, %f1422;
	and.b32  	%r599, %r157, 8388607;
	or.b32  	%r16390, %r599, 1065353216;
	mov.b32 	%f1421, %r16390;
	add.s32 	%r600, %r157, -1073741824;
	and.b32  	%r16391, %r600, -8388608;
	setp.eq.s32 	%p251, %r16391, 0;
	@%p251 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i2016.preheader
	mov.f32 	%f1305, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1304,%f1305;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i2016
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r601, %r16391, 192937984;
	add.s32 	%r602, %r16390, %r601;
	mov.b32 	%f1306, %r602;
	mul.f32 	%f1307, %f1304, %f1306;
	sub.f32 	%f1308, %f1306, %f1307;
	fma.rn.f32 	%f1309, %f1308, %f1304, %f1307;
	sub.f32 	%f1310, %f1306, %f1309;
	fma.rz.f32 	%f1311, %f1310, %f1304, %f1309;
	cvt.rzi.f32.f32 	%f1312, %f1311;
	sub.f32 	%f1421, %f1306, %f1312;
	sub.s32 	%r16391, %r16391, %r601;
	mov.b32 	%r16390, %f1421;
	setp.ne.s32 	%p252, %r16391, 0;
	setp.ne.s32 	%p253, %r16390, 0;
	and.pred  	%p254, %p252, %p253;
	@%p254 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i2018
	setp.gt.u32 	%p255, %r157, 2139095039;
	selp.f32 	%f1313, 0f7FFFFFFF, 0f4B800000, %p255;
	mul.f32 	%f1314, %f1421, 0f34000000;
	mul.f32 	%f1422, %f1313, %f1314;
	bra.uni 	$L__BB0_77;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1995
	mov.f32 	%f1296, 0f40000000;
	div.approx.f32 	%f1297, %f1422, %f1296;
	cvt.rzi.f32.f32 	%f1420, %f1297;
	fma.rn.f32 	%f107, %f1420, 0fC0000000, %f1422;
	mov.b32 	%r156, %f107;
	setp.lt.u32 	%p246, %r156, 1073741824;
	@%p246 bra 	$L__BB0_72;
// %bb.46:
	setp.lt.u32 	%p247, %r156, -2147483647;
	@%p247 bra 	$L__BB0_70;
// %bb.47:
	add.f32 	%f1302, %f1420, 0fBF800000;
	setp.lt.f32 	%p250, %f107, 0fC0000000;
	add.f32 	%f1303, %f1302, 0fBF800000;
	selp.f32 	%f1420, %f1303, %f1302, %p250;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1420, %f1420, 0f3F800000;
	setp.ltu.f32 	%p248, %f107, 0f40800000;
	@%p248 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1999
	add.f32 	%f1298, %f1420, 0f3F800000;
	fma.rn.f32 	%f1300, %f1296, 0fC0400000, %f107;
	setp.ge.f32 	%p249, %f1300, 0f00000000;
	add.f32 	%f1301, %f1298, 0f3F800000;
	selp.f32 	%f1420, %f1301, %f1298, %p249;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i2002
	fma.rn.f32 	%f1422, %f1420, 0fC0000000, %f1422;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i2021
	bfe.u32 	%r212, %r211, 1, 6;
	bfe.u32 	%r213, %r211, 1, 5;
	mul.f32 	%f182, %f1400, %f104;
	mul.f32 	%f240, %f1401, %f5;
	mul.f32 	%f299, %f1402, %f10;
	mul.f32 	%f357, %f1403, %f16;
	mul.f32 	%f416, %f1404, %f21;
	mul.f32 	%f474, %f1405, %f27;
	mul.f32 	%f533, %f1406, %f32;
	mul.f32 	%f591, %f1407, %f38;
	mul.f32 	%f650, %f1408, %f43;
	mul.f32 	%f708, %f1409, %f49;
	mul.f32 	%f767, %f1410, %f54;
	mul.f32 	%f825, %f1411, %f60;
	mul.f32 	%f884, %f1412, %f65;
	mul.f32 	%f942, %f1413, %f71;
	mul.f32 	%f1001, %f1414, %f76;
	mul.f32 	%f1058, %f1415, %f82;
	selp.f32 	%f1094, %f1093, %f1088, %p201;
	selp.f32 	%f1127, %f1126, %f1121, %p208;
	selp.f32 	%f1161, %f1160, %f1155, %p215;
	selp.f32 	%f1194, %f1193, %f1188, %p222;
	selp.f32 	%f1222, %f1218, %f1221, %p227;
	setp.gt.f32 	%p229, %f1226, 0f4B800000;
	add.f32 	%f1227, %f1225, 0f3F800000;
	selp.f32 	%f1255, %f1251, %f1254, %p234;
	setp.gt.f32 	%p236, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1294, %f1293, %f1288, %p243;
	mov.b32 	%r505, %f1291;
	sub.s32 	%r27, %r594, %r595;
	abs.f32 	%f1315, %f1422;
	setp.gtu.f32 	%p256, %f1315, 0f7F800000;
	@%p256 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r603, %f86;
	and.b32  	%r604, %r603, -2147483648;
	mov.b32 	%r605, %f1422;
	or.b32  	%r606, %r604, %r605;
	mov.b32 	%f1422, %r606;
$L__BB0_79:                             // %__nv_fmodf.exit2022
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd31, %r212, 4;
	mul.wide.u32 	%rd33, %r213, 4;
	cvt.u32.u16 	%r205, %rs6;
	div.approx.f32 	%f3, %f182, %f183;
	div.approx.f32 	%f242, %f240, %f183;
	div.approx.f32 	%f14, %f299, %f183;
	div.approx.f32 	%f359, %f357, %f183;
	div.approx.f32 	%f25, %f416, %f183;
	div.approx.f32 	%f476, %f474, %f183;
	div.approx.f32 	%f36, %f533, %f183;
	div.approx.f32 	%f593, %f591, %f183;
	div.approx.f32 	%f47, %f650, %f183;
	div.approx.f32 	%f710, %f708, %f183;
	div.approx.f32 	%f58, %f767, %f183;
	div.approx.f32 	%f827, %f825, %f183;
	div.approx.f32 	%f69, %f884, %f183;
	div.approx.f32 	%f944, %f942, %f183;
	div.approx.f32 	%f80, %f1001, %f183;
	div.approx.f32 	%f1060, %f1058, %f183;
	mov.b32 	%r474, %f1094;
	mov.b32 	%r475, %f1127;
	mov.b32 	%r480, %f1091;
	mov.b32 	%r481, %f1124;
	mov.b32 	%r492, %f1161;
	mov.b32 	%r493, %f1194;
	mov.b32 	%r486, %f1158;
	mov.b32 	%r487, %f1191;
	mov.b32 	%r570, %f1225;
	selp.f32 	%f1228, %f1227, %f1222, %p229;
	mov.b32 	%r582, %f1258;
	selp.f32 	%f1261, %f1260, %f1255, %p236;
	mov.b32 	%r511, %f1294;
	xor.b32  	%r507, %r505, -2147483648;
	add.f32 	%f1316, %f1422, %f1422;
	mov.b32 	%r607, %f1316;
	and.b32  	%r608, %r607, -2147483648;
	or.b32  	%r609, %r608, 1056964608;
	mov.b32 	%f1317, %r609;
	add.f32 	%f1318, %f1316, %f1317;
	cvt.rzi.f32.f32 	%f1319, %f1318;
	abs.f32 	%f1320, %f1316;
	setp.gt.f32 	%p257, %f1320, 0f4B000000;
	selp.f32 	%f1321, %f1316, %f1319, %p257;
	cvt.rzi.f32.f32 	%f1322, %f1316;
	setp.lt.f32 	%p258, %f1320, 0f3F000000;
	selp.f32 	%f1323, %f1322, %f1321, %p258;
	cvt.rzi.s32.f32 	%r610, %f1323;
	fma.rn.f32 	%f1324, %f1323, 0fBF000000, %f1422;
	mul.f32 	%f1325, %f1324, %f1324;
	fma.rn.f32 	%f1326, %f1325, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1327, %f1325, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1328, %f1326, %f1325, 0fC0A55DF6;
	fma.rn.f32 	%f1329, %f1327, %f1325, 0f4081E0CF;
	fma.rn.f32 	%f1330, %f1325, %f1324, 0f00000000;
	fma.rn.f32 	%f1331, %f1329, %f1325, 0fC09DE9E6;
	fma.rn.f32 	%f1332, %f1328, %f1330, 0f00000000;
	fma.rn.f32 	%f1333, %f1331, %f1325, 0f3F800000;
	fma.rn.f32 	%f1334, %f1324, 0f40490FDB, %f1332;
	and.b32  	%r611, %r610, 1;
	setp.eq.b32 	%p259, %r611, 1;
	selp.f32 	%f1335, %f1333, %f1334, %p259;
	selp.f32 	%f1336, %f1334, %f1333, %p259;
	and.b32  	%r612, %r610, 2;
	setp.eq.s32 	%p260, %r612, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p260;
	add.s32 	%r613, %r610, 1;
	and.b32  	%r614, %r613, 2;
	setp.eq.s32 	%p261, %r614, 0;
	sub.f32 	%f1340, %f151, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p261;
	cvt.rzi.f32.f32 	%f1342, %f1422;
	setp.eq.f32 	%p262, %f1342, %f1422;
	mul.f32 	%f1343, %f1422, 0f00000000;
	selp.f32 	%f121, %f1343, %f1338, %p262;
	abs.f32 	%f1344, %f1422;
	setp.gt.f32 	%p263, %f1344, 0f4B800000;
	add.f32 	%f1345, %f121, 0f3F800000;
	shl.b32 	%r615, %r27, 1;
	cvt.rn.f32.s32 	%f1346, %r615;
	div.approx.f32 	%f123, %f1346, %f183;
	abs.f32 	%f1418, %f123;
	setp.lt.f32 	%p264, %f1418, 0f40000000;
	@%p264 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p265, %f1418, 0f4B800000;
	@%p265 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r29, %f1418;
	and.b32  	%r616, %r29, 8388607;
	or.b32  	%r16338, %r616, 1065353216;
	mov.b32 	%f1417, %r16338;
	add.s32 	%r617, %r29, -1073741824;
	and.b32  	%r16339, %r617, -8388608;
	setp.eq.s32 	%p271, %r16339, 0;
	@%p271 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f1357, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1356,%f1357;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r618, %r16339, 192937984;
	add.s32 	%r619, %r16338, %r618;
	mov.b32 	%f1358, %r619;
	mul.f32 	%f1359, %f1356, %f1358;
	sub.f32 	%f1360, %f1358, %f1359;
	fma.rn.f32 	%f1361, %f1360, %f1356, %f1359;
	sub.f32 	%f1362, %f1358, %f1361;
	fma.rz.f32 	%f1363, %f1362, %f1356, %f1361;
	cvt.rzi.f32.f32 	%f1364, %f1363;
	sub.f32 	%f1417, %f1358, %f1364;
	sub.s32 	%r16339, %r16339, %r618;
	mov.b32 	%r16338, %f1417;
	setp.ne.s32 	%p272, %r16339, 0;
	setp.ne.s32 	%p273, %r16338, 0;
	and.pred  	%p274, %p272, %p273;
	@%p274 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p275, %r29, 2139095039;
	selp.f32 	%f1365, 0f7FFFFFFF, 0f4B800000, %p275;
	mul.f32 	%f1366, %f1417, 0f34000000;
	mul.f32 	%f1418, %f1365, %f1366;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	mov.f32 	%f1348, 0f40000000;
	div.approx.f32 	%f1349, %f1418, %f1348;
	cvt.rzi.f32.f32 	%f1416, %f1349;
	fma.rn.f32 	%f89, %f1416, 0fC0000000, %f1418;
	mov.b32 	%r28, %f89;
	setp.lt.u32 	%p266, %r28, 1073741824;
	@%p266 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p267, %r28, -2147483647;
	@%p267 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f1354, %f1416, 0fBF800000;
	setp.lt.f32 	%p270, %f89, 0fC0000000;
	add.f32 	%f1355, %f1354, 0fBF800000;
	selp.f32 	%f1416, %f1355, %f1354, %p270;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1416, %f1416, 0f3F800000;
	setp.ltu.f32 	%p268, %f89, 0f40800000;
	@%p268 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f1350, %f1416, 0f3F800000;
	fma.rn.f32 	%f1352, %f1348, 0fC0400000, %f89;
	setp.ge.f32 	%p269, %f1352, 0f00000000;
	add.f32 	%f1353, %f1350, 0f3F800000;
	selp.f32 	%f1416, %f1353, %f1350, %p269;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1418, %f1416, 0fC0000000, %f1418;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	add.s64 	%rd32, %rd1, %rd31;
	add.s64 	%rd34, %rd1, %rd33;
	and.b32  	%r140, %r205, 255;
	shr.u32 	%r149, %r3, 2;
	mov.b32 	%r252, %f242;
	mov.b32 	%r251, %f3;
	mov.b32 	%r283, %f359;
	mov.b32 	%r282, %f14;
	mov.b32 	%r314, %f476;
	mov.b32 	%r313, %f25;
	mov.b32 	%r345, %f593;
	mov.b32 	%r344, %f36;
	mov.b32 	%r376, %f710;
	mov.b32 	%r375, %f47;
	mov.b32 	%r407, %f827;
	mov.b32 	%r406, %f58;
	mov.b32 	%r438, %f944;
	mov.b32 	%r437, %f69;
	mov.b32 	%r469, %f1060;
	mov.b32 	%r468, %f80;
	xor.b32  	%r489, %r486, -2147483648;
	xor.b32  	%r490, %r487, -2147483648;
	mov.b32 	%r495, %f1228;
	mov.b32 	%r496, %f1261;
	xor.b32  	%r498, %r570, -2147483648;
	xor.b32  	%r499, %r582, -2147483648;
	selp.f32 	%f122, %f1345, %f1341, %p263;
	abs.f32 	%f1367, %f1418;
	setp.gtu.f32 	%p276, %f1367, 0f7F800000;
	@%p276 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r620, %f123;
	and.b32  	%r621, %r620, -2147483648;
	mov.b32 	%r622, %f1418;
	or.b32  	%r623, %r621, %r622;
	mov.b32 	%f1418, %r623;
$L__BB0_61:                             // %__nv_fmodf.exit
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r144, [%rd32];
	ld.global.u32 	%r145, [%rd34+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r250, %r252, %r251;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r281, %r283, %r282;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r312, %r314, %r313;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r343, %r345, %r344;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r374, %r376, %r375;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r405, %r407, %r406;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r436, %r438, %r437;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r473, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r476, %r481, %r480;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r479, %r481, %r480;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r482, %r493, %r492;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r485, %r487, %r486;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r488, %r490, %r489;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r491, %r493, %r492;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r494, %r496, %r495;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r497, %r499, %r498;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r500, %r511, %r511;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r503, %r505, %r505;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r506, %r507, %r507;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r509, %r511, %r511;
	// end inline asm
	add.f32 	%f1368, %f1418, %f1418;
	mov.b32 	%r631, %f1368;
	and.b32  	%r632, %r631, -2147483648;
	or.b32  	%r633, %r632, 1056964608;
	mov.b32 	%f1369, %r633;
	add.f32 	%f1370, %f1368, %f1369;
	cvt.rzi.f32.f32 	%f1371, %f1370;
	abs.f32 	%f1372, %f1368;
	setp.gt.f32 	%p277, %f1372, 0f4B000000;
	selp.f32 	%f1373, %f1368, %f1371, %p277;
	cvt.rzi.f32.f32 	%f1374, %f1368;
	setp.lt.f32 	%p278, %f1372, 0f3F000000;
	selp.f32 	%f1375, %f1374, %f1373, %p278;
	cvt.rzi.s32.f32 	%r634, %f1375;
	fma.rn.f32 	%f1376, %f1375, 0fBF000000, %f1418;
	mul.f32 	%f1377, %f1376, %f1376;
	fma.rn.f32 	%f1378, %f1377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1379, %f1377, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1380, %f1378, %f1377, 0fC0A55DF6;
	fma.rn.f32 	%f1381, %f1379, %f1377, 0f4081E0CF;
	fma.rn.f32 	%f1382, %f1377, %f1376, 0f00000000;
	fma.rn.f32 	%f1383, %f1381, %f1377, 0fC09DE9E6;
	fma.rn.f32 	%f1384, %f1380, %f1382, 0f00000000;
	fma.rn.f32 	%f1385, %f1383, %f1377, 0f3F800000;
	fma.rn.f32 	%f1386, %f1376, 0f40490FDB, %f1384;
	and.b32  	%r635, %r634, 1;
	setp.eq.b32 	%p279, %r635, 1;
	selp.f32 	%f1387, %f1385, %f1386, %p279;
	selp.f32 	%f1388, %f1386, %f1385, %p279;
	and.b32  	%r636, %r634, 2;
	setp.eq.s32 	%p280, %r636, 0;
	neg.f32 	%f1389, %f1387;
	selp.f32 	%f1390, %f1387, %f1389, %p280;
	add.s32 	%r637, %r634, 1;
	and.b32  	%r638, %r637, 2;
	setp.eq.s32 	%p281, %r638, 0;
	sub.f32 	%f1392, %f151, %f1388;
	selp.f32 	%f1393, %f1388, %f1392, %p281;
	cvt.rzi.f32.f32 	%f1394, %f1418;
	setp.eq.f32 	%p282, %f1394, %f1418;
	mul.f32 	%f1395, %f1418, 0f00000000;
	selp.f32 	%f1396, %f1395, %f1390, %p282;
	abs.f32 	%f1397, %f1418;
	setp.gt.f32 	%p283, %f1397, 0f4B800000;
	add.f32 	%f1398, %f1396, 0f3F800000;
	selp.f32 	%f1399, %f1398, %f1393, %p283;
	mov.b32 	%r626, %f1399;
	mov.b32 	%r625, %f122;
	// begin inline asm
	cvt.rn.f16x2.f32 %r624, %r626, %r625;
	// end inline asm
	mov.b32 	%r629, %f1396;
	mov.b32 	%r628, %f121;
	// begin inline asm
	cvt.rn.f16x2.f32 %r627, %r629, %r628;
	// end inline asm
	shl.b32 	%r639, %r3, 3;
	and.b32  	%r640, %r639, 64;
	or.b32  	%r38, %r640, %r1;
	shl.b32 	%r641, %r4, 5;
	and.b32  	%r642, %r141, 28;
	and.b32  	%r643, %r641, 96;
	or.b32  	%r644, %r643, %r642;
	and.b32  	%r645, %r641, 128;
	add.s32 	%r646, %r140, %r192;
	shl.b32 	%r647, %r646, 8;
	or.b32  	%r648, %r644, %r645;
	or.b32  	%r39, %r648, %r647;
	and.b32  	%r40, %r3, 8;
	shl.b32 	%r649, %r3, 4;
	or.b32  	%r650, %r40, %r649;
	shr.u32 	%r651, %r650, 2;
	and.b32  	%r652, %r651, 30;
	and.b32  	%r41, %r649, 48;
	and.b32  	%r653, %r149, 6;
	or.b32  	%r654, %r139, %r41;
	or.b32  	%r42, %r654, %r653;
	shr.u32 	%r655, %r1, 1;
	and.b32  	%r656, %r2, 32;
	or.b32  	%r657, %r656, %r655;
	or.b32  	%r658, %r657, 8;
	or.b32  	%r659, %r657, 16;
	or.b32  	%r660, %r657, 24;
	and.b32  	%r661, %r3, 18;
	or.b32  	%r662, %r661, %r143;
	or.b32  	%r663, %r662, %r142;
	or.b32  	%r664, %r663, %r139;
	shr.u32 	%r665, %r664, 1;
	mul.lo.s32 	%r666, %r665, 65;
	add.s32 	%r43, %r657, %r666;
	add.s32 	%r44, %r658, %r666;
	add.s32 	%r45, %r659, %r666;
	add.s32 	%r46, %r660, %r666;
	add.s32 	%r667, %r666, 2080;
	add.s32 	%r47, %r657, %r667;
	add.s32 	%r48, %r658, %r667;
	add.s32 	%r49, %r659, %r667;
	add.s32 	%r50, %r660, %r667;
	shl.b32 	%r668, %r1, 1;
	or.b32  	%r669, %r668, %r151;
	mul.lo.s32 	%r670, %r669, 65;
	add.s32 	%r671, %r652, %r670;
	mul.wide.u32 	%rd35, %r671, 4;
	mov.u64 	%rd36, shmem;
	add.s64 	%rd5, %rd36, %rd35;
	cvt.u64.u32 	%rd37, %r652;
	cvt.u64.u32 	%rd38, %r670;
	add.s64 	%rd39, %rd38, %rd37;
	shl.b64 	%rd40, %rd39, 2;
	add.s64 	%rd6, %rd36, %rd40;
	or.b32  	%r672, %r669, 32;
	mul.lo.s32 	%r673, %r672, 65;
	add.s32 	%r674, %r652, %r673;
	mul.wide.u32 	%rd41, %r674, 4;
	add.s64 	%rd7, %rd36, %rd41;
	cvt.u64.u32 	%rd42, %r673;
	add.s64 	%rd43, %rd42, %rd37;
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd8, %rd36, %rd44;
	shl.b32 	%r675, %r190, 15;
	add.s32 	%r676, %r675, -98304;
	shl.b32 	%r677, %r1, 10;
	shl.b32 	%r678, %r3, 5;
	and.b32  	%r679, %r678, 768;
	or.b32  	%r680, %r679, %r677;
	or.b32  	%r681, %r680, %r645;
	or.b32  	%r682, %r681, %r642;
	or.b32  	%r51, %r682, %r643;
	cvt.s64.s32 	%rd9, %r676;
	or.b32  	%r683, %r648, %r680;
	or.b32  	%r52, %r683, 16384;
	bfe.u32 	%r684, %r649, 5, 1;
	bfe.s32 	%r685, %r1, 1, 1;
	and.b32  	%r686, %r1, 2;
	setp.eq.s32 	%p284, %r686, 0;
	and.b32  	%r687, %r685, 1040;
	mul.lo.s32 	%r688, %r151, 65;
	and.b32  	%r689, %r1, 1;
	neg.s32 	%r690, %r689;
	and.b32  	%r691, %r690, 2080;
	shr.u32 	%r692, %r1, 3;
	mul.lo.s32 	%r693, %r692, 260;
	bfe.s32 	%r694, %r1, 2, 1;
	and.b32  	%r695, %r1, 4;
	setp.eq.s32 	%p285, %r695, 0;
	and.b32  	%r696, %r694, 520;
	or.b32  	%r697, %r691, %r652;
	add.s32 	%r698, %r697, %r688;
	add.s32 	%r699, %r698, %r687;
	add.s32 	%r700, %r699, %r693;
	add.s32 	%r701, %r700, %r696;
	mul.wide.u32 	%rd45, %r701, 4;
	add.s64 	%rd10, %rd36, %rd45;
	selp.b64 	%rd46, 0, 520, %p285;
	cvt.u64.u32 	%rd47, %r693;
	selp.b64 	%rd48, 0, 1040, %p284;
	cvt.u64.u32 	%rd49, %r688;
	cvt.u64.u32 	%rd50, %r697;
	add.s64 	%rd51, %rd50, %rd49;
	add.s64 	%rd52, %rd51, %rd48;
	add.s64 	%rd53, %rd52, %rd47;
	add.s64 	%rd54, %rd53, %rd46;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd11, %rd36, %rd55;
	cvt.u64.u32 	%rd56, %r700;
	add.s64 	%rd57, %rd56, %rd46;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd12, %rd36, %rd58;
	add.s32 	%r702, %r701, 162;
	mul.wide.u32 	%rd59, %r702, 4;
	add.s64 	%rd13, %rd36, %rd59;
	add.s32 	%r703, %r701, 131;
	mul.wide.u32 	%rd60, %r703, 4;
	add.s64 	%rd14, %rd36, %rd60;
	add.s32 	%r704, %r701, 163;
	mul.wide.u32 	%rd61, %r704, 4;
	add.s64 	%rd15, %rd36, %rd61;
	add.s32 	%r705, %r701, 4193;
	mul.wide.u32 	%rd62, %r705, 4;
	add.s64 	%rd16, %rd36, %rd62;
	add.s32 	%r706, %r701, 4162;
	mul.wide.u32 	%rd63, %r706, 4;
	add.s64 	%rd17, %rd36, %rd63;
	add.s32 	%r707, %r701, 4194;
	mul.wide.u32 	%rd64, %r707, 4;
	add.s64 	%rd18, %rd36, %rd64;
	add.s32 	%r708, %r701, 4323;
	mul.wide.u32 	%rd65, %r708, 4;
	add.s64 	%rd19, %rd36, %rd65;
	add.s32 	%r709, %r701, 4292;
	mul.wide.u32 	%rd66, %r709, 4;
	add.s64 	%rd20, %rd36, %rd66;
	add.s32 	%r710, %r701, 4324;
	mul.wide.u32 	%rd67, %r710, 4;
	add.s64 	%rd21, %rd36, %rd67;
	mul.lo.s32 	%r711, %r684, 65;
	add.s32 	%r53, %r657, %r711;
	add.s32 	%r54, %r658, %r711;
	add.s32 	%r55, %r659, %r711;
	add.s32 	%r56, %r660, %r711;
	add.s32 	%r57, %r657, 2080;
	add.s32 	%r58, %r658, 2080;
	add.s32 	%r59, %r659, 2080;
	add.s32 	%r60, %r660, 2080;
	add.s32 	%r712, %r674, 4193;
	mul.wide.u32 	%rd68, %r712, 4;
	add.s64 	%rd22, %rd36, %rd68;
	mov.u32 	%r16340, 0;
	setp.eq.s32 	%p287, %r40, 0;
	mov.u16 	%rs2388, 25600;
	mov.u16 	%rs2180, 21504;
	mov.u16 	%rs2396, 18432;
	mov.u16 	%rs2314, -14592;
	mov.u32 	%r16341, %r16340;
	mov.u32 	%r16342, %r16340;
	mov.u32 	%r16343, %r16340;
	mov.u32 	%r16344, %r16340;
	mov.u32 	%r16345, %r16340;
	mov.u32 	%r16346, %r16340;
	mov.u32 	%r16347, %r16340;
	mov.u32 	%r16348, %r16340;
	mov.u32 	%r16349, %r16340;
	mov.u32 	%r16350, %r16340;
	mov.u32 	%r16351, %r16340;
	mov.u32 	%r16352, %r16340;
	mov.u32 	%r16353, %r16340;
	mov.u32 	%r16354, %r16340;
	mov.u32 	%r16355, %r16340;
	mov.u32 	%r16356, %r16340;
	mov.u32 	%r16357, %r16340;
	mov.u32 	%r16358, %r16340;
	mov.u32 	%r16359, %r16340;
	mov.u32 	%r16360, %r16340;
	mov.u32 	%r16361, %r16340;
	mov.u32 	%r16362, %r16340;
	mov.u32 	%r16363, %r16340;
	mov.u32 	%r16364, %r16340;
	bra.uni 	$L__BB0_62;
$L__BB0_68:                             // %L70797
                                        //   in Loop: Header=BB0_62 Depth=1
	add.s32 	%r136, %r16364, 256;
	setp.ne.s32 	%p312, %r16364, 32512;
	mov.u32 	%r16364, %r136;
	@%p312 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_69;
$L__BB0_62:                             // %L2097
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_64 Depth 2
	add.s32 	%r713, %r16364, %r188;
	setp.lt.s32 	%p286, %r713, %r189;
	@%p286 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_69;
$L__BB0_63:                             // %pass819
                                        //   in Loop: Header=BB0_62 Depth=1
	or.b32  	%r779, %r16364, %r138;
	and.b32  	%r780, %r779, 32544;
	or.b32  	%r781, %r38, %r780;
	add.s32 	%r782, %r781, %r188;
	mad.lo.s32 	%r783, %r782, 12288, %r39;
	mul.hi.s32 	%r784, %r783, 715827883;
	shr.u32 	%r785, %r784, 31;
	shr.s32 	%r786, %r784, 26;
	add.s32 	%r787, %r786, %r785;
	setp.lt.s32 	%p288, %r783, 0;
	mul.lo.s32 	%r788, %r787, 402653184;
	setp.ne.s32 	%p289, %r788, %r783;
	and.pred  	%p290, %p288, %p289;
	selp.s32 	%r789, -1, 0, %p290;
	add.s32 	%r790, %r787, %r789;
	or.b32  	%r791, %r783, 1;
	mad.lo.s32 	%r792, %r790, -402653184, %r791;
	mul.wide.s32 	%rd69, %r792, 4;
	add.s64 	%rd70, %rd2, %rd69;
	ld.global.v4.u32 	{%r793, %r794, %r795, %r796}, [%rd70+-4];
	or.b32  	%r797, %r781, 16;
	add.s32 	%r798, %r797, %r188;
	mad.lo.s32 	%r799, %r798, 12288, %r39;
	mul.hi.s32 	%r800, %r799, 715827883;
	shr.u32 	%r801, %r800, 31;
	shr.s32 	%r802, %r800, 26;
	add.s32 	%r803, %r802, %r801;
	setp.lt.s32 	%p291, %r799, 0;
	mul.lo.s32 	%r804, %r803, 402653184;
	setp.ne.s32 	%p292, %r804, %r799;
	and.pred  	%p293, %p291, %p292;
	selp.s32 	%r805, -1, 0, %p293;
	add.s32 	%r806, %r803, %r805;
	or.b32  	%r807, %r799, 1;
	mad.lo.s32 	%r808, %r806, -402653184, %r807;
	mul.wide.s32 	%rd71, %r808, 4;
	add.s64 	%rd72, %rd2, %rd71;
	ld.global.v4.u32 	{%r809, %r810, %r811, %r812}, [%rd72+-4];
	or.b32  	%r813, %r781, 128;
	add.s32 	%r814, %r813, %r188;
	mad.lo.s32 	%r815, %r814, 12288, %r39;
	mul.hi.s32 	%r816, %r815, 715827883;
	shr.u32 	%r817, %r816, 31;
	shr.s32 	%r818, %r816, 26;
	add.s32 	%r819, %r818, %r817;
	setp.lt.s32 	%p294, %r815, 0;
	mul.lo.s32 	%r820, %r819, 402653184;
	setp.ne.s32 	%p295, %r820, %r815;
	and.pred  	%p296, %p294, %p295;
	selp.s32 	%r821, -1, 0, %p296;
	add.s32 	%r822, %r819, %r821;
	or.b32  	%r823, %r815, 1;
	mad.lo.s32 	%r824, %r822, -402653184, %r823;
	mul.wide.s32 	%rd73, %r824, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r825, %r826, %r827, %r828}, [%rd74+-4];
	or.b32  	%r829, %r781, 144;
	add.s32 	%r830, %r829, %r188;
	mad.lo.s32 	%r831, %r830, 12288, %r39;
	mul.hi.s32 	%r832, %r831, 715827883;
	shr.u32 	%r833, %r832, 31;
	shr.s32 	%r834, %r832, 26;
	add.s32 	%r835, %r834, %r833;
	setp.lt.s32 	%p297, %r831, 0;
	mul.lo.s32 	%r836, %r835, 402653184;
	setp.ne.s32 	%p298, %r836, %r831;
	and.pred  	%p299, %p297, %p298;
	selp.s32 	%r837, -1, 0, %p299;
	add.s32 	%r838, %r835, %r837;
	or.b32  	%r839, %r831, 1;
	mad.lo.s32 	%r840, %r838, -402653184, %r839;
	mul.wide.s32 	%rd75, %r840, 4;
	add.s64 	%rd76, %rd2, %rd75;
	ld.global.v4.u32 	{%r841, %r842, %r843, %r844}, [%rd76+-4];
	selp.b32 	%r845, %r795, %r793, %p287;
	shfl.sync.bfly.b32	%r846, %r845, 8, 31, -1;
	selp.b32 	%r715, %r793, %r846, %p287;
	selp.b32 	%r716, %r846, %r795, %p287;
	selp.b32 	%r847, %r796, %r794, %p287;
	shfl.sync.bfly.b32	%r848, %r847, 8, 31, -1;
	selp.b32 	%r723, %r794, %r848, %p287;
	selp.b32 	%r724, %r848, %r796, %p287;
	selp.b32 	%r849, %r811, %r809, %p287;
	shfl.sync.bfly.b32	%r850, %r849, 8, 31, -1;
	selp.b32 	%r731, %r809, %r850, %p287;
	selp.b32 	%r732, %r850, %r811, %p287;
	selp.b32 	%r851, %r812, %r810, %p287;
	shfl.sync.bfly.b32	%r852, %r851, 8, 31, -1;
	selp.b32 	%r739, %r810, %r852, %p287;
	selp.b32 	%r740, %r852, %r812, %p287;
	selp.b32 	%r853, %r827, %r825, %p287;
	shfl.sync.bfly.b32	%r854, %r853, 8, 31, -1;
	selp.b32 	%r747, %r825, %r854, %p287;
	selp.b32 	%r748, %r854, %r827, %p287;
	selp.b32 	%r855, %r828, %r826, %p287;
	shfl.sync.bfly.b32	%r856, %r855, 8, 31, -1;
	selp.b32 	%r755, %r826, %r856, %p287;
	selp.b32 	%r756, %r856, %r828, %p287;
	selp.b32 	%r857, %r843, %r841, %p287;
	shfl.sync.bfly.b32	%r858, %r857, 8, 31, -1;
	selp.b32 	%r763, %r841, %r858, %p287;
	selp.b32 	%r764, %r858, %r843, %p287;
	selp.b32 	%r859, %r844, %r842, %p287;
	shfl.sync.bfly.b32	%r860, %r859, 8, 31, -1;
	selp.b32 	%r771, %r842, %r860, %p287;
	selp.b32 	%r772, %r860, %r844, %p287;
	mov.u32 	%r773, 21520;
	// begin inline asm
	prmt.b32 %r714, %r715, %r716, %r773;
	// end inline asm
	mov.u32 	%r777, 30258;
	// begin inline asm
	prmt.b32 %r718, %r715, %r716, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r722, %r723, %r724, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r726, %r723, %r724, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r730, %r731, %r732, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r734, %r731, %r732, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r738, %r739, %r740, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r742, %r739, %r740, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r746, %r747, %r748, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r750, %r747, %r748, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r754, %r755, %r756, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r758, %r755, %r756, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r762, %r763, %r764, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r766, %r763, %r764, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r771, %r772, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r774, %r771, %r772, %r777;
	// end inline asm
	st.shared.u32 	[%rd10], %r714;
	st.shared.u32 	[%rd11+128], %r718;
	st.shared.u32 	[%rd11+4], %r722;
	st.shared.u32 	[%rd11+132], %r726;
	st.shared.u32 	[%rd12+520], %r730;
	st.shared.u32 	[%rd13], %r734;
	st.shared.u32 	[%rd14], %r738;
	st.shared.u32 	[%rd15], %r742;
	st.shared.u32 	[%rd12+16644], %r746;
	st.shared.u32 	[%rd16], %r750;
	st.shared.u32 	[%rd17], %r754;
	st.shared.u32 	[%rd18], %r758;
	st.shared.u32 	[%rd12+17164], %r762;
	st.shared.u32 	[%rd19], %r766;
	st.shared.u32 	[%rd20], %r770;
	st.shared.u32 	[%rd21], %r774;
	bar.sync 	0;
	or.b32  	%r164, %r42, %r16364;
	or.b32  	%r861, %r16364, %r41;
	or.b32  	%r862, %r861, %r139;
	or.b32  	%r863, %r149, %r862;
	or.b32  	%r165, %r863, 1;
	mov.u32 	%r778, 0;
	mov.u32 	%r16389, %r778;
$L__BB0_64:                             // %L13672
                                        //   Parent Loop BB0_62 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16128, %r164, %r16389;
	bfe.s32 	%r16129, %r16128, 1, 1;
	and.b32  	%r16130, %r16129, 1040;
	bfe.s32 	%r16131, %r16128, 3, 1;
	and.b32  	%r16132, %r16131, 260;
	bfe.s32 	%r16133, %r16128, 7, 1;
	and.b32  	%r16134, %r16133, 4161;
	bfe.s32 	%r16135, %r16128, 4, 1;
	and.b32  	%r16136, %r16135, 130;
	bfe.s32 	%r16137, %r16128, 2, 1;
	and.b32  	%r16138, %r16137, 520;
	add.s32 	%r16139, %r53, %r16130;
	add.s32 	%r16140, %r16139, %r16132;
	add.s32 	%r16141, %r16140, %r16134;
	add.s32 	%r16142, %r16141, %r16136;
	add.s32 	%r16143, %r16142, %r16138;
	mul.wide.u32 	%rd77, %r16143, 4;
	add.s64 	%rd79, %rd36, %rd77;
	ld.shared.u32 	%r16144, [%rd79];
	add.s32 	%r16145, %r54, %r16130;
	add.s32 	%r16146, %r16145, %r16132;
	add.s32 	%r16147, %r16146, %r16134;
	add.s32 	%r16148, %r16147, %r16136;
	add.s32 	%r16149, %r16148, %r16138;
	mul.wide.u32 	%rd80, %r16149, 4;
	add.s64 	%rd81, %rd36, %rd80;
	ld.shared.u32 	%r16150, [%rd81];
	add.s32 	%r16151, %r55, %r16130;
	add.s32 	%r16152, %r16151, %r16132;
	add.s32 	%r16153, %r16152, %r16134;
	add.s32 	%r16154, %r16153, %r16136;
	add.s32 	%r16155, %r16154, %r16138;
	mul.wide.u32 	%rd82, %r16155, 4;
	add.s64 	%rd83, %rd36, %rd82;
	ld.shared.u32 	%r16156, [%rd83];
	add.s32 	%r16157, %r56, %r16130;
	add.s32 	%r16158, %r16157, %r16132;
	add.s32 	%r16159, %r16158, %r16134;
	add.s32 	%r16160, %r16159, %r16136;
	add.s32 	%r16161, %r16160, %r16138;
	mul.wide.u32 	%rd84, %r16161, 4;
	add.s64 	%rd85, %rd36, %rd84;
	ld.shared.u32 	%r16162, [%rd85];
	add.s32 	%r16163, %r165, %r16389;
	bfe.s32 	%r16164, %r16163, 1, 1;
	and.b32  	%r16165, %r16164, 1040;
	bfe.s32 	%r16166, %r16163, 5, 1;
	and.b32  	%r16167, %r16166, 65;
	bfe.s32 	%r16168, %r16163, 3, 1;
	and.b32  	%r16169, %r16168, 260;
	bfe.s32 	%r16170, %r16163, 7, 1;
	and.b32  	%r16171, %r16170, 4161;
	bfe.s32 	%r16172, %r16163, 4, 1;
	and.b32  	%r16173, %r16172, 130;
	bfe.s32 	%r16174, %r16163, 2, 1;
	and.b32  	%r16175, %r16174, 520;
	add.s32 	%r16176, %r57, %r16167;
	or.b32  	%r16177, %r16176, %r16165;
	add.s32 	%r16178, %r16177, %r16169;
	add.s32 	%r16179, %r16178, %r16171;
	add.s32 	%r16180, %r16179, %r16173;
	add.s32 	%r16181, %r16180, %r16175;
	mul.wide.u32 	%rd86, %r16181, 4;
	add.s64 	%rd87, %rd36, %rd86;
	ld.shared.u32 	%r16182, [%rd87];
	add.s32 	%r16183, %r58, %r16167;
	add.s32 	%r16184, %r16183, %r16165;
	add.s32 	%r16185, %r16184, %r16169;
	add.s32 	%r16186, %r16185, %r16171;
	add.s32 	%r16187, %r16186, %r16173;
	add.s32 	%r16188, %r16187, %r16175;
	mul.wide.u32 	%rd88, %r16188, 4;
	add.s64 	%rd89, %rd36, %rd88;
	ld.shared.u32 	%r16189, [%rd89];
	add.s32 	%r16190, %r59, %r16167;
	add.s32 	%r16191, %r16190, %r16165;
	add.s32 	%r16192, %r16191, %r16169;
	add.s32 	%r16193, %r16192, %r16171;
	add.s32 	%r16194, %r16193, %r16173;
	add.s32 	%r16195, %r16194, %r16175;
	mul.wide.u32 	%rd90, %r16195, 4;
	add.s64 	%rd91, %rd36, %rd90;
	ld.shared.u32 	%r16196, [%rd91];
	add.s32 	%r16197, %r60, %r16167;
	add.s32 	%r16198, %r16197, %r16165;
	add.s32 	%r16199, %r16198, %r16169;
	add.s32 	%r16200, %r16199, %r16171;
	add.s32 	%r16201, %r16200, %r16173;
	add.s32 	%r16202, %r16201, %r16175;
	mul.wide.u32 	%rd92, %r16202, 4;
	add.s64 	%rd93, %rd36, %rd92;
	ld.shared.u32 	%r16203, [%rd93];
	// begin inline asm
	mov.b32 %r869, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r880, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r868, %r16144, -2004318072;
	mov.u32 	%r867, 983055;
	// begin inline asm
	lop3.b32 %r866, %r867, %r868, %r869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r870, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r871, %r869, %r870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r874, %r866, %r871;
	// end inline asm
	mov.u32 	%r878, 15728880;
	// begin inline asm
	lop3.b32 %r877, %r878, %r868, %r880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r881, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r882, %r880, %r881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r885, %r877, %r882;
	// end inline asm
	shr.u32 	%r890, %r868, 8;
	// begin inline asm
	lop3.b32 %r888, %r867, %r890, %r869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r892, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r893, %r869, %r892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r896, %r888, %r893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r899, %r878, %r890, %r880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r903, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r904, %r880, %r903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r907, %r899, %r904;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r914, %r16150, -2004318072;
	// begin inline asm
	lop3.b32 %r912, %r867, %r914, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r917, %r915, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r920, %r912, %r917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r878, %r914, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r926, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	shr.u32 	%r936, %r914, 8;
	// begin inline asm
	lop3.b32 %r934, %r867, %r936, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r915, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r945, %r878, %r936, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r926, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r960, %r16156, -2004318072;
	// begin inline asm
	lop3.b32 %r958, %r867, %r960, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r961, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r878, %r960, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r972, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	shr.u32 	%r982, %r960, 8;
	// begin inline asm
	lop3.b32 %r980, %r867, %r982, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r961, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r878, %r982, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r972, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1006, %r16162, -2004318072;
	// begin inline asm
	lop3.b32 %r1004, %r867, %r1006, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1009, %r1007, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1012, %r1004, %r1009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r878, %r1006, %r1018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r1018, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	shr.u32 	%r1028, %r1006, 8;
	// begin inline asm
	lop3.b32 %r1026, %r867, %r1028, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1031, %r1007, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1034, %r1026, %r1031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1037, %r878, %r1028, %r1018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1042, %r1018, %r1041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1045, %r1037, %r1042;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1052, %r16182, -2004318072;
	// begin inline asm
	lop3.b32 %r1050, %r867, %r1052, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1053, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1058, %r1050, %r1055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r878, %r1052, %r1064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1064, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	shr.u32 	%r1074, %r1052, 8;
	// begin inline asm
	lop3.b32 %r1072, %r867, %r1074, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1053, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r878, %r1074, %r1064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1064, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1098, %r16189, -2004318072;
	// begin inline asm
	lop3.b32 %r1096, %r867, %r1098, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1099, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1107, %r878, %r1098, %r1110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1110, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	shr.u32 	%r1120, %r1098, 8;
	// begin inline asm
	lop3.b32 %r1118, %r867, %r1120, %r1099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1099, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r878, %r1120, %r1110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1134, %r1110, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1137, %r1129, %r1134;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1144, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1142, %r867, %r1144, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1145, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1150, %r1142, %r1147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1153, %r878, %r1144, %r1156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1156, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1161, %r1153, %r1158;
	// end inline asm
	shr.u32 	%r1166, %r1144, 8;
	// begin inline asm
	lop3.b32 %r1164, %r867, %r1166, %r1145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1145, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1175, %r878, %r1166, %r1156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1180, %r1156, %r1179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1183, %r1175, %r1180;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1190, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1188, %r867, %r1190, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1191, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1199, %r878, %r1190, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1202, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	shr.u32 	%r1212, %r1190, 8;
	// begin inline asm
	lop3.b32 %r1210, %r867, %r1212, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1191, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r878, %r1212, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1202, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1344, %r1342, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1347, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r1347, %r1137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1352, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1354, %r1352, %r1150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1357, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r1357, %r1161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1362, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r1362, %r1172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1369, %r1367, %r1183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1374, %r1372, %r1196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1377, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r1377, %r1207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1382, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1384, %r1382, %r1218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1387, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1389, %r1387, %r1229;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1396, %r16340, -2004318072;
	// begin inline asm
	lop3.b32 %r1394, %r867, %r1396, %r1397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1399, %r1397, %r1398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1402, %r1394, %r1399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1405, %r878, %r1396, %r1408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1410, %r1408, %r1409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1413, %r1405, %r1410;
	// end inline asm
	shr.u32 	%r1418, %r1396, 8;
	// begin inline asm
	lop3.b32 %r1416, %r867, %r1418, %r1397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1420, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1421, %r1397, %r1420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1424, %r1416, %r1421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1427, %r878, %r1418, %r1408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1432, %r1408, %r1431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1435, %r1427, %r1432;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1442, %r16341, -2004318072;
	// begin inline asm
	lop3.b32 %r1440, %r867, %r1442, %r1443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1445, %r1443, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1448, %r1440, %r1445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r878, %r1442, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1454, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	shr.u32 	%r1464, %r1442, 8;
	// begin inline asm
	lop3.b32 %r1462, %r867, %r1464, %r1443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1443, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1473, %r878, %r1464, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1454, %r1477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1481, %r1473, %r1478;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1488, %r16342, -2004318072;
	// begin inline asm
	lop3.b32 %r1486, %r867, %r1488, %r1489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1489, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r878, %r1488, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1500, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	shr.u32 	%r1510, %r1488, 8;
	// begin inline asm
	lop3.b32 %r1508, %r867, %r1510, %r1489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1489, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1519, %r878, %r1510, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1500, %r1523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1527, %r1519, %r1524;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1534, %r16343, -2004318072;
	// begin inline asm
	lop3.b32 %r1532, %r867, %r1534, %r1535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1535, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1540, %r1532, %r1537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r878, %r1534, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1546, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	shr.u32 	%r1556, %r1534, 8;
	// begin inline asm
	lop3.b32 %r1554, %r867, %r1556, %r1535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1559, %r1535, %r1558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1562, %r1554, %r1559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1565, %r878, %r1556, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1570, %r1546, %r1569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1573, %r1565, %r1570;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1580, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r1578, %r867, %r1580, %r1581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1581, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r878, %r1580, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1592, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	shr.u32 	%r1602, %r1580, 8;
	// begin inline asm
	lop3.b32 %r1600, %r867, %r1602, %r1581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1605, %r1581, %r1604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1608, %r1600, %r1605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1611, %r878, %r1602, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1592, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1626, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r1624, %r867, %r1626, %r1627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1629, %r1627, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1632, %r1624, %r1629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1635, %r878, %r1626, %r1638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1640, %r1638, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1643, %r1635, %r1640;
	// end inline asm
	shr.u32 	%r1648, %r1626, 8;
	// begin inline asm
	lop3.b32 %r1646, %r867, %r1648, %r1627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1650, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1651, %r1627, %r1650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1654, %r1646, %r1651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1657, %r878, %r1648, %r1638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1661, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1662, %r1638, %r1661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1665, %r1657, %r1662;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1672, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r1670, %r867, %r1672, %r1673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1675, %r1673, %r1674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1678, %r1670, %r1675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1681, %r878, %r1672, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1686, %r1684, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1689, %r1681, %r1686;
	// end inline asm
	shr.u32 	%r1694, %r1672, 8;
	// begin inline asm
	lop3.b32 %r1692, %r867, %r1694, %r1673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1696, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1697, %r1673, %r1696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1700, %r1692, %r1697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1703, %r878, %r1694, %r1684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1707, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1708, %r1684, %r1707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1711, %r1703, %r1708;
	// end inline asm
	// begin inline asm
	mov.b32 %r1719, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1718, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r1716, %r867, %r1718, %r1719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1720, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1721, %r1719, %r1720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1724, %r1716, %r1721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1727, %r878, %r1718, %r1730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1731, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1732, %r1730, %r1731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1735, %r1727, %r1732;
	// end inline asm
	shr.u32 	%r1740, %r1718, 8;
	// begin inline asm
	lop3.b32 %r1738, %r867, %r1740, %r1719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1742, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1743, %r1719, %r1742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1746, %r1738, %r1743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1749, %r878, %r1740, %r1730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1753, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1754, %r1730, %r1753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1757, %r1749, %r1754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r250, %r1402, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r250, %r1413, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r250, %r1424, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r250, %r1435, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r250, %r1448, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r250, %r1459, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r250, %r1470, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r250, %r1481, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r250, %r1494, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r250, %r1505, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r250, %r1516, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r250, %r1527, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r250, %r1540, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r250, %r1551, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r250, %r1562, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r250, %r1573, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r281, %r1586, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r281, %r1597, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r281, %r1608, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r281, %r1619, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r281, %r1632, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r281, %r1643, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r281, %r1654, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r281, %r1665, %r1349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r281, %r1678, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r281, %r1689, %r1359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r281, %r1700, %r1364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r281, %r1711, %r1369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1872, %r281, %r1724, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1876, %r281, %r1735, %r1379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1880, %r281, %r1746, %r1384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1884, %r281, %r1757, %r1389;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1892, %r16344, -2004318072;
	// begin inline asm
	lop3.b32 %r1890, %r867, %r1892, %r1893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1894, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1895, %r1893, %r1894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1898, %r1890, %r1895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1901, %r878, %r1892, %r1904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1905, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1906, %r1904, %r1905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1909, %r1901, %r1906;
	// end inline asm
	shr.u32 	%r1914, %r1892, 8;
	// begin inline asm
	lop3.b32 %r1912, %r867, %r1914, %r1893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1916, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1917, %r1893, %r1916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1920, %r1912, %r1917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1923, %r878, %r1914, %r1904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1927, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1928, %r1904, %r1927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1931, %r1923, %r1928;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1938, %r16345, -2004318072;
	// begin inline asm
	lop3.b32 %r1936, %r867, %r1938, %r1939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1940, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1941, %r1939, %r1940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1944, %r1936, %r1941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1947, %r878, %r1938, %r1950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1951, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1952, %r1950, %r1951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1955, %r1947, %r1952;
	// end inline asm
	shr.u32 	%r1960, %r1938, 8;
	// begin inline asm
	lop3.b32 %r1958, %r867, %r1960, %r1939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1962, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1963, %r1939, %r1962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1966, %r1958, %r1963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1969, %r878, %r1960, %r1950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1973, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1974, %r1950, %r1973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1977, %r1969, %r1974;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r1984, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r1982, %r867, %r1984, %r1985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1986, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1987, %r1985, %r1986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1990, %r1982, %r1987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1993, %r878, %r1984, %r1996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1997, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1998, %r1996, %r1997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2001, %r1993, %r1998;
	// end inline asm
	shr.u32 	%r2006, %r1984, 8;
	// begin inline asm
	lop3.b32 %r2004, %r867, %r2006, %r1985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2008, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2009, %r1985, %r2008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2012, %r2004, %r2009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2015, %r878, %r2006, %r1996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2019, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2020, %r1996, %r2019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2023, %r2015, %r2020;
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2042, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2030, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r2028, %r867, %r2030, %r2031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2032, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2033, %r2031, %r2032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2036, %r2028, %r2033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2039, %r878, %r2030, %r2042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2043, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2044, %r2042, %r2043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2047, %r2039, %r2044;
	// end inline asm
	shr.u32 	%r2052, %r2030, 8;
	// begin inline asm
	lop3.b32 %r2050, %r867, %r2052, %r2031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2054, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2055, %r2031, %r2054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2058, %r2050, %r2055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2061, %r878, %r2052, %r2042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2065, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2066, %r2042, %r2065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2069, %r2061, %r2066;
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2076, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r2074, %r867, %r2076, %r2077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2079, %r2077, %r2078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2082, %r2074, %r2079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2085, %r878, %r2076, %r2088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2090, %r2088, %r2089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2093, %r2085, %r2090;
	// end inline asm
	shr.u32 	%r2098, %r2076, 8;
	// begin inline asm
	lop3.b32 %r2096, %r867, %r2098, %r2077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2100, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2101, %r2077, %r2100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2104, %r2096, %r2101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2107, %r878, %r2098, %r2088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2112, %r2088, %r2111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2115, %r2107, %r2112;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2122, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r2120, %r867, %r2122, %r2123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2125, %r2123, %r2124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2128, %r2120, %r2125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2131, %r878, %r2122, %r2134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2136, %r2134, %r2135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2139, %r2131, %r2136;
	// end inline asm
	shr.u32 	%r2144, %r2122, 8;
	// begin inline asm
	lop3.b32 %r2142, %r867, %r2144, %r2123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2146, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2147, %r2123, %r2146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2150, %r2142, %r2147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2153, %r878, %r2144, %r2134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2158, %r2134, %r2157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2161, %r2153, %r2158;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2168, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r2166, %r867, %r2168, %r2169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2171, %r2169, %r2170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2174, %r2166, %r2171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2177, %r878, %r2168, %r2180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2180, %r2181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2185, %r2177, %r2182;
	// end inline asm
	shr.u32 	%r2190, %r2168, 8;
	// begin inline asm
	lop3.b32 %r2188, %r867, %r2190, %r2169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2192, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2193, %r2169, %r2192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2196, %r2188, %r2193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2199, %r878, %r2190, %r2180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2203, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2204, %r2180, %r2203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2207, %r2199, %r2204;
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2214, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r2212, %r867, %r2214, %r2215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2217, %r2215, %r2216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2220, %r2212, %r2217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2223, %r878, %r2214, %r2226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2227, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2228, %r2226, %r2227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2231, %r2223, %r2228;
	// end inline asm
	shr.u32 	%r2236, %r2214, 8;
	// begin inline asm
	lop3.b32 %r2234, %r867, %r2236, %r2215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2215, %r2238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2242, %r2234, %r2239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2245, %r878, %r2236, %r2226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2249, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2226, %r2249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2253, %r2245, %r2250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2256, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2258, %r2256, %r1898, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2262, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2264, %r2262, %r1909, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2268, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2270, %r2268, %r1920, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2274, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r2274, %r1931, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2280, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2282, %r2280, %r1944, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2286, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2288, %r2286, %r1955, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2292, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2294, %r2292, %r1966, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r2298, %r1977, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2304, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r2304, %r1990, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2310, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r2310, %r2001, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2316, %r2012, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2322, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2324, %r2322, %r2023, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2328, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r2328, %r2036, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2334, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2336, %r2334, %r2047, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2340, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r2340, %r2058, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2346, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2348, %r2346, %r2069, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2352, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2354, %r2352, %r2082, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2358, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2360, %r2358, %r2093, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2364, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2366, %r2364, %r2104, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2370, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2372, %r2370, %r2115, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2376, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2378, %r2376, %r2128, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2382, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2384, %r2382, %r2139, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2388, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2390, %r2388, %r2150, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2394, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2396, %r2394, %r2161, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2400, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2402, %r2400, %r2174, %r1856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2406, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2408, %r2406, %r2185, %r1860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2412, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2414, %r2412, %r2196, %r1864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2418, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2420, %r2418, %r2207, %r1868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2424, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2426, %r2424, %r2220, %r1872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2430, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2432, %r2430, %r2231, %r1876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2436, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2438, %r2436, %r2242, %r1880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2442, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2444, %r2442, %r2253, %r1884;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2452, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r2450, %r867, %r2452, %r2453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2455, %r2453, %r2454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2458, %r2450, %r2455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2461, %r878, %r2452, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2464, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	shr.u32 	%r2474, %r2452, 8;
	// begin inline asm
	lop3.b32 %r2472, %r867, %r2474, %r2453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2477, %r2453, %r2476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2480, %r2472, %r2477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2483, %r878, %r2474, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2488, %r2464, %r2487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2491, %r2483, %r2488;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2498, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r2496, %r867, %r2498, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2499, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2507, %r878, %r2498, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2510, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	shr.u32 	%r2520, %r2498, 8;
	// begin inline asm
	lop3.b32 %r2518, %r867, %r2520, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2499, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2529, %r878, %r2520, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2534, %r2510, %r2533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2537, %r2529, %r2534;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2544, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r2542, %r867, %r2544, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2547, %r2545, %r2546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2550, %r2542, %r2547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2553, %r878, %r2544, %r2556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2556, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	shr.u32 	%r2566, %r2544, 8;
	// begin inline asm
	lop3.b32 %r2564, %r867, %r2566, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2569, %r2545, %r2568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2572, %r2564, %r2569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2575, %r878, %r2566, %r2556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2580, %r2556, %r2579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2583, %r2575, %r2580;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2590, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r2588, %r867, %r2590, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2593, %r2591, %r2592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2596, %r2588, %r2593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2599, %r878, %r2590, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2602, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	shr.u32 	%r2612, %r2590, 8;
	// begin inline asm
	lop3.b32 %r2610, %r867, %r2612, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2591, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2621, %r878, %r2612, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2602, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2636, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r2634, %r867, %r2636, %r2637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2638, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2639, %r2637, %r2638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2642, %r2634, %r2639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2645, %r878, %r2636, %r2648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2650, %r2648, %r2649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2653, %r2645, %r2650;
	// end inline asm
	shr.u32 	%r2658, %r2636, 8;
	// begin inline asm
	lop3.b32 %r2656, %r867, %r2658, %r2637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2660, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2661, %r2637, %r2660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2664, %r2656, %r2661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2667, %r878, %r2658, %r2648, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2671, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2672, %r2648, %r2671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2675, %r2667, %r2672;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2682, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r2680, %r867, %r2682, %r2683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2684, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2685, %r2683, %r2684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2688, %r2680, %r2685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2691, %r878, %r2682, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2694, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	shr.u32 	%r2704, %r2682, 8;
	// begin inline asm
	lop3.b32 %r2702, %r867, %r2704, %r2683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2706, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2707, %r2683, %r2706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2710, %r2702, %r2707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2713, %r878, %r2704, %r2694, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2718, %r2694, %r2717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2721, %r2713, %r2718;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2728, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r2726, %r867, %r2728, %r2729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2730, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2731, %r2729, %r2730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2734, %r2726, %r2731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2737, %r878, %r2728, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2740, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	shr.u32 	%r2750, %r2728, 8;
	// begin inline asm
	lop3.b32 %r2748, %r867, %r2750, %r2729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2752, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2753, %r2729, %r2752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2756, %r2748, %r2753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2759, %r878, %r2750, %r2740, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2764, %r2740, %r2763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2767, %r2759, %r2764;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r2774, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r2772, %r867, %r2774, %r2775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2776, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2777, %r2775, %r2776;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2780, %r2772, %r2777;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2783, %r878, %r2774, %r2786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2787, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2788, %r2786, %r2787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2791, %r2783, %r2788;
	// end inline asm
	shr.u32 	%r2796, %r2774, 8;
	// begin inline asm
	lop3.b32 %r2794, %r867, %r2796, %r2775, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2798, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2799, %r2775, %r2798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2802, %r2794, %r2799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2805, %r878, %r2796, %r2786, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2810, %r2786, %r2809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2813, %r2805, %r2810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r374, %r2458, %r2258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r374, %r2469, %r2264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r374, %r2480, %r2270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r374, %r2491, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r374, %r2504, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r374, %r2515, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r374, %r2526, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r374, %r2537, %r2300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r374, %r2550, %r2306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r374, %r2561, %r2312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r374, %r2572, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r374, %r2583, %r2324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r374, %r2596, %r2330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r374, %r2607, %r2336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3014, %r374, %r2618, %r2342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r374, %r2629, %r2348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r405, %r2642, %r2354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r405, %r2653, %r2360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3032, %r405, %r2664, %r2366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r405, %r2675, %r2372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r405, %r2688, %r2378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r405, %r2699, %r2384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3050, %r405, %r2710, %r2390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r405, %r2721, %r2396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r405, %r2734, %r2402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r405, %r2745, %r2408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r405, %r2756, %r2414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r405, %r2767, %r2420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3077, %r405, %r2780, %r2426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r405, %r2791, %r2432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r405, %r2802, %r2438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r405, %r2813, %r2444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2944, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2946, %r2944, %r2948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r470, %r2951, %r2946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2953, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2955, %r2953, %r2957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2958, %r470, %r2960, %r2955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2962, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2964, %r2962, %r2966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r470, %r2969, %r2964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2971, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2973, %r2971, %r2975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r470, %r2978, %r2973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2980, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2982, %r2980, %r2984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r470, %r2987, %r2982;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2989, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2991, %r2989, %r2993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r470, %r2996, %r2991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2998, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3000, %r2998, %r3002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r470, %r3005, %r3000;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3007, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3009, %r3007, %r3011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r470, %r3014, %r3009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3016, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3018, %r3016, %r3020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r473, %r3023, %r3018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3025, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3027, %r3025, %r3029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r473, %r3032, %r3027;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3034, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3036, %r3034, %r3038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3039, %r473, %r3041, %r3036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3043, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r3043, %r3047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r473, %r3050, %r3045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3052, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3054, %r3052, %r3056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3057, %r473, %r3059, %r3054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3061, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r3061, %r3065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r473, %r3068, %r3063;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3070, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3072, %r3070, %r3074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r473, %r3077, %r3072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3081, %r3079, %r3083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3084, %r473, %r3086, %r3081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3088, %r476, %r2951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r470, %r2948, %r3088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r476, %r2960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r470, %r2957, %r3095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3102, %r476, %r2969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r470, %r2966, %r3102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3109, %r476, %r2978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r470, %r2975, %r3109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3116, %r476, %r2987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3119, %r470, %r2984, %r3116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3123, %r476, %r2996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3126, %r470, %r2993, %r3123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3130, %r476, %r3005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3133, %r470, %r3002, %r3130;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3137, %r476, %r3014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r470, %r3011, %r3137;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3144, %r479, %r3023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r473, %r3020, %r3144;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3151, %r479, %r3032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3154, %r473, %r3029, %r3151;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3158, %r479, %r3041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3161, %r473, %r3038, %r3158;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3165, %r479, %r3050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3168, %r473, %r3047, %r3165;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3172, %r479, %r3059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3175, %r473, %r3056, %r3172;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3179, %r479, %r3068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r473, %r3065, %r3179;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3186, %r479, %r3077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3189, %r473, %r3074, %r3186;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3193, %r479, %r3086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3196, %r473, %r3083, %r3193;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3367, %r3364}, {%r482, %r488, %r485, %r491}, {%r2949, %r3091}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3376, %r3373}, {%r482, %r488, %r485, %r491}, {%r2958, %r3098}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3385, %r3382}, {%r482, %r488, %r485, %r491}, {%r2967, %r3105}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3394, %r3391}, {%r482, %r488, %r485, %r491}, {%r2976, %r3112}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3403, %r3400}, {%r482, %r488, %r485, %r491}, {%r2985, %r3119}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3412, %r3409}, {%r482, %r488, %r485, %r491}, {%r2994, %r3126}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3421, %r3418}, {%r482, %r488, %r485, %r491}, {%r3003, %r3133}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3430, %r3427}, {%r482, %r488, %r485, %r491}, {%r3012, %r3140}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3439, %r3436}, {%r482, %r488, %r485, %r491}, {%r3021, %r3147}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3448, %r3445}, {%r482, %r488, %r485, %r491}, {%r3030, %r3154}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3457, %r3454}, {%r482, %r488, %r485, %r491}, {%r3039, %r3161}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3466, %r3463}, {%r482, %r488, %r485, %r491}, {%r3048, %r3168}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3475, %r3472}, {%r482, %r488, %r485, %r491}, {%r3057, %r3175}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3484, %r3481}, {%r482, %r488, %r485, %r491}, {%r3066, %r3182}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3493, %r3490}, {%r482, %r488, %r485, %r491}, {%r3075, %r3189}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3502, %r3499}, {%r482, %r488, %r485, %r491}, {%r3084, %r3196}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3360, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3362, %r3360, %r3364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3365, %r494, %r3367, %r3362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3369, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3371, %r3369, %r3373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3374, %r494, %r3376, %r3371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3378, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3380, %r3378, %r3382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3383, %r494, %r3385, %r3380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3387, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3389, %r3387, %r3391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3392, %r494, %r3394, %r3389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3396, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3398, %r3396, %r3400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r494, %r3403, %r3398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3405, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3407, %r3405, %r3409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r494, %r3412, %r3407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3414, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3416, %r3414, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r494, %r3421, %r3416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3423, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3425, %r3423, %r3427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r494, %r3430, %r3425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3432, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3434, %r3432, %r3436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r494, %r3439, %r3434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3441, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r3441, %r3445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r494, %r3448, %r3443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3450, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3452, %r3450, %r3454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r494, %r3457, %r3452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3459, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r3459, %r3463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r494, %r3466, %r3461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3468, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3470, %r3468, %r3472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3473, %r494, %r3475, %r3470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3477, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r3477, %r3481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r494, %r3484, %r3479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3486, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r3486, %r3490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r494, %r3493, %r3488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3495, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3497, %r3495, %r3499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3500, %r494, %r3502, %r3497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3504, %r497, %r3367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r494, %r3364, %r3504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r497, %r3376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r494, %r3373, %r3511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3518, %r497, %r3385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3521, %r494, %r3382, %r3518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3525, %r497, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r494, %r3391, %r3525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3532, %r497, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3535, %r494, %r3400, %r3532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3539, %r497, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3542, %r494, %r3409, %r3539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3546, %r497, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r494, %r3418, %r3546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r497, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r494, %r3427, %r3553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r497, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r494, %r3436, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r497, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r494, %r3445, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r497, %r3457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r494, %r3454, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r497, %r3466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r494, %r3463, %r3581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r497, %r3475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r494, %r3472, %r3588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r497, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r494, %r3481, %r3595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3602, %r497, %r3493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3605, %r494, %r3490, %r3602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3609, %r497, %r3502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3612, %r494, %r3499, %r3609;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3905, %r3908}, {%r500, %r506, %r503, %r509}, {%r3365, %r3507}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3911, %r3914}, {%r500, %r506, %r503, %r509}, {%r3374, %r3514}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3917, %r3920}, {%r500, %r506, %r503, %r509}, {%r3383, %r3521}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3923, %r3926}, {%r500, %r506, %r503, %r509}, {%r3392, %r3528}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3929, %r3932}, {%r500, %r506, %r503, %r509}, {%r3401, %r3535}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3935, %r3938}, {%r500, %r506, %r503, %r509}, {%r3410, %r3542}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3941, %r3944}, {%r500, %r506, %r503, %r509}, {%r3419, %r3549}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3947, %r3950}, {%r500, %r506, %r503, %r509}, {%r3428, %r3556}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3906, %r3909}, {%r500, %r506, %r503, %r509}, {%r3437, %r3563}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3912, %r3915}, {%r500, %r506, %r503, %r509}, {%r3446, %r3570}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3918, %r3921}, {%r500, %r506, %r503, %r509}, {%r3455, %r3577}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3924, %r3927}, {%r500, %r506, %r503, %r509}, {%r3464, %r3584}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3930, %r3933}, {%r500, %r506, %r503, %r509}, {%r3473, %r3591}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3936, %r3939}, {%r500, %r506, %r503, %r509}, {%r3482, %r3598}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3942, %r3945}, {%r500, %r506, %r503, %r509}, {%r3491, %r3605}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3948, %r3951}, {%r500, %r506, %r503, %r509}, {%r3500, %r3612}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3904, %r3905, %r3906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3907, %r3908, %r3909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3910, %r3911, %r3912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3913, %r3914, %r3915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3916, %r3917, %r3918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3919, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3922, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3925, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3928, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3931, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3934, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3937, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3940, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3943, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3946, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3949, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3952, %r3905, %r3906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3955, %r3908, %r3909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3958, %r3911, %r3912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3961, %r3914, %r3915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3964, %r3917, %r3918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3967, %r3920, %r3921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3970, %r3923, %r3924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3973, %r3926, %r3927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3976, %r3929, %r3930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3979, %r3932, %r3933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3982, %r3935, %r3936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3985, %r3938, %r3939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3988, %r3941, %r3942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3991, %r3944, %r3945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3994, %r3947, %r3948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3997, %r3950, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r144, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r144, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r144, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r144, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r144, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r144, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4018, %r144, %r3922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4021, %r144, %r3925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4024, %r144, %r3928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4027, %r144, %r3931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4030, %r144, %r3934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4033, %r144, %r3937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4036, %r144, %r3940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4039, %r144, %r3943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4042, %r144, %r3946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4045, %r144, %r3949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4048, %r145, %r3952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4051, %r145, %r3955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4054, %r145, %r3958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4057, %r145, %r3961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4060, %r145, %r3964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4063, %r145, %r3967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4066, %r145, %r3970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4069, %r145, %r3973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4072, %r145, %r3976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4075, %r145, %r3979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4078, %r145, %r3982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4081, %r145, %r3985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4084, %r145, %r3988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4087, %r145, %r3991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4090, %r145, %r3994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4093, %r145, %r3997;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs2314, %rs2314};
	// end inline asm
	mov.u16 	%rs415, 18176;
	// begin inline asm
	mov.b32 %r4097, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4098, %r4000, %r4096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4101, %r4098, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4106, %r4003, %r4104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4109, %r4106, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4114, %r4006, %r4112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4117, %r4114, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4122, %r4009, %r4120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4125, %r4122, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r4012, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r4015, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r4018, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r4021, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r4024, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r4027, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r4030, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r4033, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r4036, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r4039, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r4042, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r4045, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r4048, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4051, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4054, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4057, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4060, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4063, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4274, %r4066, %r4272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4277, %r4274, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4282, %r4069, %r4280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4285, %r4282, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4290, %r4072, %r4288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4293, %r4290, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4298, %r4075, %r4296;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4301, %r4298, %r4297;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4306, %r4078, %r4304;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4309, %r4306, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4314, %r4081, %r4312;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4317, %r4314, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4322, %r4084, %r4320;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4325, %r4322, %r4321;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4330, %r4087, %r4328;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4333, %r4330, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4338, %r4090, %r4336;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4341, %r4338, %r4337;
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r4345, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4346, %r4093, %r4344;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4349, %r4346, %r4345;
	// end inline asm
	// begin inline asm
	mov.b32 %r4355, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4355, %r4353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4357, %r4101, %r4354;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4355, %r4360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4364, %r4109, %r4361;
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4355, %r4367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4371, %r4117, %r4368;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4355, %r4374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4378, %r4125, %r4375;
	// end inline asm
	mov.u32 	%r4384, 25152;
	// begin inline asm
	prmt.b32 %r4381, %r4357, %r4371, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4385, %r4364, %r4378, %r4384;
	// end inline asm
	shl.b32 	%r4392, %r4385, 4;
	mov.u32 	%r4390, 252645135;
	// begin inline asm
	lop3.b32 %r4389, %r4390, %r4381, %r4392, 202;
	// end inline asm
	xor.b32  	%r16204, %r4389, -2004318072;
	// begin inline asm
	mov.b32 %r4396, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4394, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4396, %r4394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4398, %r4133, %r4395;
	// end inline asm
	// begin inline asm
	mov.b32 %r4401, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4396, %r4401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4141, %r4402;
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4396, %r4408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4149, %r4409;
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4396, %r4415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4419, %r4157, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4422, %r4398, %r4412, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4426, %r4405, %r4419, %r4384;
	// end inline asm
	shl.b32 	%r4433, %r4426, 4;
	// begin inline asm
	lop3.b32 %r4430, %r4390, %r4422, %r4433, 202;
	// end inline asm
	xor.b32  	%r16205, %r4430, -2004318072;
	// begin inline asm
	mov.b32 %r4437, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4435, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4437, %r4435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4439, %r4165, %r4436;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4437, %r4442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4446, %r4173, %r4443;
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4437, %r4449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4181, %r4450;
	// end inline asm
	// begin inline asm
	mov.b32 %r4456, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4437, %r4456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4460, %r4189, %r4457;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4463, %r4439, %r4453, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4467, %r4446, %r4460, %r4384;
	// end inline asm
	shl.b32 	%r4474, %r4467, 4;
	// begin inline asm
	lop3.b32 %r4471, %r4390, %r4463, %r4474, 202;
	// end inline asm
	xor.b32  	%r16206, %r4471, -2004318072;
	// begin inline asm
	mov.b32 %r4478, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4478, %r4476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4480, %r4197, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4483, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4478, %r4483;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4487, %r4205, %r4484;
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4478, %r4490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4213, %r4491;
	// end inline asm
	// begin inline asm
	mov.b32 %r4497, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4478, %r4497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4501, %r4221, %r4498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4504, %r4480, %r4494, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4508, %r4487, %r4501, %r4384;
	// end inline asm
	shl.b32 	%r4515, %r4508, 4;
	// begin inline asm
	lop3.b32 %r4512, %r4390, %r4504, %r4515, 202;
	// end inline asm
	xor.b32  	%r16207, %r4512, -2004318072;
	// begin inline asm
	mov.b32 %r4519, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4517, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4519, %r4517;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4521, %r4229, %r4518;
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4519, %r4524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4528, %r4237, %r4525;
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4519, %r4531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4245, %r4532;
	// end inline asm
	// begin inline asm
	mov.b32 %r4538, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4519, %r4538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4542, %r4253, %r4539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4545, %r4521, %r4535, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4549, %r4528, %r4542, %r4384;
	// end inline asm
	shl.b32 	%r4556, %r4549, 4;
	// begin inline asm
	lop3.b32 %r4553, %r4390, %r4545, %r4556, 202;
	// end inline asm
	xor.b32  	%r16208, %r4553, -2004318072;
	// begin inline asm
	mov.b32 %r4560, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4560, %r4558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4562, %r4261, %r4559;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4560, %r4565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4269, %r4566;
	// end inline asm
	// begin inline asm
	mov.b32 %r4572, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4560, %r4572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4277, %r4573;
	// end inline asm
	// begin inline asm
	mov.b32 %r4579, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4560, %r4579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4285, %r4580;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4586, %r4562, %r4576, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4590, %r4569, %r4583, %r4384;
	// end inline asm
	shl.b32 	%r4597, %r4590, 4;
	// begin inline asm
	lop3.b32 %r4594, %r4390, %r4586, %r4597, 202;
	// end inline asm
	xor.b32  	%r16209, %r4594, -2004318072;
	// begin inline asm
	mov.b32 %r4601, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4601, %r4599;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4603, %r4293, %r4600;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4601, %r4606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4610, %r4301, %r4607;
	// end inline asm
	// begin inline asm
	mov.b32 %r4613, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4614, %r4601, %r4613;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4617, %r4309, %r4614;
	// end inline asm
	// begin inline asm
	mov.b32 %r4620, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4621, %r4601, %r4620;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4624, %r4317, %r4621;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4627, %r4603, %r4617, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4631, %r4610, %r4624, %r4384;
	// end inline asm
	shl.b32 	%r4638, %r4631, 4;
	// begin inline asm
	lop3.b32 %r4635, %r4390, %r4627, %r4638, 202;
	// end inline asm
	xor.b32  	%r16210, %r4635, -2004318072;
	// begin inline asm
	mov.b32 %r4642, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4642, %r4640;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4325, %r4641;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4642, %r4647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4651, %r4333, %r4648;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4642, %r4654;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4658, %r4341, %r4655;
	// end inline asm
	// begin inline asm
	mov.b32 %r4661, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4662, %r4642, %r4661;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4665, %r4349, %r4662;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4668, %r4644, %r4658, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4672, %r4651, %r4665, %r4384;
	// end inline asm
	shl.b32 	%r4679, %r4672, 4;
	// begin inline asm
	lop3.b32 %r4676, %r4390, %r4668, %r4679, 202;
	// end inline asm
	xor.b32  	%r16211, %r4676, -2004318072;
	setp.eq.s32 	%p300, %r16389, 0;
	selp.b32 	%r16212, 0, 4161, %p300;
	add.s32 	%r16213, %r43, %r16212;
	mul.wide.u32 	%rd94, %r16213, 4;
	add.s64 	%rd95, %rd36, %rd94;
	st.shared.u32 	[%rd95], %r16204;
	add.s32 	%r16214, %r44, %r16212;
	mul.wide.u32 	%rd96, %r16214, 4;
	add.s64 	%rd97, %rd36, %rd96;
	st.shared.u32 	[%rd97], %r16205;
	add.s32 	%r16215, %r45, %r16212;
	mul.wide.u32 	%rd98, %r16215, 4;
	add.s64 	%rd99, %rd36, %rd98;
	st.shared.u32 	[%rd99], %r16206;
	add.s32 	%r16216, %r46, %r16212;
	mul.wide.u32 	%rd100, %r16216, 4;
	add.s64 	%rd101, %rd36, %rd100;
	st.shared.u32 	[%rd101], %r16207;
	add.s32 	%r16217, %r47, %r16212;
	mul.wide.u32 	%rd102, %r16217, 4;
	add.s64 	%rd103, %rd36, %rd102;
	st.shared.u32 	[%rd103], %r16208;
	add.s32 	%r16218, %r48, %r16212;
	mul.wide.u32 	%rd104, %r16218, 4;
	add.s64 	%rd105, %rd36, %rd104;
	st.shared.u32 	[%rd105], %r16209;
	add.s32 	%r16219, %r49, %r16212;
	mul.wide.u32 	%rd106, %r16219, 4;
	add.s64 	%rd107, %rd36, %rd106;
	st.shared.u32 	[%rd107], %r16210;
	add.s32 	%r16220, %r50, %r16212;
	mul.wide.u32 	%rd108, %r16220, 4;
	add.s64 	%rd109, %rd36, %rd108;
	st.shared.u32 	[%rd109], %r16211;
	ld.shared.u32 	%r16340, [%rd79];
	ld.shared.u32 	%r16341, [%rd81];
	ld.shared.u32 	%r16342, [%rd83];
	ld.shared.u32 	%r16343, [%rd85];
	ld.shared.u32 	%r16352, [%rd87];
	ld.shared.u32 	%r16353, [%rd89];
	ld.shared.u32 	%r16354, [%rd91];
	ld.shared.u32 	%r16355, [%rd93];
	// begin inline asm
	mov.b32 %r4685, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4684, %r16340, -2004318072;
	// begin inline asm
	lop3.b32 %r4682, %r867, %r4684, %r4685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4687, %r4685, %r4686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4690, %r4682, %r4687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4693, %r878, %r4684, %r4696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4698, %r4696, %r4697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4701, %r4693, %r4698;
	// end inline asm
	shr.u32 	%r4706, %r4684, 8;
	// begin inline asm
	lop3.b32 %r4704, %r867, %r4706, %r4685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4708, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4709, %r4685, %r4708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4712, %r4704, %r4709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4715, %r878, %r4706, %r4696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4719, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4720, %r4696, %r4719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4723, %r4715, %r4720;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4730, %r16341, -2004318072;
	// begin inline asm
	lop3.b32 %r4728, %r867, %r4730, %r4731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4733, %r4731, %r4732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4736, %r4728, %r4733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4739, %r878, %r4730, %r4742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4744, %r4742, %r4743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4747, %r4739, %r4744;
	// end inline asm
	shr.u32 	%r4752, %r4730, 8;
	// begin inline asm
	lop3.b32 %r4750, %r867, %r4752, %r4731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4754, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4755, %r4731, %r4754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4758, %r4750, %r4755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4761, %r878, %r4752, %r4742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4765, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4766, %r4742, %r4765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4769, %r4761, %r4766;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4776, %r16342, -2004318072;
	// begin inline asm
	lop3.b32 %r4774, %r867, %r4776, %r4777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4779, %r4777, %r4778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4782, %r4774, %r4779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4785, %r878, %r4776, %r4788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4790, %r4788, %r4789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4793, %r4785, %r4790;
	// end inline asm
	shr.u32 	%r4798, %r4776, 8;
	// begin inline asm
	lop3.b32 %r4796, %r867, %r4798, %r4777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4800, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4801, %r4777, %r4800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4804, %r4796, %r4801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4807, %r878, %r4798, %r4788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4811, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4812, %r4788, %r4811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4815, %r4807, %r4812;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4822, %r16343, -2004318072;
	// begin inline asm
	lop3.b32 %r4820, %r867, %r4822, %r4823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4825, %r4823, %r4824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4828, %r4820, %r4825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4831, %r878, %r4822, %r4834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4836, %r4834, %r4835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4839, %r4831, %r4836;
	// end inline asm
	shr.u32 	%r4844, %r4822, 8;
	// begin inline asm
	lop3.b32 %r4842, %r867, %r4844, %r4823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4846, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4847, %r4823, %r4846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4850, %r4842, %r4847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4853, %r878, %r4844, %r4834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4857, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4858, %r4834, %r4857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4861, %r4853, %r4858;
	// end inline asm
	// begin inline asm
	mov.b32 %r4869, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4880, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4868, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r4866, %r867, %r4868, %r4869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4871, %r4869, %r4870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4874, %r4866, %r4871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4877, %r878, %r4868, %r4880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4882, %r4880, %r4881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4885, %r4877, %r4882;
	// end inline asm
	shr.u32 	%r4890, %r4868, 8;
	// begin inline asm
	lop3.b32 %r4888, %r867, %r4890, %r4869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4892, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4893, %r4869, %r4892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4896, %r4888, %r4893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4899, %r878, %r4890, %r4880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4903, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4904, %r4880, %r4903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4907, %r4899, %r4904;
	// end inline asm
	// begin inline asm
	mov.b32 %r4915, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4926, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4914, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r4912, %r867, %r4914, %r4915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4917, %r4915, %r4916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4920, %r4912, %r4917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4923, %r878, %r4914, %r4926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4928, %r4926, %r4927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4931, %r4923, %r4928;
	// end inline asm
	shr.u32 	%r4936, %r4914, 8;
	// begin inline asm
	lop3.b32 %r4934, %r867, %r4936, %r4915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4938, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4939, %r4915, %r4938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4942, %r4934, %r4939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4945, %r878, %r4936, %r4926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4949, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4950, %r4926, %r4949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4953, %r4945, %r4950;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r4960, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r4958, %r867, %r4960, %r4961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4962, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4963, %r4961, %r4962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4966, %r4958, %r4963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4969, %r878, %r4960, %r4972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4974, %r4972, %r4973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4977, %r4969, %r4974;
	// end inline asm
	shr.u32 	%r4982, %r4960, 8;
	// begin inline asm
	lop3.b32 %r4980, %r867, %r4982, %r4961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4984, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4985, %r4961, %r4984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4988, %r4980, %r4985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4991, %r878, %r4982, %r4972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4995, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4996, %r4972, %r4995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4999, %r4991, %r4996;
	// end inline asm
	// begin inline asm
	mov.b32 %r5007, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r5006, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r5004, %r867, %r5006, %r5007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5008, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5009, %r5007, %r5008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5012, %r5004, %r5009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5015, %r878, %r5006, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5019, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5020, %r5018, %r5019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5023, %r5015, %r5020;
	// end inline asm
	shr.u32 	%r5028, %r5006, 8;
	// begin inline asm
	lop3.b32 %r5026, %r867, %r5028, %r5007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5030, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5031, %r5007, %r5030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5034, %r5026, %r5031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5037, %r878, %r5028, %r5018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5042, %r5018, %r5041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5045, %r5037, %r5042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5158, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5160, %r5158, %r4942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5163, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5165, %r5163, %r4953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5168, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5170, %r5168, %r4966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5173, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5175, %r5173, %r4977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5178, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5180, %r5178, %r4988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5183, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5185, %r5183, %r4999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5188, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5190, %r5188, %r5012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5193, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5195, %r5193, %r5023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5198, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5200, %r5198, %r5034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5203, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5205, %r5203, %r5045;
	// end inline asm
	// begin inline asm
	mov.b32 %r5213, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5224, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5210, %r867, %r1892, %r5213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5214, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5215, %r5213, %r5214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5218, %r5210, %r5215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5221, %r878, %r1892, %r5224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5225, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5226, %r5224, %r5225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5229, %r5221, %r5226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5232, %r867, %r1914, %r5213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5236, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5237, %r5213, %r5236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5240, %r5232, %r5237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5243, %r878, %r1914, %r5224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5247, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5248, %r5224, %r5247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5251, %r5243, %r5248;
	// end inline asm
	// begin inline asm
	mov.b32 %r5259, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5270, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5256, %r867, %r1938, %r5259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5260, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5261, %r5259, %r5260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5264, %r5256, %r5261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5267, %r878, %r1938, %r5270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5271, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5272, %r5270, %r5271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5275, %r5267, %r5272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5278, %r867, %r1960, %r5259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5282, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5283, %r5259, %r5282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5286, %r5278, %r5283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5289, %r878, %r1960, %r5270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5293, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5294, %r5270, %r5293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5297, %r5289, %r5294;
	// end inline asm
	// begin inline asm
	mov.b32 %r5305, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5316, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5302, %r867, %r1984, %r5305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5306, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5307, %r5305, %r5306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5310, %r5302, %r5307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5313, %r878, %r1984, %r5316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5317, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5318, %r5316, %r5317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5321, %r5313, %r5318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5324, %r867, %r2006, %r5305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5328, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5329, %r5305, %r5328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5332, %r5324, %r5329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5335, %r878, %r2006, %r5316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5339, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5340, %r5316, %r5339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5343, %r5335, %r5340;
	// end inline asm
	// begin inline asm
	mov.b32 %r5351, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5362, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5348, %r867, %r2030, %r5351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5352, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5353, %r5351, %r5352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5356, %r5348, %r5353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5359, %r878, %r2030, %r5362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5363, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5364, %r5362, %r5363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5367, %r5359, %r5364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5370, %r867, %r2052, %r5351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5374, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5375, %r5351, %r5374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5378, %r5370, %r5375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5381, %r878, %r2052, %r5362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5385, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5386, %r5362, %r5385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5389, %r5381, %r5386;
	// end inline asm
	// begin inline asm
	mov.b32 %r5397, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5408, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5394, %r867, %r2076, %r5397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5398, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5399, %r5397, %r5398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5402, %r5394, %r5399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5405, %r878, %r2076, %r5408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5409, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5410, %r5408, %r5409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5413, %r5405, %r5410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5416, %r867, %r2098, %r5397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5420, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5421, %r5397, %r5420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5424, %r5416, %r5421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5427, %r878, %r2098, %r5408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5431, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5432, %r5408, %r5431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5435, %r5427, %r5432;
	// end inline asm
	// begin inline asm
	mov.b32 %r5443, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5454, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5440, %r867, %r2122, %r5443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5444, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5445, %r5443, %r5444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5448, %r5440, %r5445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5451, %r878, %r2122, %r5454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5455, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5456, %r5454, %r5455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5459, %r5451, %r5456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5462, %r867, %r2144, %r5443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5466, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5467, %r5443, %r5466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5470, %r5462, %r5467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5473, %r878, %r2144, %r5454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5477, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5478, %r5454, %r5477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5481, %r5473, %r5478;
	// end inline asm
	// begin inline asm
	mov.b32 %r5489, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5500, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5486, %r867, %r2168, %r5489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5490, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5491, %r5489, %r5490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5494, %r5486, %r5491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5497, %r878, %r2168, %r5500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5501, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5502, %r5500, %r5501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5505, %r5497, %r5502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5508, %r867, %r2190, %r5489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5512, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5513, %r5489, %r5512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5516, %r5508, %r5513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5519, %r878, %r2190, %r5500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5523, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5524, %r5500, %r5523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5527, %r5519, %r5524;
	// end inline asm
	// begin inline asm
	mov.b32 %r5535, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5546, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5532, %r867, %r2214, %r5535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5536, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5537, %r5535, %r5536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5540, %r5532, %r5537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5543, %r878, %r2214, %r5546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5547, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5548, %r5546, %r5547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5551, %r5543, %r5548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5554, %r867, %r2236, %r5535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5558, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5559, %r5535, %r5558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5562, %r5554, %r5559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5565, %r878, %r2236, %r5546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5569, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5570, %r5546, %r5569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5573, %r5565, %r5570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r250, %r5218, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r250, %r5229, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r250, %r5240, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r250, %r5251, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r250, %r5264, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r250, %r5275, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r250, %r5286, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r250, %r5297, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r250, %r5310, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r250, %r5321, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r250, %r5332, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r250, %r5343, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r250, %r5356, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r250, %r5367, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r250, %r5378, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r250, %r5389, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r281, %r5402, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r281, %r5413, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r281, %r5424, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r281, %r5435, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5656, %r281, %r5448, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5660, %r281, %r5459, %r5155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5664, %r281, %r5470, %r5160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5668, %r281, %r5481, %r5165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5672, %r281, %r5494, %r5170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5676, %r281, %r5505, %r5175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5680, %r281, %r5516, %r5180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5684, %r281, %r5527, %r5185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5688, %r281, %r5540, %r5190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5692, %r281, %r5551, %r5195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5696, %r281, %r5562, %r5200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5700, %r281, %r5573, %r5205;
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5706, %r867, %r2452, %r5709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5711, %r5709, %r5710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5714, %r5706, %r5711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5717, %r878, %r2452, %r5720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5722, %r5720, %r5721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5725, %r5717, %r5722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5728, %r867, %r2474, %r5709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5732, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5733, %r5709, %r5732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5736, %r5728, %r5733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5739, %r878, %r2474, %r5720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5744, %r5720, %r5743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5747, %r5739, %r5744;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5752, %r867, %r2498, %r5755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5757, %r5755, %r5756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5760, %r5752, %r5757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5763, %r878, %r2498, %r5766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5766, %r5767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5771, %r5763, %r5768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5774, %r867, %r2520, %r5755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5778, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5779, %r5755, %r5778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5782, %r5774, %r5779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5785, %r878, %r2520, %r5766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5790, %r5766, %r5789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5793, %r5785, %r5790;
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5798, %r867, %r2544, %r5801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5803, %r5801, %r5802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5806, %r5798, %r5803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5809, %r878, %r2544, %r5812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5812, %r5813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5817, %r5809, %r5814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5820, %r867, %r2566, %r5801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5801, %r5824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5828, %r5820, %r5825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5831, %r878, %r2566, %r5812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5835, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5836, %r5812, %r5835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5839, %r5831, %r5836;
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5844, %r867, %r2590, %r5847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5847, %r5848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5852, %r5844, %r5849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5855, %r878, %r2590, %r5858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5858, %r5859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5863, %r5855, %r5860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5866, %r867, %r2612, %r5847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5870, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5871, %r5847, %r5870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5874, %r5866, %r5871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5877, %r878, %r2612, %r5858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5881, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5858, %r5881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5885, %r5877, %r5882;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5890, %r867, %r2636, %r5893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5893, %r5894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5898, %r5890, %r5895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5901, %r878, %r2636, %r5904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5905, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5904, %r5905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5909, %r5901, %r5906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5912, %r867, %r2658, %r5893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5916, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5893, %r5916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5920, %r5912, %r5917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5923, %r878, %r2658, %r5904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5904, %r5927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5931, %r5923, %r5928;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5936, %r867, %r2682, %r5939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5939, %r5940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5944, %r5936, %r5941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5947, %r878, %r2682, %r5950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5950, %r5951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5955, %r5947, %r5952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5958, %r867, %r2704, %r5939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5939, %r5962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5966, %r5958, %r5963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5969, %r878, %r2704, %r5950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5974, %r5950, %r5973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5977, %r5969, %r5974;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5982, %r867, %r2728, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5987, %r5985, %r5986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5990, %r5982, %r5987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5993, %r878, %r2728, %r5996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5996, %r5997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6001, %r5993, %r5998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6004, %r867, %r2750, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r5985, %r6008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6012, %r6004, %r6009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6015, %r878, %r2750, %r5996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6019, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6020, %r5996, %r6019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6023, %r6015, %r6020;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6028, %r867, %r2774, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6032, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6033, %r6031, %r6032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6036, %r6028, %r6033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6039, %r878, %r2774, %r6042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6043, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6044, %r6042, %r6043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6047, %r6039, %r6044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6050, %r867, %r2796, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6031, %r6054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6058, %r6050, %r6055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6061, %r878, %r2796, %r6042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6065, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6066, %r6042, %r6065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6069, %r6061, %r6066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6072, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6074, %r6072, %r5714, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6078, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6080, %r6078, %r5725, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6084, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6086, %r6084, %r5736, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6090, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6092, %r6090, %r5747, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6096, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6098, %r6096, %r5760, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6102, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6104, %r6102, %r5771, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6110, %r6108, %r5782, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6116, %r6114, %r5793, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6122, %r6120, %r5806, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6128, %r6126, %r5817, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6134, %r6132, %r5828, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6140, %r6138, %r5839, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6146, %r6144, %r5852, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6152, %r6150, %r5863, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6158, %r6156, %r5874, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6164, %r6162, %r5885, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6170, %r6168, %r5898, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6176, %r6174, %r5909, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6182, %r6180, %r5920, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6186, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6188, %r6186, %r5931, %r5652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6192, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6194, %r6192, %r5944, %r5656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6200, %r6198, %r5955, %r5660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6204, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6206, %r6204, %r5966, %r5664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6210, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6212, %r6210, %r5977, %r5668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6216, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6218, %r6216, %r5990, %r5672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6222, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6224, %r6222, %r6001, %r5676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6230, %r6228, %r6012, %r5680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6234, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6236, %r6234, %r6023, %r5684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6240, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6242, %r6240, %r6036, %r5688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6246, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6248, %r6246, %r6047, %r5692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6252, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6254, %r6252, %r6058, %r5696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6260, %r6258, %r6069, %r5700;
	// end inline asm
	// begin inline asm
	mov.b32 %r6269, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6280, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6266, %r867, %r868, %r6269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6270, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6271, %r6269, %r6270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6274, %r6266, %r6271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6277, %r878, %r868, %r6280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6281, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6282, %r6280, %r6281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6285, %r6277, %r6282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6288, %r867, %r890, %r6269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6292, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6293, %r6269, %r6292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6296, %r6288, %r6293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6299, %r878, %r890, %r6280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6304, %r6280, %r6303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6307, %r6299, %r6304;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6312, %r867, %r914, %r6315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6317, %r6315, %r6316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6320, %r6312, %r6317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r878, %r914, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6326, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6334, %r867, %r936, %r6315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6338, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6339, %r6315, %r6338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6342, %r6334, %r6339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6345, %r878, %r936, %r6326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6350, %r6326, %r6349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6353, %r6345, %r6350;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6358, %r867, %r960, %r6361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6363, %r6361, %r6362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6366, %r6358, %r6363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6369, %r878, %r960, %r6372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6374, %r6372, %r6373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6377, %r6369, %r6374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6380, %r867, %r982, %r6361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6384, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6385, %r6361, %r6384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6388, %r6380, %r6385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6391, %r878, %r982, %r6372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6396, %r6372, %r6395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6399, %r6391, %r6396;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6404, %r867, %r1006, %r6407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6409, %r6407, %r6408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6412, %r6404, %r6409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6415, %r878, %r1006, %r6418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6420, %r6418, %r6419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6423, %r6415, %r6420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6426, %r867, %r1028, %r6407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6430, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6431, %r6407, %r6430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6434, %r6426, %r6431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6437, %r878, %r1028, %r6418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6442, %r6418, %r6441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6445, %r6437, %r6442;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6450, %r867, %r1052, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6455, %r6453, %r6454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6458, %r6450, %r6455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r878, %r1052, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6464, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6472, %r867, %r1074, %r6453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6476, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6477, %r6453, %r6476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6480, %r6472, %r6477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r878, %r1074, %r6464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6464, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6496, %r867, %r1098, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6501, %r6499, %r6500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6504, %r6496, %r6501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6507, %r878, %r1098, %r6510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6512, %r6510, %r6511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6515, %r6507, %r6512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6518, %r867, %r1120, %r6499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6522, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6523, %r6499, %r6522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6526, %r6518, %r6523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6529, %r878, %r1120, %r6510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6534, %r6510, %r6533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6537, %r6529, %r6534;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6542, %r867, %r1144, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6547, %r6545, %r6546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6550, %r6542, %r6547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r878, %r1144, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6556, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6564, %r867, %r1166, %r6545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6569, %r6545, %r6568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6572, %r6564, %r6569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r878, %r1166, %r6556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6556, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6588, %r867, %r1190, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6592, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6593, %r6591, %r6592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6596, %r6588, %r6593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6599, %r878, %r1190, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6604, %r6602, %r6603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6607, %r6599, %r6604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6610, %r867, %r1212, %r6591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6615, %r6591, %r6614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6618, %r6610, %r6615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6621, %r878, %r1212, %r6602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6626, %r6602, %r6625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6629, %r6621, %r6626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r374, %r6274, %r6074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r374, %r6285, %r6080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r374, %r6296, %r6086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r374, %r6307, %r6092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r374, %r6320, %r6098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r374, %r6331, %r6104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r374, %r6342, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r374, %r6353, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r374, %r6366, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r374, %r6377, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r374, %r6388, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r374, %r6399, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r374, %r6412, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r374, %r6423, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6830, %r374, %r6434, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r374, %r6445, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r405, %r6458, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r405, %r6469, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6848, %r405, %r6480, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r405, %r6491, %r6188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r405, %r6504, %r6194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r405, %r6515, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6866, %r405, %r6526, %r6206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r405, %r6537, %r6212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r405, %r6550, %r6218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r405, %r6561, %r6224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r405, %r6572, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r405, %r6583, %r6236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6893, %r405, %r6596, %r6242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r405, %r6607, %r6248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r405, %r6618, %r6254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r405, %r6629, %r6260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6760, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6762, %r6760, %r6764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6765, %r470, %r6767, %r6762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6769, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6771, %r6769, %r6773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r470, %r6776, %r6771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6778, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6780, %r6778, %r6782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r470, %r6785, %r6780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6787, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6789, %r6787, %r6791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r470, %r6794, %r6789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6796, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6798, %r6796, %r6800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r470, %r6803, %r6798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6805, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6807, %r6805, %r6809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r470, %r6812, %r6807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6814, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6816, %r6814, %r6818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r470, %r6821, %r6816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6823, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6825, %r6823, %r6827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r470, %r6830, %r6825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6832, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6834, %r6832, %r6836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r473, %r6839, %r6834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6841, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6843, %r6841, %r6845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r473, %r6848, %r6843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6850, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6852, %r6850, %r6854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6855, %r473, %r6857, %r6852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6859, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r6859, %r6863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r473, %r6866, %r6861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6868, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6870, %r6868, %r6872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6873, %r473, %r6875, %r6870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6877, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r6877, %r6881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r473, %r6884, %r6879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6886, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6888, %r6886, %r6890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r473, %r6893, %r6888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6895, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6897, %r6895, %r6899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6900, %r473, %r6902, %r6897;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6904, %r476, %r6767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r470, %r6764, %r6904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r476, %r6776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r470, %r6773, %r6911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6918, %r476, %r6785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6921, %r470, %r6782, %r6918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6925, %r476, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6928, %r470, %r6791, %r6925;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6932, %r476, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6935, %r470, %r6800, %r6932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6939, %r476, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6942, %r470, %r6809, %r6939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6946, %r476, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6949, %r470, %r6818, %r6946;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6953, %r476, %r6830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6956, %r470, %r6827, %r6953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6960, %r479, %r6839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6963, %r473, %r6836, %r6960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6967, %r479, %r6848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6970, %r473, %r6845, %r6967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6974, %r479, %r6857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6977, %r473, %r6854, %r6974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6981, %r479, %r6866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6984, %r473, %r6863, %r6981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r479, %r6875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r473, %r6872, %r6988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6995, %r479, %r6884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6998, %r473, %r6881, %r6995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7002, %r479, %r6893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7005, %r473, %r6890, %r7002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7009, %r479, %r6902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7012, %r473, %r6899, %r7009;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7183, %r7180}, {%r482, %r488, %r485, %r491}, {%r6765, %r6907}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7192, %r7189}, {%r482, %r488, %r485, %r491}, {%r6774, %r6914}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7201, %r7198}, {%r482, %r488, %r485, %r491}, {%r6783, %r6921}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7210, %r7207}, {%r482, %r488, %r485, %r491}, {%r6792, %r6928}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r482, %r488, %r485, %r491}, {%r6801, %r6935}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r482, %r488, %r485, %r491}, {%r6810, %r6942}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r482, %r488, %r485, %r491}, {%r6819, %r6949}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r482, %r488, %r485, %r491}, {%r6828, %r6956}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7255, %r7252}, {%r482, %r488, %r485, %r491}, {%r6837, %r6963}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7264, %r7261}, {%r482, %r488, %r485, %r491}, {%r6846, %r6970}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7273, %r7270}, {%r482, %r488, %r485, %r491}, {%r6855, %r6977}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7282, %r7279}, {%r482, %r488, %r485, %r491}, {%r6864, %r6984}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7291, %r7288}, {%r482, %r488, %r485, %r491}, {%r6873, %r6991}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7300, %r7297}, {%r482, %r488, %r485, %r491}, {%r6882, %r6998}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7309, %r7306}, {%r482, %r488, %r485, %r491}, {%r6891, %r7005}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7318, %r7315}, {%r482, %r488, %r485, %r491}, {%r6900, %r7012}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7176, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7178, %r7176, %r7180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7181, %r494, %r7183, %r7178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7185, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7187, %r7185, %r7189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7190, %r494, %r7192, %r7187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7194, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7196, %r7194, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7199, %r494, %r7201, %r7196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7203, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r7203, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r494, %r7210, %r7205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r494, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r494, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r494, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r494, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7248, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r7248, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r494, %r7255, %r7250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7257, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r7257, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r494, %r7264, %r7259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7266, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7268, %r7266, %r7270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7271, %r494, %r7273, %r7268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7275, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r7275, %r7279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r494, %r7282, %r7277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7284, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7286, %r7284, %r7288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7289, %r494, %r7291, %r7286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7293, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r7293, %r7297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r494, %r7300, %r7295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7302, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r7302, %r7306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r494, %r7309, %r7304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7311, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7313, %r7311, %r7315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7316, %r494, %r7318, %r7313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r497, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r494, %r7180, %r7320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r497, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r494, %r7189, %r7327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7334, %r497, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7337, %r494, %r7198, %r7334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7341, %r497, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7344, %r494, %r7207, %r7341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7348, %r497, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7351, %r494, %r7216, %r7348;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7355, %r497, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7358, %r494, %r7225, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7362, %r497, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7365, %r494, %r7234, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7369, %r497, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7372, %r494, %r7243, %r7369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7376, %r497, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7379, %r494, %r7252, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7383, %r497, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7386, %r494, %r7261, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7390, %r497, %r7273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7393, %r494, %r7270, %r7390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7397, %r497, %r7282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7400, %r494, %r7279, %r7397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7404, %r497, %r7291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7407, %r494, %r7288, %r7404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r497, %r7300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7414, %r494, %r7297, %r7411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7418, %r497, %r7309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7421, %r494, %r7306, %r7418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r497, %r7318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7428, %r494, %r7315, %r7425;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7721, %r7724}, {%r500, %r506, %r503, %r509}, {%r7181, %r7323}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7727, %r7730}, {%r500, %r506, %r503, %r509}, {%r7190, %r7330}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7733, %r7736}, {%r500, %r506, %r503, %r509}, {%r7199, %r7337}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7739, %r7742}, {%r500, %r506, %r503, %r509}, {%r7208, %r7344}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7745, %r7748}, {%r500, %r506, %r503, %r509}, {%r7217, %r7351}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7751, %r7754}, {%r500, %r506, %r503, %r509}, {%r7226, %r7358}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7757, %r7760}, {%r500, %r506, %r503, %r509}, {%r7235, %r7365}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7763, %r7766}, {%r500, %r506, %r503, %r509}, {%r7244, %r7372}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7722, %r7725}, {%r500, %r506, %r503, %r509}, {%r7253, %r7379}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7728, %r7731}, {%r500, %r506, %r503, %r509}, {%r7262, %r7386}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7734, %r7737}, {%r500, %r506, %r503, %r509}, {%r7271, %r7393}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7740, %r7743}, {%r500, %r506, %r503, %r509}, {%r7280, %r7400}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7746, %r7749}, {%r500, %r506, %r503, %r509}, {%r7289, %r7407}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7752, %r7755}, {%r500, %r506, %r503, %r509}, {%r7298, %r7414}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7758, %r7761}, {%r500, %r506, %r503, %r509}, {%r7307, %r7421}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7764, %r7767}, {%r500, %r506, %r503, %r509}, {%r7316, %r7428}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7720, %r7721, %r7722;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7724, %r7725;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7726, %r7727, %r7728;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7729, %r7730, %r7731;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7733, %r7734;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7735, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7738, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7741, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7744, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7762, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7765, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7768, %r7721, %r7722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7771, %r7724, %r7725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7774, %r7727, %r7728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7777, %r7730, %r7731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7780, %r7733, %r7734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7783, %r7736, %r7737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7786, %r7739, %r7740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7789, %r7742, %r7743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7792, %r7745, %r7746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7795, %r7748, %r7749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7798, %r7751, %r7752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7801, %r7754, %r7755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7804, %r7757, %r7758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7807, %r7760, %r7761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7810, %r7763, %r7764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7813, %r7766, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r144, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r144, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r144, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r144, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r144, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r144, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7834, %r144, %r7738;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7837, %r144, %r7741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7840, %r144, %r7744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7843, %r144, %r7747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7846, %r144, %r7750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7849, %r144, %r7753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7852, %r144, %r7756;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7855, %r144, %r7759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7858, %r144, %r7762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7861, %r144, %r7765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7864, %r145, %r7768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7867, %r145, %r7771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7870, %r145, %r7774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7873, %r145, %r7777;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7876, %r145, %r7780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7879, %r145, %r7783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7882, %r145, %r7786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7885, %r145, %r7789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7888, %r145, %r7792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7891, %r145, %r7795;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7894, %r145, %r7798;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7897, %r145, %r7801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7900, %r145, %r7804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7903, %r145, %r7807;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7906, %r145, %r7810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7909, %r145, %r7813;
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7913, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7914, %r7816, %r7912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7917, %r7914, %r7913;
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7921, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7922, %r7819, %r7920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7925, %r7922, %r7921;
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7929, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7930, %r7822, %r7928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7933, %r7930, %r7929;
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7937, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7938, %r7825, %r7936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7941, %r7938, %r7937;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7828, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7831, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7834, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7837, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7840, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7843, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7846, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7849, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7852, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7855, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7858, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7861, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7864, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7867, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7870, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7873, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7876, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7879, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8090, %r7882, %r8088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8093, %r8090, %r8089;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8097, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8098, %r7885, %r8096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8101, %r8098, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8106, %r7888, %r8104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8109, %r8106, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8113, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8114, %r7891, %r8112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8117, %r8114, %r8113;
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8122, %r7894, %r8120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8125, %r8122, %r8121;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8129, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8130, %r7897, %r8128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8133, %r8130, %r8129;
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8137, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8138, %r7900, %r8136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8141, %r8138, %r8137;
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8145, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8146, %r7903, %r8144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8149, %r8146, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8153, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8154, %r7906, %r8152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8157, %r8154, %r8153;
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r8161, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8162, %r7909, %r8160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8165, %r8162, %r8161;
	// end inline asm
	// begin inline asm
	mov.b32 %r8171, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r8171, %r8169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8173, %r7917, %r8170;
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r8171, %r8176;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8180, %r7925, %r8177;
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r8171, %r8183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8187, %r7933, %r8184;
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r8171, %r8190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8194, %r7941, %r8191;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8197, %r8173, %r8187, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8201, %r8180, %r8194, %r4384;
	// end inline asm
	shl.b32 	%r8208, %r8201, 4;
	// begin inline asm
	lop3.b32 %r8205, %r4390, %r8197, %r8208, 202;
	// end inline asm
	xor.b32  	%r16221, %r8205, -2004318072;
	// begin inline asm
	mov.b32 %r8212, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8210, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r8212, %r8210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8214, %r7949, %r8211;
	// end inline asm
	// begin inline asm
	mov.b32 %r8217, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r8212, %r8217;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8221, %r7957, %r8218;
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r8212, %r8224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8228, %r7965, %r8225;
	// end inline asm
	// begin inline asm
	mov.b32 %r8231, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r8212, %r8231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8235, %r7973, %r8232;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8238, %r8214, %r8228, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8242, %r8221, %r8235, %r4384;
	// end inline asm
	shl.b32 	%r8249, %r8242, 4;
	// begin inline asm
	lop3.b32 %r8246, %r4390, %r8238, %r8249, 202;
	// end inline asm
	xor.b32  	%r16222, %r8246, -2004318072;
	// begin inline asm
	mov.b32 %r8253, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8251, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r8253, %r8251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8255, %r7981, %r8252;
	// end inline asm
	// begin inline asm
	mov.b32 %r8258, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r8253, %r8258;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8262, %r7989, %r8259;
	// end inline asm
	// begin inline asm
	mov.b32 %r8265, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r8253, %r8265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8269, %r7997, %r8266;
	// end inline asm
	// begin inline asm
	mov.b32 %r8272, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r8253, %r8272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8276, %r8005, %r8273;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8279, %r8255, %r8269, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8283, %r8262, %r8276, %r4384;
	// end inline asm
	shl.b32 	%r8290, %r8283, 4;
	// begin inline asm
	lop3.b32 %r8287, %r4390, %r8279, %r8290, 202;
	// end inline asm
	xor.b32  	%r16223, %r8287, -2004318072;
	// begin inline asm
	mov.b32 %r8294, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8292, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8294, %r8292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8296, %r8013, %r8293;
	// end inline asm
	// begin inline asm
	mov.b32 %r8299, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r8294, %r8299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8303, %r8021, %r8300;
	// end inline asm
	// begin inline asm
	mov.b32 %r8306, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8294, %r8306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8310, %r8029, %r8307;
	// end inline asm
	// begin inline asm
	mov.b32 %r8313, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8294, %r8313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8317, %r8037, %r8314;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8320, %r8296, %r8310, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8324, %r8303, %r8317, %r4384;
	// end inline asm
	shl.b32 	%r8331, %r8324, 4;
	// begin inline asm
	lop3.b32 %r8328, %r4390, %r8320, %r8331, 202;
	// end inline asm
	xor.b32  	%r16224, %r8328, -2004318072;
	// begin inline asm
	mov.b32 %r8335, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8333, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8335, %r8333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8337, %r8045, %r8334;
	// end inline asm
	// begin inline asm
	mov.b32 %r8340, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8335, %r8340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8344, %r8053, %r8341;
	// end inline asm
	// begin inline asm
	mov.b32 %r8347, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8335, %r8347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8351, %r8061, %r8348;
	// end inline asm
	// begin inline asm
	mov.b32 %r8354, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8335, %r8354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8358, %r8069, %r8355;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8361, %r8337, %r8351, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8365, %r8344, %r8358, %r4384;
	// end inline asm
	shl.b32 	%r8372, %r8365, 4;
	// begin inline asm
	lop3.b32 %r8369, %r4390, %r8361, %r8372, 202;
	// end inline asm
	xor.b32  	%r16225, %r8369, -2004318072;
	// begin inline asm
	mov.b32 %r8376, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8374, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8376, %r8374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8378, %r8077, %r8375;
	// end inline asm
	// begin inline asm
	mov.b32 %r8381, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8376, %r8381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8385, %r8085, %r8382;
	// end inline asm
	// begin inline asm
	mov.b32 %r8388, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8376, %r8388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8392, %r8093, %r8389;
	// end inline asm
	// begin inline asm
	mov.b32 %r8395, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8376, %r8395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8399, %r8101, %r8396;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8402, %r8378, %r8392, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8406, %r8385, %r8399, %r4384;
	// end inline asm
	shl.b32 	%r8413, %r8406, 4;
	// begin inline asm
	lop3.b32 %r8410, %r4390, %r8402, %r8413, 202;
	// end inline asm
	xor.b32  	%r16226, %r8410, -2004318072;
	// begin inline asm
	mov.b32 %r8417, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8415, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8417, %r8415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8419, %r8109, %r8416;
	// end inline asm
	// begin inline asm
	mov.b32 %r8422, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8423, %r8417, %r8422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8426, %r8117, %r8423;
	// end inline asm
	// begin inline asm
	mov.b32 %r8429, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8430, %r8417, %r8429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8433, %r8125, %r8430;
	// end inline asm
	// begin inline asm
	mov.b32 %r8436, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8437, %r8417, %r8436;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8440, %r8133, %r8437;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8443, %r8419, %r8433, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8447, %r8426, %r8440, %r4384;
	// end inline asm
	shl.b32 	%r8454, %r8447, 4;
	// begin inline asm
	lop3.b32 %r8451, %r4390, %r8443, %r8454, 202;
	// end inline asm
	xor.b32  	%r16227, %r8451, -2004318072;
	// begin inline asm
	mov.b32 %r8458, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8458, %r8456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8141, %r8457;
	// end inline asm
	// begin inline asm
	mov.b32 %r8463, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8458, %r8463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8467, %r8149, %r8464;
	// end inline asm
	// begin inline asm
	mov.b32 %r8470, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8458, %r8470;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8474, %r8157, %r8471;
	// end inline asm
	// begin inline asm
	mov.b32 %r8477, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8478, %r8458, %r8477;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8481, %r8165, %r8478;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8484, %r8460, %r8474, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8488, %r8467, %r8481, %r4384;
	// end inline asm
	shl.b32 	%r8495, %r8488, 4;
	// begin inline asm
	lop3.b32 %r8492, %r4390, %r8484, %r8495, 202;
	// end inline asm
	xor.b32  	%r16228, %r8492, -2004318072;
	st.shared.u32 	[%rd95], %r16221;
	st.shared.u32 	[%rd97], %r16222;
	st.shared.u32 	[%rd99], %r16223;
	st.shared.u32 	[%rd101], %r16224;
	st.shared.u32 	[%rd103], %r16225;
	st.shared.u32 	[%rd105], %r16226;
	st.shared.u32 	[%rd107], %r16227;
	st.shared.u32 	[%rd109], %r16228;
	ld.shared.u32 	%r16344, [%rd79];
	ld.shared.u32 	%r16345, [%rd81];
	ld.shared.u32 	%r16346, [%rd83];
	ld.shared.u32 	%r16347, [%rd85];
	ld.shared.u32 	%r16356, [%rd87];
	ld.shared.u32 	%r16357, [%rd89];
	ld.shared.u32 	%r16358, [%rd91];
	ld.shared.u32 	%r16359, [%rd93];
	// begin inline asm
	mov.b32 %r8501, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8512, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8500, %r16344, -2004318072;
	// begin inline asm
	lop3.b32 %r8498, %r867, %r8500, %r8501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8502, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8503, %r8501, %r8502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8506, %r8498, %r8503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8509, %r878, %r8500, %r8512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8513, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8514, %r8512, %r8513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8517, %r8509, %r8514;
	// end inline asm
	shr.u32 	%r8522, %r8500, 8;
	// begin inline asm
	lop3.b32 %r8520, %r867, %r8522, %r8501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8524, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8525, %r8501, %r8524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8528, %r8520, %r8525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8531, %r878, %r8522, %r8512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8535, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8536, %r8512, %r8535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8539, %r8531, %r8536;
	// end inline asm
	// begin inline asm
	mov.b32 %r8547, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8558, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8546, %r16345, -2004318072;
	// begin inline asm
	lop3.b32 %r8544, %r867, %r8546, %r8547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8548, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8549, %r8547, %r8548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8552, %r8544, %r8549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8555, %r878, %r8546, %r8558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8559, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8560, %r8558, %r8559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8563, %r8555, %r8560;
	// end inline asm
	shr.u32 	%r8568, %r8546, 8;
	// begin inline asm
	lop3.b32 %r8566, %r867, %r8568, %r8547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8570, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8571, %r8547, %r8570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8574, %r8566, %r8571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8577, %r878, %r8568, %r8558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8581, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8582, %r8558, %r8581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8585, %r8577, %r8582;
	// end inline asm
	// begin inline asm
	mov.b32 %r8593, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8604, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8592, %r16346, -2004318072;
	// begin inline asm
	lop3.b32 %r8590, %r867, %r8592, %r8593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8594, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8595, %r8593, %r8594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8598, %r8590, %r8595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8601, %r878, %r8592, %r8604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8605, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8606, %r8604, %r8605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8609, %r8601, %r8606;
	// end inline asm
	shr.u32 	%r8614, %r8592, 8;
	// begin inline asm
	lop3.b32 %r8612, %r867, %r8614, %r8593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8616, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8617, %r8593, %r8616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8620, %r8612, %r8617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8623, %r878, %r8614, %r8604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8627, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8628, %r8604, %r8627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8631, %r8623, %r8628;
	// end inline asm
	// begin inline asm
	mov.b32 %r8639, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8650, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8638, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r8636, %r867, %r8638, %r8639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8640, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8641, %r8639, %r8640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8644, %r8636, %r8641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8647, %r878, %r8638, %r8650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8651, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8652, %r8650, %r8651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8655, %r8647, %r8652;
	// end inline asm
	shr.u32 	%r8660, %r8638, 8;
	// begin inline asm
	lop3.b32 %r8658, %r867, %r8660, %r8639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8662, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8663, %r8639, %r8662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8666, %r8658, %r8663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8669, %r878, %r8660, %r8650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8673, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8674, %r8650, %r8673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8677, %r8669, %r8674;
	// end inline asm
	// begin inline asm
	mov.b32 %r8685, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8696, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8684, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r8682, %r867, %r8684, %r8685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8686, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8687, %r8685, %r8686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8690, %r8682, %r8687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8693, %r878, %r8684, %r8696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8697, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8698, %r8696, %r8697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8701, %r8693, %r8698;
	// end inline asm
	shr.u32 	%r8706, %r8684, 8;
	// begin inline asm
	lop3.b32 %r8704, %r867, %r8706, %r8685, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8708, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8709, %r8685, %r8708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8712, %r8704, %r8709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8715, %r878, %r8706, %r8696, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8719, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8720, %r8696, %r8719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8723, %r8715, %r8720;
	// end inline asm
	// begin inline asm
	mov.b32 %r8731, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8742, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8730, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r8728, %r867, %r8730, %r8731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8732, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8733, %r8731, %r8732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8736, %r8728, %r8733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8739, %r878, %r8730, %r8742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8743, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8744, %r8742, %r8743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8747, %r8739, %r8744;
	// end inline asm
	shr.u32 	%r8752, %r8730, 8;
	// begin inline asm
	lop3.b32 %r8750, %r867, %r8752, %r8731, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8754, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8755, %r8731, %r8754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8758, %r8750, %r8755;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8761, %r878, %r8752, %r8742, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8765, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8766, %r8742, %r8765;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8769, %r8761, %r8766;
	// end inline asm
	// begin inline asm
	mov.b32 %r8777, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8788, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8776, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r8774, %r867, %r8776, %r8777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8778, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8779, %r8777, %r8778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8782, %r8774, %r8779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8785, %r878, %r8776, %r8788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8789, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8790, %r8788, %r8789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8793, %r8785, %r8790;
	// end inline asm
	shr.u32 	%r8798, %r8776, 8;
	// begin inline asm
	lop3.b32 %r8796, %r867, %r8798, %r8777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8800, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8801, %r8777, %r8800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8804, %r8796, %r8801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8807, %r878, %r8798, %r8788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8811, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8812, %r8788, %r8811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8815, %r8807, %r8812;
	// end inline asm
	// begin inline asm
	mov.b32 %r8823, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r8834, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r8822, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r8820, %r867, %r8822, %r8823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8824, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8825, %r8823, %r8824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8828, %r8820, %r8825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8831, %r878, %r8822, %r8834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8835, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8836, %r8834, %r8835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8839, %r8831, %r8836;
	// end inline asm
	shr.u32 	%r8844, %r8822, 8;
	// begin inline asm
	lop3.b32 %r8842, %r867, %r8844, %r8823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8846, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8847, %r8823, %r8846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8850, %r8842, %r8847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8853, %r878, %r8844, %r8834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8857, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8858, %r8834, %r8857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8861, %r8853, %r8858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8974, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8976, %r8974, %r8758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8979, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8981, %r8979, %r8769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8984, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8986, %r8984, %r8782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8989, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8991, %r8989, %r8793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8994, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8996, %r8994, %r8804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8999, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9001, %r8999, %r8815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9004, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9006, %r9004, %r8828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9009, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9011, %r9009, %r8839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9014, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9016, %r9014, %r8850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9019, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9021, %r9019, %r8861;
	// end inline asm
	// begin inline asm
	mov.b32 %r9029, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9040, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9026, %r867, %r2452, %r9029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9030, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9031, %r9029, %r9030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9034, %r9026, %r9031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9037, %r878, %r2452, %r9040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9041, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9042, %r9040, %r9041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9045, %r9037, %r9042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9048, %r867, %r2474, %r9029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9052, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9053, %r9029, %r9052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9056, %r9048, %r9053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9059, %r878, %r2474, %r9040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9063, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9064, %r9040, %r9063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9067, %r9059, %r9064;
	// end inline asm
	// begin inline asm
	mov.b32 %r9075, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9086, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9072, %r867, %r2498, %r9075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9076, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9077, %r9075, %r9076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9080, %r9072, %r9077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9083, %r878, %r2498, %r9086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9087, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9088, %r9086, %r9087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9091, %r9083, %r9088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9094, %r867, %r2520, %r9075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9098, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9099, %r9075, %r9098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9102, %r9094, %r9099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9105, %r878, %r2520, %r9086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9109, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9110, %r9086, %r9109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9113, %r9105, %r9110;
	// end inline asm
	// begin inline asm
	mov.b32 %r9121, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9132, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9118, %r867, %r2544, %r9121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9122, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9123, %r9121, %r9122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9126, %r9118, %r9123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9129, %r878, %r2544, %r9132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9133, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9134, %r9132, %r9133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9137, %r9129, %r9134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9140, %r867, %r2566, %r9121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9144, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9145, %r9121, %r9144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9148, %r9140, %r9145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9151, %r878, %r2566, %r9132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9155, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9156, %r9132, %r9155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9159, %r9151, %r9156;
	// end inline asm
	// begin inline asm
	mov.b32 %r9167, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9178, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9164, %r867, %r2590, %r9167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9168, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9169, %r9167, %r9168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9172, %r9164, %r9169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9175, %r878, %r2590, %r9178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9179, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9180, %r9178, %r9179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9183, %r9175, %r9180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9186, %r867, %r2612, %r9167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9190, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9191, %r9167, %r9190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9194, %r9186, %r9191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9197, %r878, %r2612, %r9178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9201, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9202, %r9178, %r9201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9205, %r9197, %r9202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9213, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9224, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9210, %r867, %r2636, %r9213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9214, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9215, %r9213, %r9214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9218, %r9210, %r9215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9221, %r878, %r2636, %r9224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9225, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9226, %r9224, %r9225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9229, %r9221, %r9226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9232, %r867, %r2658, %r9213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9236, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9237, %r9213, %r9236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9240, %r9232, %r9237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9243, %r878, %r2658, %r9224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9247, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9248, %r9224, %r9247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9251, %r9243, %r9248;
	// end inline asm
	// begin inline asm
	mov.b32 %r9259, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9270, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9256, %r867, %r2682, %r9259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9260, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9261, %r9259, %r9260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9264, %r9256, %r9261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9267, %r878, %r2682, %r9270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9271, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9272, %r9270, %r9271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9275, %r9267, %r9272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9278, %r867, %r2704, %r9259, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9282, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9283, %r9259, %r9282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9286, %r9278, %r9283;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9289, %r878, %r2704, %r9270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9293, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9294, %r9270, %r9293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9297, %r9289, %r9294;
	// end inline asm
	// begin inline asm
	mov.b32 %r9305, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9316, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9302, %r867, %r2728, %r9305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9306, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9307, %r9305, %r9306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9310, %r9302, %r9307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9313, %r878, %r2728, %r9316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9317, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9318, %r9316, %r9317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9321, %r9313, %r9318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9324, %r867, %r2750, %r9305, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9328, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9329, %r9305, %r9328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9332, %r9324, %r9329;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9335, %r878, %r2750, %r9316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9339, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9340, %r9316, %r9339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9343, %r9335, %r9340;
	// end inline asm
	// begin inline asm
	mov.b32 %r9351, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9362, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9348, %r867, %r2774, %r9351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9352, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9353, %r9351, %r9352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9356, %r9348, %r9353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9359, %r878, %r2774, %r9362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9363, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9364, %r9362, %r9363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9367, %r9359, %r9364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9370, %r867, %r2796, %r9351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9374, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9375, %r9351, %r9374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9378, %r9370, %r9375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9381, %r878, %r2796, %r9362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9385, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9386, %r9362, %r9385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9389, %r9381, %r9386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r250, %r9034, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r250, %r9045, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r250, %r9056, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r250, %r9067, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r250, %r9080, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r250, %r9091, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r250, %r9102, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r250, %r9113, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r250, %r9126, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r250, %r9137, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r250, %r9148, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r250, %r9159, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r250, %r9172, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r250, %r9183, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r250, %r9194, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r250, %r9205, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r281, %r9218, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r281, %r9229, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r281, %r9240, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r281, %r9251, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9472, %r281, %r9264, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9476, %r281, %r9275, %r8971;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9480, %r281, %r9286, %r8976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9484, %r281, %r9297, %r8981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9488, %r281, %r9310, %r8986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9492, %r281, %r9321, %r8991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9496, %r281, %r9332, %r8996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9500, %r281, %r9343, %r9001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9504, %r281, %r9356, %r9006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9508, %r281, %r9367, %r9011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9512, %r281, %r9378, %r9016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9516, %r281, %r9389, %r9021;
	// end inline asm
	// begin inline asm
	mov.b32 %r9525, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9536, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9522, %r867, %r868, %r9525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9526, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9527, %r9525, %r9526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9530, %r9522, %r9527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9533, %r878, %r868, %r9536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9537, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9538, %r9536, %r9537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9541, %r9533, %r9538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9544, %r867, %r890, %r9525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9548, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9549, %r9525, %r9548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9552, %r9544, %r9549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9555, %r878, %r890, %r9536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9559, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9560, %r9536, %r9559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9563, %r9555, %r9560;
	// end inline asm
	// begin inline asm
	mov.b32 %r9571, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9582, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9568, %r867, %r914, %r9571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9572, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9573, %r9571, %r9572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9576, %r9568, %r9573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9579, %r878, %r914, %r9582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9583, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9584, %r9582, %r9583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9587, %r9579, %r9584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9590, %r867, %r936, %r9571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9594, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9595, %r9571, %r9594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9598, %r9590, %r9595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9601, %r878, %r936, %r9582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9605, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9606, %r9582, %r9605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9609, %r9601, %r9606;
	// end inline asm
	// begin inline asm
	mov.b32 %r9617, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9628, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9614, %r867, %r960, %r9617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9618, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9619, %r9617, %r9618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9622, %r9614, %r9619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9625, %r878, %r960, %r9628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9629, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9630, %r9628, %r9629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9633, %r9625, %r9630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9636, %r867, %r982, %r9617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9640, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9641, %r9617, %r9640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9644, %r9636, %r9641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9647, %r878, %r982, %r9628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9651, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9652, %r9628, %r9651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9655, %r9647, %r9652;
	// end inline asm
	// begin inline asm
	mov.b32 %r9663, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9674, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9660, %r867, %r1006, %r9663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9664, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9665, %r9663, %r9664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9668, %r9660, %r9665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9671, %r878, %r1006, %r9674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9675, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9676, %r9674, %r9675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9679, %r9671, %r9676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9682, %r867, %r1028, %r9663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9686, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9687, %r9663, %r9686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9690, %r9682, %r9687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9693, %r878, %r1028, %r9674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9697, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9698, %r9674, %r9697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9701, %r9693, %r9698;
	// end inline asm
	// begin inline asm
	mov.b32 %r9709, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9720, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9706, %r867, %r1052, %r9709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9710, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9711, %r9709, %r9710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9714, %r9706, %r9711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9717, %r878, %r1052, %r9720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9721, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9722, %r9720, %r9721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9725, %r9717, %r9722;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9728, %r867, %r1074, %r9709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9732, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9733, %r9709, %r9732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9736, %r9728, %r9733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9739, %r878, %r1074, %r9720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9743, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9744, %r9720, %r9743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9747, %r9739, %r9744;
	// end inline asm
	// begin inline asm
	mov.b32 %r9755, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9766, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9752, %r867, %r1098, %r9755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9756, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9757, %r9755, %r9756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9760, %r9752, %r9757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9763, %r878, %r1098, %r9766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9767, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9768, %r9766, %r9767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9771, %r9763, %r9768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9774, %r867, %r1120, %r9755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9778, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9779, %r9755, %r9778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9782, %r9774, %r9779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9785, %r878, %r1120, %r9766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9789, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9790, %r9766, %r9789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9793, %r9785, %r9790;
	// end inline asm
	// begin inline asm
	mov.b32 %r9801, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9812, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9798, %r867, %r1144, %r9801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9802, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9803, %r9801, %r9802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9806, %r9798, %r9803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9809, %r878, %r1144, %r9812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9813, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9814, %r9812, %r9813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9817, %r9809, %r9814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9820, %r867, %r1166, %r9801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9824, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9825, %r9801, %r9824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9828, %r9820, %r9825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9831, %r878, %r1166, %r9812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9835, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9836, %r9812, %r9835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9839, %r9831, %r9836;
	// end inline asm
	// begin inline asm
	mov.b32 %r9847, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r9858, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9844, %r867, %r1190, %r9847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9848, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9849, %r9847, %r9848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9852, %r9844, %r9849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9855, %r878, %r1190, %r9858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9859, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9860, %r9858, %r9859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9863, %r9855, %r9860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9866, %r867, %r1212, %r9847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9870, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9871, %r9847, %r9870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9874, %r9866, %r9871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9877, %r878, %r1212, %r9858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9881, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9882, %r9858, %r9881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9885, %r9877, %r9882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9888, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9890, %r9888, %r9530, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9894, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9896, %r9894, %r9541, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9900, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9902, %r9900, %r9552, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9906, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9908, %r9906, %r9563, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9912, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9914, %r9912, %r9576, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9918, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9920, %r9918, %r9587, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9924, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9926, %r9924, %r9598, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9930, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9932, %r9930, %r9609, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9936, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9938, %r9936, %r9622, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9942, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9944, %r9942, %r9633, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9948, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9950, %r9948, %r9644, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9954, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9956, %r9954, %r9655, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9960, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9962, %r9960, %r9668, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9966, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9968, %r9966, %r9679, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9972, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9974, %r9972, %r9690, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9978, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9980, %r9978, %r9701, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9984, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9986, %r9984, %r9714, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9990, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9992, %r9990, %r9725, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9996, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9998, %r9996, %r9736, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10002, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10004, %r10002, %r9747, %r9468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10008, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10010, %r10008, %r9760, %r9472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10014, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10016, %r10014, %r9771, %r9476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10020, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10022, %r10020, %r9782, %r9480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10026, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10028, %r10026, %r9793, %r9484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10032, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10034, %r10032, %r9806, %r9488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10038, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10040, %r10038, %r9817, %r9492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10044, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10046, %r10044, %r9828, %r9496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10050, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10052, %r10050, %r9839, %r9500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10056, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10058, %r10056, %r9852, %r9504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10062, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10064, %r10062, %r9863, %r9508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10068, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10070, %r10068, %r9874, %r9512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10074, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10076, %r10074, %r9885, %r9516;
	// end inline asm
	// begin inline asm
	mov.b32 %r10085, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10096, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10082, %r867, %r4684, %r10085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10086, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10087, %r10085, %r10086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10090, %r10082, %r10087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10093, %r878, %r4684, %r10096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10097, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10098, %r10096, %r10097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10101, %r10093, %r10098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10104, %r867, %r4706, %r10085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10108, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10109, %r10085, %r10108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10112, %r10104, %r10109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10115, %r878, %r4706, %r10096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10119, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10120, %r10096, %r10119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10123, %r10115, %r10120;
	// end inline asm
	// begin inline asm
	mov.b32 %r10131, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10142, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10128, %r867, %r4730, %r10131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10132, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10133, %r10131, %r10132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10136, %r10128, %r10133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10139, %r878, %r4730, %r10142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10143, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10144, %r10142, %r10143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10147, %r10139, %r10144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10150, %r867, %r4752, %r10131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10154, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10155, %r10131, %r10154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10158, %r10150, %r10155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10161, %r878, %r4752, %r10142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10165, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10166, %r10142, %r10165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10169, %r10161, %r10166;
	// end inline asm
	// begin inline asm
	mov.b32 %r10177, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10188, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10174, %r867, %r4776, %r10177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10178, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10179, %r10177, %r10178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10182, %r10174, %r10179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10185, %r878, %r4776, %r10188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10189, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10190, %r10188, %r10189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10193, %r10185, %r10190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10196, %r867, %r4798, %r10177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10200, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10201, %r10177, %r10200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10204, %r10196, %r10201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10207, %r878, %r4798, %r10188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10211, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10212, %r10188, %r10211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10215, %r10207, %r10212;
	// end inline asm
	// begin inline asm
	mov.b32 %r10223, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10234, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10220, %r867, %r4822, %r10223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10224, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10225, %r10223, %r10224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10228, %r10220, %r10225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10231, %r878, %r4822, %r10234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10235, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10236, %r10234, %r10235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10239, %r10231, %r10236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10242, %r867, %r4844, %r10223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10246, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10247, %r10223, %r10246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10250, %r10242, %r10247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10253, %r878, %r4844, %r10234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10257, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10258, %r10234, %r10257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10261, %r10253, %r10258;
	// end inline asm
	// begin inline asm
	mov.b32 %r10269, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10280, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10266, %r867, %r4868, %r10269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10270, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10271, %r10269, %r10270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10274, %r10266, %r10271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10277, %r878, %r4868, %r10280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10281, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10282, %r10280, %r10281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10285, %r10277, %r10282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10288, %r867, %r4890, %r10269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10292, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10293, %r10269, %r10292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10296, %r10288, %r10293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10299, %r878, %r4890, %r10280, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10303, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10304, %r10280, %r10303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10307, %r10299, %r10304;
	// end inline asm
	// begin inline asm
	mov.b32 %r10315, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10326, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10312, %r867, %r4914, %r10315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10316, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10317, %r10315, %r10316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10320, %r10312, %r10317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10323, %r878, %r4914, %r10326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10327, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10328, %r10326, %r10327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10331, %r10323, %r10328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10334, %r867, %r4936, %r10315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10338, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10339, %r10315, %r10338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10342, %r10334, %r10339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10345, %r878, %r4936, %r10326, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10349, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10350, %r10326, %r10349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10353, %r10345, %r10350;
	// end inline asm
	// begin inline asm
	mov.b32 %r10361, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10372, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10358, %r867, %r4960, %r10361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10362, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10363, %r10361, %r10362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10366, %r10358, %r10363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10369, %r878, %r4960, %r10372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10373, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10374, %r10372, %r10373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10377, %r10369, %r10374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10380, %r867, %r4982, %r10361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10384, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10385, %r10361, %r10384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10388, %r10380, %r10385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10391, %r878, %r4982, %r10372, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10395, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10396, %r10372, %r10395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10399, %r10391, %r10396;
	// end inline asm
	// begin inline asm
	mov.b32 %r10407, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r10418, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10404, %r867, %r5006, %r10407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10408, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10409, %r10407, %r10408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10412, %r10404, %r10409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10415, %r878, %r5006, %r10418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10419, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10420, %r10418, %r10419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10423, %r10415, %r10420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10426, %r867, %r5028, %r10407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10430, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10431, %r10407, %r10430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10434, %r10426, %r10431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10437, %r878, %r5028, %r10418, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10441, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10442, %r10418, %r10441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10445, %r10437, %r10442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10583, %r374, %r10090, %r9890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r374, %r10101, %r9896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r374, %r10112, %r9902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r374, %r10123, %r9908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r374, %r10136, %r9914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r374, %r10147, %r9920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r374, %r10158, %r9926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r374, %r10169, %r9932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r374, %r10182, %r9938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r374, %r10193, %r9944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r374, %r10204, %r9950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r374, %r10215, %r9956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r374, %r10228, %r9962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r374, %r10239, %r9968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10646, %r374, %r10250, %r9974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r374, %r10261, %r9980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r405, %r10274, %r9986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r405, %r10285, %r9992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10664, %r405, %r10296, %r9998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r405, %r10307, %r10004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r405, %r10320, %r10010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r405, %r10331, %r10016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10682, %r405, %r10342, %r10022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r405, %r10353, %r10028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r405, %r10366, %r10034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r405, %r10377, %r10040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r405, %r10388, %r10046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r405, %r10399, %r10052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10709, %r405, %r10412, %r10058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r405, %r10423, %r10064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r405, %r10434, %r10070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r405, %r10445, %r10076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10576, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10578, %r10576, %r10580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10581, %r470, %r10583, %r10578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10585, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10587, %r10585, %r10589;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10590, %r470, %r10592, %r10587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10594, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10596, %r10594, %r10598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r470, %r10601, %r10596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10603, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10605, %r10603, %r10607;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r470, %r10610, %r10605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10612, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10614, %r10612, %r10616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r470, %r10619, %r10614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10621, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10623, %r10621, %r10625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r470, %r10628, %r10623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10630, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10632, %r10630, %r10634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r470, %r10637, %r10632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10639, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10641, %r10639, %r10643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r470, %r10646, %r10641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10648, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10650, %r10648, %r10652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r473, %r10655, %r10650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10657, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10659, %r10657, %r10661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r473, %r10664, %r10659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10666, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10668, %r10666, %r10670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10671, %r473, %r10673, %r10668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10675, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r10675, %r10679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r473, %r10682, %r10677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10684, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10686, %r10684, %r10688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10689, %r473, %r10691, %r10686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10693, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r10693, %r10697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r473, %r10700, %r10695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10702, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10704, %r10702, %r10706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r473, %r10709, %r10704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10711, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10713, %r10711, %r10715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10716, %r473, %r10718, %r10713;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10720, %r476, %r10583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r470, %r10580, %r10720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r476, %r10592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r470, %r10589, %r10727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10734, %r476, %r10601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10737, %r470, %r10598, %r10734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10741, %r476, %r10610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10744, %r470, %r10607, %r10741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10748, %r476, %r10619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10751, %r470, %r10616, %r10748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10755, %r476, %r10628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10758, %r470, %r10625, %r10755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10762, %r476, %r10637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10765, %r470, %r10634, %r10762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10769, %r476, %r10646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10772, %r470, %r10643, %r10769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10776, %r479, %r10655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10779, %r473, %r10652, %r10776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10783, %r479, %r10664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10786, %r473, %r10661, %r10783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10790, %r479, %r10673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10793, %r473, %r10670, %r10790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10797, %r479, %r10682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10800, %r473, %r10679, %r10797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10804, %r479, %r10691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10807, %r473, %r10688, %r10804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10811, %r479, %r10700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10814, %r473, %r10697, %r10811;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10818, %r479, %r10709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10821, %r473, %r10706, %r10818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10825, %r479, %r10718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10828, %r473, %r10715, %r10825;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10999, %r10996}, {%r482, %r488, %r485, %r491}, {%r10581, %r10723}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11008, %r11005}, {%r482, %r488, %r485, %r491}, {%r10590, %r10730}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11017, %r11014}, {%r482, %r488, %r485, %r491}, {%r10599, %r10737}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11026, %r11023}, {%r482, %r488, %r485, %r491}, {%r10608, %r10744}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11035, %r11032}, {%r482, %r488, %r485, %r491}, {%r10617, %r10751}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11044, %r11041}, {%r482, %r488, %r485, %r491}, {%r10626, %r10758}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11053, %r11050}, {%r482, %r488, %r485, %r491}, {%r10635, %r10765}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11062, %r11059}, {%r482, %r488, %r485, %r491}, {%r10644, %r10772}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11071, %r11068}, {%r482, %r488, %r485, %r491}, {%r10653, %r10779}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11080, %r11077}, {%r482, %r488, %r485, %r491}, {%r10662, %r10786}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11089, %r11086}, {%r482, %r488, %r485, %r491}, {%r10671, %r10793}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11098, %r11095}, {%r482, %r488, %r485, %r491}, {%r10680, %r10800}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11107, %r11104}, {%r482, %r488, %r485, %r491}, {%r10689, %r10807}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11116, %r11113}, {%r482, %r488, %r485, %r491}, {%r10698, %r10814}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11125, %r11122}, {%r482, %r488, %r485, %r491}, {%r10707, %r10821}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11134, %r11131}, {%r482, %r488, %r485, %r491}, {%r10716, %r10828}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10992, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10994, %r10992, %r10996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10997, %r494, %r10999, %r10994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11001, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11003, %r11001, %r11005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11006, %r494, %r11008, %r11003;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11010, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11012, %r11010, %r11014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11015, %r494, %r11017, %r11012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11019, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11021, %r11019, %r11023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11024, %r494, %r11026, %r11021;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11028, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11030, %r11028, %r11032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11033, %r494, %r11035, %r11030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11037, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11039, %r11037, %r11041;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11042, %r494, %r11044, %r11039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11046, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11048, %r11046, %r11050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11051, %r494, %r11053, %r11048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11055, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11057, %r11055, %r11059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11060, %r494, %r11062, %r11057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11064, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11066, %r11064, %r11068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11069, %r494, %r11071, %r11066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11073, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11075, %r11073, %r11077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11078, %r494, %r11080, %r11075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11082, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11084, %r11082, %r11086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11087, %r494, %r11089, %r11084;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11091, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r11091, %r11095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r494, %r11098, %r11093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11100, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11102, %r11100, %r11104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11105, %r494, %r11107, %r11102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11109, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r11109, %r11113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r494, %r11116, %r11111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11118, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11120, %r11118, %r11122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11123, %r494, %r11125, %r11120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11127, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11129, %r11127, %r11131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11132, %r494, %r11134, %r11129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11136, %r497, %r10999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11139, %r494, %r10996, %r11136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r497, %r11008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r494, %r11005, %r11143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11150, %r497, %r11017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11153, %r494, %r11014, %r11150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11157, %r497, %r11026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11160, %r494, %r11023, %r11157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11164, %r497, %r11035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11167, %r494, %r11032, %r11164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11171, %r497, %r11044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11174, %r494, %r11041, %r11171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11178, %r497, %r11053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11181, %r494, %r11050, %r11178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11185, %r497, %r11062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11188, %r494, %r11059, %r11185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11192, %r497, %r11071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11195, %r494, %r11068, %r11192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11199, %r497, %r11080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11202, %r494, %r11077, %r11199;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11206, %r497, %r11089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11209, %r494, %r11086, %r11206;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11213, %r497, %r11098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11216, %r494, %r11095, %r11213;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11220, %r497, %r11107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11223, %r494, %r11104, %r11220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11227, %r497, %r11116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11230, %r494, %r11113, %r11227;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11234, %r497, %r11125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11237, %r494, %r11122, %r11234;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11241, %r497, %r11134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11244, %r494, %r11131, %r11241;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11537, %r11540}, {%r500, %r506, %r503, %r509}, {%r10997, %r11139}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11543, %r11546}, {%r500, %r506, %r503, %r509}, {%r11006, %r11146}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11549, %r11552}, {%r500, %r506, %r503, %r509}, {%r11015, %r11153}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11555, %r11558}, {%r500, %r506, %r503, %r509}, {%r11024, %r11160}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11561, %r11564}, {%r500, %r506, %r503, %r509}, {%r11033, %r11167}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11567, %r11570}, {%r500, %r506, %r503, %r509}, {%r11042, %r11174}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11573, %r11576}, {%r500, %r506, %r503, %r509}, {%r11051, %r11181}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11579, %r11582}, {%r500, %r506, %r503, %r509}, {%r11060, %r11188}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11538, %r11541}, {%r500, %r506, %r503, %r509}, {%r11069, %r11195}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11544, %r11547}, {%r500, %r506, %r503, %r509}, {%r11078, %r11202}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11550, %r11553}, {%r500, %r506, %r503, %r509}, {%r11087, %r11209}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11556, %r11559}, {%r500, %r506, %r503, %r509}, {%r11096, %r11216}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11562, %r11565}, {%r500, %r506, %r503, %r509}, {%r11105, %r11223}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11568, %r11571}, {%r500, %r506, %r503, %r509}, {%r11114, %r11230}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11574, %r11577}, {%r500, %r506, %r503, %r509}, {%r11123, %r11237}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11580, %r11583}, {%r500, %r506, %r503, %r509}, {%r11132, %r11244}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11536, %r11537, %r11538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11539, %r11540, %r11541;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11542, %r11543, %r11544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11545, %r11546, %r11547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11548, %r11549, %r11550;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11551, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11554, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11557, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11560, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11563, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11566, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11569, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11572, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11575, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11578, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11581, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11584, %r11537, %r11538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11587, %r11540, %r11541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11590, %r11543, %r11544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11593, %r11546, %r11547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11596, %r11549, %r11550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11599, %r11552, %r11553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11602, %r11555, %r11556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11605, %r11558, %r11559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11608, %r11561, %r11562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11611, %r11564, %r11565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11614, %r11567, %r11568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11617, %r11570, %r11571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11620, %r11573, %r11574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11623, %r11576, %r11577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11626, %r11579, %r11580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11629, %r11582, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r144, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r144, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r144, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r144, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r144, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r144, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11650, %r144, %r11554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11653, %r144, %r11557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11656, %r144, %r11560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11659, %r144, %r11563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11662, %r144, %r11566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11665, %r144, %r11569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11668, %r144, %r11572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11671, %r144, %r11575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11674, %r144, %r11578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11677, %r144, %r11581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11680, %r145, %r11584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11683, %r145, %r11587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11686, %r145, %r11590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11689, %r145, %r11593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11692, %r145, %r11596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11695, %r145, %r11599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11698, %r145, %r11602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11701, %r145, %r11605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11704, %r145, %r11608;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11707, %r145, %r11611;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11710, %r145, %r11614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11713, %r145, %r11617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11716, %r145, %r11620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11719, %r145, %r11623;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11722, %r145, %r11626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11725, %r145, %r11629;
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11729, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11730, %r11632, %r11728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11733, %r11730, %r11729;
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11737, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11738, %r11635, %r11736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11741, %r11738, %r11737;
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11745, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11746, %r11638, %r11744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11749, %r11746, %r11745;
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11753, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11754, %r11641, %r11752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11757, %r11754, %r11753;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11644, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11647, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11650, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11653, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11656, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11659, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11662, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11665, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11668, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11671, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11674, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11677, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11680, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11683, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11686, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11689, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11692, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11695, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11906, %r11698, %r11904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11909, %r11906, %r11905;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11913, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11914, %r11701, %r11912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11917, %r11914, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11922, %r11704, %r11920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11925, %r11922, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11929, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11930, %r11707, %r11928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11933, %r11930, %r11929;
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11938, %r11710, %r11936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11941, %r11938, %r11937;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11945, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11946, %r11713, %r11944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11949, %r11946, %r11945;
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11953, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11954, %r11716, %r11952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11957, %r11954, %r11953;
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11961, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11962, %r11719, %r11960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11965, %r11962, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11969, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11970, %r11722, %r11968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11973, %r11970, %r11969;
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r11977, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11978, %r11725, %r11976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11981, %r11978, %r11977;
	// end inline asm
	// begin inline asm
	mov.b32 %r11987, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11987, %r11985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11989, %r11733, %r11986;
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11987, %r11992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11996, %r11741, %r11993;
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11987, %r11999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12003, %r11749, %r12000;
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11987, %r12006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12010, %r11757, %r12007;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12013, %r11989, %r12003, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12017, %r11996, %r12010, %r4384;
	// end inline asm
	shl.b32 	%r12024, %r12017, 4;
	// begin inline asm
	lop3.b32 %r12021, %r4390, %r12013, %r12024, 202;
	// end inline asm
	xor.b32  	%r16229, %r12021, -2004318072;
	// begin inline asm
	mov.b32 %r12028, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12026, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r12028, %r12026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12030, %r11765, %r12027;
	// end inline asm
	// begin inline asm
	mov.b32 %r12033, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r12028, %r12033;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12037, %r11773, %r12034;
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r12028, %r12040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12044, %r11781, %r12041;
	// end inline asm
	// begin inline asm
	mov.b32 %r12047, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r12028, %r12047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12051, %r11789, %r12048;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12054, %r12030, %r12044, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12058, %r12037, %r12051, %r4384;
	// end inline asm
	shl.b32 	%r12065, %r12058, 4;
	// begin inline asm
	lop3.b32 %r12062, %r4390, %r12054, %r12065, 202;
	// end inline asm
	xor.b32  	%r16230, %r12062, -2004318072;
	// begin inline asm
	mov.b32 %r12069, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12067, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r12069, %r12067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12071, %r11797, %r12068;
	// end inline asm
	// begin inline asm
	mov.b32 %r12074, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r12069, %r12074;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12078, %r11805, %r12075;
	// end inline asm
	// begin inline asm
	mov.b32 %r12081, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r12069, %r12081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12085, %r11813, %r12082;
	// end inline asm
	// begin inline asm
	mov.b32 %r12088, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r12069, %r12088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12092, %r11821, %r12089;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12095, %r12071, %r12085, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12099, %r12078, %r12092, %r4384;
	// end inline asm
	shl.b32 	%r12106, %r12099, 4;
	// begin inline asm
	lop3.b32 %r12103, %r4390, %r12095, %r12106, 202;
	// end inline asm
	xor.b32  	%r16231, %r12103, -2004318072;
	// begin inline asm
	mov.b32 %r12110, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12108, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r12110, %r12108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12112, %r11829, %r12109;
	// end inline asm
	// begin inline asm
	mov.b32 %r12115, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r12110, %r12115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12119, %r11837, %r12116;
	// end inline asm
	// begin inline asm
	mov.b32 %r12122, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r12110, %r12122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12126, %r11845, %r12123;
	// end inline asm
	// begin inline asm
	mov.b32 %r12129, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r12110, %r12129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12133, %r11853, %r12130;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12136, %r12112, %r12126, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12140, %r12119, %r12133, %r4384;
	// end inline asm
	shl.b32 	%r12147, %r12140, 4;
	// begin inline asm
	lop3.b32 %r12144, %r4390, %r12136, %r12147, 202;
	// end inline asm
	xor.b32  	%r16232, %r12144, -2004318072;
	// begin inline asm
	mov.b32 %r12151, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12149, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r12151, %r12149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12153, %r11861, %r12150;
	// end inline asm
	// begin inline asm
	mov.b32 %r12156, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r12151, %r12156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12160, %r11869, %r12157;
	// end inline asm
	// begin inline asm
	mov.b32 %r12163, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r12151, %r12163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12167, %r11877, %r12164;
	// end inline asm
	// begin inline asm
	mov.b32 %r12170, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r12151, %r12170;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12174, %r11885, %r12171;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12177, %r12153, %r12167, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12181, %r12160, %r12174, %r4384;
	// end inline asm
	shl.b32 	%r12188, %r12181, 4;
	// begin inline asm
	lop3.b32 %r12185, %r4390, %r12177, %r12188, 202;
	// end inline asm
	xor.b32  	%r16233, %r12185, -2004318072;
	// begin inline asm
	mov.b32 %r12192, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12190, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r12192, %r12190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12194, %r11893, %r12191;
	// end inline asm
	// begin inline asm
	mov.b32 %r12197, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r12192, %r12197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12201, %r11901, %r12198;
	// end inline asm
	// begin inline asm
	mov.b32 %r12204, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r12192, %r12204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12208, %r11909, %r12205;
	// end inline asm
	// begin inline asm
	mov.b32 %r12211, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r12192, %r12211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12215, %r11917, %r12212;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12218, %r12194, %r12208, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12222, %r12201, %r12215, %r4384;
	// end inline asm
	shl.b32 	%r12229, %r12222, 4;
	// begin inline asm
	lop3.b32 %r12226, %r4390, %r12218, %r12229, 202;
	// end inline asm
	xor.b32  	%r16234, %r12226, -2004318072;
	// begin inline asm
	mov.b32 %r12233, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12231, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r12233, %r12231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12235, %r11925, %r12232;
	// end inline asm
	// begin inline asm
	mov.b32 %r12238, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12239, %r12233, %r12238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12242, %r11933, %r12239;
	// end inline asm
	// begin inline asm
	mov.b32 %r12245, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12246, %r12233, %r12245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12249, %r11941, %r12246;
	// end inline asm
	// begin inline asm
	mov.b32 %r12252, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12253, %r12233, %r12252;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12256, %r11949, %r12253;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12259, %r12235, %r12249, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12263, %r12242, %r12256, %r4384;
	// end inline asm
	shl.b32 	%r12270, %r12263, 4;
	// begin inline asm
	lop3.b32 %r12267, %r4390, %r12259, %r12270, 202;
	// end inline asm
	xor.b32  	%r16235, %r12267, -2004318072;
	// begin inline asm
	mov.b32 %r12274, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12274, %r12272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r11957, %r12273;
	// end inline asm
	// begin inline asm
	mov.b32 %r12279, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r12274, %r12279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12283, %r11965, %r12280;
	// end inline asm
	// begin inline asm
	mov.b32 %r12286, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r12274, %r12286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12290, %r11973, %r12287;
	// end inline asm
	// begin inline asm
	mov.b32 %r12293, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12294, %r12274, %r12293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12297, %r11981, %r12294;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12300, %r12276, %r12290, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12304, %r12283, %r12297, %r4384;
	// end inline asm
	shl.b32 	%r12311, %r12304, 4;
	// begin inline asm
	lop3.b32 %r12308, %r4390, %r12300, %r12311, 202;
	// end inline asm
	xor.b32  	%r16236, %r12308, -2004318072;
	st.shared.u32 	[%rd95], %r16229;
	st.shared.u32 	[%rd97], %r16230;
	st.shared.u32 	[%rd99], %r16231;
	st.shared.u32 	[%rd101], %r16232;
	st.shared.u32 	[%rd103], %r16233;
	st.shared.u32 	[%rd105], %r16234;
	st.shared.u32 	[%rd107], %r16235;
	st.shared.u32 	[%rd109], %r16236;
	ld.shared.u32 	%r16348, [%rd79];
	ld.shared.u32 	%r16349, [%rd81];
	ld.shared.u32 	%r16350, [%rd83];
	ld.shared.u32 	%r16351, [%rd85];
	ld.shared.u32 	%r16360, [%rd87];
	ld.shared.u32 	%r16361, [%rd89];
	ld.shared.u32 	%r16362, [%rd91];
	ld.shared.u32 	%r16363, [%rd93];
	// begin inline asm
	mov.b32 %r12317, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12328, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12316, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r12314, %r867, %r12316, %r12317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12318, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12319, %r12317, %r12318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12322, %r12314, %r12319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12325, %r878, %r12316, %r12328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12329, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12330, %r12328, %r12329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12333, %r12325, %r12330;
	// end inline asm
	shr.u32 	%r12338, %r12316, 8;
	// begin inline asm
	lop3.b32 %r12336, %r867, %r12338, %r12317, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12340, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12341, %r12317, %r12340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12344, %r12336, %r12341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12347, %r878, %r12338, %r12328, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12351, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12352, %r12328, %r12351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12355, %r12347, %r12352;
	// end inline asm
	// begin inline asm
	mov.b32 %r12363, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12374, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12362, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r12360, %r867, %r12362, %r12363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12364, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12365, %r12363, %r12364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12368, %r12360, %r12365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12371, %r878, %r12362, %r12374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12375, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12376, %r12374, %r12375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12379, %r12371, %r12376;
	// end inline asm
	shr.u32 	%r12384, %r12362, 8;
	// begin inline asm
	lop3.b32 %r12382, %r867, %r12384, %r12363, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12386, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12387, %r12363, %r12386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12390, %r12382, %r12387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12393, %r878, %r12384, %r12374, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12397, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12398, %r12374, %r12397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12401, %r12393, %r12398;
	// end inline asm
	// begin inline asm
	mov.b32 %r12409, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12420, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12408, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r12406, %r867, %r12408, %r12409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12410, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12411, %r12409, %r12410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12414, %r12406, %r12411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12417, %r878, %r12408, %r12420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12421, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12422, %r12420, %r12421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12425, %r12417, %r12422;
	// end inline asm
	shr.u32 	%r12430, %r12408, 8;
	// begin inline asm
	lop3.b32 %r12428, %r867, %r12430, %r12409, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12432, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12433, %r12409, %r12432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12436, %r12428, %r12433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12439, %r878, %r12430, %r12420, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12443, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12444, %r12420, %r12443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12447, %r12439, %r12444;
	// end inline asm
	// begin inline asm
	mov.b32 %r12455, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12466, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12454, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r12452, %r867, %r12454, %r12455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12456, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12457, %r12455, %r12456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12460, %r12452, %r12457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12463, %r878, %r12454, %r12466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12467, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12468, %r12466, %r12467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12471, %r12463, %r12468;
	// end inline asm
	shr.u32 	%r12476, %r12454, 8;
	// begin inline asm
	lop3.b32 %r12474, %r867, %r12476, %r12455, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12478, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12479, %r12455, %r12478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12482, %r12474, %r12479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12485, %r878, %r12476, %r12466, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12489, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12490, %r12466, %r12489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12493, %r12485, %r12490;
	// end inline asm
	// begin inline asm
	mov.b32 %r12501, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12512, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12500, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r12498, %r867, %r12500, %r12501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12502, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12503, %r12501, %r12502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12506, %r12498, %r12503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12509, %r878, %r12500, %r12512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12513, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12514, %r12512, %r12513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12517, %r12509, %r12514;
	// end inline asm
	shr.u32 	%r12522, %r12500, 8;
	// begin inline asm
	lop3.b32 %r12520, %r867, %r12522, %r12501, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12524, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12525, %r12501, %r12524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12528, %r12520, %r12525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12531, %r878, %r12522, %r12512, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12535, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12536, %r12512, %r12535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12539, %r12531, %r12536;
	// end inline asm
	// begin inline asm
	mov.b32 %r12547, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12558, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12546, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r12544, %r867, %r12546, %r12547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12548, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12549, %r12547, %r12548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12552, %r12544, %r12549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12555, %r878, %r12546, %r12558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12559, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12560, %r12558, %r12559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12563, %r12555, %r12560;
	// end inline asm
	shr.u32 	%r12568, %r12546, 8;
	// begin inline asm
	lop3.b32 %r12566, %r867, %r12568, %r12547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12570, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12571, %r12547, %r12570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12574, %r12566, %r12571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12577, %r878, %r12568, %r12558, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12581, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12582, %r12558, %r12581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12585, %r12577, %r12582;
	// end inline asm
	// begin inline asm
	mov.b32 %r12593, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12604, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12592, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r12590, %r867, %r12592, %r12593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12594, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12595, %r12593, %r12594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12598, %r12590, %r12595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12601, %r878, %r12592, %r12604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12605, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12606, %r12604, %r12605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12609, %r12601, %r12606;
	// end inline asm
	shr.u32 	%r12614, %r12592, 8;
	// begin inline asm
	lop3.b32 %r12612, %r867, %r12614, %r12593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12616, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12617, %r12593, %r12616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12620, %r12612, %r12617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12623, %r878, %r12614, %r12604, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12627, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12628, %r12604, %r12627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12631, %r12623, %r12628;
	// end inline asm
	// begin inline asm
	mov.b32 %r12639, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12650, {%rs2180, %rs2180};
	// end inline asm
	xor.b32  	%r12638, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r12636, %r867, %r12638, %r12639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12640, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12641, %r12639, %r12640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12644, %r12636, %r12641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12647, %r878, %r12638, %r12650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12651, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12652, %r12650, %r12651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12655, %r12647, %r12652;
	// end inline asm
	shr.u32 	%r12660, %r12638, 8;
	// begin inline asm
	lop3.b32 %r12658, %r867, %r12660, %r12639, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12662, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12663, %r12639, %r12662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12666, %r12658, %r12663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12669, %r878, %r12660, %r12650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12673, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12674, %r12650, %r12673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12677, %r12669, %r12674;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12790, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12792, %r12790, %r12574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12795, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12797, %r12795, %r12585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12800, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12802, %r12800, %r12598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12805, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12807, %r12805, %r12609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12810, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12812, %r12810, %r12620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12815, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12817, %r12815, %r12631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12820, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12822, %r12820, %r12644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12825, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12827, %r12825, %r12655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12830, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12832, %r12830, %r12666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12835, %r467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12837, %r12835, %r12677;
	// end inline asm
	// begin inline asm
	mov.b32 %r12845, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12856, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12842, %r867, %r868, %r12845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12846, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12847, %r12845, %r12846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12850, %r12842, %r12847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12853, %r878, %r868, %r12856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12857, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12858, %r12856, %r12857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12861, %r12853, %r12858;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12864, %r867, %r890, %r12845, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12868, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12869, %r12845, %r12868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12872, %r12864, %r12869;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12875, %r878, %r890, %r12856, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12879, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12880, %r12856, %r12879;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12883, %r12875, %r12880;
	// end inline asm
	// begin inline asm
	mov.b32 %r12891, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12902, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12888, %r867, %r914, %r12891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12892, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12893, %r12891, %r12892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12896, %r12888, %r12893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12899, %r878, %r914, %r12902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12903, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12904, %r12902, %r12903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12907, %r12899, %r12904;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12910, %r867, %r936, %r12891, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12914, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12915, %r12891, %r12914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12918, %r12910, %r12915;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12921, %r878, %r936, %r12902, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12925, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12926, %r12902, %r12925;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12929, %r12921, %r12926;
	// end inline asm
	// begin inline asm
	mov.b32 %r12937, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12948, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12934, %r867, %r960, %r12937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12938, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12939, %r12937, %r12938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12942, %r12934, %r12939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12945, %r878, %r960, %r12948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12949, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12950, %r12948, %r12949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12953, %r12945, %r12950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12956, %r867, %r982, %r12937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12960, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12961, %r12937, %r12960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12964, %r12956, %r12961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12967, %r878, %r982, %r12948, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12971, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12972, %r12948, %r12971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12975, %r12967, %r12972;
	// end inline asm
	// begin inline asm
	mov.b32 %r12983, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r12994, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12980, %r867, %r1006, %r12983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12984, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12985, %r12983, %r12984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12988, %r12980, %r12985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12991, %r878, %r1006, %r12994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12995, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12996, %r12994, %r12995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12999, %r12991, %r12996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13002, %r867, %r1028, %r12983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13006, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13007, %r12983, %r13006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13010, %r13002, %r13007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13013, %r878, %r1028, %r12994, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13017, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13018, %r12994, %r13017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13021, %r13013, %r13018;
	// end inline asm
	// begin inline asm
	mov.b32 %r13029, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13040, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13026, %r867, %r1052, %r13029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13030, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13031, %r13029, %r13030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13034, %r13026, %r13031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13037, %r878, %r1052, %r13040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13041, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13042, %r13040, %r13041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13045, %r13037, %r13042;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13048, %r867, %r1074, %r13029, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13052, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13053, %r13029, %r13052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13056, %r13048, %r13053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13059, %r878, %r1074, %r13040, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13063, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13064, %r13040, %r13063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13067, %r13059, %r13064;
	// end inline asm
	// begin inline asm
	mov.b32 %r13075, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13086, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13072, %r867, %r1098, %r13075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13076, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13077, %r13075, %r13076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13080, %r13072, %r13077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13083, %r878, %r1098, %r13086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13087, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13088, %r13086, %r13087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13091, %r13083, %r13088;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13094, %r867, %r1120, %r13075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13098, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13099, %r13075, %r13098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13102, %r13094, %r13099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13105, %r878, %r1120, %r13086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13109, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13110, %r13086, %r13109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13113, %r13105, %r13110;
	// end inline asm
	// begin inline asm
	mov.b32 %r13121, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13132, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13118, %r867, %r1144, %r13121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13122, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13123, %r13121, %r13122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13126, %r13118, %r13123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13129, %r878, %r1144, %r13132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13133, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13134, %r13132, %r13133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13137, %r13129, %r13134;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13140, %r867, %r1166, %r13121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13144, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13145, %r13121, %r13144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13148, %r13140, %r13145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13151, %r878, %r1166, %r13132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13155, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13156, %r13132, %r13155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13159, %r13151, %r13156;
	// end inline asm
	// begin inline asm
	mov.b32 %r13167, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13178, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13164, %r867, %r1190, %r13167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13168, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13169, %r13167, %r13168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13172, %r13164, %r13169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13175, %r878, %r1190, %r13178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13179, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13180, %r13178, %r13179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13183, %r13175, %r13180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13186, %r867, %r1212, %r13167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13190, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13191, %r13167, %r13190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13194, %r13186, %r13191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13197, %r878, %r1212, %r13178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13201, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13202, %r13178, %r13201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13205, %r13197, %r13202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r250, %r12850, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r250, %r12861, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r250, %r12872, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r250, %r12883, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r250, %r12896, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r250, %r12907, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r250, %r12918, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r250, %r12929, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r250, %r12942, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r250, %r12953, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r250, %r12964, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r250, %r12975, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r250, %r12988, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r250, %r12999, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r250, %r13010, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r250, %r13021, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r281, %r13034, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r281, %r13045, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r281, %r13056, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r281, %r13067, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13288, %r281, %r13080, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13292, %r281, %r13091, %r12787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13296, %r281, %r13102, %r12792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13300, %r281, %r13113, %r12797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13304, %r281, %r13126, %r12802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13308, %r281, %r13137, %r12807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13312, %r281, %r13148, %r12812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13316, %r281, %r13159, %r12817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13320, %r281, %r13172, %r12822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13324, %r281, %r13183, %r12827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13328, %r281, %r13194, %r12832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13332, %r281, %r13205, %r12837;
	// end inline asm
	// begin inline asm
	mov.b32 %r13341, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13352, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13338, %r867, %r4684, %r13341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13342, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13343, %r13341, %r13342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13346, %r13338, %r13343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13349, %r878, %r4684, %r13352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13353, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13354, %r13352, %r13353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13357, %r13349, %r13354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13360, %r867, %r4706, %r13341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13364, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13365, %r13341, %r13364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13368, %r13360, %r13365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13371, %r878, %r4706, %r13352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13375, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13376, %r13352, %r13375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13379, %r13371, %r13376;
	// end inline asm
	// begin inline asm
	mov.b32 %r13387, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13398, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13384, %r867, %r4730, %r13387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13388, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13389, %r13387, %r13388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13392, %r13384, %r13389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13395, %r878, %r4730, %r13398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13399, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13400, %r13398, %r13399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13403, %r13395, %r13400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13406, %r867, %r4752, %r13387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13410, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13411, %r13387, %r13410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13414, %r13406, %r13411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13417, %r878, %r4752, %r13398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13421, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13422, %r13398, %r13421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13425, %r13417, %r13422;
	// end inline asm
	// begin inline asm
	mov.b32 %r13433, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13444, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13430, %r867, %r4776, %r13433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13434, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13435, %r13433, %r13434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13438, %r13430, %r13435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13441, %r878, %r4776, %r13444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13445, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13446, %r13444, %r13445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13449, %r13441, %r13446;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13452, %r867, %r4798, %r13433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13456, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13457, %r13433, %r13456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13460, %r13452, %r13457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13463, %r878, %r4798, %r13444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13467, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13468, %r13444, %r13467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13471, %r13463, %r13468;
	// end inline asm
	// begin inline asm
	mov.b32 %r13479, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13490, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13476, %r867, %r4822, %r13479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13480, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13481, %r13479, %r13480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13484, %r13476, %r13481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13487, %r878, %r4822, %r13490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13491, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13492, %r13490, %r13491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13495, %r13487, %r13492;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13498, %r867, %r4844, %r13479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13502, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13503, %r13479, %r13502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13506, %r13498, %r13503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13509, %r878, %r4844, %r13490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13513, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13514, %r13490, %r13513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13517, %r13509, %r13514;
	// end inline asm
	// begin inline asm
	mov.b32 %r13525, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13536, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13522, %r867, %r4868, %r13525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13526, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13527, %r13525, %r13526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13530, %r13522, %r13527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13533, %r878, %r4868, %r13536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13537, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13538, %r13536, %r13537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13541, %r13533, %r13538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13544, %r867, %r4890, %r13525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13548, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13549, %r13525, %r13548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13552, %r13544, %r13549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13555, %r878, %r4890, %r13536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13559, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13560, %r13536, %r13559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13563, %r13555, %r13560;
	// end inline asm
	// begin inline asm
	mov.b32 %r13571, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13582, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13568, %r867, %r4914, %r13571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13572, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13573, %r13571, %r13572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13576, %r13568, %r13573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13579, %r878, %r4914, %r13582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13583, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13584, %r13582, %r13583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13587, %r13579, %r13584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13590, %r867, %r4936, %r13571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13594, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13595, %r13571, %r13594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13598, %r13590, %r13595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13601, %r878, %r4936, %r13582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13605, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13606, %r13582, %r13605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13609, %r13601, %r13606;
	// end inline asm
	// begin inline asm
	mov.b32 %r13617, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13628, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13614, %r867, %r4960, %r13617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13618, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13619, %r13617, %r13618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13622, %r13614, %r13619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13625, %r878, %r4960, %r13628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13629, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13630, %r13628, %r13629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13633, %r13625, %r13630;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13636, %r867, %r4982, %r13617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13640, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13641, %r13617, %r13640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13644, %r13636, %r13641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13647, %r878, %r4982, %r13628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13651, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13652, %r13628, %r13651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13655, %r13647, %r13652;
	// end inline asm
	// begin inline asm
	mov.b32 %r13663, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13674, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13660, %r867, %r5006, %r13663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13664, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13665, %r13663, %r13664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13668, %r13660, %r13665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13671, %r878, %r5006, %r13674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13675, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13676, %r13674, %r13675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13679, %r13671, %r13676;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13682, %r867, %r5028, %r13663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13686, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13687, %r13663, %r13686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13690, %r13682, %r13687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13693, %r878, %r5028, %r13674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13697, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13698, %r13674, %r13697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13701, %r13693, %r13698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13704, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13706, %r13704, %r13346, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13710, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13712, %r13710, %r13357, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13716, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13718, %r13716, %r13368, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13722, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13724, %r13722, %r13379, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13728, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13730, %r13728, %r13392, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13734, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13736, %r13734, %r13403, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13740, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13742, %r13740, %r13414, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13746, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13748, %r13746, %r13425, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13752, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13754, %r13752, %r13438, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13758, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13760, %r13758, %r13449, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13764, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13766, %r13764, %r13460, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13770, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13772, %r13770, %r13471, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13776, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13778, %r13776, %r13484, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13782, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13784, %r13782, %r13495, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13788, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13790, %r13788, %r13506, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13794, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13796, %r13794, %r13517, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13800, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13802, %r13800, %r13530, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13806, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13808, %r13806, %r13541, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13812, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13814, %r13812, %r13552, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13818, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13820, %r13818, %r13563, %r13284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13824, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13826, %r13824, %r13576, %r13288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13830, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13832, %r13830, %r13587, %r13292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13836, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13838, %r13836, %r13598, %r13296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13842, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13844, %r13842, %r13609, %r13300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13848, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13850, %r13848, %r13622, %r13304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13854, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13856, %r13854, %r13633, %r13308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13860, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13862, %r13860, %r13644, %r13312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13866, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13868, %r13866, %r13655, %r13316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13872, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13874, %r13872, %r13668, %r13320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13878, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13880, %r13878, %r13679, %r13324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13884, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13886, %r13884, %r13690, %r13328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13890, %r343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13892, %r13890, %r13701, %r13332;
	// end inline asm
	// begin inline asm
	mov.b32 %r13901, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13912, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13898, %r867, %r8500, %r13901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13902, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13903, %r13901, %r13902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13906, %r13898, %r13903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13909, %r878, %r8500, %r13912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13913, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13914, %r13912, %r13913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13917, %r13909, %r13914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13920, %r867, %r8522, %r13901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13924, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13925, %r13901, %r13924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13928, %r13920, %r13925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13931, %r878, %r8522, %r13912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13935, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13936, %r13912, %r13935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13939, %r13931, %r13936;
	// end inline asm
	// begin inline asm
	mov.b32 %r13947, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r13958, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13944, %r867, %r8546, %r13947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13948, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13949, %r13947, %r13948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13952, %r13944, %r13949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13955, %r878, %r8546, %r13958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13959, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13960, %r13958, %r13959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13963, %r13955, %r13960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13966, %r867, %r8568, %r13947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13970, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13971, %r13947, %r13970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13974, %r13966, %r13971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13977, %r878, %r8568, %r13958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13981, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13982, %r13958, %r13981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13985, %r13977, %r13982;
	// end inline asm
	// begin inline asm
	mov.b32 %r13993, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r14004, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13990, %r867, %r8592, %r13993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13994, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13995, %r13993, %r13994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13998, %r13990, %r13995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14001, %r878, %r8592, %r14004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14005, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14006, %r14004, %r14005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14009, %r14001, %r14006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14012, %r867, %r8614, %r13993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14016, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14017, %r13993, %r14016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14020, %r14012, %r14017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14023, %r878, %r8614, %r14004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14027, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14028, %r14004, %r14027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14031, %r14023, %r14028;
	// end inline asm
	// begin inline asm
	mov.b32 %r14039, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r14050, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14036, %r867, %r8638, %r14039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14040, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14041, %r14039, %r14040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14044, %r14036, %r14041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14047, %r878, %r8638, %r14050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14051, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14052, %r14050, %r14051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14055, %r14047, %r14052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14058, %r867, %r8660, %r14039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14062, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14063, %r14039, %r14062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14066, %r14058, %r14063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14069, %r878, %r8660, %r14050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14073, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14074, %r14050, %r14073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14077, %r14069, %r14074;
	// end inline asm
	// begin inline asm
	mov.b32 %r14085, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r14096, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14082, %r867, %r8684, %r14085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14086, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14087, %r14085, %r14086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14090, %r14082, %r14087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14093, %r878, %r8684, %r14096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14097, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14098, %r14096, %r14097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14101, %r14093, %r14098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14104, %r867, %r8706, %r14085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14108, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14109, %r14085, %r14108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14112, %r14104, %r14109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14115, %r878, %r8706, %r14096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14119, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14120, %r14096, %r14119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14123, %r14115, %r14120;
	// end inline asm
	// begin inline asm
	mov.b32 %r14131, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r14142, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14128, %r867, %r8730, %r14131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14132, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14133, %r14131, %r14132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14136, %r14128, %r14133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14139, %r878, %r8730, %r14142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14143, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14144, %r14142, %r14143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14147, %r14139, %r14144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14150, %r867, %r8752, %r14131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14154, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14155, %r14131, %r14154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14158, %r14150, %r14155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14161, %r878, %r8752, %r14142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14165, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14166, %r14142, %r14165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14169, %r14161, %r14166;
	// end inline asm
	// begin inline asm
	mov.b32 %r14177, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r14188, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14174, %r867, %r8776, %r14177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14178, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14179, %r14177, %r14178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14182, %r14174, %r14179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14185, %r878, %r8776, %r14188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14189, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14190, %r14188, %r14189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14193, %r14185, %r14190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14196, %r867, %r8798, %r14177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14200, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14201, %r14177, %r14200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14204, %r14196, %r14201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14207, %r878, %r8798, %r14188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14211, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14212, %r14188, %r14211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14215, %r14207, %r14212;
	// end inline asm
	// begin inline asm
	mov.b32 %r14223, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r14234, {%rs2180, %rs2180};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14220, %r867, %r8822, %r14223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14224, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14225, %r14223, %r14224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14228, %r14220, %r14225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14231, %r878, %r8822, %r14234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14235, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14236, %r14234, %r14235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14239, %r14231, %r14236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14242, %r867, %r8844, %r14223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14246, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14247, %r14223, %r14246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14250, %r14242, %r14247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14253, %r878, %r8844, %r14234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14257, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14258, %r14234, %r14257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14261, %r14253, %r14258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14399, %r374, %r13906, %r13706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r374, %r13917, %r13712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r374, %r13928, %r13718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r374, %r13939, %r13724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r374, %r13952, %r13730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r374, %r13963, %r13736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r374, %r13974, %r13742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r374, %r13985, %r13748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r374, %r13998, %r13754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r374, %r14009, %r13760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r374, %r14020, %r13766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r374, %r14031, %r13772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r374, %r14044, %r13778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r374, %r14055, %r13784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14462, %r374, %r14066, %r13790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r374, %r14077, %r13796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r405, %r14090, %r13802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r405, %r14101, %r13808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14480, %r405, %r14112, %r13814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r405, %r14123, %r13820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r405, %r14136, %r13826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r405, %r14147, %r13832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14498, %r405, %r14158, %r13838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r405, %r14169, %r13844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r405, %r14182, %r13850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r405, %r14193, %r13856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r405, %r14204, %r13862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r405, %r14215, %r13868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14525, %r405, %r14228, %r13874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r405, %r14239, %r13880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r405, %r14250, %r13886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r405, %r14261, %r13892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14392, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14394, %r14392, %r14396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14397, %r470, %r14399, %r14394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14401, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14403, %r14401, %r14405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14406, %r470, %r14408, %r14403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14410, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14412, %r14410, %r14414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r470, %r14417, %r14412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14419, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14421, %r14419, %r14423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r470, %r14426, %r14421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14428, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14430, %r14428, %r14432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r470, %r14435, %r14430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14437, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14439, %r14437, %r14441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r470, %r14444, %r14439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14446, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14448, %r14446, %r14450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r470, %r14453, %r14448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14455, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14457, %r14455, %r14459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r470, %r14462, %r14457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14464, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14466, %r14464, %r14468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r473, %r14471, %r14466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14473, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14475, %r14473, %r14477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r473, %r14480, %r14475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14482, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14484, %r14482, %r14486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14487, %r473, %r14489, %r14484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14491, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r14491, %r14495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r473, %r14498, %r14493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14500, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14502, %r14500, %r14504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14505, %r473, %r14507, %r14502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14509, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r14509, %r14513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r473, %r14516, %r14511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14518, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14520, %r14518, %r14522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r473, %r14525, %r14520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14527, %r479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14529, %r14527, %r14531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14532, %r473, %r14534, %r14529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14536, %r476, %r14399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r470, %r14396, %r14536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r476, %r14408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r470, %r14405, %r14543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14550, %r476, %r14417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14553, %r470, %r14414, %r14550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14557, %r476, %r14426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14560, %r470, %r14423, %r14557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14564, %r476, %r14435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14567, %r470, %r14432, %r14564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14571, %r476, %r14444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14574, %r470, %r14441, %r14571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14578, %r476, %r14453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14581, %r470, %r14450, %r14578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14585, %r476, %r14462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14588, %r470, %r14459, %r14585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14592, %r479, %r14471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14595, %r473, %r14468, %r14592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14599, %r479, %r14480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14602, %r473, %r14477, %r14599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14606, %r479, %r14489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14609, %r473, %r14486, %r14606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14613, %r479, %r14498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14616, %r473, %r14495, %r14613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14620, %r479, %r14507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14623, %r473, %r14504, %r14620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14627, %r479, %r14516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14630, %r473, %r14513, %r14627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14634, %r479, %r14525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14637, %r473, %r14522, %r14634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14641, %r479, %r14534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14644, %r473, %r14531, %r14641;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14815, %r14812}, {%r482, %r488, %r485, %r491}, {%r14397, %r14539}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14824, %r14821}, {%r482, %r488, %r485, %r491}, {%r14406, %r14546}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14833, %r14830}, {%r482, %r488, %r485, %r491}, {%r14415, %r14553}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14842, %r14839}, {%r482, %r488, %r485, %r491}, {%r14424, %r14560}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14851, %r14848}, {%r482, %r488, %r485, %r491}, {%r14433, %r14567}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14860, %r14857}, {%r482, %r488, %r485, %r491}, {%r14442, %r14574}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14869, %r14866}, {%r482, %r488, %r485, %r491}, {%r14451, %r14581}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14878, %r14875}, {%r482, %r488, %r485, %r491}, {%r14460, %r14588}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14887, %r14884}, {%r482, %r488, %r485, %r491}, {%r14469, %r14595}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14896, %r14893}, {%r482, %r488, %r485, %r491}, {%r14478, %r14602}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14905, %r14902}, {%r482, %r488, %r485, %r491}, {%r14487, %r14609}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14914, %r14911}, {%r482, %r488, %r485, %r491}, {%r14496, %r14616}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14923, %r14920}, {%r482, %r488, %r485, %r491}, {%r14505, %r14623}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14932, %r14929}, {%r482, %r488, %r485, %r491}, {%r14514, %r14630}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14941, %r14938}, {%r482, %r488, %r485, %r491}, {%r14523, %r14637}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14950, %r14947}, {%r482, %r488, %r485, %r491}, {%r14532, %r14644}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14808, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14810, %r14808, %r14812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14813, %r494, %r14815, %r14810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14817, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14819, %r14817, %r14821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14822, %r494, %r14824, %r14819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14826, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14828, %r14826, %r14830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14831, %r494, %r14833, %r14828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14835, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14837, %r14835, %r14839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14840, %r494, %r14842, %r14837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14844, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14846, %r14844, %r14848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14849, %r494, %r14851, %r14846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14853, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14855, %r14853, %r14857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14858, %r494, %r14860, %r14855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14862, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14864, %r14862, %r14866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14867, %r494, %r14869, %r14864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14871, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14873, %r14871, %r14875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14876, %r494, %r14878, %r14873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14880, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14882, %r14880, %r14884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14885, %r494, %r14887, %r14882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14889, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14891, %r14889, %r14893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14894, %r494, %r14896, %r14891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14898, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14900, %r14898, %r14902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14903, %r494, %r14905, %r14900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14907, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r14907, %r14911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r494, %r14914, %r14909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14916, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14918, %r14916, %r14920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14921, %r494, %r14923, %r14918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14925, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r14925, %r14929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r494, %r14932, %r14927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14934, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14936, %r14934, %r14938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14939, %r494, %r14941, %r14936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14943, %r497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14945, %r14943, %r14947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14948, %r494, %r14950, %r14945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14952, %r497, %r14815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14955, %r494, %r14812, %r14952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r497, %r14824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r494, %r14821, %r14959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14966, %r497, %r14833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14969, %r494, %r14830, %r14966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14973, %r497, %r14842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14976, %r494, %r14839, %r14973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14980, %r497, %r14851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14983, %r494, %r14848, %r14980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14987, %r497, %r14860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14990, %r494, %r14857, %r14987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14994, %r497, %r14869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14997, %r494, %r14866, %r14994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15001, %r497, %r14878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15004, %r494, %r14875, %r15001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15008, %r497, %r14887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15011, %r494, %r14884, %r15008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15015, %r497, %r14896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15018, %r494, %r14893, %r15015;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15022, %r497, %r14905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15025, %r494, %r14902, %r15022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15029, %r497, %r14914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15032, %r494, %r14911, %r15029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15036, %r497, %r14923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15039, %r494, %r14920, %r15036;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15043, %r497, %r14932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15046, %r494, %r14929, %r15043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15050, %r497, %r14941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15053, %r494, %r14938, %r15050;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15057, %r497, %r14950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15060, %r494, %r14947, %r15057;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15353, %r15356}, {%r500, %r506, %r503, %r509}, {%r14813, %r14955}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15359, %r15362}, {%r500, %r506, %r503, %r509}, {%r14822, %r14962}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15365, %r15368}, {%r500, %r506, %r503, %r509}, {%r14831, %r14969}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15371, %r15374}, {%r500, %r506, %r503, %r509}, {%r14840, %r14976}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15377, %r15380}, {%r500, %r506, %r503, %r509}, {%r14849, %r14983}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15383, %r15386}, {%r500, %r506, %r503, %r509}, {%r14858, %r14990}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15389, %r15392}, {%r500, %r506, %r503, %r509}, {%r14867, %r14997}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15395, %r15398}, {%r500, %r506, %r503, %r509}, {%r14876, %r15004}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15354, %r15357}, {%r500, %r506, %r503, %r509}, {%r14885, %r15011}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15360, %r15363}, {%r500, %r506, %r503, %r509}, {%r14894, %r15018}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15366, %r15369}, {%r500, %r506, %r503, %r509}, {%r14903, %r15025}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15372, %r15375}, {%r500, %r506, %r503, %r509}, {%r14912, %r15032}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15378, %r15381}, {%r500, %r506, %r503, %r509}, {%r14921, %r15039}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15384, %r15387}, {%r500, %r506, %r503, %r509}, {%r14930, %r15046}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15390, %r15393}, {%r500, %r506, %r503, %r509}, {%r14939, %r15053}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15396, %r15399}, {%r500, %r506, %r503, %r509}, {%r14948, %r15060}, {%r778, %r778};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15352, %r15353, %r15354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15355, %r15356, %r15357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15358, %r15359, %r15360;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15361, %r15362, %r15363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15364, %r15365, %r15366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15367, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15370, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15373, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15376, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15379, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15382, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15385, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15388, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15391, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15394, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15397, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15400, %r15353, %r15354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15403, %r15356, %r15357;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15406, %r15359, %r15360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15409, %r15362, %r15363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15412, %r15365, %r15366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15415, %r15368, %r15369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15418, %r15371, %r15372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15421, %r15374, %r15375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15424, %r15377, %r15378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15427, %r15380, %r15381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15430, %r15383, %r15384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15433, %r15386, %r15387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15436, %r15389, %r15390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15439, %r15392, %r15393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15442, %r15395, %r15396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15445, %r15398, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r144, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r144, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r144, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r144, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r144, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r144, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15466, %r144, %r15370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15469, %r144, %r15373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15472, %r144, %r15376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15475, %r144, %r15379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15478, %r144, %r15382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15481, %r144, %r15385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15484, %r144, %r15388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15487, %r144, %r15391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15490, %r144, %r15394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15493, %r144, %r15397;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15496, %r145, %r15400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15499, %r145, %r15403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15502, %r145, %r15406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15505, %r145, %r15409;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15508, %r145, %r15412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15511, %r145, %r15415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15514, %r145, %r15418;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15517, %r145, %r15421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15520, %r145, %r15424;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15523, %r145, %r15427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15526, %r145, %r15430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15529, %r145, %r15433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15532, %r145, %r15436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15535, %r145, %r15439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15538, %r145, %r15442;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15541, %r145, %r15445;
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15545, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15546, %r15448, %r15544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15549, %r15546, %r15545;
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15553, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15554, %r15451, %r15552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15557, %r15554, %r15553;
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15561, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15562, %r15454, %r15560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15565, %r15562, %r15561;
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15569, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15570, %r15457, %r15568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15573, %r15570, %r15569;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15460, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15463, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15466, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15469, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15472, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15475, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15478, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15481, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15484, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15487, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15490, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15493, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15496, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15499, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15502, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15505, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15508, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15511, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15722, %r15514, %r15720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15725, %r15722, %r15721;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15729, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15730, %r15517, %r15728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15733, %r15730, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15738, %r15520, %r15736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15741, %r15738, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15745, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15746, %r15523, %r15744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15749, %r15746, %r15745;
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15754, %r15526, %r15752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15757, %r15754, %r15753;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15761, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15762, %r15529, %r15760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15765, %r15762, %r15761;
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15769, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15770, %r15532, %r15768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15773, %r15770, %r15769;
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15777, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15778, %r15535, %r15776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15781, %r15778, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15785, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15786, %r15538, %r15784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15789, %r15786, %r15785;
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs2314, %rs2314};
	// end inline asm
	// begin inline asm
	mov.b32 %r15793, {%rs415, %rs415};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15794, %r15541, %r15792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15797, %r15794, %r15793;
	// end inline asm
	// begin inline asm
	mov.b32 %r15803, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15803, %r15801;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15805, %r15549, %r15802;
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15803, %r15808;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15812, %r15557, %r15809;
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15803, %r15815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15819, %r15565, %r15816;
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15803, %r15822;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15826, %r15573, %r15823;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15829, %r15805, %r15819, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15833, %r15812, %r15826, %r4384;
	// end inline asm
	shl.b32 	%r15840, %r15833, 4;
	// begin inline asm
	lop3.b32 %r15837, %r4390, %r15829, %r15840, 202;
	// end inline asm
	xor.b32  	%r16237, %r15837, -2004318072;
	// begin inline asm
	mov.b32 %r15844, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r15842, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15844, %r15842;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15846, %r15581, %r15843;
	// end inline asm
	// begin inline asm
	mov.b32 %r15849, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15844, %r15849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15853, %r15589, %r15850;
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15844, %r15856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15860, %r15597, %r15857;
	// end inline asm
	// begin inline asm
	mov.b32 %r15863, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15844, %r15863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15867, %r15605, %r15864;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15870, %r15846, %r15860, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15874, %r15853, %r15867, %r4384;
	// end inline asm
	shl.b32 	%r15881, %r15874, 4;
	// begin inline asm
	lop3.b32 %r15878, %r4390, %r15870, %r15881, 202;
	// end inline asm
	xor.b32  	%r16238, %r15878, -2004318072;
	// begin inline asm
	mov.b32 %r15885, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r15883, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15885, %r15883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15887, %r15613, %r15884;
	// end inline asm
	// begin inline asm
	mov.b32 %r15890, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15885, %r15890;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15894, %r15621, %r15891;
	// end inline asm
	// begin inline asm
	mov.b32 %r15897, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15885, %r15897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15901, %r15629, %r15898;
	// end inline asm
	// begin inline asm
	mov.b32 %r15904, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15885, %r15904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15908, %r15637, %r15905;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15911, %r15887, %r15901, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15915, %r15894, %r15908, %r4384;
	// end inline asm
	shl.b32 	%r15922, %r15915, 4;
	// begin inline asm
	lop3.b32 %r15919, %r4390, %r15911, %r15922, 202;
	// end inline asm
	xor.b32  	%r16239, %r15919, -2004318072;
	// begin inline asm
	mov.b32 %r15926, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r15924, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15926, %r15924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15928, %r15645, %r15925;
	// end inline asm
	// begin inline asm
	mov.b32 %r15931, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15926, %r15931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15935, %r15653, %r15932;
	// end inline asm
	// begin inline asm
	mov.b32 %r15938, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15926, %r15938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15942, %r15661, %r15939;
	// end inline asm
	// begin inline asm
	mov.b32 %r15945, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15926, %r15945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15949, %r15669, %r15946;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15952, %r15928, %r15942, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15956, %r15935, %r15949, %r4384;
	// end inline asm
	shl.b32 	%r15963, %r15956, 4;
	// begin inline asm
	lop3.b32 %r15960, %r4390, %r15952, %r15963, 202;
	// end inline asm
	xor.b32  	%r16240, %r15960, -2004318072;
	// begin inline asm
	mov.b32 %r15967, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r15965, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15967, %r15965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15969, %r15677, %r15966;
	// end inline asm
	// begin inline asm
	mov.b32 %r15972, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15967, %r15972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15976, %r15685, %r15973;
	// end inline asm
	// begin inline asm
	mov.b32 %r15979, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15967, %r15979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15983, %r15693, %r15980;
	// end inline asm
	// begin inline asm
	mov.b32 %r15986, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15967, %r15986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15990, %r15701, %r15987;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15993, %r15969, %r15983, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15997, %r15976, %r15990, %r4384;
	// end inline asm
	shl.b32 	%r16004, %r15997, 4;
	// begin inline asm
	lop3.b32 %r16001, %r4390, %r15993, %r16004, 202;
	// end inline asm
	xor.b32  	%r16241, %r16001, -2004318072;
	// begin inline asm
	mov.b32 %r16008, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r16006, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r16008, %r16006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16010, %r15709, %r16007;
	// end inline asm
	// begin inline asm
	mov.b32 %r16013, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r16008, %r16013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16017, %r15717, %r16014;
	// end inline asm
	// begin inline asm
	mov.b32 %r16020, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r16008, %r16020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16024, %r15725, %r16021;
	// end inline asm
	// begin inline asm
	mov.b32 %r16027, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r16008, %r16027;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16031, %r15733, %r16028;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16034, %r16010, %r16024, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16038, %r16017, %r16031, %r4384;
	// end inline asm
	shl.b32 	%r16045, %r16038, 4;
	// begin inline asm
	lop3.b32 %r16042, %r4390, %r16034, %r16045, 202;
	// end inline asm
	xor.b32  	%r16242, %r16042, -2004318072;
	// begin inline asm
	mov.b32 %r16049, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r16047, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r16049, %r16047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16051, %r15741, %r16048;
	// end inline asm
	// begin inline asm
	mov.b32 %r16054, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16055, %r16049, %r16054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16058, %r15749, %r16055;
	// end inline asm
	// begin inline asm
	mov.b32 %r16061, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16062, %r16049, %r16061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16065, %r15757, %r16062;
	// end inline asm
	// begin inline asm
	mov.b32 %r16068, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16069, %r16049, %r16068;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16072, %r15765, %r16069;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16075, %r16051, %r16065, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16079, %r16058, %r16072, %r4384;
	// end inline asm
	shl.b32 	%r16086, %r16079, 4;
	// begin inline asm
	lop3.b32 %r16083, %r4390, %r16075, %r16086, 202;
	// end inline asm
	xor.b32  	%r16243, %r16083, -2004318072;
	// begin inline asm
	mov.b32 %r16090, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	mov.b32 %r16088, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16089, %r16090, %r16088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16092, %r15773, %r16089;
	// end inline asm
	// begin inline asm
	mov.b32 %r16095, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16096, %r16090, %r16095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16099, %r15781, %r16096;
	// end inline asm
	// begin inline asm
	mov.b32 %r16102, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16103, %r16090, %r16102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16106, %r15789, %r16103;
	// end inline asm
	// begin inline asm
	mov.b32 %r16109, {%rs2396, %rs2396};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16110, %r16090, %r16109;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16113, %r15797, %r16110;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16116, %r16092, %r16106, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16120, %r16099, %r16113, %r4384;
	// end inline asm
	shl.b32 	%r16127, %r16120, 4;
	// begin inline asm
	lop3.b32 %r16124, %r4390, %r16116, %r16127, 202;
	// end inline asm
	xor.b32  	%r16244, %r16124, -2004318072;
	st.shared.u32 	[%rd95], %r16237;
	st.shared.u32 	[%rd97], %r16238;
	st.shared.u32 	[%rd99], %r16239;
	st.shared.u32 	[%rd101], %r16240;
	st.shared.u32 	[%rd103], %r16241;
	st.shared.u32 	[%rd105], %r16242;
	st.shared.u32 	[%rd107], %r16243;
	st.shared.u32 	[%rd109], %r16244;
	add.s32 	%r16389, %r16389, 128;
	setp.eq.s32 	%p301, %r16389, 256;
	@%p301 bra 	$L__BB0_65;
	bra.uni 	$L__BB0_64;
$L__BB0_65:                             // %guard_exit29785
                                        //   in Loop: Header=BB0_62 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16250, [%rd5];
	ld.shared.u32 	%r16251, [%rd6+128];
	ld.shared.u32 	%r16258, [%rd6+4];
	ld.shared.u32 	%r16259, [%rd6+132];
	ld.shared.u32 	%r16266, [%rd7];
	ld.shared.u32 	%r16267, [%rd8+128];
	ld.shared.u32 	%r16274, [%rd8+4];
	ld.shared.u32 	%r16275, [%rd8+132];
	ld.shared.u32 	%r16282, [%rd5+16644];
	ld.shared.u32 	%r16283, [%rd6+16772];
	ld.shared.u32 	%r16290, [%rd6+16648];
	ld.shared.u32 	%r16291, [%rd6+16776];
	ld.shared.u32 	%r16298, [%rd7+16644];
	ld.shared.u32 	%r16299, [%rd22];
	ld.shared.u32 	%r16306, [%rd8+16648];
	ld.shared.u32 	%r16307, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16245, %r16250, %r16251, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16249, %r16250, %r16251, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16253, %r16258, %r16259, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16257, %r16258, %r16259, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16261, %r16266, %r16267, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16265, %r16266, %r16267, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16269, %r16274, %r16275, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16273, %r16274, %r16275, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16277, %r16282, %r16283, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16281, %r16282, %r16283, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16285, %r16290, %r16291, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16289, %r16290, %r16291, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16293, %r16298, %r16299, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16297, %r16298, %r16299, %r777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16301, %r16306, %r16307, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16305, %r16306, %r16307, %r777;
	// end inline asm
	selp.b32 	%r16309, %r16249, %r16245, %p287;
	shfl.sync.bfly.b32	%r175, %r16309, 8, 31, -1;
	selp.b32 	%r16310, %r16257, %r16253, %p287;
	shfl.sync.bfly.b32	%r176, %r16310, 8, 31, -1;
	selp.b32 	%r16311, %r16265, %r16261, %p287;
	shfl.sync.bfly.b32	%r177, %r16311, 8, 31, -1;
	selp.b32 	%r16312, %r16273, %r16269, %p287;
	shfl.sync.bfly.b32	%r178, %r16312, 8, 31, -1;
	selp.b32 	%r16313, %r16281, %r16277, %p287;
	shfl.sync.bfly.b32	%r16314, %r16313, 8, 31, -1;
	selp.b32 	%r16315, %r16289, %r16285, %p287;
	shfl.sync.bfly.b32	%r16316, %r16315, 8, 31, -1;
	selp.b32 	%r16317, %r16297, %r16293, %p287;
	shfl.sync.bfly.b32	%r16318, %r16317, 8, 31, -1;
	selp.b32 	%r16319, %r16305, %r16301, %p287;
	shfl.sync.bfly.b32	%r16320, %r16319, 8, 31, -1;
	setp.lt.u32 	%p303, %r16364, 512;
	@%p303 bra 	$L__BB0_67;
// %bb.66:                              // %pass28464
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r16321, %r178, %r16273, %p287;
	selp.b32 	%r16322, %r16269, %r178, %p287;
	selp.b32 	%r16323, %r177, %r16265, %p287;
	selp.b32 	%r16324, %r16261, %r177, %p287;
	selp.b32 	%r16325, %r176, %r16257, %p287;
	selp.b32 	%r16326, %r16253, %r176, %p287;
	selp.b32 	%r16327, %r175, %r16249, %p287;
	selp.b32 	%r16328, %r16245, %r175, %p287;
	shl.b32 	%r16329, %r16364, 8;
	or.b32  	%r16330, %r16329, %r51;
	cvt.s64.s32 	%rd110, %r16330;
	add.s64 	%rd111, %rd110, %rd9;
	shr.u64 	%rd112, %rd111, 41;
	add.s64 	%rd113, %rd111, %rd112;
	shr.s64 	%rd114, %rd113, 23;
	setp.lt.s64 	%p305, %rd111, 0;
	and.b64  	%rd115, %rd113, -8388608;
	setp.ne.s64 	%p306, %rd115, %rd111;
	and.pred  	%p307, %p305, %p306;
	selp.u64 	%rd116, 1, 0, %p307;
	sub.s64 	%rd117, %rd116, %rd114;
	shl.b64 	%rd118, %rd117, 23;
	add.s64 	%rd119, %rd118, %rd111;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd121, %rd3, %rd120;
	st.global.v4.u32 	[%rd121], {%r16328, %r16326, %r16327, %r16325};
	or.b32  	%r16331, %r52, %r16329;
	cvt.u64.u32 	%rd122, %r16331;
	add.s64 	%rd123, %rd122, %rd9;
	shr.u64 	%rd124, %rd123, 41;
	add.s64 	%rd125, %rd123, %rd124;
	shr.u64 	%rd126, %rd125, 23;
	shr.u64 	%rd127, %rd123, 63;
	sub.s64 	%rd128, %rd127, %rd126;
	shl.b64 	%rd129, %rd128, 23;
	add.s64 	%rd130, %rd129, %rd123;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd3, %rd131;
	st.global.v4.u32 	[%rd132], {%r16324, %r16322, %r16323, %r16321};
$L__BB0_67:                             // %pass28626
                                        //   in Loop: Header=BB0_62 Depth=1
	or.b32  	%r166, %r16364, 128;
	setp.lt.u32 	%p308, %r166, 384;
	@%p308 bra 	$L__BB0_68;
// %bb.80:                              // %pass28678
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r179, %r16277, %r16314, %p287;
	selp.b32 	%r180, %r16314, %r16281, %p287;
	selp.b32 	%r181, %r16285, %r16316, %p287;
	selp.b32 	%r182, %r16316, %r16289, %p287;
	selp.b32 	%r183, %r16293, %r16318, %p287;
	selp.b32 	%r184, %r16318, %r16297, %p287;
	selp.b32 	%r185, %r16301, %r16320, %p287;
	selp.b32 	%r186, %r16320, %r16305, %p287;
	shl.b32 	%r16332, %r166, 8;
	or.b32  	%r16333, %r16332, %r51;
	cvt.s64.s32 	%rd133, %r16333;
	add.s64 	%rd134, %rd133, %rd9;
	shr.u64 	%rd135, %rd134, 41;
	add.s64 	%rd136, %rd134, %rd135;
	shr.s64 	%rd137, %rd136, 23;
	setp.lt.s64 	%p309, %rd134, 0;
	and.b64  	%rd138, %rd136, -8388608;
	setp.ne.s64 	%p310, %rd138, %rd134;
	and.pred  	%p311, %p309, %p310;
	selp.u64 	%rd139, 1, 0, %p311;
	sub.s64 	%rd140, %rd139, %rd137;
	shl.b64 	%rd141, %rd140, 23;
	add.s64 	%rd142, %rd141, %rd134;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd3, %rd143;
	st.global.v4.u32 	[%rd144], {%r179, %r181, %r180, %r182};
	or.b32  	%r16334, %r52, %r16332;
	cvt.u64.u32 	%rd145, %r16334;
	add.s64 	%rd146, %rd145, %rd9;
	shr.u64 	%rd147, %rd146, 41;
	add.s64 	%rd148, %rd146, %rd147;
	shr.u64 	%rd149, %rd148, 23;
	shr.u64 	%rd150, %rd146, 63;
	sub.s64 	%rd151, %rd150, %rd149;
	shl.b64 	%rd152, %rd151, 23;
	add.s64 	%rd153, %rd152, %rd146;
	shl.b64 	%rd154, %rd153, 2;
	add.s64 	%rd155, %rd3, %rd154;
	st.global.v4.u32 	[%rd155], {%r183, %r185, %r184, %r186};
	bra.uni 	$L__BB0_68;
$L__BB0_69:                             // %L70808
	mov.u32 	%r16335, 0;
	st.global.u32 	[%rd4], %r16335;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r16337, 2;
	st.global.u32 	[%rd4], %r16337;
	mov.u64 	%rd158, exception5818;
	cvta.global.u64 	%rd159, %rd158;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd159;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r187;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16336, 3;
	st.global.u32 	[%rd4], %r16336;
	mov.u64 	%rd156, exception5818;
	cvta.global.u64 	%rd157, %rd156;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd157;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r187;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd28, exception1;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r187;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
