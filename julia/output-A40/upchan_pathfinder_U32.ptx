// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2069[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception12089[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<237>;
	.reg .b16 	%rs<302>;
	.reg .b32 	%r<2625>;
	.reg .f32 	%f<847>;
	.reg .b64 	%rd<153>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r147, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r154, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r154, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd39, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r148, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r155, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r156, %r155, %r4;
	or.b32  	%r157, %r156, %r2;
	mul.wide.u32 	%rd45, %r157, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r158, 1;
	st.global.u32 	[%rd4], %r158;
	setp.gt.u32 	%p2, %r148, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r149, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r149, %r148;
	setp.gt.s32 	%p4, %r149, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r150, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r159, %r149, %r148;
	and.b32  	%r160, %r159, 255;
	setp.ne.s32 	%p6, %r160, 0;
	setp.gt.u32 	%p7, %r150, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r151, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r151, %r150;
	setp.gt.s32 	%p10, %r151, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r161, %r151, %r150;
	add.s32 	%r162, %r161, 3;
	and.b32  	%r163, %r162, 7;
	setp.eq.s32 	%p12, %r163, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r152, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r152, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r153, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r152, %r153;
	setp.lt.s32 	%p15, %r153, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass168
	bfe.u32 	%r84, %r4, 1, 1;
	and.b32  	%r85, %r4, 1;
	bfe.u32 	%r86, %r4, 2, 1;
	shl.b32 	%r169, %r86, 1;
	shl.b32 	%r170, %r85, 2;
	shl.b32 	%r171, %r84, 3;
	or.b32  	%r172, %r170, %r171;
	or.b32  	%r173, %r169, %r172;
	shr.u32 	%r87, %r4, 4;
	or.b32  	%r88, %r87, %r173;
	or.b32  	%r89, %r88, 16;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f42FE0000;
	div.approx.f32 	%f86, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r88;
	sub.f32 	%f151, %f150, %f86;
	mov.f32 	%f180, 0f42000000;
	div.approx.f32 	%f88, %f151, %f180;
	setp.ne.f32 	%p22, %f88, 0f00000000;
	mov.f32 	%f822, 0f3F800000;
	mov.f32 	%f815, %f822;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L580
	sin.approx.f32 	%f181, %f88;
	div.approx.f32 	%f815, %f181, %f88;
$L__BB0_13:                             // %L583
	cvt.rn.f32.s32 	%f184, %r89;
	sub.f32 	%f185, %f184, %f86;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f816, %f822;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L600
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f816, %f215, %f5;
$L__BB0_15:                             // %L603
	or.b32  	%r191, %r88, 32;
	or.b32  	%r6, %r88, 48;
	cvt.rn.f32.s32 	%f219, %r191;
	sub.f32 	%f220, %f219, %f86;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f817, %f822;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L682
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f817, %f250, %f9;
$L__BB0_17:                             // %L685
	cvt.rn.f32.s32 	%f253, %r6;
	sub.f32 	%f254, %f253, %f86;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f818, %f822;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L702
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f818, %f284, %f14;
$L__BB0_19:                             // %L705
	or.b32  	%r209, %r88, 64;
	or.b32  	%r8, %r88, 80;
	cvt.rn.f32.s32 	%f288, %r209;
	sub.f32 	%f289, %f288, %f86;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f819, %f822;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L784
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f819, %f319, %f18;
$L__BB0_21:                             // %L787
	cvt.rn.f32.s32 	%f322, %r8;
	sub.f32 	%f323, %f322, %f86;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f820, %f822;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L804
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f820, %f353, %f23;
$L__BB0_23:                             // %L807
	or.b32  	%r227, %r88, 96;
	or.b32  	%r10, %r88, 112;
	cvt.rn.f32.s32 	%f357, %r227;
	sub.f32 	%f358, %f357, %f86;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f821, %f822;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L886
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f821, %f388, %f27;
$L__BB0_25:                             // %L889
	shr.u32 	%r83, %r4, 1;
	cvt.rn.f32.s32 	%f391, %r10;
	sub.f32 	%f392, %f391, %f86;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L906
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f822, %f422, %f32;
$L__BB0_27:                             // %L909
	shr.u32 	%r14, %r4, 3;
	and.b32  	%r271, %r14, 2;
	and.b32  	%r272, %r83, 4;
	or.b32  	%r15, %r86, %r271;
	or.b32  	%r16, %r15, %r272;
	and.b32  	%r273, %r4, 3;
	mul.lo.s32 	%r274, %r273, %r16;
	shl.b32 	%r275, %r274, 1;
	neg.s32 	%r276, %r275;
	cvt.rn.f32.s32 	%f493, %r276;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f837, %f35;
	setp.lt.f32 	%p79, %f837, 0f40000000;
	@%p79 bra 	$L__BB0_98;
// %bb.28:
	setp.gtu.f32 	%p80, %f837, 0f4B800000;
	@%p80 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_29;
$L__BB0_94:
	mov.b32 	%r91, %f837;
	and.b32  	%r277, %r91, 8388607;
	or.b32  	%r2612, %r277, 1065353216;
	mov.b32 	%f836, %r2612;
	add.s32 	%r278, %r91, -1073741824;
	and.b32  	%r2613, %r278, -8388608;
	setp.eq.s32 	%p86, %r2613, 0;
	@%p86 bra 	$L__BB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i649.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_96:                             // %__nv_fmaf_rn.exit4.i.i.i649
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r279, %r2613, 192937984;
	add.s32 	%r280, %r2612, %r279;
	mov.b32 	%f505, %r280;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f836, %f505, %f511;
	sub.s32 	%r2613, %r2613, %r279;
	mov.b32 	%r2612, %f836;
	setp.ne.s32 	%p87, %r2613, 0;
	setp.ne.s32 	%p88, %r2612, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_96;
$L__BB0_97:                             // %__internal_fmodf_slowpath_mod.exit.i.i651
	setp.gt.u32 	%p90, %r91, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f513, %f836, 0f34000000;
	mul.f32 	%f837, %f512, %f513;
	bra.uni 	$L__BB0_98;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i628
	div.approx.f32 	%f496, %f837, %f148;
	cvt.rzi.f32.f32 	%f835, %f496;
	fma.rn.f32 	%f90, %f835, 0fC0000000, %f837;
	mov.b32 	%r90, %f90;
	setp.lt.u32 	%p81, %r90, 1073741824;
	@%p81 bra 	$L__BB0_93;
// %bb.30:
	setp.lt.u32 	%p82, %r90, -2147483647;
	@%p82 bra 	$L__BB0_91;
// %bb.31:
	add.f32 	%f501, %f835, 0fBF800000;
	setp.lt.f32 	%p85, %f90, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f835, %f502, %f501, %p85;
	bra.uni 	$L__BB0_93;
$L__BB0_91:
	add.f32 	%f835, %f835, 0f3F800000;
	setp.ltu.f32 	%p83, %f90, 0f40800000;
	@%p83 bra 	$L__BB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i632
	add.f32 	%f497, %f835, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f90;
	setp.ge.f32 	%p84, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f835, %f500, %f497, %p84;
$L__BB0_93:                             // %__internal_fmodf_fastpath_quot.exit.i.i635
	fma.rn.f32 	%f837, %f835, 0fC0000000, %f837;
$L__BB0_98:                             // %__internal_fmodf_kernel.exit.i654
	shl.b32 	%r75, %r4, 1;
	abs.f32 	%f514, %f837;
	setp.gtu.f32 	%p91, %f514, 0f7F800000;
	@%p91 bra 	$L__BB0_100;
// %bb.99:
	mov.b32 	%r281, %f35;
	and.b32  	%r282, %r281, -2147483648;
	mov.b32 	%r283, %f837;
	or.b32  	%r284, %r282, %r283;
	mov.b32 	%f837, %r284;
$L__BB0_100:                            // %__nv_fmodf.exit655
	and.b32  	%r293, %r75, 6;
	mov.u32 	%r294, -8;
	sub.s32 	%r295, %r294, %r293;
	mul.lo.s32 	%r296, %r16, %r295;
	cvt.rn.f32.s32 	%f545, %r296;
	div.approx.f32 	%f106, %f545, %f494;
	abs.f32 	%f825, %f106;
	setp.lt.f32 	%p99, %f825, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f825, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r18, %f825;
	and.b32  	%r297, %r18, 8388607;
	or.b32  	%r2599, %r297, 1065353216;
	mov.b32 	%f824, %r2599;
	add.s32 	%r298, %r18, -1073741824;
	and.b32  	%r2600, %r298, -8388608;
	setp.eq.s32 	%p106, %r2600, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r299, %r2600, 192937984;
	add.s32 	%r300, %r2599, %r299;
	mov.b32 	%f557, %r300;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f824, %f557, %f563;
	sub.s32 	%r2600, %r2600, %r299;
	mov.b32 	%r2599, %f824;
	setp.ne.s32 	%p107, %r2600, 0;
	setp.ne.s32 	%p108, %r2599, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r18, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f565, %f824, 0f34000000;
	mul.f32 	%f825, %f564, %f565;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f825, %f148;
	cvt.rzi.f32.f32 	%f823, %f548;
	fma.rn.f32 	%f38, %f823, 0fC0000000, %f825;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p101, %r17, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r17, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f553, %f823, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f823, %f554, %f553, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f823, %f823, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f823, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f823, %f552, %f549, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f825, %f823, 0fC0000000, %f825;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f566, %f825;
	setp.gtu.f32 	%p111, %f566, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r301, %f106;
	and.b32  	%r302, %r301, -2147483648;
	mov.b32 	%r303, %f825;
	or.b32  	%r304, %r302, %r303;
	mov.b32 	%f825, %r304;
$L__BB0_45:                             // %__nv_fmodf.exit
	shl.b32 	%r325, %r84, 1;
	neg.s32 	%r29, %r325;
	mul.lo.s32 	%r30, %r29, %r16;
	cvt.rn.f32.s32 	%f599, %r30;
	div.approx.f32 	%f52, %f599, %f180;
	abs.f32 	%f841, %f52;
	setp.lt.f32 	%p119, %f841, 0f40000000;
	@%p119 bra 	$L__BB0_108;
// %bb.46:
	setp.gtu.f32 	%p120, %f841, 0f4B800000;
	@%p120 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_47;
$L__BB0_104:
	mov.b32 	%r99, %f841;
	and.b32  	%r326, %r99, 8388607;
	or.b32  	%r2614, %r326, 1065353216;
	mov.b32 	%f840, %r2614;
	add.s32 	%r327, %r99, -1073741824;
	and.b32  	%r2615, %r327, -8388608;
	setp.eq.s32 	%p126, %r2615, 0;
	@%p126 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i680.preheader
	mov.f32 	%f610, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f609,%f610;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i680
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r328, %r2615, 192937984;
	add.s32 	%r329, %r2614, %r328;
	mov.b32 	%f611, %r329;
	mul.f32 	%f612, %f609, %f611;
	sub.f32 	%f613, %f611, %f612;
	fma.rn.f32 	%f614, %f613, %f609, %f612;
	sub.f32 	%f615, %f611, %f614;
	fma.rz.f32 	%f616, %f615, %f609, %f614;
	cvt.rzi.f32.f32 	%f617, %f616;
	sub.f32 	%f840, %f611, %f617;
	sub.s32 	%r2615, %r2615, %r328;
	mov.b32 	%r2614, %f840;
	setp.ne.s32 	%p127, %r2615, 0;
	setp.ne.s32 	%p128, %r2614, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i682
	setp.gt.u32 	%p130, %r99, 2139095039;
	selp.f32 	%f618, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f619, %f840, 0f34000000;
	mul.f32 	%f841, %f618, %f619;
	bra.uni 	$L__BB0_108;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i659
	div.approx.f32 	%f602, %f841, %f148;
	cvt.rzi.f32.f32 	%f839, %f602;
	fma.rn.f32 	%f109, %f839, 0fC0000000, %f841;
	mov.b32 	%r98, %f109;
	setp.lt.u32 	%p121, %r98, 1073741824;
	@%p121 bra 	$L__BB0_103;
// %bb.48:
	setp.lt.u32 	%p122, %r98, -2147483647;
	@%p122 bra 	$L__BB0_101;
// %bb.49:
	add.f32 	%f607, %f839, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f608, %f607, 0fBF800000;
	selp.f32 	%f839, %f608, %f607, %p125;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f839, %f839, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i663
	add.f32 	%f603, %f839, 0f3F800000;
	fma.rn.f32 	%f605, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f605, 0f00000000;
	add.f32 	%f606, %f603, 0f3F800000;
	selp.f32 	%f839, %f606, %f603, %p124;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i666
	fma.rn.f32 	%f841, %f839, 0fC0000000, %f841;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i685
	abs.f32 	%f620, %f841;
	setp.gtu.f32 	%p131, %f620, 0f7F800000;
	@%p131 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r330, %f52;
	and.b32  	%r331, %r330, -2147483648;
	mov.b32 	%r332, %f841;
	or.b32  	%r333, %r331, %r332;
	mov.b32 	%f841, %r333;
$L__BB0_110:                            // %__nv_fmodf.exit686
	shl.b32 	%r342, %r16, 2;
	sub.s32 	%r343, %r30, %r342;
	cvt.rn.f32.s32 	%f651, %r343;
	div.approx.f32 	%f125, %f651, %f180;
	abs.f32 	%f829, %f125;
	setp.lt.f32 	%p139, %f829, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f829, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r32, %f829;
	and.b32  	%r344, %r32, 8388607;
	or.b32  	%r2601, %r344, 1065353216;
	mov.b32 	%f828, %r2601;
	add.s32 	%r345, %r32, -1073741824;
	and.b32  	%r2602, %r345, -8388608;
	setp.eq.s32 	%p146, %r2602, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i587.preheader
	mov.f32 	%f662, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f661,%f662;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i587
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r346, %r2602, 192937984;
	add.s32 	%r347, %r2601, %r346;
	mov.b32 	%f663, %r347;
	mul.f32 	%f664, %f661, %f663;
	sub.f32 	%f665, %f663, %f664;
	fma.rn.f32 	%f666, %f665, %f661, %f664;
	sub.f32 	%f667, %f663, %f666;
	fma.rz.f32 	%f668, %f667, %f661, %f666;
	cvt.rzi.f32.f32 	%f669, %f668;
	sub.f32 	%f828, %f663, %f669;
	sub.s32 	%r2602, %r2602, %r346;
	mov.b32 	%r2601, %f828;
	setp.ne.s32 	%p147, %r2602, 0;
	setp.ne.s32 	%p148, %r2601, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i589
	setp.gt.u32 	%p150, %r32, 2139095039;
	selp.f32 	%f670, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f671, %f828, 0f34000000;
	mul.f32 	%f829, %f670, %f671;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i566
	div.approx.f32 	%f654, %f829, %f148;
	cvt.rzi.f32.f32 	%f827, %f654;
	fma.rn.f32 	%f55, %f827, 0fC0000000, %f829;
	mov.b32 	%r31, %f55;
	setp.lt.u32 	%p141, %r31, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r31, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f659, %f827, 0fBF800000;
	setp.lt.f32 	%p145, %f55, 0fC0000000;
	add.f32 	%f660, %f659, 0fBF800000;
	selp.f32 	%f827, %f660, %f659, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f827, %f827, 0f3F800000;
	setp.ltu.f32 	%p143, %f55, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i570
	add.f32 	%f655, %f827, 0f3F800000;
	fma.rn.f32 	%f657, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p144, %f657, 0f00000000;
	add.f32 	%f658, %f655, 0f3F800000;
	selp.f32 	%f827, %f658, %f655, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i573
	fma.rn.f32 	%f829, %f827, 0fC0000000, %f829;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i592
	abs.f32 	%f672, %f829;
	setp.gtu.f32 	%p151, %f672, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r348, %f125;
	and.b32  	%r349, %r348, -2147483648;
	mov.b32 	%r350, %f829;
	or.b32  	%r351, %r349, %r350;
	mov.b32 	%f829, %r351;
$L__BB0_63:                             // %__nv_fmodf.exit593
	mul.lo.s32 	%r42, %r29, %r15;
	cvt.rn.f32.s32 	%f705, %r42;
	mov.f32 	%f706, 0f40800000;
	div.approx.f32 	%f69, %f705, %f706;
	abs.f32 	%f845, %f69;
	setp.lt.f32 	%p159, %f845, 0f40000000;
	@%p159 bra 	$L__BB0_118;
// %bb.64:
	setp.gtu.f32 	%p160, %f845, 0f4B800000;
	@%p160 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_65;
$L__BB0_114:
	mov.b32 	%r107, %f845;
	and.b32  	%r366, %r107, 8388607;
	or.b32  	%r2616, %r366, 1065353216;
	mov.b32 	%f844, %r2616;
	add.s32 	%r367, %r107, -1073741824;
	and.b32  	%r2617, %r367, -8388608;
	setp.eq.s32 	%p166, %r2617, 0;
	@%p166 bra 	$L__BB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i711.preheader
	mov.f32 	%f716, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// end inline asm
$L__BB0_116:                            // %__nv_fmaf_rn.exit4.i.i.i711
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r368, %r2617, 192937984;
	add.s32 	%r369, %r2616, %r368;
	mov.b32 	%f717, %r369;
	mul.f32 	%f718, %f715, %f717;
	sub.f32 	%f719, %f717, %f718;
	fma.rn.f32 	%f720, %f719, %f715, %f718;
	sub.f32 	%f721, %f717, %f720;
	fma.rz.f32 	%f722, %f721, %f715, %f720;
	cvt.rzi.f32.f32 	%f723, %f722;
	sub.f32 	%f844, %f717, %f723;
	sub.s32 	%r2617, %r2617, %r368;
	mov.b32 	%r2616, %f844;
	setp.ne.s32 	%p167, %r2617, 0;
	setp.ne.s32 	%p168, %r2616, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_116;
$L__BB0_117:                            // %__internal_fmodf_slowpath_mod.exit.i.i713
	setp.gt.u32 	%p170, %r107, 2139095039;
	selp.f32 	%f724, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f725, %f844, 0f34000000;
	mul.f32 	%f845, %f724, %f725;
	bra.uni 	$L__BB0_118;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i690
	div.approx.f32 	%f708, %f845, %f148;
	cvt.rzi.f32.f32 	%f843, %f708;
	fma.rn.f32 	%f128, %f843, 0fC0000000, %f845;
	mov.b32 	%r106, %f128;
	setp.lt.u32 	%p161, %r106, 1073741824;
	@%p161 bra 	$L__BB0_113;
// %bb.66:
	setp.lt.u32 	%p162, %r106, -2147483647;
	@%p162 bra 	$L__BB0_111;
// %bb.67:
	add.f32 	%f713, %f843, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f714, %f713, 0fBF800000;
	selp.f32 	%f843, %f714, %f713, %p165;
	bra.uni 	$L__BB0_113;
$L__BB0_111:
	add.f32 	%f843, %f843, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i694
	add.f32 	%f709, %f843, 0f3F800000;
	fma.rn.f32 	%f711, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f711, 0f00000000;
	add.f32 	%f712, %f709, 0f3F800000;
	selp.f32 	%f843, %f712, %f709, %p164;
$L__BB0_113:                            // %__internal_fmodf_fastpath_quot.exit.i.i697
	fma.rn.f32 	%f845, %f843, 0fC0000000, %f845;
$L__BB0_118:                            // %__internal_fmodf_kernel.exit.i716
	abs.f32 	%f726, %f845;
	setp.gtu.f32 	%p171, %f726, 0f7F800000;
	@%p171 bra 	$L__BB0_120;
// %bb.119:
	mov.b32 	%r370, %f69;
	and.b32  	%r371, %r370, -2147483648;
	mov.b32 	%r372, %f845;
	or.b32  	%r373, %r371, %r372;
	mov.b32 	%f845, %r373;
$L__BB0_120:                            // %__nv_fmodf.exit717
	shl.b32 	%r382, %r15, 2;
	sub.s32 	%r383, %r42, %r382;
	cvt.rn.f32.s32 	%f759, %r383;
	div.approx.f32 	%f145, %f759, %f706;
	abs.f32 	%f833, %f145;
	setp.lt.f32 	%p180, %f833, 0f40000000;
	@%p180 bra 	$L__BB0_79;
// %bb.68:
	setp.gtu.f32 	%p181, %f833, 0f4B800000;
	@%p181 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r44, %f833;
	and.b32  	%r384, %r44, 8388607;
	or.b32  	%r2603, %r384, 1065353216;
	mov.b32 	%f832, %r2603;
	add.s32 	%r385, %r44, -1073741824;
	and.b32  	%r2604, %r385, -8388608;
	setp.eq.s32 	%p187, %r2604, 0;
	@%p187 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i618.preheader
	mov.f32 	%f770, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f769,%f770;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i618
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r386, %r2604, 192937984;
	add.s32 	%r387, %r2603, %r386;
	mov.b32 	%f771, %r387;
	mul.f32 	%f772, %f769, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f773, %f769, %f772;
	sub.f32 	%f775, %f771, %f774;
	fma.rz.f32 	%f776, %f775, %f769, %f774;
	cvt.rzi.f32.f32 	%f777, %f776;
	sub.f32 	%f832, %f771, %f777;
	sub.s32 	%r2604, %r2604, %r386;
	mov.b32 	%r2603, %f832;
	setp.ne.s32 	%p188, %r2604, 0;
	setp.ne.s32 	%p189, %r2603, 0;
	and.pred  	%p190, %p188, %p189;
	@%p190 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i620
	setp.gt.u32 	%p191, %r44, 2139095039;
	selp.f32 	%f778, 0f7FFFFFFF, 0f4B800000, %p191;
	mul.f32 	%f779, %f832, 0f34000000;
	mul.f32 	%f833, %f778, %f779;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i597
	div.approx.f32 	%f762, %f833, %f148;
	cvt.rzi.f32.f32 	%f831, %f762;
	fma.rn.f32 	%f72, %f831, 0fC0000000, %f833;
	mov.b32 	%r43, %f72;
	setp.lt.u32 	%p182, %r43, 1073741824;
	@%p182 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p183, %r43, -2147483647;
	@%p183 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f767, %f831, 0fBF800000;
	setp.lt.f32 	%p186, %f72, 0fC0000000;
	add.f32 	%f768, %f767, 0fBF800000;
	selp.f32 	%f831, %f768, %f767, %p186;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f831, %f831, 0f3F800000;
	setp.ltu.f32 	%p184, %f72, 0f40800000;
	@%p184 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i601
	add.f32 	%f763, %f831, 0f3F800000;
	fma.rn.f32 	%f765, %f148, 0fC0400000, %f72;
	setp.ge.f32 	%p185, %f765, 0f00000000;
	add.f32 	%f766, %f763, 0f3F800000;
	selp.f32 	%f831, %f766, %f763, %p185;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i604
	fma.rn.f32 	%f833, %f831, 0fC0000000, %f833;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i623
	abs.f32 	%f780, %f833;
	setp.gtu.f32 	%p192, %f780, 0f7F800000;
	@%p192 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r388, %f145;
	and.b32  	%r389, %r388, -2147483648;
	mov.b32 	%r390, %f833;
	or.b32  	%r391, %r389, %r390;
	mov.b32 	%f833, %r391;
$L__BB0_81:                             // %__nv_fmodf.exit624
	setp.le.s32 	%p200, %r149, %r148;
	mov.u32 	%r2597, 0;
	@%p200 bra 	$L__BB0_90;
// %bb.82:                              // %L1415.lr.ph
	mov.f32 	%f152, 0f43010000;
	mul.lo.s32 	%r251, %r88, 31;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r261, %r251, 48;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r252, %r251, 63;
	and.b32  	%r262, %r261, 63;
	setp.gt.f32 	%p17, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p23, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p29, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p35, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p41, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p47, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p53, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p59, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r252;
	cvt.rn.f32.s32 	%f460, %r262;
	selp.f32 	%f156, %f155, %f153, %p17;
	selp.f32 	%f190, %f189, %f187, %p23;
	selp.f32 	%f225, %f224, %f222, %p29;
	selp.f32 	%f259, %f258, %f256, %p35;
	selp.f32 	%f294, %f293, %f291, %p41;
	selp.f32 	%f328, %f327, %f325, %p47;
	selp.f32 	%f363, %f362, %f360, %p53;
	selp.f32 	%f397, %f396, %f394, %p59;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f837, %f837;
	add.f32 	%f567, %f825, %f825;
	mov.b32 	%r174, %f157;
	mov.b32 	%r181, %f191;
	mov.b32 	%r192, %f226;
	mov.b32 	%r199, %f260;
	mov.b32 	%r210, %f295;
	mov.b32 	%r217, %f329;
	mov.b32 	%r228, %f364;
	mov.b32 	%r235, %f398;
	mov.b32 	%r253, %f428;
	mov.b32 	%r263, %f462;
	mov.b32 	%r285, %f515;
	mov.b32 	%r317, %f567;
	and.b32  	%r175, %r174, -2147483648;
	and.b32  	%r182, %r181, -2147483648;
	and.b32  	%r193, %r192, -2147483648;
	and.b32  	%r200, %r199, -2147483648;
	and.b32  	%r211, %r210, -2147483648;
	and.b32  	%r218, %r217, -2147483648;
	and.b32  	%r229, %r228, -2147483648;
	and.b32  	%r236, %r235, -2147483648;
	and.b32  	%r254, %r253, -2147483648;
	and.b32  	%r264, %r263, -2147483648;
	and.b32  	%r286, %r285, -2147483648;
	and.b32  	%r318, %r317, -2147483648;
	add.f32 	%f621, %f841, %f841;
	add.f32 	%f673, %f829, %f829;
	or.b32  	%r176, %r175, 1056964608;
	or.b32  	%r183, %r182, 1056964608;
	or.b32  	%r194, %r193, 1056964608;
	or.b32  	%r201, %r200, 1056964608;
	or.b32  	%r212, %r211, 1056964608;
	or.b32  	%r219, %r218, 1056964608;
	or.b32  	%r230, %r229, 1056964608;
	or.b32  	%r237, %r236, 1056964608;
	or.b32  	%r255, %r254, 1056964608;
	or.b32  	%r265, %r264, 1056964608;
	or.b32  	%r287, %r286, 1056964608;
	or.b32  	%r319, %r318, 1056964608;
	mov.b32 	%r334, %f621;
	mov.b32 	%r358, %f673;
	add.f32 	%f727, %f845, %f845;
	mov.b32 	%f158, %r176;
	mov.b32 	%f192, %r183;
	mov.b32 	%f227, %r194;
	mov.b32 	%f261, %r201;
	mov.b32 	%f296, %r212;
	mov.b32 	%f330, %r219;
	mov.b32 	%f365, %r230;
	mov.b32 	%f399, %r237;
	mov.b32 	%f429, %r255;
	mov.b32 	%f463, %r265;
	mov.b32 	%f516, %r287;
	mov.b32 	%f568, %r319;
	and.b32  	%r335, %r334, -2147483648;
	and.b32  	%r359, %r358, -2147483648;
	mov.b32 	%r374, %f727;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	or.b32  	%r336, %r335, 1056964608;
	or.b32  	%r360, %r359, 1056964608;
	and.b32  	%r375, %r374, -2147483648;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p18, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p24, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p30, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p36, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p42, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p48, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p54, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p60, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p65, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p72, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p92, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p112, %f571, 0f4B000000;
	mov.b32 	%f622, %r336;
	mov.b32 	%f674, %r360;
	or.b32  	%r376, %r375, 1056964608;
	selp.f32 	%f162, %f157, %f160, %p18;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p19, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p24;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p25, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p30;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p31, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p36;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p37, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p42;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p43, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p48;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p49, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p54;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p55, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p60;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p61, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p65;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p66, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p72;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p73, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p92;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p93, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p112;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p113, %f571, 0f3F000000;
	add.f32 	%f623, %f621, %f622;
	abs.f32 	%f625, %f621;
	add.f32 	%f675, %f673, %f674;
	abs.f32 	%f677, %f673;
	mov.b32 	%f728, %r376;
	selp.f32 	%f164, %f163, %f162, %p19;
	selp.f32 	%f198, %f197, %f196, %p25;
	selp.f32 	%f233, %f232, %f231, %p31;
	selp.f32 	%f267, %f266, %f265, %p37;
	selp.f32 	%f302, %f301, %f300, %p43;
	selp.f32 	%f336, %f335, %f334, %p49;
	selp.f32 	%f371, %f370, %f369, %p55;
	selp.f32 	%f405, %f404, %f403, %p61;
	selp.f32 	%f435, %f434, %f433, %p66;
	selp.f32 	%f469, %f468, %f467, %p73;
	selp.f32 	%f522, %f521, %f520, %p93;
	selp.f32 	%f574, %f573, %f572, %p113;
	cvt.rzi.f32.f32 	%f624, %f623;
	setp.gt.f32 	%p132, %f625, 0f4B000000;
	cvt.rzi.f32.f32 	%f676, %f675;
	setp.gt.f32 	%p152, %f677, 0f4B000000;
	add.f32 	%f729, %f727, %f728;
	abs.f32 	%f731, %f727;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f837;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f825;
	selp.f32 	%f626, %f621, %f624, %p132;
	cvt.rzi.f32.f32 	%f627, %f621;
	setp.lt.f32 	%p133, %f625, 0f3F000000;
	selp.f32 	%f678, %f673, %f676, %p152;
	cvt.rzi.f32.f32 	%f679, %f673;
	setp.lt.f32 	%p153, %f677, 0f3F000000;
	cvt.rzi.f32.f32 	%f730, %f729;
	setp.gt.f32 	%p173, %f731, 0f4B000000;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	selp.f32 	%f628, %f627, %f626, %p133;
	selp.f32 	%f680, %f679, %f678, %p153;
	selp.f32 	%f732, %f727, %f730, %p173;
	cvt.rzi.f32.f32 	%f733, %f727;
	setp.lt.f32 	%p174, %f731, 0f3F000000;
	cvt.rzi.s32.f32 	%r177, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r184, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r195, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r202, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r213, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r220, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r231, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r238, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f629, %f628, 0fBF000000, %f841;
	fma.rn.f32 	%f681, %f680, 0fBF000000, %f829;
	selp.f32 	%f734, %f733, %f732, %p174;
	add.s32 	%r178, %r177, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r185, %r184, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r196, %r195, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r203, %r202, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r214, %r213, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r221, %r220, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r232, %r231, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r239, %r238, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r256, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r266, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r288, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r320, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	mul.f32 	%f630, %f629, %f629;
	mul.f32 	%f682, %f681, %f681;
	fma.rn.f32 	%f735, %f734, 0fBF000000, %f845;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r179, %r178, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r186, %r185, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r197, %r196, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r204, %r203, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r215, %r214, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r222, %r221, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r233, %r232, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r240, %r239, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r257, %r256, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r267, %r266, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r289, %r288, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r321, %r320, 1;
	fma.rn.f32 	%f631, %f630, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f632, %f630, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f683, %f682, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f684, %f682, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f736, %f735, %f735;
	shl.b32 	%r81, %r3, 5;
	and.b32  	%r164, %r4, 18;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p20, %r179, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p26, %r186, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p32, %r197, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p38, %r204, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p44, %r215, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p50, %r222, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p56, %r233, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p62, %r240, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p67, %r257, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p74, %r267, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p94, %r289, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p114, %r321, 1;
	cvt.rzi.s32.f32 	%r337, %f628;
	fma.rn.f32 	%f633, %f631, %f630, 0fC0A55DF6;
	fma.rn.f32 	%f634, %f632, %f630, 0f4081E0CF;
	fma.rn.f32 	%f635, %f630, %f629, 0f00000000;
	cvt.rzi.s32.f32 	%r361, %f680;
	fma.rn.f32 	%f685, %f683, %f682, 0fC0A55DF6;
	fma.rn.f32 	%f686, %f684, %f682, 0f4081E0CF;
	fma.rn.f32 	%f687, %f682, %f681, 0f00000000;
	fma.rn.f32 	%f737, %f736, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f738, %f736, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r76, %r75, 8;
	shl.b32 	%r78, %r4, 2;
	or.b32  	%r165, %r164, %r81;
	selp.f32 	%f176, %f174, %f175, %p20;
	and.b32  	%r180, %r178, 2;
	mov.f32 	%f177, 0f00000000;
	selp.f32 	%f210, %f208, %f209, %p26;
	and.b32  	%r187, %r185, 2;
	selp.f32 	%f245, %f243, %f244, %p32;
	and.b32  	%r198, %r196, 2;
	selp.f32 	%f279, %f277, %f278, %p38;
	and.b32  	%r205, %r203, 2;
	selp.f32 	%f314, %f312, %f313, %p44;
	and.b32  	%r216, %r214, 2;
	selp.f32 	%f348, %f346, %f347, %p50;
	and.b32  	%r223, %r221, 2;
	selp.f32 	%f383, %f381, %f382, %p56;
	and.b32  	%r234, %r232, 2;
	selp.f32 	%f417, %f415, %f416, %p62;
	and.b32  	%r241, %r239, 2;
	selp.f32 	%f447, %f445, %f446, %p67;
	and.b32  	%r258, %r256, 2;
	selp.f32 	%f481, %f479, %f480, %p74;
	and.b32  	%r268, %r266, 2;
	selp.f32 	%f534, %f532, %f533, %p94;
	and.b32  	%r290, %r288, 2;
	selp.f32 	%f586, %f584, %f585, %p114;
	and.b32  	%r322, %r320, 2;
	fma.rn.f32 	%f636, %f634, %f630, 0fC09DE9E6;
	fma.rn.f32 	%f637, %f633, %f635, 0f00000000;
	and.b32  	%r338, %r337, 1;
	fma.rn.f32 	%f688, %f686, %f682, 0fC09DE9E6;
	fma.rn.f32 	%f689, %f685, %f687, 0f00000000;
	and.b32  	%r362, %r361, 1;
	cvt.rzi.s32.f32 	%r377, %f734;
	fma.rn.f32 	%f739, %f737, %f736, 0fC0A55DF6;
	fma.rn.f32 	%f740, %f738, %f736, 0f4081E0CF;
	fma.rn.f32 	%f741, %f736, %f735, 0f00000000;
	and.b32  	%r79, %r78, 4;
	or.b32  	%r166, %r165, %r76;
	setp.eq.s32 	%p21, %r180, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p27, %r187, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p33, %r198, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p39, %r205, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p45, %r216, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p51, %r223, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p57, %r234, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p63, %r241, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p68, %r258, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r259, %r256, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p75, %r268, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r269, %r266, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p95, %r290, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r291, %r288, 1;
	cvt.rzi.f32.f32 	%f541, %f837;
	setp.eq.s32 	%p115, %r322, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r323, %r320, 1;
	cvt.rzi.f32.f32 	%f593, %f825;
	fma.rn.f32 	%f638, %f636, %f630, 0f3F800000;
	fma.rn.f32 	%f639, %f629, 0f40490FDB, %f637;
	setp.eq.b32 	%p134, %r338, 1;
	fma.rn.f32 	%f690, %f688, %f682, 0f3F800000;
	fma.rn.f32 	%f691, %f681, 0f40490FDB, %f689;
	setp.eq.b32 	%p154, %r362, 1;
	fma.rn.f32 	%f742, %f740, %f736, 0fC09DE9E6;
	fma.rn.f32 	%f743, %f739, %f741, 0f00000000;
	and.b32  	%r378, %r377, 1;
	or.b32  	%r167, %r166, %r79;
	selp.f32 	%f179, %f176, %f178, %p21;
	selp.f32 	%f213, %f210, %f212, %p27;
	selp.f32 	%f248, %f245, %f247, %p33;
	selp.f32 	%f282, %f279, %f281, %p39;
	selp.f32 	%f317, %f314, %f316, %p45;
	selp.f32 	%f351, %f348, %f350, %p51;
	selp.f32 	%f386, %f383, %f385, %p57;
	selp.f32 	%f420, %f417, %f419, %p63;
	selp.f32 	%f448, %f446, %f445, %p67;
	selp.f32 	%f450, %f447, %f449, %p68;
	and.b32  	%r260, %r259, 2;
	setp.eq.f32 	%p70, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p74;
	selp.f32 	%f484, %f481, %f483, %p75;
	and.b32  	%r270, %r269, 2;
	setp.eq.f32 	%p77, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p94;
	selp.f32 	%f537, %f534, %f536, %p95;
	and.b32  	%r292, %r291, 2;
	setp.eq.f32 	%p97, %f541, %f837;
	mul.f32 	%f542, %f837, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p114;
	selp.f32 	%f589, %f586, %f588, %p115;
	and.b32  	%r324, %r323, 2;
	setp.eq.f32 	%p117, %f593, %f825;
	mul.f32 	%f594, %f825, 0f00000000;
	selp.f32 	%f640, %f638, %f639, %p134;
	and.b32  	%r339, %r337, 2;
	selp.f32 	%f692, %f690, %f691, %p154;
	and.b32  	%r363, %r361, 2;
	fma.rn.f32 	%f744, %f742, %f736, 0f3F800000;
	fma.rn.f32 	%f745, %f735, 0f40490FDB, %f743;
	setp.eq.b32 	%p175, %r378, 1;
	bfe.u32 	%r168, %r167, 1, 10;
	mul.f32 	%f87, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p69, %r260, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p70;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p76, %r270, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p77;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p96, %r292, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f104, %f542, %f537, %p97;
	abs.f32 	%f543, %f837;
	setp.eq.s32 	%p116, %r324, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p117;
	abs.f32 	%f596, %f825;
	setp.eq.s32 	%p135, %r339, 0;
	neg.f32 	%f642, %f640;
	add.s32 	%r340, %r337, 1;
	cvt.rzi.f32.f32 	%f647, %f841;
	setp.eq.s32 	%p155, %r363, 0;
	neg.f32 	%f694, %f692;
	add.s32 	%r364, %r361, 1;
	cvt.rzi.f32.f32 	%f699, %f829;
	selp.f32 	%f746, %f744, %f745, %p175;
	and.b32  	%r379, %r377, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd46, %r168, 4;
	mul.f32 	%f183, %f87, 0f3C8A83B8;
	mul.f32 	%f217, %f4, 0f3C8A83B8;
	mul.f32 	%f252, %f8, 0f3C8A83B8;
	mul.f32 	%f286, %f13, 0f3C8A83B8;
	mul.f32 	%f321, %f17, 0f3C8A83B8;
	mul.f32 	%f355, %f22, 0f3C8A83B8;
	mul.f32 	%f390, %f26, 0f3C8A83B8;
	mul.f32 	%f423, %f31, 0f3C8A83B8;
	selp.f32 	%f453, %f448, %f452, %p69;
	setp.gt.f32 	%p71, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p76;
	setp.gt.f32 	%p78, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p96;
	setp.gt.f32 	%p98, %f543, 0f4B800000;
	add.f32 	%f544, %f104, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p116;
	setp.gt.f32 	%p118, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	selp.f32 	%f641, %f639, %f638, %p134;
	selp.f32 	%f643, %f640, %f642, %p135;
	and.b32  	%r341, %r340, 2;
	setp.eq.f32 	%p137, %f647, %f841;
	mul.f32 	%f648, %f841, 0f00000000;
	selp.f32 	%f693, %f691, %f690, %p154;
	selp.f32 	%f695, %f692, %f694, %p155;
	and.b32  	%r365, %r364, 2;
	setp.eq.f32 	%p157, %f699, %f829;
	mul.f32 	%f700, %f829, 0f00000000;
	setp.eq.s32 	%p176, %r379, 0;
	neg.f32 	%f748, %f746;
	add.s32 	%r380, %r377, 1;
	cvt.rzi.f32.f32 	%f753, %f845;
	add.s64 	%rd47, %rd1, %rd46;
	mul.f32 	%f3, %f183, %f815;
	mul.f32 	%f218, %f217, %f816;
	mul.f32 	%f12, %f252, %f817;
	mul.f32 	%f287, %f286, %f818;
	mul.f32 	%f21, %f321, %f819;
	mul.f32 	%f356, %f355, %f820;
	mul.f32 	%f30, %f390, %f821;
	mul.f32 	%f424, %f423, %f822;
	selp.f32 	%f459, %f458, %f453, %p71;
	selp.f32 	%f492, %f491, %f486, %p78;
	selp.f32 	%f105, %f544, %f540, %p98;
	selp.f32 	%f598, %f597, %f592, %p118;
	setp.eq.s32 	%p136, %r341, 0;
	sub.f32 	%f645, %f177, %f641;
	selp.f32 	%f123, %f648, %f643, %p137;
	abs.f32 	%f649, %f841;
	setp.eq.s32 	%p156, %r365, 0;
	sub.f32 	%f697, %f177, %f693;
	selp.f32 	%f701, %f700, %f695, %p157;
	abs.f32 	%f702, %f829;
	selp.f32 	%f747, %f745, %f744, %p175;
	selp.f32 	%f749, %f746, %f748, %p176;
	and.b32  	%r381, %r380, 2;
	setp.eq.f32 	%p178, %f753, %f845;
	mul.f32 	%f754, %f845, 0f00000000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	and.b32  	%r77, %r4, 16;
	and.b32  	%r80, %r4, 2;
	ld.global.u32 	%r82, [%rd47];
	mov.b32 	%r190, %f218;
	mov.b32 	%r189, %f3;
	mov.b32 	%r208, %f287;
	mov.b32 	%r207, %f12;
	mov.b32 	%r226, %f356;
	mov.b32 	%r225, %f21;
	mov.b32 	%r244, %f424;
	mov.b32 	%r243, %f30;
	mov.b32 	%r246, %f459;
	mov.b32 	%r247, %f492;
	mov.b32 	%r249, %f456;
	mov.b32 	%r250, %f489;
	mov.b32 	%r307, %f598;
	mov.b32 	%r306, %f105;
	mov.b32 	%r313, %f595;
	mov.b32 	%r312, %f104;
	selp.f32 	%f646, %f641, %f645, %p136;
	setp.gt.f32 	%p138, %f649, 0f4B800000;
	add.f32 	%f650, %f123, 0f3F800000;
	selp.f32 	%f698, %f693, %f697, %p156;
	setp.gt.f32 	%p158, %f702, 0f4B800000;
	add.f32 	%f703, %f701, 0f3F800000;
	and.b32  	%r41, %r14, 1;
	setp.eq.s32 	%p177, %r381, 0;
	sub.f32 	%f751, %f177, %f747;
	selp.f32 	%f755, %f754, %f749, %p178;
	abs.f32 	%f756, %f845;
	// begin inline asm
	cvt.rn.f16x2.f32 %r188, %r190, %r189;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r206, %r208, %r207;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r224, %r226, %r225;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r242, %r244, %r243;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r245, %r247, %r246;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r248, %r250, %r249;
	// end inline asm
	xor.b32  	%r310, %r313, -2147483648;
	xor.b32  	%r309, %r312, -2147483648;
	selp.f32 	%f124, %f650, %f646, %p138;
	selp.f32 	%f704, %f703, %f698, %p158;
	setp.eq.s32 	%p172, %r41, %r85;
	selp.f32 	%f752, %f747, %f751, %p177;
	setp.gt.f32 	%p179, %f756, 0f4B800000;
	add.f32 	%f757, %f755, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r305, %r307, %r306;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r311, %r313, %r312;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r307, %r306;
	// end inline asm
	mov.b32 	%r354, %f704;
	mov.b32 	%r353, %f124;
	mov.b32 	%r357, %f701;
	mov.b32 	%r356, %f123;
	selp.f32 	%f758, %f757, %f752, %p179;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p172;
	// begin inline asm
	cvt.rn.f16x2.f32 %r352, %r354, %r353;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r355, %r357, %r356;
	// end inline asm
	mul.f32 	%f143, %f758, %f142;
	mul.f32 	%f144, %f755, %f142;
	add.f32 	%f781, %f833, %f833;
	mov.b32 	%r404, %f781;
	and.b32  	%r405, %r404, -2147483648;
	or.b32  	%r406, %r405, 1056964608;
	mov.b32 	%f782, %r406;
	add.f32 	%f783, %f781, %f782;
	cvt.rzi.f32.f32 	%f784, %f783;
	abs.f32 	%f785, %f781;
	setp.gt.f32 	%p193, %f785, 0f4B000000;
	selp.f32 	%f786, %f781, %f784, %p193;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p194, %f785, 0f3F000000;
	selp.f32 	%f788, %f787, %f786, %p194;
	cvt.rzi.s32.f32 	%r407, %f788;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f833;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	and.b32  	%r408, %r407, 1;
	setp.eq.b32 	%p195, %r408, 1;
	selp.f32 	%f800, %f798, %f799, %p195;
	selp.f32 	%f801, %f799, %f798, %p195;
	and.b32  	%r409, %r407, 2;
	setp.eq.s32 	%p196, %r409, 0;
	neg.f32 	%f802, %f800;
	selp.f32 	%f803, %f800, %f802, %p196;
	add.s32 	%r410, %r407, 1;
	and.b32  	%r411, %r410, 2;
	setp.eq.s32 	%p197, %r411, 0;
	sub.f32 	%f805, %f177, %f801;
	selp.f32 	%f806, %f801, %f805, %p197;
	cvt.rzi.f32.f32 	%f807, %f833;
	setp.eq.f32 	%p198, %f807, %f833;
	mul.f32 	%f808, %f833, 0f00000000;
	selp.f32 	%f809, %f808, %f803, %p198;
	abs.f32 	%f810, %f833;
	setp.gt.f32 	%p199, %f810, 0f4B800000;
	add.f32 	%f811, %f809, 0f3F800000;
	selp.f32 	%f812, %f811, %f806, %p199;
	mul.f32 	%f813, %f812, %f142;
	mul.f32 	%f814, %f809, %f142;
	mov.b32 	%r394, %f813;
	mov.b32 	%r393, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r392, %r394, %r393;
	// end inline asm
	mov.b32 	%r400, %f814;
	xor.b32  	%r397, %r400, -2147483648;
	mov.b32 	%r399, %f144;
	xor.b32  	%r396, %r399, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r395, %r397, %r396;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r401, %r394, %r393;
	// end inline asm
	and.b32  	%r413, %r78, 12;
	and.b32  	%r414, %r1, 7;
	shl.b32 	%r415, %r1, 2;
	and.b32  	%r55, %r415, 32;
	or.b32  	%r416, %r414, %r55;
	and.b32  	%r417, %r75, 16;
	or.b32  	%r56, %r417, %r416;
	and.b32  	%r57, %r83, 8;
	and.b32  	%r58, %r78, 16;
	cvt.u16.u32 	%rs1, %r81;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 8;
	mul.lo.s16 	%rs4, %rs3, 384;
	sub.s16 	%rs5, %rs1, %rs4;
	cvt.u32.u16 	%r418, %rs5;
	add.s32 	%r419, %r418, %r152;
	shl.b32 	%r420, %r419, 5;
	and.b32  	%r421, %r78, 28;
	or.b32  	%r59, %r421, %r420;
	and.b32  	%r60, %r4, 8;
	shl.b32 	%r422, %r4, 4;
	or.b32  	%r423, %r422, %r60;
	shr.u32 	%r424, %r423, 2;
	and.b32  	%r425, %r424, 14;
	or.b32  	%r426, %r425, %r58;
	shr.u32 	%r61, %r1, 1;
	and.b32  	%r427, %r2, 32;
	or.b32  	%r62, %r427, %r417;
	or.b32  	%r428, %r417, %r61;
	or.b32  	%r429, %r428, %r427;
	or.b32  	%r63, %r429, 8;
	or.b32  	%r430, %r81, %r77;
	or.b32  	%r431, %r430, %r79;
	or.b32  	%r432, %r431, %r76;
	or.b32  	%r433, %r432, %r80;
	bfe.u32 	%r434, %r433, 1, 4;
	mul.lo.s32 	%r435, %r434, 65;
	add.s32 	%r436, %r429, %r435;
	add.s32 	%r437, %r63, %r435;
	shl.b32 	%r438, %r1, 1;
	and.b32  	%r439, %r438, 14;
	shl.b32 	%r440, %r150, 16;
	add.s32 	%r441, %r440, -196608;
	and.b32  	%r442, %r415, 28;
	and.b32  	%r443, %r81, 2016;
	or.b32  	%r444, %r442, %r14;
	or.b32  	%r445, %r444, %r443;
	shl.b32 	%r446, %r445, 5;
	or.b32  	%r64, %r446, %r413;
	cvt.s64.s32 	%rd5, %r441;
	shr.u32 	%r447, %r1, 3;
	setp.gt.u32 	%p201, %r4, 15;
	or.b32  	%r448, %r447, 2;
	or.b32  	%r449, %r447, 4;
	or.b32  	%r450, %r447, 6;
	and.b32  	%r451, %r1, 1;
	neg.s32 	%r452, %r451;
	and.b32  	%r453, %r452, 520;
	mul.lo.s32 	%r454, %r447, 1057;
	bfe.s32 	%r455, %r1, 2, 1;
	and.b32  	%r456, %r455, 130;
	bfe.s32 	%r457, %r1, 1, 1;
	and.b32  	%r458, %r457, 260;
	selp.b32 	%r459, 65, 0, %p201;
	add.s32 	%r460, %r426, %r453;
	add.s32 	%r461, %r460, %r454;
	add.s32 	%r462, %r461, %r456;
	add.s32 	%r463, %r462, %r458;
	add.s32 	%r464, %r463, %r459;
	mul.wide.u32 	%rd48, %r464, 4;
	mov.u64 	%rd49, shmem;
	add.s64 	%rd6, %rd49, %rd48;
	add.s32 	%r465, %r460, 32;
	add.s32 	%r466, %r465, %r454;
	add.s32 	%r467, %r466, %r456;
	add.s32 	%r468, %r467, %r458;
	add.s32 	%r469, %r468, %r459;
	mul.wide.u32 	%rd50, %r469, 4;
	add.s64 	%rd7, %rd49, %rd50;
	or.b32  	%r470, %r460, 1;
	add.s32 	%r471, %r470, %r454;
	add.s32 	%r472, %r471, %r456;
	add.s32 	%r473, %r472, %r458;
	add.s32 	%r474, %r473, %r459;
	mul.wide.u32 	%rd51, %r474, 4;
	add.s64 	%rd8, %rd49, %rd51;
	add.s32 	%r475, %r460, 33;
	add.s32 	%r476, %r475, %r454;
	add.s32 	%r477, %r476, %r456;
	add.s32 	%r478, %r477, %r458;
	add.s32 	%r479, %r478, %r459;
	mul.wide.u32 	%rd52, %r479, 4;
	add.s64 	%rd9, %rd49, %rd52;
	mul.lo.s32 	%r480, %r448, 1057;
	mul.lo.s32 	%r481, %r87, 65;
	add.s32 	%r482, %r460, %r480;
	add.s32 	%r483, %r482, %r456;
	add.s32 	%r484, %r483, %r458;
	add.s32 	%r485, %r484, %r481;
	mul.wide.u32 	%rd53, %r485, 4;
	add.s64 	%rd10, %rd49, %rd53;
	add.s32 	%r486, %r465, %r480;
	add.s32 	%r487, %r486, %r456;
	add.s32 	%r488, %r487, %r458;
	add.s32 	%r489, %r488, %r481;
	mul.wide.u32 	%rd54, %r489, 4;
	add.s64 	%rd11, %rd49, %rd54;
	add.s32 	%r490, %r470, %r480;
	add.s32 	%r491, %r490, %r456;
	add.s32 	%r492, %r491, %r458;
	add.s32 	%r493, %r492, %r481;
	mul.wide.u32 	%rd55, %r493, 4;
	add.s64 	%rd12, %rd49, %rd55;
	add.s32 	%r494, %r475, %r480;
	add.s32 	%r495, %r494, %r456;
	add.s32 	%r496, %r495, %r458;
	add.s32 	%r497, %r496, %r481;
	mul.wide.u32 	%rd56, %r497, 4;
	add.s64 	%rd13, %rd49, %rd56;
	mul.lo.s32 	%r498, %r449, 1057;
	add.s32 	%r499, %r460, %r498;
	add.s32 	%r500, %r499, %r456;
	add.s32 	%r501, %r500, %r458;
	add.s32 	%r502, %r501, %r481;
	mul.wide.u32 	%rd57, %r502, 4;
	add.s64 	%rd14, %rd49, %rd57;
	add.s32 	%r503, %r465, %r498;
	add.s32 	%r504, %r503, %r456;
	add.s32 	%r505, %r504, %r458;
	add.s32 	%r506, %r505, %r481;
	mul.wide.u32 	%rd58, %r506, 4;
	add.s64 	%rd15, %rd49, %rd58;
	add.s32 	%r507, %r470, %r498;
	add.s32 	%r508, %r507, %r456;
	add.s32 	%r509, %r508, %r458;
	add.s32 	%r510, %r509, %r481;
	mul.wide.u32 	%rd59, %r510, 4;
	add.s64 	%rd16, %rd49, %rd59;
	add.s32 	%r511, %r475, %r498;
	add.s32 	%r512, %r511, %r456;
	add.s32 	%r513, %r512, %r458;
	add.s32 	%r514, %r513, %r481;
	mul.wide.u32 	%rd60, %r514, 4;
	add.s64 	%rd17, %rd49, %rd60;
	mul.lo.s32 	%r515, %r450, 1057;
	add.s32 	%r516, %r460, %r515;
	add.s32 	%r517, %r516, %r456;
	add.s32 	%r518, %r517, %r458;
	add.s32 	%r519, %r518, %r481;
	mul.wide.u32 	%rd61, %r519, 4;
	add.s64 	%rd18, %rd49, %rd61;
	add.s32 	%r520, %r465, %r515;
	add.s32 	%r521, %r520, %r456;
	add.s32 	%r522, %r521, %r458;
	add.s32 	%r523, %r522, %r481;
	mul.wide.u32 	%rd62, %r523, 4;
	add.s64 	%rd19, %rd49, %rd62;
	add.s32 	%r524, %r470, %r515;
	add.s32 	%r525, %r524, %r456;
	add.s32 	%r526, %r525, %r458;
	add.s32 	%r527, %r526, %r481;
	mul.wide.u32 	%rd63, %r527, 4;
	add.s64 	%rd20, %rd49, %rd63;
	add.s32 	%r528, %r475, %r515;
	add.s32 	%r529, %r528, %r456;
	add.s32 	%r530, %r529, %r458;
	add.s32 	%r531, %r530, %r481;
	mul.wide.u32 	%rd64, %r531, 4;
	add.s64 	%rd21, %rd49, %rd64;
	setp.eq.s32 	%p202, %r85, 0;
	selp.b32 	%r65, 0, 130, %p202;
	bfe.s32 	%r532, %r4, 2, 1;
	and.b32  	%r66, %r532, 260;
	setp.eq.s32 	%p203, %r80, 0;
	selp.b32 	%r67, 0, 65, %p203;
	or.b32  	%r533, %r439, %r87;
	mul.lo.s32 	%r534, %r533, 65;
	add.s32 	%r535, %r426, %r534;
	add.s32 	%r536, %r535, %r454;
	mul.wide.u32 	%rd65, %r536, 4;
	add.s64 	%rd22, %rd49, %rd65;
	cvt.u64.u32 	%rd66, %r454;
	cvt.u64.u32 	%rd67, %r534;
	cvt.u64.u32 	%rd68, %r426;
	add.s64 	%rd69, %rd68, %rd67;
	add.s64 	%rd70, %rd69, %rd66;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd23, %rd49, %rd71;
	add.s32 	%r537, %r535, %r480;
	mul.wide.u32 	%rd72, %r537, 4;
	add.s64 	%rd24, %rd49, %rd72;
	cvt.u64.u32 	%rd73, %r480;
	add.s64 	%rd74, %rd69, %rd73;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd25, %rd49, %rd75;
	add.s32 	%r538, %r535, %r498;
	mul.wide.u32 	%rd76, %r538, 4;
	add.s64 	%rd26, %rd49, %rd76;
	cvt.u64.u32 	%rd77, %r498;
	add.s64 	%rd78, %rd69, %rd77;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd27, %rd49, %rd79;
	add.s32 	%r539, %r535, %r515;
	mul.wide.u32 	%rd80, %r539, 4;
	add.s64 	%rd28, %rd49, %rd80;
	cvt.u64.u32 	%rd81, %r515;
	add.s64 	%rd82, %rd69, %rd81;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd29, %rd49, %rd83;
	mul.wide.u32 	%rd84, %r437, 4;
	add.s64 	%rd30, %rd49, %rd84;
	mul.wide.u32 	%rd85, %r436, 4;
	add.s64 	%rd31, %rd49, %rd85;
	setp.eq.s32 	%p204, %r60, 0;
	mov.u16 	%rs293, 25600;
	mov.u16 	%rs241, 21504;
	mov.u16 	%rs301, 18432;
	mov.u32 	%r2605, %r2597;
	mov.u32 	%r2606, %r2597;
	mov.u32 	%r2607, %r2597;
	mov.u32 	%r2608, %r2597;
	mov.u32 	%r2618, %r2597;
	mov.u32 	%r2619, %r2597;
	mov.u32 	%r74, %r2597;
	bra.uni 	$L__BB0_83;
$L__BB0_89:                             // %pass9984
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2589, %r2598, %r64;
	or.b32  	%r2590, %r2589, %r58;
	or.b32  	%r2591, %r2590, 262144;
	cvt.s64.s32 	%rd123, %r2591;
	add.s64 	%rd124, %rd123, %rd5;
	shr.u64 	%rd125, %rd124, 38;
	add.s64 	%rd126, %rd124, %rd125;
	shr.s64 	%rd127, %rd126, 26;
	setp.lt.s64 	%p228, %rd124, 0;
	and.b64  	%rd128, %rd126, -67108864;
	setp.ne.s64 	%p229, %rd128, %rd124;
	and.pred  	%p230, %p228, %p229;
	selp.u64 	%rd129, 1, 0, %p230;
	sub.s64 	%rd130, %rd129, %rd127;
	shl.b64 	%rd131, %rd130, 26;
	add.s64 	%rd132, %rd131, %rd124;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.v4.u32 	[%rd134], {%r139, %r141, %r140, %r142};
	or.b32  	%r2592, %r2590, 393216;
	cvt.s64.s32 	%rd135, %r2592;
	add.s64 	%rd136, %rd135, %rd5;
	shr.u64 	%rd137, %rd136, 38;
	add.s64 	%rd138, %rd136, %rd137;
	shr.s64 	%rd139, %rd138, 26;
	setp.lt.s64 	%p231, %rd136, 0;
	and.b64  	%rd140, %rd138, -67108864;
	setp.ne.s64 	%p232, %rd140, %rd136;
	and.pred  	%p233, %p231, %p232;
	selp.u64 	%rd141, 1, 0, %p233;
	sub.s64 	%rd142, %rd141, %rd139;
	shl.b64 	%rd143, %rd142, 26;
	add.s64 	%rd144, %rd143, %rd136;
	shl.b64 	%rd145, %rd144, 2;
	add.s64 	%rd146, %rd3, %rd145;
	st.global.v4.u32 	[%rd146], {%r143, %r145, %r144, %r146};
	setp.ne.s32 	%p234, %r74, 32512;
	add.s32 	%r74, %r74, 256;
	add.s32 	%r2593, %r74, %r148;
	setp.lt.s32 	%p235, %r2593, %r149;
	and.pred  	%p236, %p234, %p235;
	@%p236 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_90;
$L__BB0_83:                             // %L1415
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r605, %r74, %r56;
	or.b32  	%r606, %r605, %r57;
	add.s32 	%r607, %r606, %r148;
	mad.lo.s32 	%r608, %r607, 12288, %r59;
	mul.hi.s32 	%r609, %r608, 715827883;
	shr.u32 	%r610, %r609, 31;
	shr.s32 	%r611, %r609, 26;
	add.s32 	%r612, %r611, %r610;
	setp.lt.s32 	%p205, %r608, 0;
	mul.lo.s32 	%r613, %r612, 402653184;
	setp.ne.s32 	%p206, %r613, %r608;
	and.pred  	%p207, %p205, %p206;
	selp.s32 	%r614, -1, 0, %p207;
	add.s32 	%r615, %r612, %r614;
	mad.lo.s32 	%r616, %r615, -402653184, %r608;
	mul.wide.s32 	%rd86, %r616, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r617, %r618, %r619, %r620}, [%rd87];
	or.b32  	%r621, %r606, 64;
	add.s32 	%r622, %r621, %r148;
	mad.lo.s32 	%r623, %r622, 12288, %r59;
	mul.hi.s32 	%r624, %r623, 715827883;
	shr.u32 	%r625, %r624, 31;
	shr.s32 	%r626, %r624, 26;
	add.s32 	%r627, %r626, %r625;
	setp.lt.s32 	%p208, %r623, 0;
	mul.lo.s32 	%r628, %r627, 402653184;
	setp.ne.s32 	%p209, %r628, %r623;
	and.pred  	%p210, %p208, %p209;
	selp.s32 	%r629, -1, 0, %p210;
	add.s32 	%r630, %r627, %r629;
	mad.lo.s32 	%r631, %r630, -402653184, %r623;
	mul.wide.s32 	%rd88, %r631, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r632, %r633, %r634, %r635}, [%rd89];
	or.b32  	%r636, %r606, 128;
	add.s32 	%r637, %r636, %r148;
	mad.lo.s32 	%r638, %r637, 12288, %r59;
	mul.hi.s32 	%r639, %r638, 715827883;
	shr.u32 	%r640, %r639, 31;
	shr.s32 	%r641, %r639, 26;
	add.s32 	%r642, %r641, %r640;
	setp.lt.s32 	%p211, %r638, 0;
	mul.lo.s32 	%r643, %r642, 402653184;
	setp.ne.s32 	%p212, %r643, %r638;
	and.pred  	%p213, %p211, %p212;
	selp.s32 	%r644, -1, 0, %p213;
	add.s32 	%r645, %r642, %r644;
	mad.lo.s32 	%r646, %r645, -402653184, %r638;
	mul.wide.s32 	%rd90, %r646, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r647, %r648, %r649, %r650}, [%rd91];
	or.b32  	%r651, %r606, 192;
	add.s32 	%r652, %r651, %r148;
	mad.lo.s32 	%r653, %r652, 12288, %r59;
	mul.hi.s32 	%r654, %r653, 715827883;
	shr.u32 	%r655, %r654, 31;
	shr.s32 	%r656, %r654, 26;
	add.s32 	%r657, %r656, %r655;
	setp.lt.s32 	%p214, %r653, 0;
	mul.lo.s32 	%r658, %r657, 402653184;
	setp.ne.s32 	%p215, %r658, %r653;
	and.pred  	%p216, %p214, %p215;
	selp.s32 	%r659, -1, 0, %p216;
	add.s32 	%r660, %r657, %r659;
	mad.lo.s32 	%r661, %r660, -402653184, %r653;
	mul.wide.s32 	%rd92, %r661, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r662, %r663, %r664, %r665}, [%rd93];
	selp.b32 	%r666, %r619, %r617, %p204;
	shfl.sync.bfly.b32	%r667, %r666, 8, 31, -1;
	selp.b32 	%r541, %r617, %r667, %p204;
	selp.b32 	%r542, %r667, %r619, %p204;
	selp.b32 	%r668, %r620, %r618, %p204;
	shfl.sync.bfly.b32	%r669, %r668, 8, 31, -1;
	selp.b32 	%r549, %r618, %r669, %p204;
	selp.b32 	%r550, %r669, %r620, %p204;
	selp.b32 	%r670, %r634, %r632, %p204;
	shfl.sync.bfly.b32	%r671, %r670, 8, 31, -1;
	selp.b32 	%r557, %r632, %r671, %p204;
	selp.b32 	%r558, %r671, %r634, %p204;
	selp.b32 	%r672, %r635, %r633, %p204;
	shfl.sync.bfly.b32	%r673, %r672, 8, 31, -1;
	selp.b32 	%r565, %r633, %r673, %p204;
	selp.b32 	%r566, %r673, %r635, %p204;
	selp.b32 	%r674, %r649, %r647, %p204;
	shfl.sync.bfly.b32	%r675, %r674, 8, 31, -1;
	selp.b32 	%r573, %r647, %r675, %p204;
	selp.b32 	%r574, %r675, %r649, %p204;
	selp.b32 	%r676, %r650, %r648, %p204;
	shfl.sync.bfly.b32	%r677, %r676, 8, 31, -1;
	selp.b32 	%r581, %r648, %r677, %p204;
	selp.b32 	%r582, %r677, %r650, %p204;
	selp.b32 	%r678, %r664, %r662, %p204;
	shfl.sync.bfly.b32	%r679, %r678, 8, 31, -1;
	selp.b32 	%r589, %r662, %r679, %p204;
	selp.b32 	%r590, %r679, %r664, %p204;
	selp.b32 	%r680, %r665, %r663, %p204;
	shfl.sync.bfly.b32	%r681, %r680, 8, 31, -1;
	selp.b32 	%r597, %r663, %r681, %p204;
	selp.b32 	%r598, %r681, %r665, %p204;
	mov.u32 	%r599, 21520;
	// begin inline asm
	prmt.b32 %r540, %r541, %r542, %r599;
	// end inline asm
	mov.u32 	%r603, 30258;
	// begin inline asm
	prmt.b32 %r544, %r541, %r542, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r548, %r549, %r550, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r552, %r549, %r550, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r556, %r557, %r558, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r560, %r557, %r558, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r564, %r565, %r566, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r568, %r565, %r566, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r572, %r573, %r574, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r576, %r573, %r574, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r580, %r581, %r582, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r584, %r581, %r582, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r588, %r589, %r590, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r592, %r589, %r590, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r596, %r597, %r598, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r600, %r597, %r598, %r603;
	// end inline asm
	st.shared.u32 	[%rd6], %r540;
	st.shared.u32 	[%rd7], %r544;
	st.shared.u32 	[%rd8], %r548;
	st.shared.u32 	[%rd9], %r552;
	st.shared.u32 	[%rd10], %r556;
	st.shared.u32 	[%rd11], %r560;
	st.shared.u32 	[%rd12], %r564;
	st.shared.u32 	[%rd13], %r568;
	st.shared.u32 	[%rd14], %r572;
	st.shared.u32 	[%rd15], %r576;
	st.shared.u32 	[%rd16], %r580;
	st.shared.u32 	[%rd17], %r584;
	st.shared.u32 	[%rd18], %r588;
	st.shared.u32 	[%rd19], %r592;
	st.shared.u32 	[%rd20], %r596;
	st.shared.u32 	[%rd21], %r600;
	bar.sync 	0;
	mov.u64 	%rd151, %rd31;
	mov.u64 	%rd152, %rd30;
	mov.u32 	%r2620, %r2597;
	mov.u32 	%r2621, %r2608;
	mov.u32 	%r2622, %r2607;
	mov.u32 	%r2623, %r2606;
	mov.u32 	%r2624, %r2605;
$L__BB0_84:                             // %pass5672
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2606, %r2619;
	mov.u32 	%r2605, %r2618;
	or.b32  	%r2478, %r2620, %r87;
	add.s32 	%r2479, %r2478, %r74;
	and.b32  	%r2480, %r2479, 1;
	neg.s32 	%r2481, %r2480;
	and.b32  	%r2482, %r2481, 520;
	bfe.u32 	%r2483, %r2479, 5, 3;
	mul.lo.s32 	%r2484, %r2483, 1057;
	or.b32  	%r2485, %r2482, %r61;
	or.b32  	%r2486, %r62, %r2485;
	add.s32 	%r2487, %r2486, %r2484;
	add.s32 	%r2488, %r2487, %r65;
	add.s32 	%r2489, %r2488, %r66;
	add.s32 	%r2490, %r2489, %r67;
	mul.wide.u32 	%rd94, %r2490, 4;
	add.s64 	%rd96, %rd49, %rd94;
	ld.shared.u32 	%r2607, [%rd96];
	add.s32 	%r2491, %r63, %r2482;
	add.s32 	%r2492, %r2491, %r2484;
	add.s32 	%r2493, %r2492, %r65;
	add.s32 	%r2494, %r2493, %r66;
	add.s32 	%r2495, %r2494, %r67;
	mul.wide.u32 	%rd97, %r2495, 4;
	add.s64 	%rd98, %rd49, %rd97;
	ld.shared.u32 	%r2608, [%rd98];
	// begin inline asm
	mov.b32 %r687, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r698, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r686, %r2607, -2004318072;
	mov.u32 	%r685, 983055;
	// begin inline asm
	lop3.b32 %r684, %r685, %r686, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r688, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r689, %r687, %r688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r692, %r684, %r689;
	// end inline asm
	mov.u32 	%r696, 15728880;
	// begin inline asm
	lop3.b32 %r695, %r696, %r686, %r698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r699, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r700, %r698, %r699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r703, %r695, %r700;
	// end inline asm
	shr.u32 	%r708, %r686, 8;
	// begin inline asm
	lop3.b32 %r706, %r685, %r708, %r687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r710, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r711, %r687, %r710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r714, %r706, %r711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r717, %r696, %r708, %r698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r721, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r722, %r698, %r721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r725, %r717, %r722;
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r744, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r732, %r2608, -2004318072;
	// begin inline asm
	lop3.b32 %r730, %r685, %r732, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r734, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r735, %r733, %r734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r738, %r730, %r735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r741, %r696, %r732, %r744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r745, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r746, %r744, %r745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r749, %r741, %r746;
	// end inline asm
	shr.u32 	%r754, %r732, 8;
	// begin inline asm
	lop3.b32 %r752, %r685, %r754, %r733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r756, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r757, %r733, %r756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r760, %r752, %r757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r763, %r696, %r754, %r744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r767, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r768, %r744, %r767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r771, %r763, %r768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r774, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r776, %r774, %r692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r781, %r779, %r703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r784, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r786, %r784, %r714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r789, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r791, %r789, %r725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r794, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r796, %r794, %r738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r799, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r801, %r799, %r749;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r804, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r806, %r804, %r760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r809, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r811, %r809, %r771;
	// end inline asm
	// begin inline asm
	mov.b32 %r819, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r830, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r818, %r2624, -2004318072;
	// begin inline asm
	lop3.b32 %r816, %r685, %r818, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r821, %r819, %r820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r824, %r816, %r821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r827, %r696, %r818, %r830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r831, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r832, %r830, %r831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r835, %r827, %r832;
	// end inline asm
	shr.u32 	%r840, %r818, 8;
	// begin inline asm
	lop3.b32 %r838, %r685, %r840, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r842, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r819, %r842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r846, %r838, %r843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r849, %r696, %r840, %r830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r830, %r853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r857, %r849, %r854;
	// end inline asm
	// begin inline asm
	mov.b32 %r865, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r876, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r864, %r2623, -2004318072;
	// begin inline asm
	lop3.b32 %r862, %r685, %r864, %r865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r866, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r867, %r865, %r866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r870, %r862, %r867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r873, %r696, %r864, %r876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r877, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r878, %r876, %r877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r881, %r873, %r878;
	// end inline asm
	shr.u32 	%r886, %r864, 8;
	// begin inline asm
	lop3.b32 %r884, %r685, %r886, %r865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r888, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r865, %r888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r892, %r884, %r889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r895, %r696, %r886, %r876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r876, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r906, %r188, %r824, %r776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r910, %r188, %r835, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r914, %r188, %r846, %r786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r918, %r188, %r857, %r791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r922, %r188, %r870, %r796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r926, %r188, %r881, %r801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r930, %r188, %r892, %r806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r934, %r188, %r903, %r811;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r942, %r2622, -2004318072;
	// begin inline asm
	lop3.b32 %r940, %r685, %r942, %r943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r943, %r944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r948, %r940, %r945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r951, %r696, %r942, %r954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r956, %r954, %r955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r959, %r951, %r956;
	// end inline asm
	shr.u32 	%r964, %r942, 8;
	// begin inline asm
	lop3.b32 %r962, %r685, %r964, %r943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r943, %r966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r970, %r962, %r967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r973, %r696, %r964, %r954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r978, %r954, %r977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r981, %r973, %r978;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r988, %r2621, -2004318072;
	// begin inline asm
	lop3.b32 %r986, %r685, %r988, %r989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r991, %r989, %r990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r994, %r986, %r991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r997, %r696, %r988, %r1000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1002, %r1000, %r1001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1005, %r997, %r1002;
	// end inline asm
	shr.u32 	%r1010, %r988, 8;
	// begin inline asm
	lop3.b32 %r1008, %r685, %r1010, %r989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1012, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1013, %r989, %r1012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1016, %r1008, %r1013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1019, %r696, %r1010, %r1000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1023, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1024, %r1000, %r1023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1027, %r1019, %r1024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1030, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1032, %r1030, %r948, %r906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1036, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r1036, %r959, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1042, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1044, %r1042, %r970, %r914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1048, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1050, %r1048, %r981, %r918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1054, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1056, %r1054, %r994, %r922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1060, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1062, %r1060, %r1005, %r926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1066, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1068, %r1066, %r1016, %r930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1072, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1074, %r1072, %r1027, %r934;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1094, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r1082, %r2605, -2004318072;
	// begin inline asm
	lop3.b32 %r1080, %r685, %r1082, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1085, %r1083, %r1084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1088, %r1080, %r1085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1091, %r696, %r1082, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1096, %r1094, %r1095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1099, %r1091, %r1096;
	// end inline asm
	shr.u32 	%r1104, %r1082, 8;
	// begin inline asm
	lop3.b32 %r1102, %r685, %r1104, %r1083, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1107, %r1083, %r1106;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1110, %r1102, %r1107;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1113, %r696, %r1104, %r1094, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1117, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1094, %r1117;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1121, %r1113, %r1118;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1140, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r1128, %r2606, -2004318072;
	// begin inline asm
	lop3.b32 %r1126, %r685, %r1128, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1130, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1131, %r1129, %r1130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1134, %r1126, %r1131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1137, %r696, %r1128, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1142, %r1140, %r1141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1145, %r1137, %r1142;
	// end inline asm
	shr.u32 	%r1150, %r1128, 8;
	// begin inline asm
	lop3.b32 %r1148, %r685, %r1150, %r1129, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1153, %r1129, %r1152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1156, %r1148, %r1153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1159, %r696, %r1150, %r1140, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1164, %r1140, %r1163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1167, %r1159, %r1164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1209, %r224, %r1088, %r1032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1206, %r224, %r1099, %r1038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1218, %r224, %r1110, %r1044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1215, %r224, %r1121, %r1050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1227, %r224, %r1134, %r1056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1224, %r224, %r1145, %r1062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1236, %r224, %r1156, %r1068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1233, %r224, %r1167, %r1074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1202, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1204, %r1202, %r1206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1207, %r245, %r1209, %r1204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1211, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1213, %r1211, %r1215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1216, %r245, %r1218, %r1213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1225, %r245, %r1227, %r1222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1234, %r245, %r1236, %r1231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1238, %r248, %r1209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1241, %r245, %r1206, %r1238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1245, %r248, %r1218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1248, %r245, %r1215, %r1245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r248, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1255, %r245, %r1224, %r1252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r248, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r245, %r1233, %r1259;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1313, %r1310}, {%r305, %r311, %r308, %r314}, {%r1207, %r1241}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1322, %r1319}, {%r305, %r311, %r308, %r314}, {%r1216, %r1248}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1331, %r1328}, {%r305, %r311, %r308, %r314}, {%r1225, %r1255}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1340, %r1337}, {%r305, %r311, %r308, %r314}, {%r1234, %r1262}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1311, %r352, %r1313, %r1308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1320, %r352, %r1322, %r1317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1329, %r352, %r1331, %r1326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1333, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1335, %r1333, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1338, %r352, %r1340, %r1335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r355, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1345, %r352, %r1310, %r1342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1349, %r355, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1352, %r352, %r1319, %r1349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1356, %r355, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1359, %r352, %r1328, %r1356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1363, %r355, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1366, %r352, %r1337, %r1363;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1370, %r1371}, {%r392, %r398, %r395, %r401}, {%r1311, %r1345}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1380, %r1381}, {%r392, %r398, %r395, %r401}, {%r1320, %r1352}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1390, %r1391}, {%r392, %r398, %r395, %r401}, {%r1329, %r1359}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1400, %r1401}, {%r392, %r398, %r395, %r401}, {%r1338, %r1366}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1410, %r82, %r1370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1413, %r82, %r1371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1416, %r82, %r1380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1419, %r82, %r1381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1422, %r82, %r1390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1425, %r82, %r1391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1428, %r82, %r1400;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1431, %r82, %r1401;
	// end inline asm
	mov.u16 	%rs102, -14592;
	// begin inline asm
	mov.b32 %r1434, {%rs102, %rs102};
	// end inline asm
	mov.u16 	%rs104, 18176;
	// begin inline asm
	mov.b32 %r1435, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1436, %r1410, %r1434;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1439, %r1436, %r1435;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1444, %r1413, %r1442;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1447, %r1444, %r1443;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1452, %r1416, %r1450;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1455, %r1452, %r1451;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1460, %r1419, %r1458;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1463, %r1460, %r1459;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1468, %r1422, %r1466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1471, %r1468, %r1467;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1476, %r1425, %r1474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1479, %r1476, %r1475;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1484, %r1428, %r1482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1487, %r1484, %r1483;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1492, %r1431, %r1490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1495, %r1492, %r1491;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1501, %r1499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1503, %r1439, %r1500;
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1501, %r1506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1447, %r1507;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1514, %r1501, %r1513;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1455, %r1514;
	// end inline asm
	// begin inline asm
	mov.b32 %r1520, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1521, %r1501, %r1520;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1463, %r1521;
	// end inline asm
	mov.u32 	%r1530, 25152;
	// begin inline asm
	prmt.b32 %r1527, %r1503, %r1517, %r1530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1531, %r1510, %r1524, %r1530;
	// end inline asm
	shl.b32 	%r1538, %r1531, 4;
	mov.u32 	%r1536, 252645135;
	// begin inline asm
	lop3.b32 %r1535, %r1536, %r1527, %r1538, 202;
	// end inline asm
	xor.b32  	%r2496, %r1535, -2004318072;
	// begin inline asm
	mov.b32 %r1542, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1540, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1541, %r1542, %r1540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1544, %r1471, %r1541;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1542, %r1547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1479, %r1548;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1555, %r1542, %r1554;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1558, %r1487, %r1555;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1542, %r1561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1565, %r1495, %r1562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1568, %r1544, %r1558, %r1530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1572, %r1551, %r1565, %r1530;
	// end inline asm
	shl.b32 	%r1579, %r1572, 4;
	// begin inline asm
	lop3.b32 %r1576, %r1536, %r1568, %r1579, 202;
	// end inline asm
	xor.b32  	%r2497, %r1576, -2004318072;
	st.shared.u32 	[%rd151], %r2496;
	st.shared.u32 	[%rd152], %r2497;
	ld.shared.u32 	%r2618, [%rd96];
	ld.shared.u32 	%r2619, [%rd98];
	// begin inline asm
	mov.b32 %r1585, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r1584, %r2618, -2004318072;
	// begin inline asm
	lop3.b32 %r1582, %r685, %r1584, %r1585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1586, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1587, %r1585, %r1586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1590, %r1582, %r1587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1593, %r696, %r1584, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1597, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1598, %r1596, %r1597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1601, %r1593, %r1598;
	// end inline asm
	shr.u32 	%r1606, %r1584, 8;
	// begin inline asm
	lop3.b32 %r1604, %r685, %r1606, %r1585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1609, %r1585, %r1608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1612, %r1604, %r1609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1615, %r696, %r1606, %r1596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1620, %r1596, %r1619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1623, %r1615, %r1620;
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs241, %rs241};
	// end inline asm
	xor.b32  	%r1630, %r2619, -2004318072;
	// begin inline asm
	lop3.b32 %r1628, %r685, %r1630, %r1631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1632, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1633, %r1631, %r1632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1636, %r1628, %r1633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1639, %r696, %r1630, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1643, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1644, %r1642, %r1643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1647, %r1639, %r1644;
	// end inline asm
	shr.u32 	%r1652, %r1630, 8;
	// begin inline asm
	lop3.b32 %r1650, %r685, %r1652, %r1631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1655, %r1631, %r1654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1658, %r1650, %r1655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1661, %r696, %r1652, %r1642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1666, %r1642, %r1665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1669, %r1661, %r1666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1672, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1674, %r1672, %r1590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1677, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1679, %r1677, %r1601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1682, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1684, %r1682, %r1612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1687, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1689, %r1687, %r1623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1692, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1694, %r1692, %r1636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1697, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1699, %r1697, %r1647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1702, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1704, %r1702, %r1658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1707, %r242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1709, %r1707, %r1669;
	// end inline asm
	// begin inline asm
	mov.b32 %r1717, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1728, {%rs241, %rs241};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1714, %r685, %r942, %r1717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1719, %r1717, %r1718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1722, %r1714, %r1719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1725, %r696, %r942, %r1728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1729, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1730, %r1728, %r1729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1733, %r1725, %r1730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1736, %r685, %r964, %r1717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1740, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1741, %r1717, %r1740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1744, %r1736, %r1741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1747, %r696, %r964, %r1728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1751, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1752, %r1728, %r1751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1755, %r1747, %r1752;
	// end inline asm
	// begin inline asm
	mov.b32 %r1763, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1774, {%rs241, %rs241};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1760, %r685, %r988, %r1763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1764, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1765, %r1763, %r1764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1768, %r1760, %r1765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1771, %r696, %r988, %r1774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1775, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1776, %r1774, %r1775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1779, %r1771, %r1776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1782, %r685, %r1010, %r1763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1786, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1787, %r1763, %r1786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1790, %r1782, %r1787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1793, %r696, %r1010, %r1774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1797, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1798, %r1774, %r1797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1801, %r1793, %r1798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r188, %r1722, %r1674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r188, %r1733, %r1679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r188, %r1744, %r1684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r188, %r1755, %r1689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r188, %r1768, %r1694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r188, %r1779, %r1699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r188, %r1790, %r1704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r188, %r1801, %r1709;
	// end inline asm
	// begin inline asm
	mov.b32 %r1841, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1852, {%rs241, %rs241};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1838, %r685, %r1082, %r1841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1842, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1843, %r1841, %r1842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1846, %r1838, %r1843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1849, %r696, %r1082, %r1852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1853, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1854, %r1852, %r1853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1857, %r1849, %r1854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1860, %r685, %r1104, %r1841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1864, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1865, %r1841, %r1864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1868, %r1860, %r1865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1871, %r696, %r1104, %r1852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1875, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1876, %r1852, %r1875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1879, %r1871, %r1876;
	// end inline asm
	// begin inline asm
	mov.b32 %r1887, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1898, {%rs241, %rs241};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1884, %r685, %r1128, %r1887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1888, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1889, %r1887, %r1888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1892, %r1884, %r1889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1895, %r696, %r1128, %r1898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1899, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1900, %r1898, %r1899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1903, %r1895, %r1900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1906, %r685, %r1150, %r1887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1910, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1911, %r1887, %r1910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1914, %r1906, %r1911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1917, %r696, %r1150, %r1898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1921, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1898, %r1921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1925, %r1917, %r1922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1928, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1930, %r1928, %r1846, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1934, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1936, %r1934, %r1857, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1940, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1942, %r1940, %r1868, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1946, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1948, %r1946, %r1879, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1952, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1954, %r1952, %r1892, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1958, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1960, %r1958, %r1903, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1964, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1966, %r1964, %r1914, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1970, %r206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1972, %r1970, %r1925, %r1832;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs241, %rs241};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1978, %r685, %r686, %r1981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1983, %r1981, %r1982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1986, %r1978, %r1983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1989, %r696, %r686, %r1992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1994, %r1992, %r1993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1997, %r1989, %r1994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2000, %r685, %r708, %r1981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2005, %r1981, %r2004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2008, %r2000, %r2005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2011, %r696, %r708, %r1992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2016, %r1992, %r2015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2019, %r2011, %r2016;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs241, %rs241};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2024, %r685, %r732, %r2027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2029, %r2027, %r2028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2032, %r2024, %r2029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2035, %r696, %r732, %r2038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2039, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2040, %r2038, %r2039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2043, %r2035, %r2040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2046, %r685, %r754, %r2027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2051, %r2027, %r2050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2054, %r2046, %r2051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2057, %r696, %r754, %r2038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2062, %r2038, %r2061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2065, %r2057, %r2062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2107, %r224, %r1986, %r1930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2104, %r224, %r1997, %r1936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2116, %r224, %r2008, %r1942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2113, %r224, %r2019, %r1948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2125, %r224, %r2032, %r1954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2122, %r224, %r2043, %r1960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2134, %r224, %r2054, %r1966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2131, %r224, %r2065, %r1972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2100, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2102, %r2100, %r2104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2105, %r245, %r2107, %r2102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2109, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2111, %r2109, %r2113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2114, %r245, %r2116, %r2111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2118, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2120, %r2118, %r2122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2123, %r245, %r2125, %r2120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2127, %r248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2129, %r2127, %r2131;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2132, %r245, %r2134, %r2129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2136, %r248, %r2107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2139, %r245, %r2104, %r2136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2143, %r248, %r2116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2146, %r245, %r2113, %r2143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2150, %r248, %r2125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2153, %r245, %r2122, %r2150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2157, %r248, %r2134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2160, %r245, %r2131, %r2157;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2211, %r2208}, {%r305, %r311, %r308, %r314}, {%r2105, %r2139}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2220, %r2217}, {%r305, %r311, %r308, %r314}, {%r2114, %r2146}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2229, %r2226}, {%r305, %r311, %r308, %r314}, {%r2123, %r2153}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2238, %r2235}, {%r305, %r311, %r308, %r314}, {%r2132, %r2160}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2204, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2206, %r2204, %r2208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2209, %r352, %r2211, %r2206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2213, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2215, %r2213, %r2217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2218, %r352, %r2220, %r2215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2222, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2224, %r2222, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2227, %r352, %r2229, %r2224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2231, %r355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2233, %r2231, %r2235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2236, %r352, %r2238, %r2233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2240, %r355, %r2211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2243, %r352, %r2208, %r2240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2247, %r355, %r2220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r352, %r2217, %r2247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2254, %r355, %r2229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2257, %r352, %r2226, %r2254;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2261, %r355, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2264, %r352, %r2235, %r2261;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2268, %r2269}, {%r392, %r398, %r395, %r401}, {%r2209, %r2243}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2278, %r2279}, {%r392, %r398, %r395, %r401}, {%r2218, %r2250}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2288, %r2289}, {%r392, %r398, %r395, %r401}, {%r2227, %r2257}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2298, %r2299}, {%r392, %r398, %r395, %r401}, {%r2236, %r2264}, {%r2597, %r2597};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2308, %r82, %r2268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2311, %r82, %r2269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2314, %r82, %r2278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2317, %r82, %r2279;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2320, %r82, %r2288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2323, %r82, %r2289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2326, %r82, %r2298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2329, %r82, %r2299;
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2333, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2334, %r2308, %r2332;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2337, %r2334, %r2333;
	// end inline asm
	// begin inline asm
	mov.b32 %r2340, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2341, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2342, %r2311, %r2340;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2345, %r2342, %r2341;
	// end inline asm
	// begin inline asm
	mov.b32 %r2348, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2349, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2350, %r2314, %r2348;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2353, %r2350, %r2349;
	// end inline asm
	// begin inline asm
	mov.b32 %r2356, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2357, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2358, %r2317, %r2356;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2361, %r2358, %r2357;
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2365, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2366, %r2320, %r2364;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2369, %r2366, %r2365;
	// end inline asm
	// begin inline asm
	mov.b32 %r2372, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2373, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2374, %r2323, %r2372;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2377, %r2374, %r2373;
	// end inline asm
	// begin inline asm
	mov.b32 %r2380, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2381, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2382, %r2326, %r2380;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2385, %r2382, %r2381;
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs102, %rs102};
	// end inline asm
	// begin inline asm
	mov.b32 %r2389, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2390, %r2329, %r2388;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2393, %r2390, %r2389;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2398, %r2399, %r2397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2337, %r2398;
	// end inline asm
	// begin inline asm
	mov.b32 %r2404, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2399, %r2404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2408, %r2345, %r2405;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2399, %r2411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2415, %r2353, %r2412;
	// end inline asm
	// begin inline asm
	mov.b32 %r2418, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2399, %r2418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2361, %r2419;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2425, %r2401, %r2415, %r1530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2429, %r2408, %r2422, %r1530;
	// end inline asm
	shl.b32 	%r2436, %r2429, 4;
	// begin inline asm
	lop3.b32 %r2433, %r1536, %r2425, %r2436, 202;
	// end inline asm
	xor.b32  	%r2498, %r2433, -2004318072;
	// begin inline asm
	mov.b32 %r2440, {%rs293, %rs293};
	// end inline asm
	// begin inline asm
	mov.b32 %r2438, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2439, %r2440, %r2438;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2442, %r2369, %r2439;
	// end inline asm
	// begin inline asm
	mov.b32 %r2445, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2446, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2449, %r2377, %r2446;
	// end inline asm
	// begin inline asm
	mov.b32 %r2452, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2453, %r2440, %r2452;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2385, %r2453;
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs301, %rs301};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2460, %r2440, %r2459;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2393, %r2460;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2442, %r2456, %r1530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2449, %r2463, %r1530;
	// end inline asm
	shl.b32 	%r2477, %r2470, 4;
	// begin inline asm
	lop3.b32 %r2474, %r1536, %r2466, %r2477, 202;
	// end inline asm
	xor.b32  	%r2499, %r2474, -2004318072;
	st.shared.u32 	[%rd151], %r2498;
	st.shared.u32 	[%rd152], %r2499;
	add.s32 	%r2620, %r2620, 32;
	add.s64 	%rd152, %rd152, 4228;
	add.s64 	%rd151, %rd151, 4228;
	setp.eq.s32 	%p217, %r2620, 256;
	mov.u32 	%r2621, %r2608;
	mov.u32 	%r2622, %r2607;
	mov.u32 	%r2623, %r2606;
	mov.u32 	%r2624, %r2605;
	@%p217 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit10352
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	or.b32  	%r127, %r74, %r55;
	ld.shared.u32 	%r2505, [%rd22];
	ld.shared.u32 	%r2506, [%rd23+128];
	ld.shared.u32 	%r2513, [%rd23+4];
	ld.shared.u32 	%r2514, [%rd23+132];
	or.b32  	%r128, %r127, 64;
	ld.shared.u32 	%r2521, [%rd24];
	ld.shared.u32 	%r2522, [%rd25+128];
	ld.shared.u32 	%r2529, [%rd25+4];
	ld.shared.u32 	%r2530, [%rd25+132];
	ld.shared.u32 	%r2537, [%rd26];
	ld.shared.u32 	%r2538, [%rd27+128];
	ld.shared.u32 	%r2545, [%rd27+4];
	ld.shared.u32 	%r2546, [%rd27+132];
	ld.shared.u32 	%r2553, [%rd28];
	ld.shared.u32 	%r2554, [%rd29+128];
	ld.shared.u32 	%r2561, [%rd29+4];
	ld.shared.u32 	%r2562, [%rd29+132];
	// begin inline asm
	prmt.b32 %r2500, %r2505, %r2506, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2504, %r2505, %r2506, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2508, %r2513, %r2514, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2512, %r2513, %r2514, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2516, %r2521, %r2522, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2520, %r2521, %r2522, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2524, %r2529, %r2530, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2528, %r2529, %r2530, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2532, %r2537, %r2538, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2536, %r2537, %r2538, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2540, %r2545, %r2546, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2544, %r2545, %r2546, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2548, %r2553, %r2554, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2552, %r2553, %r2554, %r603;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2556, %r2561, %r2562, %r599;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2560, %r2561, %r2562, %r603;
	// end inline asm
	selp.b32 	%r2564, %r2504, %r2500, %p204;
	shfl.sync.bfly.b32	%r133, %r2564, 8, 31, -1;
	selp.b32 	%r2565, %r2512, %r2508, %p204;
	shfl.sync.bfly.b32	%r134, %r2565, 8, 31, -1;
	selp.b32 	%r2566, %r2520, %r2516, %p204;
	shfl.sync.bfly.b32	%r2567, %r2566, 8, 31, -1;
	selp.b32 	%r2568, %r2528, %r2524, %p204;
	shfl.sync.bfly.b32	%r2569, %r2568, 8, 31, -1;
	selp.b32 	%r2570, %r2536, %r2532, %p204;
	shfl.sync.bfly.b32	%r2571, %r2570, 8, 31, -1;
	selp.b32 	%r2572, %r2544, %r2540, %p204;
	shfl.sync.bfly.b32	%r2573, %r2572, 8, 31, -1;
	selp.b32 	%r2574, %r2552, %r2548, %p204;
	shfl.sync.bfly.b32	%r2575, %r2574, 8, 31, -1;
	selp.b32 	%r2576, %r2560, %r2556, %p204;
	shfl.sync.bfly.b32	%r2577, %r2576, 8, 31, -1;
	setp.lt.u32 	%p219, %r127, 96;
	shl.b32 	%r2598, %r127, 11;
	@%p219 bra 	$L__BB0_87;
// %bb.86:                              // %pass9752
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r2578, %r134, %r2512, %p204;
	selp.b32 	%r2579, %r2508, %r134, %p204;
	selp.b32 	%r2580, %r133, %r2504, %p204;
	selp.b32 	%r2581, %r2500, %r133, %p204;
	or.b32  	%r2583, %r2598, %r64;
	or.b32  	%r2584, %r2583, %r58;
	cvt.s64.s32 	%rd99, %r2584;
	add.s64 	%rd100, %rd99, %rd5;
	shr.u64 	%rd101, %rd100, 38;
	add.s64 	%rd102, %rd100, %rd101;
	shr.s64 	%rd103, %rd102, 26;
	setp.lt.s64 	%p221, %rd100, 0;
	and.b64  	%rd104, %rd102, -67108864;
	setp.ne.s64 	%p222, %rd104, %rd100;
	and.pred  	%p223, %p221, %p222;
	selp.u64 	%rd105, 1, 0, %p223;
	sub.s64 	%rd106, %rd105, %rd103;
	shl.b64 	%rd107, %rd106, 26;
	add.s64 	%rd108, %rd107, %rd100;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd110, %rd3, %rd109;
	st.global.v4.u32 	[%rd110], {%r2581, %r2579, %r2580, %r2578};
$L__BB0_87:                             // %pass9774
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r139, %r2532, %r2571, %p204;
	selp.b32 	%r140, %r2571, %r2536, %p204;
	selp.b32 	%r141, %r2540, %r2573, %p204;
	selp.b32 	%r142, %r2573, %r2544, %p204;
	selp.b32 	%r143, %r2548, %r2575, %p204;
	selp.b32 	%r144, %r2575, %r2552, %p204;
	selp.b32 	%r145, %r2556, %r2577, %p204;
	selp.b32 	%r146, %r2577, %r2560, %p204;
	setp.lt.u32 	%p224, %r128, 96;
	@%p224 bra 	$L__BB0_89;
// %bb.88:                              // %pass9868
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r135, %r2516, %r2567, %p204;
	selp.b32 	%r136, %r2567, %r2520, %p204;
	selp.b32 	%r137, %r2524, %r2569, %p204;
	selp.b32 	%r138, %r2569, %r2528, %p204;
	shl.b32 	%r2585, %r128, 11;
	or.b32  	%r2586, %r2585, %r64;
	or.b32  	%r2587, %r2586, %r58;
	cvt.s64.s32 	%rd111, %r2587;
	add.s64 	%rd112, %rd111, %rd5;
	shr.u64 	%rd113, %rd112, 38;
	add.s64 	%rd114, %rd112, %rd113;
	shr.s64 	%rd115, %rd114, 26;
	setp.lt.s64 	%p225, %rd112, 0;
	and.b64  	%rd116, %rd114, -67108864;
	setp.ne.s64 	%p226, %rd116, %rd112;
	and.pred  	%p227, %p225, %p226;
	selp.u64 	%rd117, 1, 0, %p227;
	sub.s64 	%rd118, %rd117, %rd115;
	shl.b64 	%rd119, %rd118, 26;
	add.s64 	%rd120, %rd119, %rd112;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd122, %rd3, %rd121;
	st.global.v4.u32 	[%rd122], {%r135, %r137, %r136, %r138};
	bra.uni 	$L__BB0_89;
$L__BB0_90:                             // %L22616
	st.global.u32 	[%rd4], %r2597;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r2596, 2;
	st.global.u32 	[%rd4], %r2596;
	mov.u64 	%rd149, exception2069;
	cvta.global.u64 	%rd150, %rd149;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r147;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2595, 3;
	st.global.u32 	[%rd4], %r2595;
	mov.u64 	%rd147, exception2069;
	cvta.global.u64 	%rd148, %rd147;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd148;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r147;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd43, exception12089;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r147;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
