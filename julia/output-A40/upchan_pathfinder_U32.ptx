// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2082[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<196>;
	.reg .b16 	%rs<297>;
	.reg .b32 	%r<2559>;
	.reg .f32 	%f<794>;
	.reg .b64 	%rd<153>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r87, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r94, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r94, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd39, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r88, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r95, %r4, 9;
	or.b32  	%r96, %r2, %r3;
	or.b32  	%r97, %r96, %r95;
	mul.wide.u32 	%rd45, %r97, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r98, 1;
	st.global.u32 	[%rd4], %r98;
	setp.gt.u32 	%p2, %r88, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r89, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r89, %r88;
	setp.gt.s32 	%p4, %r89, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r90, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r99, %r89, %r88;
	and.b32  	%r100, %r99, 255;
	setp.ne.s32 	%p6, %r100, 0;
	setp.gt.u32 	%p7, %r90, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r91, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r91, %r90;
	setp.gt.s32 	%p10, %r91, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r101, %r91, %r90;
	add.s32 	%r102, %r101, 3;
	and.b32  	%r103, %r102, 7;
	setp.eq.s32 	%p12, %r103, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r92, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r92, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r93, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r92, %r93;
	setp.lt.s32 	%p15, %r93, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass177
	bfe.u32 	%r49, %r3, 1, 1;
	and.b32  	%r50, %r3, 1;
	bfe.u32 	%r51, %r3, 2, 1;
	shl.b32 	%r111, %r51, 1;
	shl.b32 	%r112, %r50, 2;
	shl.b32 	%r113, %r49, 3;
	or.b32  	%r114, %r112, %r113;
	or.b32  	%r115, %r111, %r114;
	shr.u32 	%r52, %r3, 4;
	or.b32  	%r53, %r52, %r115;
	shl.b32 	%r54, %r53, 1;
	or.b32  	%r116, %r54, -127;
	cvt.rn.f32.s32 	%f46, %r116;
	mov.f32 	%f47, 0f43800000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p22, %f44, 0f00000000;
	mov.f32 	%f793, 0f3F800000;
	mov.f32 	%f786, %f793;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L575
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r124, %f74;
	and.b32  	%r125, %r124, -2147483648;
	or.b32  	%r126, %r125, 1056964608;
	mov.b32 	%f75, %r126;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p23, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p23;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p24, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p24;
	cvt.rzi.s32.f32 	%r127, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r128, %r127, 1;
	setp.eq.b32 	%p25, %r128, 1;
	selp.f32 	%f93, %f91, %f92, %p25;
	and.b32  	%r129, %r127, 2;
	setp.eq.s32 	%p26, %r129, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p26;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p27, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p27;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f786, %f99, %f100;
$L__BB0_13:                             // %L579
	or.b32  	%r130, %r54, -95;
	cvt.rn.f32.s32 	%f104, %r130;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p33, %f6, 0f00000000;
	mov.f32 	%f787, %f793;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %L593
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r138, %f132;
	and.b32  	%r139, %r138, -2147483648;
	or.b32  	%r140, %r139, 1056964608;
	mov.b32 	%f133, %r140;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p34, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p34;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p35, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p35;
	cvt.rzi.s32.f32 	%r141, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r142, %r141, 1;
	setp.eq.b32 	%p36, %r142, 1;
	selp.f32 	%f151, %f149, %f150, %p36;
	and.b32  	%r143, %r141, 2;
	setp.eq.s32 	%p37, %r143, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p37;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p38, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p38;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f787, %f157, %f158;
$L__BB0_15:                             // %L597
	or.b32  	%r147, %r54, -63;
	cvt.rn.f32.s32 	%f163, %r147;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p44, %f11, 0f00000000;
	mov.f32 	%f788, %f793;
	@%p44 bra 	$L__BB0_17;
// %bb.16:                              // %L673
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r155, %f191;
	and.b32  	%r156, %r155, -2147483648;
	or.b32  	%r157, %r156, 1056964608;
	mov.b32 	%f192, %r157;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p45, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p45;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p46, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p46;
	cvt.rzi.s32.f32 	%r158, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r159, %r158, 1;
	setp.eq.b32 	%p47, %r159, 1;
	selp.f32 	%f210, %f208, %f209, %p47;
	and.b32  	%r160, %r158, 2;
	setp.eq.s32 	%p48, %r160, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p48;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p49, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p49;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f788, %f216, %f217;
$L__BB0_17:                             // %L677
	or.b32  	%r161, %r54, -31;
	cvt.rn.f32.s32 	%f221, %r161;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p55, %f17, 0f00000000;
	mov.f32 	%f789, %f793;
	@%p55 bra 	$L__BB0_19;
// %bb.18:                              // %L691
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r169, %f249;
	and.b32  	%r170, %r169, -2147483648;
	or.b32  	%r171, %r170, 1056964608;
	mov.b32 	%f250, %r171;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p56, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p56;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p57, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p57;
	cvt.rzi.s32.f32 	%r172, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r173, %r172, 1;
	setp.eq.b32 	%p58, %r173, 1;
	selp.f32 	%f268, %f266, %f267, %p58;
	and.b32  	%r174, %r172, 2;
	setp.eq.s32 	%p59, %r174, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p59;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p60, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p60;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f789, %f274, %f275;
$L__BB0_19:                             // %L695
	or.b32  	%r178, %r54, 1;
	cvt.rn.f32.s32 	%f280, %r178;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p66, %f22, 0f00000000;
	mov.f32 	%f790, %f793;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L771
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r186, %f308;
	and.b32  	%r187, %r186, -2147483648;
	or.b32  	%r188, %r187, 1056964608;
	mov.b32 	%f309, %r188;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p67, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p67;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p68, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p68;
	cvt.rzi.s32.f32 	%r189, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r190, %r189, 1;
	setp.eq.b32 	%p69, %r190, 1;
	selp.f32 	%f327, %f325, %f326, %p69;
	and.b32  	%r191, %r189, 2;
	setp.eq.s32 	%p70, %r191, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p70;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p71, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p71;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f790, %f333, %f334;
$L__BB0_21:                             // %L775
	or.b32  	%r192, %r54, 33;
	cvt.rn.f32.s32 	%f338, %r192;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p77, %f28, 0f00000000;
	mov.f32 	%f791, %f793;
	@%p77 bra 	$L__BB0_23;
// %bb.22:                              // %L789
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r200, %f366;
	and.b32  	%r201, %r200, -2147483648;
	or.b32  	%r202, %r201, 1056964608;
	mov.b32 	%f367, %r202;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p78, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p78;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p79, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p79;
	cvt.rzi.s32.f32 	%r203, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r204, %r203, 1;
	setp.eq.b32 	%p80, %r204, 1;
	selp.f32 	%f385, %f383, %f384, %p80;
	and.b32  	%r205, %r203, 2;
	setp.eq.s32 	%p81, %r205, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p81;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p82, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p82;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f791, %f391, %f392;
$L__BB0_23:                             // %L793
	or.b32  	%r209, %r54, 65;
	cvt.rn.f32.s32 	%f397, %r209;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p88, %f33, 0f00000000;
	mov.f32 	%f792, %f793;
	@%p88 bra 	$L__BB0_25;
// %bb.24:                              // %L869
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r217, %f425;
	and.b32  	%r218, %r217, -2147483648;
	or.b32  	%r219, %r218, 1056964608;
	mov.b32 	%f426, %r219;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p89, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p89;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p90, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p90;
	cvt.rzi.s32.f32 	%r220, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r221, %r220, 1;
	setp.eq.b32 	%p91, %r221, 1;
	selp.f32 	%f444, %f442, %f443, %p91;
	and.b32  	%r222, %r220, 2;
	setp.eq.s32 	%p92, %r222, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p92;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p93, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p93;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f792, %f450, %f451;
$L__BB0_25:                             // %L873
	or.b32  	%r223, %r54, 97;
	cvt.rn.f32.s32 	%f455, %r223;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p99, %f39, 0f00000000;
	@%p99 bra 	$L__BB0_27;
// %bb.26:                              // %L887
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r231, %f483;
	and.b32  	%r232, %r231, -2147483648;
	or.b32  	%r233, %r232, 1056964608;
	mov.b32 	%f484, %r233;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p100, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p100;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p101, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p101;
	cvt.rzi.s32.f32 	%r234, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r235, %r234, 1;
	setp.eq.b32 	%p102, %r235, 1;
	selp.f32 	%f502, %f500, %f501, %p102;
	and.b32  	%r236, %r234, 2;
	setp.eq.s32 	%p103, %r236, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p103;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p104, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p104;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f793, %f508, %f509;
$L__BB0_27:                             // %L891
	setp.le.s32 	%p162, %r89, %r88;
	mov.u32 	%r2543, 0;
	@%p162 bra 	$L__BB0_36;
// %bb.28:                              // %L1403.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p17, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p28, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p39, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p50, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p61, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p72, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p17;
	selp.f32 	%f108, %f107, %f4, %p28;
	selp.f32 	%f167, %f166, %f9, %p39;
	selp.f32 	%f225, %f224, %f15, %p50;
	selp.f32 	%f284, %f283, %f20, %p61;
	selp.f32 	%f342, %f341, %f26, %p72;
	setp.gt.f32 	%p83, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p83;
	abs.f32 	%f457, %f37;
	mov.b32 	%r117, %f51;
	mov.b32 	%r131, %f109;
	mov.b32 	%r148, %f168;
	mov.b32 	%r162, %f226;
	mov.b32 	%r179, %f285;
	mov.b32 	%r193, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p94, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r118, %r117, -2147483648;
	and.b32  	%r132, %r131, -2147483648;
	and.b32  	%r149, %r148, -2147483648;
	and.b32  	%r163, %r162, -2147483648;
	and.b32  	%r180, %r179, -2147483648;
	and.b32  	%r194, %r193, -2147483648;
	mov.b32 	%r210, %f402;
	selp.f32 	%f459, %f458, %f37, %p94;
	or.b32  	%r119, %r118, 1056964608;
	or.b32  	%r133, %r132, 1056964608;
	or.b32  	%r150, %r149, 1056964608;
	or.b32  	%r164, %r163, 1056964608;
	or.b32  	%r181, %r180, 1056964608;
	or.b32  	%r195, %r194, 1056964608;
	and.b32  	%r211, %r210, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r119;
	mov.b32 	%f110, %r133;
	mov.b32 	%f169, %r150;
	mov.b32 	%f227, %r164;
	mov.b32 	%f286, %r181;
	mov.b32 	%f344, %r195;
	or.b32  	%r212, %r211, 1056964608;
	mov.b32 	%r224, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r212;
	and.b32  	%r225, %r224, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p18, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p29, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p40, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p51, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p62, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p73, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r226, %r225, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p18;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p19, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p29;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p30, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p40;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p41, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p51;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p52, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p62;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p63, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p73;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p74, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p84, %f406, 0f4B000000;
	mov.b32 	%f461, %r226;
	selp.f32 	%f58, %f57, %f56, %p19;
	selp.f32 	%f116, %f115, %f114, %p30;
	selp.f32 	%f175, %f174, %f173, %p41;
	selp.f32 	%f233, %f232, %f231, %p52;
	selp.f32 	%f292, %f291, %f290, %p63;
	selp.f32 	%f350, %f349, %f348, %p74;
	selp.f32 	%f407, %f402, %f405, %p84;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p85, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p85;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p95, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p95;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p96, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r120, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r134, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r151, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r165, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r182, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r196, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p96;
	shl.b32 	%r42, %r3, 1;
	add.s32 	%r121, %r120, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r135, %r134, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r152, %r151, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r166, %r165, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r183, %r182, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r197, %r196, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r213, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	and.b32  	%r104, %r3, 16;
	and.b32  	%r43, %r42, 8;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r122, %r121, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r136, %r135, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r153, %r152, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r167, %r166, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r184, %r183, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r198, %r197, 1;
	add.s32 	%r214, %r213, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	or.b32  	%r105, %r104, %r43;
	shl.b32 	%r44, %r4, 5;
	shl.b32 	%r45, %r3, 2;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p20, %r122, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p31, %r136, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p42, %r153, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p53, %r167, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p64, %r184, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p75, %r198, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r215, %r214, 1;
	cvt.rzi.s32.f32 	%r227, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r106, %r105, %r44;
	and.b32  	%r46, %r45, 4;
	selp.f32 	%f70, %f68, %f69, %p20;
	and.b32  	%r123, %r121, 2;
	selp.f32 	%f128, %f126, %f127, %p31;
	and.b32  	%r137, %r135, 2;
	selp.f32 	%f187, %f185, %f186, %p42;
	and.b32  	%r154, %r152, 2;
	selp.f32 	%f245, %f243, %f244, %p53;
	and.b32  	%r168, %r166, 2;
	selp.f32 	%f304, %f302, %f303, %p64;
	and.b32  	%r185, %r183, 2;
	selp.f32 	%f362, %f360, %f361, %p75;
	and.b32  	%r199, %r197, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p86, %r215, 1;
	add.s32 	%r228, %r227, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	or.b32  	%r107, %r106, %r46;
	and.b32  	%r108, %r3, 2;
	setp.eq.s32 	%p21, %r123, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p32, %r137, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p43, %r154, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p54, %r168, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p65, %r185, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p76, %r199, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p86;
	and.b32  	%r216, %r214, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r229, %r228, 1;
	or.b32  	%r109, %r107, %r108;
	selp.f32 	%f73, %f70, %f72, %p21;
	selp.f32 	%f131, %f128, %f130, %p32;
	selp.f32 	%f190, %f187, %f189, %p43;
	selp.f32 	%f248, %f245, %f247, %p54;
	selp.f32 	%f307, %f304, %f306, %p65;
	selp.f32 	%f365, %f362, %f364, %p76;
	setp.eq.s32 	%p87, %r216, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p97, %r229, 1;
	bfe.u32 	%r110, %r109, 1, 10;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p87;
	selp.f32 	%f479, %f477, %f478, %p97;
	and.b32  	%r230, %r228, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd46, %r110, 4;
	mul.f32 	%f102, %f786, %f43;
	mov.f32 	%f103, 0f42000000;
	mul.f32 	%f160, %f787, %f5;
	mul.f32 	%f219, %f788, %f10;
	mul.f32 	%f277, %f789, %f16;
	mul.f32 	%f336, %f790, %f21;
	mul.f32 	%f394, %f791, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p98, %r230, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd47, %rd1, %rd46;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f792, %f32;
	selp.f32 	%f482, %f479, %f481, %p98;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r47, [%rd47];
	shr.u32 	%r48, %r3, 1;
	mov.b32 	%r146, %f162;
	mov.b32 	%r145, %f3;
	mov.b32 	%r177, %f279;
	mov.b32 	%r176, %f14;
	mov.b32 	%r208, %f396;
	mov.b32 	%r207, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r144, %r146, %r145;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r175, %r177, %r176;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r206, %r208, %r207;
	// end inline asm
	mul.f32 	%f510, %f793, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r239, %f512;
	mov.b32 	%r238, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r237, %r239, %r238;
	// end inline asm
	mul.lo.s32 	%r276, %r53, 31;
	and.b32  	%r277, %r276, 63;
	cvt.rn.f32.s32 	%f513, %r277;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r278, %f515;
	and.b32  	%r279, %r278, -2147483648;
	or.b32  	%r280, %r279, 1056964608;
	mov.b32 	%f516, %r280;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p105, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p105;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p106, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p106;
	cvt.rzi.s32.f32 	%r281, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r282, %r281, 1;
	setp.eq.b32 	%p107, %r282, 1;
	selp.f32 	%f534, %f532, %f533, %p107;
	selp.f32 	%f535, %f533, %f532, %p107;
	and.b32  	%r283, %r281, 2;
	setp.eq.s32 	%p108, %r283, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p108;
	add.s32 	%r284, %r281, 1;
	and.b32  	%r285, %r284, 2;
	setp.eq.s32 	%p109, %r285, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p109;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p110, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p110;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p111, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p111;
	add.s32 	%r286, %r276, 48;
	and.b32  	%r287, %r286, 63;
	cvt.rn.f32.s32 	%f547, %r287;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r288, %f549;
	and.b32  	%r289, %r288, -2147483648;
	or.b32  	%r290, %r289, 1056964608;
	mov.b32 	%f550, %r290;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p112, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p112;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p113, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p113;
	cvt.rzi.s32.f32 	%r291, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r292, %r291, 1;
	setp.eq.b32 	%p114, %r292, 1;
	selp.f32 	%f568, %f566, %f567, %p114;
	selp.f32 	%f569, %f567, %f566, %p114;
	and.b32  	%r293, %r291, 2;
	setp.eq.s32 	%p115, %r293, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p115;
	add.s32 	%r294, %r291, 1;
	and.b32  	%r295, %r294, 2;
	setp.eq.s32 	%p116, %r295, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p116;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p117, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p117;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p118, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p118;
	mov.b32 	%r241, %f546;
	mov.b32 	%r242, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r240, %r242, %r241;
	// end inline asm
	mov.b32 	%r244, %f543;
	mov.b32 	%r245, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r243, %r245, %r244;
	// end inline asm
	shr.u32 	%r11, %r3, 3;
	and.b32  	%r296, %r11, 2;
	and.b32  	%r297, %r48, 4;
	or.b32  	%r298, %r51, %r296;
	or.b32  	%r299, %r298, %r297;
	and.b32  	%r300, %r42, 6;
	mul.lo.s32 	%r301, %r299, %r300;
	and.b32  	%r302, %r301, 14;
	cvt.rn.f32.s32 	%f580, %r302;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r303, %f583;
	and.b32  	%r304, %r303, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	mov.b32 	%f584, %r305;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p119, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p119;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p120, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p120;
	cvt.rzi.s32.f32 	%r306, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r307, %r306, 1;
	setp.eq.b32 	%p121, %r307, 1;
	selp.f32 	%f602, %f600, %f601, %p121;
	selp.f32 	%f603, %f601, %f600, %p121;
	and.b32  	%r308, %r306, 2;
	setp.eq.s32 	%p122, %r308, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p122;
	add.s32 	%r309, %r306, 1;
	and.b32  	%r310, %r309, 2;
	setp.eq.s32 	%p123, %r310, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p123;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p124, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p124;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p125, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p125;
	or.b32  	%r311, %r42, 8;
	mul.lo.s32 	%r312, %r299, %r311;
	and.b32  	%r313, %r312, 14;
	cvt.rn.f32.s32 	%f614, %r313;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r314, %f616;
	and.b32  	%r315, %r314, -2147483648;
	or.b32  	%r316, %r315, 1056964608;
	mov.b32 	%f617, %r316;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p126, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p126;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p127, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p127;
	cvt.rzi.s32.f32 	%r317, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r318, %r317, 1;
	setp.eq.b32 	%p128, %r318, 1;
	selp.f32 	%f635, %f633, %f634, %p128;
	selp.f32 	%f636, %f634, %f633, %p128;
	and.b32  	%r319, %r317, 2;
	setp.eq.s32 	%p129, %r319, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p129;
	add.s32 	%r320, %r317, 1;
	and.b32  	%r321, %r320, 2;
	setp.eq.s32 	%p130, %r321, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p130;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p131, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p131;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p132, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p132;
	mov.b32 	%r247, %f613;
	mov.b32 	%r248, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r246, %r248, %r247;
	// end inline asm
	mov.b32 	%r250, %f610;
	mov.b32 	%r251, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r249, %r251, %r250;
	// end inline asm
	xor.b32  	%r253, %r250, -2147483648;
	xor.b32  	%r254, %r251, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r252, %r254, %r253;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r248, %r247;
	// end inline asm
	shl.b32 	%r322, %r49, 1;
	mul.lo.s32 	%r323, %r322, %r299;
	cvt.rn.f32.s32 	%f647, %r323;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r324, %f649;
	and.b32  	%r325, %r324, -2147483648;
	or.b32  	%r326, %r325, 1056964608;
	mov.b32 	%f650, %r326;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p133, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p133;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p134, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p134;
	cvt.rzi.s32.f32 	%r327, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r328, %r327, 1;
	setp.eq.b32 	%p135, %r328, 1;
	selp.f32 	%f668, %f666, %f667, %p135;
	selp.f32 	%f669, %f667, %f666, %p135;
	and.b32  	%r329, %r327, 2;
	setp.eq.s32 	%p136, %r329, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p136;
	add.s32 	%r330, %r327, 1;
	and.b32  	%r331, %r330, 2;
	setp.eq.s32 	%p137, %r331, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p137;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p138, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p138;
	mov.b32 	%r332, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p139, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p139;
	shl.b32 	%r333, %r299, 2;
	add.s32 	%r334, %r323, %r333;
	cvt.rn.f32.s32 	%f680, %r334;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r335, %f682;
	and.b32  	%r336, %r335, -2147483648;
	or.b32  	%r337, %r336, 1056964608;
	mov.b32 	%f683, %r337;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p140, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p140;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p141, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p141;
	cvt.rzi.s32.f32 	%r338, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r339, %r338, 1;
	setp.eq.b32 	%p142, %r339, 1;
	selp.f32 	%f701, %f699, %f700, %p142;
	selp.f32 	%f702, %f700, %f699, %p142;
	and.b32  	%r340, %r338, 2;
	setp.eq.s32 	%p143, %r340, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p143;
	add.s32 	%r341, %r338, 1;
	and.b32  	%r342, %r341, 2;
	setp.eq.s32 	%p144, %r342, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p144;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p145, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p145;
	mov.b32 	%r343, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p146, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p146;
	mov.b32 	%r260, %f712;
	mov.b32 	%r259, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r258, %r260, %r259;
	// end inline asm
	xor.b32  	%r263, %r343, -2147483648;
	xor.b32  	%r262, %r332, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r261, %r263, %r262;
	// end inline asm
	bfe.u32 	%r344, %r3, 3, 1;
	setp.eq.s32 	%p147, %r344, %r50;
	mul.lo.s32 	%r345, %r322, %r298;
	cvt.rn.f32.s32 	%f713, %r345;
	mov.f32 	%f714, 0f40800000;
	div.approx.f32 	%f715, %f713, %f714;
	add.f32 	%f716, %f715, %f715;
	mov.b32 	%r346, %f716;
	and.b32  	%r347, %r346, -2147483648;
	or.b32  	%r348, %r347, 1056964608;
	mov.b32 	%f717, %r348;
	add.f32 	%f718, %f716, %f717;
	cvt.rzi.f32.f32 	%f719, %f718;
	abs.f32 	%f720, %f716;
	setp.gt.f32 	%p148, %f720, 0f4B000000;
	selp.f32 	%f721, %f716, %f719, %p148;
	cvt.rzi.f32.f32 	%f722, %f716;
	setp.lt.f32 	%p149, %f720, 0f3F000000;
	selp.f32 	%f723, %f722, %f721, %p149;
	cvt.rzi.s32.f32 	%r349, %f723;
	fma.rn.f32 	%f724, %f723, 0fBF000000, %f715;
	mul.f32 	%f725, %f724, %f724;
	fma.rn.f32 	%f726, %f725, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f727, %f725, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f728, %f726, %f725, 0fC0A55DF6;
	fma.rn.f32 	%f729, %f727, %f725, 0f4081E0CF;
	fma.rn.f32 	%f730, %f725, %f724, 0f00000000;
	fma.rn.f32 	%f731, %f729, %f725, 0fC09DE9E6;
	fma.rn.f32 	%f732, %f728, %f730, 0f00000000;
	fma.rn.f32 	%f733, %f731, %f725, 0f3F800000;
	fma.rn.f32 	%f734, %f724, 0f40490FDB, %f732;
	and.b32  	%r350, %r349, 1;
	setp.eq.b32 	%p150, %r350, 1;
	selp.f32 	%f735, %f733, %f734, %p150;
	selp.f32 	%f736, %f734, %f733, %p150;
	and.b32  	%r351, %r349, 2;
	setp.eq.s32 	%p151, %r351, 0;
	neg.f32 	%f737, %f735;
	selp.f32 	%f738, %f735, %f737, %p151;
	add.s32 	%r352, %r349, 1;
	and.b32  	%r353, %r352, 2;
	setp.eq.s32 	%p152, %r353, 0;
	sub.f32 	%f739, %f71, %f736;
	selp.f32 	%f740, %f736, %f739, %p152;
	cvt.rzi.f32.f32 	%f741, %f715;
	setp.eq.f32 	%p153, %f741, %f715;
	mul.f32 	%f742, %f715, 0f00000000;
	selp.f32 	%f743, %f742, %f738, %p153;
	abs.f32 	%f744, %f715;
	setp.gt.f32 	%p154, %f744, 0f4B800000;
	add.f32 	%f745, %f743, 0f3F800000;
	selp.f32 	%f746, %f745, %f740, %p154;
	selp.f32 	%f747, 0f3F800000, 0f00000000, %p147;
	mul.f32 	%f748, %f746, %f747;
	neg.f32 	%f749, %f747;
	mul.f32 	%f750, %f743, %f749;
	shl.b32 	%r354, %r51, 2;
	add.s32 	%r355, %r345, %r354;
	and.b32  	%r356, %r355, 6;
	cvt.rn.f32.s32 	%f751, %r356;
	div.approx.f32 	%f752, %f751, %f714;
	add.f32 	%f753, %f752, %f752;
	mov.b32 	%r357, %f753;
	and.b32  	%r358, %r357, -2147483648;
	or.b32  	%r359, %r358, 1056964608;
	mov.b32 	%f754, %r359;
	add.f32 	%f755, %f753, %f754;
	cvt.rzi.f32.f32 	%f756, %f755;
	abs.f32 	%f757, %f753;
	setp.gt.f32 	%p155, %f757, 0f4B000000;
	selp.f32 	%f758, %f753, %f756, %p155;
	cvt.rzi.f32.f32 	%f759, %f753;
	setp.lt.f32 	%p156, %f757, 0f3F000000;
	selp.f32 	%f760, %f759, %f758, %p156;
	cvt.rzi.s32.f32 	%r360, %f760;
	fma.rn.f32 	%f761, %f760, 0fBF000000, %f752;
	mul.f32 	%f762, %f761, %f761;
	fma.rn.f32 	%f763, %f762, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f764, %f762, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f765, %f763, %f762, 0fC0A55DF6;
	fma.rn.f32 	%f766, %f764, %f762, 0f4081E0CF;
	fma.rn.f32 	%f767, %f762, %f761, 0f00000000;
	fma.rn.f32 	%f768, %f766, %f762, 0fC09DE9E6;
	fma.rn.f32 	%f769, %f765, %f767, 0f00000000;
	fma.rn.f32 	%f770, %f768, %f762, 0f3F800000;
	fma.rn.f32 	%f771, %f761, 0f40490FDB, %f769;
	and.b32  	%r361, %r360, 1;
	setp.eq.b32 	%p157, %r361, 1;
	selp.f32 	%f772, %f770, %f771, %p157;
	selp.f32 	%f773, %f771, %f770, %p157;
	and.b32  	%r362, %r360, 2;
	setp.eq.s32 	%p158, %r362, 0;
	neg.f32 	%f774, %f772;
	selp.f32 	%f775, %f772, %f774, %p158;
	add.s32 	%r363, %r360, 1;
	and.b32  	%r364, %r363, 2;
	setp.eq.s32 	%p159, %r364, 0;
	sub.f32 	%f776, %f71, %f773;
	selp.f32 	%f777, %f773, %f776, %p159;
	cvt.rzi.f32.f32 	%f778, %f752;
	setp.eq.f32 	%p160, %f778, %f752;
	mul.f32 	%f779, %f752, 0f00000000;
	selp.f32 	%f780, %f779, %f775, %p160;
	abs.f32 	%f781, %f752;
	setp.gt.f32 	%p161, %f781, 0f4B800000;
	add.f32 	%f782, %f780, 0f3F800000;
	selp.f32 	%f783, %f782, %f777, %p161;
	mul.f32 	%f784, %f783, %f747;
	mul.f32 	%f785, %f780, %f749;
	mov.b32 	%r265, %f748;
	mov.b32 	%r266, %f784;
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	mov.b32 	%r271, %f750;
	xor.b32  	%r268, %r271, -2147483648;
	mov.b32 	%r272, %f785;
	xor.b32  	%r269, %r272, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r267, %r269, %r268;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r270, %r272, %r271;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r273, %r266, %r265;
	// end inline asm
	shl.b32 	%r366, %r1, 2;
	and.b32  	%r22, %r366, 32;
	and.b32  	%r23, %r48, 8;
	and.b32  	%r24, %r1, 7;
	and.b32  	%r25, %r42, 16;
	and.b32  	%r367, %r45, 16;
	and.b32  	%r26, %r45, 12;
	add.s32 	%r368, %r4, %r92;
	shl.b32 	%r27, %r368, 5;
	and.b32  	%r28, %r45, 28;
	and.b32  	%r29, %r3, 8;
	shl.b32 	%r369, %r3, 4;
	or.b32  	%r370, %r29, %r369;
	shr.u32 	%r371, %r370, 2;
	and.b32  	%r372, %r371, 14;
	or.b32  	%r373, %r372, %r367;
	and.b32  	%r374, %r48, 2;
	or.b32  	%r30, %r374, %r52;
	shr.u32 	%r375, %r1, 1;
	and.b32  	%r376, %r2, 32;
	or.b32  	%r377, %r25, %r375;
	or.b32  	%r31, %r377, %r376;
	or.b32  	%r32, %r31, 8;
	and.b32  	%r378, %r3, 18;
	or.b32  	%r379, %r378, %r46;
	or.b32  	%r380, %r379, %r43;
	shr.u32 	%r381, %r380, 1;
	mul.lo.s32 	%r382, %r381, 65;
	add.s32 	%r383, %r31, %r382;
	add.s32 	%r384, %r32, %r382;
	shl.b32 	%r385, %r1, 1;
	and.b32  	%r386, %r385, 14;
	shl.b32 	%r387, %r90, 16;
	add.s32 	%r388, %r387, -196608;
	and.b32  	%r389, %r366, 28;
	or.b32  	%r390, %r389, %r11;
	and.b32  	%r391, %r44, 2016;
	or.b32  	%r392, %r390, %r391;
	shl.b32 	%r393, %r392, 5;
	or.b32  	%r33, %r393, %r367;
	cvt.s64.s32 	%rd5, %r388;
	shr.u32 	%r394, %r1, 3;
	or.b32  	%r395, %r394, 2;
	or.b32  	%r396, %r394, 4;
	or.b32  	%r397, %r394, 6;
	bfe.s32 	%r398, %r1, 1, 1;
	and.b32  	%r399, %r398, 260;
	and.b32  	%r400, %r1, 1;
	neg.s32 	%r401, %r400;
	and.b32  	%r402, %r401, 520;
	mul.lo.s32 	%r403, %r394, 1057;
	bfe.u32 	%r404, %r48, 3, 1;
	mul.lo.s32 	%r405, %r404, 65;
	bfe.s32 	%r406, %r1, 2, 1;
	and.b32  	%r407, %r406, 130;
	add.s32 	%r408, %r373, %r402;
	add.s32 	%r409, %r408, %r399;
	add.s32 	%r410, %r409, %r403;
	add.s32 	%r411, %r410, %r405;
	add.s32 	%r412, %r411, %r407;
	mul.wide.u32 	%rd48, %r412, 4;
	mov.u64 	%rd49, shmem;
	add.s64 	%rd6, %rd49, %rd48;
	add.s32 	%r413, %r409, 32;
	add.s32 	%r414, %r413, %r403;
	add.s32 	%r415, %r414, %r405;
	add.s32 	%r416, %r415, %r407;
	mul.wide.u32 	%rd50, %r416, 4;
	add.s64 	%rd7, %rd49, %rd50;
	or.b32  	%r417, %r409, 1;
	add.s32 	%r418, %r417, %r403;
	add.s32 	%r419, %r418, %r405;
	add.s32 	%r420, %r419, %r407;
	mul.wide.u32 	%rd51, %r420, 4;
	add.s64 	%rd8, %rd49, %rd51;
	add.s32 	%r421, %r409, 33;
	add.s32 	%r422, %r421, %r403;
	add.s32 	%r423, %r422, %r405;
	add.s32 	%r424, %r423, %r407;
	mul.wide.u32 	%rd52, %r424, 4;
	add.s64 	%rd9, %rd49, %rd52;
	mul.lo.s32 	%r425, %r395, 1057;
	add.s32 	%r426, %r409, %r425;
	add.s32 	%r427, %r426, %r405;
	add.s32 	%r428, %r427, %r407;
	mul.wide.u32 	%rd53, %r428, 4;
	add.s64 	%rd10, %rd49, %rd53;
	add.s32 	%r429, %r413, %r425;
	add.s32 	%r430, %r429, %r405;
	add.s32 	%r431, %r430, %r407;
	mul.wide.u32 	%rd54, %r431, 4;
	add.s64 	%rd11, %rd49, %rd54;
	add.s32 	%r432, %r417, %r425;
	add.s32 	%r433, %r432, %r405;
	add.s32 	%r434, %r433, %r407;
	mul.wide.u32 	%rd55, %r434, 4;
	add.s64 	%rd12, %rd49, %rd55;
	add.s32 	%r435, %r421, %r425;
	add.s32 	%r436, %r435, %r405;
	add.s32 	%r437, %r436, %r407;
	mul.wide.u32 	%rd56, %r437, 4;
	add.s64 	%rd13, %rd49, %rd56;
	mul.lo.s32 	%r438, %r396, 1057;
	add.s32 	%r439, %r409, %r438;
	add.s32 	%r440, %r439, %r405;
	add.s32 	%r441, %r440, %r407;
	mul.wide.u32 	%rd57, %r441, 4;
	add.s64 	%rd14, %rd49, %rd57;
	add.s32 	%r442, %r413, %r438;
	add.s32 	%r443, %r442, %r405;
	add.s32 	%r444, %r443, %r407;
	mul.wide.u32 	%rd58, %r444, 4;
	add.s64 	%rd15, %rd49, %rd58;
	add.s32 	%r445, %r417, %r438;
	add.s32 	%r446, %r445, %r405;
	add.s32 	%r447, %r446, %r407;
	mul.wide.u32 	%rd59, %r447, 4;
	add.s64 	%rd16, %rd49, %rd59;
	add.s32 	%r448, %r421, %r438;
	add.s32 	%r449, %r448, %r405;
	add.s32 	%r450, %r449, %r407;
	mul.wide.u32 	%rd60, %r450, 4;
	add.s64 	%rd17, %rd49, %rd60;
	mul.lo.s32 	%r451, %r397, 1057;
	add.s32 	%r452, %r409, %r451;
	add.s32 	%r453, %r452, %r405;
	add.s32 	%r454, %r453, %r407;
	mul.wide.u32 	%rd61, %r454, 4;
	add.s64 	%rd18, %rd49, %rd61;
	add.s32 	%r455, %r413, %r451;
	add.s32 	%r456, %r455, %r405;
	add.s32 	%r457, %r456, %r407;
	mul.wide.u32 	%rd62, %r457, 4;
	add.s64 	%rd19, %rd49, %rd62;
	add.s32 	%r458, %r417, %r451;
	add.s32 	%r459, %r458, %r405;
	add.s32 	%r460, %r459, %r407;
	mul.wide.u32 	%rd63, %r460, 4;
	add.s64 	%rd20, %rd49, %rd63;
	add.s32 	%r461, %r421, %r451;
	add.s32 	%r462, %r461, %r405;
	add.s32 	%r463, %r462, %r407;
	mul.wide.u32 	%rd64, %r463, 4;
	add.s64 	%rd21, %rd49, %rd64;
	or.b32  	%r464, %r386, %r52;
	mul.lo.s32 	%r465, %r464, 65;
	add.s32 	%r466, %r373, %r465;
	add.s32 	%r467, %r466, %r403;
	mul.wide.u32 	%rd65, %r467, 4;
	add.s64 	%rd22, %rd49, %rd65;
	cvt.u64.u32 	%rd66, %r403;
	cvt.u64.u32 	%rd67, %r465;
	cvt.u64.u32 	%rd68, %r373;
	add.s64 	%rd69, %rd68, %rd67;
	add.s64 	%rd70, %rd69, %rd66;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd23, %rd49, %rd71;
	add.s32 	%r468, %r466, %r425;
	mul.wide.u32 	%rd72, %r468, 4;
	add.s64 	%rd24, %rd49, %rd72;
	cvt.u64.u32 	%rd73, %r425;
	add.s64 	%rd74, %rd69, %rd73;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd25, %rd49, %rd75;
	add.s32 	%r469, %r466, %r438;
	mul.wide.u32 	%rd76, %r469, 4;
	add.s64 	%rd26, %rd49, %rd76;
	cvt.u64.u32 	%rd77, %r438;
	add.s64 	%rd78, %rd69, %rd77;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd27, %rd49, %rd79;
	add.s32 	%r470, %r466, %r451;
	mul.wide.u32 	%rd80, %r470, 4;
	add.s64 	%rd28, %rd49, %rd80;
	cvt.u64.u32 	%rd81, %r451;
	add.s64 	%rd82, %rd69, %rd81;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd29, %rd49, %rd83;
	mul.wide.u32 	%rd84, %r384, 4;
	add.s64 	%rd30, %rd49, %rd84;
	mul.wide.u32 	%rd85, %r383, 4;
	add.s64 	%rd31, %rd49, %rd85;
	mov.u16 	%rs288, 25600;
	mov.u16 	%rs236, 21504;
	mov.u16 	%rs296, 18432;
	mov.u16 	%rs274, -14592;
	mov.u32 	%r2545, %r2543;
	mov.u32 	%r2546, %r2543;
	mov.u32 	%r2547, %r2543;
	mov.u32 	%r2548, %r2543;
	mov.u32 	%r2552, %r2543;
	mov.u32 	%r2553, %r2543;
	mov.u32 	%r40, %r2543;
	bra.uni 	$L__BB0_29;
$L__BB0_35:                             // %pass10078
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r2535, %r2544, %r33;
	or.b32  	%r2536, %r2535, %r26;
	or.b32  	%r2537, %r2536, 262144;
	cvt.s64.s32 	%rd123, %r2537;
	add.s64 	%rd124, %rd123, %rd5;
	shr.u64 	%rd125, %rd124, 38;
	add.s64 	%rd126, %rd124, %rd125;
	shr.s64 	%rd127, %rd126, 26;
	setp.lt.s64 	%p187, %rd124, 0;
	and.b64  	%rd128, %rd126, -67108864;
	setp.ne.s64 	%p188, %rd128, %rd124;
	and.pred  	%p189, %p187, %p188;
	selp.u64 	%rd129, 1, 0, %p189;
	sub.s64 	%rd130, %rd129, %rd127;
	shl.b64 	%rd131, %rd130, 26;
	add.s64 	%rd132, %rd131, %rd124;
	shl.b64 	%rd133, %rd132, 2;
	add.s64 	%rd134, %rd3, %rd133;
	st.global.v4.u32 	[%rd134], {%r79, %r81, %r80, %r82};
	or.b32  	%r2538, %r2536, 393216;
	cvt.s64.s32 	%rd135, %r2538;
	add.s64 	%rd136, %rd135, %rd5;
	shr.u64 	%rd137, %rd136, 38;
	add.s64 	%rd138, %rd136, %rd137;
	shr.s64 	%rd139, %rd138, 26;
	setp.lt.s64 	%p190, %rd136, 0;
	and.b64  	%rd140, %rd138, -67108864;
	setp.ne.s64 	%p191, %rd140, %rd136;
	and.pred  	%p192, %p190, %p191;
	selp.u64 	%rd141, 1, 0, %p192;
	sub.s64 	%rd142, %rd141, %rd139;
	shl.b64 	%rd143, %rd142, 26;
	add.s64 	%rd144, %rd143, %rd136;
	shl.b64 	%rd145, %rd144, 2;
	add.s64 	%rd146, %rd3, %rd145;
	st.global.v4.u32 	[%rd146], {%r83, %r85, %r84, %r86};
	setp.ne.s32 	%p193, %r40, 32512;
	add.s32 	%r40, %r40, 256;
	add.s32 	%r2539, %r40, %r88;
	setp.lt.s32 	%p194, %r2539, %r89;
	and.pred  	%p195, %p193, %p194;
	@%p195 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_36;
$L__BB0_29:                             // %L1403
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_30 Depth 2
	setp.eq.s32 	%p163, %r29, 0;
	or.b32  	%r41, %r40, %r22;
	or.b32  	%r536, %r41, %r23;
	or.b32  	%r537, %r536, %r24;
	or.b32  	%r538, %r537, %r25;
	add.s32 	%r539, %r538, %r88;
	mul.lo.s32 	%r540, %r539, 12288;
	or.b32  	%r541, %r28, %r540;
	add.s32 	%r542, %r541, %r27;
	mul.hi.s32 	%r543, %r542, 715827883;
	shr.u32 	%r544, %r543, 31;
	shr.s32 	%r545, %r543, 26;
	add.s32 	%r546, %r545, %r544;
	setp.lt.s32 	%p164, %r542, 0;
	mul.lo.s32 	%r547, %r546, 402653184;
	setp.ne.s32 	%p165, %r547, %r542;
	and.pred  	%p166, %p164, %p165;
	selp.s32 	%r548, -1, 0, %p166;
	add.s32 	%r549, %r546, %r548;
	mad.lo.s32 	%r550, %r549, -402653184, %r542;
	mul.wide.s32 	%rd86, %r550, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r551, %r552, %r553, %r554}, [%rd87];
	or.b32  	%r555, %r538, 64;
	add.s32 	%r556, %r555, %r88;
	mul.lo.s32 	%r557, %r556, 12288;
	or.b32  	%r558, %r28, %r557;
	add.s32 	%r559, %r558, %r27;
	mul.hi.s32 	%r560, %r559, 715827883;
	shr.u32 	%r561, %r560, 31;
	shr.s32 	%r562, %r560, 26;
	add.s32 	%r563, %r562, %r561;
	setp.lt.s32 	%p167, %r559, 0;
	mul.lo.s32 	%r564, %r563, 402653184;
	setp.ne.s32 	%p168, %r564, %r559;
	and.pred  	%p169, %p167, %p168;
	selp.s32 	%r565, -1, 0, %p169;
	add.s32 	%r566, %r563, %r565;
	mad.lo.s32 	%r567, %r566, -402653184, %r559;
	mul.wide.s32 	%rd88, %r567, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r568, %r569, %r570, %r571}, [%rd89];
	or.b32  	%r572, %r538, 128;
	add.s32 	%r573, %r572, %r88;
	mul.lo.s32 	%r574, %r573, 12288;
	or.b32  	%r575, %r28, %r574;
	add.s32 	%r576, %r575, %r27;
	mul.hi.s32 	%r577, %r576, 715827883;
	shr.u32 	%r578, %r577, 31;
	shr.s32 	%r579, %r577, 26;
	add.s32 	%r580, %r579, %r578;
	setp.lt.s32 	%p170, %r576, 0;
	mul.lo.s32 	%r581, %r580, 402653184;
	setp.ne.s32 	%p171, %r581, %r576;
	and.pred  	%p172, %p170, %p171;
	selp.s32 	%r582, -1, 0, %p172;
	add.s32 	%r583, %r580, %r582;
	mad.lo.s32 	%r584, %r583, -402653184, %r576;
	mul.wide.s32 	%rd90, %r584, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r585, %r586, %r587, %r588}, [%rd91];
	or.b32  	%r589, %r538, 192;
	add.s32 	%r590, %r589, %r88;
	mul.lo.s32 	%r591, %r590, 12288;
	or.b32  	%r592, %r28, %r591;
	add.s32 	%r593, %r592, %r27;
	mul.hi.s32 	%r594, %r593, 715827883;
	shr.u32 	%r595, %r594, 31;
	shr.s32 	%r596, %r594, 26;
	add.s32 	%r597, %r596, %r595;
	setp.lt.s32 	%p173, %r593, 0;
	mul.lo.s32 	%r598, %r597, 402653184;
	setp.ne.s32 	%p174, %r598, %r593;
	and.pred  	%p175, %p173, %p174;
	selp.s32 	%r599, -1, 0, %p175;
	add.s32 	%r600, %r597, %r599;
	mad.lo.s32 	%r601, %r600, -402653184, %r593;
	mul.wide.s32 	%rd92, %r601, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r602, %r603, %r604, %r605}, [%rd93];
	selp.b32 	%r606, %r553, %r551, %p163;
	shfl.sync.bfly.b32	%r607, %r606, 8, 31, -1;
	selp.b32 	%r472, %r551, %r607, %p163;
	selp.b32 	%r473, %r607, %r553, %p163;
	selp.b32 	%r608, %r554, %r552, %p163;
	shfl.sync.bfly.b32	%r609, %r608, 8, 31, -1;
	selp.b32 	%r480, %r552, %r609, %p163;
	selp.b32 	%r481, %r609, %r554, %p163;
	selp.b32 	%r610, %r570, %r568, %p163;
	shfl.sync.bfly.b32	%r611, %r610, 8, 31, -1;
	selp.b32 	%r488, %r568, %r611, %p163;
	selp.b32 	%r489, %r611, %r570, %p163;
	selp.b32 	%r612, %r571, %r569, %p163;
	shfl.sync.bfly.b32	%r613, %r612, 8, 31, -1;
	selp.b32 	%r496, %r569, %r613, %p163;
	selp.b32 	%r497, %r613, %r571, %p163;
	selp.b32 	%r614, %r587, %r585, %p163;
	shfl.sync.bfly.b32	%r615, %r614, 8, 31, -1;
	selp.b32 	%r504, %r585, %r615, %p163;
	selp.b32 	%r505, %r615, %r587, %p163;
	selp.b32 	%r616, %r588, %r586, %p163;
	shfl.sync.bfly.b32	%r617, %r616, 8, 31, -1;
	selp.b32 	%r512, %r586, %r617, %p163;
	selp.b32 	%r513, %r617, %r588, %p163;
	selp.b32 	%r618, %r604, %r602, %p163;
	shfl.sync.bfly.b32	%r619, %r618, 8, 31, -1;
	selp.b32 	%r520, %r602, %r619, %p163;
	selp.b32 	%r521, %r619, %r604, %p163;
	selp.b32 	%r620, %r605, %r603, %p163;
	shfl.sync.bfly.b32	%r621, %r620, 8, 31, -1;
	selp.b32 	%r528, %r603, %r621, %p163;
	selp.b32 	%r529, %r621, %r605, %p163;
	mov.u32 	%r530, 21520;
	// begin inline asm
	prmt.b32 %r471, %r472, %r473, %r530;
	// end inline asm
	mov.u32 	%r534, 30258;
	// begin inline asm
	prmt.b32 %r475, %r472, %r473, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r480, %r481, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r483, %r480, %r481, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r488, %r489, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r488, %r489, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r496, %r497, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r496, %r497, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r504, %r505, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r507, %r504, %r505, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r512, %r513, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r512, %r513, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r520, %r521, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r520, %r521, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r528, %r529, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r528, %r529, %r534;
	// end inline asm
	st.shared.u32 	[%rd6], %r471;
	st.shared.u32 	[%rd7], %r475;
	st.shared.u32 	[%rd8], %r479;
	st.shared.u32 	[%rd9], %r483;
	st.shared.u32 	[%rd10], %r487;
	st.shared.u32 	[%rd11], %r491;
	st.shared.u32 	[%rd12], %r495;
	st.shared.u32 	[%rd13], %r499;
	st.shared.u32 	[%rd14], %r503;
	st.shared.u32 	[%rd15], %r507;
	st.shared.u32 	[%rd16], %r511;
	st.shared.u32 	[%rd17], %r515;
	st.shared.u32 	[%rd18], %r519;
	st.shared.u32 	[%rd19], %r523;
	st.shared.u32 	[%rd20], %r527;
	st.shared.u32 	[%rd21], %r531;
	bar.sync 	0;
	mov.u64 	%rd151, %rd31;
	mov.u64 	%rd152, %rd30;
	mov.u32 	%r2554, %r2543;
	mov.u32 	%r2555, %r2548;
	mov.u32 	%r2556, %r2547;
	mov.u32 	%r2557, %r2546;
	mov.u32 	%r2558, %r2545;
$L__BB0_30:                             // %pass5742
                                        //   Parent Loop BB0_29 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2546, %r2553;
	mov.u32 	%r2545, %r2552;
	or.b32  	%r2418, %r30, %r2554;
	add.s32 	%r2419, %r2418, %r40;
	or.b32  	%r2420, %r2419, %r26;
	bfe.s32 	%r2421, %r2419, 1, 1;
	and.b32  	%r2422, %r2421, 260;
	and.b32  	%r2423, %r2419, 1;
	neg.s32 	%r2424, %r2423;
	and.b32  	%r2425, %r2424, 520;
	bfe.u32 	%r2426, %r2419, 5, 3;
	mul.lo.s32 	%r2427, %r2426, 1057;
	bfe.s32 	%r2428, %r2420, 3, 1;
	and.b32  	%r2429, %r2428, 65;
	bfe.s32 	%r2430, %r2420, 2, 1;
	and.b32  	%r2431, %r2430, 130;
	or.b32  	%r2432, %r31, %r2425;
	add.s32 	%r2433, %r2432, %r2422;
	add.s32 	%r2434, %r2433, %r2427;
	add.s32 	%r2435, %r2434, %r2429;
	add.s32 	%r2436, %r2435, %r2431;
	mul.wide.u32 	%rd94, %r2436, 4;
	add.s64 	%rd96, %rd49, %rd94;
	ld.shared.u32 	%r2547, [%rd96];
	add.s32 	%r2437, %r32, %r2425;
	add.s32 	%r2438, %r2437, %r2422;
	add.s32 	%r2439, %r2438, %r2427;
	add.s32 	%r2440, %r2439, %r2429;
	add.s32 	%r2441, %r2440, %r2431;
	mul.wide.u32 	%rd97, %r2441, 4;
	add.s64 	%rd98, %rd49, %rd97;
	ld.shared.u32 	%r2548, [%rd98];
	// begin inline asm
	mov.b32 %r627, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r638, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r626, %r2547, -2004318072;
	mov.u32 	%r625, 983055;
	// begin inline asm
	lop3.b32 %r624, %r625, %r626, %r627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r628, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r629, %r627, %r628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r632, %r624, %r629;
	// end inline asm
	mov.u32 	%r636, 15728880;
	// begin inline asm
	lop3.b32 %r635, %r636, %r626, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r640, %r638, %r639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r643, %r635, %r640;
	// end inline asm
	shr.u32 	%r648, %r626, 8;
	// begin inline asm
	lop3.b32 %r646, %r625, %r648, %r627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r627, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r657, %r636, %r648, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r638, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r672, %r2548, -2004318072;
	// begin inline asm
	lop3.b32 %r670, %r625, %r672, %r673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r674, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r675, %r673, %r674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r678, %r670, %r675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r681, %r636, %r672, %r684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r686, %r684, %r685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r689, %r681, %r686;
	// end inline asm
	shr.u32 	%r694, %r672, 8;
	// begin inline asm
	lop3.b32 %r692, %r625, %r694, %r673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r697, %r673, %r696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r700, %r692, %r697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r703, %r636, %r694, %r684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r707, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r708, %r684, %r707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r711, %r703, %r708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r714, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r716, %r714, %r632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r719, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r721, %r719, %r643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r724, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r726, %r724, %r654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r729, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r731, %r729, %r665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r734, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r736, %r734, %r678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r739, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r741, %r739, %r689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r744, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r746, %r744, %r700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r749, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r751, %r749, %r711;
	// end inline asm
	// begin inline asm
	mov.b32 %r759, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r770, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r758, %r2558, -2004318072;
	// begin inline asm
	lop3.b32 %r756, %r625, %r758, %r759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r760, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r761, %r759, %r760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r764, %r756, %r761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r767, %r636, %r758, %r770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r771, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r772, %r770, %r771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r775, %r767, %r772;
	// end inline asm
	shr.u32 	%r780, %r758, 8;
	// begin inline asm
	lop3.b32 %r778, %r625, %r780, %r759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r783, %r759, %r782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r786, %r778, %r783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r789, %r636, %r780, %r770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r793, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r794, %r770, %r793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r797, %r789, %r794;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r804, %r2557, -2004318072;
	// begin inline asm
	lop3.b32 %r802, %r625, %r804, %r805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r807, %r805, %r806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r810, %r802, %r807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r813, %r636, %r804, %r816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r817, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r818, %r816, %r817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r821, %r813, %r818;
	// end inline asm
	shr.u32 	%r826, %r804, 8;
	// begin inline asm
	lop3.b32 %r824, %r625, %r826, %r805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r829, %r805, %r828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r832, %r824, %r829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r835, %r636, %r826, %r816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r840, %r816, %r839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r843, %r835, %r840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r846, %r144, %r764, %r716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r850, %r144, %r775, %r721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r854, %r144, %r786, %r726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r858, %r144, %r797, %r731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r862, %r144, %r810, %r736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r866, %r144, %r821, %r741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r870, %r144, %r832, %r746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r874, %r144, %r843, %r751;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r882, %r2556, -2004318072;
	// begin inline asm
	lop3.b32 %r880, %r625, %r882, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r883, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r891, %r636, %r882, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	shr.u32 	%r904, %r882, 8;
	// begin inline asm
	lop3.b32 %r902, %r625, %r904, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r883, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r636, %r904, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r928, %r2555, -2004318072;
	// begin inline asm
	lop3.b32 %r926, %r625, %r928, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r929, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r937, %r636, %r928, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	shr.u32 	%r950, %r928, 8;
	// begin inline asm
	lop3.b32 %r948, %r625, %r950, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r929, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r959, %r636, %r950, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r970, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r972, %r970, %r888, %r846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r976, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r978, %r976, %r899, %r850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r982, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r984, %r982, %r910, %r854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r988, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r990, %r988, %r921, %r858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r994, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r996, %r994, %r934, %r862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1000, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1002, %r1000, %r945, %r866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1006, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1008, %r1006, %r956, %r870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1012, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r1012, %r967, %r874;
	// end inline asm
	// begin inline asm
	mov.b32 %r1023, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1022, %r2545, -2004318072;
	// begin inline asm
	lop3.b32 %r1020, %r625, %r1022, %r1023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1025, %r1023, %r1024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1028, %r1020, %r1025;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1031, %r636, %r1022, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1034, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	shr.u32 	%r1044, %r1022, 8;
	// begin inline asm
	lop3.b32 %r1042, %r625, %r1044, %r1023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1023, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1053, %r636, %r1044, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1034, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1068, %r2546, -2004318072;
	// begin inline asm
	lop3.b32 %r1066, %r625, %r1068, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1071, %r1069, %r1070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1074, %r1066, %r1071;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1077, %r636, %r1068, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1080, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	shr.u32 	%r1090, %r1068, 8;
	// begin inline asm
	lop3.b32 %r1088, %r625, %r1090, %r1069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1069, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1099, %r636, %r1090, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1080, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1149, %r206, %r1028, %r972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1146, %r206, %r1039, %r978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1158, %r206, %r1050, %r984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1155, %r206, %r1061, %r990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1167, %r206, %r1074, %r996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1164, %r206, %r1085, %r1002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1176, %r206, %r1096, %r1008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1173, %r206, %r1107, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1142, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1144, %r1142, %r1146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1147, %r240, %r1149, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1151, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1153, %r1151, %r1155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1156, %r240, %r1158, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1160, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1162, %r1160, %r1164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1165, %r240, %r1167, %r1162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1169, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1171, %r1169, %r1173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1174, %r240, %r1176, %r1171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1178, %r243, %r1149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1181, %r240, %r1146, %r1178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1185, %r243, %r1158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1188, %r240, %r1155, %r1185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1192, %r243, %r1167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1195, %r240, %r1164, %r1192;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1199, %r243, %r1176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1202, %r240, %r1173, %r1199;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1253, %r1250}, {%r246, %r252, %r249, %r255}, {%r1147, %r1181}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1262, %r1259}, {%r246, %r252, %r249, %r255}, {%r1156, %r1188}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1271, %r1268}, {%r246, %r252, %r249, %r255}, {%r1165, %r1195}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1280, %r1277}, {%r246, %r252, %r249, %r255}, {%r1174, %r1202}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1248, %r1246, %r1250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1251, %r258, %r1253, %r1248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1260, %r258, %r1262, %r1257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1269, %r258, %r1271, %r1266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1273, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1275, %r1273, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1278, %r258, %r1280, %r1275;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r261, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1285, %r258, %r1250, %r1282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r261, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r258, %r1259, %r1289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r261, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1299, %r258, %r1268, %r1296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r261, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1306, %r258, %r1277, %r1303;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1310, %r1311}, {%r264, %r270, %r267, %r273}, {%r1251, %r1285}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1320, %r1321}, {%r264, %r270, %r267, %r273}, {%r1260, %r1292}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1330, %r1331}, {%r264, %r270, %r267, %r273}, {%r1269, %r1299}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1340, %r1341}, {%r264, %r270, %r267, %r273}, {%r1278, %r1306}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1350, %r47, %r1310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1353, %r47, %r1311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1356, %r47, %r1320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1359, %r47, %r1321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1362, %r47, %r1330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1365, %r47, %r1331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r47, %r1340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1371, %r47, %r1341;
	// end inline asm
	// begin inline asm
	mov.b32 %r1374, {%rs274, %rs274};
	// end inline asm
	mov.u16 	%rs99, 18176;
	// begin inline asm
	mov.b32 %r1375, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1376, %r1350, %r1374;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1379, %r1376, %r1375;
	// end inline asm
	// begin inline asm
	mov.b32 %r1382, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1383, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1384, %r1353, %r1382;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1387, %r1384, %r1383;
	// end inline asm
	// begin inline asm
	mov.b32 %r1390, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1391, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1392, %r1356, %r1390;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1395, %r1392, %r1391;
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1400, %r1359, %r1398;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1403, %r1400, %r1399;
	// end inline asm
	// begin inline asm
	mov.b32 %r1406, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1407, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1408, %r1362, %r1406;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1411, %r1408, %r1407;
	// end inline asm
	// begin inline asm
	mov.b32 %r1414, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1415, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1416, %r1365, %r1414;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1419, %r1416, %r1415;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1424, %r1368, %r1422;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1427, %r1424, %r1423;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1431, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1432, %r1371, %r1430;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1435, %r1432, %r1431;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1440, %r1441, %r1439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1443, %r1379, %r1440;
	// end inline asm
	// begin inline asm
	mov.b32 %r1446, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1447, %r1441, %r1446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1450, %r1387, %r1447;
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1454, %r1441, %r1453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1457, %r1395, %r1454;
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1441, %r1460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1403, %r1461;
	// end inline asm
	mov.u32 	%r1470, 25152;
	// begin inline asm
	prmt.b32 %r1467, %r1443, %r1457, %r1470;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1471, %r1450, %r1464, %r1470;
	// end inline asm
	shl.b32 	%r1478, %r1471, 4;
	mov.u32 	%r1476, 252645135;
	// begin inline asm
	lop3.b32 %r1475, %r1476, %r1467, %r1478, 202;
	// end inline asm
	xor.b32  	%r2442, %r1475, -2004318072;
	// begin inline asm
	mov.b32 %r1482, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1482, %r1480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1411, %r1481;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1482, %r1487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1419, %r1488;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1495, %r1482, %r1494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1498, %r1427, %r1495;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1482, %r1501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1435, %r1502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1508, %r1484, %r1498, %r1470;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1512, %r1491, %r1505, %r1470;
	// end inline asm
	shl.b32 	%r1519, %r1512, 4;
	// begin inline asm
	lop3.b32 %r1516, %r1476, %r1508, %r1519, 202;
	// end inline asm
	xor.b32  	%r2443, %r1516, -2004318072;
	st.shared.u32 	[%rd151], %r2442;
	st.shared.u32 	[%rd152], %r2443;
	ld.shared.u32 	%r2552, [%rd96];
	ld.shared.u32 	%r2553, [%rd98];
	// begin inline asm
	mov.b32 %r1525, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1524, %r2552, -2004318072;
	// begin inline asm
	lop3.b32 %r1522, %r625, %r1524, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1525, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1533, %r636, %r1524, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1536, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	shr.u32 	%r1546, %r1524, 8;
	// begin inline asm
	lop3.b32 %r1544, %r625, %r1546, %r1525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1525, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1555, %r636, %r1546, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1536, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1570, %r2553, -2004318072;
	// begin inline asm
	lop3.b32 %r1568, %r625, %r1570, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1571, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1579, %r636, %r1570, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1582, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	shr.u32 	%r1592, %r1570, 8;
	// begin inline asm
	lop3.b32 %r1590, %r625, %r1592, %r1571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1571, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1601, %r636, %r1592, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1582, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1612, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1614, %r1612, %r1530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1617, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1619, %r1617, %r1541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1622, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1624, %r1622, %r1552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1627, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1629, %r1627, %r1563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1632, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1634, %r1632, %r1576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1637, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1639, %r1637, %r1587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1642, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1644, %r1642, %r1598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1647, %r237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1649, %r1647, %r1609;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1654, %r625, %r882, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1658, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1659, %r1657, %r1658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1662, %r1654, %r1659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r636, %r882, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1668, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1676, %r625, %r904, %r1657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1657, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1687, %r636, %r904, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1668, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1700, %r625, %r928, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1704, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1705, %r1703, %r1704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1708, %r1700, %r1705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1711, %r636, %r928, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1714, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1722, %r625, %r950, %r1703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1727, %r1703, %r1726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1730, %r1722, %r1727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1733, %r636, %r950, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1738, %r1714, %r1737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1741, %r1733, %r1738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r144, %r1662, %r1614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r144, %r1673, %r1619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r144, %r1684, %r1624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r144, %r1695, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r144, %r1708, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r144, %r1719, %r1639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r144, %r1730, %r1644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r144, %r1741, %r1649;
	// end inline asm
	// begin inline asm
	mov.b32 %r1781, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1792, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1778, %r625, %r1022, %r1781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1782, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1783, %r1781, %r1782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1786, %r1778, %r1783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1789, %r636, %r1022, %r1792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1793, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1794, %r1792, %r1793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1797, %r1789, %r1794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1800, %r625, %r1044, %r1781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1804, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1805, %r1781, %r1804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1808, %r1800, %r1805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1811, %r636, %r1044, %r1792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1815, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1816, %r1792, %r1815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1819, %r1811, %r1816;
	// end inline asm
	// begin inline asm
	mov.b32 %r1827, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1824, %r625, %r1068, %r1827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1828, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1829, %r1827, %r1828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1832, %r1824, %r1829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1835, %r636, %r1068, %r1838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1839, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1840, %r1838, %r1839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1843, %r1835, %r1840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1846, %r625, %r1090, %r1827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1850, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1851, %r1827, %r1850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1854, %r1846, %r1851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1857, %r636, %r1090, %r1838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1862, %r1838, %r1861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1865, %r1857, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1868, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r1868, %r1786, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1874, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1876, %r1874, %r1797, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1880, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1882, %r1880, %r1808, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1886, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r1886, %r1819, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1892, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1894, %r1892, %r1832, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1898, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r1898, %r1843, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1904, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1906, %r1904, %r1854, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1910, %r175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r1910, %r1865, %r1772;
	// end inline asm
	// begin inline asm
	mov.b32 %r1921, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1918, %r625, %r626, %r1921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1922, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1923, %r1921, %r1922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1926, %r1918, %r1923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1929, %r636, %r626, %r1932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1933, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1934, %r1932, %r1933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1937, %r1929, %r1934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1940, %r625, %r648, %r1921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1944, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1945, %r1921, %r1944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1948, %r1940, %r1945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1951, %r636, %r648, %r1932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1955, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1956, %r1932, %r1955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1959, %r1951, %r1956;
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1964, %r625, %r672, %r1967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1968, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1969, %r1967, %r1968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1972, %r1964, %r1969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1975, %r636, %r672, %r1978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1979, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1980, %r1978, %r1979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1983, %r1975, %r1980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1986, %r625, %r694, %r1967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1991, %r1967, %r1990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1994, %r1986, %r1991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1997, %r636, %r694, %r1978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2001, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2002, %r1978, %r2001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2005, %r1997, %r2002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2047, %r206, %r1926, %r1870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2044, %r206, %r1937, %r1876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2056, %r206, %r1948, %r1882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2053, %r206, %r1959, %r1888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2065, %r206, %r1972, %r1894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2062, %r206, %r1983, %r1900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2074, %r206, %r1994, %r1906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2071, %r206, %r2005, %r1912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2040, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2042, %r2040, %r2044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2045, %r240, %r2047, %r2042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2049, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2051, %r2049, %r2053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2054, %r240, %r2056, %r2051;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2058, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2060, %r2058, %r2062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2063, %r240, %r2065, %r2060;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2067, %r243;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2069, %r2067, %r2071;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2072, %r240, %r2074, %r2069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2076, %r243, %r2047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2079, %r240, %r2044, %r2076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2083, %r243, %r2056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2086, %r240, %r2053, %r2083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2090, %r243, %r2065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2093, %r240, %r2062, %r2090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2097, %r243, %r2074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2100, %r240, %r2071, %r2097;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2151, %r2148}, {%r246, %r252, %r249, %r255}, {%r2045, %r2079}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2160, %r2157}, {%r246, %r252, %r249, %r255}, {%r2054, %r2086}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2169, %r2166}, {%r246, %r252, %r249, %r255}, {%r2063, %r2093}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2178, %r2175}, {%r246, %r252, %r249, %r255}, {%r2072, %r2100}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2144, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2146, %r2144, %r2148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2149, %r258, %r2151, %r2146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2153, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2155, %r2153, %r2157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2158, %r258, %r2160, %r2155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2162, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2164, %r2162, %r2166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2167, %r258, %r2169, %r2164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2171, %r261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2173, %r2171, %r2175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2176, %r258, %r2178, %r2173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2180, %r261, %r2151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2183, %r258, %r2148, %r2180;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2187, %r261, %r2160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2190, %r258, %r2157, %r2187;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2194, %r261, %r2169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2197, %r258, %r2166, %r2194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2201, %r261, %r2178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2204, %r258, %r2175, %r2201;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2208, %r2209}, {%r264, %r270, %r267, %r273}, {%r2149, %r2183}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2218, %r2219}, {%r264, %r270, %r267, %r273}, {%r2158, %r2190}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2228, %r2229}, {%r264, %r270, %r267, %r273}, {%r2167, %r2197}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2238, %r2239}, {%r264, %r270, %r267, %r273}, {%r2176, %r2204}, {%r2543, %r2543};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2248, %r47, %r2208;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2251, %r47, %r2209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2254, %r47, %r2218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2257, %r47, %r2219;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2260, %r47, %r2228;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2263, %r47, %r2229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2266, %r47, %r2238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2269, %r47, %r2239;
	// end inline asm
	// begin inline asm
	mov.b32 %r2272, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2273, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2274, %r2248, %r2272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2277, %r2274, %r2273;
	// end inline asm
	// begin inline asm
	mov.b32 %r2280, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2281, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2282, %r2251, %r2280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2285, %r2282, %r2281;
	// end inline asm
	// begin inline asm
	mov.b32 %r2288, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2289, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2290, %r2254, %r2288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2293, %r2290, %r2289;
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2297, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2298, %r2257, %r2296;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2301, %r2298, %r2297;
	// end inline asm
	// begin inline asm
	mov.b32 %r2304, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2305, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2306, %r2260, %r2304;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2309, %r2306, %r2305;
	// end inline asm
	// begin inline asm
	mov.b32 %r2312, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2313, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2314, %r2263, %r2312;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2317, %r2314, %r2313;
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2321, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2322, %r2266, %r2320;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2325, %r2322, %r2321;
	// end inline asm
	// begin inline asm
	mov.b32 %r2328, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2329, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2330, %r2269, %r2328;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2333, %r2330, %r2329;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2337, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2338, %r2339, %r2337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2341, %r2277, %r2338;
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2339, %r2344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2348, %r2285, %r2345;
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2339, %r2351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2355, %r2293, %r2352;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2339, %r2358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2301, %r2359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2365, %r2341, %r2355, %r1470;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2369, %r2348, %r2362, %r1470;
	// end inline asm
	shl.b32 	%r2376, %r2369, 4;
	// begin inline asm
	lop3.b32 %r2373, %r1476, %r2365, %r2376, 202;
	// end inline asm
	xor.b32  	%r2444, %r2373, -2004318072;
	// begin inline asm
	mov.b32 %r2380, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2378, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2379, %r2380, %r2378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2382, %r2309, %r2379;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2380, %r2385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2317, %r2386;
	// end inline asm
	// begin inline asm
	mov.b32 %r2392, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2380, %r2392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2396, %r2325, %r2393;
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2380, %r2399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2333, %r2400;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2406, %r2382, %r2396, %r1470;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2410, %r2389, %r2403, %r1470;
	// end inline asm
	shl.b32 	%r2417, %r2410, 4;
	// begin inline asm
	lop3.b32 %r2414, %r1476, %r2406, %r2417, 202;
	// end inline asm
	xor.b32  	%r2445, %r2414, -2004318072;
	st.shared.u32 	[%rd151], %r2444;
	st.shared.u32 	[%rd152], %r2445;
	add.s32 	%r2554, %r2554, 32;
	add.s64 	%rd152, %rd152, 4228;
	add.s64 	%rd151, %rd151, 4228;
	setp.eq.s32 	%p176, %r2554, 256;
	mov.u32 	%r2555, %r2548;
	mov.u32 	%r2556, %r2547;
	mov.u32 	%r2557, %r2546;
	mov.u32 	%r2558, %r2545;
	@%p176 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_30;
$L__BB0_31:                             // %guard_exit10447
                                        //   in Loop: Header=BB0_29 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r2451, [%rd22];
	ld.shared.u32 	%r2452, [%rd23+128];
	ld.shared.u32 	%r2459, [%rd23+4];
	ld.shared.u32 	%r2460, [%rd23+132];
	or.b32  	%r68, %r41, 64;
	ld.shared.u32 	%r2467, [%rd24];
	ld.shared.u32 	%r2468, [%rd25+128];
	ld.shared.u32 	%r2475, [%rd25+4];
	ld.shared.u32 	%r2476, [%rd25+132];
	ld.shared.u32 	%r2483, [%rd26];
	ld.shared.u32 	%r2484, [%rd27+128];
	ld.shared.u32 	%r2491, [%rd27+4];
	ld.shared.u32 	%r2492, [%rd27+132];
	ld.shared.u32 	%r2499, [%rd28];
	ld.shared.u32 	%r2500, [%rd29+128];
	ld.shared.u32 	%r2507, [%rd29+4];
	ld.shared.u32 	%r2508, [%rd29+132];
	// begin inline asm
	prmt.b32 %r2446, %r2451, %r2452, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2450, %r2451, %r2452, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2454, %r2459, %r2460, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2459, %r2460, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2462, %r2467, %r2468, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2467, %r2468, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2475, %r2476, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2474, %r2475, %r2476, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2478, %r2483, %r2484, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2482, %r2483, %r2484, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2486, %r2491, %r2492, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2490, %r2491, %r2492, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2494, %r2499, %r2500, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2498, %r2499, %r2500, %r534;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2502, %r2507, %r2508, %r530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2506, %r2507, %r2508, %r534;
	// end inline asm
	selp.b32 	%r2510, %r2450, %r2446, %p163;
	shfl.sync.bfly.b32	%r73, %r2510, 8, 31, -1;
	selp.b32 	%r2511, %r2458, %r2454, %p163;
	shfl.sync.bfly.b32	%r74, %r2511, 8, 31, -1;
	selp.b32 	%r2512, %r2466, %r2462, %p163;
	shfl.sync.bfly.b32	%r2513, %r2512, 8, 31, -1;
	selp.b32 	%r2514, %r2474, %r2470, %p163;
	shfl.sync.bfly.b32	%r2515, %r2514, 8, 31, -1;
	selp.b32 	%r2516, %r2482, %r2478, %p163;
	shfl.sync.bfly.b32	%r2517, %r2516, 8, 31, -1;
	selp.b32 	%r2518, %r2490, %r2486, %p163;
	shfl.sync.bfly.b32	%r2519, %r2518, 8, 31, -1;
	selp.b32 	%r2520, %r2498, %r2494, %p163;
	shfl.sync.bfly.b32	%r2521, %r2520, 8, 31, -1;
	selp.b32 	%r2522, %r2506, %r2502, %p163;
	shfl.sync.bfly.b32	%r2523, %r2522, 8, 31, -1;
	setp.lt.u32 	%p178, %r41, 96;
	shl.b32 	%r2544, %r41, 11;
	@%p178 bra 	$L__BB0_33;
// %bb.32:                              // %pass9846
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r2524, %r74, %r2458, %p163;
	selp.b32 	%r2525, %r2454, %r74, %p163;
	selp.b32 	%r2526, %r73, %r2450, %p163;
	selp.b32 	%r2527, %r2446, %r73, %p163;
	or.b32  	%r2529, %r2544, %r33;
	or.b32  	%r2530, %r2529, %r26;
	cvt.s64.s32 	%rd99, %r2530;
	add.s64 	%rd100, %rd99, %rd5;
	shr.u64 	%rd101, %rd100, 38;
	add.s64 	%rd102, %rd100, %rd101;
	shr.s64 	%rd103, %rd102, 26;
	setp.lt.s64 	%p180, %rd100, 0;
	and.b64  	%rd104, %rd102, -67108864;
	setp.ne.s64 	%p181, %rd104, %rd100;
	and.pred  	%p182, %p180, %p181;
	selp.u64 	%rd105, 1, 0, %p182;
	sub.s64 	%rd106, %rd105, %rd103;
	shl.b64 	%rd107, %rd106, 26;
	add.s64 	%rd108, %rd107, %rd100;
	shl.b64 	%rd109, %rd108, 2;
	add.s64 	%rd110, %rd3, %rd109;
	st.global.v4.u32 	[%rd110], {%r2527, %r2525, %r2526, %r2524};
$L__BB0_33:                             // %pass9868
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r79, %r2478, %r2517, %p163;
	selp.b32 	%r80, %r2517, %r2482, %p163;
	selp.b32 	%r81, %r2486, %r2519, %p163;
	selp.b32 	%r82, %r2519, %r2490, %p163;
	selp.b32 	%r83, %r2494, %r2521, %p163;
	selp.b32 	%r84, %r2521, %r2498, %p163;
	selp.b32 	%r85, %r2502, %r2523, %p163;
	selp.b32 	%r86, %r2523, %r2506, %p163;
	setp.lt.u32 	%p183, %r68, 96;
	@%p183 bra 	$L__BB0_35;
// %bb.34:                              // %pass9962
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r75, %r2462, %r2513, %p163;
	selp.b32 	%r76, %r2513, %r2466, %p163;
	selp.b32 	%r77, %r2470, %r2515, %p163;
	selp.b32 	%r78, %r2515, %r2474, %p163;
	shl.b32 	%r2531, %r68, 11;
	or.b32  	%r2532, %r2531, %r33;
	or.b32  	%r2533, %r2532, %r26;
	cvt.s64.s32 	%rd111, %r2533;
	add.s64 	%rd112, %rd111, %rd5;
	shr.u64 	%rd113, %rd112, 38;
	add.s64 	%rd114, %rd112, %rd113;
	shr.s64 	%rd115, %rd114, 26;
	setp.lt.s64 	%p184, %rd112, 0;
	and.b64  	%rd116, %rd114, -67108864;
	setp.ne.s64 	%p185, %rd116, %rd112;
	and.pred  	%p186, %p184, %p185;
	selp.u64 	%rd117, 1, 0, %p186;
	sub.s64 	%rd118, %rd117, %rd115;
	shl.b64 	%rd119, %rd118, 26;
	add.s64 	%rd120, %rd119, %rd112;
	shl.b64 	%rd121, %rd120, 2;
	add.s64 	%rd122, %rd3, %rd121;
	st.global.v4.u32 	[%rd122], {%r75, %r77, %r76, %r78};
	bra.uni 	$L__BB0_35;
$L__BB0_36:                             // %L22568
	st.global.u32 	[%rd4], %r2543;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r2542, 2;
	st.global.u32 	[%rd4], %r2542;
	mov.u64 	%rd149, exception2082;
	cvta.global.u64 	%rd150, %rd149;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd150;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r87;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2541, 3;
	st.global.u32 	[%rd4], %r2541;
	mov.u64 	%rd147, exception2082;
	cvta.global.u64 	%rd148, %rd147;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd148;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r87;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd43, exception1;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r87;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
