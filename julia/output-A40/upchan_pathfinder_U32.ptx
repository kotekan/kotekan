// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2055[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<252>;
	.reg .b16 	%rs<297>;
	.reg .b32 	%r<2611>;
	.reg .f32 	%f<929>;
	.reg .b64 	%rd<155>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r168, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd38, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r169, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r169, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	ld.param.u64 	%rd55, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r170, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r171, %r170, %r1;
	or.b32  	%r172, %r171, %r4;
	mul.wide.u32 	%rd61, %r172, 4;
	add.s64 	%rd4, %rd55, %rd61;
	mov.u32 	%r173, 1;
	st.global.u32 	[%rd4], %r173;
	ld.global.u32 	%r5, [%rd39];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L204
	ld.param.u64 	%rd43, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd43];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L214
	ld.param.u64 	%rd47, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd47];
	sub.s32 	%r174, %r6, %r5;
	and.b32  	%r175, %r174, 255;
	setp.ne.s32 	%p6, %r175, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L220
	ld.param.u64 	%rd51, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd51];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 8192;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L230
	sub.s32 	%r176, %r8, %r7;
	add.s32 	%r177, %r176, 3;
	and.b32  	%r178, %r177, 7;
	setp.eq.s32 	%p12, %r178, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass158
	bfe.u32 	%r121, %r1, 1, 1;
	and.b32  	%r122, %r1, 1;
	bfe.u32 	%r123, %r1, 2, 1;
	shl.b32 	%r184, %r123, 1;
	shl.b32 	%r185, %r122, 2;
	shl.b32 	%r186, %r121, 3;
	or.b32  	%r187, %r185, %r186;
	or.b32  	%r188, %r184, %r187;
	shr.u32 	%r124, %r1, 4;
	or.b32  	%r125, %r124, %r188;
	or.b32  	%r126, %r125, 16;
	mov.f32 	%f184, 0f40000000;
	mov.f32 	%f185, 0f42FE0000;
	div.approx.f32 	%f160, %f185, %f184;
	cvt.rn.f32.s32 	%f186, %r125;
	sub.f32 	%f187, %f186, %f160;
	mov.f32 	%f216, 0f42000000;
	div.approx.f32 	%f162, %f187, %f216;
	setp.ne.f32 	%p18, %f162, 0f00000000;
	mov.f32 	%f896, 0f3F800000;
	mov.f32 	%f889, %f896;
	@%p18 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L549
	sin.approx.f32 	%f217, %f162;
	div.approx.f32 	%f889, %f217, %f162;
$L__BB0_10:                             // %L552
	cvt.rn.f32.s32 	%f220, %r126;
	sub.f32 	%f221, %f220, %f160;
	div.approx.f32 	%f5, %f221, %f216;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	mov.f32 	%f890, %f896;
	@%p24 bra 	$L__BB0_12;
// %bb.11:                              // %L569
	sin.approx.f32 	%f251, %f5;
	div.approx.f32 	%f890, %f251, %f5;
$L__BB0_12:                             // %L572
	or.b32  	%r206, %r125, 32;
	or.b32  	%r10, %r125, 48;
	cvt.rn.f32.s32 	%f255, %r206;
	sub.f32 	%f256, %f255, %f160;
	div.approx.f32 	%f9, %f256, %f216;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	mov.f32 	%f891, %f896;
	@%p30 bra 	$L__BB0_14;
// %bb.13:                              // %L651
	sin.approx.f32 	%f286, %f9;
	div.approx.f32 	%f891, %f286, %f9;
$L__BB0_14:                             // %L654
	cvt.rn.f32.s32 	%f289, %r10;
	sub.f32 	%f290, %f289, %f160;
	div.approx.f32 	%f14, %f290, %f216;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	mov.f32 	%f892, %f896;
	@%p36 bra 	$L__BB0_16;
// %bb.15:                              // %L671
	sin.approx.f32 	%f320, %f14;
	div.approx.f32 	%f892, %f320, %f14;
$L__BB0_16:                             // %L674
	or.b32  	%r224, %r125, 64;
	or.b32  	%r12, %r125, 80;
	cvt.rn.f32.s32 	%f324, %r224;
	sub.f32 	%f325, %f324, %f160;
	div.approx.f32 	%f18, %f325, %f216;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	mov.f32 	%f893, %f896;
	@%p42 bra 	$L__BB0_18;
// %bb.17:                              // %L753
	sin.approx.f32 	%f355, %f18;
	div.approx.f32 	%f893, %f355, %f18;
$L__BB0_18:                             // %L756
	cvt.rn.f32.s32 	%f358, %r12;
	sub.f32 	%f359, %f358, %f160;
	div.approx.f32 	%f23, %f359, %f216;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	mov.f32 	%f894, %f896;
	@%p48 bra 	$L__BB0_20;
// %bb.19:                              // %L773
	sin.approx.f32 	%f389, %f23;
	div.approx.f32 	%f894, %f389, %f23;
$L__BB0_20:                             // %L776
	or.b32  	%r242, %r125, 96;
	or.b32  	%r14, %r125, 112;
	cvt.rn.f32.s32 	%f393, %r242;
	sub.f32 	%f394, %f393, %f160;
	div.approx.f32 	%f27, %f394, %f216;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	mov.f32 	%f895, %f896;
	@%p54 bra 	$L__BB0_22;
// %bb.21:                              // %L855
	sin.approx.f32 	%f424, %f27;
	div.approx.f32 	%f895, %f424, %f27;
$L__BB0_22:                             // %L858
	cvt.rn.f32.s32 	%f427, %r14;
	sub.f32 	%f428, %f427, %f160;
	div.approx.f32 	%f32, %f428, %f216;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	@%p60 bra 	$L__BB0_24;
// %bb.23:                              // %L875
	sin.approx.f32 	%f458, %f32;
	div.approx.f32 	%f896, %f458, %f32;
$L__BB0_24:                             // %L878
	mul.lo.s32 	%r16, %r125, 31;
	cvt.rn.f32.s32 	%f461, %r16;
	div.approx.f32 	%f35, %f461, %f216;
	abs.f32 	%f899, %f35;
	setp.lt.f32 	%p61, %f899, 0f40000000;
	@%p61 bra 	$L__BB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f899, 0f4B800000;
	@%p62 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_26;
$L__BB0_32:
	mov.b32 	%r18, %f899;
	and.b32  	%r260, %r18, 8388607;
	or.b32  	%r2579, %r260, 1065353216;
	mov.b32 	%f898, %r2579;
	add.s32 	%r261, %r18, -1073741824;
	and.b32  	%r2580, %r261, -8388608;
	setp.eq.s32 	%p68, %r2580, 0;
	@%p68 bra 	$L__BB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f472, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f471,%f472;
	// end inline asm
$L__BB0_34:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r262, %r2580, 192937984;
	add.s32 	%r263, %r2579, %r262;
	mov.b32 	%f473, %r263;
	mul.f32 	%f474, %f471, %f473;
	sub.f32 	%f475, %f473, %f474;
	fma.rn.f32 	%f476, %f475, %f471, %f474;
	sub.f32 	%f477, %f473, %f476;
	fma.rz.f32 	%f478, %f477, %f471, %f476;
	cvt.rzi.f32.f32 	%f479, %f478;
	sub.f32 	%f898, %f473, %f479;
	sub.s32 	%r2580, %r2580, %r262;
	mov.b32 	%r2579, %f898;
	setp.ne.s32 	%p69, %r2580, 0;
	setp.ne.s32 	%p70, %r2579, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	$L__BB0_34;
$L__BB0_35:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r18, 2139095039;
	selp.f32 	%f480, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f481, %f898, 0f34000000;
	mul.f32 	%f899, %f480, %f481;
	bra.uni 	$L__BB0_36;
$L__BB0_26:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f464, %f899, %f184;
	cvt.rzi.f32.f32 	%f897, %f464;
	fma.rn.f32 	%f38, %f897, 0fC0000000, %f899;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p63, %r17, 1073741824;
	@%p63 bra 	$L__BB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r17, -2147483647;
	@%p64 bra 	$L__BB0_29;
// %bb.28:
	add.f32 	%f469, %f897, 0fBF800000;
	setp.lt.f32 	%p67, %f38, 0fC0000000;
	add.f32 	%f470, %f469, 0fBF800000;
	selp.f32 	%f897, %f470, %f469, %p67;
	bra.uni 	$L__BB0_31;
$L__BB0_29:
	add.f32 	%f897, %f897, 0f3F800000;
	setp.ltu.f32 	%p65, %f38, 0f40800000;
	@%p65 bra 	$L__BB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f465, %f897, 0f3F800000;
	fma.rn.f32 	%f467, %f184, 0fC0400000, %f38;
	setp.ge.f32 	%p66, %f467, 0f00000000;
	add.f32 	%f468, %f465, 0f3F800000;
	selp.f32 	%f897, %f468, %f465, %p66;
$L__BB0_31:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f899, %f897, 0fC0000000, %f899;
$L__BB0_36:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f482, %f899;
	setp.gtu.f32 	%p73, %f482, 0f7F800000;
	@%p73 bra 	$L__BB0_38;
// %bb.37:
	mov.b32 	%r264, %f35;
	and.b32  	%r265, %r264, -2147483648;
	mov.b32 	%r266, %f899;
	or.b32  	%r267, %r265, %r266;
	mov.b32 	%f899, %r267;
$L__BB0_38:                             // %__nv_fmodf.exit
	add.s32 	%r276, %r16, 496;
	cvt.rn.f32.s32 	%f513, %r276;
	div.approx.f32 	%f54, %f513, %f216;
	abs.f32 	%f903, %f54;
	setp.lt.f32 	%p81, %f903, 0f40000000;
	@%p81 bra 	$L__BB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f903, 0f4B800000;
	@%p82 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_40;
$L__BB0_46:
	mov.b32 	%r26, %f903;
	and.b32  	%r277, %r26, 8388607;
	or.b32  	%r2581, %r277, 1065353216;
	mov.b32 	%f902, %r2581;
	add.s32 	%r278, %r26, -1073741824;
	and.b32  	%r2582, %r278, -8388608;
	setp.eq.s32 	%p88, %r2582, 0;
	@%p88 bra 	$L__BB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i623.preheader
	mov.f32 	%f524, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f523,%f524;
	// end inline asm
$L__BB0_48:                             // %__nv_fmaf_rn.exit4.i.i.i623
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r279, %r2582, 192937984;
	add.s32 	%r280, %r2581, %r279;
	mov.b32 	%f525, %r280;
	mul.f32 	%f526, %f523, %f525;
	sub.f32 	%f527, %f525, %f526;
	fma.rn.f32 	%f528, %f527, %f523, %f526;
	sub.f32 	%f529, %f525, %f528;
	fma.rz.f32 	%f530, %f529, %f523, %f528;
	cvt.rzi.f32.f32 	%f531, %f530;
	sub.f32 	%f902, %f525, %f531;
	sub.s32 	%r2582, %r2582, %r279;
	mov.b32 	%r2581, %f902;
	setp.ne.s32 	%p89, %r2582, 0;
	setp.ne.s32 	%p90, %r2581, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	$L__BB0_48;
$L__BB0_49:                             // %__internal_fmodf_slowpath_mod.exit.i.i625
	setp.gt.u32 	%p92, %r26, 2139095039;
	selp.f32 	%f532, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f533, %f902, 0f34000000;
	mul.f32 	%f903, %f532, %f533;
	bra.uni 	$L__BB0_50;
$L__BB0_40:                             // %__nv_fast_fdividef.exit.i.i.i602
	div.approx.f32 	%f516, %f903, %f184;
	cvt.rzi.f32.f32 	%f901, %f516;
	fma.rn.f32 	%f57, %f901, 0fC0000000, %f903;
	mov.b32 	%r25, %f57;
	setp.lt.u32 	%p83, %r25, 1073741824;
	@%p83 bra 	$L__BB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r25, -2147483647;
	@%p84 bra 	$L__BB0_43;
// %bb.42:
	add.f32 	%f521, %f901, 0fBF800000;
	setp.lt.f32 	%p87, %f57, 0fC0000000;
	add.f32 	%f522, %f521, 0fBF800000;
	selp.f32 	%f901, %f522, %f521, %p87;
	bra.uni 	$L__BB0_45;
$L__BB0_43:
	add.f32 	%f901, %f901, 0f3F800000;
	setp.ltu.f32 	%p85, %f57, 0f40800000;
	@%p85 bra 	$L__BB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i606
	add.f32 	%f517, %f901, 0f3F800000;
	fma.rn.f32 	%f519, %f184, 0fC0400000, %f57;
	setp.ge.f32 	%p86, %f519, 0f00000000;
	add.f32 	%f520, %f517, 0f3F800000;
	selp.f32 	%f901, %f520, %f517, %p86;
$L__BB0_45:                             // %__internal_fmodf_fastpath_quot.exit.i.i609
	fma.rn.f32 	%f903, %f901, 0fC0000000, %f903;
$L__BB0_50:                             // %__internal_fmodf_kernel.exit.i628
	shr.u32 	%r120, %r1, 1;
	abs.f32 	%f534, %f903;
	setp.gtu.f32 	%p93, %f534, 0f7F800000;
	@%p93 bra 	$L__BB0_52;
// %bb.51:
	mov.b32 	%r281, %f54;
	and.b32  	%r282, %r281, -2147483648;
	mov.b32 	%r283, %f903;
	or.b32  	%r284, %r282, %r283;
	mov.b32 	%f903, %r284;
$L__BB0_52:                             // %__nv_fmodf.exit629
	shr.u32 	%r35, %r1, 3;
	and.b32  	%r299, %r35, 2;
	or.b32  	%r36, %r123, %r299;
	and.b32  	%r300, %r120, 4;
	or.b32  	%r37, %r36, %r300;
	and.b32  	%r301, %r1, 3;
	mul.lo.s32 	%r302, %r301, %r37;
	shl.b32 	%r303, %r302, 1;
	neg.s32 	%r304, %r303;
	cvt.rn.f32.s32 	%f567, %r304;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f71, %f567, %f568;
	abs.f32 	%f907, %f71;
	setp.lt.f32 	%p101, %f907, 0f40000000;
	@%p101 bra 	$L__BB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f907, 0f4B800000;
	@%p102 bra 	$L__BB0_60;
	bra.uni 	$L__BB0_54;
$L__BB0_60:
	mov.b32 	%r39, %f907;
	and.b32  	%r305, %r39, 8388607;
	or.b32  	%r2583, %r305, 1065353216;
	mov.b32 	%f906, %r2583;
	add.s32 	%r306, %r39, -1073741824;
	and.b32  	%r2584, %r306, -8388608;
	setp.eq.s32 	%p108, %r2584, 0;
	@%p108 bra 	$L__BB0_63;
// %bb.61:                              // %__nv_fmaf_rn.exit4.i.i.i654.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
$L__BB0_62:                             // %__nv_fmaf_rn.exit4.i.i.i654
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r307, %r2584, 192937984;
	add.s32 	%r308, %r2583, %r307;
	mov.b32 	%f579, %r308;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f906, %f579, %f585;
	sub.s32 	%r2584, %r2584, %r307;
	mov.b32 	%r2583, %f906;
	setp.ne.s32 	%p109, %r2584, 0;
	setp.ne.s32 	%p110, %r2583, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	$L__BB0_62;
$L__BB0_63:                             // %__internal_fmodf_slowpath_mod.exit.i.i656
	setp.gt.u32 	%p112, %r39, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f587, %f906, 0f34000000;
	mul.f32 	%f907, %f586, %f587;
	bra.uni 	$L__BB0_64;
$L__BB0_54:                             // %__nv_fast_fdividef.exit.i.i.i633
	div.approx.f32 	%f570, %f907, %f184;
	cvt.rzi.f32.f32 	%f905, %f570;
	fma.rn.f32 	%f74, %f905, 0fC0000000, %f907;
	mov.b32 	%r38, %f74;
	setp.lt.u32 	%p103, %r38, 1073741824;
	@%p103 bra 	$L__BB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r38, -2147483647;
	@%p104 bra 	$L__BB0_57;
// %bb.56:
	add.f32 	%f575, %f905, 0fBF800000;
	setp.lt.f32 	%p107, %f74, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f905, %f576, %f575, %p107;
	bra.uni 	$L__BB0_59;
$L__BB0_57:
	add.f32 	%f905, %f905, 0f3F800000;
	setp.ltu.f32 	%p105, %f74, 0f40800000;
	@%p105 bra 	$L__BB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i637
	add.f32 	%f571, %f905, 0f3F800000;
	fma.rn.f32 	%f573, %f184, 0fC0400000, %f74;
	setp.ge.f32 	%p106, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f905, %f574, %f571, %p106;
$L__BB0_59:                             // %__internal_fmodf_fastpath_quot.exit.i.i640
	fma.rn.f32 	%f907, %f905, 0fC0000000, %f907;
$L__BB0_64:                             // %__internal_fmodf_kernel.exit.i659
	shl.b32 	%r114, %r1, 1;
	abs.f32 	%f588, %f907;
	setp.gtu.f32 	%p113, %f588, 0f7F800000;
	@%p113 bra 	$L__BB0_66;
// %bb.65:
	mov.b32 	%r309, %f71;
	and.b32  	%r310, %r309, -2147483648;
	mov.b32 	%r311, %f907;
	or.b32  	%r312, %r310, %r311;
	mov.b32 	%f907, %r312;
$L__BB0_66:                             // %__nv_fmodf.exit660
	and.b32  	%r321, %r114, 6;
	mov.u32 	%r322, -8;
	sub.s32 	%r323, %r322, %r321;
	mul.lo.s32 	%r324, %r37, %r323;
	cvt.rn.f32.s32 	%f619, %r324;
	div.approx.f32 	%f90, %f619, %f568;
	abs.f32 	%f911, %f90;
	setp.lt.f32 	%p121, %f911, 0f40000000;
	@%p121 bra 	$L__BB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f911, 0f4B800000;
	@%p122 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_68;
$L__BB0_74:
	mov.b32 	%r47, %f911;
	and.b32  	%r325, %r47, 8388607;
	or.b32  	%r2585, %r325, 1065353216;
	mov.b32 	%f910, %r2585;
	add.s32 	%r326, %r47, -1073741824;
	and.b32  	%r2586, %r326, -8388608;
	setp.eq.s32 	%p128, %r2586, 0;
	@%p128 bra 	$L__BB0_77;
// %bb.75:                              // %__nv_fmaf_rn.exit4.i.i.i685.preheader
	mov.f32 	%f630, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f629,%f630;
	// end inline asm
$L__BB0_76:                             // %__nv_fmaf_rn.exit4.i.i.i685
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r327, %r2586, 192937984;
	add.s32 	%r328, %r2585, %r327;
	mov.b32 	%f631, %r328;
	mul.f32 	%f632, %f629, %f631;
	sub.f32 	%f633, %f631, %f632;
	fma.rn.f32 	%f634, %f633, %f629, %f632;
	sub.f32 	%f635, %f631, %f634;
	fma.rz.f32 	%f636, %f635, %f629, %f634;
	cvt.rzi.f32.f32 	%f637, %f636;
	sub.f32 	%f910, %f631, %f637;
	sub.s32 	%r2586, %r2586, %r327;
	mov.b32 	%r2585, %f910;
	setp.ne.s32 	%p129, %r2586, 0;
	setp.ne.s32 	%p130, %r2585, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	$L__BB0_76;
$L__BB0_77:                             // %__internal_fmodf_slowpath_mod.exit.i.i687
	setp.gt.u32 	%p132, %r47, 2139095039;
	selp.f32 	%f638, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f639, %f910, 0f34000000;
	mul.f32 	%f911, %f638, %f639;
	bra.uni 	$L__BB0_78;
$L__BB0_68:                             // %__nv_fast_fdividef.exit.i.i.i664
	div.approx.f32 	%f622, %f911, %f184;
	cvt.rzi.f32.f32 	%f909, %f622;
	fma.rn.f32 	%f93, %f909, 0fC0000000, %f911;
	mov.b32 	%r46, %f93;
	setp.lt.u32 	%p123, %r46, 1073741824;
	@%p123 bra 	$L__BB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r46, -2147483647;
	@%p124 bra 	$L__BB0_71;
// %bb.70:
	add.f32 	%f627, %f909, 0fBF800000;
	setp.lt.f32 	%p127, %f93, 0fC0000000;
	add.f32 	%f628, %f627, 0fBF800000;
	selp.f32 	%f909, %f628, %f627, %p127;
	bra.uni 	$L__BB0_73;
$L__BB0_71:
	add.f32 	%f909, %f909, 0f3F800000;
	setp.ltu.f32 	%p125, %f93, 0f40800000;
	@%p125 bra 	$L__BB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i668
	add.f32 	%f623, %f909, 0f3F800000;
	fma.rn.f32 	%f625, %f184, 0fC0400000, %f93;
	setp.ge.f32 	%p126, %f625, 0f00000000;
	add.f32 	%f626, %f623, 0f3F800000;
	selp.f32 	%f909, %f626, %f623, %p126;
$L__BB0_73:                             // %__internal_fmodf_fastpath_quot.exit.i.i671
	fma.rn.f32 	%f911, %f909, 0fC0000000, %f911;
$L__BB0_78:                             // %__internal_fmodf_kernel.exit.i690
	abs.f32 	%f640, %f911;
	setp.gtu.f32 	%p133, %f640, 0f7F800000;
	@%p133 bra 	$L__BB0_80;
// %bb.79:
	mov.b32 	%r329, %f90;
	and.b32  	%r330, %r329, -2147483648;
	mov.b32 	%r331, %f911;
	or.b32  	%r332, %r330, %r331;
	mov.b32 	%f911, %r332;
$L__BB0_80:                             // %__nv_fmodf.exit691
	shl.b32 	%r353, %r121, 1;
	neg.s32 	%r58, %r353;
	mul.lo.s32 	%r59, %r58, %r37;
	cvt.rn.f32.s32 	%f673, %r59;
	div.approx.f32 	%f107, %f673, %f216;
	abs.f32 	%f915, %f107;
	setp.lt.f32 	%p141, %f915, 0f40000000;
	@%p141 bra 	$L__BB0_92;
// %bb.81:
	setp.gtu.f32 	%p142, %f915, 0f4B800000;
	@%p142 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_82;
$L__BB0_88:
	mov.b32 	%r61, %f915;
	and.b32  	%r354, %r61, 8388607;
	or.b32  	%r2587, %r354, 1065353216;
	mov.b32 	%f914, %r2587;
	add.s32 	%r355, %r61, -1073741824;
	and.b32  	%r2588, %r355, -8388608;
	setp.eq.s32 	%p148, %r2588, 0;
	@%p148 bra 	$L__BB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i716.preheader
	mov.f32 	%f684, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f683,%f684;
	// end inline asm
$L__BB0_90:                             // %__nv_fmaf_rn.exit4.i.i.i716
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r356, %r2588, 192937984;
	add.s32 	%r357, %r2587, %r356;
	mov.b32 	%f685, %r357;
	mul.f32 	%f686, %f683, %f685;
	sub.f32 	%f687, %f685, %f686;
	fma.rn.f32 	%f688, %f687, %f683, %f686;
	sub.f32 	%f689, %f685, %f688;
	fma.rz.f32 	%f690, %f689, %f683, %f688;
	cvt.rzi.f32.f32 	%f691, %f690;
	sub.f32 	%f914, %f685, %f691;
	sub.s32 	%r2588, %r2588, %r356;
	mov.b32 	%r2587, %f914;
	setp.ne.s32 	%p149, %r2588, 0;
	setp.ne.s32 	%p150, %r2587, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	$L__BB0_90;
$L__BB0_91:                             // %__internal_fmodf_slowpath_mod.exit.i.i718
	setp.gt.u32 	%p152, %r61, 2139095039;
	selp.f32 	%f692, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f693, %f914, 0f34000000;
	mul.f32 	%f915, %f692, %f693;
	bra.uni 	$L__BB0_92;
$L__BB0_82:                             // %__nv_fast_fdividef.exit.i.i.i695
	div.approx.f32 	%f676, %f915, %f184;
	cvt.rzi.f32.f32 	%f913, %f676;
	fma.rn.f32 	%f110, %f913, 0fC0000000, %f915;
	mov.b32 	%r60, %f110;
	setp.lt.u32 	%p143, %r60, 1073741824;
	@%p143 bra 	$L__BB0_87;
// %bb.83:
	setp.lt.u32 	%p144, %r60, -2147483647;
	@%p144 bra 	$L__BB0_85;
// %bb.84:
	add.f32 	%f681, %f913, 0fBF800000;
	setp.lt.f32 	%p147, %f110, 0fC0000000;
	add.f32 	%f682, %f681, 0fBF800000;
	selp.f32 	%f913, %f682, %f681, %p147;
	bra.uni 	$L__BB0_87;
$L__BB0_85:
	add.f32 	%f913, %f913, 0f3F800000;
	setp.ltu.f32 	%p145, %f110, 0f40800000;
	@%p145 bra 	$L__BB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i699
	add.f32 	%f677, %f913, 0f3F800000;
	fma.rn.f32 	%f679, %f184, 0fC0400000, %f110;
	setp.ge.f32 	%p146, %f679, 0f00000000;
	add.f32 	%f680, %f677, 0f3F800000;
	selp.f32 	%f913, %f680, %f677, %p146;
$L__BB0_87:                             // %__internal_fmodf_fastpath_quot.exit.i.i702
	fma.rn.f32 	%f915, %f913, 0fC0000000, %f915;
$L__BB0_92:                             // %__internal_fmodf_kernel.exit.i721
	abs.f32 	%f694, %f915;
	setp.gtu.f32 	%p153, %f694, 0f7F800000;
	@%p153 bra 	$L__BB0_94;
// %bb.93:
	mov.b32 	%r358, %f107;
	and.b32  	%r359, %r358, -2147483648;
	mov.b32 	%r360, %f915;
	or.b32  	%r361, %r359, %r360;
	mov.b32 	%f915, %r361;
$L__BB0_94:                             // %__nv_fmodf.exit722
	shl.b32 	%r370, %r37, 2;
	sub.s32 	%r371, %r59, %r370;
	cvt.rn.f32.s32 	%f725, %r371;
	div.approx.f32 	%f126, %f725, %f216;
	abs.f32 	%f919, %f126;
	setp.lt.f32 	%p161, %f919, 0f40000000;
	@%p161 bra 	$L__BB0_106;
// %bb.95:
	setp.gtu.f32 	%p162, %f919, 0f4B800000;
	@%p162 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_96;
$L__BB0_102:
	mov.b32 	%r69, %f919;
	and.b32  	%r372, %r69, 8388607;
	or.b32  	%r2589, %r372, 1065353216;
	mov.b32 	%f918, %r2589;
	add.s32 	%r373, %r69, -1073741824;
	and.b32  	%r2590, %r373, -8388608;
	setp.eq.s32 	%p168, %r2590, 0;
	@%p168 bra 	$L__BB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i747.preheader
	mov.f32 	%f736, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f735,%f736;
	// end inline asm
$L__BB0_104:                            // %__nv_fmaf_rn.exit4.i.i.i747
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r374, %r2590, 192937984;
	add.s32 	%r375, %r2589, %r374;
	mov.b32 	%f737, %r375;
	mul.f32 	%f738, %f735, %f737;
	sub.f32 	%f739, %f737, %f738;
	fma.rn.f32 	%f740, %f739, %f735, %f738;
	sub.f32 	%f741, %f737, %f740;
	fma.rz.f32 	%f742, %f741, %f735, %f740;
	cvt.rzi.f32.f32 	%f743, %f742;
	sub.f32 	%f918, %f737, %f743;
	sub.s32 	%r2590, %r2590, %r374;
	mov.b32 	%r2589, %f918;
	setp.ne.s32 	%p169, %r2590, 0;
	setp.ne.s32 	%p170, %r2589, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	$L__BB0_104;
$L__BB0_105:                            // %__internal_fmodf_slowpath_mod.exit.i.i749
	setp.gt.u32 	%p172, %r69, 2139095039;
	selp.f32 	%f744, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f745, %f918, 0f34000000;
	mul.f32 	%f919, %f744, %f745;
	bra.uni 	$L__BB0_106;
$L__BB0_96:                             // %__nv_fast_fdividef.exit.i.i.i726
	div.approx.f32 	%f728, %f919, %f184;
	cvt.rzi.f32.f32 	%f917, %f728;
	fma.rn.f32 	%f129, %f917, 0fC0000000, %f919;
	mov.b32 	%r68, %f129;
	setp.lt.u32 	%p163, %r68, 1073741824;
	@%p163 bra 	$L__BB0_101;
// %bb.97:
	setp.lt.u32 	%p164, %r68, -2147483647;
	@%p164 bra 	$L__BB0_99;
// %bb.98:
	add.f32 	%f733, %f917, 0fBF800000;
	setp.lt.f32 	%p167, %f129, 0fC0000000;
	add.f32 	%f734, %f733, 0fBF800000;
	selp.f32 	%f917, %f734, %f733, %p167;
	bra.uni 	$L__BB0_101;
$L__BB0_99:
	add.f32 	%f917, %f917, 0f3F800000;
	setp.ltu.f32 	%p165, %f129, 0f40800000;
	@%p165 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i730
	add.f32 	%f729, %f917, 0f3F800000;
	fma.rn.f32 	%f731, %f184, 0fC0400000, %f129;
	setp.ge.f32 	%p166, %f731, 0f00000000;
	add.f32 	%f732, %f729, 0f3F800000;
	selp.f32 	%f917, %f732, %f729, %p166;
$L__BB0_101:                            // %__internal_fmodf_fastpath_quot.exit.i.i733
	fma.rn.f32 	%f919, %f917, 0fC0000000, %f919;
$L__BB0_106:                            // %__internal_fmodf_kernel.exit.i752
	abs.f32 	%f746, %f919;
	setp.gtu.f32 	%p173, %f746, 0f7F800000;
	@%p173 bra 	$L__BB0_108;
// %bb.107:
	mov.b32 	%r376, %f126;
	and.b32  	%r377, %r376, -2147483648;
	mov.b32 	%r378, %f919;
	or.b32  	%r379, %r377, %r378;
	mov.b32 	%f919, %r379;
$L__BB0_108:                            // %__nv_fmodf.exit753
	mul.lo.s32 	%r79, %r58, %r36;
	cvt.rn.f32.s32 	%f779, %r79;
	mov.f32 	%f780, 0f40800000;
	div.approx.f32 	%f143, %f779, %f780;
	abs.f32 	%f927, %f143;
	setp.lt.f32 	%p181, %f927, 0f40000000;
	@%p181 bra 	$L__BB0_139;
// %bb.109:
	setp.gtu.f32 	%p182, %f927, 0f4B800000;
	@%p182 bra 	$L__BB0_135;
	bra.uni 	$L__BB0_110;
$L__BB0_135:
	mov.b32 	%r128, %f927;
	and.b32  	%r394, %r128, 8388607;
	or.b32  	%r2600, %r394, 1065353216;
	mov.b32 	%f926, %r2600;
	add.s32 	%r395, %r128, -1073741824;
	and.b32  	%r2601, %r395, -8388608;
	setp.eq.s32 	%p188, %r2601, 0;
	@%p188 bra 	$L__BB0_138;
// %bb.136:                             // %__nv_fmaf_rn.exit4.i.i.i809.preheader
	mov.f32 	%f790, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f789,%f790;
	// end inline asm
$L__BB0_137:                            // %__nv_fmaf_rn.exit4.i.i.i809
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r396, %r2601, 192937984;
	add.s32 	%r397, %r2600, %r396;
	mov.b32 	%f791, %r397;
	mul.f32 	%f792, %f789, %f791;
	sub.f32 	%f793, %f791, %f792;
	fma.rn.f32 	%f794, %f793, %f789, %f792;
	sub.f32 	%f795, %f791, %f794;
	fma.rz.f32 	%f796, %f795, %f789, %f794;
	cvt.rzi.f32.f32 	%f797, %f796;
	sub.f32 	%f926, %f791, %f797;
	sub.s32 	%r2601, %r2601, %r396;
	mov.b32 	%r2600, %f926;
	setp.ne.s32 	%p189, %r2601, 0;
	setp.ne.s32 	%p190, %r2600, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	$L__BB0_137;
$L__BB0_138:                            // %__internal_fmodf_slowpath_mod.exit.i.i811
	setp.gt.u32 	%p192, %r128, 2139095039;
	selp.f32 	%f798, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f799, %f926, 0f34000000;
	mul.f32 	%f927, %f798, %f799;
	bra.uni 	$L__BB0_139;
$L__BB0_110:                            // %__nv_fast_fdividef.exit.i.i.i788
	div.approx.f32 	%f782, %f927, %f184;
	cvt.rzi.f32.f32 	%f925, %f782;
	fma.rn.f32 	%f164, %f925, 0fC0000000, %f927;
	mov.b32 	%r127, %f164;
	setp.lt.u32 	%p183, %r127, 1073741824;
	@%p183 bra 	$L__BB0_134;
// %bb.111:
	setp.lt.u32 	%p184, %r127, -2147483647;
	@%p184 bra 	$L__BB0_132;
// %bb.112:
	add.f32 	%f787, %f925, 0fBF800000;
	setp.lt.f32 	%p187, %f164, 0fC0000000;
	add.f32 	%f788, %f787, 0fBF800000;
	selp.f32 	%f925, %f788, %f787, %p187;
	bra.uni 	$L__BB0_134;
$L__BB0_132:
	add.f32 	%f925, %f925, 0f3F800000;
	setp.ltu.f32 	%p185, %f164, 0f40800000;
	@%p185 bra 	$L__BB0_134;
// %bb.133:                             // %__nv_fmaf_rn.exit.i.i.i792
	add.f32 	%f783, %f925, 0f3F800000;
	fma.rn.f32 	%f785, %f184, 0fC0400000, %f164;
	setp.ge.f32 	%p186, %f785, 0f00000000;
	add.f32 	%f786, %f783, 0f3F800000;
	selp.f32 	%f925, %f786, %f783, %p186;
$L__BB0_134:                            // %__internal_fmodf_fastpath_quot.exit.i.i795
	fma.rn.f32 	%f927, %f925, 0fC0000000, %f927;
$L__BB0_139:                            // %__internal_fmodf_kernel.exit.i814
	abs.f32 	%f800, %f927;
	setp.gtu.f32 	%p193, %f800, 0f7F800000;
	@%p193 bra 	$L__BB0_141;
// %bb.140:
	mov.b32 	%r398, %f143;
	and.b32  	%r399, %r398, -2147483648;
	mov.b32 	%r400, %f927;
	or.b32  	%r401, %r399, %r400;
	mov.b32 	%f927, %r401;
$L__BB0_141:                            // %__nv_fmodf.exit815
	shl.b32 	%r410, %r36, 2;
	sub.s32 	%r411, %r79, %r410;
	cvt.rn.f32.s32 	%f833, %r411;
	div.approx.f32 	%f181, %f833, %f780;
	abs.f32 	%f923, %f181;
	setp.lt.f32 	%p202, %f923, 0f40000000;
	@%p202 bra 	$L__BB0_124;
// %bb.113:
	setp.gtu.f32 	%p203, %f923, 0f4B800000;
	@%p203 bra 	$L__BB0_120;
	bra.uni 	$L__BB0_114;
$L__BB0_120:
	mov.b32 	%r81, %f923;
	and.b32  	%r412, %r81, 8388607;
	or.b32  	%r2591, %r412, 1065353216;
	mov.b32 	%f922, %r2591;
	add.s32 	%r413, %r81, -1073741824;
	and.b32  	%r2592, %r413, -8388608;
	setp.eq.s32 	%p209, %r2592, 0;
	@%p209 bra 	$L__BB0_123;
// %bb.121:                             // %__nv_fmaf_rn.exit4.i.i.i778.preheader
	mov.f32 	%f844, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f843,%f844;
	// end inline asm
$L__BB0_122:                            // %__nv_fmaf_rn.exit4.i.i.i778
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r414, %r2592, 192937984;
	add.s32 	%r415, %r2591, %r414;
	mov.b32 	%f845, %r415;
	mul.f32 	%f846, %f843, %f845;
	sub.f32 	%f847, %f845, %f846;
	fma.rn.f32 	%f848, %f847, %f843, %f846;
	sub.f32 	%f849, %f845, %f848;
	fma.rz.f32 	%f850, %f849, %f843, %f848;
	cvt.rzi.f32.f32 	%f851, %f850;
	sub.f32 	%f922, %f845, %f851;
	sub.s32 	%r2592, %r2592, %r414;
	mov.b32 	%r2591, %f922;
	setp.ne.s32 	%p210, %r2592, 0;
	setp.ne.s32 	%p211, %r2591, 0;
	and.pred  	%p212, %p210, %p211;
	@%p212 bra 	$L__BB0_122;
$L__BB0_123:                            // %__internal_fmodf_slowpath_mod.exit.i.i780
	setp.gt.u32 	%p213, %r81, 2139095039;
	selp.f32 	%f852, 0f7FFFFFFF, 0f4B800000, %p213;
	mul.f32 	%f853, %f922, 0f34000000;
	mul.f32 	%f923, %f852, %f853;
	bra.uni 	$L__BB0_124;
$L__BB0_114:                            // %__nv_fast_fdividef.exit.i.i.i757
	div.approx.f32 	%f836, %f923, %f184;
	cvt.rzi.f32.f32 	%f921, %f836;
	fma.rn.f32 	%f146, %f921, 0fC0000000, %f923;
	mov.b32 	%r80, %f146;
	setp.lt.u32 	%p204, %r80, 1073741824;
	@%p204 bra 	$L__BB0_119;
// %bb.115:
	setp.lt.u32 	%p205, %r80, -2147483647;
	@%p205 bra 	$L__BB0_117;
// %bb.116:
	add.f32 	%f841, %f921, 0fBF800000;
	setp.lt.f32 	%p208, %f146, 0fC0000000;
	add.f32 	%f842, %f841, 0fBF800000;
	selp.f32 	%f921, %f842, %f841, %p208;
	bra.uni 	$L__BB0_119;
$L__BB0_117:
	add.f32 	%f921, %f921, 0f3F800000;
	setp.ltu.f32 	%p206, %f146, 0f40800000;
	@%p206 bra 	$L__BB0_119;
// %bb.118:                             // %__nv_fmaf_rn.exit.i.i.i761
	add.f32 	%f837, %f921, 0f3F800000;
	fma.rn.f32 	%f839, %f184, 0fC0400000, %f146;
	setp.ge.f32 	%p207, %f839, 0f00000000;
	add.f32 	%f840, %f837, 0f3F800000;
	selp.f32 	%f921, %f840, %f837, %p207;
$L__BB0_119:                            // %__internal_fmodf_fastpath_quot.exit.i.i764
	fma.rn.f32 	%f923, %f921, 0fC0000000, %f923;
$L__BB0_124:                            // %__internal_fmodf_kernel.exit.i783
	abs.f32 	%f854, %f923;
	setp.gtu.f32 	%p214, %f854, 0f7F800000;
	@%p214 bra 	$L__BB0_126;
// %bb.125:
	mov.b32 	%r416, %f181;
	and.b32  	%r417, %r416, -2147483648;
	mov.b32 	%r418, %f923;
	or.b32  	%r419, %r417, %r418;
	mov.b32 	%f923, %r419;
$L__BB0_126:                            // %__nv_fmodf.exit784
	setp.le.s32 	%p222, %r6, %r5;
	mov.u32 	%r2577, 0;
	@%p222 bra 	$L__BB0_144;
// %bb.127:                             // %L1595.lr.ph
	mov.f32 	%f188, 0f43010000;
	div.approx.f32 	%f189, %f187, %f188;
	div.approx.f32 	%f223, %f221, %f188;
	div.approx.f32 	%f258, %f256, %f188;
	div.approx.f32 	%f292, %f290, %f188;
	div.approx.f32 	%f327, %f325, %f188;
	div.approx.f32 	%f361, %f359, %f188;
	div.approx.f32 	%f396, %f394, %f188;
	div.approx.f32 	%f430, %f428, %f188;
	abs.f32 	%f190, %f189;
	abs.f32 	%f224, %f223;
	abs.f32 	%f259, %f258;
	abs.f32 	%f293, %f292;
	abs.f32 	%f328, %f327;
	abs.f32 	%f362, %f361;
	abs.f32 	%f397, %f396;
	abs.f32 	%f431, %f430;
	setp.gt.f32 	%p13, %f190, 0f4B800000;
	mul.f32 	%f191, %f189, 0f00000000;
	setp.gt.f32 	%p19, %f224, 0f4B800000;
	mul.f32 	%f225, %f223, 0f00000000;
	setp.gt.f32 	%p25, %f259, 0f4B800000;
	mul.f32 	%f260, %f258, 0f00000000;
	setp.gt.f32 	%p31, %f293, 0f4B800000;
	mul.f32 	%f294, %f292, 0f00000000;
	setp.gt.f32 	%p37, %f328, 0f4B800000;
	mul.f32 	%f329, %f327, 0f00000000;
	setp.gt.f32 	%p43, %f362, 0f4B800000;
	mul.f32 	%f363, %f361, 0f00000000;
	setp.gt.f32 	%p49, %f397, 0f4B800000;
	mul.f32 	%f398, %f396, 0f00000000;
	setp.gt.f32 	%p55, %f431, 0f4B800000;
	mul.f32 	%f432, %f430, 0f00000000;
	selp.f32 	%f192, %f191, %f189, %p13;
	selp.f32 	%f226, %f225, %f223, %p19;
	selp.f32 	%f261, %f260, %f258, %p25;
	selp.f32 	%f295, %f294, %f292, %p31;
	selp.f32 	%f330, %f329, %f327, %p37;
	selp.f32 	%f364, %f363, %f361, %p43;
	selp.f32 	%f399, %f398, %f396, %p49;
	selp.f32 	%f433, %f432, %f430, %p55;
	add.f32 	%f589, %f907, %f907;
	add.f32 	%f641, %f911, %f911;
	add.f32 	%f193, %f192, %f192;
	add.f32 	%f227, %f226, %f226;
	add.f32 	%f262, %f261, %f261;
	add.f32 	%f296, %f295, %f295;
	add.f32 	%f331, %f330, %f330;
	add.f32 	%f365, %f364, %f364;
	add.f32 	%f400, %f399, %f399;
	add.f32 	%f434, %f433, %f433;
	add.f32 	%f483, %f899, %f899;
	add.f32 	%f535, %f903, %f903;
	mov.b32 	%r313, %f589;
	mov.b32 	%r345, %f641;
	add.f32 	%f695, %f915, %f915;
	add.f32 	%f747, %f919, %f919;
	mov.b32 	%r189, %f193;
	mov.b32 	%r196, %f227;
	mov.b32 	%r207, %f262;
	mov.b32 	%r214, %f296;
	mov.b32 	%r225, %f331;
	mov.b32 	%r232, %f365;
	mov.b32 	%r243, %f400;
	mov.b32 	%r250, %f434;
	mov.b32 	%r268, %f483;
	mov.b32 	%r291, %f535;
	and.b32  	%r314, %r313, -2147483648;
	and.b32  	%r346, %r345, -2147483648;
	mov.b32 	%r362, %f695;
	mov.b32 	%r386, %f747;
	add.f32 	%f801, %f927, %f927;
	and.b32  	%r190, %r189, -2147483648;
	and.b32  	%r197, %r196, -2147483648;
	and.b32  	%r208, %r207, -2147483648;
	and.b32  	%r215, %r214, -2147483648;
	and.b32  	%r226, %r225, -2147483648;
	and.b32  	%r233, %r232, -2147483648;
	and.b32  	%r244, %r243, -2147483648;
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r292, %r291, -2147483648;
	or.b32  	%r315, %r314, 1056964608;
	or.b32  	%r347, %r346, 1056964608;
	and.b32  	%r363, %r362, -2147483648;
	and.b32  	%r387, %r386, -2147483648;
	mov.b32 	%r402, %f801;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r198, %r197, 1056964608;
	or.b32  	%r209, %r208, 1056964608;
	or.b32  	%r216, %r215, 1056964608;
	or.b32  	%r227, %r226, 1056964608;
	or.b32  	%r234, %r233, 1056964608;
	or.b32  	%r245, %r244, 1056964608;
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r293, %r292, 1056964608;
	mov.b32 	%f590, %r315;
	mov.b32 	%f642, %r347;
	or.b32  	%r364, %r363, 1056964608;
	or.b32  	%r388, %r387, 1056964608;
	and.b32  	%r403, %r402, -2147483648;
	mov.b32 	%f194, %r191;
	mov.b32 	%f228, %r198;
	mov.b32 	%f263, %r209;
	mov.b32 	%f297, %r216;
	mov.b32 	%f332, %r227;
	mov.b32 	%f366, %r234;
	mov.b32 	%f401, %r245;
	mov.b32 	%f435, %r252;
	mov.b32 	%f484, %r270;
	mov.b32 	%f536, %r293;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f643, %f641, %f642;
	abs.f32 	%f645, %f641;
	mov.b32 	%f696, %r364;
	mov.b32 	%f748, %r388;
	or.b32  	%r404, %r403, 1056964608;
	add.f32 	%f195, %f193, %f194;
	abs.f32 	%f197, %f193;
	add.f32 	%f229, %f227, %f228;
	abs.f32 	%f231, %f227;
	add.f32 	%f264, %f262, %f263;
	abs.f32 	%f266, %f262;
	add.f32 	%f298, %f296, %f297;
	abs.f32 	%f300, %f296;
	add.f32 	%f333, %f331, %f332;
	abs.f32 	%f335, %f331;
	add.f32 	%f367, %f365, %f366;
	abs.f32 	%f369, %f365;
	add.f32 	%f402, %f400, %f401;
	abs.f32 	%f404, %f400;
	add.f32 	%f436, %f434, %f435;
	abs.f32 	%f438, %f434;
	add.f32 	%f485, %f483, %f484;
	abs.f32 	%f487, %f483;
	add.f32 	%f537, %f535, %f536;
	abs.f32 	%f539, %f535;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p114, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f644, %f643;
	setp.gt.f32 	%p134, %f645, 0f4B000000;
	add.f32 	%f697, %f695, %f696;
	abs.f32 	%f699, %f695;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	mov.b32 	%f802, %r404;
	cvt.rzi.f32.f32 	%f196, %f195;
	setp.gt.f32 	%p14, %f197, 0f4B000000;
	cvt.rzi.f32.f32 	%f230, %f229;
	setp.gt.f32 	%p20, %f231, 0f4B000000;
	cvt.rzi.f32.f32 	%f265, %f264;
	setp.gt.f32 	%p26, %f266, 0f4B000000;
	cvt.rzi.f32.f32 	%f299, %f298;
	setp.gt.f32 	%p32, %f300, 0f4B000000;
	cvt.rzi.f32.f32 	%f334, %f333;
	setp.gt.f32 	%p38, %f335, 0f4B000000;
	cvt.rzi.f32.f32 	%f368, %f367;
	setp.gt.f32 	%p44, %f369, 0f4B000000;
	cvt.rzi.f32.f32 	%f403, %f402;
	setp.gt.f32 	%p50, %f404, 0f4B000000;
	cvt.rzi.f32.f32 	%f437, %f436;
	setp.gt.f32 	%p56, %f438, 0f4B000000;
	cvt.rzi.f32.f32 	%f486, %f485;
	setp.gt.f32 	%p74, %f487, 0f4B000000;
	cvt.rzi.f32.f32 	%f538, %f537;
	setp.gt.f32 	%p94, %f539, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p114;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p115, %f593, 0f3F000000;
	selp.f32 	%f646, %f641, %f644, %p134;
	cvt.rzi.f32.f32 	%f647, %f641;
	setp.lt.f32 	%p135, %f645, 0f3F000000;
	cvt.rzi.f32.f32 	%f698, %f697;
	setp.gt.f32 	%p154, %f699, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p174, %f751, 0f4B000000;
	add.f32 	%f803, %f801, %f802;
	abs.f32 	%f805, %f801;
	selp.f32 	%f198, %f193, %f196, %p14;
	cvt.rzi.f32.f32 	%f199, %f193;
	setp.lt.f32 	%p15, %f197, 0f3F000000;
	selp.f32 	%f232, %f227, %f230, %p20;
	cvt.rzi.f32.f32 	%f233, %f227;
	setp.lt.f32 	%p21, %f231, 0f3F000000;
	selp.f32 	%f267, %f262, %f265, %p26;
	cvt.rzi.f32.f32 	%f268, %f262;
	setp.lt.f32 	%p27, %f266, 0f3F000000;
	selp.f32 	%f301, %f296, %f299, %p32;
	cvt.rzi.f32.f32 	%f302, %f296;
	setp.lt.f32 	%p33, %f300, 0f3F000000;
	selp.f32 	%f336, %f331, %f334, %p38;
	cvt.rzi.f32.f32 	%f337, %f331;
	setp.lt.f32 	%p39, %f335, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p44;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p45, %f369, 0f3F000000;
	selp.f32 	%f405, %f400, %f403, %p50;
	cvt.rzi.f32.f32 	%f406, %f400;
	setp.lt.f32 	%p51, %f404, 0f3F000000;
	selp.f32 	%f439, %f434, %f437, %p56;
	cvt.rzi.f32.f32 	%f440, %f434;
	setp.lt.f32 	%p57, %f438, 0f3F000000;
	selp.f32 	%f488, %f483, %f486, %p74;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p75, %f487, 0f3F000000;
	selp.f32 	%f540, %f535, %f538, %p94;
	cvt.rzi.f32.f32 	%f541, %f535;
	setp.lt.f32 	%p95, %f539, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p115;
	selp.f32 	%f648, %f647, %f646, %p135;
	selp.f32 	%f700, %f695, %f698, %p154;
	cvt.rzi.f32.f32 	%f701, %f695;
	setp.lt.f32 	%p155, %f699, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p174;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p175, %f751, 0f3F000000;
	cvt.rzi.f32.f32 	%f804, %f803;
	setp.gt.f32 	%p195, %f805, 0f4B000000;
	selp.f32 	%f200, %f199, %f198, %p15;
	selp.f32 	%f234, %f233, %f232, %p21;
	selp.f32 	%f269, %f268, %f267, %p27;
	selp.f32 	%f303, %f302, %f301, %p33;
	selp.f32 	%f338, %f337, %f336, %p39;
	selp.f32 	%f372, %f371, %f370, %p45;
	selp.f32 	%f407, %f406, %f405, %p51;
	selp.f32 	%f441, %f440, %f439, %p57;
	selp.f32 	%f490, %f489, %f488, %p75;
	selp.f32 	%f542, %f541, %f540, %p95;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f907;
	fma.rn.f32 	%f649, %f648, 0fBF000000, %f911;
	selp.f32 	%f702, %f701, %f700, %p155;
	selp.f32 	%f754, %f753, %f752, %p175;
	selp.f32 	%f806, %f801, %f804, %p195;
	cvt.rzi.f32.f32 	%f807, %f801;
	setp.lt.f32 	%p196, %f805, 0f3F000000;
	fma.rn.f32 	%f201, %f200, 0fBF000000, %f192;
	fma.rn.f32 	%f235, %f234, 0fBF000000, %f226;
	fma.rn.f32 	%f270, %f269, 0fBF000000, %f261;
	fma.rn.f32 	%f304, %f303, 0fBF000000, %f295;
	fma.rn.f32 	%f339, %f338, 0fBF000000, %f330;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f408, %f407, 0fBF000000, %f399;
	fma.rn.f32 	%f442, %f441, 0fBF000000, %f433;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f899;
	fma.rn.f32 	%f543, %f542, 0fBF000000, %f903;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f650, %f649, %f649;
	fma.rn.f32 	%f703, %f702, 0fBF000000, %f915;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f919;
	selp.f32 	%f808, %f807, %f806, %p196;
	mul.f32 	%f202, %f201, %f201;
	mul.f32 	%f236, %f235, %f235;
	mul.f32 	%f271, %f270, %f270;
	mul.f32 	%f305, %f304, %f304;
	mul.f32 	%f340, %f339, %f339;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f409, %f408, %f408;
	mul.f32 	%f443, %f442, %f442;
	mul.f32 	%f492, %f491, %f491;
	mul.f32 	%f544, %f543, %f543;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f651, %f650, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f652, %f650, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f704, %f703, %f703;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f809, %f808, 0fBF000000, %f927;
	cvt.rzi.s32.f32 	%r192, %f200;
	fma.rn.f32 	%f203, %f202, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f204, %f202, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r199, %f234;
	fma.rn.f32 	%f237, %f236, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f238, %f236, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f269;
	fma.rn.f32 	%f272, %f271, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f273, %f271, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r217, %f303;
	fma.rn.f32 	%f306, %f305, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f307, %f305, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f338;
	fma.rn.f32 	%f341, %f340, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f342, %f340, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r235, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r246, %f407;
	fma.rn.f32 	%f410, %f409, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f411, %f409, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r253, %f441;
	fma.rn.f32 	%f444, %f443, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f445, %f443, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f545, %f544, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f546, %f544, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r316, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r348, %f648;
	fma.rn.f32 	%f653, %f651, %f650, 0fC0A55DF6;
	fma.rn.f32 	%f654, %f652, %f650, 0f4081E0CF;
	fma.rn.f32 	%f655, %f650, %f649, 0f00000000;
	fma.rn.f32 	%f705, %f704, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f706, %f704, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f810, %f809, %f809;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f205, %f203, %f202, 0fC0A55DF6;
	fma.rn.f32 	%f206, %f204, %f202, 0f4081E0CF;
	fma.rn.f32 	%f207, %f202, %f201, 0f00000000;
	add.s32 	%r200, %r199, 1;
	fma.rn.f32 	%f239, %f237, %f236, 0fC0A55DF6;
	fma.rn.f32 	%f240, %f238, %f236, 0f4081E0CF;
	fma.rn.f32 	%f241, %f236, %f235, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f274, %f272, %f271, 0fC0A55DF6;
	fma.rn.f32 	%f275, %f273, %f271, 0f4081E0CF;
	fma.rn.f32 	%f276, %f271, %f270, 0f00000000;
	add.s32 	%r218, %r217, 1;
	fma.rn.f32 	%f308, %f306, %f305, 0fC0A55DF6;
	fma.rn.f32 	%f309, %f307, %f305, 0f4081E0CF;
	fma.rn.f32 	%f310, %f305, %f304, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f343, %f341, %f340, 0fC0A55DF6;
	fma.rn.f32 	%f344, %f342, %f340, 0f4081E0CF;
	fma.rn.f32 	%f345, %f340, %f339, 0f00000000;
	add.s32 	%r236, %r235, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r247, %r246, 1;
	fma.rn.f32 	%f412, %f410, %f409, 0fC0A55DF6;
	fma.rn.f32 	%f413, %f411, %f409, 0f4081E0CF;
	fma.rn.f32 	%f414, %f409, %f408, 0f00000000;
	add.s32 	%r254, %r253, 1;
	fma.rn.f32 	%f446, %f444, %f443, 0fC0A55DF6;
	fma.rn.f32 	%f447, %f445, %f443, 0f4081E0CF;
	fma.rn.f32 	%f448, %f443, %f442, 0f00000000;
	cvt.rzi.s32.f32 	%r271, %f490;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	cvt.rzi.s32.f32 	%r294, %f542;
	fma.rn.f32 	%f547, %f545, %f544, 0fC0A55DF6;
	fma.rn.f32 	%f548, %f546, %f544, 0f4081E0CF;
	fma.rn.f32 	%f549, %f544, %f543, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f656, %f654, %f650, 0fC09DE9E6;
	fma.rn.f32 	%f657, %f653, %f655, 0f00000000;
	and.b32  	%r349, %r348, 1;
	cvt.rzi.s32.f32 	%r365, %f702;
	fma.rn.f32 	%f707, %f705, %f704, 0fC0A55DF6;
	fma.rn.f32 	%f708, %f706, %f704, 0f4081E0CF;
	fma.rn.f32 	%f709, %f704, %f703, 0f00000000;
	cvt.rzi.s32.f32 	%r389, %f754;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f811, %f810, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f812, %f810, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r116, %r1, 16;
	shl.b32 	%r117, %r2, 5;
	fma.rn.f32 	%f208, %f206, %f202, 0fC09DE9E6;
	fma.rn.f32 	%f209, %f205, %f207, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f242, %f240, %f236, 0fC09DE9E6;
	fma.rn.f32 	%f243, %f239, %f241, 0f00000000;
	and.b32  	%r201, %r200, 1;
	fma.rn.f32 	%f277, %f275, %f271, 0fC09DE9E6;
	fma.rn.f32 	%f278, %f274, %f276, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f311, %f309, %f305, 0fC09DE9E6;
	fma.rn.f32 	%f312, %f308, %f310, 0f00000000;
	and.b32  	%r219, %r218, 1;
	fma.rn.f32 	%f346, %f344, %f340, 0fC09DE9E6;
	fma.rn.f32 	%f347, %f343, %f345, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r237, %r236, 1;
	fma.rn.f32 	%f415, %f413, %f409, 0fC09DE9E6;
	fma.rn.f32 	%f416, %f412, %f414, 0f00000000;
	and.b32  	%r248, %r247, 1;
	fma.rn.f32 	%f449, %f447, %f443, 0fC09DE9E6;
	fma.rn.f32 	%f450, %f446, %f448, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	and.b32  	%r272, %r271, 1;
	fma.rn.f32 	%f550, %f548, %f544, 0fC09DE9E6;
	fma.rn.f32 	%f551, %f547, %f549, 0f00000000;
	and.b32  	%r295, %r294, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p116, %r317, 1;
	fma.rn.f32 	%f658, %f656, %f650, 0f3F800000;
	fma.rn.f32 	%f659, %f649, 0f40490FDB, %f657;
	setp.eq.b32 	%p136, %r349, 1;
	fma.rn.f32 	%f710, %f708, %f704, 0fC09DE9E6;
	fma.rn.f32 	%f711, %f707, %f709, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r390, %r389, 1;
	cvt.rzi.s32.f32 	%r405, %f808;
	fma.rn.f32 	%f813, %f811, %f810, 0fC0A55DF6;
	fma.rn.f32 	%f814, %f812, %f810, 0f4081E0CF;
	fma.rn.f32 	%f815, %f810, %f809, 0f00000000;
	and.b32  	%r118, %r1, 2;
	or.b32  	%r179, %r117, %r116;
	fma.rn.f32 	%f210, %f208, %f202, 0f3F800000;
	fma.rn.f32 	%f211, %f201, 0f40490FDB, %f209;
	setp.eq.b32 	%p16, %r194, 1;
	fma.rn.f32 	%f244, %f242, %f236, 0f3F800000;
	fma.rn.f32 	%f245, %f235, 0f40490FDB, %f243;
	setp.eq.b32 	%p22, %r201, 1;
	fma.rn.f32 	%f279, %f277, %f271, 0f3F800000;
	fma.rn.f32 	%f280, %f270, 0f40490FDB, %f278;
	setp.eq.b32 	%p28, %r212, 1;
	fma.rn.f32 	%f313, %f311, %f305, 0f3F800000;
	fma.rn.f32 	%f314, %f304, 0f40490FDB, %f312;
	setp.eq.b32 	%p34, %r219, 1;
	fma.rn.f32 	%f348, %f346, %f340, 0f3F800000;
	fma.rn.f32 	%f349, %f339, 0f40490FDB, %f347;
	setp.eq.b32 	%p40, %r230, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p46, %r237, 1;
	fma.rn.f32 	%f417, %f415, %f409, 0f3F800000;
	fma.rn.f32 	%f418, %f408, 0f40490FDB, %f416;
	setp.eq.b32 	%p52, %r248, 1;
	fma.rn.f32 	%f451, %f449, %f443, 0f3F800000;
	fma.rn.f32 	%f452, %f442, 0f40490FDB, %f450;
	setp.eq.b32 	%p58, %r255, 1;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	setp.eq.b32 	%p76, %r272, 1;
	fma.rn.f32 	%f552, %f550, %f544, 0f3F800000;
	fma.rn.f32 	%f553, %f543, 0f40490FDB, %f551;
	setp.eq.b32 	%p96, %r295, 1;
	selp.f32 	%f608, %f606, %f607, %p116;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f660, %f658, %f659, %p136;
	and.b32  	%r350, %r348, 2;
	fma.rn.f32 	%f712, %f710, %f704, 0f3F800000;
	fma.rn.f32 	%f713, %f703, 0f40490FDB, %f711;
	setp.eq.b32 	%p156, %r366, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p176, %r390, 1;
	fma.rn.f32 	%f816, %f814, %f810, 0fC09DE9E6;
	fma.rn.f32 	%f817, %f813, %f815, 0f00000000;
	and.b32  	%r406, %r405, 1;
	shl.b32 	%r112, %r1, 2;
	and.b32  	%r115, %r114, 8;
	or.b32  	%r180, %r179, %r118;
	selp.f32 	%f212, %f210, %f211, %p16;
	and.b32  	%r195, %r193, 2;
	mov.f32 	%f213, 0f00000000;
	selp.f32 	%f246, %f244, %f245, %p22;
	and.b32  	%r202, %r200, 2;
	selp.f32 	%f281, %f279, %f280, %p28;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f315, %f313, %f314, %p34;
	and.b32  	%r220, %r218, 2;
	selp.f32 	%f350, %f348, %f349, %p40;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f384, %f382, %f383, %p46;
	and.b32  	%r238, %r236, 2;
	selp.f32 	%f419, %f417, %f418, %p52;
	and.b32  	%r249, %r247, 2;
	selp.f32 	%f453, %f451, %f452, %p58;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f502, %f500, %f501, %p76;
	and.b32  	%r273, %r271, 2;
	selp.f32 	%f554, %f552, %f553, %p96;
	and.b32  	%r296, %r294, 2;
	setp.eq.s32 	%p117, %r318, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r319, %r316, 1;
	cvt.rzi.f32.f32 	%f615, %f907;
	setp.eq.s32 	%p137, %r350, 0;
	neg.f32 	%f662, %f660;
	add.s32 	%r351, %r348, 1;
	cvt.rzi.f32.f32 	%f667, %f911;
	selp.f32 	%f714, %f712, %f713, %p156;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f766, %f764, %f765, %p176;
	and.b32  	%r391, %r389, 2;
	fma.rn.f32 	%f818, %f816, %f810, 0f3F800000;
	fma.rn.f32 	%f819, %f809, 0f40490FDB, %f817;
	setp.eq.b32 	%p197, %r406, 1;
	and.b32  	%r113, %r112, 4;
	or.b32  	%r181, %r180, %r115;
	setp.eq.s32 	%p17, %r195, 0;
	sub.f32 	%f214, %f213, %f212;
	setp.eq.s32 	%p23, %r202, 0;
	sub.f32 	%f248, %f213, %f246;
	setp.eq.s32 	%p29, %r213, 0;
	sub.f32 	%f283, %f213, %f281;
	setp.eq.s32 	%p35, %r220, 0;
	sub.f32 	%f317, %f213, %f315;
	setp.eq.s32 	%p41, %r231, 0;
	sub.f32 	%f352, %f213, %f350;
	setp.eq.s32 	%p47, %r238, 0;
	sub.f32 	%f386, %f213, %f384;
	setp.eq.s32 	%p53, %r249, 0;
	sub.f32 	%f421, %f213, %f419;
	setp.eq.s32 	%p59, %r256, 0;
	sub.f32 	%f455, %f213, %f453;
	setp.eq.s32 	%p77, %r273, 0;
	neg.f32 	%f504, %f502;
	add.s32 	%r274, %r271, 1;
	cvt.rzi.f32.f32 	%f509, %f899;
	setp.eq.s32 	%p97, %r296, 0;
	neg.f32 	%f556, %f554;
	add.s32 	%r297, %r294, 1;
	cvt.rzi.f32.f32 	%f561, %f903;
	selp.f32 	%f609, %f607, %f606, %p116;
	selp.f32 	%f611, %f608, %f610, %p117;
	and.b32  	%r320, %r319, 2;
	setp.eq.f32 	%p119, %f615, %f907;
	mul.f32 	%f616, %f907, 0f00000000;
	selp.f32 	%f661, %f659, %f658, %p136;
	selp.f32 	%f663, %f660, %f662, %p137;
	and.b32  	%r352, %r351, 2;
	setp.eq.f32 	%p139, %f667, %f911;
	mul.f32 	%f668, %f911, 0f00000000;
	setp.eq.s32 	%p157, %r367, 0;
	neg.f32 	%f716, %f714;
	add.s32 	%r368, %r365, 1;
	cvt.rzi.f32.f32 	%f721, %f915;
	setp.eq.s32 	%p177, %r391, 0;
	neg.f32 	%f768, %f766;
	add.s32 	%r392, %r389, 1;
	cvt.rzi.f32.f32 	%f773, %f919;
	selp.f32 	%f820, %f818, %f819, %p197;
	and.b32  	%r407, %r405, 2;
	or.b32  	%r182, %r181, %r113;
	selp.f32 	%f215, %f212, %f214, %p17;
	selp.f32 	%f249, %f246, %f248, %p23;
	selp.f32 	%f284, %f281, %f283, %p29;
	selp.f32 	%f318, %f315, %f317, %p35;
	selp.f32 	%f353, %f350, %f352, %p41;
	selp.f32 	%f387, %f384, %f386, %p47;
	selp.f32 	%f422, %f419, %f421, %p53;
	selp.f32 	%f456, %f453, %f455, %p59;
	selp.f32 	%f503, %f501, %f500, %p76;
	selp.f32 	%f505, %f502, %f504, %p77;
	and.b32  	%r275, %r274, 2;
	setp.eq.f32 	%p79, %f509, %f899;
	mul.f32 	%f510, %f899, 0f00000000;
	selp.f32 	%f555, %f553, %f552, %p96;
	selp.f32 	%f557, %f554, %f556, %p97;
	and.b32  	%r298, %r297, 2;
	setp.eq.f32 	%p99, %f561, %f903;
	mul.f32 	%f562, %f903, 0f00000000;
	setp.eq.s32 	%p118, %r320, 0;
	sub.f32 	%f613, %f213, %f609;
	selp.f32 	%f88, %f616, %f611, %p119;
	abs.f32 	%f617, %f907;
	setp.eq.s32 	%p138, %r352, 0;
	sub.f32 	%f665, %f213, %f661;
	selp.f32 	%f669, %f668, %f663, %p139;
	abs.f32 	%f670, %f911;
	selp.f32 	%f715, %f713, %f712, %p156;
	selp.f32 	%f717, %f714, %f716, %p157;
	and.b32  	%r369, %r368, 2;
	setp.eq.f32 	%p159, %f721, %f915;
	mul.f32 	%f722, %f915, 0f00000000;
	selp.f32 	%f767, %f765, %f764, %p176;
	selp.f32 	%f769, %f766, %f768, %p177;
	and.b32  	%r393, %r392, 2;
	setp.eq.f32 	%p179, %f773, %f919;
	mul.f32 	%f774, %f919, 0f00000000;
	setp.eq.s32 	%p198, %r407, 0;
	neg.f32 	%f822, %f820;
	add.s32 	%r408, %r405, 1;
	cvt.rzi.f32.f32 	%f827, %f927;
	shr.u32 	%r183, %r182, 1;
	mul.f32 	%f161, %f215, %f215;
	mul.f32 	%f4, %f249, %f249;
	mul.f32 	%f8, %f284, %f284;
	mul.f32 	%f13, %f318, %f318;
	mul.f32 	%f17, %f353, %f353;
	mul.f32 	%f22, %f387, %f387;
	mul.f32 	%f26, %f422, %f422;
	mul.f32 	%f31, %f456, %f456;
	setp.eq.s32 	%p78, %r275, 0;
	sub.f32 	%f507, %f213, %f503;
	selp.f32 	%f52, %f510, %f505, %p79;
	abs.f32 	%f511, %f899;
	setp.eq.s32 	%p98, %r298, 0;
	sub.f32 	%f559, %f213, %f555;
	selp.f32 	%f563, %f562, %f557, %p99;
	abs.f32 	%f564, %f903;
	selp.f32 	%f614, %f609, %f613, %p118;
	setp.gt.f32 	%p120, %f617, 0f4B800000;
	add.f32 	%f618, %f88, 0f3F800000;
	selp.f32 	%f666, %f661, %f665, %p138;
	setp.gt.f32 	%p140, %f670, 0f4B800000;
	add.f32 	%f671, %f669, 0f3F800000;
	setp.eq.s32 	%p158, %r369, 0;
	sub.f32 	%f719, %f213, %f715;
	selp.f32 	%f124, %f722, %f717, %p159;
	abs.f32 	%f723, %f915;
	setp.eq.s32 	%p178, %r393, 0;
	sub.f32 	%f771, %f213, %f767;
	selp.f32 	%f775, %f774, %f769, %p179;
	abs.f32 	%f776, %f919;
	selp.f32 	%f821, %f819, %f818, %p197;
	selp.f32 	%f823, %f820, %f822, %p198;
	and.b32  	%r409, %r408, 2;
	setp.eq.f32 	%p200, %f827, %f927;
	mul.f32 	%f828, %f927, 0f00000000;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd62, %r183, 4;
	mul.f32 	%f219, %f161, 0f3C8A83B8;
	mul.f32 	%f253, %f4, 0f3C8A83B8;
	mul.f32 	%f288, %f8, 0f3C8A83B8;
	mul.f32 	%f322, %f13, 0f3C8A83B8;
	mul.f32 	%f357, %f17, 0f3C8A83B8;
	mul.f32 	%f391, %f22, 0f3C8A83B8;
	mul.f32 	%f426, %f26, 0f3C8A83B8;
	mul.f32 	%f459, %f31, 0f3C8A83B8;
	selp.f32 	%f508, %f503, %f507, %p78;
	setp.gt.f32 	%p80, %f511, 0f4B800000;
	add.f32 	%f512, %f52, 0f3F800000;
	selp.f32 	%f560, %f555, %f559, %p98;
	setp.gt.f32 	%p100, %f564, 0f4B800000;
	add.f32 	%f565, %f563, 0f3F800000;
	selp.f32 	%f89, %f618, %f614, %p120;
	selp.f32 	%f672, %f671, %f666, %p140;
	selp.f32 	%f720, %f715, %f719, %p158;
	setp.gt.f32 	%p160, %f723, 0f4B800000;
	add.f32 	%f724, %f124, 0f3F800000;
	selp.f32 	%f772, %f767, %f771, %p178;
	setp.gt.f32 	%p180, %f776, 0f4B800000;
	add.f32 	%f777, %f775, 0f3F800000;
	and.b32  	%r78, %r35, 1;
	setp.eq.s32 	%p199, %r409, 0;
	sub.f32 	%f825, %f213, %f821;
	selp.f32 	%f829, %f828, %f823, %p200;
	abs.f32 	%f830, %f927;
	add.s64 	%rd63, %rd1, %rd62;
	mul.f32 	%f3, %f219, %f889;
	mul.f32 	%f254, %f253, %f890;
	mul.f32 	%f12, %f288, %f891;
	mul.f32 	%f323, %f322, %f892;
	mul.f32 	%f21, %f357, %f893;
	mul.f32 	%f392, %f391, %f894;
	mul.f32 	%f30, %f426, %f895;
	mul.f32 	%f460, %f459, %f896;
	selp.f32 	%f53, %f512, %f508, %p80;
	selp.f32 	%f566, %f565, %f560, %p100;
	mov.b32 	%r335, %f672;
	mov.b32 	%r334, %f89;
	mov.b32 	%r341, %f669;
	mov.b32 	%r340, %f88;
	selp.f32 	%f125, %f724, %f720, %p160;
	selp.f32 	%f778, %f777, %f772, %p180;
	setp.eq.s32 	%p194, %r78, %r122;
	selp.f32 	%f826, %f821, %f825, %p199;
	setp.gt.f32 	%p201, %f830, 0f4B800000;
	add.f32 	%f831, %f829, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r119, [%rd63];
	mov.b32 	%r205, %f254;
	mov.b32 	%r204, %f3;
	mov.b32 	%r223, %f323;
	mov.b32 	%r222, %f12;
	mov.b32 	%r241, %f392;
	mov.b32 	%r240, %f21;
	mov.b32 	%r259, %f460;
	mov.b32 	%r258, %f30;
	mov.b32 	%r287, %f566;
	mov.b32 	%r286, %f53;
	mov.b32 	%r290, %f563;
	mov.b32 	%r289, %f52;
	xor.b32  	%r338, %r341, -2147483648;
	xor.b32  	%r337, %r340, -2147483648;
	mov.b32 	%r382, %f778;
	mov.b32 	%r381, %f125;
	mov.b32 	%r385, %f775;
	mov.b32 	%r384, %f124;
	selp.f32 	%f832, %f831, %f826, %p201;
	selp.f32 	%f178, 0f3F800000, 0f00000000, %p194;
	// begin inline asm
	cvt.rn.f16x2.f32 %r203, %r205, %r204;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r221, %r223, %r222;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r239, %r241, %r240;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r259, %r258;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r287, %r286;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r288, %r290, %r289;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r333, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r339, %r341, %r340;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r342, %r335, %r334;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r383, %r385, %r384;
	// end inline asm
	mul.f32 	%f179, %f832, %f178;
	mul.f32 	%f180, %f829, %f178;
	add.f32 	%f855, %f923, %f923;
	mov.b32 	%r432, %f855;
	and.b32  	%r433, %r432, -2147483648;
	or.b32  	%r434, %r433, 1056964608;
	mov.b32 	%f856, %r434;
	add.f32 	%f857, %f855, %f856;
	cvt.rzi.f32.f32 	%f858, %f857;
	abs.f32 	%f859, %f855;
	setp.gt.f32 	%p215, %f859, 0f4B000000;
	selp.f32 	%f860, %f855, %f858, %p215;
	cvt.rzi.f32.f32 	%f861, %f855;
	setp.lt.f32 	%p216, %f859, 0f3F000000;
	selp.f32 	%f862, %f861, %f860, %p216;
	cvt.rzi.s32.f32 	%r435, %f862;
	fma.rn.f32 	%f863, %f862, 0fBF000000, %f923;
	mul.f32 	%f864, %f863, %f863;
	fma.rn.f32 	%f865, %f864, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f866, %f864, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f867, %f865, %f864, 0fC0A55DF6;
	fma.rn.f32 	%f868, %f866, %f864, 0f4081E0CF;
	fma.rn.f32 	%f869, %f864, %f863, 0f00000000;
	fma.rn.f32 	%f870, %f868, %f864, 0fC09DE9E6;
	fma.rn.f32 	%f871, %f867, %f869, 0f00000000;
	fma.rn.f32 	%f872, %f870, %f864, 0f3F800000;
	fma.rn.f32 	%f873, %f863, 0f40490FDB, %f871;
	and.b32  	%r436, %r435, 1;
	setp.eq.b32 	%p217, %r436, 1;
	selp.f32 	%f874, %f872, %f873, %p217;
	selp.f32 	%f875, %f873, %f872, %p217;
	and.b32  	%r437, %r435, 2;
	setp.eq.s32 	%p218, %r437, 0;
	neg.f32 	%f876, %f874;
	selp.f32 	%f877, %f874, %f876, %p218;
	add.s32 	%r438, %r435, 1;
	and.b32  	%r439, %r438, 2;
	setp.eq.s32 	%p219, %r439, 0;
	sub.f32 	%f879, %f213, %f875;
	selp.f32 	%f880, %f875, %f879, %p219;
	cvt.rzi.f32.f32 	%f881, %f923;
	setp.eq.f32 	%p220, %f881, %f923;
	mul.f32 	%f882, %f923, 0f00000000;
	selp.f32 	%f883, %f882, %f877, %p220;
	abs.f32 	%f884, %f923;
	setp.gt.f32 	%p221, %f884, 0f4B800000;
	add.f32 	%f885, %f883, 0f3F800000;
	selp.f32 	%f886, %f885, %f880, %p221;
	mul.f32 	%f887, %f886, %f178;
	mul.f32 	%f888, %f883, %f178;
	mov.b32 	%r422, %f887;
	mov.b32 	%r421, %f179;
	// begin inline asm
	cvt.rn.f16x2.f32 %r420, %r422, %r421;
	// end inline asm
	mov.b32 	%r428, %f888;
	xor.b32  	%r425, %r428, -2147483648;
	mov.b32 	%r427, %f180;
	xor.b32  	%r424, %r427, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r423, %r425, %r424;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r422, %r421;
	// end inline asm
	shl.b32 	%r441, %r5, 12;
	and.b32  	%r442, %r112, 12;
	and.b32  	%r443, %r112, 16;
	and.b32  	%r92, %r114, 16;
	and.b32  	%r444, %r112, 28;
	and.b32  	%r93, %r120, 8;
	shl.b32 	%r445, %r3, 2;
	and.b32  	%r94, %r445, 32;
	and.b32  	%r95, %r3, 7;
	shl.b32 	%r446, %r2, 10;
	and.b32  	%r447, %r446, 3072;
	or.b32  	%r448, %r444, %r447;
	or.b32  	%r96, %r448, %r441;
	and.b32  	%r97, %r1, 8;
	shl.b32 	%r449, %r1, 4;
	or.b32  	%r450, %r449, %r97;
	shr.u32 	%r451, %r450, 2;
	and.b32  	%r452, %r451, 14;
	or.b32  	%r453, %r452, %r443;
	shr.u32 	%r454, %r3, 1;
	or.b32  	%r98, %r124, %r442;
	and.b32  	%r99, %r120, 2;
	and.b32  	%r455, %r4, 32;
	or.b32  	%r456, %r92, %r454;
	or.b32  	%r100, %r456, %r455;
	or.b32  	%r101, %r100, 8;
	or.b32  	%r457, %r113, %r117;
	or.b32  	%r458, %r457, %r115;
	or.b32  	%r459, %r458, %r116;
	or.b32  	%r460, %r459, %r118;
	bfe.u32 	%r461, %r460, 1, 4;
	mul.lo.s32 	%r462, %r461, 65;
	add.s32 	%r463, %r462, %r100;
	add.s32 	%r464, %r462, %r101;
	shl.b32 	%r465, %r3, 1;
	and.b32  	%r466, %r465, 14;
	shl.b32 	%r467, %r7, 17;
	add.s32 	%r468, %r467, -393216;
	and.b32  	%r469, %r445, 28;
	or.b32  	%r470, %r469, %r117;
	or.b32  	%r471, %r470, %r35;
	shl.b32 	%r472, %r471, 5;
	or.b32  	%r102, %r472, %r444;
	cvt.s64.s32 	%rd5, %r468;
	shr.u32 	%r473, %r3, 3;
	or.b32  	%r474, %r473, 2;
	or.b32  	%r475, %r473, 4;
	or.b32  	%r476, %r473, 6;
	and.b32  	%r477, %r3, 1;
	neg.s32 	%r478, %r477;
	and.b32  	%r479, %r478, 520;
	bfe.s32 	%r480, %r3, 1, 1;
	and.b32  	%r481, %r480, 260;
	bfe.u32 	%r482, %r120, 3, 1;
	bfe.s32 	%r483, %r3, 2, 1;
	and.b32  	%r484, %r483, 130;
	mul.lo.s32 	%r485, %r473, 1057;
	add.s32 	%r486, %r453, %r479;
	add.s32 	%r487, %r486, %r481;
	mad.lo.s32 	%r488, %r482, 65, %r487;
	add.s32 	%r489, %r488, %r484;
	add.s32 	%r490, %r489, %r485;
	mul.wide.u32 	%rd64, %r490, 4;
	mov.u64 	%rd65, shmem;
	add.s64 	%rd6, %rd65, %rd64;
	add.s32 	%r491, %r489, 32;
	add.s32 	%r492, %r491, %r485;
	mul.wide.u32 	%rd66, %r492, 4;
	add.s64 	%rd7, %rd65, %rd66;
	add.s32 	%r493, %r489, 1;
	add.s32 	%r494, %r493, %r485;
	mul.wide.u32 	%rd67, %r494, 4;
	add.s64 	%rd8, %rd65, %rd67;
	add.s32 	%r495, %r489, 33;
	add.s32 	%r496, %r495, %r485;
	mul.wide.u32 	%rd68, %r496, 4;
	add.s64 	%rd9, %rd65, %rd68;
	mul.lo.s32 	%r497, %r474, 1057;
	add.s32 	%r498, %r489, %r497;
	mul.wide.u32 	%rd69, %r498, 4;
	add.s64 	%rd10, %rd65, %rd69;
	add.s32 	%r499, %r491, %r497;
	mul.wide.u32 	%rd70, %r499, 4;
	add.s64 	%rd11, %rd65, %rd70;
	add.s32 	%r500, %r493, %r497;
	mul.wide.u32 	%rd71, %r500, 4;
	add.s64 	%rd12, %rd65, %rd71;
	add.s32 	%r501, %r495, %r497;
	mul.wide.u32 	%rd72, %r501, 4;
	add.s64 	%rd13, %rd65, %rd72;
	mul.lo.s32 	%r502, %r475, 1057;
	add.s32 	%r503, %r489, %r502;
	mul.wide.u32 	%rd73, %r503, 4;
	add.s64 	%rd14, %rd65, %rd73;
	add.s32 	%r504, %r491, %r502;
	mul.wide.u32 	%rd74, %r504, 4;
	add.s64 	%rd15, %rd65, %rd74;
	add.s32 	%r505, %r493, %r502;
	mul.wide.u32 	%rd75, %r505, 4;
	add.s64 	%rd16, %rd65, %rd75;
	add.s32 	%r506, %r495, %r502;
	mul.wide.u32 	%rd76, %r506, 4;
	add.s64 	%rd17, %rd65, %rd76;
	mul.lo.s32 	%r507, %r476, 1057;
	add.s32 	%r508, %r489, %r507;
	mul.wide.u32 	%rd77, %r508, 4;
	add.s64 	%rd18, %rd65, %rd77;
	add.s32 	%r509, %r491, %r507;
	mul.wide.u32 	%rd78, %r509, 4;
	add.s64 	%rd19, %rd65, %rd78;
	add.s32 	%r510, %r493, %r507;
	mul.wide.u32 	%rd79, %r510, 4;
	add.s64 	%rd20, %rd65, %rd79;
	add.s32 	%r511, %r495, %r507;
	mul.wide.u32 	%rd80, %r511, 4;
	add.s64 	%rd21, %rd65, %rd80;
	or.b32  	%r512, %r466, %r124;
	mul.lo.s32 	%r513, %r512, 65;
	add.s32 	%r514, %r453, %r513;
	add.s32 	%r515, %r514, %r485;
	mul.wide.u32 	%rd81, %r515, 4;
	add.s64 	%rd22, %rd65, %rd81;
	cvt.u64.u32 	%rd82, %r485;
	cvt.u64.u32 	%rd83, %r453;
	cvt.u64.u32 	%rd84, %r513;
	add.s64 	%rd85, %rd84, %rd83;
	add.s64 	%rd86, %rd85, %rd82;
	shl.b64 	%rd87, %rd86, 2;
	add.s64 	%rd23, %rd65, %rd87;
	add.s32 	%r516, %r514, %r497;
	mul.wide.u32 	%rd88, %r516, 4;
	add.s64 	%rd24, %rd65, %rd88;
	cvt.u64.u32 	%rd89, %r497;
	add.s64 	%rd90, %rd85, %rd89;
	shl.b64 	%rd91, %rd90, 2;
	add.s64 	%rd25, %rd65, %rd91;
	add.s32 	%r517, %r514, %r502;
	mul.wide.u32 	%rd92, %r517, 4;
	add.s64 	%rd26, %rd65, %rd92;
	cvt.u64.u32 	%rd93, %r502;
	add.s64 	%rd94, %rd85, %rd93;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd27, %rd65, %rd95;
	add.s32 	%r518, %r514, %r507;
	mul.wide.u32 	%rd96, %r518, 4;
	add.s64 	%rd28, %rd65, %rd96;
	cvt.u64.u32 	%rd97, %r507;
	add.s64 	%rd98, %rd85, %rd97;
	shl.b64 	%rd99, %rd98, 2;
	add.s64 	%rd29, %rd65, %rd99;
	mul.wide.u32 	%rd100, %r464, 4;
	add.s64 	%rd30, %rd65, %rd100;
	mul.wide.u32 	%rd101, %r463, 4;
	add.s64 	%rd31, %rd65, %rd101;
	setp.eq.s32 	%p223, %r97, 0;
	mov.u16 	%rs288, 25600;
	mov.u16 	%rs236, 21504;
	mov.u16 	%rs296, 18432;
	mov.u16 	%rs274, -14592;
	setp.gt.u32 	%p237, %r3, 7;
	mov.u32 	%r2593, %r2577;
	mov.u32 	%r2594, %r2577;
	mov.u32 	%r2595, %r2577;
	mov.u32 	%r2596, %r2577;
	mov.u32 	%r2603, %r2577;
	mov.u32 	%r2604, %r2577;
	mov.u32 	%r109, %r2577;
	bra.uni 	$L__BB0_128;
$L__BB0_142:                            // %pass9912
                                        //   in Loop: Header=BB0_128 Depth=1
	selp.b32 	%r2565, %r158, %r2515, %p223;
	selp.b32 	%r2566, %r2511, %r158, %p223;
	selp.b32 	%r2567, %r157, %r2507, %p223;
	selp.b32 	%r2568, %r2503, %r157, %p223;
	or.b32  	%r2610, %r2578, %r102;
	or.b32  	%r2570, %r2610, 262144;
	cvt.s64.s32 	%rd115, %r2570;
	add.s64 	%rd116, %rd115, %rd5;
	shr.u64 	%rd117, %rd116, 35;
	add.s64 	%rd118, %rd116, %rd117;
	shr.s64 	%rd119, %rd118, 29;
	setp.lt.s64 	%p240, %rd116, 0;
	and.b64  	%rd120, %rd118, -536870912;
	setp.ne.s64 	%p241, %rd120, %rd116;
	and.pred  	%p242, %p240, %p241;
	selp.u64 	%rd121, 1, 0, %p242;
	sub.s64 	%rd122, %rd121, %rd119;
	shl.b64 	%rd123, %rd122, 29;
	add.s64 	%rd124, %rd123, %rd116;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r2568, %r2566, %r2567, %r2565};
$L__BB0_143:                            // %pass10014
                                        //   in Loop: Header=BB0_128 Depth=1
	or.b32  	%r2572, %r2610, 524288;
	cvt.s64.s32 	%rd127, %r2572;
	add.s64 	%rd128, %rd127, %rd5;
	shr.u64 	%rd129, %rd128, 35;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 29;
	setp.lt.s64 	%p243, %rd128, 0;
	and.b64  	%rd132, %rd130, -536870912;
	setp.ne.s64 	%p244, %rd132, %rd128;
	and.pred  	%p245, %p243, %p244;
	selp.u64 	%rd133, 1, 0, %p245;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 29;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r159, %r161, %r160, %r162};
	or.b32  	%r2573, %r2610, 786432;
	cvt.s64.s32 	%rd139, %r2573;
	add.s64 	%rd140, %rd139, %rd5;
	shr.u64 	%rd141, %rd140, 35;
	add.s64 	%rd142, %rd140, %rd141;
	shr.s64 	%rd143, %rd142, 29;
	setp.lt.s64 	%p246, %rd140, 0;
	and.b64  	%rd144, %rd142, -536870912;
	setp.ne.s64 	%p247, %rd144, %rd140;
	and.pred  	%p248, %p246, %p247;
	selp.u64 	%rd145, 1, 0, %p248;
	sub.s64 	%rd146, %rd145, %rd143;
	shl.b64 	%rd147, %rd146, 29;
	add.s64 	%rd148, %rd147, %rd140;
	shl.b64 	%rd149, %rd148, 2;
	add.s64 	%rd150, %rd3, %rd149;
	st.global.v4.u32 	[%rd150], {%r163, %r165, %r164, %r166};
	setp.ne.s32 	%p249, %r109, 130816;
	add.s32 	%r109, %r109, 256;
	add.s32 	%r2574, %r109, %r5;
	setp.gt.s32 	%p250, %r6, %r2574;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_144;
$L__BB0_128:                            // %L1595
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_129 Depth 2
	or.b32  	%r584, %r109, %r92;
	or.b32  	%r585, %r584, %r93;
	or.b32  	%r586, %r585, %r94;
	or.b32  	%r587, %r586, %r95;
	shl.b32 	%r588, %r587, 12;
	add.s32 	%r589, %r96, %r588;
	shr.s32 	%r590, %r589, 31;
	shr.u32 	%r591, %r590, 3;
	add.s32 	%r592, %r589, %r591;
	shr.s32 	%r593, %r592, 29;
	setp.lt.s32 	%p224, %r589, 0;
	and.b32  	%r594, %r592, -536870912;
	setp.ne.s32 	%p225, %r594, %r589;
	and.pred  	%p226, %p224, %p225;
	selp.u32 	%r595, 1, 0, %p226;
	sub.s32 	%r596, %r595, %r593;
	shl.b32 	%r597, %r596, 29;
	add.s32 	%r598, %r597, %r589;
	mul.wide.s32 	%rd102, %r598, 4;
	add.s64 	%rd103, %rd2, %rd102;
	ld.global.v4.u32 	{%r599, %r600, %r601, %r602}, [%rd103];
	or.b32  	%r603, %r588, 262144;
	add.s32 	%r604, %r96, %r603;
	shr.s32 	%r605, %r604, 31;
	shr.u32 	%r606, %r605, 3;
	add.s32 	%r607, %r604, %r606;
	shr.s32 	%r608, %r607, 29;
	setp.lt.s32 	%p227, %r604, 0;
	and.b32  	%r609, %r607, -536870912;
	setp.ne.s32 	%p228, %r609, %r604;
	and.pred  	%p229, %p227, %p228;
	selp.u32 	%r610, 1, 0, %p229;
	sub.s32 	%r611, %r610, %r608;
	shl.b32 	%r612, %r611, 29;
	add.s32 	%r613, %r612, %r604;
	mul.wide.s32 	%rd104, %r613, 4;
	add.s64 	%rd105, %rd2, %rd104;
	ld.global.v4.u32 	{%r614, %r615, %r616, %r617}, [%rd105];
	or.b32  	%r618, %r588, 524288;
	add.s32 	%r619, %r96, %r618;
	shr.s32 	%r620, %r619, 31;
	shr.u32 	%r621, %r620, 3;
	add.s32 	%r622, %r619, %r621;
	shr.s32 	%r623, %r622, 29;
	setp.lt.s32 	%p230, %r619, 0;
	and.b32  	%r624, %r622, -536870912;
	setp.ne.s32 	%p231, %r624, %r619;
	and.pred  	%p232, %p230, %p231;
	selp.u32 	%r625, 1, 0, %p232;
	sub.s32 	%r626, %r625, %r623;
	shl.b32 	%r627, %r626, 29;
	add.s32 	%r628, %r627, %r619;
	mul.wide.s32 	%rd106, %r628, 4;
	add.s64 	%rd107, %rd2, %rd106;
	ld.global.v4.u32 	{%r629, %r630, %r631, %r632}, [%rd107];
	or.b32  	%r633, %r588, 786432;
	add.s32 	%r634, %r96, %r633;
	shr.s32 	%r635, %r634, 31;
	shr.u32 	%r636, %r635, 3;
	add.s32 	%r637, %r634, %r636;
	shr.s32 	%r638, %r637, 29;
	setp.lt.s32 	%p233, %r634, 0;
	and.b32  	%r639, %r637, -536870912;
	setp.ne.s32 	%p234, %r639, %r634;
	and.pred  	%p235, %p233, %p234;
	selp.u32 	%r640, 1, 0, %p235;
	sub.s32 	%r641, %r640, %r638;
	shl.b32 	%r642, %r641, 29;
	add.s32 	%r643, %r642, %r634;
	mul.wide.s32 	%rd108, %r643, 4;
	add.s64 	%rd109, %rd2, %rd108;
	ld.global.v4.u32 	{%r644, %r645, %r646, %r647}, [%rd109];
	selp.b32 	%r648, %r601, %r599, %p223;
	shfl.sync.bfly.b32	%r649, %r648, 8, 31, -1;
	selp.b32 	%r520, %r599, %r649, %p223;
	selp.b32 	%r521, %r649, %r601, %p223;
	selp.b32 	%r650, %r602, %r600, %p223;
	shfl.sync.bfly.b32	%r651, %r650, 8, 31, -1;
	selp.b32 	%r528, %r600, %r651, %p223;
	selp.b32 	%r529, %r651, %r602, %p223;
	selp.b32 	%r652, %r616, %r614, %p223;
	shfl.sync.bfly.b32	%r653, %r652, 8, 31, -1;
	selp.b32 	%r536, %r614, %r653, %p223;
	selp.b32 	%r537, %r653, %r616, %p223;
	selp.b32 	%r654, %r617, %r615, %p223;
	shfl.sync.bfly.b32	%r655, %r654, 8, 31, -1;
	selp.b32 	%r544, %r615, %r655, %p223;
	selp.b32 	%r545, %r655, %r617, %p223;
	selp.b32 	%r656, %r631, %r629, %p223;
	shfl.sync.bfly.b32	%r657, %r656, 8, 31, -1;
	selp.b32 	%r552, %r629, %r657, %p223;
	selp.b32 	%r553, %r657, %r631, %p223;
	selp.b32 	%r658, %r632, %r630, %p223;
	shfl.sync.bfly.b32	%r659, %r658, 8, 31, -1;
	selp.b32 	%r560, %r630, %r659, %p223;
	selp.b32 	%r561, %r659, %r632, %p223;
	selp.b32 	%r660, %r646, %r644, %p223;
	shfl.sync.bfly.b32	%r661, %r660, 8, 31, -1;
	selp.b32 	%r568, %r644, %r661, %p223;
	selp.b32 	%r569, %r661, %r646, %p223;
	selp.b32 	%r662, %r647, %r645, %p223;
	shfl.sync.bfly.b32	%r663, %r662, 8, 31, -1;
	selp.b32 	%r576, %r645, %r663, %p223;
	selp.b32 	%r577, %r663, %r647, %p223;
	mov.u32 	%r578, 21520;
	// begin inline asm
	prmt.b32 %r519, %r520, %r521, %r578;
	// end inline asm
	mov.u32 	%r582, 30258;
	// begin inline asm
	prmt.b32 %r523, %r520, %r521, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r528, %r529, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r528, %r529, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r536, %r537, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r536, %r537, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r544, %r545, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r544, %r545, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r552, %r553, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r555, %r552, %r553, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r560, %r561, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r563, %r560, %r561, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r567, %r568, %r569, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r571, %r568, %r569, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r575, %r576, %r577, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r579, %r576, %r577, %r582;
	// end inline asm
	st.shared.u32 	[%rd6], %r519;
	st.shared.u32 	[%rd7], %r523;
	st.shared.u32 	[%rd8], %r527;
	st.shared.u32 	[%rd9], %r531;
	st.shared.u32 	[%rd10], %r535;
	st.shared.u32 	[%rd11], %r539;
	st.shared.u32 	[%rd12], %r543;
	st.shared.u32 	[%rd13], %r547;
	st.shared.u32 	[%rd14], %r551;
	st.shared.u32 	[%rd15], %r555;
	st.shared.u32 	[%rd16], %r559;
	st.shared.u32 	[%rd17], %r563;
	st.shared.u32 	[%rd18], %r567;
	st.shared.u32 	[%rd19], %r571;
	st.shared.u32 	[%rd20], %r575;
	st.shared.u32 	[%rd21], %r579;
	bar.sync 	0;
	or.b32  	%r664, %r109, %r98;
	or.b32  	%r110, %r664, %r99;
	shr.u32 	%r2602, %r110, 5;
	mov.u64 	%rd153, %rd31;
	mov.u64 	%rd154, %rd30;
	mov.u32 	%r2605, %r2577;
	mov.u32 	%r2606, %r2596;
	mov.u32 	%r2607, %r2595;
	mov.u32 	%r2608, %r2594;
	mov.u32 	%r2609, %r2593;
$L__BB0_129:                            // %pass5727
                                        //   Parent Loop BB0_128 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2594, %r2604;
	mov.u32 	%r2593, %r2603;
	add.s32 	%r2461, %r110, %r2605;
	and.b32  	%r2462, %r2461, 1;
	neg.s32 	%r2463, %r2462;
	and.b32  	%r2464, %r2463, 520;
	bfe.s32 	%r2465, %r2461, 1, 1;
	and.b32  	%r2466, %r2465, 260;
	bfe.s32 	%r2467, %r2461, 3, 1;
	and.b32  	%r2468, %r2467, 65;
	bfe.s32 	%r2469, %r2461, 2, 1;
	and.b32  	%r2470, %r2469, 130;
	and.b32  	%r2471, %r2602, 7;
	mul.lo.s32 	%r2472, %r2471, 1057;
	or.b32  	%r2473, %r100, %r2464;
	add.s32 	%r2474, %r2473, %r2466;
	add.s32 	%r2475, %r2474, %r2468;
	add.s32 	%r2476, %r2475, %r2470;
	add.s32 	%r2477, %r2476, %r2472;
	mul.wide.u32 	%rd110, %r2477, 4;
	add.s64 	%rd112, %rd65, %rd110;
	ld.shared.u32 	%r2595, [%rd112];
	add.s32 	%r2478, %r101, %r2464;
	add.s32 	%r2479, %r2478, %r2466;
	add.s32 	%r2480, %r2479, %r2468;
	add.s32 	%r2481, %r2480, %r2470;
	add.s32 	%r2482, %r2481, %r2472;
	mul.wide.u32 	%rd113, %r2482, 4;
	add.s64 	%rd114, %rd65, %rd113;
	ld.shared.u32 	%r2596, [%rd114];
	// begin inline asm
	mov.b32 %r670, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r669, %r2595, -2004318072;
	mov.u32 	%r668, 983055;
	// begin inline asm
	lop3.b32 %r667, %r668, %r669, %r670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r671, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r672, %r670, %r671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r675, %r667, %r672;
	// end inline asm
	mov.u32 	%r679, 15728880;
	// begin inline asm
	lop3.b32 %r678, %r679, %r669, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r682, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r683, %r681, %r682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r686, %r678, %r683;
	// end inline asm
	shr.u32 	%r691, %r669, 8;
	// begin inline asm
	lop3.b32 %r689, %r668, %r691, %r670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r693, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r694, %r670, %r693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r697, %r689, %r694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r700, %r679, %r691, %r681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r681, %r704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r708, %r700, %r705;
	// end inline asm
	// begin inline asm
	mov.b32 %r716, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r727, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r715, %r2596, -2004318072;
	// begin inline asm
	lop3.b32 %r713, %r668, %r715, %r716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r717, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r718, %r716, %r717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r721, %r713, %r718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r724, %r679, %r715, %r727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r728, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r729, %r727, %r728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r732, %r724, %r729;
	// end inline asm
	shr.u32 	%r737, %r715, 8;
	// begin inline asm
	lop3.b32 %r735, %r668, %r737, %r716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r716, %r739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r743, %r735, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r746, %r679, %r737, %r727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r727, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r777, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r779, %r777, %r721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r782, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r784, %r782, %r732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r787, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r789, %r787, %r743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r792, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r794, %r792, %r754;
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r801, %r2609, -2004318072;
	// begin inline asm
	lop3.b32 %r799, %r668, %r801, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r804, %r802, %r803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r807, %r799, %r804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r810, %r679, %r801, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r813, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	shr.u32 	%r823, %r801, 8;
	// begin inline asm
	lop3.b32 %r821, %r668, %r823, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r802, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r832, %r679, %r823, %r813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r836, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r837, %r813, %r836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r840, %r832, %r837;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r847, %r2608, -2004318072;
	// begin inline asm
	lop3.b32 %r845, %r668, %r847, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r856, %r679, %r847, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	shr.u32 	%r869, %r847, 8;
	// begin inline asm
	lop3.b32 %r867, %r668, %r869, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r878, %r679, %r869, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r889, %r203, %r807, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r203, %r818, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r897, %r203, %r829, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r901, %r203, %r840, %r774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r905, %r203, %r853, %r779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r909, %r203, %r864, %r784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r913, %r203, %r875, %r789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r917, %r203, %r886, %r794;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r925, %r2607, -2004318072;
	// begin inline asm
	lop3.b32 %r923, %r668, %r925, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r926, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r934, %r679, %r925, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r937, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	shr.u32 	%r947, %r925, 8;
	// begin inline asm
	lop3.b32 %r945, %r668, %r947, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r926, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	// begin inline asm
	lop3.b32 %r956, %r679, %r947, %r937, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r961, %r937, %r960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r964, %r956, %r961;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r971, %r2606, -2004318072;
	// begin inline asm
	lop3.b32 %r969, %r668, %r971, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r972, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r980, %r679, %r971, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r983, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	shr.u32 	%r993, %r971, 8;
	// begin inline asm
	lop3.b32 %r991, %r668, %r993, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r972, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1002, %r679, %r993, %r983, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r983, %r1006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1010, %r1002, %r1007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1013, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1015, %r1013, %r931, %r889;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1019, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1021, %r1019, %r942, %r893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1025, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1027, %r1025, %r953, %r897;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1031, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1033, %r1031, %r964, %r901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1037, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1039, %r1037, %r977, %r905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1043, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1045, %r1043, %r988, %r909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1049, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1051, %r1049, %r999, %r913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1055, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1057, %r1055, %r1010, %r917;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1065, %r2593, -2004318072;
	// begin inline asm
	lop3.b32 %r1063, %r668, %r1065, %r1066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1068, %r1066, %r1067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1071, %r1063, %r1068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1074, %r679, %r1065, %r1077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1077, %r1078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1074, %r1079;
	// end inline asm
	shr.u32 	%r1087, %r1065, 8;
	// begin inline asm
	lop3.b32 %r1085, %r668, %r1087, %r1066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1066, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1096, %r679, %r1087, %r1077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1077, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1111, %r2594, -2004318072;
	// begin inline asm
	lop3.b32 %r1109, %r668, %r1111, %r1112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1114, %r1112, %r1113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1117, %r1109, %r1114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1120, %r679, %r1111, %r1123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1125, %r1123, %r1124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1128, %r1120, %r1125;
	// end inline asm
	shr.u32 	%r1133, %r1111, 8;
	// begin inline asm
	lop3.b32 %r1131, %r668, %r1133, %r1112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1112, %r1135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1139, %r1131, %r1136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1142, %r679, %r1133, %r1123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1123, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1150, %r1142, %r1147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1192, %r239, %r1071, %r1015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1189, %r239, %r1082, %r1021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1201, %r239, %r1093, %r1027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1198, %r239, %r1104, %r1033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1210, %r239, %r1117, %r1039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1207, %r239, %r1128, %r1045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1219, %r239, %r1139, %r1051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1216, %r239, %r1150, %r1057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1185, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1187, %r1185, %r1189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1190, %r285, %r1192, %r1187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1194, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r1194, %r1198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1199, %r285, %r1201, %r1196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1203, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1205, %r1203, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1208, %r285, %r1210, %r1205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r1212, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1217, %r285, %r1219, %r1214;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1221, %r288, %r1192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1224, %r285, %r1189, %r1221;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1228, %r288, %r1201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1231, %r285, %r1198, %r1228;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1235, %r288, %r1210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1238, %r285, %r1207, %r1235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r288, %r1219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1245, %r285, %r1216, %r1242;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1296, %r1293}, {%r333, %r339, %r336, %r342}, {%r1190, %r1224}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1305, %r1302}, {%r333, %r339, %r336, %r342}, {%r1199, %r1231}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1314, %r1311}, {%r333, %r339, %r336, %r342}, {%r1208, %r1238}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1323, %r1320}, {%r333, %r339, %r336, %r342}, {%r1217, %r1245}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1294, %r380, %r1296, %r1291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1298, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1300, %r1298, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1303, %r380, %r1305, %r1300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1312, %r380, %r1314, %r1309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r380, %r1323, %r1318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1325, %r383, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r380, %r1293, %r1325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r383, %r1305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1335, %r380, %r1302, %r1332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r383, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1342, %r380, %r1311, %r1339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1346, %r383, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1349, %r380, %r1320, %r1346;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1353, %r1354}, {%r420, %r426, %r423, %r429}, {%r1294, %r1328}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1363, %r1364}, {%r420, %r426, %r423, %r429}, {%r1303, %r1335}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1373, %r1374}, {%r420, %r426, %r423, %r429}, {%r1312, %r1342}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1383, %r1384}, {%r420, %r426, %r423, %r429}, {%r1321, %r1349}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1393, %r119, %r1353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1396, %r119, %r1354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1399, %r119, %r1363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1402, %r119, %r1364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1405, %r119, %r1373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1408, %r119, %r1374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1411, %r119, %r1383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1414, %r119, %r1384;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs274, %rs274};
	// end inline asm
	mov.u16 	%rs99, 18176;
	// begin inline asm
	mov.b32 %r1418, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1419, %r1393, %r1417;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1422, %r1419, %r1418;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1427, %r1396, %r1425;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1430, %r1427, %r1426;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1435, %r1399, %r1433;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1438, %r1435, %r1434;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1443, %r1402, %r1441;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1446, %r1443, %r1442;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1451, %r1405, %r1449;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1454, %r1451, %r1450;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1459, %r1408, %r1457;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1462, %r1459, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1467, %r1411, %r1465;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1470, %r1467, %r1466;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1475, %r1414, %r1473;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1478, %r1475, %r1474;
	// end inline asm
	// begin inline asm
	mov.b32 %r1484, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1484, %r1482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1486, %r1422, %r1483;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1484, %r1489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1493, %r1430, %r1490;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1484, %r1496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1500, %r1438, %r1497;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1504, %r1484, %r1503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1507, %r1446, %r1504;
	// end inline asm
	mov.u32 	%r1513, 25152;
	// begin inline asm
	prmt.b32 %r1510, %r1486, %r1500, %r1513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1514, %r1493, %r1507, %r1513;
	// end inline asm
	shl.b32 	%r1521, %r1514, 4;
	mov.u32 	%r1519, 252645135;
	// begin inline asm
	lop3.b32 %r1518, %r1519, %r1510, %r1521, 202;
	// end inline asm
	xor.b32  	%r2483, %r1518, -2004318072;
	// begin inline asm
	mov.b32 %r1525, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1525, %r1523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1454, %r1524;
	// end inline asm
	// begin inline asm
	mov.b32 %r1530, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1531, %r1525, %r1530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1534, %r1462, %r1531;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1525, %r1537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1541, %r1470, %r1538;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1525, %r1544;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1478, %r1545;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1551, %r1527, %r1541, %r1513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1555, %r1534, %r1548, %r1513;
	// end inline asm
	shl.b32 	%r1562, %r1555, 4;
	// begin inline asm
	lop3.b32 %r1559, %r1519, %r1551, %r1562, 202;
	// end inline asm
	xor.b32  	%r2484, %r1559, -2004318072;
	st.shared.u32 	[%rd153], %r2483;
	st.shared.u32 	[%rd154], %r2484;
	ld.shared.u32 	%r2603, [%rd112];
	ld.shared.u32 	%r2604, [%rd114];
	// begin inline asm
	mov.b32 %r1568, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1579, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1567, %r2603, -2004318072;
	// begin inline asm
	lop3.b32 %r1565, %r668, %r1567, %r1568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1570, %r1568, %r1569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1573, %r1565, %r1570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1576, %r679, %r1567, %r1579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1581, %r1579, %r1580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1584, %r1576, %r1581;
	// end inline asm
	shr.u32 	%r1589, %r1567, 8;
	// begin inline asm
	lop3.b32 %r1587, %r668, %r1589, %r1568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1591, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1592, %r1568, %r1591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1595, %r1587, %r1592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1598, %r679, %r1589, %r1579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1602, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1603, %r1579, %r1602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1606, %r1598, %r1603;
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs236, %rs236};
	// end inline asm
	xor.b32  	%r1613, %r2604, -2004318072;
	// begin inline asm
	lop3.b32 %r1611, %r668, %r1613, %r1614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1614, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1622, %r679, %r1613, %r1625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1627, %r1625, %r1626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1630, %r1622, %r1627;
	// end inline asm
	shr.u32 	%r1635, %r1613, 8;
	// begin inline asm
	lop3.b32 %r1633, %r668, %r1635, %r1614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1637, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1638, %r1614, %r1637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1641, %r1633, %r1638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1644, %r679, %r1635, %r1625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1648, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1649, %r1625, %r1648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1652, %r1644, %r1649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1655, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1657, %r1655, %r1573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1660, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1662, %r1660, %r1584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1665, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1667, %r1665, %r1595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1670, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1672, %r1670, %r1606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1675, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1677, %r1675, %r1619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1680, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1682, %r1680, %r1630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1685, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1687, %r1685, %r1641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1690, %r257;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1692, %r1690, %r1652;
	// end inline asm
	// begin inline asm
	mov.b32 %r1700, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1711, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1697, %r668, %r925, %r1700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1701, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1702, %r1700, %r1701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1705, %r1697, %r1702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1708, %r679, %r925, %r1711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1712, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1713, %r1711, %r1712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1716, %r1708, %r1713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1719, %r668, %r947, %r1700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1723, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1724, %r1700, %r1723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1727, %r1719, %r1724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1730, %r679, %r947, %r1711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1734, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1735, %r1711, %r1734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1738, %r1730, %r1735;
	// end inline asm
	// begin inline asm
	mov.b32 %r1746, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1757, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1743, %r668, %r971, %r1746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1747, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1748, %r1746, %r1747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1751, %r1743, %r1748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1754, %r679, %r971, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1758, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1759, %r1757, %r1758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1762, %r1754, %r1759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1765, %r668, %r993, %r1746, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1769, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1770, %r1746, %r1769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1773, %r1765, %r1770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1776, %r679, %r993, %r1757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1780, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1781, %r1757, %r1780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1784, %r1776, %r1781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r203, %r1705, %r1657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r203, %r1716, %r1662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r203, %r1727, %r1667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r203, %r1738, %r1672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r203, %r1751, %r1677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r203, %r1762, %r1682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r203, %r1773, %r1687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r203, %r1784, %r1692;
	// end inline asm
	// begin inline asm
	mov.b32 %r1824, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1835, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1821, %r668, %r1065, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1825, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1826, %r1824, %r1825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1829, %r1821, %r1826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1832, %r679, %r1065, %r1835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1836, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1837, %r1835, %r1836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1840, %r1832, %r1837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1843, %r668, %r1087, %r1824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1847, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1848, %r1824, %r1847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1851, %r1843, %r1848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1854, %r679, %r1087, %r1835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1858, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1859, %r1835, %r1858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1862, %r1854, %r1859;
	// end inline asm
	// begin inline asm
	mov.b32 %r1870, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1881, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1867, %r668, %r1111, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1871, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1872, %r1870, %r1871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1875, %r1867, %r1872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1878, %r679, %r1111, %r1881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1882, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1883, %r1881, %r1882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1886, %r1878, %r1883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1889, %r668, %r1133, %r1870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1894, %r1870, %r1893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1897, %r1889, %r1894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1900, %r679, %r1133, %r1881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1905, %r1881, %r1904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1908, %r1900, %r1905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1911, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1913, %r1911, %r1829, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1917, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1919, %r1917, %r1840, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1923, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1925, %r1923, %r1851, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1929, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1931, %r1929, %r1862, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1935, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1937, %r1935, %r1875, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1941, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1943, %r1941, %r1886, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1947, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1949, %r1947, %r1897, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1953, %r221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1955, %r1953, %r1908, %r1815;
	// end inline asm
	// begin inline asm
	mov.b32 %r1964, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1961, %r668, %r669, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1964, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1972, %r679, %r669, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1975, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1983, %r668, %r691, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1964, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1994, %r679, %r691, %r1975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1998, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1999, %r1975, %r1998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2002, %r1994, %r1999;
	// end inline asm
	// begin inline asm
	mov.b32 %r2010, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs236, %rs236};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2007, %r668, %r715, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r2010, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2018, %r679, %r715, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r2021, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2029, %r668, %r737, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2010, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2040, %r679, %r737, %r2021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2044, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2045, %r2021, %r2044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2048, %r2040, %r2045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2090, %r239, %r1969, %r1913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2087, %r239, %r1980, %r1919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2099, %r239, %r1991, %r1925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2096, %r239, %r2002, %r1931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2108, %r239, %r2015, %r1937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2105, %r239, %r2026, %r1943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2117, %r239, %r2037, %r1949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2114, %r239, %r2048, %r1955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2083, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2085, %r2083, %r2087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2088, %r285, %r2090, %r2085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2092, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2094, %r2092, %r2096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2097, %r285, %r2099, %r2094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2101, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2103, %r2101, %r2105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2106, %r285, %r2108, %r2103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2110, %r288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2112, %r2110, %r2114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2115, %r285, %r2117, %r2112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2119, %r288, %r2090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2122, %r285, %r2087, %r2119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2126, %r288, %r2099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2129, %r285, %r2096, %r2126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2133, %r288, %r2108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2136, %r285, %r2105, %r2133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2140, %r288, %r2117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2143, %r285, %r2114, %r2140;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2194, %r2191}, {%r333, %r339, %r336, %r342}, {%r2088, %r2122}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2203, %r2200}, {%r333, %r339, %r336, %r342}, {%r2097, %r2129}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2212, %r2209}, {%r333, %r339, %r336, %r342}, {%r2106, %r2136}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2221, %r2218}, {%r333, %r339, %r336, %r342}, {%r2115, %r2143}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2187, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2189, %r2187, %r2191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2192, %r380, %r2194, %r2189;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2196, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2198, %r2196, %r2200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2201, %r380, %r2203, %r2198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2205, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2207, %r2205, %r2209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2210, %r380, %r2212, %r2207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2214, %r383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2216, %r2214, %r2218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2219, %r380, %r2221, %r2216;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2223, %r383, %r2194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r380, %r2191, %r2223;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2230, %r383, %r2203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2233, %r380, %r2200, %r2230;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2237, %r383, %r2212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2240, %r380, %r2209, %r2237;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2244, %r383, %r2221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2247, %r380, %r2218, %r2244;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2251, %r2252}, {%r420, %r426, %r423, %r429}, {%r2192, %r2226}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2261, %r2262}, {%r420, %r426, %r423, %r429}, {%r2201, %r2233}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2271, %r2272}, {%r420, %r426, %r423, %r429}, {%r2210, %r2240}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2281, %r2282}, {%r420, %r426, %r423, %r429}, {%r2219, %r2247}, {%r2577, %r2577};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2291, %r119, %r2251;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2294, %r119, %r2252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2297, %r119, %r2261;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2300, %r119, %r2262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2303, %r119, %r2271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2306, %r119, %r2272;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2309, %r119, %r2281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2312, %r119, %r2282;
	// end inline asm
	// begin inline asm
	mov.b32 %r2315, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2316, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2317, %r2291, %r2315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2320, %r2317, %r2316;
	// end inline asm
	// begin inline asm
	mov.b32 %r2323, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2324, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2325, %r2294, %r2323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2328, %r2325, %r2324;
	// end inline asm
	// begin inline asm
	mov.b32 %r2331, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2333, %r2297, %r2331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2336, %r2333, %r2332;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2340, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2341, %r2300, %r2339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2344, %r2341, %r2340;
	// end inline asm
	// begin inline asm
	mov.b32 %r2347, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2348, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2349, %r2303, %r2347;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2352, %r2349, %r2348;
	// end inline asm
	// begin inline asm
	mov.b32 %r2355, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2356, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2357, %r2306, %r2355;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2360, %r2357, %r2356;
	// end inline asm
	// begin inline asm
	mov.b32 %r2363, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2364, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2365, %r2309, %r2363;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2368, %r2365, %r2364;
	// end inline asm
	// begin inline asm
	mov.b32 %r2371, {%rs274, %rs274};
	// end inline asm
	// begin inline asm
	mov.b32 %r2372, {%rs99, %rs99};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2373, %r2312, %r2371;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2376, %r2373, %r2372;
	// end inline asm
	// begin inline asm
	mov.b32 %r2382, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2380, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2381, %r2382, %r2380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2320, %r2381;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2382, %r2387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2391, %r2328, %r2388;
	// end inline asm
	// begin inline asm
	mov.b32 %r2394, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2395, %r2382, %r2394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2398, %r2336, %r2395;
	// end inline asm
	// begin inline asm
	mov.b32 %r2401, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2402, %r2382, %r2401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2344, %r2402;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2408, %r2384, %r2398, %r1513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2412, %r2391, %r2405, %r1513;
	// end inline asm
	shl.b32 	%r2419, %r2412, 4;
	// begin inline asm
	lop3.b32 %r2416, %r1519, %r2408, %r2419, 202;
	// end inline asm
	xor.b32  	%r2485, %r2416, -2004318072;
	// begin inline asm
	mov.b32 %r2423, {%rs288, %rs288};
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2422, %r2423, %r2421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2425, %r2352, %r2422;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2423, %r2428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2432, %r2360, %r2429;
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2436, %r2423, %r2435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2439, %r2368, %r2436;
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs296, %rs296};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2443, %r2423, %r2442;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2446, %r2376, %r2443;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2449, %r2425, %r2439, %r1513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2453, %r2432, %r2446, %r1513;
	// end inline asm
	shl.b32 	%r2460, %r2453, 4;
	// begin inline asm
	lop3.b32 %r2457, %r1519, %r2449, %r2460, 202;
	// end inline asm
	xor.b32  	%r2486, %r2457, -2004318072;
	st.shared.u32 	[%rd153], %r2485;
	st.shared.u32 	[%rd154], %r2486;
	add.s32 	%r2605, %r2605, 32;
	add.s64 	%rd154, %rd154, 4228;
	add.s64 	%rd153, %rd153, 4228;
	add.s32 	%r2602, %r2602, 1;
	setp.eq.s32 	%p236, %r2605, 256;
	mov.u32 	%r2606, %r2596;
	mov.u32 	%r2607, %r2595;
	mov.u32 	%r2608, %r2594;
	mov.u32 	%r2609, %r2593;
	@%p236 bra 	$L__BB0_130;
	bra.uni 	$L__BB0_129;
$L__BB0_130:                            // %guard_exit10385
                                        //   in Loop: Header=BB0_128 Depth=1
	bar.sync 	0;
	or.b32  	%r152, %r109, %r94;
	ld.shared.u32 	%r2492, [%rd22];
	ld.shared.u32 	%r2493, [%rd23+128];
	ld.shared.u32 	%r2500, [%rd23+4];
	ld.shared.u32 	%r2501, [%rd23+132];
	ld.shared.u32 	%r2508, [%rd24];
	ld.shared.u32 	%r2509, [%rd25+128];
	ld.shared.u32 	%r2516, [%rd25+4];
	ld.shared.u32 	%r2517, [%rd25+132];
	ld.shared.u32 	%r2524, [%rd26];
	ld.shared.u32 	%r2525, [%rd27+128];
	ld.shared.u32 	%r2532, [%rd27+4];
	ld.shared.u32 	%r2533, [%rd27+132];
	ld.shared.u32 	%r2540, [%rd28];
	ld.shared.u32 	%r2541, [%rd29+128];
	ld.shared.u32 	%r2548, [%rd29+4];
	ld.shared.u32 	%r2549, [%rd29+132];
	// begin inline asm
	prmt.b32 %r2487, %r2492, %r2493, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2491, %r2492, %r2493, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2495, %r2500, %r2501, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2499, %r2500, %r2501, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2503, %r2508, %r2509, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2507, %r2508, %r2509, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2511, %r2516, %r2517, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2515, %r2516, %r2517, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2519, %r2524, %r2525, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2523, %r2524, %r2525, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2527, %r2532, %r2533, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2531, %r2532, %r2533, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2535, %r2540, %r2541, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2539, %r2540, %r2541, %r582;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2543, %r2548, %r2549, %r578;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2547, %r2548, %r2549, %r582;
	// end inline asm
	selp.b32 	%r2551, %r2491, %r2487, %p223;
	shfl.sync.bfly.b32	%r2552, %r2551, 8, 31, -1;
	selp.b32 	%r2553, %r2499, %r2495, %p223;
	shfl.sync.bfly.b32	%r2554, %r2553, 8, 31, -1;
	selp.b32 	%r2555, %r2507, %r2503, %p223;
	shfl.sync.bfly.b32	%r157, %r2555, 8, 31, -1;
	selp.b32 	%r2556, %r2515, %r2511, %p223;
	shfl.sync.bfly.b32	%r158, %r2556, 8, 31, -1;
	selp.b32 	%r2557, %r2523, %r2519, %p223;
	shfl.sync.bfly.b32	%r2558, %r2557, 8, 31, -1;
	selp.b32 	%r159, %r2519, %r2558, %p223;
	selp.b32 	%r160, %r2558, %r2523, %p223;
	selp.b32 	%r2559, %r2531, %r2527, %p223;
	shfl.sync.bfly.b32	%r2560, %r2559, 8, 31, -1;
	selp.b32 	%r161, %r2527, %r2560, %p223;
	selp.b32 	%r162, %r2560, %r2531, %p223;
	selp.b32 	%r2561, %r2539, %r2535, %p223;
	shfl.sync.bfly.b32	%r2562, %r2561, 8, 31, -1;
	selp.b32 	%r163, %r2535, %r2562, %p223;
	selp.b32 	%r164, %r2562, %r2539, %p223;
	selp.b32 	%r2563, %r2547, %r2543, %p223;
	shfl.sync.bfly.b32	%r2564, %r2563, 8, 31, -1;
	selp.b32 	%r165, %r2543, %r2564, %p223;
	selp.b32 	%r166, %r2564, %r2547, %p223;
	shl.b32 	%r2578, %r152, 12;
	@%p237 bra 	$L__BB0_142;
// %bb.131:                             // %guard_exit10385.pass10014_crit_edge
                                        //   in Loop: Header=BB0_128 Depth=1
	or.b32  	%r2610, %r2578, %r102;
	bra.uni 	$L__BB0_143;
$L__BB0_144:                            // %L22594
	st.global.u32 	[%rd4], %r2577;
	ret;
$L__BB0_7:                              // %L246
	mov.u32 	%r2576, 2;
	st.global.u32 	[%rd4], %r2576;
	mov.u64 	%rd151, exception2055;
	cvta.global.u64 	%rd152, %rd151;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd152;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r168;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd59, exception1;
	cvta.global.u64 	%rd60, %rd59;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd60;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd38;
	st.param.b32 	[param0+8], %r168;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
