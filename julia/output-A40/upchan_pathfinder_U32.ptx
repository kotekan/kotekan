// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan32(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1892[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception11911[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<200>;
	.reg .b16 	%rs<133>;
	.reg .b32 	%r<1656>;
	.reg .f32 	%f<794>;
	.reg .b64 	%rd<168>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r86, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd43, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r93, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r93, 33919;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r94, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r94, 33919;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r87, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r95, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r96, %r95, %r1;
	or.b32  	%r97, %r96, %r4;
	mul.wide.u32 	%rd48, %r97, 4;
	add.s64 	%rd5, %rd4, %rd48;
	mov.u32 	%r98, 1;
	st.global.u32 	[%rd5], %r98;
	setp.gt.u32 	%p3, %r87, 32767;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L133
	ld.param.u32 	%r88, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r88, %r87;
	setp.gt.s32 	%p5, %r88, 65535;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L140
	ld.param.u32 	%r89, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r99, %r88, %r87;
	and.b32  	%r100, %r99, 255;
	setp.ne.s32 	%p7, %r100, 0;
	setp.gt.u32 	%p8, %r89, 1023;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L151
	ld.param.u32 	%r90, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r90, %r89;
	setp.gt.s32 	%p11, %r90, 2047;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L158
	sub.s32 	%r101, %r90, %r89;
	add.s32 	%r102, %r101, 3;
	and.b32  	%r103, %r102, 7;
	setp.eq.s32 	%p13, %r103, 0;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L273
	ld.param.u32 	%r91, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p14, %r91, 0;
	@%p14 bra 	$L__BB0_12;
// %bb.11:                              // %L275
	ld.param.u32 	%r92, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p15, %r91, %r92;
	setp.lt.s32 	%p16, %r92, 385;
	and.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass179
	bfe.u32 	%r59, %r1, 1, 1;
	and.b32  	%r60, %r1, 1;
	bfe.u32 	%r61, %r1, 2, 1;
	shl.b32 	%r109, %r61, 1;
	shl.b32 	%r110, %r60, 2;
	shl.b32 	%r111, %r59, 3;
	or.b32  	%r112, %r110, %r111;
	or.b32  	%r113, %r109, %r112;
	shr.u32 	%r62, %r1, 4;
	or.b32  	%r63, %r62, %r113;
	shl.b32 	%r64, %r63, 1;
	or.b32  	%r114, %r64, -127;
	cvt.rn.f32.s32 	%f46, %r114;
	mov.f32 	%f47, 0f43810000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p23, %f44, 0f00000000;
	mov.f32 	%f793, 0f3F800000;
	mov.f32 	%f786, %f793;
	@%p23 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             // %L588
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r122, %f74;
	and.b32  	%r123, %r122, -2147483648;
	or.b32  	%r124, %r123, 1056964608;
	mov.b32 	%f75, %r124;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p24, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p24;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p25, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p25;
	cvt.rzi.s32.f32 	%r125, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r126, %r125, 1;
	setp.eq.b32 	%p26, %r126, 1;
	selp.f32 	%f93, %f91, %f92, %p26;
	and.b32  	%r127, %r125, 2;
	setp.eq.s32 	%p27, %r127, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p27;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p28, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p28;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f786, %f99, %f100;
$L__BB0_15:                             // %L592
	or.b32  	%r128, %r64, -95;
	cvt.rn.f32.s32 	%f104, %r128;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p34, %f6, 0f00000000;
	mov.f32 	%f787, %f793;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L606
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r136, %f132;
	and.b32  	%r137, %r136, -2147483648;
	or.b32  	%r138, %r137, 1056964608;
	mov.b32 	%f133, %r138;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p35, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p35;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p36, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p36;
	cvt.rzi.s32.f32 	%r139, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r140, %r139, 1;
	setp.eq.b32 	%p37, %r140, 1;
	selp.f32 	%f151, %f149, %f150, %p37;
	and.b32  	%r141, %r139, 2;
	setp.eq.s32 	%p38, %r141, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p38;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p39, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p39;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f787, %f157, %f158;
$L__BB0_17:                             // %L610
	or.b32  	%r145, %r64, -63;
	cvt.rn.f32.s32 	%f163, %r145;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p45, %f11, 0f00000000;
	mov.f32 	%f788, %f793;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %L686
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r153, %f191;
	and.b32  	%r154, %r153, -2147483648;
	or.b32  	%r155, %r154, 1056964608;
	mov.b32 	%f192, %r155;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p46, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p46;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p47, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p47;
	cvt.rzi.s32.f32 	%r156, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r157, %r156, 1;
	setp.eq.b32 	%p48, %r157, 1;
	selp.f32 	%f210, %f208, %f209, %p48;
	and.b32  	%r158, %r156, 2;
	setp.eq.s32 	%p49, %r158, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p49;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p50, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p50;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f788, %f216, %f217;
$L__BB0_19:                             // %L690
	or.b32  	%r159, %r64, -31;
	cvt.rn.f32.s32 	%f221, %r159;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p56, %f17, 0f00000000;
	mov.f32 	%f789, %f793;
	@%p56 bra 	$L__BB0_21;
// %bb.20:                              // %L704
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r167, %f249;
	and.b32  	%r168, %r167, -2147483648;
	or.b32  	%r169, %r168, 1056964608;
	mov.b32 	%f250, %r169;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p57, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p57;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p58, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p58;
	cvt.rzi.s32.f32 	%r170, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r171, %r170, 1;
	setp.eq.b32 	%p59, %r171, 1;
	selp.f32 	%f268, %f266, %f267, %p59;
	and.b32  	%r172, %r170, 2;
	setp.eq.s32 	%p60, %r172, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p60;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p61, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p61;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f789, %f274, %f275;
$L__BB0_21:                             // %L708
	or.b32  	%r176, %r64, 1;
	cvt.rn.f32.s32 	%f280, %r176;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p67, %f22, 0f00000000;
	mov.f32 	%f790, %f793;
	@%p67 bra 	$L__BB0_23;
// %bb.22:                              // %L784
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r184, %f308;
	and.b32  	%r185, %r184, -2147483648;
	or.b32  	%r186, %r185, 1056964608;
	mov.b32 	%f309, %r186;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p68, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p68;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p69, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p69;
	cvt.rzi.s32.f32 	%r187, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r188, %r187, 1;
	setp.eq.b32 	%p70, %r188, 1;
	selp.f32 	%f327, %f325, %f326, %p70;
	and.b32  	%r189, %r187, 2;
	setp.eq.s32 	%p71, %r189, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p71;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p72, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p72;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f790, %f333, %f334;
$L__BB0_23:                             // %L788
	or.b32  	%r190, %r64, 33;
	cvt.rn.f32.s32 	%f338, %r190;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p78, %f28, 0f00000000;
	mov.f32 	%f791, %f793;
	@%p78 bra 	$L__BB0_25;
// %bb.24:                              // %L802
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r198, %f366;
	and.b32  	%r199, %r198, -2147483648;
	or.b32  	%r200, %r199, 1056964608;
	mov.b32 	%f367, %r200;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p79, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p79;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p80, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p80;
	cvt.rzi.s32.f32 	%r201, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r202, %r201, 1;
	setp.eq.b32 	%p81, %r202, 1;
	selp.f32 	%f385, %f383, %f384, %p81;
	and.b32  	%r203, %r201, 2;
	setp.eq.s32 	%p82, %r203, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p82;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p83, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p83;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f791, %f391, %f392;
$L__BB0_25:                             // %L806
	or.b32  	%r207, %r64, 65;
	cvt.rn.f32.s32 	%f397, %r207;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p89, %f33, 0f00000000;
	mov.f32 	%f792, %f793;
	@%p89 bra 	$L__BB0_27;
// %bb.26:                              // %L882
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r215, %f425;
	and.b32  	%r216, %r215, -2147483648;
	or.b32  	%r217, %r216, 1056964608;
	mov.b32 	%f426, %r217;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p90, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p90;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p91, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p91;
	cvt.rzi.s32.f32 	%r218, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r219, %r218, 1;
	setp.eq.b32 	%p92, %r219, 1;
	selp.f32 	%f444, %f442, %f443, %p92;
	and.b32  	%r220, %r218, 2;
	setp.eq.s32 	%p93, %r220, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p93;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p94, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p94;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f792, %f450, %f451;
$L__BB0_27:                             // %L886
	or.b32  	%r221, %r64, 97;
	cvt.rn.f32.s32 	%f455, %r221;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p100, %f39, 0f00000000;
	@%p100 bra 	$L__BB0_29;
// %bb.28:                              // %L900
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r229, %f483;
	and.b32  	%r230, %r229, -2147483648;
	or.b32  	%r231, %r230, 1056964608;
	mov.b32 	%f484, %r231;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p101, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p101;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p102, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p102;
	cvt.rzi.s32.f32 	%r232, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r233, %r232, 1;
	setp.eq.b32 	%p103, %r233, 1;
	selp.f32 	%f502, %f500, %f501, %p103;
	and.b32  	%r234, %r232, 2;
	setp.eq.s32 	%p104, %r234, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p104;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p105, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p105;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f793, %f508, %f509;
$L__BB0_29:                             // %L904
	setp.le.s32 	%p163, %r88, %r87;
	mov.u32 	%r1640, 0;
	@%p163 bra 	$L__BB0_38;
// %bb.30:                              // %L1488.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p18, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p29, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p40, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p51, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p62, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p73, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p18;
	selp.f32 	%f108, %f107, %f4, %p29;
	selp.f32 	%f167, %f166, %f9, %p40;
	selp.f32 	%f225, %f224, %f15, %p51;
	selp.f32 	%f284, %f283, %f20, %p62;
	selp.f32 	%f342, %f341, %f26, %p73;
	setp.gt.f32 	%p84, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p84;
	abs.f32 	%f457, %f37;
	mov.b32 	%r115, %f51;
	mov.b32 	%r129, %f109;
	mov.b32 	%r146, %f168;
	mov.b32 	%r160, %f226;
	mov.b32 	%r177, %f285;
	mov.b32 	%r191, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p95, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r116, %r115, -2147483648;
	and.b32  	%r130, %r129, -2147483648;
	and.b32  	%r147, %r146, -2147483648;
	and.b32  	%r161, %r160, -2147483648;
	and.b32  	%r178, %r177, -2147483648;
	and.b32  	%r192, %r191, -2147483648;
	mov.b32 	%r208, %f402;
	selp.f32 	%f459, %f458, %f37, %p95;
	or.b32  	%r117, %r116, 1056964608;
	or.b32  	%r131, %r130, 1056964608;
	or.b32  	%r148, %r147, 1056964608;
	or.b32  	%r162, %r161, 1056964608;
	or.b32  	%r179, %r178, 1056964608;
	or.b32  	%r193, %r192, 1056964608;
	and.b32  	%r209, %r208, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r117;
	mov.b32 	%f110, %r131;
	mov.b32 	%f169, %r148;
	mov.b32 	%f227, %r162;
	mov.b32 	%f286, %r179;
	mov.b32 	%f344, %r193;
	or.b32  	%r210, %r209, 1056964608;
	mov.b32 	%r222, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r210;
	and.b32  	%r223, %r222, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p19, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p30, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p41, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p52, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p63, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p74, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r224, %r223, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p19;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p20, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p30;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p31, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p41;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p42, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p52;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p53, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p63;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p64, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p74;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p75, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p85, %f406, 0f4B000000;
	mov.b32 	%f461, %r224;
	selp.f32 	%f58, %f57, %f56, %p20;
	selp.f32 	%f116, %f115, %f114, %p31;
	selp.f32 	%f175, %f174, %f173, %p42;
	selp.f32 	%f233, %f232, %f231, %p53;
	selp.f32 	%f292, %f291, %f290, %p64;
	selp.f32 	%f350, %f349, %f348, %p75;
	selp.f32 	%f407, %f402, %f405, %p85;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p86, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p86;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p96, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p96;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p97, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r118, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r132, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r149, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r163, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r180, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r194, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p97;
	shl.b32 	%r51, %r1, 1;
	add.s32 	%r119, %r118, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r133, %r132, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r150, %r149, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r164, %r163, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r181, %r180, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r195, %r194, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r211, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	shl.b32 	%r50, %r2, 5;
	and.b32  	%r52, %r51, 8;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r120, %r119, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r134, %r133, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r151, %r150, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r165, %r164, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r182, %r181, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r196, %r195, 1;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	or.b32  	%r104, %r52, %r50;
	and.b32  	%r53, %r1, 16;
	shl.b32 	%r54, %r1, 2;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p21, %r120, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p32, %r134, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p43, %r151, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p54, %r165, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p65, %r182, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p76, %r196, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r213, %r212, 1;
	cvt.rzi.s32.f32 	%r225, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r105, %r104, %r53;
	and.b32  	%r55, %r54, 4;
	selp.f32 	%f70, %f68, %f69, %p21;
	and.b32  	%r121, %r119, 2;
	selp.f32 	%f128, %f126, %f127, %p32;
	and.b32  	%r135, %r133, 2;
	selp.f32 	%f187, %f185, %f186, %p43;
	and.b32  	%r152, %r150, 2;
	selp.f32 	%f245, %f243, %f244, %p54;
	and.b32  	%r166, %r164, 2;
	selp.f32 	%f304, %f302, %f303, %p65;
	and.b32  	%r183, %r181, 2;
	selp.f32 	%f362, %f360, %f361, %p76;
	and.b32  	%r197, %r195, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p87, %r213, 1;
	add.s32 	%r226, %r225, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	or.b32  	%r106, %r105, %r55;
	and.b32  	%r56, %r1, 2;
	setp.eq.s32 	%p22, %r121, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p33, %r135, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p44, %r152, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p55, %r166, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p66, %r183, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p77, %r197, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p87;
	and.b32  	%r214, %r212, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r227, %r226, 1;
	or.b32  	%r107, %r106, %r56;
	selp.f32 	%f73, %f70, %f72, %p22;
	selp.f32 	%f131, %f128, %f130, %p33;
	selp.f32 	%f190, %f187, %f189, %p44;
	selp.f32 	%f248, %f245, %f247, %p55;
	selp.f32 	%f307, %f304, %f306, %p66;
	selp.f32 	%f365, %f362, %f364, %p77;
	setp.eq.s32 	%p88, %r214, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p98, %r227, 1;
	bfe.u32 	%r108, %r107, 1, 10;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p88;
	selp.f32 	%f479, %f477, %f478, %p98;
	and.b32  	%r228, %r226, 2;
	ld.param.u64 	%rd1, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd49, %r108, 4;
	mul.f32 	%f102, %f786, %f43;
	mov.f32 	%f103, 0f42000000;
	mul.f32 	%f160, %f787, %f5;
	mul.f32 	%f219, %f788, %f10;
	mul.f32 	%f277, %f789, %f16;
	mul.f32 	%f336, %f790, %f21;
	mul.f32 	%f394, %f791, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p99, %r228, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd50, %rd1, %rd49;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f792, %f32;
	selp.f32 	%f482, %f479, %f481, %p99;
	ld.param.u64 	%rd2, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r57, [%rd50];
	shr.u32 	%r58, %r1, 1;
	mov.b32 	%r144, %f162;
	mov.b32 	%r143, %f3;
	mov.b32 	%r175, %f279;
	mov.b32 	%r174, %f14;
	mov.b32 	%r206, %f396;
	mov.b32 	%r205, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r142, %r144, %r143;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r173, %r175, %r174;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r204, %r206, %r205;
	// end inline asm
	mul.f32 	%f510, %f793, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r237, %f512;
	mov.b32 	%r236, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r235, %r237, %r236;
	// end inline asm
	mul.lo.s32 	%r274, %r63, 31;
	and.b32  	%r275, %r274, 63;
	cvt.rn.f32.s32 	%f513, %r275;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r276, %f515;
	and.b32  	%r277, %r276, -2147483648;
	or.b32  	%r278, %r277, 1056964608;
	mov.b32 	%f516, %r278;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p106, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p106;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p107, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p107;
	cvt.rzi.s32.f32 	%r279, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r280, %r279, 1;
	setp.eq.b32 	%p108, %r280, 1;
	selp.f32 	%f534, %f532, %f533, %p108;
	selp.f32 	%f535, %f533, %f532, %p108;
	and.b32  	%r281, %r279, 2;
	setp.eq.s32 	%p109, %r281, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p109;
	add.s32 	%r282, %r279, 1;
	and.b32  	%r283, %r282, 2;
	setp.eq.s32 	%p110, %r283, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p110;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p111, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p111;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p112, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p112;
	add.s32 	%r284, %r274, 48;
	and.b32  	%r285, %r284, 63;
	cvt.rn.f32.s32 	%f547, %r285;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r286, %f549;
	and.b32  	%r287, %r286, -2147483648;
	or.b32  	%r288, %r287, 1056964608;
	mov.b32 	%f550, %r288;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p113, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p113;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p114, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p114;
	cvt.rzi.s32.f32 	%r289, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r290, %r289, 1;
	setp.eq.b32 	%p115, %r290, 1;
	selp.f32 	%f568, %f566, %f567, %p115;
	selp.f32 	%f569, %f567, %f566, %p115;
	and.b32  	%r291, %r289, 2;
	setp.eq.s32 	%p116, %r291, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p116;
	add.s32 	%r292, %r289, 1;
	and.b32  	%r293, %r292, 2;
	setp.eq.s32 	%p117, %r293, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p117;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p118, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p118;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p119, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p119;
	mov.b32 	%r239, %f546;
	mov.b32 	%r240, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r238, %r240, %r239;
	// end inline asm
	mov.b32 	%r242, %f543;
	mov.b32 	%r243, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r241, %r243, %r242;
	// end inline asm
	shr.u32 	%r11, %r1, 3;
	and.b32  	%r294, %r11, 2;
	and.b32  	%r295, %r58, 4;
	or.b32  	%r296, %r61, %r294;
	or.b32  	%r297, %r296, %r295;
	and.b32  	%r298, %r51, 6;
	mul.lo.s32 	%r299, %r297, %r298;
	and.b32  	%r300, %r299, 14;
	cvt.rn.f32.s32 	%f580, %r300;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r301, %f583;
	and.b32  	%r302, %r301, -2147483648;
	or.b32  	%r303, %r302, 1056964608;
	mov.b32 	%f584, %r303;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p120, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p120;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p121, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p121;
	cvt.rzi.s32.f32 	%r304, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r305, %r304, 1;
	setp.eq.b32 	%p122, %r305, 1;
	selp.f32 	%f602, %f600, %f601, %p122;
	selp.f32 	%f603, %f601, %f600, %p122;
	and.b32  	%r306, %r304, 2;
	setp.eq.s32 	%p123, %r306, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p123;
	add.s32 	%r307, %r304, 1;
	and.b32  	%r308, %r307, 2;
	setp.eq.s32 	%p124, %r308, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p124;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p125, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p125;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p126, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p126;
	or.b32  	%r309, %r51, 8;
	mul.lo.s32 	%r310, %r297, %r309;
	and.b32  	%r311, %r310, 14;
	cvt.rn.f32.s32 	%f614, %r311;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r312, %f616;
	and.b32  	%r313, %r312, -2147483648;
	or.b32  	%r314, %r313, 1056964608;
	mov.b32 	%f617, %r314;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p127, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p127;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p128, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p128;
	cvt.rzi.s32.f32 	%r315, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r316, %r315, 1;
	setp.eq.b32 	%p129, %r316, 1;
	selp.f32 	%f635, %f633, %f634, %p129;
	selp.f32 	%f636, %f634, %f633, %p129;
	and.b32  	%r317, %r315, 2;
	setp.eq.s32 	%p130, %r317, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p130;
	add.s32 	%r318, %r315, 1;
	and.b32  	%r319, %r318, 2;
	setp.eq.s32 	%p131, %r319, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p131;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p132, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p132;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p133, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p133;
	mov.b32 	%r245, %f613;
	mov.b32 	%r246, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r244, %r246, %r245;
	// end inline asm
	mov.b32 	%r248, %f610;
	mov.b32 	%r249, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r247, %r249, %r248;
	// end inline asm
	xor.b32  	%r251, %r248, -2147483648;
	xor.b32  	%r252, %r249, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r250, %r252, %r251;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r253, %r246, %r245;
	// end inline asm
	shl.b32 	%r320, %r59, 1;
	mul.lo.s32 	%r321, %r320, %r297;
	cvt.rn.f32.s32 	%f647, %r321;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r322, %f649;
	and.b32  	%r323, %r322, -2147483648;
	or.b32  	%r324, %r323, 1056964608;
	mov.b32 	%f650, %r324;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p134, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p134;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p135, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p135;
	cvt.rzi.s32.f32 	%r325, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r326, %r325, 1;
	setp.eq.b32 	%p136, %r326, 1;
	selp.f32 	%f668, %f666, %f667, %p136;
	selp.f32 	%f669, %f667, %f666, %p136;
	and.b32  	%r327, %r325, 2;
	setp.eq.s32 	%p137, %r327, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p137;
	add.s32 	%r328, %r325, 1;
	and.b32  	%r329, %r328, 2;
	setp.eq.s32 	%p138, %r329, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p138;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p139, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p139;
	mov.b32 	%r330, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p140, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p140;
	shl.b32 	%r331, %r297, 2;
	add.s32 	%r332, %r321, %r331;
	cvt.rn.f32.s32 	%f680, %r332;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r333, %f682;
	and.b32  	%r334, %r333, -2147483648;
	or.b32  	%r335, %r334, 1056964608;
	mov.b32 	%f683, %r335;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p141, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p141;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p142, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p142;
	cvt.rzi.s32.f32 	%r336, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r337, %r336, 1;
	setp.eq.b32 	%p143, %r337, 1;
	selp.f32 	%f701, %f699, %f700, %p143;
	selp.f32 	%f702, %f700, %f699, %p143;
	and.b32  	%r338, %r336, 2;
	setp.eq.s32 	%p144, %r338, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p144;
	add.s32 	%r339, %r336, 1;
	and.b32  	%r340, %r339, 2;
	setp.eq.s32 	%p145, %r340, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p145;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p146, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p146;
	mov.b32 	%r341, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p147, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p147;
	mov.b32 	%r258, %f712;
	mov.b32 	%r257, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r256, %r258, %r257;
	// end inline asm
	xor.b32  	%r261, %r341, -2147483648;
	xor.b32  	%r260, %r330, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r259, %r261, %r260;
	// end inline asm
	bfe.u32 	%r342, %r1, 3, 1;
	setp.eq.s32 	%p148, %r342, %r60;
	mul.lo.s32 	%r343, %r320, %r296;
	cvt.rn.f32.s32 	%f713, %r343;
	mov.f32 	%f714, 0f40800000;
	div.approx.f32 	%f715, %f713, %f714;
	add.f32 	%f716, %f715, %f715;
	mov.b32 	%r344, %f716;
	and.b32  	%r345, %r344, -2147483648;
	or.b32  	%r346, %r345, 1056964608;
	mov.b32 	%f717, %r346;
	add.f32 	%f718, %f716, %f717;
	cvt.rzi.f32.f32 	%f719, %f718;
	abs.f32 	%f720, %f716;
	setp.gt.f32 	%p149, %f720, 0f4B000000;
	selp.f32 	%f721, %f716, %f719, %p149;
	cvt.rzi.f32.f32 	%f722, %f716;
	setp.lt.f32 	%p150, %f720, 0f3F000000;
	selp.f32 	%f723, %f722, %f721, %p150;
	cvt.rzi.s32.f32 	%r347, %f723;
	fma.rn.f32 	%f724, %f723, 0fBF000000, %f715;
	mul.f32 	%f725, %f724, %f724;
	fma.rn.f32 	%f726, %f725, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f727, %f725, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f728, %f726, %f725, 0fC0A55DF6;
	fma.rn.f32 	%f729, %f727, %f725, 0f4081E0CF;
	fma.rn.f32 	%f730, %f725, %f724, 0f00000000;
	fma.rn.f32 	%f731, %f729, %f725, 0fC09DE9E6;
	fma.rn.f32 	%f732, %f728, %f730, 0f00000000;
	fma.rn.f32 	%f733, %f731, %f725, 0f3F800000;
	fma.rn.f32 	%f734, %f724, 0f40490FDB, %f732;
	and.b32  	%r348, %r347, 1;
	setp.eq.b32 	%p151, %r348, 1;
	selp.f32 	%f735, %f733, %f734, %p151;
	selp.f32 	%f736, %f734, %f733, %p151;
	and.b32  	%r349, %r347, 2;
	setp.eq.s32 	%p152, %r349, 0;
	neg.f32 	%f737, %f735;
	selp.f32 	%f738, %f735, %f737, %p152;
	add.s32 	%r350, %r347, 1;
	and.b32  	%r351, %r350, 2;
	setp.eq.s32 	%p153, %r351, 0;
	sub.f32 	%f739, %f71, %f736;
	selp.f32 	%f740, %f736, %f739, %p153;
	cvt.rzi.f32.f32 	%f741, %f715;
	setp.eq.f32 	%p154, %f741, %f715;
	mul.f32 	%f742, %f715, 0f00000000;
	selp.f32 	%f743, %f742, %f738, %p154;
	abs.f32 	%f744, %f715;
	setp.gt.f32 	%p155, %f744, 0f4B800000;
	add.f32 	%f745, %f743, 0f3F800000;
	selp.f32 	%f746, %f745, %f740, %p155;
	selp.f32 	%f747, 0f3F800000, 0f00000000, %p148;
	mul.f32 	%f748, %f746, %f747;
	neg.f32 	%f749, %f747;
	mul.f32 	%f750, %f743, %f749;
	shl.b32 	%r352, %r61, 2;
	add.s32 	%r353, %r343, %r352;
	and.b32  	%r354, %r353, 6;
	cvt.rn.f32.s32 	%f751, %r354;
	div.approx.f32 	%f752, %f751, %f714;
	add.f32 	%f753, %f752, %f752;
	mov.b32 	%r355, %f753;
	and.b32  	%r356, %r355, -2147483648;
	or.b32  	%r357, %r356, 1056964608;
	mov.b32 	%f754, %r357;
	add.f32 	%f755, %f753, %f754;
	cvt.rzi.f32.f32 	%f756, %f755;
	abs.f32 	%f757, %f753;
	setp.gt.f32 	%p156, %f757, 0f4B000000;
	selp.f32 	%f758, %f753, %f756, %p156;
	cvt.rzi.f32.f32 	%f759, %f753;
	setp.lt.f32 	%p157, %f757, 0f3F000000;
	selp.f32 	%f760, %f759, %f758, %p157;
	cvt.rzi.s32.f32 	%r358, %f760;
	fma.rn.f32 	%f761, %f760, 0fBF000000, %f752;
	mul.f32 	%f762, %f761, %f761;
	fma.rn.f32 	%f763, %f762, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f764, %f762, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f765, %f763, %f762, 0fC0A55DF6;
	fma.rn.f32 	%f766, %f764, %f762, 0f4081E0CF;
	fma.rn.f32 	%f767, %f762, %f761, 0f00000000;
	fma.rn.f32 	%f768, %f766, %f762, 0fC09DE9E6;
	fma.rn.f32 	%f769, %f765, %f767, 0f00000000;
	fma.rn.f32 	%f770, %f768, %f762, 0f3F800000;
	fma.rn.f32 	%f771, %f761, 0f40490FDB, %f769;
	and.b32  	%r359, %r358, 1;
	setp.eq.b32 	%p158, %r359, 1;
	selp.f32 	%f772, %f770, %f771, %p158;
	selp.f32 	%f773, %f771, %f770, %p158;
	and.b32  	%r360, %r358, 2;
	setp.eq.s32 	%p159, %r360, 0;
	neg.f32 	%f774, %f772;
	selp.f32 	%f775, %f772, %f774, %p159;
	add.s32 	%r361, %r358, 1;
	and.b32  	%r362, %r361, 2;
	setp.eq.s32 	%p160, %r362, 0;
	sub.f32 	%f776, %f71, %f773;
	selp.f32 	%f777, %f773, %f776, %p160;
	cvt.rzi.f32.f32 	%f778, %f752;
	setp.eq.f32 	%p161, %f778, %f752;
	mul.f32 	%f779, %f752, 0f00000000;
	selp.f32 	%f780, %f779, %f775, %p161;
	abs.f32 	%f781, %f752;
	setp.gt.f32 	%p162, %f781, 0f4B800000;
	add.f32 	%f782, %f780, 0f3F800000;
	selp.f32 	%f783, %f782, %f777, %p162;
	mul.f32 	%f784, %f783, %f747;
	mul.f32 	%f785, %f780, %f749;
	mov.b32 	%r263, %f748;
	mov.b32 	%r264, %f784;
	// begin inline asm
	cvt.rn.f16x2.f32 %r262, %r264, %r263;
	// end inline asm
	mov.b32 	%r269, %f750;
	xor.b32  	%r266, %r269, -2147483648;
	mov.b32 	%r270, %f785;
	xor.b32  	%r267, %r270, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r270, %r269;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r264, %r263;
	// end inline asm
	shl.b32 	%r364, %r91, 5;
	and.b32  	%r365, %r54, 12;
	shl.b32 	%r366, %r3, 2;
	and.b32  	%r22, %r366, 32;
	and.b32  	%r367, %r3, 7;
	or.b32  	%r368, %r367, %r22;
	and.b32  	%r369, %r51, 16;
	or.b32  	%r370, %r369, %r368;
	and.b32  	%r371, %r58, 8;
	or.b32  	%r23, %r371, %r370;
	and.b32  	%r24, %r54, 16;
	or.b32  	%r372, %r24, %r50;
	or.b32  	%r373, %r372, %r365;
	add.s32 	%r25, %r373, %r364;
	and.b32  	%r26, %r1, 8;
	shl.b32 	%r374, %r1, 4;
	or.b32  	%r375, %r26, %r374;
	shr.u32 	%r376, %r375, 2;
	and.b32  	%r377, %r376, 14;
	or.b32  	%r378, %r377, %r24;
	and.b32  	%r27, %r58, 2;
	shr.u32 	%r379, %r3, 1;
	and.b32  	%r380, %r4, 32;
	or.b32  	%r381, %r380, %r379;
	or.b32  	%r28, %r381, %r369;
	or.b32  	%r382, %r53, %r50;
	or.b32  	%r383, %r382, %r52;
	or.b32  	%r384, %r383, %r55;
	or.b32  	%r385, %r384, %r56;
	bfe.u32 	%r386, %r385, 1, 4;
	mul.lo.s32 	%r387, %r386, 65;
	add.s32 	%r388, %r28, %r387;
	or.b32  	%r29, %r28, 8;
	add.s32 	%r389, %r29, %r387;
	shl.b32 	%r390, %r3, 1;
	and.b32  	%r391, %r390, 14;
	shl.b32 	%r392, %r89, 16;
	add.s32 	%r393, %r392, -196608;
	and.b32  	%r394, %r366, 28;
	or.b32  	%r395, %r394, %r11;
	and.b32  	%r396, %r50, 2016;
	or.b32  	%r397, %r395, %r396;
	shl.b32 	%r398, %r397, 5;
	or.b32  	%r30, %r398, %r365;
	cvt.s64.s32 	%rd6, %r393;
	shr.u32 	%r399, %r3, 3;
	setp.gt.u32 	%p164, %r1, 15;
	or.b32  	%r400, %r399, 2;
	or.b32  	%r401, %r399, 4;
	or.b32  	%r402, %r399, 6;
	mul.lo.s32 	%r403, %r399, 1057;
	bfe.s32 	%r404, %r3, 1, 1;
	and.b32  	%r405, %r404, 260;
	and.b32  	%r406, %r3, 1;
	neg.s32 	%r407, %r406;
	and.b32  	%r408, %r407, 520;
	selp.b32 	%r409, 65, 0, %p164;
	bfe.s32 	%r410, %r3, 2, 1;
	and.b32  	%r411, %r410, 130;
	add.s32 	%r412, %r408, %r378;
	add.s32 	%r413, %r412, %r405;
	add.s32 	%r414, %r413, %r403;
	add.s32 	%r415, %r414, %r409;
	add.s32 	%r416, %r415, %r411;
	mul.wide.u32 	%rd51, %r416, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd7, %rd52, %rd51;
	add.s32 	%r417, %r413, 32;
	add.s32 	%r418, %r417, %r403;
	add.s32 	%r419, %r418, %r409;
	add.s32 	%r420, %r419, %r411;
	mul.wide.u32 	%rd53, %r420, 4;
	add.s64 	%rd8, %rd52, %rd53;
	or.b32  	%r421, %r413, 1;
	add.s32 	%r422, %r421, %r403;
	add.s32 	%r423, %r422, %r409;
	add.s32 	%r424, %r423, %r411;
	mul.wide.u32 	%rd54, %r424, 4;
	add.s64 	%rd9, %rd52, %rd54;
	add.s32 	%r425, %r413, 33;
	add.s32 	%r426, %r425, %r403;
	add.s32 	%r427, %r426, %r409;
	add.s32 	%r428, %r427, %r411;
	mul.wide.u32 	%rd55, %r428, 4;
	add.s64 	%rd10, %rd52, %rd55;
	mul.lo.s32 	%r429, %r400, 1057;
	add.s32 	%r430, %r413, %r429;
	add.s32 	%r431, %r430, %r409;
	add.s32 	%r432, %r431, %r411;
	mul.wide.u32 	%rd56, %r432, 4;
	add.s64 	%rd11, %rd52, %rd56;
	add.s32 	%r433, %r417, %r429;
	add.s32 	%r434, %r433, %r409;
	add.s32 	%r435, %r434, %r411;
	mul.wide.u32 	%rd57, %r435, 4;
	add.s64 	%rd12, %rd52, %rd57;
	add.s32 	%r436, %r421, %r429;
	add.s32 	%r437, %r436, %r409;
	add.s32 	%r438, %r437, %r411;
	mul.wide.u32 	%rd58, %r438, 4;
	add.s64 	%rd13, %rd52, %rd58;
	add.s32 	%r439, %r425, %r429;
	add.s32 	%r440, %r439, %r409;
	add.s32 	%r441, %r440, %r411;
	mul.wide.u32 	%rd59, %r441, 4;
	add.s64 	%rd14, %rd52, %rd59;
	mul.lo.s32 	%r442, %r401, 1057;
	add.s32 	%r443, %r413, %r442;
	add.s32 	%r444, %r443, %r409;
	add.s32 	%r445, %r444, %r411;
	mul.wide.u32 	%rd60, %r445, 4;
	add.s64 	%rd15, %rd52, %rd60;
	add.s32 	%r446, %r417, %r442;
	add.s32 	%r447, %r446, %r409;
	add.s32 	%r448, %r447, %r411;
	mul.wide.u32 	%rd61, %r448, 4;
	add.s64 	%rd16, %rd52, %rd61;
	add.s32 	%r449, %r421, %r442;
	add.s32 	%r450, %r449, %r409;
	add.s32 	%r451, %r450, %r411;
	mul.wide.u32 	%rd62, %r451, 4;
	add.s64 	%rd17, %rd52, %rd62;
	add.s32 	%r452, %r425, %r442;
	add.s32 	%r453, %r452, %r409;
	add.s32 	%r454, %r453, %r411;
	mul.wide.u32 	%rd63, %r454, 4;
	add.s64 	%rd18, %rd52, %rd63;
	mul.lo.s32 	%r455, %r402, 1057;
	add.s32 	%r456, %r413, %r455;
	add.s32 	%r457, %r456, %r409;
	add.s32 	%r458, %r457, %r411;
	mul.wide.u32 	%rd64, %r458, 4;
	add.s64 	%rd19, %rd52, %rd64;
	add.s32 	%r459, %r417, %r455;
	add.s32 	%r460, %r459, %r409;
	add.s32 	%r461, %r460, %r411;
	mul.wide.u32 	%rd65, %r461, 4;
	add.s64 	%rd20, %rd52, %rd65;
	add.s32 	%r462, %r421, %r455;
	add.s32 	%r463, %r462, %r409;
	add.s32 	%r464, %r463, %r411;
	mul.wide.u32 	%rd66, %r464, 4;
	add.s64 	%rd21, %rd52, %rd66;
	add.s32 	%r465, %r425, %r455;
	add.s32 	%r466, %r465, %r409;
	add.s32 	%r467, %r466, %r411;
	mul.wide.u32 	%rd67, %r467, 4;
	add.s64 	%rd22, %rd52, %rd67;
	setp.eq.s32 	%p165, %r56, 0;
	selp.b32 	%r31, 0, 65, %p165;
	setp.eq.s32 	%p166, %r60, 0;
	selp.b32 	%r32, 0, 130, %p166;
	or.b32  	%r468, %r391, %r62;
	mul.lo.s32 	%r469, %r468, 65;
	add.s32 	%r470, %r469, %r24;
	add.s32 	%r471, %r470, %r377;
	add.s32 	%r472, %r471, %r403;
	mul.wide.u32 	%rd68, %r472, 4;
	add.s64 	%rd23, %rd52, %rd68;
	cvt.u64.u32 	%rd69, %r403;
	cvt.u64.u32 	%rd70, %r377;
	cvt.u64.u32 	%rd71, %r469;
	cvt.u64.u32 	%rd72, %r24;
	add.s64 	%rd73, %rd72, %rd71;
	add.s64 	%rd74, %rd73, %rd70;
	add.s64 	%rd75, %rd74, %rd69;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd24, %rd52, %rd76;
	cvt.u64.u32 	%rd77, %r378;
	add.s64 	%rd78, %rd77, %rd71;
	add.s64 	%rd79, %rd78, %rd69;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd25, %rd52, %rd80;
	add.s32 	%r473, %r471, %r429;
	mul.wide.u32 	%rd81, %r473, 4;
	add.s64 	%rd26, %rd52, %rd81;
	cvt.u64.u32 	%rd82, %r429;
	add.s64 	%rd83, %rd74, %rd82;
	shl.b64 	%rd84, %rd83, 2;
	add.s64 	%rd27, %rd52, %rd84;
	add.s64 	%rd85, %rd78, %rd82;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd28, %rd52, %rd86;
	add.s32 	%r474, %r471, %r442;
	mul.wide.u32 	%rd87, %r474, 4;
	add.s64 	%rd29, %rd52, %rd87;
	cvt.u64.u32 	%rd88, %r442;
	add.s64 	%rd89, %rd74, %rd88;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd30, %rd52, %rd90;
	add.s64 	%rd91, %rd78, %rd88;
	shl.b64 	%rd92, %rd91, 2;
	add.s64 	%rd31, %rd52, %rd92;
	add.s32 	%r475, %r471, %r455;
	mul.wide.u32 	%rd93, %r475, 4;
	add.s64 	%rd32, %rd52, %rd93;
	cvt.u64.u32 	%rd94, %r455;
	add.s64 	%rd95, %rd74, %rd94;
	shl.b64 	%rd96, %rd95, 2;
	add.s64 	%rd33, %rd52, %rd96;
	add.s64 	%rd97, %rd78, %rd94;
	shl.b64 	%rd98, %rd97, 2;
	add.s64 	%rd34, %rd52, %rd98;
	mul.wide.u32 	%rd99, %r389, 4;
	add.s64 	%rd35, %rd52, %rd99;
	mul.wide.u32 	%rd100, %r388, 4;
	add.s64 	%rd36, %rd52, %rd100;
	mov.u16 	%rs104, 25600;
	mov.u16 	%rs106, 21504;
	mov.u16 	%rs114, 18432;
	mov.u16 	%rs128, -14592;
	mov.u32 	%r1642, %r1640;
	mov.u32 	%r1643, %r1640;
	mov.u32 	%r1644, %r1640;
	mov.u32 	%r1645, %r1640;
	mov.u32 	%r1653, %r1640;
	mov.u32 	%r1654, %r1640;
	mov.u32 	%r39, %r1640;
	bra.uni 	$L__BB0_31;
$L__BB0_37:                             // %pass9209
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r1632, %r1641, %r30;
	or.b32  	%r1633, %r1632, %r24;
	or.b32  	%r1634, %r1633, 262144;
	cvt.s64.s32 	%rd138, %r1634;
	add.s64 	%rd139, %rd138, %rd6;
	shr.u64 	%rd140, %rd139, 38;
	add.s64 	%rd141, %rd139, %rd140;
	shr.s64 	%rd142, %rd141, 26;
	setp.lt.s64 	%p191, %rd139, 0;
	and.b64  	%rd143, %rd141, -67108864;
	setp.ne.s64 	%p192, %rd143, %rd139;
	and.pred  	%p193, %p191, %p192;
	selp.u64 	%rd144, 1, 0, %p193;
	sub.s64 	%rd145, %rd144, %rd142;
	shl.b64 	%rd146, %rd145, 26;
	add.s64 	%rd147, %rd146, %rd139;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r78, %r80, %r79, %r81};
	or.b32  	%r1635, %r1633, 393216;
	cvt.s64.s32 	%rd150, %r1635;
	add.s64 	%rd151, %rd150, %rd6;
	shr.u64 	%rd152, %rd151, 38;
	add.s64 	%rd153, %rd151, %rd152;
	shr.s64 	%rd154, %rd153, 26;
	setp.lt.s64 	%p194, %rd151, 0;
	and.b64  	%rd155, %rd153, -67108864;
	setp.ne.s64 	%p195, %rd155, %rd151;
	and.pred  	%p196, %p194, %p195;
	selp.u64 	%rd156, 1, 0, %p196;
	sub.s64 	%rd157, %rd156, %rd154;
	shl.b64 	%rd158, %rd157, 26;
	add.s64 	%rd159, %rd158, %rd151;
	shl.b64 	%rd160, %rd159, 2;
	add.s64 	%rd161, %rd3, %rd160;
	st.global.v4.u32 	[%rd161], {%r82, %r84, %r83, %r85};
	setp.ne.s32 	%p197, %r39, 32512;
	add.s32 	%r39, %r39, 256;
	add.s32 	%r1636, %r39, %r87;
	setp.lt.s32 	%p198, %r1636, %r88;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_38;
$L__BB0_31:                             // %L1488
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_32 Depth 2
	setp.eq.s32 	%p167, %r26, 0;
	or.b32  	%r541, %r39, %r23;
	add.s32 	%r542, %r541, %r87;
	mad.lo.s32 	%r543, %r542, 12288, %r25;
	mul.hi.s32 	%r544, %r543, 715827883;
	shr.u32 	%r545, %r544, 31;
	shr.s32 	%r546, %r544, 26;
	add.s32 	%r547, %r546, %r545;
	setp.lt.s32 	%p168, %r543, 0;
	mul.lo.s32 	%r548, %r547, 402653184;
	setp.ne.s32 	%p169, %r548, %r543;
	and.pred  	%p170, %p168, %p169;
	selp.s32 	%r549, -1, 0, %p170;
	add.s32 	%r550, %r547, %r549;
	mad.lo.s32 	%r551, %r550, -402653184, %r543;
	mul.wide.s32 	%rd101, %r551, 4;
	add.s64 	%rd102, %rd2, %rd101;
	ld.global.v4.u32 	{%r552, %r553, %r554, %r555}, [%rd102];
	or.b32  	%r556, %r541, 64;
	add.s32 	%r557, %r556, %r87;
	mad.lo.s32 	%r558, %r557, 12288, %r25;
	mul.hi.s32 	%r559, %r558, 715827883;
	shr.u32 	%r560, %r559, 31;
	shr.s32 	%r561, %r559, 26;
	add.s32 	%r562, %r561, %r560;
	setp.lt.s32 	%p171, %r558, 0;
	mul.lo.s32 	%r563, %r562, 402653184;
	setp.ne.s32 	%p172, %r563, %r558;
	and.pred  	%p173, %p171, %p172;
	selp.s32 	%r564, -1, 0, %p173;
	add.s32 	%r565, %r562, %r564;
	mad.lo.s32 	%r566, %r565, -402653184, %r558;
	mul.wide.s32 	%rd103, %r566, 4;
	add.s64 	%rd104, %rd2, %rd103;
	ld.global.v4.u32 	{%r567, %r568, %r569, %r570}, [%rd104];
	or.b32  	%r571, %r541, 128;
	add.s32 	%r572, %r571, %r87;
	mad.lo.s32 	%r573, %r572, 12288, %r25;
	mul.hi.s32 	%r574, %r573, 715827883;
	shr.u32 	%r575, %r574, 31;
	shr.s32 	%r576, %r574, 26;
	add.s32 	%r577, %r576, %r575;
	setp.lt.s32 	%p174, %r573, 0;
	mul.lo.s32 	%r578, %r577, 402653184;
	setp.ne.s32 	%p175, %r578, %r573;
	and.pred  	%p176, %p174, %p175;
	selp.s32 	%r579, -1, 0, %p176;
	add.s32 	%r580, %r577, %r579;
	mad.lo.s32 	%r581, %r580, -402653184, %r573;
	mul.wide.s32 	%rd105, %r581, 4;
	add.s64 	%rd106, %rd2, %rd105;
	ld.global.v4.u32 	{%r582, %r583, %r584, %r585}, [%rd106];
	or.b32  	%r586, %r541, 192;
	add.s32 	%r587, %r586, %r87;
	mad.lo.s32 	%r588, %r587, 12288, %r25;
	mul.hi.s32 	%r589, %r588, 715827883;
	shr.u32 	%r590, %r589, 31;
	shr.s32 	%r591, %r589, 26;
	add.s32 	%r592, %r591, %r590;
	setp.lt.s32 	%p177, %r588, 0;
	mul.lo.s32 	%r593, %r592, 402653184;
	setp.ne.s32 	%p178, %r593, %r588;
	and.pred  	%p179, %p177, %p178;
	selp.s32 	%r594, -1, 0, %p179;
	add.s32 	%r595, %r592, %r594;
	mad.lo.s32 	%r596, %r595, -402653184, %r588;
	mul.wide.s32 	%rd107, %r596, 4;
	add.s64 	%rd108, %rd2, %rd107;
	ld.global.v4.u32 	{%r597, %r598, %r599, %r600}, [%rd108];
	selp.b32 	%r601, %r554, %r552, %p167;
	shfl.sync.bfly.b32	%r602, %r601, 8, 31, -1;
	selp.b32 	%r477, %r552, %r602, %p167;
	selp.b32 	%r478, %r602, %r554, %p167;
	selp.b32 	%r603, %r555, %r553, %p167;
	shfl.sync.bfly.b32	%r604, %r603, 8, 31, -1;
	selp.b32 	%r485, %r553, %r604, %p167;
	selp.b32 	%r486, %r604, %r555, %p167;
	selp.b32 	%r605, %r569, %r567, %p167;
	shfl.sync.bfly.b32	%r606, %r605, 8, 31, -1;
	selp.b32 	%r493, %r567, %r606, %p167;
	selp.b32 	%r494, %r606, %r569, %p167;
	selp.b32 	%r607, %r570, %r568, %p167;
	shfl.sync.bfly.b32	%r608, %r607, 8, 31, -1;
	selp.b32 	%r501, %r568, %r608, %p167;
	selp.b32 	%r502, %r608, %r570, %p167;
	selp.b32 	%r609, %r584, %r582, %p167;
	shfl.sync.bfly.b32	%r610, %r609, 8, 31, -1;
	selp.b32 	%r509, %r582, %r610, %p167;
	selp.b32 	%r510, %r610, %r584, %p167;
	selp.b32 	%r611, %r585, %r583, %p167;
	shfl.sync.bfly.b32	%r612, %r611, 8, 31, -1;
	selp.b32 	%r517, %r583, %r612, %p167;
	selp.b32 	%r518, %r612, %r585, %p167;
	selp.b32 	%r613, %r599, %r597, %p167;
	shfl.sync.bfly.b32	%r614, %r613, 8, 31, -1;
	selp.b32 	%r525, %r597, %r614, %p167;
	selp.b32 	%r526, %r614, %r599, %p167;
	selp.b32 	%r615, %r600, %r598, %p167;
	shfl.sync.bfly.b32	%r616, %r615, 8, 31, -1;
	selp.b32 	%r533, %r598, %r616, %p167;
	selp.b32 	%r534, %r616, %r600, %p167;
	mov.u32 	%r535, 21520;
	// begin inline asm
	prmt.b32 %r476, %r477, %r478, %r535;
	// end inline asm
	mov.u32 	%r539, 30258;
	// begin inline asm
	prmt.b32 %r480, %r477, %r478, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r484, %r485, %r486, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r488, %r485, %r486, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r492, %r493, %r494, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r496, %r493, %r494, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r500, %r501, %r502, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r504, %r501, %r502, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r508, %r509, %r510, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r512, %r509, %r510, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r516, %r517, %r518, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r520, %r517, %r518, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r524, %r525, %r526, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r528, %r525, %r526, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r532, %r533, %r534, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r536, %r533, %r534, %r539;
	// end inline asm
	st.shared.u32 	[%rd7], %r476;
	st.shared.u32 	[%rd8], %r480;
	st.shared.u32 	[%rd9], %r484;
	st.shared.u32 	[%rd10], %r488;
	st.shared.u32 	[%rd11], %r492;
	st.shared.u32 	[%rd12], %r496;
	st.shared.u32 	[%rd13], %r500;
	st.shared.u32 	[%rd14], %r504;
	st.shared.u32 	[%rd15], %r508;
	st.shared.u32 	[%rd16], %r512;
	st.shared.u32 	[%rd17], %r516;
	st.shared.u32 	[%rd18], %r520;
	st.shared.u32 	[%rd19], %r524;
	st.shared.u32 	[%rd20], %r528;
	st.shared.u32 	[%rd21], %r532;
	st.shared.u32 	[%rd22], %r536;
	bar.sync 	0;
	mov.u64 	%rd166, %rd36;
	mov.u64 	%rd167, %rd35;
	mov.u32 	%r1649, %r1642;
	mov.u32 	%r1650, %r1643;
	mov.u32 	%r1651, %r1644;
	mov.u32 	%r1652, %r1645;
	mov.u32 	%r1655, %r1640;
$L__BB0_32:                             // %L12197
                                        //   Parent Loop BB0_31 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1645, %r1654;
	mov.u32 	%r1644, %r1653;
	mov.u32 	%r1643, %r1652;
	mov.u32 	%r1642, %r1651;
	or.b32  	%r1523, %r1655, %r27;
	or.b32  	%r1524, %r1523, %r62;
	add.s32 	%r1525, %r1524, %r39;
	bfe.u32 	%r1526, %r1525, 5, 3;
	mul.lo.s32 	%r1527, %r1526, 1057;
	bfe.s32 	%r1528, %r1525, 1, 1;
	and.b32  	%r1529, %r1528, 260;
	and.b32  	%r1530, %r1525, 1;
	neg.s32 	%r1531, %r1530;
	and.b32  	%r1532, %r1531, 520;
	or.b32  	%r1533, %r28, %r1532;
	add.s32 	%r1534, %r1533, %r1529;
	add.s32 	%r1535, %r1534, %r1527;
	add.s32 	%r1536, %r1535, %r31;
	add.s32 	%r1537, %r1536, %r32;
	mul.wide.u32 	%rd109, %r1537, 4;
	add.s64 	%rd111, %rd52, %rd109;
	ld.shared.u32 	%r1653, [%rd111];
	// begin inline asm
	mov.b32 %r622, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r633, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r621, %r1653, -2004318072;
	mov.u32 	%r620, 983055;
	// begin inline asm
	lop3.b32 %r619, %r620, %r621, %r622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r623, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r624, %r622, %r623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r627, %r619, %r624;
	// end inline asm
	mov.u32 	%r631, 15728880;
	// begin inline asm
	lop3.b32 %r630, %r631, %r621, %r633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r634, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r635, %r633, %r634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r638, %r630, %r635;
	// end inline asm
	shr.u32 	%r643, %r621, 8;
	// begin inline asm
	lop3.b32 %r641, %r620, %r643, %r622, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r645, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r646, %r622, %r645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r649, %r641, %r646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r652, %r631, %r643, %r633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r656, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r657, %r633, %r656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r660, %r652, %r657;
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r667, %r1649, -2004318072;
	// begin inline asm
	lop3.b32 %r665, %r620, %r667, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r668, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r676, %r631, %r667, %r679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r681, %r679, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r684, %r676, %r681;
	// end inline asm
	shr.u32 	%r689, %r667, 8;
	// begin inline asm
	lop3.b32 %r687, %r620, %r689, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r668, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r698, %r631, %r689, %r679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r679, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r711, %r142, %r673, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r717, %r142, %r684, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r723, %r142, %r695, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r729, %r142, %r706, %r1640;
	// end inline asm
	// begin inline asm
	mov.b32 %r738, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r737, %r1642, -2004318072;
	// begin inline asm
	lop3.b32 %r735, %r620, %r737, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r738, %r739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r743, %r735, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r746, %r631, %r737, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r749, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	shr.u32 	%r759, %r737, 8;
	// begin inline asm
	lop3.b32 %r757, %r620, %r759, %r738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r761, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r738, %r761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r765, %r757, %r762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r768, %r631, %r759, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r773, %r749, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r776, %r768, %r773;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r779, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r781, %r779, %r743, %r711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r785, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r787, %r785, %r754, %r717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r791, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r793, %r791, %r765, %r723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r797, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r799, %r797, %r776, %r729;
	// end inline asm
	// begin inline asm
	mov.b32 %r808, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r819, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r807, %r1644, -2004318072;
	// begin inline asm
	lop3.b32 %r805, %r620, %r807, %r808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r809, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r810, %r808, %r809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r813, %r805, %r810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r816, %r631, %r807, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r821, %r819, %r820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r824, %r816, %r821;
	// end inline asm
	shr.u32 	%r829, %r807, 8;
	// begin inline asm
	lop3.b32 %r827, %r620, %r829, %r808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r831, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r832, %r808, %r831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r835, %r827, %r832;
	// end inline asm
	// begin inline asm
	lop3.b32 %r838, %r631, %r829, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r842, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r819, %r842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r846, %r838, %r843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r851, %r204, %r813, %r781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r857, %r204, %r824, %r787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r863, %r204, %r835, %r793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r204, %r846, %r799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r873, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r904, %r873, %r627, %r851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r879, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r901, %r879, %r638, %r857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r885, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r913, %r885, %r649, %r863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r891, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r910, %r891, %r660, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r897, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r899, %r897, %r901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r902, %r238, %r904, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r906, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r908, %r906, %r910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r911, %r238, %r913, %r908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r915, %r241, %r904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r918, %r238, %r901, %r915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r922, %r241, %r913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r925, %r238, %r910, %r922;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r956, %r953}, {%r244, %r250, %r247, %r253}, {%r902, %r918}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r965, %r962}, {%r244, %r250, %r247, %r253}, {%r911, %r925}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r949, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r951, %r949, %r953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r954, %r256, %r956, %r951;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r958, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r960, %r958, %r962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r963, %r256, %r965, %r960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r967, %r259, %r956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r970, %r256, %r953, %r967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r974, %r259, %r965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r977, %r256, %r962, %r974;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r981, %r982}, {%r262, %r268, %r265, %r271}, {%r954, %r970}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r991, %r992}, {%r262, %r268, %r265, %r271}, {%r963, %r977}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1001, %r57, %r981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1004, %r57, %r982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1007, %r57, %r991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1010, %r57, %r992;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs128, %rs128};
	// end inline asm
	mov.u16 	%rs51, 18176;
	// begin inline asm
	mov.b32 %r1014, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1015, %r1001, %r1013;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1018, %r1015, %r1014;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1023, %r1004, %r1021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1026, %r1023, %r1022;
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1031, %r1007, %r1029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1034, %r1031, %r1030;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1039, %r1010, %r1037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1042, %r1039, %r1038;
	// end inline asm
	mov.u16 	%rs65, 26112;
	// begin inline asm
	mov.b32 %r1048, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1046, %r1018, %r1048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1049, %r1026, %r1048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1034, %r1048;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1042, %r1048;
	// end inline asm
	mov.u32 	%r1061, 25152;
	// begin inline asm
	prmt.b32 %r1058, %r1046, %r1052, %r1061;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1062, %r1049, %r1055, %r1061;
	// end inline asm
	shl.b32 	%r1069, %r1062, 4;
	mov.u32 	%r1067, 252645135;
	// begin inline asm
	lop3.b32 %r1066, %r1067, %r1058, %r1069, 202;
	// end inline asm
	st.shared.u32 	[%rd166], %r1066;
	add.s32 	%r1538, %r29, %r1532;
	add.s32 	%r1539, %r1538, %r1529;
	add.s32 	%r1540, %r1539, %r1527;
	add.s32 	%r1541, %r1540, %r31;
	add.s32 	%r1542, %r1541, %r32;
	mul.wide.u32 	%rd112, %r1542, 4;
	add.s64 	%rd113, %rd52, %rd112;
	ld.shared.u32 	%r1654, [%rd113];
	// begin inline asm
	mov.b32 %r1075, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1074, %r1654, -2004318072;
	// begin inline asm
	lop3.b32 %r1072, %r620, %r1074, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1075, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r631, %r1074, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1086, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	shr.u32 	%r1096, %r1074, 8;
	// begin inline asm
	lop3.b32 %r1094, %r620, %r1096, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1075, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r631, %r1096, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1086, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1120, %r1650, -2004318072;
	// begin inline asm
	lop3.b32 %r1118, %r620, %r1120, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1121, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r631, %r1120, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1134, %r1132, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1137, %r1129, %r1134;
	// end inline asm
	shr.u32 	%r1142, %r1120, 8;
	// begin inline asm
	lop3.b32 %r1140, %r620, %r1142, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1121, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r631, %r1142, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1132, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1164, %r142, %r1126, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1170, %r142, %r1137, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1176, %r142, %r1148, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1182, %r142, %r1159, %r1640;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1190, %r1643, -2004318072;
	// begin inline asm
	lop3.b32 %r1188, %r620, %r1190, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1191, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1199, %r631, %r1190, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1202, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	shr.u32 	%r1212, %r1190, 8;
	// begin inline asm
	lop3.b32 %r1210, %r620, %r1212, %r1191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1191, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r631, %r1212, %r1202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1202, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1234, %r1232, %r1196, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1238, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1240, %r1238, %r1207, %r1170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1246, %r1244, %r1218, %r1176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1252, %r1250, %r1229, %r1182;
	// end inline asm
	// begin inline asm
	mov.b32 %r1261, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1272, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1260, %r1645, -2004318072;
	// begin inline asm
	lop3.b32 %r1258, %r620, %r1260, %r1261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1262, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1263, %r1261, %r1262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1266, %r1258, %r1263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1269, %r631, %r1260, %r1272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1273, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1274, %r1272, %r1273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1277, %r1269, %r1274;
	// end inline asm
	shr.u32 	%r1282, %r1260, 8;
	// begin inline asm
	lop3.b32 %r1280, %r620, %r1282, %r1261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1284, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1285, %r1261, %r1284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1288, %r1280, %r1285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1291, %r631, %r1282, %r1272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1295, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1296, %r1272, %r1295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1299, %r1291, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r204, %r1266, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r204, %r1277, %r1240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1316, %r204, %r1288, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r204, %r1299, %r1252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1357, %r1326, %r1080, %r1304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1354, %r1332, %r1091, %r1310;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1366, %r1338, %r1102, %r1316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1363, %r1344, %r1113, %r1322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1355, %r238, %r1357, %r1352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1359, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1361, %r1359, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1364, %r238, %r1366, %r1361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r241, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1371, %r238, %r1354, %r1368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1375, %r241, %r1366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1378, %r238, %r1363, %r1375;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1409, %r1406}, {%r244, %r250, %r247, %r253}, {%r1355, %r1371}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1418, %r1415}, {%r244, %r250, %r247, %r253}, {%r1364, %r1378}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1404, %r1402, %r1406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1407, %r256, %r1409, %r1404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1411, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1413, %r1411, %r1415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1416, %r256, %r1418, %r1413;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1420, %r259, %r1409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1423, %r256, %r1406, %r1420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1427, %r259, %r1418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1430, %r256, %r1415, %r1427;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1434, %r1435}, {%r262, %r268, %r265, %r271}, {%r1407, %r1423}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1444, %r1445}, {%r262, %r268, %r265, %r271}, {%r1416, %r1430}, {%r1640, %r1640};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1454, %r57, %r1434;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1457, %r57, %r1435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1460, %r57, %r1444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1463, %r57, %r1445;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1468, %r1454, %r1466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1471, %r1468, %r1467;
	// end inline asm
	// begin inline asm
	mov.b32 %r1474, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1476, %r1457, %r1474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1479, %r1476, %r1475;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1484, %r1460, %r1482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1487, %r1484, %r1483;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1492, %r1463, %r1490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1495, %r1492, %r1491;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1471, %r1501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1479, %r1501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1487, %r1501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1495, %r1501;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1511, %r1499, %r1505, %r1061;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1515, %r1502, %r1508, %r1061;
	// end inline asm
	shl.b32 	%r1522, %r1515, 4;
	// begin inline asm
	lop3.b32 %r1519, %r1067, %r1511, %r1522, 202;
	// end inline asm
	st.shared.u32 	[%rd167], %r1519;
	add.s32 	%r1655, %r1655, 32;
	add.s64 	%rd167, %rd167, 4228;
	add.s64 	%rd166, %rd166, 4228;
	setp.eq.s32 	%p180, %r1655, 256;
	mov.u32 	%r1649, %r1642;
	mov.u32 	%r1650, %r1643;
	mov.u32 	%r1651, %r1644;
	mov.u32 	%r1652, %r1645;
	@%p180 bra 	$L__BB0_33;
	bra.uni 	$L__BB0_32;
$L__BB0_33:                             // %guard_exit9609
                                        //   in Loop: Header=BB0_31 Depth=1
	bar.sync 	0;
	or.b32  	%r66, %r39, %r22;
	ld.shared.u32 	%r1548, [%rd23];
	ld.shared.u32 	%r1549, [%rd24+128];
	ld.shared.u32 	%r1556, [%rd25+4];
	ld.shared.u32 	%r1557, [%rd25+132];
	or.b32  	%r67, %r66, 64;
	ld.shared.u32 	%r1564, [%rd26];
	ld.shared.u32 	%r1565, [%rd27+128];
	ld.shared.u32 	%r1572, [%rd28+4];
	ld.shared.u32 	%r1573, [%rd28+132];
	ld.shared.u32 	%r1580, [%rd29];
	ld.shared.u32 	%r1581, [%rd30+128];
	ld.shared.u32 	%r1588, [%rd31+4];
	ld.shared.u32 	%r1589, [%rd31+132];
	ld.shared.u32 	%r1596, [%rd32];
	ld.shared.u32 	%r1597, [%rd33+128];
	ld.shared.u32 	%r1604, [%rd34+4];
	ld.shared.u32 	%r1605, [%rd34+132];
	// begin inline asm
	prmt.b32 %r1543, %r1548, %r1549, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1547, %r1548, %r1549, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1551, %r1556, %r1557, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1555, %r1556, %r1557, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1559, %r1564, %r1565, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1563, %r1564, %r1565, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1567, %r1572, %r1573, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1571, %r1572, %r1573, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1575, %r1580, %r1581, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1579, %r1580, %r1581, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1583, %r1588, %r1589, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1587, %r1588, %r1589, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1591, %r1596, %r1597, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1595, %r1596, %r1597, %r539;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1599, %r1604, %r1605, %r535;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1603, %r1604, %r1605, %r539;
	// end inline asm
	selp.b32 	%r1607, %r1547, %r1543, %p167;
	shfl.sync.bfly.b32	%r72, %r1607, 8, 31, -1;
	selp.b32 	%r1608, %r1555, %r1551, %p167;
	shfl.sync.bfly.b32	%r73, %r1608, 8, 31, -1;
	selp.b32 	%r1609, %r1563, %r1559, %p167;
	shfl.sync.bfly.b32	%r1610, %r1609, 8, 31, -1;
	selp.b32 	%r1611, %r1571, %r1567, %p167;
	shfl.sync.bfly.b32	%r1612, %r1611, 8, 31, -1;
	selp.b32 	%r1613, %r1579, %r1575, %p167;
	shfl.sync.bfly.b32	%r1614, %r1613, 8, 31, -1;
	selp.b32 	%r1615, %r1587, %r1583, %p167;
	shfl.sync.bfly.b32	%r1616, %r1615, 8, 31, -1;
	selp.b32 	%r1617, %r1595, %r1591, %p167;
	shfl.sync.bfly.b32	%r1618, %r1617, 8, 31, -1;
	selp.b32 	%r1619, %r1603, %r1599, %p167;
	shfl.sync.bfly.b32	%r1620, %r1619, 8, 31, -1;
	setp.lt.u32 	%p182, %r66, 96;
	shl.b32 	%r1641, %r66, 11;
	@%p182 bra 	$L__BB0_35;
// %bb.34:                              // %pass8977
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r1621, %r73, %r1555, %p167;
	selp.b32 	%r1622, %r1551, %r73, %p167;
	selp.b32 	%r1623, %r72, %r1547, %p167;
	selp.b32 	%r1624, %r1543, %r72, %p167;
	or.b32  	%r1626, %r1641, %r30;
	or.b32  	%r1627, %r1626, %r24;
	cvt.s64.s32 	%rd114, %r1627;
	add.s64 	%rd115, %rd114, %rd6;
	shr.u64 	%rd116, %rd115, 38;
	add.s64 	%rd117, %rd115, %rd116;
	shr.s64 	%rd118, %rd117, 26;
	setp.lt.s64 	%p184, %rd115, 0;
	and.b64  	%rd119, %rd117, -67108864;
	setp.ne.s64 	%p185, %rd119, %rd115;
	and.pred  	%p186, %p184, %p185;
	selp.u64 	%rd120, 1, 0, %p186;
	sub.s64 	%rd121, %rd120, %rd118;
	shl.b64 	%rd122, %rd121, 26;
	add.s64 	%rd123, %rd122, %rd115;
	shl.b64 	%rd124, %rd123, 2;
	add.s64 	%rd125, %rd3, %rd124;
	st.global.v4.u32 	[%rd125], {%r1624, %r1622, %r1623, %r1621};
$L__BB0_35:                             // %pass8999
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r78, %r1575, %r1614, %p167;
	selp.b32 	%r79, %r1614, %r1579, %p167;
	selp.b32 	%r80, %r1583, %r1616, %p167;
	selp.b32 	%r81, %r1616, %r1587, %p167;
	selp.b32 	%r82, %r1591, %r1618, %p167;
	selp.b32 	%r83, %r1618, %r1595, %p167;
	selp.b32 	%r84, %r1599, %r1620, %p167;
	selp.b32 	%r85, %r1620, %r1603, %p167;
	setp.lt.u32 	%p187, %r67, 96;
	@%p187 bra 	$L__BB0_37;
// %bb.36:                              // %pass9093
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r74, %r1559, %r1610, %p167;
	selp.b32 	%r75, %r1610, %r1563, %p167;
	selp.b32 	%r76, %r1567, %r1612, %p167;
	selp.b32 	%r77, %r1612, %r1571, %p167;
	shl.b32 	%r1628, %r67, 11;
	or.b32  	%r1629, %r1628, %r30;
	or.b32  	%r1630, %r1629, %r24;
	cvt.s64.s32 	%rd126, %r1630;
	add.s64 	%rd127, %rd126, %rd6;
	shr.u64 	%rd128, %rd127, 38;
	add.s64 	%rd129, %rd127, %rd128;
	shr.s64 	%rd130, %rd129, 26;
	setp.lt.s64 	%p188, %rd127, 0;
	and.b64  	%rd131, %rd129, -67108864;
	setp.ne.s64 	%p189, %rd131, %rd127;
	and.pred  	%p190, %p188, %p189;
	selp.u64 	%rd132, 1, 0, %p190;
	sub.s64 	%rd133, %rd132, %rd130;
	shl.b64 	%rd134, %rd133, 26;
	add.s64 	%rd135, %rd134, %rd127;
	shl.b64 	%rd136, %rd135, 2;
	add.s64 	%rd137, %rd3, %rd136;
	st.global.v4.u32 	[%rd137], {%r74, %r76, %r75, %r77};
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %L20177
	st.global.u32 	[%rd5], %r1640;
	ret;
$L__BB0_9:                              // %L180
	mov.u32 	%r1639, 2;
	st.global.u32 	[%rd5], %r1639;
	mov.u64 	%rd164, exception1892;
	cvta.global.u64 	%rd165, %rd164;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd165;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L288
	mov.u32 	%r1638, 3;
	st.global.u32 	[%rd5], %r1638;
	mov.u64 	%rd162, exception1892;
	cvta.global.u64 	%rd163, %rd162;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd163;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd44, exception11911;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd46, exception11911;
	cvta.global.u64 	%rd47, %rd46;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd47;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd43;
	st.param.b32 	[param0+8], %r86;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
