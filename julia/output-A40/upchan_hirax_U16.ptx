// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1591[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<258>;
	.reg .b16 	%rs<100>;
	.reg .b32 	%r<1214>;
	.reg .f32 	%f<927>;
	.reg .b64 	%rd<143>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r150, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd30, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r155, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r155, 69887;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd31, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r151, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r3, %r2, 9;
	mov.u32 	%r4, %tid.y;
	shl.b32 	%r5, %r4, 5;
	or.b32  	%r156, %r3, %r1;
	or.b32  	%r157, %r156, %r5;
	mul.wide.u32 	%rd37, %r157, 4;
	add.s64 	%rd4, %rd31, %rd37;
	mov.u32 	%r158, 1;
	st.global.u32 	[%rd4], %r158;
	setp.lt.s32 	%p2, %r151, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L115
	ld.param.u32 	%r152, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r152, %r151;
	setp.gt.s32 	%p4, %r152, 131072;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L125
	ld.param.u32 	%r153, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r159, %r152, %r151;
	and.b32  	%r160, %r159, 255;
	setp.ne.s32 	%p6, %r160, 0;
	setp.lt.s32 	%p7, %r153, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r154, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r154, %r153;
	setp.gt.s32 	%p10, %r154, 8192;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L141
	sub.s32 	%r161, %r154, %r153;
	add.s32 	%r162, %r161, 3;
	and.b32  	%r163, %r162, 15;
	setp.eq.s32 	%p12, %r163, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass127
	shl.b32 	%r103, %r1, 1;
	and.b32  	%r171, %r103, 6;
	bfe.u32 	%r110, %r1, 2, 1;
	or.b32  	%r111, %r110, %r171;
	or.b32  	%r112, %r111, 8;
	mov.f32 	%f184, 0f40000000;
	mov.f32 	%f185, 0f427C0000;
	div.approx.f32 	%f160, %f185, %f184;
	cvt.rn.f32.s32 	%f186, %r111;
	sub.f32 	%f187, %f186, %f160;
	mov.f32 	%f216, 0f41800000;
	div.approx.f32 	%f162, %f187, %f216;
	setp.ne.f32 	%p18, %f162, 0f00000000;
	mov.f32 	%f894, 0f3F800000;
	mov.f32 	%f887, %f894;
	@%p18 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L438
	sin.approx.f32 	%f217, %f162;
	div.approx.f32 	%f887, %f217, %f162;
$L__BB0_10:                             // %L441
	cvt.rn.f32.s32 	%f220, %r112;
	sub.f32 	%f221, %f220, %f160;
	div.approx.f32 	%f5, %f221, %f216;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	mov.f32 	%f888, %f894;
	@%p24 bra 	$L__BB0_12;
// %bb.11:                              // %L458
	sin.approx.f32 	%f251, %f5;
	div.approx.f32 	%f888, %f251, %f5;
$L__BB0_12:                             // %L461
	or.b32  	%r189, %r111, 16;
	or.b32  	%r7, %r111, 24;
	cvt.rn.f32.s32 	%f255, %r189;
	sub.f32 	%f256, %f255, %f160;
	div.approx.f32 	%f9, %f256, %f216;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	mov.f32 	%f889, %f894;
	@%p30 bra 	$L__BB0_14;
// %bb.13:                              // %L540
	sin.approx.f32 	%f286, %f9;
	div.approx.f32 	%f889, %f286, %f9;
$L__BB0_14:                             // %L543
	cvt.rn.f32.s32 	%f289, %r7;
	sub.f32 	%f290, %f289, %f160;
	div.approx.f32 	%f14, %f290, %f216;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	mov.f32 	%f890, %f894;
	@%p36 bra 	$L__BB0_16;
// %bb.15:                              // %L560
	sin.approx.f32 	%f320, %f14;
	div.approx.f32 	%f890, %f320, %f14;
$L__BB0_16:                             // %L563
	or.b32  	%r207, %r111, 32;
	or.b32  	%r9, %r111, 40;
	cvt.rn.f32.s32 	%f324, %r207;
	sub.f32 	%f325, %f324, %f160;
	div.approx.f32 	%f18, %f325, %f216;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	mov.f32 	%f891, %f894;
	@%p42 bra 	$L__BB0_18;
// %bb.17:                              // %L642
	sin.approx.f32 	%f355, %f18;
	div.approx.f32 	%f891, %f355, %f18;
$L__BB0_18:                             // %L645
	cvt.rn.f32.s32 	%f358, %r9;
	sub.f32 	%f359, %f358, %f160;
	div.approx.f32 	%f23, %f359, %f216;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	mov.f32 	%f892, %f894;
	@%p48 bra 	$L__BB0_20;
// %bb.19:                              // %L662
	sin.approx.f32 	%f389, %f23;
	div.approx.f32 	%f892, %f389, %f23;
$L__BB0_20:                             // %L665
	or.b32  	%r225, %r111, 48;
	or.b32  	%r11, %r111, 56;
	cvt.rn.f32.s32 	%f393, %r225;
	sub.f32 	%f394, %f393, %f160;
	div.approx.f32 	%f27, %f394, %f216;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	mov.f32 	%f893, %f894;
	@%p54 bra 	$L__BB0_22;
// %bb.21:                              // %L744
	sin.approx.f32 	%f424, %f27;
	div.approx.f32 	%f893, %f424, %f27;
$L__BB0_22:                             // %L747
	cvt.rn.f32.s32 	%f427, %r11;
	sub.f32 	%f428, %f427, %f160;
	div.approx.f32 	%f32, %f428, %f216;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	@%p60 bra 	$L__BB0_24;
// %bb.23:                              // %L764
	sin.approx.f32 	%f458, %f32;
	div.approx.f32 	%f894, %f458, %f32;
$L__BB0_24:                             // %L767
	mul.lo.s32 	%r13, %r111, 15;
	cvt.rn.f32.s32 	%f461, %r13;
	div.approx.f32 	%f35, %f461, %f216;
	abs.f32 	%f897, %f35;
	setp.lt.f32 	%p61, %f897, 0f40000000;
	@%p61 bra 	$L__BB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f897, 0f4B800000;
	@%p62 bra 	$L__BB0_32;
	bra.uni 	$L__BB0_26;
$L__BB0_32:
	mov.b32 	%r15, %f897;
	and.b32  	%r243, %r15, 8388607;
	or.b32  	%r1189, %r243, 1065353216;
	mov.b32 	%f896, %r1189;
	add.s32 	%r244, %r15, -1073741824;
	and.b32  	%r1190, %r244, -8388608;
	setp.eq.s32 	%p68, %r1190, 0;
	@%p68 bra 	$L__BB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f472, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f471,%f472;
	// end inline asm
$L__BB0_34:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r245, %r1190, 192937984;
	add.s32 	%r246, %r1189, %r245;
	mov.b32 	%f473, %r246;
	mul.f32 	%f474, %f471, %f473;
	sub.f32 	%f475, %f473, %f474;
	fma.rn.f32 	%f476, %f475, %f471, %f474;
	sub.f32 	%f477, %f473, %f476;
	fma.rz.f32 	%f478, %f477, %f471, %f476;
	cvt.rzi.f32.f32 	%f479, %f478;
	sub.f32 	%f896, %f473, %f479;
	sub.s32 	%r1190, %r1190, %r245;
	mov.b32 	%r1189, %f896;
	setp.ne.s32 	%p69, %r1190, 0;
	setp.ne.s32 	%p70, %r1189, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	$L__BB0_34;
$L__BB0_35:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r15, 2139095039;
	selp.f32 	%f480, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f481, %f896, 0f34000000;
	mul.f32 	%f897, %f480, %f481;
	bra.uni 	$L__BB0_36;
$L__BB0_26:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f464, %f897, %f184;
	cvt.rzi.f32.f32 	%f895, %f464;
	fma.rn.f32 	%f38, %f895, 0fC0000000, %f897;
	mov.b32 	%r14, %f38;
	setp.lt.u32 	%p63, %r14, 1073741824;
	@%p63 bra 	$L__BB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r14, -2147483647;
	@%p64 bra 	$L__BB0_29;
// %bb.28:
	add.f32 	%f469, %f895, 0fBF800000;
	setp.lt.f32 	%p67, %f38, 0fC0000000;
	add.f32 	%f470, %f469, 0fBF800000;
	selp.f32 	%f895, %f470, %f469, %p67;
	bra.uni 	$L__BB0_31;
$L__BB0_29:
	add.f32 	%f895, %f895, 0f3F800000;
	setp.ltu.f32 	%p65, %f38, 0f40800000;
	@%p65 bra 	$L__BB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f465, %f895, 0f3F800000;
	fma.rn.f32 	%f467, %f184, 0fC0400000, %f38;
	setp.ge.f32 	%p66, %f467, 0f00000000;
	add.f32 	%f468, %f465, 0f3F800000;
	selp.f32 	%f895, %f468, %f465, %p66;
$L__BB0_31:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f897, %f895, 0fC0000000, %f897;
$L__BB0_36:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f482, %f897;
	setp.gtu.f32 	%p73, %f482, 0f7F800000;
	@%p73 bra 	$L__BB0_38;
// %bb.37:
	mov.b32 	%r247, %f35;
	and.b32  	%r248, %r247, -2147483648;
	mov.b32 	%r249, %f897;
	or.b32  	%r250, %r248, %r249;
	mov.b32 	%f897, %r250;
$L__BB0_38:                             // %__nv_fmodf.exit
	add.s32 	%r259, %r13, 120;
	cvt.rn.f32.s32 	%f513, %r259;
	div.approx.f32 	%f54, %f513, %f216;
	abs.f32 	%f901, %f54;
	setp.lt.f32 	%p81, %f901, 0f40000000;
	@%p81 bra 	$L__BB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f901, 0f4B800000;
	@%p82 bra 	$L__BB0_46;
	bra.uni 	$L__BB0_40;
$L__BB0_46:
	mov.b32 	%r23, %f901;
	and.b32  	%r260, %r23, 8388607;
	or.b32  	%r1191, %r260, 1065353216;
	mov.b32 	%f900, %r1191;
	add.s32 	%r261, %r23, -1073741824;
	and.b32  	%r1192, %r261, -8388608;
	setp.eq.s32 	%p88, %r1192, 0;
	@%p88 bra 	$L__BB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i504.preheader
	mov.f32 	%f524, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f523,%f524;
	// end inline asm
$L__BB0_48:                             // %__nv_fmaf_rn.exit4.i.i.i504
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r262, %r1192, 192937984;
	add.s32 	%r263, %r1191, %r262;
	mov.b32 	%f525, %r263;
	mul.f32 	%f526, %f523, %f525;
	sub.f32 	%f527, %f525, %f526;
	fma.rn.f32 	%f528, %f527, %f523, %f526;
	sub.f32 	%f529, %f525, %f528;
	fma.rz.f32 	%f530, %f529, %f523, %f528;
	cvt.rzi.f32.f32 	%f531, %f530;
	sub.f32 	%f900, %f525, %f531;
	sub.s32 	%r1192, %r1192, %r262;
	mov.b32 	%r1191, %f900;
	setp.ne.s32 	%p89, %r1192, 0;
	setp.ne.s32 	%p90, %r1191, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	$L__BB0_48;
$L__BB0_49:                             // %__internal_fmodf_slowpath_mod.exit.i.i506
	setp.gt.u32 	%p92, %r23, 2139095039;
	selp.f32 	%f532, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f533, %f900, 0f34000000;
	mul.f32 	%f901, %f532, %f533;
	bra.uni 	$L__BB0_50;
$L__BB0_40:                             // %__nv_fast_fdividef.exit.i.i.i483
	div.approx.f32 	%f516, %f901, %f184;
	cvt.rzi.f32.f32 	%f899, %f516;
	fma.rn.f32 	%f57, %f899, 0fC0000000, %f901;
	mov.b32 	%r22, %f57;
	setp.lt.u32 	%p83, %r22, 1073741824;
	@%p83 bra 	$L__BB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r22, -2147483647;
	@%p84 bra 	$L__BB0_43;
// %bb.42:
	add.f32 	%f521, %f899, 0fBF800000;
	setp.lt.f32 	%p87, %f57, 0fC0000000;
	add.f32 	%f522, %f521, 0fBF800000;
	selp.f32 	%f899, %f522, %f521, %p87;
	bra.uni 	$L__BB0_45;
$L__BB0_43:
	add.f32 	%f899, %f899, 0f3F800000;
	setp.ltu.f32 	%p85, %f57, 0f40800000;
	@%p85 bra 	$L__BB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i487
	add.f32 	%f517, %f899, 0f3F800000;
	fma.rn.f32 	%f519, %f184, 0fC0400000, %f57;
	setp.ge.f32 	%p86, %f519, 0f00000000;
	add.f32 	%f520, %f517, 0f3F800000;
	selp.f32 	%f899, %f520, %f517, %p86;
$L__BB0_45:                             // %__internal_fmodf_fastpath_quot.exit.i.i490
	fma.rn.f32 	%f901, %f899, 0fC0000000, %f901;
$L__BB0_50:                             // %__internal_fmodf_kernel.exit.i509
	shr.u32 	%r108, %r1, 1;
	abs.f32 	%f534, %f901;
	setp.gtu.f32 	%p93, %f534, 0f7F800000;
	@%p93 bra 	$L__BB0_52;
// %bb.51:
	mov.b32 	%r264, %f54;
	and.b32  	%r265, %r264, -2147483648;
	mov.b32 	%r266, %f901;
	or.b32  	%r267, %r265, %r266;
	mov.b32 	%f901, %r267;
$L__BB0_52:                             // %__nv_fmodf.exit510
	shr.u32 	%r32, %r1, 3;
	and.b32  	%r33, %r32, 2;
	or.b32  	%r282, %r110, %r33;
	and.b32  	%r34, %r108, 4;
	or.b32  	%r35, %r282, %r34;
	and.b32  	%r283, %r1, 3;
	mul.lo.s32 	%r284, %r283, %r35;
	shl.b32 	%r285, %r284, 1;
	neg.s32 	%r286, %r285;
	cvt.rn.f32.s32 	%f567, %r286;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f71, %f567, %f568;
	abs.f32 	%f905, %f71;
	setp.lt.f32 	%p101, %f905, 0f40000000;
	@%p101 bra 	$L__BB0_64;
// %bb.53:
	setp.gtu.f32 	%p102, %f905, 0f4B800000;
	@%p102 bra 	$L__BB0_60;
	bra.uni 	$L__BB0_54;
$L__BB0_60:
	mov.b32 	%r37, %f905;
	and.b32  	%r287, %r37, 8388607;
	or.b32  	%r1193, %r287, 1065353216;
	mov.b32 	%f904, %r1193;
	add.s32 	%r288, %r37, -1073741824;
	and.b32  	%r1194, %r288, -8388608;
	setp.eq.s32 	%p108, %r1194, 0;
	@%p108 bra 	$L__BB0_63;
// %bb.61:                              // %__nv_fmaf_rn.exit4.i.i.i535.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
$L__BB0_62:                             // %__nv_fmaf_rn.exit4.i.i.i535
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r289, %r1194, 192937984;
	add.s32 	%r290, %r1193, %r289;
	mov.b32 	%f579, %r290;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f904, %f579, %f585;
	sub.s32 	%r1194, %r1194, %r289;
	mov.b32 	%r1193, %f904;
	setp.ne.s32 	%p109, %r1194, 0;
	setp.ne.s32 	%p110, %r1193, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	$L__BB0_62;
$L__BB0_63:                             // %__internal_fmodf_slowpath_mod.exit.i.i537
	setp.gt.u32 	%p112, %r37, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f587, %f904, 0f34000000;
	mul.f32 	%f905, %f586, %f587;
	bra.uni 	$L__BB0_64;
$L__BB0_54:                             // %__nv_fast_fdividef.exit.i.i.i514
	div.approx.f32 	%f570, %f905, %f184;
	cvt.rzi.f32.f32 	%f903, %f570;
	fma.rn.f32 	%f74, %f903, 0fC0000000, %f905;
	mov.b32 	%r36, %f74;
	setp.lt.u32 	%p103, %r36, 1073741824;
	@%p103 bra 	$L__BB0_59;
// %bb.55:
	setp.lt.u32 	%p104, %r36, -2147483647;
	@%p104 bra 	$L__BB0_57;
// %bb.56:
	add.f32 	%f575, %f903, 0fBF800000;
	setp.lt.f32 	%p107, %f74, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f903, %f576, %f575, %p107;
	bra.uni 	$L__BB0_59;
$L__BB0_57:
	add.f32 	%f903, %f903, 0f3F800000;
	setp.ltu.f32 	%p105, %f74, 0f40800000;
	@%p105 bra 	$L__BB0_59;
// %bb.58:                              // %__nv_fmaf_rn.exit.i.i.i518
	add.f32 	%f571, %f903, 0f3F800000;
	fma.rn.f32 	%f573, %f184, 0fC0400000, %f74;
	setp.ge.f32 	%p106, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f903, %f574, %f571, %p106;
$L__BB0_59:                             // %__internal_fmodf_fastpath_quot.exit.i.i521
	fma.rn.f32 	%f905, %f903, 0fC0000000, %f905;
$L__BB0_64:                             // %__internal_fmodf_kernel.exit.i540
	abs.f32 	%f588, %f905;
	setp.gtu.f32 	%p113, %f588, 0f7F800000;
	@%p113 bra 	$L__BB0_66;
// %bb.65:
	mov.b32 	%r291, %f71;
	and.b32  	%r292, %r291, -2147483648;
	mov.b32 	%r293, %f905;
	or.b32  	%r294, %r292, %r293;
	mov.b32 	%f905, %r294;
$L__BB0_66:                             // %__nv_fmodf.exit541
	mov.u32 	%r303, -8;
	sub.s32 	%r304, %r303, %r171;
	mul.lo.s32 	%r305, %r35, %r304;
	cvt.rn.f32.s32 	%f619, %r305;
	div.approx.f32 	%f90, %f619, %f568;
	abs.f32 	%f909, %f90;
	setp.lt.f32 	%p121, %f909, 0f40000000;
	@%p121 bra 	$L__BB0_78;
// %bb.67:
	setp.gtu.f32 	%p122, %f909, 0f4B800000;
	@%p122 bra 	$L__BB0_74;
	bra.uni 	$L__BB0_68;
$L__BB0_74:
	mov.b32 	%r46, %f909;
	and.b32  	%r306, %r46, 8388607;
	or.b32  	%r1195, %r306, 1065353216;
	mov.b32 	%f908, %r1195;
	add.s32 	%r307, %r46, -1073741824;
	and.b32  	%r1196, %r307, -8388608;
	setp.eq.s32 	%p128, %r1196, 0;
	@%p128 bra 	$L__BB0_77;
// %bb.75:                              // %__nv_fmaf_rn.exit4.i.i.i566.preheader
	mov.f32 	%f630, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f629,%f630;
	// end inline asm
$L__BB0_76:                             // %__nv_fmaf_rn.exit4.i.i.i566
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r308, %r1196, 192937984;
	add.s32 	%r309, %r1195, %r308;
	mov.b32 	%f631, %r309;
	mul.f32 	%f632, %f629, %f631;
	sub.f32 	%f633, %f631, %f632;
	fma.rn.f32 	%f634, %f633, %f629, %f632;
	sub.f32 	%f635, %f631, %f634;
	fma.rz.f32 	%f636, %f635, %f629, %f634;
	cvt.rzi.f32.f32 	%f637, %f636;
	sub.f32 	%f908, %f631, %f637;
	sub.s32 	%r1196, %r1196, %r308;
	mov.b32 	%r1195, %f908;
	setp.ne.s32 	%p129, %r1196, 0;
	setp.ne.s32 	%p130, %r1195, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	$L__BB0_76;
$L__BB0_77:                             // %__internal_fmodf_slowpath_mod.exit.i.i568
	setp.gt.u32 	%p132, %r46, 2139095039;
	selp.f32 	%f638, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f639, %f908, 0f34000000;
	mul.f32 	%f909, %f638, %f639;
	bra.uni 	$L__BB0_78;
$L__BB0_68:                             // %__nv_fast_fdividef.exit.i.i.i545
	div.approx.f32 	%f622, %f909, %f184;
	cvt.rzi.f32.f32 	%f907, %f622;
	fma.rn.f32 	%f93, %f907, 0fC0000000, %f909;
	mov.b32 	%r45, %f93;
	setp.lt.u32 	%p123, %r45, 1073741824;
	@%p123 bra 	$L__BB0_73;
// %bb.69:
	setp.lt.u32 	%p124, %r45, -2147483647;
	@%p124 bra 	$L__BB0_71;
// %bb.70:
	add.f32 	%f627, %f907, 0fBF800000;
	setp.lt.f32 	%p127, %f93, 0fC0000000;
	add.f32 	%f628, %f627, 0fBF800000;
	selp.f32 	%f907, %f628, %f627, %p127;
	bra.uni 	$L__BB0_73;
$L__BB0_71:
	add.f32 	%f907, %f907, 0f3F800000;
	setp.ltu.f32 	%p125, %f93, 0f40800000;
	@%p125 bra 	$L__BB0_73;
// %bb.72:                              // %__nv_fmaf_rn.exit.i.i.i549
	add.f32 	%f623, %f907, 0f3F800000;
	fma.rn.f32 	%f625, %f184, 0fC0400000, %f93;
	setp.ge.f32 	%p126, %f625, 0f00000000;
	add.f32 	%f626, %f623, 0f3F800000;
	selp.f32 	%f907, %f626, %f623, %p126;
$L__BB0_73:                             // %__internal_fmodf_fastpath_quot.exit.i.i552
	fma.rn.f32 	%f909, %f907, 0fC0000000, %f909;
$L__BB0_78:                             // %__internal_fmodf_kernel.exit.i571
	mov.f32 	%f213, 0f00000000;
	abs.f32 	%f640, %f909;
	setp.gtu.f32 	%p133, %f640, 0f7F800000;
	@%p133 bra 	$L__BB0_80;
// %bb.79:
	mov.b32 	%r310, %f90;
	and.b32  	%r311, %r310, -2147483648;
	mov.b32 	%r312, %f909;
	or.b32  	%r313, %r311, %r312;
	mov.b32 	%f909, %r313;
$L__BB0_80:                             // %__nv_fmodf.exit572
	bfe.s32 	%r334, %r1, 2, 1;
	or.b32  	%r335, %r33, %r34;
	div.approx.f32 	%f107, %f213, %f216;
	abs.f32 	%f913, %f107;
	setp.lt.f32 	%p141, %f913, 0f40000000;
	@%p141 bra 	$L__BB0_92;
// %bb.81:
	setp.gtu.f32 	%p142, %f913, 0f4B800000;
	@%p142 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_82;
$L__BB0_88:
	mov.b32 	%r60, %f913;
	and.b32  	%r336, %r60, 8388607;
	or.b32  	%r1197, %r336, 1065353216;
	mov.b32 	%f912, %r1197;
	add.s32 	%r337, %r60, -1073741824;
	and.b32  	%r1198, %r337, -8388608;
	setp.eq.s32 	%p148, %r1198, 0;
	@%p148 bra 	$L__BB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i597.preheader
	mov.f32 	%f683, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f682,%f683;
	// end inline asm
$L__BB0_90:                             // %__nv_fmaf_rn.exit4.i.i.i597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r338, %r1198, 192937984;
	add.s32 	%r339, %r1197, %r338;
	mov.b32 	%f684, %r339;
	mul.f32 	%f685, %f682, %f684;
	sub.f32 	%f686, %f684, %f685;
	fma.rn.f32 	%f687, %f686, %f682, %f685;
	sub.f32 	%f688, %f684, %f687;
	fma.rz.f32 	%f689, %f688, %f682, %f687;
	cvt.rzi.f32.f32 	%f690, %f689;
	sub.f32 	%f912, %f684, %f690;
	sub.s32 	%r1198, %r1198, %r338;
	mov.b32 	%r1197, %f912;
	setp.ne.s32 	%p149, %r1198, 0;
	setp.ne.s32 	%p150, %r1197, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	$L__BB0_90;
$L__BB0_91:                             // %__internal_fmodf_slowpath_mod.exit.i.i599
	setp.gt.u32 	%p152, %r60, 2139095039;
	selp.f32 	%f691, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f692, %f912, 0f34000000;
	mul.f32 	%f913, %f691, %f692;
	bra.uni 	$L__BB0_92;
$L__BB0_82:                             // %__nv_fast_fdividef.exit.i.i.i576
	div.approx.f32 	%f675, %f913, %f184;
	cvt.rzi.f32.f32 	%f911, %f675;
	fma.rn.f32 	%f110, %f911, 0fC0000000, %f913;
	mov.b32 	%r59, %f110;
	setp.lt.u32 	%p143, %r59, 1073741824;
	@%p143 bra 	$L__BB0_87;
// %bb.83:
	setp.lt.u32 	%p144, %r59, -2147483647;
	@%p144 bra 	$L__BB0_85;
// %bb.84:
	add.f32 	%f680, %f911, 0fBF800000;
	setp.lt.f32 	%p147, %f110, 0fC0000000;
	add.f32 	%f681, %f680, 0fBF800000;
	selp.f32 	%f911, %f681, %f680, %p147;
	bra.uni 	$L__BB0_87;
$L__BB0_85:
	add.f32 	%f911, %f911, 0f3F800000;
	setp.ltu.f32 	%p145, %f110, 0f40800000;
	@%p145 bra 	$L__BB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i580
	add.f32 	%f676, %f911, 0f3F800000;
	fma.rn.f32 	%f678, %f184, 0fC0400000, %f110;
	setp.ge.f32 	%p146, %f678, 0f00000000;
	add.f32 	%f679, %f676, 0f3F800000;
	selp.f32 	%f911, %f679, %f676, %p146;
$L__BB0_87:                             // %__internal_fmodf_fastpath_quot.exit.i.i583
	fma.rn.f32 	%f913, %f911, 0fC0000000, %f913;
$L__BB0_92:                             // %__internal_fmodf_kernel.exit.i602
	sub.s32 	%r58, %r334, %r335;
	abs.f32 	%f693, %f913;
	setp.gtu.f32 	%p153, %f693, 0f7F800000;
	@%p153 bra 	$L__BB0_94;
// %bb.93:
	mov.b32 	%r340, %f107;
	and.b32  	%r341, %r340, -2147483648;
	mov.b32 	%r342, %f913;
	or.b32  	%r343, %r341, %r342;
	mov.b32 	%f913, %r343;
$L__BB0_94:                             // %__nv_fmodf.exit603
	shl.b32 	%r352, %r58, 1;
	cvt.rn.f32.s32 	%f724, %r352;
	div.approx.f32 	%f126, %f724, %f216;
	abs.f32 	%f917, %f126;
	setp.lt.f32 	%p161, %f917, 0f40000000;
	@%p161 bra 	$L__BB0_106;
// %bb.95:
	setp.gtu.f32 	%p162, %f917, 0f4B800000;
	@%p162 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_96;
$L__BB0_102:
	mov.b32 	%r68, %f917;
	and.b32  	%r353, %r68, 8388607;
	or.b32  	%r1199, %r353, 1065353216;
	mov.b32 	%f916, %r1199;
	add.s32 	%r354, %r68, -1073741824;
	and.b32  	%r1200, %r354, -8388608;
	setp.eq.s32 	%p168, %r1200, 0;
	@%p168 bra 	$L__BB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i628.preheader
	mov.f32 	%f735, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f734,%f735;
	// end inline asm
$L__BB0_104:                            // %__nv_fmaf_rn.exit4.i.i.i628
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r355, %r1200, 192937984;
	add.s32 	%r356, %r1199, %r355;
	mov.b32 	%f736, %r356;
	mul.f32 	%f737, %f734, %f736;
	sub.f32 	%f738, %f736, %f737;
	fma.rn.f32 	%f739, %f738, %f734, %f737;
	sub.f32 	%f740, %f736, %f739;
	fma.rz.f32 	%f741, %f740, %f734, %f739;
	cvt.rzi.f32.f32 	%f742, %f741;
	sub.f32 	%f916, %f736, %f742;
	sub.s32 	%r1200, %r1200, %r355;
	mov.b32 	%r1199, %f916;
	setp.ne.s32 	%p169, %r1200, 0;
	setp.ne.s32 	%p170, %r1199, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	$L__BB0_104;
$L__BB0_105:                            // %__internal_fmodf_slowpath_mod.exit.i.i630
	setp.gt.u32 	%p172, %r68, 2139095039;
	selp.f32 	%f743, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f744, %f916, 0f34000000;
	mul.f32 	%f917, %f743, %f744;
	bra.uni 	$L__BB0_106;
$L__BB0_96:                             // %__nv_fast_fdividef.exit.i.i.i607
	div.approx.f32 	%f727, %f917, %f184;
	cvt.rzi.f32.f32 	%f915, %f727;
	fma.rn.f32 	%f129, %f915, 0fC0000000, %f917;
	mov.b32 	%r67, %f129;
	setp.lt.u32 	%p163, %r67, 1073741824;
	@%p163 bra 	$L__BB0_101;
// %bb.97:
	setp.lt.u32 	%p164, %r67, -2147483647;
	@%p164 bra 	$L__BB0_99;
// %bb.98:
	add.f32 	%f732, %f915, 0fBF800000;
	setp.lt.f32 	%p167, %f129, 0fC0000000;
	add.f32 	%f733, %f732, 0fBF800000;
	selp.f32 	%f915, %f733, %f732, %p167;
	bra.uni 	$L__BB0_101;
$L__BB0_99:
	add.f32 	%f915, %f915, 0f3F800000;
	setp.ltu.f32 	%p165, %f129, 0f40800000;
	@%p165 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i611
	add.f32 	%f728, %f915, 0f3F800000;
	fma.rn.f32 	%f730, %f184, 0fC0400000, %f129;
	setp.ge.f32 	%p166, %f730, 0f00000000;
	add.f32 	%f731, %f728, 0f3F800000;
	selp.f32 	%f915, %f731, %f728, %p166;
$L__BB0_101:                            // %__internal_fmodf_fastpath_quot.exit.i.i614
	fma.rn.f32 	%f917, %f915, 0fC0000000, %f917;
$L__BB0_106:                            // %__internal_fmodf_kernel.exit.i633
	abs.f32 	%f745, %f917;
	setp.gtu.f32 	%p173, %f745, 0f7F800000;
	@%p173 bra 	$L__BB0_108;
// %bb.107:
	mov.b32 	%r357, %f126;
	and.b32  	%r358, %r357, -2147483648;
	mov.b32 	%r359, %f917;
	or.b32  	%r360, %r358, %r359;
	mov.b32 	%f917, %r360;
$L__BB0_108:                            // %__nv_fmodf.exit634
	div.approx.f32 	%f143, %f213, %f184;
	abs.f32 	%f925, %f143;
	setp.lt.f32 	%p181, %f925, 0f40000000;
	@%p181 bra 	$L__BB0_139;
// %bb.109:
	setp.gtu.f32 	%p182, %f925, 0f4B800000;
	@%p182 bra 	$L__BB0_135;
	bra.uni 	$L__BB0_110;
$L__BB0_135:
	mov.b32 	%r114, %f925;
	and.b32  	%r376, %r114, 8388607;
	or.b32  	%r1207, %r376, 1065353216;
	mov.b32 	%f924, %r1207;
	add.s32 	%r377, %r114, -1073741824;
	and.b32  	%r1208, %r377, -8388608;
	setp.eq.s32 	%p188, %r1208, 0;
	@%p188 bra 	$L__BB0_138;
// %bb.136:                             // %__nv_fmaf_rn.exit4.i.i.i690.preheader
	mov.f32 	%f788, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f787,%f788;
	// end inline asm
$L__BB0_137:                            // %__nv_fmaf_rn.exit4.i.i.i690
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r378, %r1208, 192937984;
	add.s32 	%r379, %r1207, %r378;
	mov.b32 	%f789, %r379;
	mul.f32 	%f790, %f787, %f789;
	sub.f32 	%f791, %f789, %f790;
	fma.rn.f32 	%f792, %f791, %f787, %f790;
	sub.f32 	%f793, %f789, %f792;
	fma.rz.f32 	%f794, %f793, %f787, %f792;
	cvt.rzi.f32.f32 	%f795, %f794;
	sub.f32 	%f924, %f789, %f795;
	sub.s32 	%r1208, %r1208, %r378;
	mov.b32 	%r1207, %f924;
	setp.ne.s32 	%p189, %r1208, 0;
	setp.ne.s32 	%p190, %r1207, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	$L__BB0_137;
$L__BB0_138:                            // %__internal_fmodf_slowpath_mod.exit.i.i692
	setp.gt.u32 	%p192, %r114, 2139095039;
	selp.f32 	%f796, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f797, %f924, 0f34000000;
	mul.f32 	%f925, %f796, %f797;
	bra.uni 	$L__BB0_139;
$L__BB0_110:                            // %__nv_fast_fdividef.exit.i.i.i669
	div.approx.f32 	%f780, %f925, %f184;
	cvt.rzi.f32.f32 	%f923, %f780;
	fma.rn.f32 	%f164, %f923, 0fC0000000, %f925;
	mov.b32 	%r113, %f164;
	setp.lt.u32 	%p183, %r113, 1073741824;
	@%p183 bra 	$L__BB0_134;
// %bb.111:
	setp.lt.u32 	%p184, %r113, -2147483647;
	@%p184 bra 	$L__BB0_132;
// %bb.112:
	add.f32 	%f785, %f923, 0fBF800000;
	setp.lt.f32 	%p187, %f164, 0fC0000000;
	add.f32 	%f786, %f785, 0fBF800000;
	selp.f32 	%f923, %f786, %f785, %p187;
	bra.uni 	$L__BB0_134;
$L__BB0_132:
	add.f32 	%f923, %f923, 0f3F800000;
	setp.ltu.f32 	%p185, %f164, 0f40800000;
	@%p185 bra 	$L__BB0_134;
// %bb.133:                             // %__nv_fmaf_rn.exit.i.i.i673
	add.f32 	%f781, %f923, 0f3F800000;
	fma.rn.f32 	%f783, %f184, 0fC0400000, %f164;
	setp.ge.f32 	%p186, %f783, 0f00000000;
	add.f32 	%f784, %f781, 0f3F800000;
	selp.f32 	%f923, %f784, %f781, %p186;
$L__BB0_134:                            // %__internal_fmodf_fastpath_quot.exit.i.i676
	fma.rn.f32 	%f925, %f923, 0fC0000000, %f925;
$L__BB0_139:                            // %__internal_fmodf_kernel.exit.i695
	shl.b32 	%r57, %r1, 29;
	abs.f32 	%f798, %f925;
	setp.gtu.f32 	%p193, %f798, 0f7F800000;
	@%p193 bra 	$L__BB0_141;
// %bb.140:
	mov.b32 	%r380, %f143;
	and.b32  	%r381, %r380, -2147483648;
	mov.b32 	%r382, %f925;
	or.b32  	%r383, %r381, %r382;
	mov.b32 	%f925, %r383;
$L__BB0_141:                            // %__nv_fmodf.exit696
	shr.s32 	%r392, %r57, 30;
	and.b32  	%r393, %r392, -2;
	cvt.rn.f32.s32 	%f831, %r393;
	div.approx.f32 	%f181, %f831, %f184;
	abs.f32 	%f921, %f181;
	setp.lt.f32 	%p202, %f921, 0f40000000;
	@%p202 bra 	$L__BB0_124;
// %bb.113:
	setp.gtu.f32 	%p203, %f921, 0f4B800000;
	@%p203 bra 	$L__BB0_120;
	bra.uni 	$L__BB0_114;
$L__BB0_120:
	mov.b32 	%r81, %f921;
	and.b32  	%r394, %r81, 8388607;
	or.b32  	%r1201, %r394, 1065353216;
	mov.b32 	%f920, %r1201;
	add.s32 	%r395, %r81, -1073741824;
	and.b32  	%r1202, %r395, -8388608;
	setp.eq.s32 	%p209, %r1202, 0;
	@%p209 bra 	$L__BB0_123;
// %bb.121:                             // %__nv_fmaf_rn.exit4.i.i.i659.preheader
	mov.f32 	%f842, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f841,%f842;
	// end inline asm
$L__BB0_122:                            // %__nv_fmaf_rn.exit4.i.i.i659
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r396, %r1202, 192937984;
	add.s32 	%r397, %r1201, %r396;
	mov.b32 	%f843, %r397;
	mul.f32 	%f844, %f841, %f843;
	sub.f32 	%f845, %f843, %f844;
	fma.rn.f32 	%f846, %f845, %f841, %f844;
	sub.f32 	%f847, %f843, %f846;
	fma.rz.f32 	%f848, %f847, %f841, %f846;
	cvt.rzi.f32.f32 	%f849, %f848;
	sub.f32 	%f920, %f843, %f849;
	sub.s32 	%r1202, %r1202, %r396;
	mov.b32 	%r1201, %f920;
	setp.ne.s32 	%p210, %r1202, 0;
	setp.ne.s32 	%p211, %r1201, 0;
	and.pred  	%p212, %p210, %p211;
	@%p212 bra 	$L__BB0_122;
$L__BB0_123:                            // %__internal_fmodf_slowpath_mod.exit.i.i661
	setp.gt.u32 	%p213, %r81, 2139095039;
	selp.f32 	%f850, 0f7FFFFFFF, 0f4B800000, %p213;
	mul.f32 	%f851, %f920, 0f34000000;
	mul.f32 	%f921, %f850, %f851;
	bra.uni 	$L__BB0_124;
$L__BB0_114:                            // %__nv_fast_fdividef.exit.i.i.i638
	div.approx.f32 	%f834, %f921, %f184;
	cvt.rzi.f32.f32 	%f919, %f834;
	fma.rn.f32 	%f146, %f919, 0fC0000000, %f921;
	mov.b32 	%r80, %f146;
	setp.lt.u32 	%p204, %r80, 1073741824;
	@%p204 bra 	$L__BB0_119;
// %bb.115:
	setp.lt.u32 	%p205, %r80, -2147483647;
	@%p205 bra 	$L__BB0_117;
// %bb.116:
	add.f32 	%f839, %f919, 0fBF800000;
	setp.lt.f32 	%p208, %f146, 0fC0000000;
	add.f32 	%f840, %f839, 0fBF800000;
	selp.f32 	%f919, %f840, %f839, %p208;
	bra.uni 	$L__BB0_119;
$L__BB0_117:
	add.f32 	%f919, %f919, 0f3F800000;
	setp.ltu.f32 	%p206, %f146, 0f40800000;
	@%p206 bra 	$L__BB0_119;
// %bb.118:                             // %__nv_fmaf_rn.exit.i.i.i642
	add.f32 	%f835, %f919, 0f3F800000;
	fma.rn.f32 	%f837, %f184, 0fC0400000, %f146;
	setp.ge.f32 	%p207, %f837, 0f00000000;
	add.f32 	%f838, %f835, 0f3F800000;
	selp.f32 	%f919, %f838, %f835, %p207;
$L__BB0_119:                            // %__internal_fmodf_fastpath_quot.exit.i.i645
	fma.rn.f32 	%f921, %f919, 0fC0000000, %f921;
$L__BB0_124:                            // %__internal_fmodf_kernel.exit.i664
	abs.f32 	%f852, %f921;
	setp.gtu.f32 	%p214, %f852, 0f7F800000;
	@%p214 bra 	$L__BB0_126;
// %bb.125:
	mov.b32 	%r398, %f181;
	and.b32  	%r399, %r398, -2147483648;
	mov.b32 	%r400, %f921;
	or.b32  	%r401, %r399, %r400;
	mov.b32 	%f921, %r401;
$L__BB0_126:                            // %__nv_fmodf.exit665
	setp.le.s32 	%p222, %r152, %r151;
	mov.u32 	%r1187, 0;
	@%p222 bra 	$L__BB0_146;
// %bb.127:                             // %L1393.lr.ph
	mov.f32 	%f188, 0f42820000;
	div.approx.f32 	%f189, %f187, %f188;
	div.approx.f32 	%f223, %f221, %f188;
	div.approx.f32 	%f258, %f256, %f188;
	div.approx.f32 	%f292, %f290, %f188;
	div.approx.f32 	%f327, %f325, %f188;
	div.approx.f32 	%f361, %f359, %f188;
	div.approx.f32 	%f396, %f394, %f188;
	div.approx.f32 	%f430, %f428, %f188;
	abs.f32 	%f190, %f189;
	abs.f32 	%f224, %f223;
	abs.f32 	%f259, %f258;
	abs.f32 	%f293, %f292;
	abs.f32 	%f328, %f327;
	abs.f32 	%f362, %f361;
	abs.f32 	%f397, %f396;
	abs.f32 	%f431, %f430;
	setp.gt.f32 	%p13, %f190, 0f4B800000;
	mul.f32 	%f191, %f189, 0f00000000;
	setp.gt.f32 	%p19, %f224, 0f4B800000;
	mul.f32 	%f225, %f223, 0f00000000;
	setp.gt.f32 	%p25, %f259, 0f4B800000;
	mul.f32 	%f260, %f258, 0f00000000;
	setp.gt.f32 	%p31, %f293, 0f4B800000;
	mul.f32 	%f294, %f292, 0f00000000;
	setp.gt.f32 	%p37, %f328, 0f4B800000;
	mul.f32 	%f329, %f327, 0f00000000;
	setp.gt.f32 	%p43, %f362, 0f4B800000;
	mul.f32 	%f363, %f361, 0f00000000;
	setp.gt.f32 	%p49, %f397, 0f4B800000;
	mul.f32 	%f398, %f396, 0f00000000;
	setp.gt.f32 	%p55, %f431, 0f4B800000;
	mul.f32 	%f432, %f430, 0f00000000;
	selp.f32 	%f192, %f191, %f189, %p13;
	selp.f32 	%f226, %f225, %f223, %p19;
	selp.f32 	%f261, %f260, %f258, %p25;
	selp.f32 	%f295, %f294, %f292, %p31;
	selp.f32 	%f330, %f329, %f327, %p37;
	selp.f32 	%f364, %f363, %f361, %p43;
	selp.f32 	%f399, %f398, %f396, %p49;
	selp.f32 	%f433, %f432, %f430, %p55;
	add.f32 	%f589, %f905, %f905;
	add.f32 	%f641, %f909, %f909;
	add.f32 	%f193, %f192, %f192;
	add.f32 	%f227, %f226, %f226;
	add.f32 	%f262, %f261, %f261;
	add.f32 	%f296, %f295, %f295;
	add.f32 	%f331, %f330, %f330;
	add.f32 	%f365, %f364, %f364;
	add.f32 	%f400, %f399, %f399;
	add.f32 	%f434, %f433, %f433;
	add.f32 	%f483, %f897, %f897;
	add.f32 	%f535, %f901, %f901;
	mov.b32 	%r295, %f589;
	mov.b32 	%r326, %f641;
	add.f32 	%f694, %f913, %f913;
	add.f32 	%f746, %f917, %f917;
	mov.b32 	%r172, %f193;
	mov.b32 	%r179, %f227;
	mov.b32 	%r190, %f262;
	mov.b32 	%r197, %f296;
	mov.b32 	%r208, %f331;
	mov.b32 	%r215, %f365;
	mov.b32 	%r226, %f400;
	mov.b32 	%r233, %f434;
	mov.b32 	%r251, %f483;
	mov.b32 	%r274, %f535;
	and.b32  	%r296, %r295, -2147483648;
	and.b32  	%r327, %r326, -2147483648;
	mov.b32 	%r344, %f694;
	mov.b32 	%r367, %f746;
	add.f32 	%f799, %f925, %f925;
	and.b32  	%r173, %r172, -2147483648;
	and.b32  	%r180, %r179, -2147483648;
	and.b32  	%r191, %r190, -2147483648;
	and.b32  	%r198, %r197, -2147483648;
	and.b32  	%r209, %r208, -2147483648;
	and.b32  	%r216, %r215, -2147483648;
	and.b32  	%r227, %r226, -2147483648;
	and.b32  	%r234, %r233, -2147483648;
	and.b32  	%r252, %r251, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	or.b32  	%r297, %r296, 1056964608;
	or.b32  	%r328, %r327, 1056964608;
	and.b32  	%r345, %r344, -2147483648;
	and.b32  	%r368, %r367, -2147483648;
	mov.b32 	%r384, %f799;
	or.b32  	%r174, %r173, 1056964608;
	or.b32  	%r181, %r180, 1056964608;
	or.b32  	%r192, %r191, 1056964608;
	or.b32  	%r199, %r198, 1056964608;
	or.b32  	%r210, %r209, 1056964608;
	or.b32  	%r217, %r216, 1056964608;
	or.b32  	%r228, %r227, 1056964608;
	or.b32  	%r235, %r234, 1056964608;
	or.b32  	%r253, %r252, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	mov.b32 	%f590, %r297;
	mov.b32 	%f642, %r328;
	or.b32  	%r346, %r345, 1056964608;
	or.b32  	%r369, %r368, 1056964608;
	and.b32  	%r385, %r384, -2147483648;
	mov.b32 	%f194, %r174;
	mov.b32 	%f228, %r181;
	mov.b32 	%f263, %r192;
	mov.b32 	%f297, %r199;
	mov.b32 	%f332, %r210;
	mov.b32 	%f366, %r217;
	mov.b32 	%f401, %r228;
	mov.b32 	%f435, %r235;
	mov.b32 	%f484, %r253;
	mov.b32 	%f536, %r276;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f643, %f641, %f642;
	abs.f32 	%f645, %f641;
	mov.b32 	%f695, %r346;
	mov.b32 	%f747, %r369;
	or.b32  	%r386, %r385, 1056964608;
	add.f32 	%f195, %f193, %f194;
	abs.f32 	%f197, %f193;
	add.f32 	%f229, %f227, %f228;
	abs.f32 	%f231, %f227;
	add.f32 	%f264, %f262, %f263;
	abs.f32 	%f266, %f262;
	add.f32 	%f298, %f296, %f297;
	abs.f32 	%f300, %f296;
	add.f32 	%f333, %f331, %f332;
	abs.f32 	%f335, %f331;
	add.f32 	%f367, %f365, %f366;
	abs.f32 	%f369, %f365;
	add.f32 	%f402, %f400, %f401;
	abs.f32 	%f404, %f400;
	add.f32 	%f436, %f434, %f435;
	abs.f32 	%f438, %f434;
	add.f32 	%f485, %f483, %f484;
	abs.f32 	%f487, %f483;
	add.f32 	%f537, %f535, %f536;
	abs.f32 	%f539, %f535;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p114, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f644, %f643;
	setp.gt.f32 	%p134, %f645, 0f4B000000;
	add.f32 	%f696, %f694, %f695;
	abs.f32 	%f698, %f694;
	add.f32 	%f748, %f746, %f747;
	abs.f32 	%f750, %f746;
	mov.b32 	%f800, %r386;
	cvt.rzi.f32.f32 	%f196, %f195;
	setp.gt.f32 	%p14, %f197, 0f4B000000;
	cvt.rzi.f32.f32 	%f230, %f229;
	setp.gt.f32 	%p20, %f231, 0f4B000000;
	cvt.rzi.f32.f32 	%f265, %f264;
	setp.gt.f32 	%p26, %f266, 0f4B000000;
	cvt.rzi.f32.f32 	%f299, %f298;
	setp.gt.f32 	%p32, %f300, 0f4B000000;
	cvt.rzi.f32.f32 	%f334, %f333;
	setp.gt.f32 	%p38, %f335, 0f4B000000;
	cvt.rzi.f32.f32 	%f368, %f367;
	setp.gt.f32 	%p44, %f369, 0f4B000000;
	cvt.rzi.f32.f32 	%f403, %f402;
	setp.gt.f32 	%p50, %f404, 0f4B000000;
	cvt.rzi.f32.f32 	%f437, %f436;
	setp.gt.f32 	%p56, %f438, 0f4B000000;
	cvt.rzi.f32.f32 	%f486, %f485;
	setp.gt.f32 	%p74, %f487, 0f4B000000;
	cvt.rzi.f32.f32 	%f538, %f537;
	setp.gt.f32 	%p94, %f539, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p114;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p115, %f593, 0f3F000000;
	selp.f32 	%f646, %f641, %f644, %p134;
	cvt.rzi.f32.f32 	%f647, %f641;
	setp.lt.f32 	%p135, %f645, 0f3F000000;
	cvt.rzi.f32.f32 	%f697, %f696;
	setp.gt.f32 	%p154, %f698, 0f4B000000;
	cvt.rzi.f32.f32 	%f749, %f748;
	setp.gt.f32 	%p174, %f750, 0f4B000000;
	add.f32 	%f801, %f799, %f800;
	abs.f32 	%f803, %f799;
	selp.f32 	%f198, %f193, %f196, %p14;
	cvt.rzi.f32.f32 	%f199, %f193;
	setp.lt.f32 	%p15, %f197, 0f3F000000;
	selp.f32 	%f232, %f227, %f230, %p20;
	cvt.rzi.f32.f32 	%f233, %f227;
	setp.lt.f32 	%p21, %f231, 0f3F000000;
	selp.f32 	%f267, %f262, %f265, %p26;
	cvt.rzi.f32.f32 	%f268, %f262;
	setp.lt.f32 	%p27, %f266, 0f3F000000;
	selp.f32 	%f301, %f296, %f299, %p32;
	cvt.rzi.f32.f32 	%f302, %f296;
	setp.lt.f32 	%p33, %f300, 0f3F000000;
	selp.f32 	%f336, %f331, %f334, %p38;
	cvt.rzi.f32.f32 	%f337, %f331;
	setp.lt.f32 	%p39, %f335, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p44;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p45, %f369, 0f3F000000;
	selp.f32 	%f405, %f400, %f403, %p50;
	cvt.rzi.f32.f32 	%f406, %f400;
	setp.lt.f32 	%p51, %f404, 0f3F000000;
	selp.f32 	%f439, %f434, %f437, %p56;
	cvt.rzi.f32.f32 	%f440, %f434;
	setp.lt.f32 	%p57, %f438, 0f3F000000;
	selp.f32 	%f488, %f483, %f486, %p74;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p75, %f487, 0f3F000000;
	selp.f32 	%f540, %f535, %f538, %p94;
	cvt.rzi.f32.f32 	%f541, %f535;
	setp.lt.f32 	%p95, %f539, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p115;
	selp.f32 	%f648, %f647, %f646, %p135;
	selp.f32 	%f699, %f694, %f697, %p154;
	cvt.rzi.f32.f32 	%f700, %f694;
	setp.lt.f32 	%p155, %f698, 0f3F000000;
	selp.f32 	%f751, %f746, %f749, %p174;
	cvt.rzi.f32.f32 	%f752, %f746;
	setp.lt.f32 	%p175, %f750, 0f3F000000;
	cvt.rzi.f32.f32 	%f802, %f801;
	setp.gt.f32 	%p195, %f803, 0f4B000000;
	selp.f32 	%f200, %f199, %f198, %p15;
	selp.f32 	%f234, %f233, %f232, %p21;
	selp.f32 	%f269, %f268, %f267, %p27;
	selp.f32 	%f303, %f302, %f301, %p33;
	selp.f32 	%f338, %f337, %f336, %p39;
	selp.f32 	%f372, %f371, %f370, %p45;
	selp.f32 	%f407, %f406, %f405, %p51;
	selp.f32 	%f441, %f440, %f439, %p57;
	selp.f32 	%f490, %f489, %f488, %p75;
	selp.f32 	%f542, %f541, %f540, %p95;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f905;
	fma.rn.f32 	%f649, %f648, 0fBF000000, %f909;
	selp.f32 	%f701, %f700, %f699, %p155;
	selp.f32 	%f753, %f752, %f751, %p175;
	selp.f32 	%f804, %f799, %f802, %p195;
	cvt.rzi.f32.f32 	%f805, %f799;
	setp.lt.f32 	%p196, %f803, 0f3F000000;
	fma.rn.f32 	%f201, %f200, 0fBF000000, %f192;
	fma.rn.f32 	%f235, %f234, 0fBF000000, %f226;
	fma.rn.f32 	%f270, %f269, 0fBF000000, %f261;
	fma.rn.f32 	%f304, %f303, 0fBF000000, %f295;
	fma.rn.f32 	%f339, %f338, 0fBF000000, %f330;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f408, %f407, 0fBF000000, %f399;
	fma.rn.f32 	%f442, %f441, 0fBF000000, %f433;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f897;
	fma.rn.f32 	%f543, %f542, 0fBF000000, %f901;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f650, %f649, %f649;
	fma.rn.f32 	%f702, %f701, 0fBF000000, %f913;
	fma.rn.f32 	%f754, %f753, 0fBF000000, %f917;
	selp.f32 	%f806, %f805, %f804, %p196;
	mul.f32 	%f202, %f201, %f201;
	mul.f32 	%f236, %f235, %f235;
	mul.f32 	%f271, %f270, %f270;
	mul.f32 	%f305, %f304, %f304;
	mul.f32 	%f340, %f339, %f339;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f409, %f408, %f408;
	mul.f32 	%f443, %f442, %f442;
	mul.f32 	%f492, %f491, %f491;
	mul.f32 	%f544, %f543, %f543;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f651, %f650, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f652, %f650, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f703, %f702, %f702;
	mul.f32 	%f755, %f754, %f754;
	fma.rn.f32 	%f807, %f806, 0fBF000000, %f925;
	cvt.rzi.s32.f32 	%r175, %f200;
	fma.rn.f32 	%f203, %f202, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f204, %f202, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r182, %f234;
	fma.rn.f32 	%f237, %f236, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f238, %f236, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r193, %f269;
	fma.rn.f32 	%f272, %f271, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f273, %f271, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r200, %f303;
	fma.rn.f32 	%f306, %f305, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f307, %f305, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r211, %f338;
	fma.rn.f32 	%f341, %f340, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f342, %f340, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r218, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r229, %f407;
	fma.rn.f32 	%f410, %f409, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f411, %f409, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r236, %f441;
	fma.rn.f32 	%f444, %f443, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f445, %f443, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f545, %f544, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f546, %f544, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r298, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r329, %f648;
	fma.rn.f32 	%f653, %f651, %f650, 0fC0A55DF6;
	fma.rn.f32 	%f654, %f652, %f650, 0f4081E0CF;
	fma.rn.f32 	%f655, %f650, %f649, 0f00000000;
	fma.rn.f32 	%f704, %f703, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f705, %f703, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f756, %f755, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f757, %f755, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f808, %f807, %f807;
	add.s32 	%r176, %r175, 1;
	fma.rn.f32 	%f205, %f203, %f202, 0fC0A55DF6;
	fma.rn.f32 	%f206, %f204, %f202, 0f4081E0CF;
	fma.rn.f32 	%f207, %f202, %f201, 0f00000000;
	add.s32 	%r183, %r182, 1;
	fma.rn.f32 	%f239, %f237, %f236, 0fC0A55DF6;
	fma.rn.f32 	%f240, %f238, %f236, 0f4081E0CF;
	fma.rn.f32 	%f241, %f236, %f235, 0f00000000;
	add.s32 	%r194, %r193, 1;
	fma.rn.f32 	%f274, %f272, %f271, 0fC0A55DF6;
	fma.rn.f32 	%f275, %f273, %f271, 0f4081E0CF;
	fma.rn.f32 	%f276, %f271, %f270, 0f00000000;
	add.s32 	%r201, %r200, 1;
	fma.rn.f32 	%f308, %f306, %f305, 0fC0A55DF6;
	fma.rn.f32 	%f309, %f307, %f305, 0f4081E0CF;
	fma.rn.f32 	%f310, %f305, %f304, 0f00000000;
	add.s32 	%r212, %r211, 1;
	fma.rn.f32 	%f343, %f341, %f340, 0fC0A55DF6;
	fma.rn.f32 	%f344, %f342, %f340, 0f4081E0CF;
	fma.rn.f32 	%f345, %f340, %f339, 0f00000000;
	add.s32 	%r219, %r218, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r230, %r229, 1;
	fma.rn.f32 	%f412, %f410, %f409, 0fC0A55DF6;
	fma.rn.f32 	%f413, %f411, %f409, 0f4081E0CF;
	fma.rn.f32 	%f414, %f409, %f408, 0f00000000;
	add.s32 	%r237, %r236, 1;
	fma.rn.f32 	%f446, %f444, %f443, 0fC0A55DF6;
	fma.rn.f32 	%f447, %f445, %f443, 0f4081E0CF;
	fma.rn.f32 	%f448, %f443, %f442, 0f00000000;
	cvt.rzi.s32.f32 	%r254, %f490;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	cvt.rzi.s32.f32 	%r277, %f542;
	fma.rn.f32 	%f547, %f545, %f544, 0fC0A55DF6;
	fma.rn.f32 	%f548, %f546, %f544, 0f4081E0CF;
	fma.rn.f32 	%f549, %f544, %f543, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f656, %f654, %f650, 0fC09DE9E6;
	fma.rn.f32 	%f657, %f653, %f655, 0f00000000;
	and.b32  	%r330, %r329, 1;
	cvt.rzi.s32.f32 	%r347, %f701;
	fma.rn.f32 	%f706, %f704, %f703, 0fC0A55DF6;
	fma.rn.f32 	%f707, %f705, %f703, 0f4081E0CF;
	fma.rn.f32 	%f708, %f703, %f702, 0f00000000;
	cvt.rzi.s32.f32 	%r370, %f753;
	fma.rn.f32 	%f758, %f756, %f755, 0fC0A55DF6;
	fma.rn.f32 	%f759, %f757, %f755, 0f4081E0CF;
	fma.rn.f32 	%f760, %f755, %f754, 0f00000000;
	fma.rn.f32 	%f809, %f808, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f810, %f808, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f208, %f206, %f202, 0fC09DE9E6;
	fma.rn.f32 	%f209, %f205, %f207, 0f00000000;
	and.b32  	%r177, %r176, 1;
	fma.rn.f32 	%f242, %f240, %f236, 0fC09DE9E6;
	fma.rn.f32 	%f243, %f239, %f241, 0f00000000;
	and.b32  	%r184, %r183, 1;
	fma.rn.f32 	%f277, %f275, %f271, 0fC09DE9E6;
	fma.rn.f32 	%f278, %f274, %f276, 0f00000000;
	and.b32  	%r195, %r194, 1;
	fma.rn.f32 	%f311, %f309, %f305, 0fC09DE9E6;
	fma.rn.f32 	%f312, %f308, %f310, 0f00000000;
	and.b32  	%r202, %r201, 1;
	fma.rn.f32 	%f346, %f344, %f340, 0fC09DE9E6;
	fma.rn.f32 	%f347, %f343, %f345, 0f00000000;
	and.b32  	%r213, %r212, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r220, %r219, 1;
	fma.rn.f32 	%f415, %f413, %f409, 0fC09DE9E6;
	fma.rn.f32 	%f416, %f412, %f414, 0f00000000;
	and.b32  	%r231, %r230, 1;
	fma.rn.f32 	%f449, %f447, %f443, 0fC09DE9E6;
	fma.rn.f32 	%f450, %f446, %f448, 0f00000000;
	and.b32  	%r238, %r237, 1;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f550, %f548, %f544, 0fC09DE9E6;
	fma.rn.f32 	%f551, %f547, %f549, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p116, %r299, 1;
	fma.rn.f32 	%f658, %f656, %f650, 0f3F800000;
	fma.rn.f32 	%f659, %f649, 0f40490FDB, %f657;
	setp.eq.b32 	%p136, %r330, 1;
	fma.rn.f32 	%f709, %f707, %f703, 0fC09DE9E6;
	fma.rn.f32 	%f710, %f706, %f708, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f761, %f759, %f755, 0fC09DE9E6;
	fma.rn.f32 	%f762, %f758, %f760, 0f00000000;
	and.b32  	%r371, %r370, 1;
	cvt.rzi.s32.f32 	%r387, %f806;
	fma.rn.f32 	%f811, %f809, %f808, 0fC0A55DF6;
	fma.rn.f32 	%f812, %f810, %f808, 0f4081E0CF;
	fma.rn.f32 	%f813, %f808, %f807, 0f00000000;
	and.b32  	%r164, %r1, 2;
	and.b32  	%r104, %r103, 8;
	shl.b32 	%r166, %r2, 2;
	fma.rn.f32 	%f210, %f208, %f202, 0f3F800000;
	fma.rn.f32 	%f211, %f201, 0f40490FDB, %f209;
	setp.eq.b32 	%p16, %r177, 1;
	fma.rn.f32 	%f244, %f242, %f236, 0f3F800000;
	fma.rn.f32 	%f245, %f235, 0f40490FDB, %f243;
	setp.eq.b32 	%p22, %r184, 1;
	fma.rn.f32 	%f279, %f277, %f271, 0f3F800000;
	fma.rn.f32 	%f280, %f270, 0f40490FDB, %f278;
	setp.eq.b32 	%p28, %r195, 1;
	fma.rn.f32 	%f313, %f311, %f305, 0f3F800000;
	fma.rn.f32 	%f314, %f304, 0f40490FDB, %f312;
	setp.eq.b32 	%p34, %r202, 1;
	fma.rn.f32 	%f348, %f346, %f340, 0f3F800000;
	fma.rn.f32 	%f349, %f339, 0f40490FDB, %f347;
	setp.eq.b32 	%p40, %r213, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p46, %r220, 1;
	fma.rn.f32 	%f417, %f415, %f409, 0f3F800000;
	fma.rn.f32 	%f418, %f408, 0f40490FDB, %f416;
	setp.eq.b32 	%p52, %r231, 1;
	fma.rn.f32 	%f451, %f449, %f443, 0f3F800000;
	fma.rn.f32 	%f452, %f442, 0f40490FDB, %f450;
	setp.eq.b32 	%p58, %r238, 1;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	setp.eq.b32 	%p76, %r255, 1;
	fma.rn.f32 	%f552, %f550, %f544, 0f3F800000;
	fma.rn.f32 	%f553, %f543, 0f40490FDB, %f551;
	setp.eq.b32 	%p96, %r278, 1;
	selp.f32 	%f608, %f606, %f607, %p116;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f660, %f658, %f659, %p136;
	and.b32  	%r331, %r329, 2;
	fma.rn.f32 	%f711, %f709, %f703, 0f3F800000;
	fma.rn.f32 	%f712, %f702, 0f40490FDB, %f710;
	setp.eq.b32 	%p156, %r348, 1;
	fma.rn.f32 	%f763, %f761, %f755, 0f3F800000;
	fma.rn.f32 	%f764, %f754, 0f40490FDB, %f762;
	setp.eq.b32 	%p176, %r371, 1;
	cvt.u16.u32 	%rs1, %r1;
	fma.rn.f32 	%f814, %f812, %f808, 0fC09DE9E6;
	fma.rn.f32 	%f815, %f811, %f813, 0f00000000;
	and.b32  	%r388, %r387, 1;
	or.b32  	%r165, %r104, %r164;
	and.b32  	%r105, %r166, 1008;
	shl.b32 	%r106, %r1, 2;
	selp.f32 	%f212, %f210, %f211, %p16;
	and.b32  	%r178, %r176, 2;
	selp.f32 	%f246, %f244, %f245, %p22;
	and.b32  	%r185, %r183, 2;
	selp.f32 	%f281, %f279, %f280, %p28;
	and.b32  	%r196, %r194, 2;
	selp.f32 	%f315, %f313, %f314, %p34;
	and.b32  	%r203, %r201, 2;
	selp.f32 	%f350, %f348, %f349, %p40;
	and.b32  	%r214, %r212, 2;
	selp.f32 	%f384, %f382, %f383, %p46;
	and.b32  	%r221, %r219, 2;
	selp.f32 	%f419, %f417, %f418, %p52;
	and.b32  	%r232, %r230, 2;
	selp.f32 	%f453, %f451, %f452, %p58;
	and.b32  	%r239, %r237, 2;
	selp.f32 	%f502, %f500, %f501, %p76;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f554, %f552, %f553, %p96;
	and.b32  	%r279, %r277, 2;
	setp.eq.s32 	%p117, %r300, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r301, %r298, 1;
	cvt.rzi.f32.f32 	%f615, %f905;
	setp.eq.s32 	%p137, %r331, 0;
	neg.f32 	%f662, %f660;
	add.s32 	%r332, %r329, 1;
	cvt.rzi.f32.f32 	%f667, %f909;
	selp.f32 	%f713, %f711, %f712, %p156;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f765, %f763, %f764, %p176;
	and.b32  	%r372, %r370, 2;
	and.b16  	%rs2, %rs1, 2;
	fma.rn.f32 	%f816, %f814, %f808, 0f3F800000;
	fma.rn.f32 	%f817, %f807, 0f40490FDB, %f815;
	setp.eq.b32 	%p197, %r388, 1;
	or.b32  	%r167, %r165, %r105;
	and.b32  	%r168, %r106, 4;
	setp.eq.s32 	%p17, %r178, 0;
	sub.f32 	%f214, %f213, %f212;
	setp.eq.s32 	%p23, %r185, 0;
	sub.f32 	%f248, %f213, %f246;
	setp.eq.s32 	%p29, %r196, 0;
	sub.f32 	%f283, %f213, %f281;
	setp.eq.s32 	%p35, %r203, 0;
	sub.f32 	%f317, %f213, %f315;
	setp.eq.s32 	%p41, %r214, 0;
	sub.f32 	%f352, %f213, %f350;
	setp.eq.s32 	%p47, %r221, 0;
	sub.f32 	%f386, %f213, %f384;
	setp.eq.s32 	%p53, %r232, 0;
	sub.f32 	%f421, %f213, %f419;
	setp.eq.s32 	%p59, %r239, 0;
	sub.f32 	%f455, %f213, %f453;
	setp.eq.s32 	%p77, %r256, 0;
	neg.f32 	%f504, %f502;
	add.s32 	%r257, %r254, 1;
	cvt.rzi.f32.f32 	%f509, %f897;
	setp.eq.s32 	%p97, %r279, 0;
	neg.f32 	%f556, %f554;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f561, %f901;
	selp.f32 	%f609, %f607, %f606, %p116;
	selp.f32 	%f611, %f608, %f610, %p117;
	and.b32  	%r302, %r301, 2;
	setp.eq.f32 	%p119, %f615, %f905;
	mul.f32 	%f616, %f905, 0f00000000;
	selp.f32 	%f661, %f659, %f658, %p136;
	selp.f32 	%f663, %f660, %f662, %p137;
	and.b32  	%r333, %r332, 2;
	setp.eq.f32 	%p139, %f667, %f909;
	mul.f32 	%f668, %f909, 0f00000000;
	setp.eq.s32 	%p157, %r349, 0;
	neg.f32 	%f715, %f713;
	add.s32 	%r350, %r347, 1;
	cvt.rzi.f32.f32 	%f720, %f913;
	setp.eq.s32 	%p177, %r372, 0;
	neg.f32 	%f767, %f765;
	add.s32 	%r373, %r370, 1;
	cvt.rzi.f32.f32 	%f772, %f917;
	shl.b16 	%rs3, %rs1, 1;
	shr.u16 	%rs4, %rs2, 1;
	selp.f32 	%f818, %f816, %f817, %p197;
	and.b32  	%r389, %r387, 2;
	or.b32  	%r169, %r167, %r168;
	selp.f32 	%f215, %f212, %f214, %p17;
	selp.f32 	%f249, %f246, %f248, %p23;
	selp.f32 	%f284, %f281, %f283, %p29;
	selp.f32 	%f318, %f315, %f317, %p35;
	selp.f32 	%f353, %f350, %f352, %p41;
	selp.f32 	%f387, %f384, %f386, %p47;
	selp.f32 	%f422, %f419, %f421, %p53;
	selp.f32 	%f456, %f453, %f455, %p59;
	selp.f32 	%f503, %f501, %f500, %p76;
	selp.f32 	%f505, %f502, %f504, %p77;
	and.b32  	%r258, %r257, 2;
	setp.eq.f32 	%p79, %f509, %f897;
	mul.f32 	%f510, %f897, 0f00000000;
	selp.f32 	%f555, %f553, %f552, %p96;
	selp.f32 	%f557, %f554, %f556, %p97;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p99, %f561, %f901;
	mul.f32 	%f562, %f901, 0f00000000;
	setp.eq.s32 	%p118, %r302, 0;
	sub.f32 	%f613, %f213, %f609;
	selp.f32 	%f88, %f616, %f611, %p119;
	abs.f32 	%f617, %f905;
	setp.eq.s32 	%p138, %r333, 0;
	sub.f32 	%f665, %f213, %f661;
	selp.f32 	%f669, %f668, %f663, %p139;
	abs.f32 	%f670, %f909;
	selp.f32 	%f714, %f712, %f711, %p156;
	selp.f32 	%f716, %f713, %f715, %p157;
	and.b32  	%r351, %r350, 2;
	setp.eq.f32 	%p159, %f720, %f913;
	mul.f32 	%f721, %f913, 0f00000000;
	shr.u32 	%r109, %r1, 2;
	selp.f32 	%f766, %f764, %f763, %p176;
	selp.f32 	%f768, %f765, %f767, %p177;
	and.b32  	%r374, %r373, 2;
	setp.eq.f32 	%p179, %f772, %f917;
	mul.f32 	%f773, %f917, 0f00000000;
	or.b16  	%rs5, %rs3, %rs4;
	setp.eq.s32 	%p198, %r389, 0;
	neg.f32 	%f820, %f818;
	add.s32 	%r390, %r387, 1;
	cvt.rzi.f32.f32 	%f825, %f925;
	shr.u32 	%r170, %r169, 1;
	mul.f32 	%f161, %f215, %f215;
	mul.f32 	%f4, %f249, %f249;
	mul.f32 	%f8, %f284, %f284;
	mul.f32 	%f13, %f318, %f318;
	mul.f32 	%f17, %f353, %f353;
	mul.f32 	%f22, %f387, %f387;
	mul.f32 	%f26, %f422, %f422;
	mul.f32 	%f31, %f456, %f456;
	setp.eq.s32 	%p78, %r258, 0;
	sub.f32 	%f507, %f213, %f503;
	selp.f32 	%f52, %f510, %f505, %p79;
	abs.f32 	%f511, %f897;
	setp.eq.s32 	%p98, %r281, 0;
	sub.f32 	%f559, %f213, %f555;
	selp.f32 	%f563, %f562, %f557, %p99;
	abs.f32 	%f564, %f901;
	selp.f32 	%f614, %f609, %f613, %p118;
	setp.gt.f32 	%p120, %f617, 0f4B800000;
	add.f32 	%f618, %f88, 0f3F800000;
	selp.f32 	%f666, %f661, %f665, %p138;
	setp.gt.f32 	%p140, %f670, 0f4B800000;
	add.f32 	%f671, %f669, 0f3F800000;
	setp.eq.s32 	%p158, %r351, 0;
	sub.f32 	%f718, %f213, %f714;
	selp.f32 	%f124, %f721, %f716, %p159;
	abs.f32 	%f722, %f913;
	setp.eq.s32 	%p178, %r374, 0;
	sub.f32 	%f770, %f213, %f766;
	selp.f32 	%f774, %f773, %f768, %p179;
	abs.f32 	%f775, %f917;
	shr.u32 	%r77, %r1, 4;
	and.b16  	%rs6, %rs5, 3;
	and.b32  	%r375, %r109, 2;
	selp.f32 	%f819, %f817, %f816, %p197;
	selp.f32 	%f821, %f818, %f820, %p198;
	and.b32  	%r391, %r390, 2;
	setp.eq.f32 	%p200, %f825, %f925;
	mul.f32 	%f826, %f925, 0f00000000;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd38, %r170, 4;
	mul.f32 	%f219, %f161, 0f3D09A17B;
	mul.f32 	%f253, %f4, 0f3D09A17B;
	mul.f32 	%f288, %f8, 0f3D09A17B;
	mul.f32 	%f322, %f13, 0f3D09A17B;
	mul.f32 	%f357, %f17, 0f3D09A17B;
	mul.f32 	%f391, %f22, 0f3D09A17B;
	mul.f32 	%f426, %f26, 0f3D09A17B;
	mul.f32 	%f459, %f31, 0f3D09A17B;
	selp.f32 	%f508, %f503, %f507, %p78;
	setp.gt.f32 	%p80, %f511, 0f4B800000;
	add.f32 	%f512, %f52, 0f3F800000;
	selp.f32 	%f560, %f555, %f559, %p98;
	setp.gt.f32 	%p100, %f564, 0f4B800000;
	add.f32 	%f565, %f563, 0f3F800000;
	selp.f32 	%f89, %f618, %f614, %p120;
	selp.f32 	%f672, %f671, %f666, %p140;
	selp.f32 	%f719, %f714, %f718, %p158;
	setp.gt.f32 	%p160, %f722, 0f4B800000;
	add.f32 	%f723, %f124, 0f3F800000;
	selp.f32 	%f771, %f766, %f770, %p178;
	setp.gt.f32 	%p180, %f775, 0f4B800000;
	add.f32 	%f776, %f774, 0f3F800000;
	cvt.u32.u16 	%r78, %rs6;
	or.b32  	%r79, %r375, %r77;
	setp.eq.s32 	%p199, %r391, 0;
	sub.f32 	%f823, %f213, %f819;
	selp.f32 	%f827, %f826, %f821, %p200;
	abs.f32 	%f828, %f925;
	add.s64 	%rd39, %rd1, %rd38;
	mul.f32 	%f3, %f219, %f887;
	mul.f32 	%f254, %f253, %f888;
	mul.f32 	%f12, %f288, %f889;
	mul.f32 	%f323, %f322, %f890;
	mul.f32 	%f21, %f357, %f891;
	mul.f32 	%f392, %f391, %f892;
	mul.f32 	%f30, %f426, %f893;
	mul.f32 	%f460, %f459, %f894;
	selp.f32 	%f53, %f512, %f508, %p80;
	selp.f32 	%f566, %f565, %f560, %p100;
	mov.b32 	%r316, %f672;
	mov.b32 	%r315, %f89;
	mov.b32 	%r322, %f669;
	mov.b32 	%r321, %f88;
	selp.f32 	%f125, %f723, %f719, %p160;
	selp.f32 	%f777, %f776, %f771, %p180;
	setp.eq.s32 	%p194, %r79, %r78;
	selp.f32 	%f824, %f819, %f823, %p199;
	setp.gt.f32 	%p201, %f828, 0f4B800000;
	add.f32 	%f829, %f827, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	ld.global.u32 	%r107, [%rd39];
	mov.b32 	%r188, %f254;
	mov.b32 	%r187, %f3;
	mov.b32 	%r206, %f323;
	mov.b32 	%r205, %f12;
	mov.b32 	%r224, %f392;
	mov.b32 	%r223, %f21;
	mov.b32 	%r242, %f460;
	mov.b32 	%r241, %f30;
	mov.b32 	%r270, %f566;
	mov.b32 	%r269, %f53;
	mov.b32 	%r273, %f563;
	mov.b32 	%r272, %f52;
	xor.b32  	%r319, %r322, -2147483648;
	xor.b32  	%r318, %r321, -2147483648;
	mov.b32 	%r363, %f777;
	mov.b32 	%r362, %f125;
	mov.b32 	%r366, %f774;
	mov.b32 	%r365, %f124;
	selp.f32 	%f830, %f829, %f824, %p201;
	selp.f32 	%f178, 0f3F800000, 0f00000000, %p194;
	// begin inline asm
	cvt.rn.f16x2.f32 %r186, %r188, %r187;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r204, %r206, %r205;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r222, %r224, %r223;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r240, %r242, %r241;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r270, %r269;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r317, %r319, %r318;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r320, %r322, %r321;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r323, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r361, %r363, %r362;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r364, %r366, %r365;
	// end inline asm
	mul.f32 	%f179, %f830, %f178;
	mul.f32 	%f180, %f827, %f178;
	add.f32 	%f853, %f921, %f921;
	mov.b32 	%r414, %f853;
	and.b32  	%r415, %r414, -2147483648;
	or.b32  	%r416, %r415, 1056964608;
	mov.b32 	%f854, %r416;
	add.f32 	%f855, %f853, %f854;
	cvt.rzi.f32.f32 	%f856, %f855;
	abs.f32 	%f857, %f853;
	setp.gt.f32 	%p215, %f857, 0f4B000000;
	selp.f32 	%f858, %f853, %f856, %p215;
	cvt.rzi.f32.f32 	%f859, %f853;
	setp.lt.f32 	%p216, %f857, 0f3F000000;
	selp.f32 	%f860, %f859, %f858, %p216;
	cvt.rzi.s32.f32 	%r417, %f860;
	fma.rn.f32 	%f861, %f860, 0fBF000000, %f921;
	mul.f32 	%f862, %f861, %f861;
	fma.rn.f32 	%f863, %f862, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f864, %f862, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f865, %f863, %f862, 0fC0A55DF6;
	fma.rn.f32 	%f866, %f864, %f862, 0f4081E0CF;
	fma.rn.f32 	%f867, %f862, %f861, 0f00000000;
	fma.rn.f32 	%f868, %f866, %f862, 0fC09DE9E6;
	fma.rn.f32 	%f869, %f865, %f867, 0f00000000;
	fma.rn.f32 	%f870, %f868, %f862, 0f3F800000;
	fma.rn.f32 	%f871, %f861, 0f40490FDB, %f869;
	and.b32  	%r418, %r417, 1;
	setp.eq.b32 	%p217, %r418, 1;
	selp.f32 	%f872, %f870, %f871, %p217;
	selp.f32 	%f873, %f871, %f870, %p217;
	and.b32  	%r419, %r417, 2;
	setp.eq.s32 	%p218, %r419, 0;
	neg.f32 	%f874, %f872;
	selp.f32 	%f875, %f872, %f874, %p218;
	add.s32 	%r420, %r417, 1;
	and.b32  	%r421, %r420, 2;
	setp.eq.s32 	%p219, %r421, 0;
	sub.f32 	%f877, %f213, %f873;
	selp.f32 	%f878, %f873, %f877, %p219;
	cvt.rzi.f32.f32 	%f879, %f921;
	setp.eq.f32 	%p220, %f879, %f921;
	mul.f32 	%f880, %f921, 0f00000000;
	selp.f32 	%f881, %f880, %f875, %p220;
	abs.f32 	%f882, %f921;
	setp.gt.f32 	%p221, %f882, 0f4B800000;
	add.f32 	%f883, %f881, 0f3F800000;
	selp.f32 	%f884, %f883, %f878, %p221;
	mul.f32 	%f885, %f884, %f178;
	mul.f32 	%f886, %f881, %f178;
	mov.b32 	%r404, %f885;
	mov.b32 	%r403, %f179;
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r404, %r403;
	// end inline asm
	mov.b32 	%r410, %f886;
	xor.b32  	%r407, %r410, -2147483648;
	mov.b32 	%r409, %f180;
	xor.b32  	%r406, %r409, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r405, %r407, %r406;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r408, %r410, %r409;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r411, %r404, %r403;
	// end inline asm
	shl.b32 	%r423, %r151, 13;
	shl.b32 	%r424, %r2, 5;
	and.b32  	%r425, %r106, 28;
	and.b32  	%r426, %r424, 32;
	or.b32  	%r427, %r426, %r425;
	and.b32  	%r92, %r424, 64;
	shl.b32 	%r428, %r4, 2;
	and.b32  	%r93, %r428, 48;
	and.b32  	%r429, %r109, 4;
	or.b32  	%r430, %r93, %r429;
	and.b32  	%r431, %r4, 3;
	or.b32  	%r432, %r431, %r430;
	and.b32  	%r94, %r1, 8;
	or.b32  	%r95, %r94, %r432;
	or.b32  	%r433, %r92, %r427;
	and.b32  	%r434, %r3, 6144;
	or.b32  	%r435, %r423, %r434;
	or.b32  	%r96, %r435, %r433;
	shl.b32 	%r436, %r1, 4;
	or.b32  	%r437, %r94, %r436;
	shr.u32 	%r438, %r437, 2;
	and.b32  	%r439, %r438, 30;
	shl.b32 	%r440, %r1, 3;
	and.b32  	%r441, %r440, 64;
	and.b32  	%r442, %r103, 32;
	shl.b32 	%r443, %r4, 1;
	or.b32  	%r444, %r442, %r443;
	or.b32  	%r445, %r444, %r441;
	shr.u32 	%r446, %r445, 2;
	and.b32  	%r447, %r5, 32;
	or.b32  	%r448, %r446, %r447;
	shr.u16 	%rs8, %rs1, 8;
	shl.b16 	%rs9, %rs1, 8;
	or.b16  	%rs10, %rs9, %rs8;
	shl.b16 	%rs11, %rs10, 4;
	shr.u16 	%rs12, %rs10, 4;
	and.b16  	%rs13, %rs12, 3840;
	or.b16  	%rs14, %rs13, %rs11;
	and.b16  	%rs15, %rs14, 13107;
	shl.b16 	%rs16, %rs15, 2;
	shr.u16 	%rs17, %rs14, 2;
	and.b16  	%rs18, %rs17, 13107;
	or.b16  	%rs19, %rs18, %rs16;
	shr.u16 	%rs20, %rs19, 1;
	and.b16  	%rs21, %rs19, 16384;
	shl.b16 	%rs22, %rs21, 1;
	or.b16  	%rs23, %rs20, %rs22;
	shr.u16 	%rs24, %rs23, 13;
	and.b16  	%rs25, %rs24, 6;
	cvt.u32.u16 	%r449, %rs25;
	or.b32  	%r450, %r104, %r449;
	shr.u32 	%r451, %r450, 1;
	mad.lo.s32 	%r452, %r451, 65, %r448;
	and.b32  	%r97, %r4, 12;
	shl.b32 	%r453, %r153, 17;
	add.s32 	%r454, %r453, -393216;
	and.b32  	%r455, %r428, 12;
	or.b32  	%r456, %r455, %r32;
	or.b32  	%r457, %r456, %r105;
	shl.b32 	%r458, %r457, 7;
	or.b32  	%r98, %r458, %r427;
	cvt.s64.s32 	%rd5, %r454;
	shr.u32 	%r459, %r171, 2;
	shr.u32 	%r460, %r4, 2;
	or.b32  	%r461, %r460, 4;
	or.b32  	%r462, %r460, 8;
	or.b32  	%r463, %r460, 12;
	mul.lo.s32 	%r464, %r77, 65;
	mul.lo.s32 	%r465, %r460, 545;
	and.b32  	%r466, %r4, 1;
	neg.s32 	%r467, %r466;
	setp.eq.b32 	%p223, %r466, 1;
	and.b32  	%r468, %r467, 260;
	bfe.s32 	%r469, %r4, 1, 1;
	and.b32  	%r470, %r4, 2;
	setp.eq.s32 	%p224, %r470, 0;
	and.b32  	%r471, %r469, 130;
	add.s32 	%r472, %r468, %r439;
	add.s32 	%r473, %r472, %r464;
	add.s32 	%r474, %r473, %r465;
	add.s32 	%r475, %r474, %r471;
	mul.wide.u32 	%rd40, %r475, 4;
	mov.u64 	%rd41, shmem;
	add.s64 	%rd6, %rd41, %rd40;
	selp.b64 	%rd42, 0, 130, %p224;
	cvt.u64.u32 	%rd43, %r465;
	cvt.u64.u32 	%rd44, %r464;
	selp.b64 	%rd45, 260, 0, %p223;
	cvt.u64.u32 	%rd46, %r439;
	add.s64 	%rd47, %rd46, %rd45;
	add.s64 	%rd48, %rd47, %rd44;
	add.s64 	%rd49, %rd48, %rd43;
	add.s64 	%rd50, %rd49, %rd42;
	shl.b64 	%rd51, %rd50, 2;
	add.s64 	%rd7, %rd41, %rd51;
	mul.lo.s32 	%r476, %r461, 545;
	add.s32 	%r477, %r473, %r476;
	add.s32 	%r478, %r477, %r471;
	mul.wide.u32 	%rd52, %r478, 4;
	add.s64 	%rd8, %rd41, %rd52;
	cvt.u64.u32 	%rd53, %r476;
	add.s64 	%rd54, %rd48, %rd53;
	add.s64 	%rd55, %rd54, %rd42;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd9, %rd41, %rd56;
	mul.lo.s32 	%r479, %r462, 545;
	add.s32 	%r480, %r473, %r479;
	add.s32 	%r481, %r480, %r471;
	mul.wide.u32 	%rd57, %r481, 4;
	add.s64 	%rd10, %rd41, %rd57;
	cvt.u64.u32 	%rd58, %r479;
	add.s64 	%rd59, %rd48, %rd58;
	add.s64 	%rd60, %rd59, %rd42;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd11, %rd41, %rd61;
	mul.lo.s32 	%r482, %r463, 545;
	add.s32 	%r483, %r473, %r482;
	add.s32 	%r484, %r483, %r471;
	mul.wide.u32 	%rd62, %r484, 4;
	add.s64 	%rd12, %rd41, %rd62;
	cvt.u64.u32 	%rd63, %r482;
	add.s64 	%rd64, %rd48, %rd63;
	add.s64 	%rd65, %rd64, %rd42;
	shl.b64 	%rd66, %rd65, 2;
	add.s64 	%rd13, %rd41, %rd66;
	and.b32  	%r485, %r1, 1;
	neg.s32 	%r486, %r485;
	and.b32  	%r487, %r486, 130;
	and.b32  	%r488, %r443, 6;
	or.b32  	%r489, %r488, %r77;
	mul.lo.s32 	%r490, %r489, 65;
	add.s32 	%r491, %r490, %r439;
	add.s32 	%r492, %r491, %r465;
	mul.wide.u32 	%rd67, %r492, 4;
	add.s64 	%rd14, %rd41, %rd67;
	cvt.u64.u32 	%rd68, %r490;
	add.s64 	%rd69, %rd46, %rd68;
	add.s64 	%rd70, %rd69, %rd43;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd15, %rd41, %rd71;
	add.s32 	%r493, %r491, %r476;
	mul.wide.u32 	%rd72, %r493, 4;
	add.s64 	%rd16, %rd41, %rd72;
	add.s64 	%rd73, %rd69, %rd53;
	shl.b64 	%rd74, %rd73, 2;
	add.s64 	%rd17, %rd41, %rd74;
	add.s32 	%r494, %r491, %r479;
	mul.wide.u32 	%rd75, %r494, 4;
	add.s64 	%rd18, %rd41, %rd75;
	add.s64 	%rd76, %rd69, %rd58;
	shl.b64 	%rd77, %rd76, 2;
	add.s64 	%rd19, %rd41, %rd77;
	add.s32 	%r495, %r491, %r482;
	mul.wide.u32 	%rd78, %r495, 4;
	add.s64 	%rd20, %rd41, %rd78;
	add.s64 	%rd79, %rd69, %rd63;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd21, %rd41, %rd80;
	mul.wide.u32 	%rd81, %r452, 4;
	add.s64 	%rd22, %rd41, %rd81;
	add.s32 	%r496, %r487, %r448;
	mad.lo.s32 	%r497, %r110, 260, %r496;
	mad.lo.s32 	%r498, %r459, 65, %r497;
	mul.wide.u32 	%rd82, %r498, 4;
	add.s64 	%rd23, %rd41, %rd82;
	setp.eq.s32 	%p225, %r94, 0;
	setp.eq.s32 	%p239, %r97, 12;
	setp.ne.s32 	%p245, %r97, 12;
	mov.u32 	%r1203, %r1187;
	mov.u32 	%r1211, %r1187;
	mov.u32 	%r1210, %r1187;
	mov.u32 	%r102, %r1187;
	bra.uni 	$L__BB0_128;
$L__BB0_145:                            // %pass7854
                                        //   in Loop: Header=BB0_128 Depth=1
	or.b32  	%r1183, %r1213, 1572864;
	cvt.s64.s32 	%rd127, %r1183;
	add.s64 	%rd128, %rd127, %rd5;
	shr.u64 	%rd129, %rd128, 35;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 29;
	setp.lt.s64 	%p252, %rd128, 0;
	and.b64  	%rd132, %rd130, -536870912;
	setp.ne.s64 	%p253, %rd132, %rd128;
	and.pred  	%p254, %p252, %p253;
	selp.u64 	%rd133, 1, 0, %p254;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 29;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r145, %r147, %r146, %r148};
	setp.ne.s32 	%p255, %r102, 65280;
	add.s32 	%r102, %r102, 256;
	add.s32 	%r1184, %r102, %r151;
	setp.lt.s32 	%p256, %r1184, %r152;
	and.pred  	%p257, %p255, %p256;
	@%p257 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_146;
$L__BB0_128:                            // %L1393
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_129 Depth 2
	or.b32  	%r564, %r102, %r95;
	shl.b32 	%r565, %r564, 13;
	add.s32 	%r566, %r96, %r565;
	shr.s32 	%r567, %r566, 31;
	shr.u32 	%r568, %r567, 3;
	add.s32 	%r569, %r566, %r568;
	shr.s32 	%r570, %r569, 29;
	setp.lt.s32 	%p226, %r566, 0;
	and.b32  	%r571, %r569, -536870912;
	setp.ne.s32 	%p227, %r571, %r566;
	and.pred  	%p228, %p226, %p227;
	selp.u32 	%r572, 1, 0, %p228;
	sub.s32 	%r573, %r572, %r570;
	shl.b32 	%r574, %r573, 29;
	or.b32  	%r575, %r566, 1;
	add.s32 	%r576, %r575, %r574;
	mul.wide.s32 	%rd83, %r576, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r577, %r578, %r579, %r580}, [%rd84+-4];
	or.b32  	%r581, %r565, 524288;
	add.s32 	%r582, %r96, %r581;
	shr.s32 	%r583, %r582, 31;
	shr.u32 	%r584, %r583, 3;
	add.s32 	%r585, %r582, %r584;
	shr.s32 	%r586, %r585, 29;
	setp.lt.s32 	%p229, %r582, 0;
	and.b32  	%r587, %r585, -536870912;
	setp.ne.s32 	%p230, %r587, %r582;
	and.pred  	%p231, %p229, %p230;
	selp.u32 	%r588, 1, 0, %p231;
	sub.s32 	%r589, %r588, %r586;
	shl.b32 	%r590, %r589, 29;
	or.b32  	%r591, %r582, 1;
	add.s32 	%r592, %r591, %r590;
	mul.wide.s32 	%rd85, %r592, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r593, %r594, %r595, %r596}, [%rd86+-4];
	or.b32  	%r597, %r565, 1048576;
	add.s32 	%r598, %r96, %r597;
	shr.s32 	%r599, %r598, 31;
	shr.u32 	%r600, %r599, 3;
	add.s32 	%r601, %r598, %r600;
	shr.s32 	%r602, %r601, 29;
	setp.lt.s32 	%p232, %r598, 0;
	and.b32  	%r603, %r601, -536870912;
	setp.ne.s32 	%p233, %r603, %r598;
	and.pred  	%p234, %p232, %p233;
	selp.u32 	%r604, 1, 0, %p234;
	sub.s32 	%r605, %r604, %r602;
	shl.b32 	%r606, %r605, 29;
	or.b32  	%r607, %r598, 1;
	add.s32 	%r608, %r607, %r606;
	mul.wide.s32 	%rd87, %r608, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r609, %r610, %r611, %r612}, [%rd88+-4];
	or.b32  	%r613, %r565, 1572864;
	add.s32 	%r614, %r96, %r613;
	shr.s32 	%r615, %r614, 31;
	shr.u32 	%r616, %r615, 3;
	add.s32 	%r617, %r614, %r616;
	shr.s32 	%r618, %r617, 29;
	setp.lt.s32 	%p235, %r614, 0;
	and.b32  	%r619, %r617, -536870912;
	setp.ne.s32 	%p236, %r619, %r614;
	and.pred  	%p237, %p235, %p236;
	selp.u32 	%r620, 1, 0, %p237;
	sub.s32 	%r621, %r620, %r618;
	shl.b32 	%r622, %r621, 29;
	or.b32  	%r623, %r614, 1;
	add.s32 	%r624, %r623, %r622;
	mul.wide.s32 	%rd89, %r624, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r625, %r626, %r627, %r628}, [%rd90+-4];
	selp.b32 	%r629, %r579, %r577, %p225;
	shfl.sync.bfly.b32	%r630, %r629, 8, 31, -1;
	selp.b32 	%r500, %r577, %r630, %p225;
	selp.b32 	%r501, %r630, %r579, %p225;
	selp.b32 	%r631, %r580, %r578, %p225;
	shfl.sync.bfly.b32	%r632, %r631, 8, 31, -1;
	selp.b32 	%r508, %r578, %r632, %p225;
	selp.b32 	%r509, %r632, %r580, %p225;
	selp.b32 	%r633, %r595, %r593, %p225;
	shfl.sync.bfly.b32	%r634, %r633, 8, 31, -1;
	selp.b32 	%r516, %r593, %r634, %p225;
	selp.b32 	%r517, %r634, %r595, %p225;
	selp.b32 	%r635, %r596, %r594, %p225;
	shfl.sync.bfly.b32	%r636, %r635, 8, 31, -1;
	selp.b32 	%r524, %r594, %r636, %p225;
	selp.b32 	%r525, %r636, %r596, %p225;
	selp.b32 	%r637, %r611, %r609, %p225;
	shfl.sync.bfly.b32	%r638, %r637, 8, 31, -1;
	selp.b32 	%r532, %r609, %r638, %p225;
	selp.b32 	%r533, %r638, %r611, %p225;
	selp.b32 	%r639, %r612, %r610, %p225;
	shfl.sync.bfly.b32	%r640, %r639, 8, 31, -1;
	selp.b32 	%r540, %r610, %r640, %p225;
	selp.b32 	%r541, %r640, %r612, %p225;
	selp.b32 	%r641, %r627, %r625, %p225;
	shfl.sync.bfly.b32	%r642, %r641, 8, 31, -1;
	selp.b32 	%r548, %r625, %r642, %p225;
	selp.b32 	%r549, %r642, %r627, %p225;
	selp.b32 	%r643, %r628, %r626, %p225;
	shfl.sync.bfly.b32	%r644, %r643, 8, 31, -1;
	selp.b32 	%r556, %r626, %r644, %p225;
	selp.b32 	%r557, %r644, %r628, %p225;
	mov.u32 	%r558, 21520;
	// begin inline asm
	prmt.b32 %r499, %r500, %r501, %r558;
	// end inline asm
	mov.u32 	%r562, 30258;
	// begin inline asm
	prmt.b32 %r503, %r500, %r501, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r507, %r508, %r509, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r508, %r509, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r532, %r533, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r532, %r533, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r540, %r541, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r540, %r541, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r548, %r549, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r548, %r549, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r555, %r556, %r557, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r556, %r557, %r562;
	// end inline asm
	st.shared.u32 	[%rd6], %r499;
	st.shared.u32 	[%rd7+128], %r503;
	st.shared.u32 	[%rd7+4], %r507;
	st.shared.u32 	[%rd7+132], %r511;
	st.shared.u32 	[%rd8], %r515;
	st.shared.u32 	[%rd9+128], %r519;
	st.shared.u32 	[%rd9+4], %r523;
	st.shared.u32 	[%rd9+132], %r527;
	st.shared.u32 	[%rd10], %r531;
	st.shared.u32 	[%rd11+128], %r535;
	st.shared.u32 	[%rd11+4], %r539;
	st.shared.u32 	[%rd11+132], %r543;
	st.shared.u32 	[%rd12], %r547;
	st.shared.u32 	[%rd13+128], %r551;
	st.shared.u32 	[%rd13+4], %r555;
	st.shared.u32 	[%rd13+132], %r559;
	bar.sync 	0;
	mov.u32 	%r1209, 256;
	mov.u64 	%rd141, %rd23;
	mov.u64 	%rd142, %rd22;
	mov.u32 	%r1212, %r1203;
$L__BB0_129:                            // %pass4906
                                        //   Parent Loop BB0_128 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1203, %r1211;
	mov.u32 	%r1211, %r1210;
	ld.shared.u32 	%r1210, [%rd141];
	mov.u16 	%rs26, 25600;
	// begin inline asm
	mov.b32 %r650, {%rs26, %rs26};
	// end inline asm
	mov.u16 	%rs28, 21504;
	// begin inline asm
	mov.b32 %r661, {%rs28, %rs28};
	// end inline asm
	xor.b32  	%r649, %r1210, -2004318072;
	mov.u32 	%r648, 983055;
	// begin inline asm
	lop3.b32 %r647, %r648, %r649, %r650, 202;
	// end inline asm
	mov.u16 	%rs30, 18432;
	// begin inline asm
	mov.b32 %r651, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r652, %r650, %r651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r655, %r647, %r652;
	// end inline asm
	mov.u32 	%r659, 15728880;
	// begin inline asm
	lop3.b32 %r658, %r659, %r649, %r661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r662, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r663, %r661, %r662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r666, %r658, %r663;
	// end inline asm
	shr.u32 	%r671, %r649, 8;
	// begin inline asm
	lop3.b32 %r669, %r648, %r671, %r650, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r673, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r674, %r650, %r673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r677, %r669, %r674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r680, %r659, %r671, %r661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r685, %r661, %r684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r688, %r680, %r685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r691, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r693, %r691, %r655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r696, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r698, %r696, %r666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r701, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r703, %r701, %r677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r706, %r240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r708, %r706, %r688;
	// end inline asm
	// begin inline asm
	mov.b32 %r716, {%rs26, %rs26};
	// end inline asm
	// begin inline asm
	mov.b32 %r727, {%rs28, %rs28};
	// end inline asm
	xor.b32  	%r715, %r1212, -2004318072;
	// begin inline asm
	lop3.b32 %r713, %r648, %r715, %r716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r717, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r718, %r716, %r717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r721, %r713, %r718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r724, %r659, %r715, %r727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r728, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r729, %r727, %r728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r732, %r724, %r729;
	// end inline asm
	shr.u32 	%r737, %r715, 8;
	// begin inline asm
	lop3.b32 %r735, %r648, %r737, %r716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r739, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r740, %r716, %r739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r743, %r735, %r740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r746, %r659, %r737, %r727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r727, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r757, %r186, %r721, %r693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r761, %r186, %r732, %r698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r765, %r186, %r743, %r703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r769, %r186, %r754, %r708;
	// end inline asm
	// begin inline asm
	mov.b32 %r778, {%rs26, %rs26};
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs28, %rs28};
	// end inline asm
	xor.b32  	%r777, %r1203, -2004318072;
	// begin inline asm
	lop3.b32 %r775, %r648, %r777, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r780, %r778, %r779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r783, %r775, %r780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r786, %r659, %r777, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r789, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	shr.u32 	%r799, %r777, 8;
	// begin inline asm
	lop3.b32 %r797, %r648, %r799, %r778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r778, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r808, %r659, %r799, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r789, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r819, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r821, %r819, %r783, %r757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r827, %r825, %r794, %r761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r831, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r833, %r831, %r805, %r765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r837, %r204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r839, %r837, %r816, %r769;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs26, %rs26};
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs28, %rs28};
	// end inline asm
	xor.b32  	%r847, %r1211, -2004318072;
	// begin inline asm
	lop3.b32 %r845, %r648, %r847, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r856, %r659, %r847, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r859, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	shr.u32 	%r869, %r847, 8;
	// begin inline asm
	lop3.b32 %r867, %r648, %r869, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r878, %r659, %r869, %r859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r882, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r883, %r859, %r882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r886, %r878, %r883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r912, %r222, %r853, %r821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r909, %r222, %r864, %r827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r921, %r222, %r875, %r833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r918, %r222, %r886, %r839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r905, %r271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r907, %r905, %r909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r910, %r268, %r912, %r907;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r914, %r271;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r916, %r914, %r918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r919, %r268, %r921, %r916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r923, %r271, %r912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r926, %r268, %r909, %r923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r930, %r271, %r921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r933, %r268, %r918, %r930;
	// end inline asm
	mov.u32 	%r945, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r964, %r961}, {%r314, %r320, %r317, %r323}, {%r910, %r926}, {%r945, %r945};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r973, %r970}, {%r314, %r320, %r317, %r323}, {%r919, %r933}, {%r945, %r945};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r957, %r364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r959, %r957, %r961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r962, %r361, %r964, %r959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r966, %r364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r968, %r966, %r970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r971, %r361, %r973, %r968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r975, %r364, %r964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r978, %r361, %r961, %r975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r982, %r364, %r973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r985, %r361, %r970, %r982;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r989, %r990}, {%r402, %r408, %r405, %r411}, {%r962, %r978}, {%r945, %r945};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r999, %r1000}, {%r402, %r408, %r405, %r411}, {%r971, %r985}, {%r945, %r945};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1009, %r107, %r989;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1012, %r107, %r990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1015, %r107, %r999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1018, %r107, %r1000;
	// end inline asm
	mov.u16 	%rs74, -14592;
	// begin inline asm
	mov.b32 %r1021, {%rs74, %rs74};
	// end inline asm
	mov.u16 	%rs76, 18176;
	// begin inline asm
	mov.b32 %r1022, {%rs76, %rs76};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1023, %r1009, %r1021;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1026, %r1023, %r1022;
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs74, %rs74};
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs76, %rs76};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1031, %r1012, %r1029;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1034, %r1031, %r1030;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs74, %rs74};
	// end inline asm
	// begin inline asm
	mov.b32 %r1038, {%rs76, %rs76};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1039, %r1015, %r1037;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1042, %r1039, %r1038;
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs74, %rs74};
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs76, %rs76};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1047, %r1018, %r1045;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1050, %r1047, %r1046;
	// end inline asm
	// begin inline asm
	mov.b32 %r1056, {%rs26, %rs26};
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1056, %r1054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1026, %r1055;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1034, %r1062;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1056, %r1068;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1042, %r1069;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs30, %rs30};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1076, %r1056, %r1075;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1050, %r1076;
	// end inline asm
	mov.u32 	%r1085, 25152;
	// begin inline asm
	prmt.b32 %r1082, %r1058, %r1072, %r1085;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1086, %r1065, %r1079, %r1085;
	// end inline asm
	shl.b32 	%r1093, %r1086, 4;
	mov.u32 	%r1091, 252645135;
	// begin inline asm
	lop3.b32 %r1090, %r1091, %r1082, %r1093, 202;
	// end inline asm
	xor.b32  	%r1094, %r1090, -2004318072;
	st.shared.u32 	[%rd142], %r1094;
	add.s32 	%r1209, %r1209, -16;
	add.s64 	%rd142, %rd142, 2180;
	add.s64 	%rd141, %rd141, 2180;
	setp.eq.s32 	%p238, %r1209, 0;
	mov.u32 	%r1212, %r1203;
	@%p238 bra 	$L__BB0_130;
	bra.uni 	$L__BB0_129;
$L__BB0_130:                            // %guard_exit8003
                                        //   in Loop: Header=BB0_128 Depth=1
	bar.sync 	0;
	or.b32  	%r130, %r102, %r93;
	ld.shared.u32 	%r1100, [%rd14];
	ld.shared.u32 	%r1101, [%rd15+128];
	ld.shared.u32 	%r1108, [%rd15+4];
	ld.shared.u32 	%r1109, [%rd15+132];
	ld.shared.u32 	%r1116, [%rd16];
	ld.shared.u32 	%r1117, [%rd17+128];
	ld.shared.u32 	%r1124, [%rd17+4];
	ld.shared.u32 	%r1125, [%rd17+132];
	ld.shared.u32 	%r1132, [%rd18];
	ld.shared.u32 	%r1133, [%rd19+128];
	ld.shared.u32 	%r1140, [%rd19+4];
	ld.shared.u32 	%r1141, [%rd19+132];
	ld.shared.u32 	%r1148, [%rd20];
	ld.shared.u32 	%r1149, [%rd21+128];
	ld.shared.u32 	%r1156, [%rd21+4];
	ld.shared.u32 	%r1157, [%rd21+132];
	// begin inline asm
	prmt.b32 %r1095, %r1100, %r1101, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1099, %r1100, %r1101, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1103, %r1108, %r1109, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1107, %r1108, %r1109, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1111, %r1116, %r1117, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1115, %r1116, %r1117, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1119, %r1124, %r1125, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1123, %r1124, %r1125, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1127, %r1132, %r1133, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1131, %r1132, %r1133, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1135, %r1140, %r1141, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1139, %r1140, %r1141, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1143, %r1148, %r1149, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1147, %r1148, %r1149, %r562;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1151, %r1156, %r1157, %r558;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1155, %r1156, %r1157, %r562;
	// end inline asm
	selp.b32 	%r1159, %r1099, %r1095, %p225;
	shfl.sync.bfly.b32	%r135, %r1159, 8, 31, -1;
	selp.b32 	%r1160, %r1107, %r1103, %p225;
	shfl.sync.bfly.b32	%r136, %r1160, 8, 31, -1;
	selp.b32 	%r1161, %r1115, %r1111, %p225;
	shfl.sync.bfly.b32	%r1162, %r1161, 8, 31, -1;
	selp.b32 	%r137, %r1111, %r1162, %p225;
	selp.b32 	%r138, %r1162, %r1115, %p225;
	selp.b32 	%r1163, %r1123, %r1119, %p225;
	shfl.sync.bfly.b32	%r1164, %r1163, 8, 31, -1;
	selp.b32 	%r139, %r1119, %r1164, %p225;
	selp.b32 	%r140, %r1164, %r1123, %p225;
	selp.b32 	%r1165, %r1131, %r1127, %p225;
	shfl.sync.bfly.b32	%r1166, %r1165, 8, 31, -1;
	selp.b32 	%r1167, %r1139, %r1135, %p225;
	shfl.sync.bfly.b32	%r1168, %r1167, 8, 31, -1;
	selp.b32 	%r1169, %r1147, %r1143, %p225;
	shfl.sync.bfly.b32	%r1170, %r1169, 8, 31, -1;
	selp.b32 	%r1171, %r1155, %r1151, %p225;
	shfl.sync.bfly.b32	%r1172, %r1171, 8, 31, -1;
	shl.b32 	%r1188, %r130, 13;
	@%p239 bra 	$L__BB0_142;
	bra.uni 	$L__BB0_131;
$L__BB0_142:                            // %pass7503
                                        //   in Loop: Header=BB0_128 Depth=1
	selp.b32 	%r1175, %r136, %r1107, %p225;
	selp.b32 	%r1176, %r1103, %r136, %p225;
	selp.b32 	%r1177, %r135, %r1099, %p225;
	selp.b32 	%r1178, %r1095, %r135, %p225;
	or.b32  	%r1180, %r1188, %r98;
	or.b32  	%r1213, %r1180, %r92;
	cvt.s64.s32 	%rd91, %r1213;
	add.s64 	%rd92, %rd91, %rd5;
	shr.u64 	%rd93, %rd92, 35;
	add.s64 	%rd94, %rd92, %rd93;
	shr.s64 	%rd95, %rd94, 29;
	setp.lt.s64 	%p242, %rd92, 0;
	and.b64  	%rd96, %rd94, -536870912;
	setp.ne.s64 	%p243, %rd96, %rd92;
	and.pred  	%p244, %p242, %p243;
	selp.u64 	%rd97, 1, 0, %p244;
	sub.s64 	%rd98, %rd97, %rd95;
	shl.b64 	%rd99, %rd98, 29;
	add.s64 	%rd100, %rd99, %rd92;
	shl.b64 	%rd101, %rd100, 2;
	add.s64 	%rd102, %rd3, %rd101;
	st.global.v4.u32 	[%rd102], {%r1178, %r1176, %r1177, %r1175};
	bra.uni 	$L__BB0_143;
$L__BB0_131:                            // %guard_exit8003.pass7620_crit_edge
                                        //   in Loop: Header=BB0_128 Depth=1
	or.b32  	%r1174, %r1188, %r98;
	or.b32  	%r1213, %r1174, %r92;
$L__BB0_143:                            // %pass7620
                                        //   in Loop: Header=BB0_128 Depth=1
	selp.b32 	%r145, %r1143, %r1170, %p225;
	selp.b32 	%r146, %r1170, %r1147, %p225;
	selp.b32 	%r147, %r1151, %r1172, %p225;
	selp.b32 	%r148, %r1172, %r1155, %p225;
	or.b32  	%r1181, %r1213, 524288;
	cvt.s64.s32 	%rd103, %r1181;
	add.s64 	%rd104, %rd103, %rd5;
	shr.u64 	%rd105, %rd104, 35;
	add.s64 	%rd106, %rd104, %rd105;
	shr.s64 	%rd107, %rd106, 29;
	setp.lt.s64 	%p246, %rd104, 0;
	and.b64  	%rd108, %rd106, -536870912;
	setp.ne.s64 	%p247, %rd108, %rd104;
	and.pred  	%p248, %p246, %p247;
	selp.u64 	%rd109, 1, 0, %p248;
	sub.s64 	%rd110, %rd109, %rd107;
	shl.b64 	%rd111, %rd110, 29;
	add.s64 	%rd112, %rd111, %rd104;
	shl.b64 	%rd113, %rd112, 2;
	add.s64 	%rd114, %rd3, %rd113;
	st.global.v4.u32 	[%rd114], {%r137, %r139, %r138, %r140};
	@%p245 bra 	$L__BB0_145;
// %bb.144:                             // %pass7737
                                        //   in Loop: Header=BB0_128 Depth=1
	selp.b32 	%r141, %r1127, %r1166, %p225;
	selp.b32 	%r142, %r1166, %r1131, %p225;
	selp.b32 	%r143, %r1135, %r1168, %p225;
	selp.b32 	%r144, %r1168, %r1139, %p225;
	or.b32  	%r1182, %r1213, 1048576;
	cvt.s64.s32 	%rd115, %r1182;
	add.s64 	%rd116, %rd115, %rd5;
	shr.u64 	%rd117, %rd116, 35;
	add.s64 	%rd118, %rd116, %rd117;
	shr.s64 	%rd119, %rd118, 29;
	setp.lt.s64 	%p249, %rd116, 0;
	and.b64  	%rd120, %rd118, -536870912;
	setp.ne.s64 	%p250, %rd120, %rd116;
	and.pred  	%p251, %p249, %p250;
	selp.u64 	%rd121, 1, 0, %p251;
	sub.s64 	%rd122, %rd121, %rd119;
	shl.b64 	%rd123, %rd122, 29;
	add.s64 	%rd124, %rd123, %rd116;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r141, %r143, %r142, %r144};
	bra.uni 	$L__BB0_145;
$L__BB0_146:                            // %L17876
	st.global.u32 	[%rd4], %r1187;
	ret;
$L__BB0_7:                              // %L157
	mov.u32 	%r1186, 2;
	st.global.u32 	[%rd4], %r1186;
	mov.u64 	%rd139, exception1591;
	cvta.global.u64 	%rd140, %rd139;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd140;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r150;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r150;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
