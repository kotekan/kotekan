// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5093[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<309>;
	.reg .b16 	%rs<2389>;
	.reg .f32 	%f<1394>;
	.reg .b32 	%r<16214>;
	.reg .b64 	%rd<92>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r241, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r242, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r242, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd34, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd30, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r243, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r244, %r2, %r243;
	or.b32  	%r245, %r244, %r4;
	mul.wide.u32 	%rd40, %r245, 4;
	add.s64 	%rd4, %rd34, %rd40;
	mov.u32 	%r246, 1;
	st.global.u32 	[%rd4], %r246;
	ld.global.u32 	%r5, [%rd30];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r247, %r5, 255;
	setp.eq.s32 	%p3, %r247, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L271
	bfe.u32 	%r16, %r2, 1, 1;
	and.b32  	%r17, %r2, 1;
	bfe.u32 	%r19, %r2, 2, 1;
	shr.u32 	%r20, %r2, 4;
	shl.b32 	%r254, %r20, 2;
	shl.b32 	%r255, %r19, 3;
	shl.b32 	%r256, %r17, 4;
	shl.b32 	%r257, %r16, 5;
	or.b32  	%r258, %r256, %r257;
	or.b32  	%r259, %r255, %r258;
	or.b32  	%r260, %r254, %r259;
	bfe.u32 	%r22, %r2, 3, 1;
	shl.b32 	%r261, %r22, 1;
	or.b32  	%r23, %r261, %r260;
	or.b32  	%r24, %r23, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r23;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f1353, 0f3F800000;
	mov.f32 	%f1338, %f1353;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L663
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1338, %f288, %f3;
LBB0_6:                                 // %L666
	cvt.rn.f32.s32 	%f291, %r24;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f1339, %f1353;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L683
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1339, %f322, %f8;
LBB0_8:                                 // %L686
	or.b32  	%r279, %r23, 1;
	or.b32  	%r26, %r23, 65;
	cvt.rn.f32.s32 	%f326, %r279;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f1340, %f1353;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L772
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1340, %f357, %f12;
LBB0_10:                                // %L775
	cvt.rn.f32.s32 	%f360, %r26;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f1341, %f1353;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L792
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1341, %f391, %f17;
LBB0_12:                                // %L795
	or.b32  	%r297, %r23, 128;
	or.b32  	%r28, %r23, 192;
	cvt.rn.f32.s32 	%f395, %r297;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f1342, %f1353;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L881
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1342, %f426, %f21;
LBB0_14:                                // %L884
	cvt.rn.f32.s32 	%f429, %r28;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f1343, %f1353;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L901
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1343, %f460, %f26;
LBB0_16:                                // %L904
	or.b32  	%r315, %r23, 129;
	or.b32  	%r30, %r23, 193;
	cvt.rn.f32.s32 	%f464, %r315;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f1344, %f1353;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L990
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1344, %f495, %f30;
LBB0_18:                                // %L993
	cvt.rn.f32.s32 	%f498, %r30;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	mov.f32 	%f1345, %f1353;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L1010
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1345, %f529, %f35;
LBB0_20:                                // %L1013
	or.b32  	%r333, %r23, 256;
	or.b32  	%r32, %r23, 320;
	cvt.rn.f32.s32 	%f533, %r333;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p58, %f39, 0f00000000;
	mov.f32 	%f1346, %f1353;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L1099
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1346, %f564, %f39;
LBB0_22:                                // %L1102
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r32;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p64, %f44, 0f00000000;
	mov.f32 	%f1347, %f1353;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1119
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1347, %f598, %f44;
LBB0_24:                                // %L1122
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r351, %r23, 257;
	or.b32  	%r34, %r23, 321;
	cvt.rn.f32.s32 	%f602, %r351;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p70, %f48, 0f00000000;
	mov.f32 	%f1348, %f1353;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1208
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1348, %f633, %f48;
LBB0_26:                                // %L1211
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r34;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p76, %f53, 0f00000000;
	mov.f32 	%f1349, %f1353;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1228
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1349, %f667, %f53;
LBB0_28:                                // %L1231
	setp.gt.f32 	%p5, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p11, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p17, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p23, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p29, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p35, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p41, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p47, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p53, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p59, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p65, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p71, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r369, %r23, 384;
	or.b32  	%r36, %r23, 448;
	cvt.rn.f32.s32 	%f671, %r369;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p77, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p82, %f57, 0f00000000;
	mov.f32 	%f1350, %f1353;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1317
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1350, %f702, %f57;
LBB0_30:                                // %L1320
	selp.f32 	%f263, %f262, %f260, %p5;
	selp.f32 	%f297, %f296, %f294, %p11;
	selp.f32 	%f332, %f331, %f329, %p17;
	selp.f32 	%f366, %f365, %f363, %p23;
	selp.f32 	%f401, %f400, %f398, %p29;
	selp.f32 	%f435, %f434, %f432, %p35;
	selp.f32 	%f470, %f469, %f467, %p41;
	selp.f32 	%f504, %f503, %f501, %p47;
	selp.f32 	%f539, %f538, %f536, %p53;
	selp.f32 	%f573, %f572, %f570, %p59;
	selp.f32 	%f608, %f607, %f605, %p65;
	selp.f32 	%f642, %f641, %f639, %p71;
	selp.f32 	%f677, %f676, %f674, %p77;
	cvt.rn.f32.s32 	%f705, %r36;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p83, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p83;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p88, %f62, 0f00000000;
	mov.f32 	%f1351, %f1353;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1337
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1351, %f736, %f62;
LBB0_32:                                // %L1340
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r387, %r23, 385;
	or.b32  	%r38, %r23, 449;
	cvt.rn.f32.s32 	%f740, %r387;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p89, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p89;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p94, %f66, 0f00000000;
	mov.f32 	%f1352, %f1353;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1426
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1352, %f771, %f66;
LBB0_34:                                // %L1429
	mov.b32 	%r262, %f264;
	mov.b32 	%r269, %f298;
	mov.b32 	%r280, %f333;
	mov.b32 	%r287, %f367;
	mov.b32 	%r298, %f402;
	mov.b32 	%r305, %f436;
	mov.b32 	%r316, %f471;
	mov.b32 	%r323, %f505;
	mov.b32 	%r334, %f540;
	mov.b32 	%r341, %f574;
	mov.b32 	%r352, %f609;
	mov.b32 	%r359, %f643;
	mov.b32 	%r370, %f678;
	mov.b32 	%r377, %f712;
	mov.b32 	%r388, %f747;
	cvt.rn.f32.s32 	%f774, %r38;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p95, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p95;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r395, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p100, %f71, 0f00000000;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1446
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1353, %f805, %f71;
LBB0_36:                                // %L1449
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r270, %r269, -2147483648;
	and.b32  	%r281, %r280, -2147483648;
	and.b32  	%r288, %r287, -2147483648;
	and.b32  	%r299, %r298, -2147483648;
	and.b32  	%r306, %r305, -2147483648;
	and.b32  	%r317, %r316, -2147483648;
	and.b32  	%r324, %r323, -2147483648;
	and.b32  	%r335, %r334, -2147483648;
	and.b32  	%r342, %r341, -2147483648;
	and.b32  	%r353, %r352, -2147483648;
	and.b32  	%r360, %r359, -2147483648;
	and.b32  	%r371, %r370, -2147483648;
	and.b32  	%r378, %r377, -2147483648;
	and.b32  	%r389, %r388, -2147483648;
	and.b32  	%r396, %r395, -2147483648;
	mul.lo.s32 	%r40, %r23, 127;
	cvt.rn.f32.s32 	%f808, %r40;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1356, %f74;
	setp.lt.f32 	%p101, %f1356, 0f40000000;
	@%p101 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p102, %f1356, 0f4B800000;
	@%p102 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r42, %f1356;
	and.b32  	%r405, %r42, 8388607;
	or.b32  	%r16144, %r405, 1065353216;
	mov.b32 	%f1355, %r16144;
	add.s32 	%r406, %r42, -1073741824;
	and.b32  	%r16145, %r406, -8388608;
	setp.eq.s32 	%p108, %r16145, 0;
	@%p108 bra 	LBB0_47;
// %bb.45:                              // %.lr.ph3182.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %.lr.ph3182
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r407, %r16145, 192937984;
	add.s32 	%r408, %r407, %r16144;
	mov.b32 	%f820, %r408;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1355, %f820, %f826;
	sub.s32 	%r16145, %r16145, %r407;
	mov.b32 	%r16144, %f1355;
	setp.ne.s32 	%p109, %r16145, 0;
	setp.ne.s32 	%p110, %r16144, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p112, %r42, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f828, %f1355, 0f34000000;
	mul.f32 	%f1356, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1356, %f255;
	cvt.rzi.f32.f32 	%f76, %f811;
	fma.rn.f32 	%f77, %f76, 0fC0000000, %f1356;
	mov.b32 	%r41, %f77;
	setp.lt.u32 	%p103, %r41, 1073741824;
	mov.f32 	%f1354, %f76;
	@%p103 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p104, %r41, -2147483647;
	@%p104 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f76, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	selp.f32 	%f817, %f816, %f76, %p107;
	add.f32 	%f1354, %f817, 0fBF800000;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1354, %f76, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f813, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f813, 0f00000000;
	selp.f32 	%f814, %f1354, %f76, %p106;
	add.f32 	%f815, %f814, 0f3F800000;
	add.f32 	%f1354, %f815, 0f3F800000;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1356, %f1354, 0fC0000000, %f1356;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r271, %r270, 1056964608;
	or.b32  	%r282, %r281, 1056964608;
	or.b32  	%r289, %r288, 1056964608;
	or.b32  	%r300, %r299, 1056964608;
	or.b32  	%r307, %r306, 1056964608;
	or.b32  	%r318, %r317, 1056964608;
	or.b32  	%r325, %r324, 1056964608;
	or.b32  	%r336, %r335, 1056964608;
	or.b32  	%r343, %r342, 1056964608;
	or.b32  	%r354, %r353, 1056964608;
	or.b32  	%r361, %r360, 1056964608;
	or.b32  	%r372, %r371, 1056964608;
	or.b32  	%r379, %r378, 1056964608;
	or.b32  	%r390, %r389, 1056964608;
	or.b32  	%r397, %r396, 1056964608;
	abs.f32 	%f829, %f1356;
	setp.gtu.f32 	%p113, %f829, 0f7F800000;
	@%p113 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r409, %f74;
	and.b32  	%r410, %r409, -2147483648;
	mov.b32 	%r411, %f1356;
	or.b32  	%r412, %r410, %r411;
	mov.b32 	%f1356, %r412;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r264;
	mov.b32 	%f299, %r271;
	mov.b32 	%f334, %r282;
	mov.b32 	%f368, %r289;
	mov.b32 	%f403, %r300;
	mov.b32 	%f437, %r307;
	mov.b32 	%f472, %r318;
	mov.b32 	%f506, %r325;
	mov.b32 	%f541, %r336;
	mov.b32 	%f575, %r343;
	mov.b32 	%f610, %r354;
	mov.b32 	%f644, %r361;
	mov.b32 	%f679, %r372;
	mov.b32 	%f713, %r379;
	mov.b32 	%f748, %r390;
	mov.b32 	%f782, %r397;
	add.f32 	%f830, %f1356, %f1356;
	mov.b32 	%r413, %f830;
	and.b32  	%r414, %r413, -2147483648;
	or.b32  	%r415, %r414, 1056964608;
	mov.b32 	%f831, %r415;
	add.f32 	%f832, %f830, %f831;
	abs.f32 	%f834, %f830;
	add.s32 	%r421, %r40, 8128;
	cvt.rn.f32.s32 	%f860, %r421;
	div.approx.f32 	%f93, %f860, %f287;
	abs.f32 	%f1360, %f93;
	setp.lt.f32 	%p121, %f1360, 0f40000000;
	@%p121 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p122, %f1360, 0f4B800000;
	@%p122 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r50, %f1360;
	and.b32  	%r422, %r50, 8388607;
	or.b32  	%r16146, %r422, 1065353216;
	mov.b32 	%f1359, %r16146;
	add.s32 	%r423, %r50, -1073741824;
	and.b32  	%r16147, %r423, -8388608;
	setp.eq.s32 	%p128, %r16147, 0;
	@%p128 bra 	LBB0_61;
// %bb.59:                              // %.lr.ph3177.preheader
	mov.f32 	%f871, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f870,%f871;
	// end inline asm
LBB0_60:                                // %.lr.ph3177
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r424, %r16147, 192937984;
	add.s32 	%r425, %r424, %r16146;
	mov.b32 	%f872, %r425;
	mul.f32 	%f873, %f870, %f872;
	sub.f32 	%f874, %f872, %f873;
	fma.rn.f32 	%f875, %f874, %f870, %f873;
	sub.f32 	%f876, %f872, %f875;
	fma.rz.f32 	%f877, %f876, %f870, %f875;
	cvt.rzi.f32.f32 	%f878, %f877;
	sub.f32 	%f1359, %f872, %f878;
	sub.s32 	%r16147, %r16147, %r424;
	mov.b32 	%r16146, %f1359;
	setp.ne.s32 	%p129, %r16147, 0;
	setp.ne.s32 	%p130, %r16146, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2382
	setp.gt.u32 	%p132, %r50, 2139095039;
	selp.f32 	%f879, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f880, %f1359, 0f34000000;
	mul.f32 	%f1360, %f879, %f880;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2348
	div.approx.f32 	%f863, %f1360, %f255;
	cvt.rzi.f32.f32 	%f95, %f863;
	fma.rn.f32 	%f96, %f95, 0fC0000000, %f1360;
	mov.b32 	%r49, %f96;
	setp.lt.u32 	%p123, %r49, 1073741824;
	mov.f32 	%f1358, %f95;
	@%p123 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p124, %r49, -2147483647;
	@%p124 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f868, %f95, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	selp.f32 	%f869, %f868, %f95, %p127;
	add.f32 	%f1358, %f869, 0fBF800000;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1358, %f95, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2353
	fma.rn.f32 	%f865, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f865, 0f00000000;
	selp.f32 	%f866, %f1358, %f95, %p126;
	add.f32 	%f867, %f866, 0f3F800000;
	add.f32 	%f1358, %f867, 0f3F800000;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2356
	fma.rn.f32 	%f1360, %f1358, 0fC0000000, %f1360;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2385
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	cvt.rzi.f32.f32 	%f833, %f832;
	setp.gt.f32 	%p114, %f834, 0f4B000000;
	shr.u32 	%r18, %r2, 2;
	abs.f32 	%f881, %f1360;
	setp.gtu.f32 	%p133, %f881, 0f7F800000;
	@%p133 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r426, %f93;
	and.b32  	%r427, %r426, -2147483648;
	mov.b32 	%r428, %f1360;
	or.b32  	%r429, %r427, %r428;
	mov.b32 	%f1360, %r429;
LBB0_64:                                // %__nv_fmodf.exit2388
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p6, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p12, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p18, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p24, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p30, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p36, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p42, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p48, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p54, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p60, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p66, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p72, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p78, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p84, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p90, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p96, %f785, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p114;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p115, %f834, 0f3F000000;
	add.f32 	%f882, %f1360, %f1360;
	mov.b32 	%r442, %f882;
	and.b32  	%r443, %r442, -2147483648;
	or.b32  	%r444, %r443, 1056964608;
	mov.b32 	%f883, %r444;
	add.f32 	%f884, %f882, %f883;
	cvt.rzi.f32.f32 	%f885, %f884;
	abs.f32 	%f886, %f882;
	setp.gt.f32 	%p134, %f886, 0f4B000000;
	selp.f32 	%f887, %f882, %f885, %p134;
	cvt.rzi.f32.f32 	%f888, %f882;
	setp.lt.f32 	%p135, %f886, 0f3F000000;
	and.b32  	%r450, %r2, 3;
	mul.lo.s32 	%r451, %r450, %r18;
	shl.b32 	%r452, %r451, 1;
	neg.s32 	%r61, %r452;
	cvt.rn.f32.s32 	%f914, %r61;
	mov.f32 	%f915, 0f41000000;
	div.approx.f32 	%f110, %f914, %f915;
	abs.f32 	%f1364, %f110;
	setp.lt.f32 	%p141, %f1364, 0f40000000;
	@%p141 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p142, %f1364, 0f4B800000;
	@%p142 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r63, %f1364;
	and.b32  	%r453, %r63, 8388607;
	or.b32  	%r16148, %r453, 1065353216;
	mov.b32 	%f1363, %r16148;
	add.s32 	%r454, %r63, -1073741824;
	and.b32  	%r16149, %r454, -8388608;
	setp.eq.s32 	%p148, %r16149, 0;
	@%p148 bra 	LBB0_75;
// %bb.73:                              // %.lr.ph3162.preheader
	mov.f32 	%f925, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f924,%f925;
	// end inline asm
LBB0_74:                                // %.lr.ph3162
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r455, %r16149, 192937984;
	add.s32 	%r456, %r455, %r16148;
	mov.b32 	%f926, %r456;
	mul.f32 	%f927, %f924, %f926;
	sub.f32 	%f928, %f926, %f927;
	fma.rn.f32 	%f929, %f928, %f924, %f927;
	sub.f32 	%f930, %f926, %f929;
	fma.rz.f32 	%f931, %f930, %f924, %f929;
	cvt.rzi.f32.f32 	%f932, %f931;
	sub.f32 	%f1363, %f926, %f932;
	sub.s32 	%r16149, %r16149, %r455;
	mov.b32 	%r16148, %f1363;
	setp.ne.s32 	%p149, %r16149, 0;
	setp.ne.s32 	%p150, %r16148, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2435
	setp.gt.u32 	%p152, %r63, 2139095039;
	selp.f32 	%f933, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f934, %f1363, 0f34000000;
	mul.f32 	%f1364, %f933, %f934;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2401
	div.approx.f32 	%f917, %f1364, %f255;
	cvt.rzi.f32.f32 	%f112, %f917;
	fma.rn.f32 	%f113, %f112, 0fC0000000, %f1364;
	mov.b32 	%r62, %f113;
	setp.lt.u32 	%p143, %r62, 1073741824;
	mov.f32 	%f1362, %f112;
	@%p143 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p144, %r62, -2147483647;
	@%p144 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f922, %f112, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	selp.f32 	%f923, %f922, %f112, %p147;
	add.f32 	%f1362, %f923, 0fBF800000;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1362, %f112, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2406
	fma.rn.f32 	%f919, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f919, 0f00000000;
	selp.f32 	%f920, %f1362, %f112, %p146;
	add.f32 	%f921, %f920, 0f3F800000;
	add.f32 	%f1362, %f921, 0f3F800000;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2409
	fma.rn.f32 	%f1364, %f1362, 0fC0000000, %f1364;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2438
	selp.f32 	%f269, %f264, %f267, %p6;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p7, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p12;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p13, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p18;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p19, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p24;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p25, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p30;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p31, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p36;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p37, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p42;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p43, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p48;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p49, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p54;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p55, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p60;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p61, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p66;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p67, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p72;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p73, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p78;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p79, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p84;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p85, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p90;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p91, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p96;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p97, %f785, 0f3F000000;
	selp.f32 	%f837, %f836, %f835, %p115;
	selp.f32 	%f889, %f888, %f887, %p135;
	abs.f32 	%f935, %f1364;
	setp.gtu.f32 	%p153, %f935, 0f7F800000;
	@%p153 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r457, %f110;
	and.b32  	%r458, %r457, -2147483648;
	mov.b32 	%r459, %f1364;
	or.b32  	%r460, %r458, %r459;
	mov.b32 	%f1364, %r460;
LBB0_78:                                // %__nv_fmodf.exit2441
	selp.f32 	%f271, %f270, %f269, %p7;
	selp.f32 	%f305, %f304, %f303, %p13;
	selp.f32 	%f340, %f339, %f338, %p19;
	selp.f32 	%f374, %f373, %f372, %p25;
	selp.f32 	%f409, %f408, %f407, %p31;
	selp.f32 	%f443, %f442, %f441, %p37;
	selp.f32 	%f478, %f477, %f476, %p43;
	selp.f32 	%f512, %f511, %f510, %p49;
	selp.f32 	%f547, %f546, %f545, %p55;
	selp.f32 	%f581, %f580, %f579, %p61;
	selp.f32 	%f616, %f615, %f614, %p67;
	selp.f32 	%f650, %f649, %f648, %p73;
	selp.f32 	%f685, %f684, %f683, %p79;
	selp.f32 	%f719, %f718, %f717, %p85;
	selp.f32 	%f754, %f753, %f752, %p91;
	selp.f32 	%f788, %f787, %f786, %p97;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1356;
	fma.rn.f32 	%f890, %f889, 0fBF000000, %f1360;
	add.f32 	%f936, %f1364, %f1364;
	mov.b32 	%r461, %f936;
	and.b32  	%r462, %r461, -2147483648;
	or.b32  	%r463, %r462, 1056964608;
	mov.b32 	%f937, %r463;
	add.f32 	%f938, %f936, %f937;
	cvt.rzi.f32.f32 	%f939, %f938;
	abs.f32 	%f940, %f936;
	setp.gt.f32 	%p154, %f940, 0f4B000000;
	selp.f32 	%f941, %f936, %f939, %p154;
	cvt.rzi.f32.f32 	%f942, %f936;
	setp.lt.f32 	%p155, %f940, 0f3F000000;
	selp.f32 	%f943, %f942, %f941, %p155;
	fma.rn.f32 	%f944, %f943, 0fBF000000, %f1364;
	shl.b32 	%r70, %r18, 3;
	sub.s32 	%r469, %r61, %r70;
	cvt.rn.f32.s32 	%f966, %r469;
	div.approx.f32 	%f129, %f966, %f915;
	abs.f32 	%f1368, %f129;
	setp.lt.f32 	%p161, %f1368, 0f40000000;
	@%p161 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p162, %f1368, 0f4B800000;
	@%p162 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r72, %f1368;
	and.b32  	%r470, %r72, 8388607;
	or.b32  	%r16150, %r470, 1065353216;
	mov.b32 	%f1367, %r16150;
	add.s32 	%r471, %r72, -1073741824;
	and.b32  	%r16151, %r471, -8388608;
	setp.eq.s32 	%p168, %r16151, 0;
	@%p168 bra 	LBB0_89;
// %bb.87:                              // %.lr.ph3152.preheader
	mov.f32 	%f977, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f976,%f977;
	// end inline asm
LBB0_88:                                // %.lr.ph3152
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r472, %r16151, 192937984;
	add.s32 	%r473, %r472, %r16150;
	mov.b32 	%f978, %r473;
	mul.f32 	%f979, %f976, %f978;
	sub.f32 	%f980, %f978, %f979;
	fma.rn.f32 	%f981, %f980, %f976, %f979;
	sub.f32 	%f982, %f978, %f981;
	fma.rz.f32 	%f983, %f982, %f976, %f981;
	cvt.rzi.f32.f32 	%f984, %f983;
	sub.f32 	%f1367, %f978, %f984;
	sub.s32 	%r16151, %r16151, %r472;
	mov.b32 	%r16150, %f1367;
	setp.ne.s32 	%p169, %r16151, 0;
	setp.ne.s32 	%p170, %r16150, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2488
	setp.gt.u32 	%p172, %r72, 2139095039;
	selp.f32 	%f985, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f986, %f1367, 0f34000000;
	mul.f32 	%f1368, %f985, %f986;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2454
	div.approx.f32 	%f969, %f1368, %f255;
	cvt.rzi.f32.f32 	%f131, %f969;
	fma.rn.f32 	%f132, %f131, 0fC0000000, %f1368;
	mov.b32 	%r71, %f132;
	setp.lt.u32 	%p163, %r71, 1073741824;
	mov.f32 	%f1366, %f131;
	@%p163 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p164, %r71, -2147483647;
	@%p164 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f974, %f131, 0fBF800000;
	setp.lt.f32 	%p167, %f132, 0fC0000000;
	selp.f32 	%f975, %f974, %f131, %p167;
	add.f32 	%f1366, %f975, 0fBF800000;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1366, %f131, 0f3F800000;
	setp.ltu.f32 	%p165, %f132, 0f40800000;
	@%p165 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2459
	fma.rn.f32 	%f971, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p166, %f971, 0f00000000;
	selp.f32 	%f972, %f1366, %f131, %p166;
	add.f32 	%f973, %f972, 0f3F800000;
	add.f32 	%f1366, %f973, 0f3F800000;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2462
	fma.rn.f32 	%f1368, %f1366, 0fC0000000, %f1368;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2491
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f839, %f838, %f838;
	mul.f32 	%f891, %f890, %f890;
	mul.f32 	%f945, %f944, %f944;
	shl.b32 	%r6, %r2, 1;
	abs.f32 	%f987, %f1368;
	setp.gtu.f32 	%p173, %f987, 0f7F800000;
	@%p173 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r474, %f129;
	and.b32  	%r475, %r474, -2147483648;
	mov.b32 	%r476, %f1368;
	or.b32  	%r477, %r475, %r476;
	mov.b32 	%f1368, %r477;
LBB0_92:                                // %__nv_fmodf.exit2494
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f840, %f839, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f841, %f839, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f892, %f891, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f893, %f891, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f946, %f945, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f947, %f945, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f988, %f1368, %f1368;
	mov.b32 	%r490, %f988;
	and.b32  	%r491, %r490, -2147483648;
	or.b32  	%r492, %r491, 1056964608;
	mov.b32 	%f989, %r492;
	add.f32 	%f990, %f988, %f989;
	cvt.rzi.f32.f32 	%f991, %f990;
	abs.f32 	%f992, %f988;
	setp.gt.f32 	%p174, %f992, 0f4B000000;
	selp.f32 	%f993, %f988, %f991, %p174;
	cvt.rzi.f32.f32 	%f994, %f988;
	setp.lt.f32 	%p175, %f992, 0f3F000000;
	selp.f32 	%f995, %f994, %f993, %p175;
	fma.rn.f32 	%f996, %f995, 0fBF000000, %f1368;
	mul.f32 	%f997, %f996, %f996;
	fma.rn.f32 	%f998, %f997, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f999, %f997, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r498, %r6, 6;
	shl.b32 	%r499, %r498, 1;
	neg.s32 	%r83, %r499;
	mul.lo.s32 	%r84, %r83, %r18;
	cvt.rn.f32.s32 	%f1020, %r84;
	div.approx.f32 	%f146, %f1020, %f287;
	abs.f32 	%f1372, %f146;
	setp.lt.f32 	%p181, %f1372, 0f40000000;
	@%p181 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p182, %f1372, 0f4B800000;
	@%p182 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r86, %f1372;
	and.b32  	%r500, %r86, 8388607;
	or.b32  	%r16152, %r500, 1065353216;
	mov.b32 	%f1371, %r16152;
	add.s32 	%r501, %r86, -1073741824;
	and.b32  	%r16153, %r501, -8388608;
	setp.eq.s32 	%p188, %r16153, 0;
	@%p188 bra 	LBB0_103;
// %bb.101:                             // %.lr.ph3137.preheader
	mov.f32 	%f1031, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1030,%f1031;
	// end inline asm
LBB0_102:                               // %.lr.ph3137
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r502, %r16153, 192937984;
	add.s32 	%r503, %r502, %r16152;
	mov.b32 	%f1032, %r503;
	mul.f32 	%f1033, %f1030, %f1032;
	sub.f32 	%f1034, %f1032, %f1033;
	fma.rn.f32 	%f1035, %f1034, %f1030, %f1033;
	sub.f32 	%f1036, %f1032, %f1035;
	fma.rz.f32 	%f1037, %f1036, %f1030, %f1035;
	cvt.rzi.f32.f32 	%f1038, %f1037;
	sub.f32 	%f1371, %f1032, %f1038;
	sub.s32 	%r16153, %r16153, %r502;
	mov.b32 	%r16152, %f1371;
	setp.ne.s32 	%p189, %r16153, 0;
	setp.ne.s32 	%p190, %r16152, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2541
	setp.gt.u32 	%p192, %r86, 2139095039;
	selp.f32 	%f1039, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f1040, %f1371, 0f34000000;
	mul.f32 	%f1372, %f1039, %f1040;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2507
	div.approx.f32 	%f1023, %f1372, %f255;
	cvt.rzi.f32.f32 	%f148, %f1023;
	fma.rn.f32 	%f149, %f148, 0fC0000000, %f1372;
	mov.b32 	%r85, %f149;
	setp.lt.u32 	%p183, %r85, 1073741824;
	mov.f32 	%f1370, %f148;
	@%p183 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p184, %r85, -2147483647;
	@%p184 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1028, %f148, 0fBF800000;
	setp.lt.f32 	%p187, %f149, 0fC0000000;
	selp.f32 	%f1029, %f1028, %f148, %p187;
	add.f32 	%f1370, %f1029, 0fBF800000;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1370, %f148, 0f3F800000;
	setp.ltu.f32 	%p185, %f149, 0f40800000;
	@%p185 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2512
	fma.rn.f32 	%f1025, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p186, %f1025, 0f00000000;
	selp.f32 	%f1026, %f1370, %f148, %p186;
	add.f32 	%f1027, %f1026, 0f3F800000;
	add.f32 	%f1370, %f1027, 0f3F800000;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2515
	fma.rn.f32 	%f1372, %f1370, 0fC0000000, %f1372;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2544
	cvt.rzi.s32.f32 	%r265, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r272, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r283, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r290, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r301, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r308, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r319, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r326, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r337, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r344, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r355, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r362, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r373, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r380, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r391, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r398, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r416, %f837;
	fma.rn.f32 	%f842, %f840, %f839, 0fC0A55DF6;
	fma.rn.f32 	%f843, %f841, %f839, 0f4081E0CF;
	fma.rn.f32 	%f844, %f839, %f838, 0f00000000;
	cvt.rzi.s32.f32 	%r445, %f889;
	fma.rn.f32 	%f894, %f892, %f891, 0fC0A55DF6;
	fma.rn.f32 	%f895, %f893, %f891, 0f4081E0CF;
	fma.rn.f32 	%f896, %f891, %f890, 0f00000000;
	cvt.rzi.s32.f32 	%r464, %f943;
	fma.rn.f32 	%f948, %f946, %f945, 0fC0A55DF6;
	fma.rn.f32 	%f949, %f947, %f945, 0f4081E0CF;
	fma.rn.f32 	%f950, %f945, %f944, 0f00000000;
	cvt.rzi.s32.f32 	%r493, %f995;
	fma.rn.f32 	%f1000, %f998, %f997, 0fC0A55DF6;
	fma.rn.f32 	%f1001, %f999, %f997, 0f4081E0CF;
	fma.rn.f32 	%f1002, %f997, %f996, 0f00000000;
	abs.f32 	%f1041, %f1372;
	setp.gtu.f32 	%p193, %f1041, 0f7F800000;
	@%p193 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r504, %f146;
	and.b32  	%r505, %r504, -2147483648;
	mov.b32 	%r506, %f1372;
	or.b32  	%r507, %r505, %r506;
	mov.b32 	%f1372, %r507;
LBB0_106:                               // %__nv_fmodf.exit2547
	add.s32 	%r266, %r265, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r273, %r272, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r284, %r283, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r291, %r290, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r302, %r301, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r309, %r308, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r320, %r319, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r327, %r326, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r338, %r337, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r345, %r344, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r356, %r355, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r363, %r362, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r374, %r373, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r381, %r380, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r392, %r391, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r399, %r398, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f845, %f843, %f839, 0fC09DE9E6;
	fma.rn.f32 	%f846, %f842, %f844, 0f00000000;
	and.b32  	%r417, %r416, 1;
	fma.rn.f32 	%f897, %f895, %f891, 0fC09DE9E6;
	fma.rn.f32 	%f898, %f894, %f896, 0f00000000;
	and.b32  	%r446, %r445, 1;
	fma.rn.f32 	%f951, %f949, %f945, 0fC09DE9E6;
	fma.rn.f32 	%f952, %f948, %f950, 0f00000000;
	and.b32  	%r465, %r464, 1;
	fma.rn.f32 	%f1003, %f1001, %f997, 0fC09DE9E6;
	fma.rn.f32 	%f1004, %f1000, %f1002, 0f00000000;
	and.b32  	%r494, %r493, 1;
	add.f32 	%f1042, %f1372, %f1372;
	mov.b32 	%r508, %f1042;
	and.b32  	%r509, %r508, -2147483648;
	or.b32  	%r510, %r509, 1056964608;
	mov.b32 	%f1043, %r510;
	add.f32 	%f1044, %f1042, %f1043;
	cvt.rzi.f32.f32 	%f1045, %f1044;
	abs.f32 	%f1046, %f1042;
	setp.gt.f32 	%p194, %f1046, 0f4B000000;
	selp.f32 	%f1047, %f1042, %f1045, %p194;
	cvt.rzi.f32.f32 	%f1048, %f1042;
	setp.lt.f32 	%p195, %f1046, 0f3F000000;
	selp.f32 	%f1049, %f1048, %f1047, %p195;
	cvt.rzi.s32.f32 	%r511, %f1049;
	fma.rn.f32 	%f1050, %f1049, 0fBF000000, %f1372;
	mul.f32 	%f1051, %f1050, %f1050;
	fma.rn.f32 	%f1052, %f1051, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1053, %f1051, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1054, %f1052, %f1051, 0fC0A55DF6;
	fma.rn.f32 	%f1055, %f1053, %f1051, 0f4081E0CF;
	fma.rn.f32 	%f1056, %f1051, %f1050, 0f00000000;
	sub.s32 	%r516, %r84, %r70;
	cvt.rn.f32.s32 	%f1072, %r516;
	div.approx.f32 	%f165, %f1072, %f287;
	abs.f32 	%f1376, %f165;
	setp.lt.f32 	%p201, %f1376, 0f40000000;
	@%p201 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p202, %f1376, 0f4B800000;
	@%p202 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r94, %f1376;
	and.b32  	%r517, %r94, 8388607;
	or.b32  	%r16154, %r517, 1065353216;
	mov.b32 	%f1375, %r16154;
	add.s32 	%r518, %r94, -1073741824;
	and.b32  	%r16155, %r518, -8388608;
	setp.eq.s32 	%p208, %r16155, 0;
	@%p208 bra 	LBB0_117;
// %bb.115:                             // %.lr.ph3127.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_116:                               // %.lr.ph3127
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r519, %r16155, 192937984;
	add.s32 	%r520, %r519, %r16154;
	mov.b32 	%f1084, %r520;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1375, %f1084, %f1090;
	sub.s32 	%r16155, %r16155, %r519;
	mov.b32 	%r16154, %f1375;
	setp.ne.s32 	%p209, %r16155, 0;
	setp.ne.s32 	%p210, %r16154, 0;
	and.pred  	%p211, %p209, %p210;
	@%p211 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2594
	setp.gt.u32 	%p212, %r94, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p212;
	mul.f32 	%f1092, %f1375, 0f34000000;
	mul.f32 	%f1376, %f1091, %f1092;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2560
	div.approx.f32 	%f1075, %f1376, %f255;
	cvt.rzi.f32.f32 	%f167, %f1075;
	fma.rn.f32 	%f168, %f167, 0fC0000000, %f1376;
	mov.b32 	%r93, %f168;
	setp.lt.u32 	%p203, %r93, 1073741824;
	mov.f32 	%f1374, %f167;
	@%p203 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p204, %r93, -2147483647;
	@%p204 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1080, %f167, 0fBF800000;
	setp.lt.f32 	%p207, %f168, 0fC0000000;
	selp.f32 	%f1081, %f1080, %f167, %p207;
	add.f32 	%f1374, %f1081, 0fBF800000;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1374, %f167, 0f3F800000;
	setp.ltu.f32 	%p205, %f168, 0f40800000;
	@%p205 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2565
	fma.rn.f32 	%f1077, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p206, %f1077, 0f00000000;
	selp.f32 	%f1078, %f1374, %f167, %p206;
	add.f32 	%f1079, %f1078, 0f3F800000;
	add.f32 	%f1374, %f1079, 0f3F800000;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2568
	fma.rn.f32 	%f1376, %f1374, 0fC0000000, %f1376;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2597
	shl.b32 	%r8, %r2, 2;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r267, %r266, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r274, %r273, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r285, %r284, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r292, %r291, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r303, %r302, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r321, %r320, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r328, %r327, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r339, %r338, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r346, %r345, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r364, %r363, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r375, %r374, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r382, %r381, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r393, %r392, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r400, %r399, 1;
	fma.rn.f32 	%f847, %f845, %f839, 0f3F800000;
	fma.rn.f32 	%f848, %f838, 0f40490FDB, %f846;
	setp.eq.b32 	%p116, %r417, 1;
	fma.rn.f32 	%f899, %f897, %f891, 0f3F800000;
	fma.rn.f32 	%f900, %f890, 0f40490FDB, %f898;
	setp.eq.b32 	%p136, %r446, 1;
	fma.rn.f32 	%f953, %f951, %f945, 0f3F800000;
	fma.rn.f32 	%f954, %f944, 0f40490FDB, %f952;
	setp.eq.b32 	%p156, %r465, 1;
	fma.rn.f32 	%f1005, %f1003, %f997, 0f3F800000;
	fma.rn.f32 	%f1006, %f996, 0f40490FDB, %f1004;
	setp.eq.b32 	%p176, %r494, 1;
	fma.rn.f32 	%f1057, %f1055, %f1051, 0fC09DE9E6;
	fma.rn.f32 	%f1058, %f1054, %f1056, 0f00000000;
	and.b32  	%r512, %r511, 1;
	shr.u32 	%r15, %r2, 1;
	shr.u32 	%r21, %r2, 3;
	abs.f32 	%f1093, %f1376;
	setp.gtu.f32 	%p213, %f1093, 0f7F800000;
	@%p213 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r521, %f165;
	and.b32  	%r522, %r521, -2147483648;
	mov.b32 	%r523, %f1376;
	or.b32  	%r524, %r522, %r523;
	mov.b32 	%f1376, %r524;
LBB0_120:                               // %__nv_fmodf.exit2600
	and.b32  	%r7, %r6, 8;
	and.b32  	%r9, %r8, 32;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p8, %r267, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p14, %r274, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p20, %r285, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p26, %r292, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p32, %r303, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p38, %r310, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p44, %r321, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p50, %r328, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p56, %r339, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p62, %r346, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p68, %r357, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p74, %r364, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p80, %r375, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p86, %r382, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p92, %r393, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p98, %r400, 1;
	selp.f32 	%f849, %f847, %f848, %p116;
	and.b32  	%r418, %r416, 2;
	selp.f32 	%f901, %f899, %f900, %p136;
	and.b32  	%r447, %r445, 2;
	selp.f32 	%f955, %f953, %f954, %p156;
	and.b32  	%r466, %r464, 2;
	selp.f32 	%f1007, %f1005, %f1006, %p176;
	and.b32  	%r495, %r493, 2;
	fma.rn.f32 	%f1059, %f1057, %f1051, 0f3F800000;
	fma.rn.f32 	%f1060, %f1050, 0f40490FDB, %f1058;
	setp.eq.b32 	%p196, %r512, 1;
	add.f32 	%f1094, %f1376, %f1376;
	mov.b32 	%r531, %f1094;
	and.b32  	%r532, %r531, -2147483648;
	or.b32  	%r533, %r532, 1056964608;
	mov.b32 	%f1095, %r533;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p214, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p214;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p215, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p215;
	cvt.rzi.s32.f32 	%r534, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1376;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r535, %r534, 1;
	setp.eq.b32 	%p216, %r535, 1;
	and.b32  	%r539, %r21, 2;
	and.b32  	%r540, %r15, 4;
	or.b32  	%r541, %r19, %r539;
	or.b32  	%r103, %r541, %r540;
	mul.lo.s32 	%r104, %r83, %r103;
	cvt.rn.f32.s32 	%f1126, %r104;
	mov.f32 	%f1127, 0f41800000;
	div.approx.f32 	%f182, %f1126, %f1127;
	abs.f32 	%f1380, %f182;
	setp.lt.f32 	%p221, %f1380, 0f40000000;
	@%p221 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p222, %f1380, 0f4B800000;
	@%p222 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r106, %f1380;
	and.b32  	%r542, %r106, 8388607;
	or.b32  	%r16156, %r542, 1065353216;
	mov.b32 	%f1379, %r16156;
	add.s32 	%r543, %r106, -1073741824;
	and.b32  	%r16157, %r543, -8388608;
	setp.eq.s32 	%p228, %r16157, 0;
	@%p228 bra 	LBB0_131;
// %bb.129:                             // %.lr.ph3116.preheader
	mov.f32 	%f1137, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1136,%f1137;
	// end inline asm
LBB0_130:                               // %.lr.ph3116
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r544, %r16157, 192937984;
	add.s32 	%r545, %r544, %r16156;
	mov.b32 	%f1138, %r545;
	mul.f32 	%f1139, %f1136, %f1138;
	sub.f32 	%f1140, %f1138, %f1139;
	fma.rn.f32 	%f1141, %f1140, %f1136, %f1139;
	sub.f32 	%f1142, %f1138, %f1141;
	fma.rz.f32 	%f1143, %f1142, %f1136, %f1141;
	cvt.rzi.f32.f32 	%f1144, %f1143;
	sub.f32 	%f1379, %f1138, %f1144;
	sub.s32 	%r16157, %r16157, %r544;
	mov.b32 	%r16156, %f1379;
	setp.ne.s32 	%p229, %r16157, 0;
	setp.ne.s32 	%p230, %r16156, 0;
	and.pred  	%p231, %p229, %p230;
	@%p231 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2647
	setp.gt.u32 	%p232, %r106, 2139095039;
	selp.f32 	%f1145, 0f7FFFFFFF, 0f4B800000, %p232;
	mul.f32 	%f1146, %f1379, 0f34000000;
	mul.f32 	%f1380, %f1145, %f1146;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2613
	div.approx.f32 	%f1129, %f1380, %f255;
	cvt.rzi.f32.f32 	%f184, %f1129;
	fma.rn.f32 	%f185, %f184, 0fC0000000, %f1380;
	mov.b32 	%r105, %f185;
	setp.lt.u32 	%p223, %r105, 1073741824;
	mov.f32 	%f1378, %f184;
	@%p223 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p224, %r105, -2147483647;
	@%p224 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1134, %f184, 0fBF800000;
	setp.lt.f32 	%p227, %f185, 0fC0000000;
	selp.f32 	%f1135, %f1134, %f184, %p227;
	add.f32 	%f1378, %f1135, 0fBF800000;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1378, %f184, 0f3F800000;
	setp.ltu.f32 	%p225, %f185, 0f40800000;
	@%p225 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2618
	fma.rn.f32 	%f1131, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p226, %f1131, 0f00000000;
	selp.f32 	%f1132, %f1378, %f184, %p226;
	add.f32 	%f1133, %f1132, 0f3F800000;
	add.f32 	%f1378, %f1133, 0f3F800000;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2621
	fma.rn.f32 	%f1380, %f1378, 0fC0000000, %f1380;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2650
	or.b32  	%r249, %r9, %r7;
	and.b32  	%r10, %r2, 16;
	selp.f32 	%f283, %f281, %f282, %p8;
	and.b32  	%r268, %r266, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p14;
	and.b32  	%r275, %r273, 2;
	selp.f32 	%f352, %f350, %f351, %p20;
	and.b32  	%r286, %r284, 2;
	selp.f32 	%f386, %f384, %f385, %p26;
	and.b32  	%r293, %r291, 2;
	selp.f32 	%f421, %f419, %f420, %p32;
	and.b32  	%r304, %r302, 2;
	selp.f32 	%f455, %f453, %f454, %p38;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f490, %f488, %f489, %p44;
	and.b32  	%r322, %r320, 2;
	selp.f32 	%f524, %f522, %f523, %p50;
	and.b32  	%r329, %r327, 2;
	selp.f32 	%f559, %f557, %f558, %p56;
	and.b32  	%r340, %r338, 2;
	selp.f32 	%f593, %f591, %f592, %p62;
	and.b32  	%r347, %r345, 2;
	selp.f32 	%f628, %f626, %f627, %p68;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f662, %f660, %f661, %p74;
	and.b32  	%r365, %r363, 2;
	selp.f32 	%f697, %f695, %f696, %p80;
	and.b32  	%r376, %r374, 2;
	selp.f32 	%f731, %f729, %f730, %p86;
	and.b32  	%r383, %r381, 2;
	selp.f32 	%f766, %f764, %f765, %p92;
	and.b32  	%r394, %r392, 2;
	selp.f32 	%f800, %f798, %f799, %p98;
	and.b32  	%r401, %r399, 2;
	setp.eq.s32 	%p117, %r418, 0;
	neg.f32 	%f851, %f849;
	add.s32 	%r419, %r416, 1;
	cvt.rzi.f32.f32 	%f856, %f1356;
	setp.eq.s32 	%p137, %r447, 0;
	neg.f32 	%f903, %f901;
	add.s32 	%r448, %r445, 1;
	cvt.rzi.f32.f32 	%f908, %f1360;
	setp.eq.s32 	%p157, %r466, 0;
	neg.f32 	%f957, %f955;
	add.s32 	%r467, %r464, 1;
	cvt.rzi.f32.f32 	%f962, %f1364;
	setp.eq.s32 	%p177, %r495, 0;
	neg.f32 	%f1009, %f1007;
	add.s32 	%r496, %r493, 1;
	cvt.rzi.f32.f32 	%f1014, %f1368;
	selp.f32 	%f1061, %f1059, %f1060, %p196;
	and.b32  	%r513, %r511, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p216;
	and.b32  	%r536, %r534, 2;
	abs.f32 	%f1147, %f1380;
	setp.gtu.f32 	%p233, %f1147, 0f7F800000;
	@%p233 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r546, %f182;
	and.b32  	%r547, %r546, -2147483648;
	mov.b32 	%r548, %f1380;
	or.b32  	%r549, %r547, %r548;
	mov.b32 	%f1380, %r549;
LBB0_134:                               // %__nv_fmodf.exit2653
	or.b32  	%r250, %r249, %r10;
	and.b32  	%r11, %r2, 2;
	setp.eq.s32 	%p9, %r268, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p15, %r275, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p21, %r286, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p27, %r293, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p33, %r304, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p39, %r311, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p45, %r322, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p51, %r329, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p57, %r340, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p63, %r347, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p69, %r358, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p75, %r365, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p81, %r376, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p87, %r383, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p93, %r394, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p99, %r401, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f850, %f848, %f847, %p116;
	selp.f32 	%f852, %f849, %f851, %p117;
	and.b32  	%r420, %r419, 2;
	setp.eq.f32 	%p119, %f856, %f1356;
	mul.f32 	%f857, %f1356, 0f00000000;
	selp.f32 	%f902, %f900, %f899, %p136;
	selp.f32 	%f904, %f901, %f903, %p137;
	and.b32  	%r449, %r448, 2;
	setp.eq.f32 	%p139, %f908, %f1360;
	mul.f32 	%f909, %f1360, 0f00000000;
	selp.f32 	%f956, %f954, %f953, %p156;
	selp.f32 	%f958, %f955, %f957, %p157;
	and.b32  	%r468, %r467, 2;
	setp.eq.f32 	%p159, %f962, %f1364;
	mul.f32 	%f963, %f1364, 0f00000000;
	selp.f32 	%f1008, %f1006, %f1005, %p176;
	selp.f32 	%f1010, %f1007, %f1009, %p177;
	and.b32  	%r497, %r496, 2;
	setp.eq.f32 	%p179, %f1014, %f1368;
	mul.f32 	%f1015, %f1368, 0f00000000;
	setp.eq.s32 	%p197, %r513, 0;
	neg.f32 	%f1063, %f1061;
	add.s32 	%r514, %r511, 1;
	cvt.rzi.f32.f32 	%f1068, %f1372;
	setp.eq.s32 	%p217, %r536, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r537, %r534, 1;
	cvt.rzi.f32.f32 	%f1120, %f1376;
	add.f32 	%f1148, %f1380, %f1380;
	mov.b32 	%r550, %f1148;
	and.b32  	%r551, %r550, -2147483648;
	or.b32  	%r552, %r551, 1056964608;
	mov.b32 	%f1149, %r552;
	add.f32 	%f1150, %f1148, %f1149;
	cvt.rzi.f32.f32 	%f1151, %f1150;
	abs.f32 	%f1152, %f1148;
	setp.gt.f32 	%p234, %f1152, 0f4B000000;
	selp.f32 	%f1153, %f1148, %f1151, %p234;
	cvt.rzi.f32.f32 	%f1154, %f1148;
	setp.lt.f32 	%p235, %f1152, 0f3F000000;
	selp.f32 	%f1155, %f1154, %f1153, %p235;
	cvt.rzi.s32.f32 	%r553, %f1155;
	fma.rn.f32 	%f1156, %f1155, 0fBF000000, %f1380;
	mul.f32 	%f1157, %f1156, %f1156;
	fma.rn.f32 	%f1158, %f1157, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1159, %f1157, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1160, %f1158, %f1157, 0fC0A55DF6;
	fma.rn.f32 	%f1161, %f1159, %f1157, 0f4081E0CF;
	fma.rn.f32 	%f1162, %f1157, %f1156, 0f00000000;
	fma.rn.f32 	%f1163, %f1161, %f1157, 0fC09DE9E6;
	fma.rn.f32 	%f1164, %f1160, %f1162, 0f00000000;
	fma.rn.f32 	%f1165, %f1163, %f1157, 0f3F800000;
	fma.rn.f32 	%f1166, %f1156, 0f40490FDB, %f1164;
	and.b32  	%r554, %r553, 1;
	setp.eq.b32 	%p236, %r554, 1;
	selp.f32 	%f1167, %f1165, %f1166, %p236;
	selp.f32 	%f1168, %f1166, %f1165, %p236;
	and.b32  	%r555, %r553, 2;
	setp.eq.s32 	%p237, %r555, 0;
	neg.f32 	%f1169, %f1167;
	selp.f32 	%f1170, %f1167, %f1169, %p237;
	add.s32 	%r556, %r553, 1;
	and.b32  	%r557, %r556, 2;
	cvt.rzi.f32.f32 	%f1174, %f1380;
	setp.eq.f32 	%p239, %f1174, %f1380;
	mul.f32 	%f1175, %f1380, 0f00000000;
	shl.b32 	%r558, %r103, 3;
	sub.s32 	%r559, %r104, %r558;
	cvt.rn.f32.s32 	%f1178, %r559;
	div.approx.f32 	%f201, %f1178, %f1127;
	abs.f32 	%f1384, %f201;
	setp.lt.f32 	%p241, %f1384, 0f40000000;
	@%p241 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p242, %f1384, 0f4B800000;
	@%p242 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r114, %f1384;
	and.b32  	%r560, %r114, 8388607;
	or.b32  	%r16158, %r560, 1065353216;
	mov.b32 	%f1383, %r16158;
	add.s32 	%r561, %r114, -1073741824;
	and.b32  	%r16159, %r561, -8388608;
	setp.eq.s32 	%p248, %r16159, 0;
	@%p248 bra 	LBB0_145;
// %bb.143:                             // %.lr.ph3110.preheader
	mov.f32 	%f1189, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1188,%f1189;
	// end inline asm
LBB0_144:                               // %.lr.ph3110
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r562, %r16159, 192937984;
	add.s32 	%r563, %r562, %r16158;
	mov.b32 	%f1190, %r563;
	mul.f32 	%f1191, %f1188, %f1190;
	sub.f32 	%f1192, %f1190, %f1191;
	fma.rn.f32 	%f1193, %f1192, %f1188, %f1191;
	sub.f32 	%f1194, %f1190, %f1193;
	fma.rz.f32 	%f1195, %f1194, %f1188, %f1193;
	cvt.rzi.f32.f32 	%f1196, %f1195;
	sub.f32 	%f1383, %f1190, %f1196;
	sub.s32 	%r16159, %r16159, %r562;
	mov.b32 	%r16158, %f1383;
	setp.ne.s32 	%p249, %r16159, 0;
	setp.ne.s32 	%p250, %r16158, 0;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2700
	setp.gt.u32 	%p252, %r114, 2139095039;
	selp.f32 	%f1197, 0f7FFFFFFF, 0f4B800000, %p252;
	mul.f32 	%f1198, %f1383, 0f34000000;
	mul.f32 	%f1384, %f1197, %f1198;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2666
	div.approx.f32 	%f1181, %f1384, %f255;
	cvt.rzi.f32.f32 	%f203, %f1181;
	fma.rn.f32 	%f204, %f203, 0fC0000000, %f1384;
	mov.b32 	%r113, %f204;
	setp.lt.u32 	%p243, %r113, 1073741824;
	mov.f32 	%f1382, %f203;
	@%p243 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p244, %r113, -2147483647;
	@%p244 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1186, %f203, 0fBF800000;
	setp.lt.f32 	%p247, %f204, 0fC0000000;
	selp.f32 	%f1187, %f1186, %f203, %p247;
	add.f32 	%f1382, %f1187, 0fBF800000;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1382, %f203, 0f3F800000;
	setp.ltu.f32 	%p245, %f204, 0f40800000;
	@%p245 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2671
	fma.rn.f32 	%f1183, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p246, %f1183, 0f00000000;
	selp.f32 	%f1184, %f1382, %f203, %p246;
	add.f32 	%f1185, %f1184, 0f3F800000;
	add.f32 	%f1382, %f1185, 0f3F800000;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2674
	fma.rn.f32 	%f1384, %f1382, 0fC0000000, %f1384;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2703
	or.b32  	%r251, %r250, %r11;
	and.b32  	%r12, %r8, 4;
	selp.f32 	%f286, %f283, %f285, %p9;
	selp.f32 	%f320, %f317, %f319, %p15;
	selp.f32 	%f355, %f352, %f354, %p21;
	selp.f32 	%f389, %f386, %f388, %p27;
	selp.f32 	%f424, %f421, %f423, %p33;
	selp.f32 	%f458, %f455, %f457, %p39;
	selp.f32 	%f493, %f490, %f492, %p45;
	selp.f32 	%f527, %f524, %f526, %p51;
	selp.f32 	%f562, %f559, %f561, %p57;
	selp.f32 	%f596, %f593, %f595, %p63;
	selp.f32 	%f631, %f628, %f630, %p69;
	selp.f32 	%f665, %f662, %f664, %p75;
	selp.f32 	%f700, %f697, %f699, %p81;
	selp.f32 	%f734, %f731, %f733, %p87;
	selp.f32 	%f769, %f766, %f768, %p93;
	selp.f32 	%f803, %f800, %f802, %p99;
	setp.eq.s32 	%p118, %r420, 0;
	sub.f32 	%f854, %f284, %f850;
	selp.f32 	%f91, %f857, %f852, %p119;
	abs.f32 	%f858, %f1356;
	setp.eq.s32 	%p138, %r449, 0;
	sub.f32 	%f906, %f284, %f902;
	selp.f32 	%f910, %f909, %f904, %p139;
	abs.f32 	%f911, %f1360;
	setp.eq.s32 	%p158, %r468, 0;
	sub.f32 	%f960, %f284, %f956;
	selp.f32 	%f127, %f963, %f958, %p159;
	abs.f32 	%f964, %f1364;
	setp.eq.s32 	%p178, %r497, 0;
	sub.f32 	%f1012, %f284, %f1008;
	selp.f32 	%f1016, %f1015, %f1010, %p179;
	abs.f32 	%f1017, %f1368;
	selp.f32 	%f1062, %f1060, %f1059, %p196;
	selp.f32 	%f1064, %f1061, %f1063, %p197;
	and.b32  	%r515, %r514, 2;
	setp.eq.f32 	%p199, %f1068, %f1372;
	mul.f32 	%f1069, %f1372, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p216;
	selp.f32 	%f1116, %f1113, %f1115, %p217;
	and.b32  	%r538, %r537, 2;
	setp.eq.f32 	%p219, %f1120, %f1376;
	mul.f32 	%f1121, %f1376, 0f00000000;
	setp.eq.s32 	%p238, %r557, 0;
	sub.f32 	%f1172, %f284, %f1168;
	selp.f32 	%f199, %f1175, %f1170, %p239;
	abs.f32 	%f1176, %f1380;
	abs.f32 	%f1199, %f1384;
	setp.gtu.f32 	%p253, %f1199, 0f7F800000;
	@%p253 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r564, %f201;
	and.b32  	%r565, %r564, -2147483648;
	mov.b32 	%r566, %f1384;
	or.b32  	%r567, %r565, %r566;
	mov.b32 	%f1384, %r567;
LBB0_148:                               // %__nv_fmodf.exit2706
	or.b32  	%r252, %r251, %r12;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f855, %f850, %f854, %p118;
	setp.gt.f32 	%p120, %f858, 0f4B800000;
	add.f32 	%f859, %f91, 0f3F800000;
	selp.f32 	%f907, %f902, %f906, %p138;
	setp.gt.f32 	%p140, %f911, 0f4B800000;
	add.f32 	%f912, %f910, 0f3F800000;
	selp.f32 	%f961, %f956, %f960, %p158;
	setp.gt.f32 	%p160, %f964, 0f4B800000;
	add.f32 	%f965, %f127, 0f3F800000;
	selp.f32 	%f1013, %f1008, %f1012, %p178;
	setp.gt.f32 	%p180, %f1017, 0f4B800000;
	add.f32 	%f1018, %f1016, 0f3F800000;
	setp.eq.s32 	%p198, %r515, 0;
	sub.f32 	%f1066, %f284, %f1062;
	selp.f32 	%f163, %f1069, %f1064, %p199;
	abs.f32 	%f1070, %f1372;
	setp.eq.s32 	%p218, %r538, 0;
	sub.f32 	%f1118, %f284, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p219;
	abs.f32 	%f1123, %f1376;
	selp.f32 	%f1173, %f1168, %f1172, %p238;
	setp.gt.f32 	%p240, %f1176, 0f4B800000;
	add.f32 	%f1177, %f199, 0f3F800000;
	add.f32 	%f1200, %f1384, %f1384;
	mov.b32 	%r580, %f1200;
	and.b32  	%r581, %r580, -2147483648;
	or.b32  	%r582, %r581, 1056964608;
	mov.b32 	%f1201, %r582;
	add.f32 	%f1202, %f1200, %f1201;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	abs.f32 	%f1204, %f1200;
	setp.gt.f32 	%p254, %f1204, 0f4B000000;
	selp.f32 	%f1205, %f1200, %f1203, %p254;
	cvt.rzi.f32.f32 	%f1206, %f1200;
	setp.lt.f32 	%p255, %f1204, 0f3F000000;
	selp.f32 	%f1207, %f1206, %f1205, %p255;
	cvt.rzi.s32.f32 	%r583, %f1207;
	fma.rn.f32 	%f1208, %f1207, 0fBF000000, %f1384;
	mul.f32 	%f1209, %f1208, %f1208;
	fma.rn.f32 	%f1210, %f1209, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1211, %f1209, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1212, %f1210, %f1209, 0fC0A55DF6;
	fma.rn.f32 	%f1213, %f1211, %f1209, 0f4081E0CF;
	fma.rn.f32 	%f1214, %f1209, %f1208, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1209, 0fC09DE9E6;
	fma.rn.f32 	%f1216, %f1212, %f1214, 0f00000000;
	fma.rn.f32 	%f1217, %f1215, %f1209, 0f3F800000;
	fma.rn.f32 	%f1218, %f1208, 0f40490FDB, %f1216;
	and.b32  	%r584, %r583, 1;
	setp.eq.b32 	%p256, %r584, 1;
	selp.f32 	%f1219, %f1217, %f1218, %p256;
	selp.f32 	%f1220, %f1218, %f1217, %p256;
	and.b32  	%r585, %r583, 2;
	setp.eq.s32 	%p257, %r585, 0;
	neg.f32 	%f1221, %f1219;
	selp.f32 	%f1222, %f1219, %f1221, %p257;
	add.s32 	%r586, %r583, 1;
	and.b32  	%r587, %r586, 2;
	setp.eq.s32 	%p258, %r587, 0;
	sub.f32 	%f1224, %f284, %f1220;
	selp.f32 	%f1225, %f1220, %f1224, %p258;
	cvt.rzi.f32.f32 	%f1226, %f1384;
	setp.eq.f32 	%p259, %f1226, %f1384;
	mul.f32 	%f1227, %f1384, 0f00000000;
	selp.f32 	%f1228, %f1227, %f1222, %p259;
	abs.f32 	%f1229, %f1384;
	setp.gt.f32 	%p260, %f1229, 0f4B800000;
	add.f32 	%f1230, %f1228, 0f3F800000;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shl.b16 	%rs6, %rs1, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	shr.u16 	%rs9, %rs8, 2;
	and.b16  	%rs10, %rs8, 13104;
	shl.b16 	%rs11, %rs10, 2;
	or.b16  	%rs12, %rs9, %rs11;
	and.b16  	%rs13, %rs12, 20480;
	shl.b16 	%rs14, %rs13, 1;
	shl.b16 	%rs15, %rs10, 1;
	and.b16  	%rs16, %rs15, 16384;
	or.b16  	%rs17, %rs16, %rs14;
	shr.u16 	%rs18, %rs17, 13;
	add.s32 	%r589, %r255, %r10;
	neg.s32 	%r590, %r589;
	mad.lo.s32 	%r591, %r22, -32, %r590;
	or.b16  	%rs19, %rs18, 1;
	cvt.u32.u16 	%r592, %rs19;
	and.b16  	%rs20, %rs18, 6;
	cvt.u32.u16 	%r593, %rs20;
	sub.s32 	%r594, %r591, %r593;
	shl.b32 	%r595, %r594, 1;
	cvt.rn.f32.s32 	%f1232, %r595;
	div.approx.f32 	%f218, %f1232, %f287;
	abs.f32 	%f1388, %f218;
	setp.lt.f32 	%p261, %f1388, 0f40000000;
	@%p261 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p262, %f1388, 0f4B800000;
	@%p262 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r127, %f1388;
	and.b32  	%r596, %r127, 8388607;
	or.b32  	%r16160, %r596, 1065353216;
	mov.b32 	%f1387, %r16160;
	add.s32 	%r597, %r127, -1073741824;
	and.b32  	%r16161, %r597, -8388608;
	setp.eq.s32 	%p268, %r16161, 0;
	@%p268 bra 	LBB0_159;
// %bb.157:                             // %.lr.ph3095.preheader
	mov.f32 	%f1243, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1242,%f1243;
	// end inline asm
LBB0_158:                               // %.lr.ph3095
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r598, %r16161, 192937984;
	add.s32 	%r599, %r598, %r16160;
	mov.b32 	%f1244, %r599;
	mul.f32 	%f1245, %f1242, %f1244;
	sub.f32 	%f1246, %f1244, %f1245;
	fma.rn.f32 	%f1247, %f1246, %f1242, %f1245;
	sub.f32 	%f1248, %f1244, %f1247;
	fma.rz.f32 	%f1249, %f1248, %f1242, %f1247;
	cvt.rzi.f32.f32 	%f1250, %f1249;
	sub.f32 	%f1387, %f1244, %f1250;
	sub.s32 	%r16161, %r16161, %r598;
	mov.b32 	%r16160, %f1387;
	setp.ne.s32 	%p269, %r16161, 0;
	setp.ne.s32 	%p270, %r16160, 0;
	and.pred  	%p271, %p269, %p270;
	@%p271 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2753
	setp.gt.u32 	%p272, %r127, 2139095039;
	selp.f32 	%f1251, 0f7FFFFFFF, 0f4B800000, %p272;
	mul.f32 	%f1252, %f1387, 0f34000000;
	mul.f32 	%f1388, %f1251, %f1252;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2719
	div.approx.f32 	%f1235, %f1388, %f255;
	cvt.rzi.f32.f32 	%f220, %f1235;
	fma.rn.f32 	%f221, %f220, 0fC0000000, %f1388;
	mov.b32 	%r126, %f221;
	setp.lt.u32 	%p263, %r126, 1073741824;
	mov.f32 	%f1386, %f220;
	@%p263 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p264, %r126, -2147483647;
	@%p264 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1240, %f220, 0fBF800000;
	setp.lt.f32 	%p267, %f221, 0fC0000000;
	selp.f32 	%f1241, %f1240, %f220, %p267;
	add.f32 	%f1386, %f1241, 0fBF800000;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1386, %f220, 0f3F800000;
	setp.ltu.f32 	%p265, %f221, 0f40800000;
	@%p265 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2724
	fma.rn.f32 	%f1237, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p266, %f1237, 0f00000000;
	selp.f32 	%f1238, %f1386, %f220, %p266;
	add.f32 	%f1239, %f1238, 0f3F800000;
	add.f32 	%f1386, %f1239, 0f3F800000;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2727
	fma.rn.f32 	%f1388, %f1386, 0fC0000000, %f1388;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2756
	shr.u32 	%r253, %r252, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f859, %f855, %p120;
	selp.f32 	%f913, %f912, %f907, %p140;
	selp.f32 	%f128, %f965, %f961, %p160;
	selp.f32 	%f1019, %f1018, %f1013, %p180;
	selp.f32 	%f1067, %f1062, %f1066, %p198;
	setp.gt.f32 	%p200, %f1070, 0f4B800000;
	add.f32 	%f1071, %f163, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p218;
	setp.gt.f32 	%p220, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f200, %f1177, %f1173, %p240;
	selp.f32 	%f1231, %f1230, %f1225, %p260;
	sub.s32 	%r125, %r591, %r592;
	abs.f32 	%f1253, %f1388;
	setp.gtu.f32 	%p273, %f1253, 0f7F800000;
	@%p273 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r600, %f218;
	and.b32  	%r601, %r600, -2147483648;
	mov.b32 	%r602, %f1388;
	or.b32  	%r603, %r601, %r602;
	mov.b32 	%f1388, %r603;
LBB0_162:                               // %__nv_fmodf.exit2759
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd43, %r253, 4;
	mul.f32 	%f6, %f290, %f1338;
	mul.f32 	%f325, %f324, %f1339;
	mul.f32 	%f15, %f359, %f1340;
	mul.f32 	%f394, %f393, %f1341;
	mul.f32 	%f24, %f428, %f1342;
	mul.f32 	%f463, %f462, %f1343;
	mul.f32 	%f33, %f497, %f1344;
	mul.f32 	%f532, %f531, %f1345;
	mul.f32 	%f42, %f566, %f1346;
	mul.f32 	%f601, %f600, %f1347;
	mul.f32 	%f51, %f635, %f1348;
	mul.f32 	%f670, %f669, %f1349;
	mul.f32 	%f60, %f704, %f1350;
	mul.f32 	%f739, %f738, %f1351;
	mul.f32 	%f69, %f773, %f1352;
	mul.f32 	%f807, %f806, %f1353;
	mov.b32 	%r432, %f913;
	mov.b32 	%r431, %f92;
	mov.b32 	%r438, %f910;
	mov.b32 	%r437, %f91;
	mov.b32 	%r480, %f1019;
	mov.b32 	%r479, %f128;
	mov.b32 	%r486, %f1016;
	mov.b32 	%r485, %f127;
	selp.f32 	%f164, %f1071, %f1067, %p200;
	selp.f32 	%f1125, %f1124, %f1119, %p220;
	mov.b32 	%r570, %f1231;
	mov.b32 	%r569, %f200;
	mov.b32 	%r576, %f1228;
	mov.b32 	%r575, %f199;
	add.f32 	%f1254, %f1388, %f1388;
	mov.b32 	%r604, %f1254;
	and.b32  	%r605, %r604, -2147483648;
	or.b32  	%r606, %r605, 1056964608;
	mov.b32 	%f1255, %r606;
	add.f32 	%f1256, %f1254, %f1255;
	cvt.rzi.f32.f32 	%f1257, %f1256;
	abs.f32 	%f1258, %f1254;
	setp.gt.f32 	%p274, %f1258, 0f4B000000;
	selp.f32 	%f1259, %f1254, %f1257, %p274;
	cvt.rzi.f32.f32 	%f1260, %f1254;
	setp.lt.f32 	%p275, %f1258, 0f3F000000;
	selp.f32 	%f1261, %f1260, %f1259, %p275;
	cvt.rzi.s32.f32 	%r607, %f1261;
	fma.rn.f32 	%f1262, %f1261, 0fBF000000, %f1388;
	mul.f32 	%f1263, %f1262, %f1262;
	fma.rn.f32 	%f1264, %f1263, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1265, %f1263, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1266, %f1264, %f1263, 0fC0A55DF6;
	fma.rn.f32 	%f1267, %f1265, %f1263, 0f4081E0CF;
	fma.rn.f32 	%f1268, %f1263, %f1262, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1263, 0fC09DE9E6;
	fma.rn.f32 	%f1270, %f1266, %f1268, 0f00000000;
	fma.rn.f32 	%f1271, %f1269, %f1263, 0f3F800000;
	fma.rn.f32 	%f1272, %f1262, 0f40490FDB, %f1270;
	and.b32  	%r608, %r607, 1;
	setp.eq.b32 	%p276, %r608, 1;
	selp.f32 	%f1273, %f1271, %f1272, %p276;
	selp.f32 	%f1274, %f1272, %f1271, %p276;
	and.b32  	%r609, %r607, 2;
	setp.eq.s32 	%p277, %r609, 0;
	neg.f32 	%f1275, %f1273;
	selp.f32 	%f1276, %f1273, %f1275, %p277;
	add.s32 	%r610, %r607, 1;
	and.b32  	%r611, %r610, 2;
	setp.eq.s32 	%p278, %r611, 0;
	sub.f32 	%f1278, %f284, %f1274;
	selp.f32 	%f1279, %f1274, %f1278, %p278;
	cvt.rzi.f32.f32 	%f1280, %f1388;
	setp.eq.f32 	%p279, %f1280, %f1388;
	mul.f32 	%f1281, %f1388, 0f00000000;
	selp.f32 	%f235, %f1281, %f1276, %p279;
	abs.f32 	%f1282, %f1388;
	setp.gt.f32 	%p280, %f1282, 0f4B800000;
	add.f32 	%f1283, %f235, 0f3F800000;
	shl.b32 	%r612, %r125, 1;
	cvt.rn.f32.s32 	%f1284, %r612;
	div.approx.f32 	%f237, %f1284, %f287;
	abs.f32 	%f1392, %f237;
	setp.lt.f32 	%p281, %f1392, 0f40000000;
	@%p281 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p282, %f1392, 0f4B800000;
	@%p282 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r135, %f1392;
	and.b32  	%r613, %r135, 8388607;
	or.b32  	%r16162, %r613, 1065353216;
	mov.b32 	%f1391, %r16162;
	add.s32 	%r614, %r135, -1073741824;
	and.b32  	%r16163, %r614, -8388608;
	setp.eq.s32 	%p288, %r16163, 0;
	@%p288 bra 	LBB0_173;
// %bb.171:                             // %.lr.ph.preheader
	mov.f32 	%f1295, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1294,%f1295;
	// end inline asm
LBB0_172:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r615, %r16163, 192937984;
	add.s32 	%r616, %r615, %r16162;
	mov.b32 	%f1296, %r616;
	mul.f32 	%f1297, %f1294, %f1296;
	sub.f32 	%f1298, %f1296, %f1297;
	fma.rn.f32 	%f1299, %f1298, %f1294, %f1297;
	sub.f32 	%f1300, %f1296, %f1299;
	fma.rz.f32 	%f1301, %f1300, %f1294, %f1299;
	cvt.rzi.f32.f32 	%f1302, %f1301;
	sub.f32 	%f1391, %f1296, %f1302;
	sub.s32 	%r16163, %r16163, %r615;
	mov.b32 	%r16162, %f1391;
	setp.ne.s32 	%p289, %r16163, 0;
	setp.ne.s32 	%p290, %r16162, 0;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2806
	setp.gt.u32 	%p292, %r135, 2139095039;
	selp.f32 	%f1303, 0f7FFFFFFF, 0f4B800000, %p292;
	mul.f32 	%f1304, %f1391, 0f34000000;
	mul.f32 	%f1392, %f1303, %f1304;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2772
	div.approx.f32 	%f1287, %f1392, %f255;
	cvt.rzi.f32.f32 	%f239, %f1287;
	fma.rn.f32 	%f240, %f239, 0fC0000000, %f1392;
	mov.b32 	%r134, %f240;
	setp.lt.u32 	%p283, %r134, 1073741824;
	mov.f32 	%f1390, %f239;
	@%p283 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p284, %r134, -2147483647;
	@%p284 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1292, %f239, 0fBF800000;
	setp.lt.f32 	%p287, %f240, 0fC0000000;
	selp.f32 	%f1293, %f1292, %f239, %p287;
	add.f32 	%f1390, %f1293, 0fBF800000;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1390, %f239, 0f3F800000;
	setp.ltu.f32 	%p285, %f240, 0f40800000;
	@%p285 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2777
	fma.rn.f32 	%f1289, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p286, %f1289, 0f00000000;
	selp.f32 	%f1290, %f1390, %f239, %p286;
	add.f32 	%f1291, %f1290, 0f3F800000;
	add.f32 	%f1390, %f1291, 0f3F800000;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2780
	fma.rn.f32 	%f1392, %f1390, 0fC0000000, %f1392;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2809
	add.s64 	%rd44, %rd1, %rd43;
	mov.b32 	%r278, %f325;
	mov.b32 	%r277, %f6;
	mov.b32 	%r296, %f394;
	mov.b32 	%r295, %f15;
	mov.b32 	%r314, %f463;
	mov.b32 	%r313, %f24;
	mov.b32 	%r332, %f532;
	mov.b32 	%r331, %f33;
	mov.b32 	%r350, %f601;
	mov.b32 	%r349, %f42;
	mov.b32 	%r368, %f670;
	mov.b32 	%r367, %f51;
	mov.b32 	%r386, %f739;
	mov.b32 	%r385, %f60;
	mov.b32 	%r404, %f807;
	mov.b32 	%r403, %f69;
	xor.b32  	%r483, %r486, -2147483648;
	xor.b32  	%r482, %r485, -2147483648;
	mov.b32 	%r527, %f1125;
	mov.b32 	%r526, %f164;
	mov.b32 	%r530, %f1122;
	mov.b32 	%r529, %f163;
	xor.b32  	%r573, %r576, -2147483648;
	xor.b32  	%r572, %r575, -2147483648;
	selp.f32 	%f236, %f1283, %f1279, %p280;
	abs.f32 	%f1305, %f1392;
	setp.gtu.f32 	%p293, %f1305, 0f7F800000;
	@%p293 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r617, %f237;
	and.b32  	%r618, %r617, -2147483648;
	mov.b32 	%r619, %f1392;
	or.b32  	%r620, %r618, %r619;
	mov.b32 	%f1392, %r620;
LBB0_176:                               // %__nv_fmodf.exit2812
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r13, [%rd44];
	ld.global.u32 	%r14, [%rd44+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r276, %r278, %r277;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r294, %r296, %r295;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r312, %r314, %r313;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r330, %r332, %r331;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r348, %r350, %r349;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r366, %r368, %r367;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r384, %r386, %r385;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r404, %r403;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r430, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r433, %r432, %r431;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r436, %r438, %r437;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r439, %r438, %r437;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r478, %r480, %r479;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r481, %r483, %r482;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r484, %r486, %r485;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r487, %r480, %r479;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r525, %r527, %r526;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r528, %r530, %r529;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r568, %r570, %r569;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r571, %r573, %r572;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r574, %r576, %r575;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r577, %r570, %r569;
	// end inline asm
	add.f32 	%f1306, %f1392, %f1392;
	mov.b32 	%r628, %f1306;
	and.b32  	%r629, %r628, -2147483648;
	or.b32  	%r630, %r629, 1056964608;
	mov.b32 	%f1307, %r630;
	add.f32 	%f1308, %f1306, %f1307;
	cvt.rzi.f32.f32 	%f1309, %f1308;
	abs.f32 	%f1310, %f1306;
	setp.gt.f32 	%p294, %f1310, 0f4B000000;
	selp.f32 	%f1311, %f1306, %f1309, %p294;
	cvt.rzi.f32.f32 	%f1312, %f1306;
	setp.lt.f32 	%p295, %f1310, 0f3F000000;
	selp.f32 	%f1313, %f1312, %f1311, %p295;
	cvt.rzi.s32.f32 	%r631, %f1313;
	fma.rn.f32 	%f1314, %f1313, 0fBF000000, %f1392;
	mul.f32 	%f1315, %f1314, %f1314;
	fma.rn.f32 	%f1316, %f1315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1317, %f1315, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1318, %f1316, %f1315, 0fC0A55DF6;
	fma.rn.f32 	%f1319, %f1317, %f1315, 0f4081E0CF;
	fma.rn.f32 	%f1320, %f1315, %f1314, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1315, 0fC09DE9E6;
	fma.rn.f32 	%f1322, %f1318, %f1320, 0f00000000;
	fma.rn.f32 	%f1323, %f1321, %f1315, 0f3F800000;
	fma.rn.f32 	%f1324, %f1314, 0f40490FDB, %f1322;
	and.b32  	%r632, %r631, 1;
	setp.eq.b32 	%p296, %r632, 1;
	selp.f32 	%f1325, %f1323, %f1324, %p296;
	selp.f32 	%f1326, %f1324, %f1323, %p296;
	and.b32  	%r633, %r631, 2;
	setp.eq.s32 	%p297, %r633, 0;
	neg.f32 	%f1327, %f1325;
	selp.f32 	%f1328, %f1325, %f1327, %p297;
	add.s32 	%r634, %r631, 1;
	and.b32  	%r635, %r634, 2;
	setp.eq.s32 	%p298, %r635, 0;
	sub.f32 	%f1330, %f284, %f1326;
	selp.f32 	%f1331, %f1326, %f1330, %p298;
	cvt.rzi.f32.f32 	%f1332, %f1392;
	setp.eq.f32 	%p299, %f1332, %f1392;
	mul.f32 	%f1333, %f1392, 0f00000000;
	selp.f32 	%f1334, %f1333, %f1328, %p299;
	abs.f32 	%f1335, %f1392;
	setp.gt.f32 	%p300, %f1335, 0f4B800000;
	add.f32 	%f1336, %f1334, 0f3F800000;
	selp.f32 	%f1337, %f1336, %f1331, %p300;
	mov.b32 	%r623, %f1337;
	mov.b32 	%r622, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r621, %r623, %r622;
	// end inline asm
	mov.b32 	%r626, %f1334;
	mov.b32 	%r625, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r624, %r626, %r625;
	// end inline asm
	shl.b32 	%r636, %r1, 5;
	and.b32  	%r144, %r636, 128;
	and.b32  	%r145, %r6, 32;
	shl.b32 	%r637, %r2, 3;
	and.b32  	%r146, %r637, 64;
	and.b32  	%r147, %r8, 28;
	and.b32  	%r148, %r636, 96;
	or.b32  	%r149, %r147, %r148;
	and.b32  	%r150, %r2, 8;
	shl.b32 	%r638, %r2, 4;
	or.b32  	%r639, %r638, %r150;
	shr.u32 	%r640, %r639, 2;
	and.b32  	%r641, %r640, 30;
	and.b32  	%r642, %r3, 1;
	mul.lo.s32 	%r643, %r642, 2080;
	shr.u32 	%r644, %r3, 3;
	mul.lo.s32 	%r645, %r644, 260;
	mul.lo.s32 	%r646, %r20, 65;
	bfe.u32 	%r647, %r3, 2, 1;
	mul.lo.s32 	%r648, %r647, 520;
	shr.u32 	%r649, %r3, 1;
	bfe.u32 	%r650, %r3, 1, 1;
	mul.lo.s32 	%r651, %r650, 1040;
	or.b32  	%r652, %r643, %r641;
	add.s32 	%r653, %r652, %r645;
	add.s32 	%r654, %r653, %r646;
	add.s32 	%r655, %r654, %r648;
	add.s32 	%r656, %r655, %r651;
	mul.wide.u32 	%rd45, %r656, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd5, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r651;
	cvt.u64.u32 	%rd48, %r648;
	cvt.u64.u32 	%rd49, %r646;
	cvt.u64.u32 	%rd50, %r645;
	cvt.u64.u32 	%rd51, %r641;
	cvt.u64.u32 	%rd52, %r652;
	add.s64 	%rd53, %rd52, %rd50;
	add.s64 	%rd54, %rd53, %rd49;
	add.s64 	%rd55, %rd54, %rd48;
	add.s64 	%rd56, %rd55, %rd47;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd6, %rd46, %rd57;
	and.b32  	%r657, %r4, 32;
	mul.lo.s32 	%r658, %r19, 260;
	mul.lo.s32 	%r659, %r16, 65;
	mul.lo.s32 	%r660, %r20, 520;
	mul.lo.s32 	%r661, %r22, 1040;
	mul.lo.s32 	%r662, %r17, 130;
	or.b32  	%r663, %r649, %r657;
	or.b32  	%r664, %r663, 8;
	or.b32  	%r665, %r663, 16;
	or.b32  	%r666, %r663, 24;
	or.b32  	%r667, %r11, %r9;
	or.b32  	%r668, %r667, %r12;
	or.b32  	%r669, %r668, %r7;
	or.b32  	%r670, %r669, %r10;
	shr.u32 	%r671, %r670, 1;
	mul.lo.s32 	%r672, %r671, 65;
	shl.b32 	%r673, %r1, 4;
	and.b32  	%r674, %r673, 1920;
	or.b32  	%r675, %r670, %r674;
	or.b32  	%r676, %r675, 64;
	shr.u32 	%r677, %r676, 31;
	add.s32 	%r678, %r676, %r677;
	shr.s32 	%r679, %r678, 1;
	shr.s32 	%r680, %r678, 31;
	shr.u32 	%r681, %r680, 26;
	add.s32 	%r682, %r679, %r681;
	and.b32  	%r683, %r682, -64;
	sub.s32 	%r684, %r679, %r683;
	mul.lo.s32 	%r685, %r684, 65;
	shl.b32 	%r686, %r3, 1;
	or.b32  	%r687, %r686, %r20;
	mul.lo.s32 	%r688, %r687, 65;
	add.s32 	%r689, %r688, %r641;
	mul.wide.u32 	%rd58, %r689, 4;
	add.s64 	%rd7, %rd46, %rd58;
	cvt.u64.u32 	%rd59, %r688;
	add.s64 	%rd60, %rd51, %rd59;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd8, %rd46, %rd61;
	or.b32  	%r690, %r687, 32;
	mul.lo.s32 	%r691, %r690, 65;
	add.s32 	%r692, %r691, %r641;
	mul.wide.u32 	%rd62, %r692, 4;
	add.s64 	%rd9, %rd46, %rd62;
	cvt.u64.u32 	%rd63, %r691;
	add.s64 	%rd64, %rd51, %rd63;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd10, %rd46, %rd65;
	shl.b32 	%r693, %r3, 10;
	or.b32  	%r694, %r674, %r21;
	shl.b32 	%r695, %r694, 8;
	or.b32  	%r151, %r695, %r693;
	or.b32  	%r152, %r151, 16384;
	add.s32 	%r696, %r666, %r661;
	add.s32 	%r697, %r696, %r660;
	add.s32 	%r698, %r697, %r658;
	add.s32 	%r699, %r698, %r662;
	add.s32 	%r700, %r699, %r659;
	add.s32 	%r701, %r700, 2080;
	mul.wide.u32 	%rd11, %r701, 4;
	add.s32 	%r702, %r665, %r661;
	add.s32 	%r703, %r702, %r660;
	add.s32 	%r704, %r703, %r658;
	add.s32 	%r705, %r704, %r662;
	add.s32 	%r706, %r705, %r659;
	add.s32 	%r707, %r706, 2080;
	mul.wide.u32 	%rd12, %r707, 4;
	add.s32 	%r708, %r664, %r661;
	add.s32 	%r709, %r708, %r660;
	add.s32 	%r710, %r709, %r658;
	add.s32 	%r711, %r710, %r662;
	add.s32 	%r712, %r711, %r659;
	add.s32 	%r713, %r712, 2080;
	mul.wide.u32 	%rd13, %r713, 4;
	add.s32 	%r714, %r663, %r661;
	add.s32 	%r715, %r714, %r660;
	add.s32 	%r716, %r715, %r658;
	add.s32 	%r717, %r716, %r662;
	add.s32 	%r718, %r717, %r659;
	add.s32 	%r719, %r718, 2080;
	mul.wide.u32 	%rd14, %r719, 4;
	add.s32 	%r720, %r666, %r685;
	mul.wide.s32 	%rd15, %r720, 4;
	add.s32 	%r721, %r666, %r672;
	mul.wide.u32 	%rd16, %r721, 4;
	mul.wide.u32 	%rd17, %r700, 4;
	add.s32 	%r722, %r665, %r685;
	mul.wide.s32 	%rd18, %r722, 4;
	add.s32 	%r723, %r665, %r672;
	mul.wide.u32 	%rd19, %r723, 4;
	mul.wide.u32 	%rd20, %r706, 4;
	add.s32 	%r724, %r664, %r685;
	mul.wide.s32 	%rd21, %r724, 4;
	add.s32 	%r725, %r664, %r672;
	mul.wide.u32 	%rd22, %r725, 4;
	mul.wide.u32 	%rd23, %r712, 4;
	add.s32 	%r726, %r663, %r685;
	mul.wide.s32 	%rd24, %r726, 4;
	add.s32 	%r727, %r663, %r672;
	mul.wide.u32 	%rd25, %r727, 4;
	mul.wide.u32 	%rd26, %r718, 4;
	mov.u32 	%r16190, 0;
	setp.eq.s32 	%p301, %r150, 0;
	mov.u16 	%rs2380, 25600;
	mov.u16 	%rs2172, 21504;
	mov.u16 	%rs2388, 18432;
	mov.u16 	%rs2306, -14592;
	mov.u32 	%r16191, %r16190;
	mov.u32 	%r16192, %r16190;
	mov.u32 	%r16193, %r16190;
	mov.u32 	%r16194, %r16190;
	mov.u32 	%r16195, %r16190;
	mov.u32 	%r16196, %r16190;
	mov.u32 	%r16197, %r16190;
	mov.u32 	%r16198, %r16190;
	mov.u32 	%r16199, %r16190;
	mov.u32 	%r16200, %r16190;
	mov.u32 	%r16201, %r16190;
	mov.u32 	%r16202, %r16190;
	mov.u32 	%r16203, %r16190;
	mov.u32 	%r16204, %r16190;
	mov.u32 	%r16205, %r16190;
	mov.u32 	%r16206, %r16190;
	mov.u32 	%r16207, %r16190;
	mov.u32 	%r16208, %r16190;
	mov.u32 	%r16209, %r16190;
	mov.u32 	%r16210, %r16190;
	mov.u32 	%r16211, %r16190;
	mov.u32 	%r16212, %r16190;
	mov.u32 	%r16213, %r16190;
	mov.u32 	%r16188, %r16190;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L73756
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16188, %r177, 256;
	setp.gt.s32 	%p306, %r5, %r16188;
	setp.ne.s32 	%p307, %r177, 32512;
	and.pred  	%p308, %p307, %p306;
	@%p308 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2226
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r177, %r16188;
	or.b32  	%r761, %r145, %r177;
	or.b32  	%r762, %r761, %r146;
	or.b32  	%r763, %r762, %r3;
	shl.b32 	%r764, %r763, 12;
	or.b32  	%r765, %r764, %r144;
	or.b32  	%r766, %r149, %r765;
	mul.wide.s32 	%rd67, %r766, 4;
	add.s64 	%rd68, %rd2, %rd67;
	ld.global.v4.u32 	{%r767, %r768, %r769, %r770}, [%rd68];
	or.b32  	%r771, %r765, %r147;
	or.b32  	%r772, %r771, %r148;
	or.b32  	%r773, %r772, 65536;
	mul.wide.s32 	%rd69, %r773, 4;
	add.s64 	%rd70, %rd2, %rd69;
	ld.global.v4.u32 	{%r774, %r775, %r776, %r777}, [%rd70];
	selp.b32 	%r778, %r769, %r767, %p301;
	shfl.sync.bfly.b32	%r779, %r778, 8, 31, -1;
	selp.b32 	%r729, %r767, %r779, %p301;
	selp.b32 	%r730, %r779, %r769, %p301;
	selp.b32 	%r780, %r770, %r768, %p301;
	shfl.sync.bfly.b32	%r781, %r780, 8, 31, -1;
	selp.b32 	%r737, %r768, %r781, %p301;
	selp.b32 	%r738, %r781, %r770, %p301;
	selp.b32 	%r782, %r776, %r774, %p301;
	shfl.sync.bfly.b32	%r783, %r782, 8, 31, -1;
	selp.b32 	%r745, %r774, %r783, %p301;
	selp.b32 	%r746, %r783, %r776, %p301;
	selp.b32 	%r784, %r777, %r775, %p301;
	shfl.sync.bfly.b32	%r785, %r784, 8, 31, -1;
	selp.b32 	%r753, %r775, %r785, %p301;
	selp.b32 	%r754, %r785, %r777, %p301;
	mov.u32 	%r755, 21520;
	// begin inline asm
	prmt.b32 %r728, %r729, %r730, %r755;
	// end inline asm
	mov.u32 	%r759, 30258;
	// begin inline asm
	prmt.b32 %r732, %r729, %r730, %r759;
	// end inline asm
	// begin inline asm
	prmt.b32 %r736, %r737, %r738, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r740, %r737, %r738, %r759;
	// end inline asm
	// begin inline asm
	prmt.b32 %r744, %r745, %r746, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r748, %r745, %r746, %r759;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r753, %r754, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r753, %r754, %r759;
	// end inline asm
	st.shared.u32 	[%rd5], %r728;
	st.shared.u32 	[%rd6+128], %r732;
	st.shared.u32 	[%rd6+4], %r736;
	st.shared.u32 	[%rd6+132], %r740;
	st.shared.u32 	[%rd6+520], %r744;
	st.shared.u32 	[%rd6+648], %r748;
	st.shared.u32 	[%rd6+524], %r752;
	st.shared.u32 	[%rd6+652], %r756;
	bar.sync 	0;
	mov.u32 	%r16189, 256;
	mov.u64 	%rd91, %rd46;
LBB0_178:                               // %L9975
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd71, %rd91, %rd26;
	ld.shared.u32 	%r16050, [%rd71];
	add.s64 	%rd72, %rd91, %rd23;
	ld.shared.u32 	%r16051, [%rd72];
	add.s64 	%rd73, %rd91, %rd20;
	ld.shared.u32 	%r16052, [%rd73];
	add.s64 	%rd74, %rd91, %rd17;
	ld.shared.u32 	%r16053, [%rd74];
	add.s64 	%rd75, %rd91, %rd14;
	ld.shared.u32 	%r16054, [%rd75];
	add.s64 	%rd76, %rd91, %rd13;
	ld.shared.u32 	%r16055, [%rd76];
	add.s64 	%rd77, %rd91, %rd12;
	ld.shared.u32 	%r16056, [%rd77];
	add.s64 	%rd78, %rd91, %rd11;
	ld.shared.u32 	%r16057, [%rd78];
	// begin inline asm
	mov.b32 %r791, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r790, %r16050, -2004318072;
	mov.u32 	%r789, 983055;
	// begin inline asm
	lop3.b32 %r788, %r789, %r790, %r791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r792, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r793, %r791, %r792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r796, %r788, %r793;
	// end inline asm
	mov.u32 	%r800, 15728880;
	// begin inline asm
	lop3.b32 %r799, %r800, %r790, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r803, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r804, %r802, %r803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r807, %r799, %r804;
	// end inline asm
	shr.u32 	%r812, %r790, 8;
	// begin inline asm
	lop3.b32 %r810, %r789, %r812, %r791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r814, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r815, %r791, %r814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r818, %r810, %r815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r821, %r800, %r812, %r802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r825, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r826, %r802, %r825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r829, %r821, %r826;
	// end inline asm
	// begin inline asm
	mov.b32 %r837, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r836, %r16051, -2004318072;
	// begin inline asm
	lop3.b32 %r834, %r789, %r836, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r839, %r837, %r838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r842, %r834, %r839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r845, %r800, %r836, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	shr.u32 	%r858, %r836, 8;
	// begin inline asm
	lop3.b32 %r856, %r789, %r858, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r837, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r867, %r800, %r858, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r882, %r16052, -2004318072;
	// begin inline asm
	lop3.b32 %r880, %r789, %r882, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r883, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r891, %r800, %r882, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	shr.u32 	%r904, %r882, 8;
	// begin inline asm
	lop3.b32 %r902, %r789, %r904, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r883, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r800, %r904, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r928, %r16053, -2004318072;
	// begin inline asm
	lop3.b32 %r926, %r789, %r928, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r929, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r937, %r800, %r928, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	shr.u32 	%r950, %r928, 8;
	// begin inline asm
	lop3.b32 %r948, %r789, %r950, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r929, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r959, %r800, %r950, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r974, %r16054, -2004318072;
	// begin inline asm
	lop3.b32 %r972, %r789, %r974, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r975, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r983, %r800, %r974, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r986, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	shr.u32 	%r996, %r974, 8;
	// begin inline asm
	lop3.b32 %r994, %r789, %r996, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r975, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1005, %r800, %r996, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r986, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1020, %r16055, -2004318072;
	// begin inline asm
	lop3.b32 %r1018, %r789, %r1020, %r1021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r1021, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1029, %r800, %r1020, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1034, %r1032, %r1033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1037, %r1029, %r1034;
	// end inline asm
	shr.u32 	%r1042, %r1020, 8;
	// begin inline asm
	lop3.b32 %r1040, %r789, %r1042, %r1021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1021, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1051, %r800, %r1042, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1032, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1066, %r16056, -2004318072;
	// begin inline asm
	lop3.b32 %r1064, %r789, %r1066, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1067, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1075, %r800, %r1066, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1078, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	shr.u32 	%r1088, %r1066, 8;
	// begin inline asm
	lop3.b32 %r1086, %r789, %r1088, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1067, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1097, %r800, %r1088, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1078, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1112, %r16057, -2004318072;
	// begin inline asm
	lop3.b32 %r1110, %r789, %r1112, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1113, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1121, %r800, %r1112, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1124, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	shr.u32 	%r1134, %r1112, 8;
	// begin inline asm
	lop3.b32 %r1132, %r789, %r1134, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1113, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1143, %r800, %r1134, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1124, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1154, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1156, %r1154, %r796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1159, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1161, %r1159, %r807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1164, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1166, %r1164, %r818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1169, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1171, %r1169, %r829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1174, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1176, %r1174, %r842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1179, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1181, %r1179, %r853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1184, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1186, %r1184, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1189, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1191, %r1189, %r875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1194, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r1194, %r888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1199, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1201, %r1199, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1204, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1206, %r1204, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1209, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1211, %r1209, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1216, %r1214, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1219, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1221, %r1219, %r945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1224, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1226, %r1224, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1236, %r1234, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1246, %r1244, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1251, %r1249, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1256, %r1254, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1151;
	// end inline asm
	// begin inline asm
	mov.b32 %r1319, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1318, %r16190, -2004318072;
	// begin inline asm
	lop3.b32 %r1316, %r789, %r1318, %r1319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1320, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1321, %r1319, %r1320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1324, %r1316, %r1321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1327, %r800, %r1318, %r1330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1331, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1332, %r1330, %r1331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1335, %r1327, %r1332;
	// end inline asm
	shr.u32 	%r1340, %r1318, 8;
	// begin inline asm
	lop3.b32 %r1338, %r789, %r1340, %r1319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1342, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1343, %r1319, %r1342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1346, %r1338, %r1343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1349, %r800, %r1340, %r1330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1353, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1354, %r1330, %r1353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1357, %r1349, %r1354;
	// end inline asm
	// begin inline asm
	mov.b32 %r1365, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1364, %r16191, -2004318072;
	// begin inline asm
	lop3.b32 %r1362, %r789, %r1364, %r1365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1367, %r1365, %r1366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1370, %r1362, %r1367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1373, %r800, %r1364, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1378, %r1376, %r1377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1381, %r1373, %r1378;
	// end inline asm
	shr.u32 	%r1386, %r1364, 8;
	// begin inline asm
	lop3.b32 %r1384, %r789, %r1386, %r1365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1365, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1395, %r800, %r1386, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1376, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1410, %r16192, -2004318072;
	// begin inline asm
	lop3.b32 %r1408, %r789, %r1410, %r1411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1413, %r1411, %r1412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1416, %r1408, %r1413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1419, %r800, %r1410, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1424, %r1422, %r1423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1427, %r1419, %r1424;
	// end inline asm
	shr.u32 	%r1432, %r1410, 8;
	// begin inline asm
	lop3.b32 %r1430, %r789, %r1432, %r1411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1411, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1441, %r800, %r1432, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1422, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1456, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r1454, %r789, %r1456, %r1457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1457, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1465, %r800, %r1456, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1468, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	shr.u32 	%r1478, %r1456, 8;
	// begin inline asm
	lop3.b32 %r1476, %r789, %r1478, %r1457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1457, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1487, %r800, %r1478, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1468, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1502, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1500, %r789, %r1502, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1503, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1511, %r800, %r1502, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1514, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	shr.u32 	%r1524, %r1502, 8;
	// begin inline asm
	lop3.b32 %r1522, %r789, %r1524, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1503, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1533, %r800, %r1524, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1514, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1548, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1546, %r789, %r1548, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1549, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1557, %r800, %r1548, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1560, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	shr.u32 	%r1570, %r1548, 8;
	// begin inline asm
	lop3.b32 %r1568, %r789, %r1570, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1549, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1579, %r800, %r1570, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1560, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1594, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r1592, %r789, %r1594, %r1595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1595, %r1596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1600, %r1592, %r1597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1603, %r800, %r1594, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1606, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	shr.u32 	%r1616, %r1594, 8;
	// begin inline asm
	lop3.b32 %r1614, %r789, %r1616, %r1595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1595, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1625, %r800, %r1616, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1606, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	// begin inline asm
	mov.b32 %r1641, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1640, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r1638, %r789, %r1640, %r1641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1641, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1649, %r800, %r1640, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1654, %r1652, %r1653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1657, %r1649, %r1654;
	// end inline asm
	shr.u32 	%r1662, %r1640, 8;
	// begin inline asm
	lop3.b32 %r1660, %r789, %r1662, %r1641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1641, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1671, %r800, %r1662, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1675, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1676, %r1652, %r1675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1679, %r1671, %r1676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1682, %r276, %r1324, %r1156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1686, %r276, %r1335, %r1161;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r276, %r1346, %r1166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r276, %r1357, %r1171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1698, %r276, %r1370, %r1176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r276, %r1381, %r1181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1706, %r276, %r1392, %r1186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r276, %r1403, %r1191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r276, %r1416, %r1196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r276, %r1427, %r1201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r276, %r1438, %r1206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r276, %r1449, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r276, %r1462, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r276, %r1473, %r1221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r276, %r1484, %r1226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r276, %r1495, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r294, %r1508, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r294, %r1519, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r294, %r1530, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r294, %r1541, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r294, %r1554, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r294, %r1565, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r294, %r1576, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r294, %r1587, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r294, %r1600, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r294, %r1611, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r294, %r1622, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r294, %r1633, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r294, %r1646, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r294, %r1657, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r294, %r1668, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r294, %r1679, %r1311;
	// end inline asm
	// begin inline asm
	mov.b32 %r1815, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1826, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1814, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r1812, %r789, %r1814, %r1815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1816, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1817, %r1815, %r1816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1820, %r1812, %r1817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1823, %r800, %r1814, %r1826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1827, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1828, %r1826, %r1827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1831, %r1823, %r1828;
	// end inline asm
	shr.u32 	%r1836, %r1814, 8;
	// begin inline asm
	lop3.b32 %r1834, %r789, %r1836, %r1815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1839, %r1815, %r1838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1842, %r1834, %r1839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1845, %r800, %r1836, %r1826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1849, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1850, %r1826, %r1849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1853, %r1845, %r1850;
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1872, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1860, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1858, %r789, %r1860, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1862, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1863, %r1861, %r1862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1866, %r1858, %r1863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1869, %r800, %r1860, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1874, %r1872, %r1873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1877, %r1869, %r1874;
	// end inline asm
	shr.u32 	%r1882, %r1860, 8;
	// begin inline asm
	lop3.b32 %r1880, %r789, %r1882, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1861, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1891, %r800, %r1882, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1895, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1872, %r1895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1899, %r1891, %r1896;
	// end inline asm
	// begin inline asm
	mov.b32 %r1907, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1918, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1906, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1904, %r789, %r1906, %r1907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1908, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1909, %r1907, %r1908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1912, %r1904, %r1909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1915, %r800, %r1906, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1920, %r1918, %r1919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1923, %r1915, %r1920;
	// end inline asm
	shr.u32 	%r1928, %r1906, 8;
	// begin inline asm
	lop3.b32 %r1926, %r789, %r1928, %r1907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1907, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1937, %r800, %r1928, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1941, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1918, %r1941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1945, %r1937, %r1942;
	// end inline asm
	// begin inline asm
	mov.b32 %r1953, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r1964, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1952, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1950, %r789, %r1952, %r1953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1955, %r1953, %r1954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1958, %r1950, %r1955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1961, %r800, %r1952, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1964, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	shr.u32 	%r1974, %r1952, 8;
	// begin inline asm
	lop3.b32 %r1972, %r789, %r1974, %r1953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1953, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1983, %r800, %r1974, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1964, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	// begin inline asm
	mov.b32 %r1999, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2010, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r1998, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r1996, %r789, %r1998, %r1999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2001, %r1999, %r2000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2004, %r1996, %r2001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2007, %r800, %r1998, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r2010, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	shr.u32 	%r2020, %r1998, 8;
	// begin inline asm
	lop3.b32 %r2018, %r789, %r2020, %r1999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r1999, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2029, %r800, %r2020, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2010, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2044, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r2042, %r789, %r2044, %r2045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2047, %r2045, %r2046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2050, %r2042, %r2047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2053, %r800, %r2044, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2058, %r2056, %r2057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2061, %r2053, %r2058;
	// end inline asm
	shr.u32 	%r2066, %r2044, 8;
	// begin inline asm
	lop3.b32 %r2064, %r789, %r2066, %r2045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2045, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2075, %r800, %r2066, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2056, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2090, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r2088, %r789, %r2090, %r2091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2093, %r2091, %r2092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2096, %r2088, %r2093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2099, %r800, %r2090, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2104, %r2102, %r2103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2107, %r2099, %r2104;
	// end inline asm
	shr.u32 	%r2112, %r2090, 8;
	// begin inline asm
	lop3.b32 %r2110, %r789, %r2112, %r2091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2091, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2121, %r800, %r2112, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2126, %r2102, %r2125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2129, %r2121, %r2126;
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2136, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r2134, %r789, %r2136, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2137, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2145, %r800, %r2136, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2148, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	shr.u32 	%r2158, %r2136, 8;
	// begin inline asm
	lop3.b32 %r2156, %r789, %r2158, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2137, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2167, %r800, %r2158, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2148, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2178, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2180, %r2178, %r1820, %r1682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2184, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2186, %r2184, %r1831, %r1686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2190, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2192, %r2190, %r1842, %r1690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2196, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2198, %r2196, %r1853, %r1694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2202, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2204, %r2202, %r1866, %r1698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2208, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2210, %r2208, %r1877, %r1702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2214, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2216, %r2214, %r1888, %r1706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2220, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2222, %r2220, %r1899, %r1710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2226, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2228, %r2226, %r1912, %r1714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2232, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2234, %r2232, %r1923, %r1718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2238, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2240, %r2238, %r1934, %r1722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2244, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2246, %r2244, %r1945, %r1726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2250, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2252, %r2250, %r1958, %r1730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2256, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2258, %r2256, %r1969, %r1734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2262, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2264, %r2262, %r1980, %r1738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2268, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2270, %r2268, %r1991, %r1742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2274, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2276, %r2274, %r2004, %r1746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2280, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2282, %r2280, %r2015, %r1750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2286, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2288, %r2286, %r2026, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2292, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2294, %r2292, %r2037, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2298, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2300, %r2298, %r2050, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2304, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2306, %r2304, %r2061, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2310, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2312, %r2310, %r2072, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2316, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2318, %r2316, %r2083, %r1774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2322, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2324, %r2322, %r2096, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2328, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2330, %r2328, %r2107, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2334, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2336, %r2334, %r2118, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2340, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2342, %r2340, %r2129, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2346, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2348, %r2346, %r2142, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2352, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2354, %r2352, %r2153, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2358, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2360, %r2358, %r2164, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2364, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2366, %r2364, %r2175, %r1806;
	// end inline asm
	// begin inline asm
	mov.b32 %r2375, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2374, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r2372, %r789, %r2374, %r2375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2376, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2377, %r2375, %r2376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2380, %r2372, %r2377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2383, %r800, %r2374, %r2386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2387, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2388, %r2386, %r2387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2391, %r2383, %r2388;
	// end inline asm
	shr.u32 	%r2396, %r2374, 8;
	// begin inline asm
	lop3.b32 %r2394, %r789, %r2396, %r2375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2398, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2399, %r2375, %r2398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2402, %r2394, %r2399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2405, %r800, %r2396, %r2386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2409, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2386, %r2409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2413, %r2405, %r2410;
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2420, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r2418, %r789, %r2420, %r2421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2421, %r2422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2426, %r2418, %r2423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2429, %r800, %r2420, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2432, %r2433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2437, %r2429, %r2434;
	// end inline asm
	shr.u32 	%r2442, %r2420, 8;
	// begin inline asm
	lop3.b32 %r2440, %r789, %r2442, %r2421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2421, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2451, %r800, %r2442, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2432, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	// begin inline asm
	mov.b32 %r2467, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2466, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r2464, %r789, %r2466, %r2467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2469, %r2467, %r2468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2472, %r2464, %r2469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2475, %r800, %r2466, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2480, %r2478, %r2479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2483, %r2475, %r2480;
	// end inline asm
	shr.u32 	%r2488, %r2466, 8;
	// begin inline asm
	lop3.b32 %r2486, %r789, %r2488, %r2467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2467, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2497, %r800, %r2488, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2478, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	// begin inline asm
	mov.b32 %r2513, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2524, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2512, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r2510, %r789, %r2512, %r2513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2513, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2521, %r800, %r2512, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2524, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	shr.u32 	%r2534, %r2512, 8;
	// begin inline asm
	lop3.b32 %r2532, %r789, %r2534, %r2513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2513, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2543, %r800, %r2534, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2547, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2548, %r2524, %r2547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2551, %r2543, %r2548;
	// end inline asm
	// begin inline asm
	mov.b32 %r2559, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2570, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2558, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r2556, %r789, %r2558, %r2559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2561, %r2559, %r2560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2564, %r2556, %r2561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2567, %r800, %r2558, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2572, %r2570, %r2571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2575, %r2567, %r2572;
	// end inline asm
	shr.u32 	%r2580, %r2558, 8;
	// begin inline asm
	lop3.b32 %r2578, %r789, %r2580, %r2559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2559, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2589, %r800, %r2580, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2593, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2594, %r2570, %r2593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2597, %r2589, %r2594;
	// end inline asm
	// begin inline asm
	mov.b32 %r2605, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2604, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r2602, %r789, %r2604, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2605, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2613, %r800, %r2604, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2616, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	shr.u32 	%r2626, %r2604, 8;
	// begin inline asm
	lop3.b32 %r2624, %r789, %r2626, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2605, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2635, %r800, %r2626, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2616, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2650, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r2648, %r789, %r2650, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2651, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2659, %r800, %r2650, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2662, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	shr.u32 	%r2672, %r2650, 8;
	// begin inline asm
	lop3.b32 %r2670, %r789, %r2672, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2651, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2681, %r800, %r2672, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2662, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r2696, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r2694, %r789, %r2696, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2697, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2705, %r800, %r2696, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2708, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	shr.u32 	%r2718, %r2696, 8;
	// begin inline asm
	lop3.b32 %r2716, %r789, %r2718, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2697, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2727, %r800, %r2718, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2708, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2873, %r348, %r2380, %r2180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2870, %r348, %r2391, %r2186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2882, %r348, %r2402, %r2192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2879, %r348, %r2413, %r2198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2891, %r348, %r2426, %r2204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2888, %r348, %r2437, %r2210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r348, %r2448, %r2216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2897, %r348, %r2459, %r2222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2909, %r348, %r2472, %r2228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2906, %r348, %r2483, %r2234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r348, %r2494, %r2240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2915, %r348, %r2505, %r2246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2927, %r348, %r2518, %r2252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r348, %r2529, %r2258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r348, %r2540, %r2264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2933, %r348, %r2551, %r2270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2945, %r366, %r2564, %r2276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r366, %r2575, %r2282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2954, %r366, %r2586, %r2288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2951, %r366, %r2597, %r2294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2963, %r366, %r2610, %r2300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2960, %r366, %r2621, %r2306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2972, %r366, %r2632, %r2312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2969, %r366, %r2643, %r2318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r366, %r2656, %r2324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2978, %r366, %r2667, %r2330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r366, %r2678, %r2336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2987, %r366, %r2689, %r2342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r366, %r2702, %r2348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2996, %r366, %r2713, %r2354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r366, %r2724, %r2360;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3005, %r366, %r2735, %r2366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2866, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2868, %r2866, %r2870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2871, %r430, %r2873, %r2868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2875, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2877, %r2875, %r2879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r430, %r2882, %r2877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2884, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2886, %r2884, %r2888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r430, %r2891, %r2886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2893, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2895, %r2893, %r2897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r430, %r2900, %r2895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2902, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2904, %r2902, %r2906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r430, %r2909, %r2904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2911, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2913, %r2911, %r2915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r430, %r2918, %r2913;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2920, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2922, %r2920, %r2924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r430, %r2927, %r2922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2929, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2931, %r2929, %r2933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r430, %r2936, %r2931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2938, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2940, %r2938, %r2942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r433, %r2945, %r2940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2947, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2949, %r2947, %r2951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r433, %r2954, %r2949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2956, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2958, %r2956, %r2960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r433, %r2963, %r2958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2965, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2967, %r2965, %r2969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r433, %r2972, %r2967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2974, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2976, %r2974, %r2978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r433, %r2981, %r2976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2983, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2985, %r2983, %r2987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r433, %r2990, %r2985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2992, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2994, %r2992, %r2996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r433, %r2999, %r2994;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3001, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3003, %r3001, %r3005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r433, %r3008, %r3003;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3010, %r436, %r2873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r430, %r2870, %r3010;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r436, %r2882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r430, %r2879, %r3017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3024, %r436, %r2891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r430, %r2888, %r3024;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3031, %r436, %r2900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r430, %r2897, %r3031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r436, %r2909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r430, %r2906, %r3038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r436, %r2918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r430, %r2915, %r3045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3052, %r436, %r2927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r430, %r2924, %r3052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3059, %r436, %r2936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r430, %r2933, %r3059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3066, %r439, %r2945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r433, %r2942, %r3066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3073, %r439, %r2954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r433, %r2951, %r3073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r439, %r2963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r433, %r2960, %r3080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3087, %r439, %r2972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r433, %r2969, %r3087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3094, %r439, %r2981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r433, %r2978, %r3094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3101, %r439, %r2990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r433, %r2987, %r3101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3108, %r439, %r2999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r433, %r2996, %r3108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3115, %r439, %r3008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r433, %r3005, %r3115;
	// end inline asm
	mov.u32 	%r15145, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3289, %r3286}, {%r478, %r484, %r481, %r487}, {%r2871, %r3013}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3298, %r3295}, {%r478, %r484, %r481, %r487}, {%r2880, %r3020}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3307, %r3304}, {%r478, %r484, %r481, %r487}, {%r2889, %r3027}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3316, %r3313}, {%r478, %r484, %r481, %r487}, {%r2898, %r3034}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3325, %r3322}, {%r478, %r484, %r481, %r487}, {%r2907, %r3041}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3334, %r3331}, {%r478, %r484, %r481, %r487}, {%r2916, %r3048}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3343, %r3340}, {%r478, %r484, %r481, %r487}, {%r2925, %r3055}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3352, %r3349}, {%r478, %r484, %r481, %r487}, {%r2934, %r3062}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3361, %r3358}, {%r478, %r484, %r481, %r487}, {%r2943, %r3069}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3370, %r3367}, {%r478, %r484, %r481, %r487}, {%r2952, %r3076}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3379, %r3376}, {%r478, %r484, %r481, %r487}, {%r2961, %r3083}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3388, %r3385}, {%r478, %r484, %r481, %r487}, {%r2970, %r3090}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3397, %r3394}, {%r478, %r484, %r481, %r487}, {%r2979, %r3097}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3406, %r3403}, {%r478, %r484, %r481, %r487}, {%r2988, %r3104}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3415, %r3412}, {%r478, %r484, %r481, %r487}, {%r2997, %r3111}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3424, %r3421}, {%r478, %r484, %r481, %r487}, {%r3006, %r3118}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3282, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3284, %r3282, %r3286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3287, %r525, %r3289, %r3284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3291, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3293, %r3291, %r3295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3296, %r525, %r3298, %r3293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3300, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3302, %r3300, %r3304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3305, %r525, %r3307, %r3302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3309, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3311, %r3309, %r3313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3314, %r525, %r3316, %r3311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3318, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3320, %r3318, %r3322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3323, %r525, %r3325, %r3320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3327, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3329, %r3327, %r3331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3332, %r525, %r3334, %r3329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3336, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3338, %r3336, %r3340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3341, %r525, %r3343, %r3338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3345, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3347, %r3345, %r3349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3350, %r525, %r3352, %r3347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3354, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3356, %r3354, %r3358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3359, %r525, %r3361, %r3356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3363, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3365, %r3363, %r3367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3368, %r525, %r3370, %r3365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3372, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3374, %r3372, %r3376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3377, %r525, %r3379, %r3374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3381, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3383, %r3381, %r3385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3386, %r525, %r3388, %r3383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3390, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3392, %r3390, %r3394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3395, %r525, %r3397, %r3392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3399, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3401, %r3399, %r3403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3404, %r525, %r3406, %r3401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3408, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3410, %r3408, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3413, %r525, %r3415, %r3410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3417, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3419, %r3417, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r525, %r3424, %r3419;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3426, %r528, %r3289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3429, %r525, %r3286, %r3426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r528, %r3298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r525, %r3295, %r3433;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3440, %r528, %r3307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r525, %r3304, %r3440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r528, %r3316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r525, %r3313, %r3447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r528, %r3325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r525, %r3322, %r3454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r528, %r3334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r525, %r3331, %r3461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r528, %r3343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r525, %r3340, %r3468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3475, %r528, %r3352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r525, %r3349, %r3475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3482, %r528, %r3361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r525, %r3358, %r3482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r528, %r3370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r525, %r3367, %r3489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r528, %r3379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r525, %r3376, %r3496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r528, %r3388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r525, %r3385, %r3503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3510, %r528, %r3397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r525, %r3394, %r3510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r528, %r3406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r525, %r3403, %r3517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r528, %r3415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r525, %r3412, %r3524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r528, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r525, %r3421, %r3531;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3827, %r3830}, {%r568, %r574, %r571, %r577}, {%r3287, %r3429}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3833, %r3836}, {%r568, %r574, %r571, %r577}, {%r3296, %r3436}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3839, %r3842}, {%r568, %r574, %r571, %r577}, {%r3305, %r3443}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3845, %r3848}, {%r568, %r574, %r571, %r577}, {%r3314, %r3450}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3851, %r3854}, {%r568, %r574, %r571, %r577}, {%r3323, %r3457}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3857, %r3860}, {%r568, %r574, %r571, %r577}, {%r3332, %r3464}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3863, %r3866}, {%r568, %r574, %r571, %r577}, {%r3341, %r3471}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3869, %r3872}, {%r568, %r574, %r571, %r577}, {%r3350, %r3478}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3828, %r3831}, {%r568, %r574, %r571, %r577}, {%r3359, %r3485}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3834, %r3837}, {%r568, %r574, %r571, %r577}, {%r3368, %r3492}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3840, %r3843}, {%r568, %r574, %r571, %r577}, {%r3377, %r3499}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3846, %r3849}, {%r568, %r574, %r571, %r577}, {%r3386, %r3506}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3852, %r3855}, {%r568, %r574, %r571, %r577}, {%r3395, %r3513}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3858, %r3861}, {%r568, %r574, %r571, %r577}, {%r3404, %r3520}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3864, %r3867}, {%r568, %r574, %r571, %r577}, {%r3413, %r3527}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3870, %r3873}, {%r568, %r574, %r571, %r577}, {%r3422, %r3534}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3826, %r3827, %r3828;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3829, %r3830, %r3831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3832, %r3833, %r3834;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3835, %r3836, %r3837;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3838, %r3839, %r3840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3841, %r3842, %r3843;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3844, %r3845, %r3846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3847, %r3848, %r3849;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3850, %r3851, %r3852;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3853, %r3854, %r3855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3856, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3859, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3862, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3865, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3868, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3871, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3874, %r3827, %r3828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3877, %r3830, %r3831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3880, %r3833, %r3834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3883, %r3836, %r3837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3886, %r3839, %r3840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3889, %r3842, %r3843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3892, %r3845, %r3846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3895, %r3848, %r3849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3898, %r3851, %r3852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3901, %r3854, %r3855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3904, %r3857, %r3858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3907, %r3860, %r3861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3910, %r3863, %r3864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3913, %r3866, %r3867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3916, %r3869, %r3870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3919, %r3872, %r3873;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3922, %r13, %r3826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3925, %r13, %r3829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3928, %r13, %r3832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3931, %r13, %r3835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3934, %r13, %r3838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r13, %r3841;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r13, %r3844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r13, %r3847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3946, %r13, %r3850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3949, %r13, %r3853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3952, %r13, %r3856;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3955, %r13, %r3859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3958, %r13, %r3862;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3961, %r13, %r3865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3964, %r13, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3967, %r13, %r3871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3970, %r14, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3973, %r14, %r3877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3976, %r14, %r3880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3979, %r14, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3982, %r14, %r3886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3985, %r14, %r3889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3988, %r14, %r3892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3991, %r14, %r3895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3994, %r14, %r3898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3997, %r14, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4000, %r14, %r3904;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4003, %r14, %r3907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4006, %r14, %r3910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4009, %r14, %r3913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4012, %r14, %r3916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4015, %r14, %r3919;
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs2306, %rs2306};
	// end inline asm
	mov.u16 	%rs407, 18176;
	// begin inline asm
	mov.b32 %r4019, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4020, %r3922, %r4018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4023, %r4020, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4027, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4028, %r3925, %r4026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4031, %r4028, %r4027;
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4035, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4036, %r3928, %r4034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4039, %r4036, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4044, %r3931, %r4042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4047, %r4044, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4052, %r3934, %r4050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4055, %r4052, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4060, %r3937, %r4058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4063, %r4060, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4068, %r3940, %r4066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4071, %r4068, %r4067;
	// end inline asm
	// begin inline asm
	mov.b32 %r4074, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4076, %r3943, %r4074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4079, %r4076, %r4075;
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4084, %r3946, %r4082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4087, %r4084, %r4083;
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4091, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4092, %r3949, %r4090;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4095, %r4092, %r4091;
	// end inline asm
	// begin inline asm
	mov.b32 %r4098, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4100, %r3952, %r4098;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4103, %r4100, %r4099;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4107, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4108, %r3955, %r4106;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4111, %r4108, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4114, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4115, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4116, %r3958, %r4114;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4119, %r4116, %r4115;
	// end inline asm
	// begin inline asm
	mov.b32 %r4122, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4124, %r3961, %r4122;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4127, %r4124, %r4123;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4132, %r3964, %r4130;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4135, %r4132, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4138, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4139, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4140, %r3967, %r4138;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4143, %r4140, %r4139;
	// end inline asm
	// begin inline asm
	mov.b32 %r4146, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4148, %r3970, %r4146;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4151, %r4148, %r4147;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4155, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4156, %r3973, %r4154;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4159, %r4156, %r4155;
	// end inline asm
	// begin inline asm
	mov.b32 %r4162, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4164, %r3976, %r4162;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4167, %r4164, %r4163;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4172, %r3979, %r4170;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4175, %r4172, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4180, %r3982, %r4178;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4183, %r4180, %r4179;
	// end inline asm
	// begin inline asm
	mov.b32 %r4186, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4187, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4188, %r3985, %r4186;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4191, %r4188, %r4187;
	// end inline asm
	// begin inline asm
	mov.b32 %r4194, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4195, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4196, %r3988, %r4194;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4199, %r4196, %r4195;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4203, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4204, %r3991, %r4202;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4207, %r4204, %r4203;
	// end inline asm
	// begin inline asm
	mov.b32 %r4210, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4212, %r3994, %r4210;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4215, %r4212, %r4211;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4220, %r3997, %r4218;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4223, %r4220, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4226, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4227, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4228, %r4000, %r4226;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4231, %r4228, %r4227;
	// end inline asm
	// begin inline asm
	mov.b32 %r4234, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4236, %r4003, %r4234;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4239, %r4236, %r4235;
	// end inline asm
	// begin inline asm
	mov.b32 %r4242, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4243, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4244, %r4006, %r4242;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4247, %r4244, %r4243;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4251, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4252, %r4009, %r4250;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4255, %r4252, %r4251;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4260, %r4012, %r4258;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4263, %r4260, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r4267, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4268, %r4015, %r4266;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4271, %r4268, %r4267;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4275, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4276, %r4277, %r4275;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4279, %r4023, %r4276;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4283, %r4277, %r4282;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4286, %r4031, %r4283;
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4290, %r4277, %r4289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4293, %r4039, %r4290;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4297, %r4277, %r4296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4300, %r4047, %r4297;
	// end inline asm
	mov.u32 	%r4306, 25152;
	// begin inline asm
	prmt.b32 %r4303, %r4279, %r4293, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4307, %r4286, %r4300, %r4306;
	// end inline asm
	shl.b32 	%r4314, %r4307, 4;
	mov.u32 	%r4312, 252645135;
	// begin inline asm
	lop3.b32 %r4311, %r4312, %r4303, %r4314, 202;
	// end inline asm
	xor.b32  	%r16058, %r4311, -2004318072;
	// begin inline asm
	mov.b32 %r4318, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4317, %r4318, %r4316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4320, %r4055, %r4317;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4324, %r4318, %r4323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4327, %r4063, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4330, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4331, %r4318, %r4330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4334, %r4071, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4338, %r4318, %r4337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4341, %r4079, %r4338;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4344, %r4320, %r4334, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4348, %r4327, %r4341, %r4306;
	// end inline asm
	shl.b32 	%r4355, %r4348, 4;
	// begin inline asm
	lop3.b32 %r4352, %r4312, %r4344, %r4355, 202;
	// end inline asm
	xor.b32  	%r16059, %r4352, -2004318072;
	// begin inline asm
	mov.b32 %r4359, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4357, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4358, %r4359, %r4357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4361, %r4087, %r4358;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4359, %r4364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4095, %r4365;
	// end inline asm
	// begin inline asm
	mov.b32 %r4371, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4372, %r4359, %r4371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4103, %r4372;
	// end inline asm
	// begin inline asm
	mov.b32 %r4378, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4379, %r4359, %r4378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4382, %r4111, %r4379;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4385, %r4361, %r4375, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4389, %r4368, %r4382, %r4306;
	// end inline asm
	shl.b32 	%r4396, %r4389, 4;
	// begin inline asm
	lop3.b32 %r4393, %r4312, %r4385, %r4396, 202;
	// end inline asm
	xor.b32  	%r16060, %r4393, -2004318072;
	// begin inline asm
	mov.b32 %r4400, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4399, %r4400, %r4398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4402, %r4119, %r4399;
	// end inline asm
	// begin inline asm
	mov.b32 %r4405, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4406, %r4400, %r4405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4127, %r4406;
	// end inline asm
	// begin inline asm
	mov.b32 %r4412, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4413, %r4400, %r4412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4135, %r4413;
	// end inline asm
	// begin inline asm
	mov.b32 %r4419, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4420, %r4400, %r4419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4423, %r4143, %r4420;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4426, %r4402, %r4416, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4430, %r4409, %r4423, %r4306;
	// end inline asm
	shl.b32 	%r4437, %r4430, 4;
	// begin inline asm
	lop3.b32 %r4434, %r4312, %r4426, %r4437, 202;
	// end inline asm
	xor.b32  	%r16061, %r4434, -2004318072;
	// begin inline asm
	mov.b32 %r4441, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4439, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4440, %r4441, %r4439;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4151, %r4440;
	// end inline asm
	// begin inline asm
	mov.b32 %r4446, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4447, %r4441, %r4446;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4159, %r4447;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4441, %r4453;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4167, %r4454;
	// end inline asm
	// begin inline asm
	mov.b32 %r4460, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4461, %r4441, %r4460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4464, %r4175, %r4461;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4467, %r4443, %r4457, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4471, %r4450, %r4464, %r4306;
	// end inline asm
	shl.b32 	%r4478, %r4471, 4;
	// begin inline asm
	lop3.b32 %r4475, %r4312, %r4467, %r4478, 202;
	// end inline asm
	xor.b32  	%r16062, %r4475, -2004318072;
	// begin inline asm
	mov.b32 %r4482, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4480, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4481, %r4482, %r4480;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4484, %r4183, %r4481;
	// end inline asm
	// begin inline asm
	mov.b32 %r4487, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4488, %r4482, %r4487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4191, %r4488;
	// end inline asm
	// begin inline asm
	mov.b32 %r4494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4495, %r4482, %r4494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4199, %r4495;
	// end inline asm
	// begin inline asm
	mov.b32 %r4501, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4502, %r4482, %r4501;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4505, %r4207, %r4502;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4508, %r4484, %r4498, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4512, %r4491, %r4505, %r4306;
	// end inline asm
	shl.b32 	%r4519, %r4512, 4;
	// begin inline asm
	lop3.b32 %r4516, %r4312, %r4508, %r4519, 202;
	// end inline asm
	xor.b32  	%r16063, %r4516, -2004318072;
	// begin inline asm
	mov.b32 %r4523, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4521, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4522, %r4523, %r4521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4525, %r4215, %r4522;
	// end inline asm
	// begin inline asm
	mov.b32 %r4528, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4529, %r4523, %r4528;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4223, %r4529;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4523, %r4535;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4231, %r4536;
	// end inline asm
	// begin inline asm
	mov.b32 %r4542, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4543, %r4523, %r4542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4239, %r4543;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4549, %r4525, %r4539, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4553, %r4532, %r4546, %r4306;
	// end inline asm
	shl.b32 	%r4560, %r4553, 4;
	// begin inline asm
	lop3.b32 %r4557, %r4312, %r4549, %r4560, 202;
	// end inline asm
	xor.b32  	%r16064, %r4557, -2004318072;
	// begin inline asm
	mov.b32 %r4564, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4562, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4563, %r4564, %r4562;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4247, %r4563;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4564, %r4569;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4255, %r4570;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4564, %r4576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4263, %r4577;
	// end inline asm
	// begin inline asm
	mov.b32 %r4583, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4584, %r4564, %r4583;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4587, %r4271, %r4584;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4590, %r4566, %r4580, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4594, %r4573, %r4587, %r4306;
	// end inline asm
	shl.b32 	%r4601, %r4594, 4;
	// begin inline asm
	lop3.b32 %r4598, %r4312, %r4590, %r4601, 202;
	// end inline asm
	xor.b32  	%r16065, %r4598, -2004318072;
	add.s64 	%rd79, %rd91, %rd25;
	st.shared.u32 	[%rd79], %r16058;
	add.s64 	%rd80, %rd91, %rd22;
	st.shared.u32 	[%rd80], %r16059;
	add.s64 	%rd81, %rd91, %rd19;
	st.shared.u32 	[%rd81], %r16060;
	add.s64 	%rd82, %rd91, %rd16;
	st.shared.u32 	[%rd82], %r16061;
	add.s64 	%rd83, %rd91, %rd24;
	st.shared.u32 	[%rd83], %r16062;
	add.s64 	%rd84, %rd91, %rd21;
	st.shared.u32 	[%rd84], %r16063;
	add.s64 	%rd85, %rd91, %rd18;
	st.shared.u32 	[%rd85], %r16064;
	add.s64 	%rd86, %rd91, %rd15;
	st.shared.u32 	[%rd86], %r16065;
	ld.shared.u32 	%r16190, [%rd71];
	ld.shared.u32 	%r16191, [%rd72];
	ld.shared.u32 	%r16192, [%rd73];
	ld.shared.u32 	%r16193, [%rd74];
	ld.shared.u32 	%r16202, [%rd75];
	ld.shared.u32 	%r16203, [%rd76];
	ld.shared.u32 	%r16204, [%rd77];
	ld.shared.u32 	%r16205, [%rd78];
	// begin inline asm
	mov.b32 %r4607, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4618, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4606, %r16190, -2004318072;
	// begin inline asm
	lop3.b32 %r4604, %r789, %r4606, %r4607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4608, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4607, %r4608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4612, %r4604, %r4609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4615, %r800, %r4606, %r4618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4619, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4620, %r4618, %r4619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4623, %r4615, %r4620;
	// end inline asm
	shr.u32 	%r4628, %r4606, 8;
	// begin inline asm
	lop3.b32 %r4626, %r789, %r4628, %r4607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4630, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4631, %r4607, %r4630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4634, %r4626, %r4631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4637, %r800, %r4628, %r4618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4641, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4618, %r4641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4645, %r4637, %r4642;
	// end inline asm
	// begin inline asm
	mov.b32 %r4653, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4664, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4652, %r16191, -2004318072;
	// begin inline asm
	lop3.b32 %r4650, %r789, %r4652, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4653, %r4654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4658, %r4650, %r4655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4661, %r800, %r4652, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4664, %r4665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4669, %r4661, %r4666;
	// end inline asm
	shr.u32 	%r4674, %r4652, 8;
	// begin inline asm
	lop3.b32 %r4672, %r789, %r4674, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4653, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4683, %r800, %r4674, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4664, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4698, %r16192, -2004318072;
	// begin inline asm
	lop3.b32 %r4696, %r789, %r4698, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4701, %r4699, %r4700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4704, %r4696, %r4701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4707, %r800, %r4698, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4710, %r4711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4715, %r4707, %r4712;
	// end inline asm
	shr.u32 	%r4720, %r4698, 8;
	// begin inline asm
	lop3.b32 %r4718, %r789, %r4720, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4699, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4729, %r800, %r4720, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4710, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4744, %r16193, -2004318072;
	// begin inline asm
	lop3.b32 %r4742, %r789, %r4744, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4745, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4753, %r800, %r4744, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4756, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	shr.u32 	%r4766, %r4744, 8;
	// begin inline asm
	lop3.b32 %r4764, %r789, %r4766, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4745, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r800, %r4766, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4756, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4790, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r4788, %r789, %r4790, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4791, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4799, %r800, %r4790, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4802, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	shr.u32 	%r4812, %r4790, 8;
	// begin inline asm
	lop3.b32 %r4810, %r789, %r4812, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4791, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4821, %r800, %r4812, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4802, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4836, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r4834, %r789, %r4836, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4837, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4845, %r800, %r4836, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4848, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	shr.u32 	%r4858, %r4836, 8;
	// begin inline asm
	lop3.b32 %r4856, %r789, %r4858, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4837, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4867, %r800, %r4858, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4848, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4882, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r4880, %r789, %r4882, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4883, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4891, %r800, %r4882, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4894, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	shr.u32 	%r4904, %r4882, 8;
	// begin inline asm
	lop3.b32 %r4902, %r789, %r4904, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4883, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4913, %r800, %r4904, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4894, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r4928, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r4926, %r789, %r4928, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4929, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4937, %r800, %r4928, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4940, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	shr.u32 	%r4950, %r4928, 8;
	// begin inline asm
	lop3.b32 %r4948, %r789, %r4950, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4929, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4959, %r800, %r4950, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4940, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4970, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4972, %r4970, %r4612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4975, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4977, %r4975, %r4623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4980, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4982, %r4980, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4985, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4987, %r4985, %r4645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4990, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4992, %r4990, %r4658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4995, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4997, %r4995, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5000, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5002, %r5000, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5005, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5007, %r5005, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5010, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5012, %r5010, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5015, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5017, %r5015, %r4715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5020, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5022, %r5020, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5025, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5027, %r5025, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5032, %r5030, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5035, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5037, %r5035, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5040, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5042, %r5040, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5047, %r5045, %r4783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5050, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5052, %r5050, %r4796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5055, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5057, %r5055, %r4807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5060, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5062, %r5060, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5065, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5067, %r5065, %r4829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5070, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5072, %r5070, %r4842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4967;
	// end inline asm
	// begin inline asm
	mov.b32 %r5135, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5146, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5132, %r789, %r1814, %r5135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5136, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5137, %r5135, %r5136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5140, %r5132, %r5137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5143, %r800, %r1814, %r5146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5147, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5148, %r5146, %r5147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5151, %r5143, %r5148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5154, %r789, %r1836, %r5135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5158, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5159, %r5135, %r5158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5162, %r5154, %r5159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5165, %r800, %r1836, %r5146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5169, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5170, %r5146, %r5169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5173, %r5165, %r5170;
	// end inline asm
	// begin inline asm
	mov.b32 %r5181, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5192, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5178, %r789, %r1860, %r5181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5182, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5183, %r5181, %r5182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5186, %r5178, %r5183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5189, %r800, %r1860, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5193, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5194, %r5192, %r5193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5197, %r5189, %r5194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r789, %r1882, %r5181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5181, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5211, %r800, %r1882, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5215, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5216, %r5192, %r5215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5219, %r5211, %r5216;
	// end inline asm
	// begin inline asm
	mov.b32 %r5227, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5238, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5224, %r789, %r1906, %r5227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5228, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5229, %r5227, %r5228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5232, %r5224, %r5229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5235, %r800, %r1906, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5240, %r5238, %r5239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5243, %r5235, %r5240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r789, %r1928, %r5227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5227, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5257, %r800, %r1928, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5261, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5262, %r5238, %r5261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5265, %r5257, %r5262;
	// end inline asm
	// begin inline asm
	mov.b32 %r5273, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5284, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5270, %r789, %r1952, %r5273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5275, %r5273, %r5274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5278, %r5270, %r5275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5281, %r800, %r1952, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5286, %r5284, %r5285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5289, %r5281, %r5286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r789, %r1974, %r5273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5273, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5303, %r800, %r1974, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5307, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5308, %r5284, %r5307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5311, %r5303, %r5308;
	// end inline asm
	// begin inline asm
	mov.b32 %r5319, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5330, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5316, %r789, %r1998, %r5319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5321, %r5319, %r5320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5324, %r5316, %r5321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5327, %r800, %r1998, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5332, %r5330, %r5331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5335, %r5327, %r5332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r789, %r2020, %r5319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5319, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5349, %r800, %r2020, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5353, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5354, %r5330, %r5353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5357, %r5349, %r5354;
	// end inline asm
	// begin inline asm
	mov.b32 %r5365, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5376, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5362, %r789, %r2044, %r5365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5367, %r5365, %r5366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5370, %r5362, %r5367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5373, %r800, %r2044, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5378, %r5376, %r5377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5381, %r5373, %r5378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r789, %r2066, %r5365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5365, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5395, %r800, %r2066, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5399, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5400, %r5376, %r5399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5403, %r5395, %r5400;
	// end inline asm
	// begin inline asm
	mov.b32 %r5411, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5422, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5408, %r789, %r2090, %r5411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5413, %r5411, %r5412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5416, %r5408, %r5413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5419, %r800, %r2090, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5424, %r5422, %r5423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5427, %r5419, %r5424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r789, %r2112, %r5411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5411, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5441, %r800, %r2112, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5445, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5446, %r5422, %r5445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5449, %r5441, %r5446;
	// end inline asm
	// begin inline asm
	mov.b32 %r5457, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5468, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5454, %r789, %r2136, %r5457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5459, %r5457, %r5458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5462, %r5454, %r5459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5465, %r800, %r2136, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5470, %r5468, %r5469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5473, %r5465, %r5470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r789, %r2158, %r5457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5457, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5487, %r800, %r2158, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5491, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5492, %r5468, %r5491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5495, %r5487, %r5492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5498, %r276, %r5140, %r4972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5502, %r276, %r5151, %r4977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5506, %r276, %r5162, %r4982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5510, %r276, %r5173, %r4987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5514, %r276, %r5186, %r4992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5518, %r276, %r5197, %r4997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5522, %r276, %r5208, %r5002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5526, %r276, %r5219, %r5007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5530, %r276, %r5232, %r5012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5534, %r276, %r5243, %r5017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r276, %r5254, %r5022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5542, %r276, %r5265, %r5027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5546, %r276, %r5278, %r5032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5550, %r276, %r5289, %r5037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5554, %r276, %r5300, %r5042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5558, %r276, %r5311, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5562, %r294, %r5324, %r5052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r294, %r5335, %r5057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r294, %r5346, %r5062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r294, %r5357, %r5067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r294, %r5370, %r5072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r294, %r5381, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r294, %r5392, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5590, %r294, %r5403, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r294, %r5416, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r294, %r5427, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r294, %r5438, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r294, %r5449, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r294, %r5462, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r294, %r5473, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r294, %r5484, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r294, %r5495, %r5127;
	// end inline asm
	// begin inline asm
	mov.b32 %r5631, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5642, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5628, %r789, %r2374, %r5631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5633, %r5631, %r5632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5636, %r5628, %r5633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5639, %r800, %r2374, %r5642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5643, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5644, %r5642, %r5643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5647, %r5639, %r5644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5650, %r789, %r2396, %r5631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5655, %r5631, %r5654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5658, %r5650, %r5655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5661, %r800, %r2396, %r5642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5665, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5666, %r5642, %r5665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5669, %r5661, %r5666;
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5674, %r789, %r2420, %r5677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5679, %r5677, %r5678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5682, %r5674, %r5679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5685, %r800, %r2420, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5690, %r5688, %r5689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5693, %r5685, %r5690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r789, %r2442, %r5677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5677, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5707, %r800, %r2442, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5712, %r5688, %r5711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5715, %r5707, %r5712;
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5720, %r789, %r2466, %r5723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5725, %r5723, %r5724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5728, %r5720, %r5725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5731, %r800, %r2466, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5736, %r5734, %r5735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5739, %r5731, %r5736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r789, %r2488, %r5723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5723, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5753, %r800, %r2488, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5734, %r5757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5761, %r5753, %r5758;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5766, %r789, %r2512, %r5769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5769, %r5770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5774, %r5766, %r5771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5777, %r800, %r2512, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5780, %r5781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5785, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r789, %r2534, %r5769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5769, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5799, %r800, %r2534, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5780, %r5803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5807, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5812, %r789, %r2558, %r5815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5815, %r5816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5820, %r5812, %r5817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5823, %r800, %r2558, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5826, %r5827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5831, %r5823, %r5828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r789, %r2580, %r5815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5815, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5845, %r800, %r2580, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5826, %r5849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5853, %r5845, %r5850;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5872, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5858, %r789, %r2604, %r5861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5861, %r5862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5866, %r5858, %r5863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5869, %r800, %r2604, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5872, %r5873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5877, %r5869, %r5874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r789, %r2626, %r5861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5861, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5891, %r800, %r2626, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5872, %r5895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5899, %r5891, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5918, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5904, %r789, %r2650, %r5907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5907, %r5908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5912, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5915, %r800, %r2650, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5918, %r5919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5923, %r5915, %r5920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r789, %r2672, %r5907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5907, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5937, %r800, %r2672, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5918, %r5941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5945, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5950, %r789, %r2696, %r5953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5953, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r800, %r2696, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5964, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r789, %r2718, %r5953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5953, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5983, %r800, %r2718, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5964, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5994, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5996, %r5994, %r5636, %r5498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6000, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6002, %r6000, %r5647, %r5502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6006, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6008, %r6006, %r5658, %r5506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6012, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6014, %r6012, %r5669, %r5510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6018, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6020, %r6018, %r5682, %r5514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6024, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6026, %r6024, %r5693, %r5518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6030, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6032, %r6030, %r5704, %r5522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6036, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6038, %r6036, %r5715, %r5526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6042, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6044, %r6042, %r5728, %r5530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6048, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6050, %r6048, %r5739, %r5534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6054, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6056, %r6054, %r5750, %r5538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6060, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6062, %r6060, %r5761, %r5542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6066, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6068, %r6066, %r5774, %r5546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6072, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6074, %r6072, %r5785, %r5550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6078, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6080, %r6078, %r5796, %r5554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6084, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6086, %r6084, %r5807, %r5558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6090, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6092, %r6090, %r5820, %r5562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6096, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6098, %r6096, %r5831, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6102, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6104, %r6102, %r5842, %r5570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6108, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6110, %r6108, %r5853, %r5574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6114, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6116, %r6114, %r5866, %r5578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6120, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6122, %r6120, %r5877, %r5582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6126, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6128, %r6126, %r5888, %r5586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6132, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6134, %r6132, %r5899, %r5590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6138, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6140, %r6138, %r5912, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6144, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6146, %r6144, %r5923, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6152, %r6150, %r5934, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6156, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6158, %r6156, %r5945, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6162, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6164, %r6162, %r5958, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6170, %r6168, %r5969, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6174, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6176, %r6174, %r5980, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6182, %r6180, %r5991, %r5622;
	// end inline asm
	// begin inline asm
	mov.b32 %r6191, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6188, %r789, %r790, %r6191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6192, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6193, %r6191, %r6192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6196, %r6188, %r6193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6199, %r800, %r790, %r6202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6203, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6204, %r6202, %r6203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6207, %r6199, %r6204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6210, %r789, %r812, %r6191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6214, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6215, %r6191, %r6214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6218, %r6210, %r6215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6221, %r800, %r812, %r6202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6225, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6226, %r6202, %r6225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6229, %r6221, %r6226;
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r789, %r836, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6237, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r800, %r836, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6248, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r789, %r858, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6237, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r800, %r858, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6248, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r789, %r882, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6283, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r800, %r882, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6294, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r789, %r904, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6283, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r800, %r904, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6294, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r789, %r928, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6329, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r800, %r928, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6340, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r789, %r950, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6329, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r800, %r950, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6340, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	mov.b32 %r6375, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r789, %r974, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6375, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r800, %r974, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6386, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r789, %r996, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6375, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r800, %r996, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6386, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	mov.b32 %r6421, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6432, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r789, %r1020, %r6421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6421, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6429, %r800, %r1020, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6434, %r6432, %r6433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6437, %r6429, %r6434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r789, %r1042, %r6421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6421, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r800, %r1042, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6432, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	mov.b32 %r6467, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6478, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r789, %r1066, %r6467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6467, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r800, %r1066, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6478, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r789, %r1088, %r6467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6467, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r800, %r1088, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6478, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	mov.b32 %r6513, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r6524, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r789, %r1112, %r6513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6513, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r800, %r1112, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6524, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r789, %r1134, %r6513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6513, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r800, %r1134, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6524, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6689, %r348, %r6196, %r5996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6686, %r348, %r6207, %r6002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r348, %r6218, %r6008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6695, %r348, %r6229, %r6014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6707, %r348, %r6242, %r6020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r348, %r6253, %r6026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r348, %r6264, %r6032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6713, %r348, %r6275, %r6038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6725, %r348, %r6288, %r6044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r348, %r6299, %r6050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r348, %r6310, %r6056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6731, %r348, %r6321, %r6062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6743, %r348, %r6334, %r6068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6740, %r348, %r6345, %r6074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6752, %r348, %r6356, %r6080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6749, %r348, %r6367, %r6086;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6761, %r366, %r6380, %r6092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6758, %r366, %r6391, %r6098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6770, %r366, %r6402, %r6104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6767, %r366, %r6413, %r6110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6779, %r366, %r6426, %r6116;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6776, %r366, %r6437, %r6122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6788, %r366, %r6448, %r6128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6785, %r366, %r6459, %r6134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r366, %r6472, %r6140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6794, %r366, %r6483, %r6146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r366, %r6494, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6803, %r366, %r6505, %r6158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r366, %r6518, %r6164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6812, %r366, %r6529, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r366, %r6540, %r6176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6821, %r366, %r6551, %r6182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6682, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6684, %r6682, %r6686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6687, %r430, %r6689, %r6684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6691, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6693, %r6691, %r6695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r430, %r6698, %r6693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6700, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6702, %r6700, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r430, %r6707, %r6702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6709, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6711, %r6709, %r6713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r430, %r6716, %r6711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6718, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6720, %r6718, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r430, %r6725, %r6720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6727, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6729, %r6727, %r6731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r430, %r6734, %r6729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6736, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6738, %r6736, %r6740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r430, %r6743, %r6738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6745, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6747, %r6745, %r6749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r430, %r6752, %r6747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6754, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6756, %r6754, %r6758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r433, %r6761, %r6756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6763, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6765, %r6763, %r6767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r433, %r6770, %r6765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6772, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6774, %r6772, %r6776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r433, %r6779, %r6774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6781, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6783, %r6781, %r6785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r433, %r6788, %r6783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6790, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6792, %r6790, %r6794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r433, %r6797, %r6792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6799, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6801, %r6799, %r6803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r433, %r6806, %r6801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6808, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6810, %r6808, %r6812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r433, %r6815, %r6810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6817, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6819, %r6817, %r6821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r433, %r6824, %r6819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6826, %r436, %r6689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r430, %r6686, %r6826;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r436, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r430, %r6695, %r6833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6840, %r436, %r6707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r430, %r6704, %r6840;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6847, %r436, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r430, %r6713, %r6847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6854, %r436, %r6725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r430, %r6722, %r6854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r436, %r6734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r430, %r6731, %r6861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6868, %r436, %r6743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r430, %r6740, %r6868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6875, %r436, %r6752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r430, %r6749, %r6875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6882, %r439, %r6761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r433, %r6758, %r6882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6889, %r439, %r6770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r433, %r6767, %r6889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r439, %r6779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r433, %r6776, %r6896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6903, %r439, %r6788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6906, %r433, %r6785, %r6903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6910, %r439, %r6797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r433, %r6794, %r6910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6917, %r439, %r6806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r433, %r6803, %r6917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6924, %r439, %r6815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r433, %r6812, %r6924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6931, %r439, %r6824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r433, %r6821, %r6931;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7105, %r7102}, {%r478, %r484, %r481, %r487}, {%r6687, %r6829}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7114, %r7111}, {%r478, %r484, %r481, %r487}, {%r6696, %r6836}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7123, %r7120}, {%r478, %r484, %r481, %r487}, {%r6705, %r6843}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7132, %r7129}, {%r478, %r484, %r481, %r487}, {%r6714, %r6850}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7141, %r7138}, {%r478, %r484, %r481, %r487}, {%r6723, %r6857}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7150, %r7147}, {%r478, %r484, %r481, %r487}, {%r6732, %r6864}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7159, %r7156}, {%r478, %r484, %r481, %r487}, {%r6741, %r6871}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7168, %r7165}, {%r478, %r484, %r481, %r487}, {%r6750, %r6878}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7177, %r7174}, {%r478, %r484, %r481, %r487}, {%r6759, %r6885}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7186, %r7183}, {%r478, %r484, %r481, %r487}, {%r6768, %r6892}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7195, %r7192}, {%r478, %r484, %r481, %r487}, {%r6777, %r6899}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7204, %r7201}, {%r478, %r484, %r481, %r487}, {%r6786, %r6906}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7213, %r7210}, {%r478, %r484, %r481, %r487}, {%r6795, %r6913}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7222, %r7219}, {%r478, %r484, %r481, %r487}, {%r6804, %r6920}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7231, %r7228}, {%r478, %r484, %r481, %r487}, {%r6813, %r6927}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7240, %r7237}, {%r478, %r484, %r481, %r487}, {%r6822, %r6934}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7098, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7100, %r7098, %r7102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7103, %r525, %r7105, %r7100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7107, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7109, %r7107, %r7111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7112, %r525, %r7114, %r7109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7116, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7118, %r7116, %r7120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7121, %r525, %r7123, %r7118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7125, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7127, %r7125, %r7129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7130, %r525, %r7132, %r7127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7134, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7136, %r7134, %r7138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r525, %r7141, %r7136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7143, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7145, %r7143, %r7147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7148, %r525, %r7150, %r7145;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7152, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7154, %r7152, %r7156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7157, %r525, %r7159, %r7154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7161, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7163, %r7161, %r7165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7166, %r525, %r7168, %r7163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7170, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7172, %r7170, %r7174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7175, %r525, %r7177, %r7172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7179, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7181, %r7179, %r7183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7184, %r525, %r7186, %r7181;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7188, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7190, %r7188, %r7192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7193, %r525, %r7195, %r7190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7197, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7199, %r7197, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7202, %r525, %r7204, %r7199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7206, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7208, %r7206, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7211, %r525, %r7213, %r7208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7215, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7217, %r7215, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7220, %r525, %r7222, %r7217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7224, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7226, %r7224, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7229, %r525, %r7231, %r7226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7233, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7235, %r7233, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7238, %r525, %r7240, %r7235;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7242, %r528, %r7105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7245, %r525, %r7102, %r7242;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r528, %r7114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r525, %r7111, %r7249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7256, %r528, %r7123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7259, %r525, %r7120, %r7256;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r528, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r525, %r7129, %r7263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r528, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r525, %r7138, %r7270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r528, %r7150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r525, %r7147, %r7277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r528, %r7159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r525, %r7156, %r7284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r528, %r7168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r525, %r7165, %r7291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r528, %r7177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r525, %r7174, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7305, %r528, %r7186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7308, %r525, %r7183, %r7305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r528, %r7195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r525, %r7192, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r528, %r7204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r525, %r7201, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r528, %r7213;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r525, %r7210, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r528, %r7222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r525, %r7219, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r528, %r7231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r525, %r7228, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r528, %r7240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r525, %r7237, %r7347;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7643, %r7646}, {%r568, %r574, %r571, %r577}, {%r7103, %r7245}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7649, %r7652}, {%r568, %r574, %r571, %r577}, {%r7112, %r7252}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7655, %r7658}, {%r568, %r574, %r571, %r577}, {%r7121, %r7259}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7661, %r7664}, {%r568, %r574, %r571, %r577}, {%r7130, %r7266}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7667, %r7670}, {%r568, %r574, %r571, %r577}, {%r7139, %r7273}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7673, %r7676}, {%r568, %r574, %r571, %r577}, {%r7148, %r7280}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7679, %r7682}, {%r568, %r574, %r571, %r577}, {%r7157, %r7287}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7685, %r7688}, {%r568, %r574, %r571, %r577}, {%r7166, %r7294}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7644, %r7647}, {%r568, %r574, %r571, %r577}, {%r7175, %r7301}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7650, %r7653}, {%r568, %r574, %r571, %r577}, {%r7184, %r7308}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7656, %r7659}, {%r568, %r574, %r571, %r577}, {%r7193, %r7315}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7662, %r7665}, {%r568, %r574, %r571, %r577}, {%r7202, %r7322}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7668, %r7671}, {%r568, %r574, %r571, %r577}, {%r7211, %r7329}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7674, %r7677}, {%r568, %r574, %r571, %r577}, {%r7220, %r7336}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7680, %r7683}, {%r568, %r574, %r571, %r577}, {%r7229, %r7343}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7686, %r7689}, {%r568, %r574, %r571, %r577}, {%r7238, %r7350}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7642, %r7643, %r7644;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7645, %r7646, %r7647;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7648, %r7649, %r7650;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7652, %r7653;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7655, %r7656;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7657, %r7658, %r7659;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7660, %r7661, %r7662;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7663, %r7664, %r7665;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7666, %r7667, %r7668;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7669, %r7670, %r7671;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7681, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7687, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7690, %r7643, %r7644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7693, %r7646, %r7647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7696, %r7649, %r7650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7699, %r7652, %r7653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7702, %r7655, %r7656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7705, %r7658, %r7659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7708, %r7661, %r7662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7711, %r7664, %r7665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7714, %r7667, %r7668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7717, %r7670, %r7671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7720, %r7673, %r7674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7723, %r7676, %r7677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7726, %r7679, %r7680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7729, %r7682, %r7683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7732, %r7685, %r7686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7735, %r7688, %r7689;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7738, %r13, %r7642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7741, %r13, %r7645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7744, %r13, %r7648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7747, %r13, %r7651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7750, %r13, %r7654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7753, %r13, %r7657;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7756, %r13, %r7660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7759, %r13, %r7663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7762, %r13, %r7666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7765, %r13, %r7669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7768, %r13, %r7672;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7771, %r13, %r7675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7774, %r13, %r7678;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7777, %r13, %r7681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7780, %r13, %r7684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7783, %r13, %r7687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7786, %r14, %r7690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7789, %r14, %r7693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7792, %r14, %r7696;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7795, %r14, %r7699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7798, %r14, %r7702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7801, %r14, %r7705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7804, %r14, %r7708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7807, %r14, %r7711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7810, %r14, %r7714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7813, %r14, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7816, %r14, %r7720;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7819, %r14, %r7723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7822, %r14, %r7726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7825, %r14, %r7729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7828, %r14, %r7732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7831, %r14, %r7735;
	// end inline asm
	// begin inline asm
	mov.b32 %r7834, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7835, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7836, %r7738, %r7834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7839, %r7836, %r7835;
	// end inline asm
	// begin inline asm
	mov.b32 %r7842, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7843, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7844, %r7741, %r7842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7847, %r7844, %r7843;
	// end inline asm
	// begin inline asm
	mov.b32 %r7850, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7851, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7852, %r7744, %r7850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7855, %r7852, %r7851;
	// end inline asm
	// begin inline asm
	mov.b32 %r7858, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7859, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7860, %r7747, %r7858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7863, %r7860, %r7859;
	// end inline asm
	// begin inline asm
	mov.b32 %r7866, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7867, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7868, %r7750, %r7866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7871, %r7868, %r7867;
	// end inline asm
	// begin inline asm
	mov.b32 %r7874, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7875, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7876, %r7753, %r7874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7879, %r7876, %r7875;
	// end inline asm
	// begin inline asm
	mov.b32 %r7882, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7883, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7884, %r7756, %r7882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7887, %r7884, %r7883;
	// end inline asm
	// begin inline asm
	mov.b32 %r7890, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7891, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7892, %r7759, %r7890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7895, %r7892, %r7891;
	// end inline asm
	// begin inline asm
	mov.b32 %r7898, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7899, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7900, %r7762, %r7898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7903, %r7900, %r7899;
	// end inline asm
	// begin inline asm
	mov.b32 %r7906, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7907, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7908, %r7765, %r7906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7911, %r7908, %r7907;
	// end inline asm
	// begin inline asm
	mov.b32 %r7914, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7915, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7916, %r7768, %r7914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7919, %r7916, %r7915;
	// end inline asm
	// begin inline asm
	mov.b32 %r7922, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7923, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7924, %r7771, %r7922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7927, %r7924, %r7923;
	// end inline asm
	// begin inline asm
	mov.b32 %r7930, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7931, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7932, %r7774, %r7930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7935, %r7932, %r7931;
	// end inline asm
	// begin inline asm
	mov.b32 %r7938, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7939, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7940, %r7777, %r7938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7943, %r7940, %r7939;
	// end inline asm
	// begin inline asm
	mov.b32 %r7946, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7947, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7948, %r7780, %r7946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7951, %r7948, %r7947;
	// end inline asm
	// begin inline asm
	mov.b32 %r7954, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7955, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7956, %r7783, %r7954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7959, %r7956, %r7955;
	// end inline asm
	// begin inline asm
	mov.b32 %r7962, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7963, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7964, %r7786, %r7962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7967, %r7964, %r7963;
	// end inline asm
	// begin inline asm
	mov.b32 %r7970, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7971, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7972, %r7789, %r7970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7975, %r7972, %r7971;
	// end inline asm
	// begin inline asm
	mov.b32 %r7978, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7979, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7980, %r7792, %r7978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7983, %r7980, %r7979;
	// end inline asm
	// begin inline asm
	mov.b32 %r7986, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7987, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7988, %r7795, %r7986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7991, %r7988, %r7987;
	// end inline asm
	// begin inline asm
	mov.b32 %r7994, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r7995, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7996, %r7798, %r7994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7999, %r7996, %r7995;
	// end inline asm
	// begin inline asm
	mov.b32 %r8002, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8003, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8004, %r7801, %r8002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8007, %r8004, %r8003;
	// end inline asm
	// begin inline asm
	mov.b32 %r8010, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8011, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8012, %r7804, %r8010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8015, %r8012, %r8011;
	// end inline asm
	// begin inline asm
	mov.b32 %r8018, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8019, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8020, %r7807, %r8018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8023, %r8020, %r8019;
	// end inline asm
	// begin inline asm
	mov.b32 %r8026, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8027, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8028, %r7810, %r8026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8031, %r8028, %r8027;
	// end inline asm
	// begin inline asm
	mov.b32 %r8034, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8035, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8036, %r7813, %r8034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8039, %r8036, %r8035;
	// end inline asm
	// begin inline asm
	mov.b32 %r8042, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8043, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8044, %r7816, %r8042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8047, %r8044, %r8043;
	// end inline asm
	// begin inline asm
	mov.b32 %r8050, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8051, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8052, %r7819, %r8050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8055, %r8052, %r8051;
	// end inline asm
	// begin inline asm
	mov.b32 %r8058, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8059, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8060, %r7822, %r8058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8063, %r8060, %r8059;
	// end inline asm
	// begin inline asm
	mov.b32 %r8066, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8067, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8068, %r7825, %r8066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8071, %r8068, %r8067;
	// end inline asm
	// begin inline asm
	mov.b32 %r8074, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8075, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8076, %r7828, %r8074;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8079, %r8076, %r8075;
	// end inline asm
	// begin inline asm
	mov.b32 %r8082, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r8083, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8084, %r7831, %r8082;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8087, %r8084, %r8083;
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8091, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8092, %r8093, %r8091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8095, %r7839, %r8092;
	// end inline asm
	// begin inline asm
	mov.b32 %r8098, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8099, %r8093, %r8098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8102, %r7847, %r8099;
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8106, %r8093, %r8105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8109, %r7855, %r8106;
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8113, %r8093, %r8112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8116, %r7863, %r8113;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8119, %r8095, %r8109, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8123, %r8102, %r8116, %r4306;
	// end inline asm
	shl.b32 	%r8130, %r8123, 4;
	// begin inline asm
	lop3.b32 %r8127, %r4312, %r8119, %r8130, 202;
	// end inline asm
	xor.b32  	%r16066, %r8127, -2004318072;
	// begin inline asm
	mov.b32 %r8134, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8132, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8133, %r8134, %r8132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8136, %r7871, %r8133;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8140, %r8134, %r8139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8143, %r7879, %r8140;
	// end inline asm
	// begin inline asm
	mov.b32 %r8146, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8147, %r8134, %r8146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8150, %r7887, %r8147;
	// end inline asm
	// begin inline asm
	mov.b32 %r8153, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8154, %r8134, %r8153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8157, %r7895, %r8154;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8160, %r8136, %r8150, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8164, %r8143, %r8157, %r4306;
	// end inline asm
	shl.b32 	%r8171, %r8164, 4;
	// begin inline asm
	lop3.b32 %r8168, %r4312, %r8160, %r8171, 202;
	// end inline asm
	xor.b32  	%r16067, %r8168, -2004318072;
	// begin inline asm
	mov.b32 %r8175, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8173, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8174, %r8175, %r8173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8177, %r7903, %r8174;
	// end inline asm
	// begin inline asm
	mov.b32 %r8180, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8181, %r8175, %r8180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r7911, %r8181;
	// end inline asm
	// begin inline asm
	mov.b32 %r8187, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8188, %r8175, %r8187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r7919, %r8188;
	// end inline asm
	// begin inline asm
	mov.b32 %r8194, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8195, %r8175, %r8194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8198, %r7927, %r8195;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8201, %r8177, %r8191, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8205, %r8184, %r8198, %r4306;
	// end inline asm
	shl.b32 	%r8212, %r8205, 4;
	// begin inline asm
	lop3.b32 %r8209, %r4312, %r8201, %r8212, 202;
	// end inline asm
	xor.b32  	%r16068, %r8209, -2004318072;
	// begin inline asm
	mov.b32 %r8216, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8214, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8215, %r8216, %r8214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8218, %r7935, %r8215;
	// end inline asm
	// begin inline asm
	mov.b32 %r8221, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8222, %r8216, %r8221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r7943, %r8222;
	// end inline asm
	// begin inline asm
	mov.b32 %r8228, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8229, %r8216, %r8228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r7951, %r8229;
	// end inline asm
	// begin inline asm
	mov.b32 %r8235, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8236, %r8216, %r8235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8239, %r7959, %r8236;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8242, %r8218, %r8232, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8246, %r8225, %r8239, %r4306;
	// end inline asm
	shl.b32 	%r8253, %r8246, 4;
	// begin inline asm
	lop3.b32 %r8250, %r4312, %r8242, %r8253, 202;
	// end inline asm
	xor.b32  	%r16069, %r8250, -2004318072;
	// begin inline asm
	mov.b32 %r8257, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8255, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8256, %r8257, %r8255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8259, %r7967, %r8256;
	// end inline asm
	// begin inline asm
	mov.b32 %r8262, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8263, %r8257, %r8262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r7975, %r8263;
	// end inline asm
	// begin inline asm
	mov.b32 %r8269, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8270, %r8257, %r8269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r7983, %r8270;
	// end inline asm
	// begin inline asm
	mov.b32 %r8276, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8277, %r8257, %r8276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8280, %r7991, %r8277;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8283, %r8259, %r8273, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8287, %r8266, %r8280, %r4306;
	// end inline asm
	shl.b32 	%r8294, %r8287, 4;
	// begin inline asm
	lop3.b32 %r8291, %r4312, %r8283, %r8294, 202;
	// end inline asm
	xor.b32  	%r16070, %r8291, -2004318072;
	// begin inline asm
	mov.b32 %r8298, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8296, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8297, %r8298, %r8296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8300, %r7999, %r8297;
	// end inline asm
	// begin inline asm
	mov.b32 %r8303, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8304, %r8298, %r8303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8007, %r8304;
	// end inline asm
	// begin inline asm
	mov.b32 %r8310, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8311, %r8298, %r8310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8015, %r8311;
	// end inline asm
	// begin inline asm
	mov.b32 %r8317, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8318, %r8298, %r8317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8321, %r8023, %r8318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8324, %r8300, %r8314, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8328, %r8307, %r8321, %r4306;
	// end inline asm
	shl.b32 	%r8335, %r8328, 4;
	// begin inline asm
	lop3.b32 %r8332, %r4312, %r8324, %r8335, 202;
	// end inline asm
	xor.b32  	%r16071, %r8332, -2004318072;
	// begin inline asm
	mov.b32 %r8339, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8337, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8338, %r8339, %r8337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8341, %r8031, %r8338;
	// end inline asm
	// begin inline asm
	mov.b32 %r8344, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8345, %r8339, %r8344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8039, %r8345;
	// end inline asm
	// begin inline asm
	mov.b32 %r8351, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8352, %r8339, %r8351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8047, %r8352;
	// end inline asm
	// begin inline asm
	mov.b32 %r8358, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8359, %r8339, %r8358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8362, %r8055, %r8359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8365, %r8341, %r8355, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8369, %r8348, %r8362, %r4306;
	// end inline asm
	shl.b32 	%r8376, %r8369, 4;
	// begin inline asm
	lop3.b32 %r8373, %r4312, %r8365, %r8376, 202;
	// end inline asm
	xor.b32  	%r16072, %r8373, -2004318072;
	// begin inline asm
	mov.b32 %r8380, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8378, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8379, %r8380, %r8378;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8382, %r8063, %r8379;
	// end inline asm
	// begin inline asm
	mov.b32 %r8385, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8386, %r8380, %r8385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8071, %r8386;
	// end inline asm
	// begin inline asm
	mov.b32 %r8392, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8393, %r8380, %r8392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8079, %r8393;
	// end inline asm
	// begin inline asm
	mov.b32 %r8399, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8400, %r8380, %r8399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8403, %r8087, %r8400;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8406, %r8382, %r8396, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8410, %r8389, %r8403, %r4306;
	// end inline asm
	shl.b32 	%r8417, %r8410, 4;
	// begin inline asm
	lop3.b32 %r8414, %r4312, %r8406, %r8417, 202;
	// end inline asm
	xor.b32  	%r16073, %r8414, -2004318072;
	st.shared.u32 	[%rd79], %r16066;
	st.shared.u32 	[%rd80], %r16067;
	st.shared.u32 	[%rd81], %r16068;
	st.shared.u32 	[%rd82], %r16069;
	st.shared.u32 	[%rd83], %r16070;
	st.shared.u32 	[%rd84], %r16071;
	st.shared.u32 	[%rd85], %r16072;
	st.shared.u32 	[%rd86], %r16073;
	ld.shared.u32 	%r16194, [%rd71];
	ld.shared.u32 	%r16195, [%rd72];
	ld.shared.u32 	%r16196, [%rd73];
	ld.shared.u32 	%r16197, [%rd74];
	ld.shared.u32 	%r16206, [%rd75];
	ld.shared.u32 	%r16207, [%rd76];
	ld.shared.u32 	%r16208, [%rd77];
	ld.shared.u32 	%r16209, [%rd78];
	// begin inline asm
	mov.b32 %r8423, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8434, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8422, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r8420, %r789, %r8422, %r8423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8424, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8425, %r8423, %r8424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8428, %r8420, %r8425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8431, %r800, %r8422, %r8434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8435, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8436, %r8434, %r8435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8439, %r8431, %r8436;
	// end inline asm
	shr.u32 	%r8444, %r8422, 8;
	// begin inline asm
	lop3.b32 %r8442, %r789, %r8444, %r8423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8446, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8447, %r8423, %r8446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8450, %r8442, %r8447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8453, %r800, %r8444, %r8434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8457, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8458, %r8434, %r8457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8461, %r8453, %r8458;
	// end inline asm
	// begin inline asm
	mov.b32 %r8469, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8480, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8468, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r8466, %r789, %r8468, %r8469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8470, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8469, %r8470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8474, %r8466, %r8471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8477, %r800, %r8468, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8480, %r8481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8485, %r8477, %r8482;
	// end inline asm
	shr.u32 	%r8490, %r8468, 8;
	// begin inline asm
	lop3.b32 %r8488, %r789, %r8490, %r8469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8469, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8499, %r800, %r8490, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8480, %r8503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8507, %r8499, %r8504;
	// end inline asm
	// begin inline asm
	mov.b32 %r8515, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8526, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8514, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r8512, %r789, %r8514, %r8515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8516, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8517, %r8515, %r8516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8520, %r8512, %r8517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8523, %r800, %r8514, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8528, %r8526, %r8527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8531, %r8523, %r8528;
	// end inline asm
	shr.u32 	%r8536, %r8514, 8;
	// begin inline asm
	lop3.b32 %r8534, %r789, %r8536, %r8515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8515, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8545, %r800, %r8536, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8549, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8550, %r8526, %r8549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8553, %r8545, %r8550;
	// end inline asm
	// begin inline asm
	mov.b32 %r8561, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8572, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8560, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r8558, %r789, %r8560, %r8561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8563, %r8561, %r8562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8566, %r8558, %r8563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8569, %r800, %r8560, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8574, %r8572, %r8573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8577, %r8569, %r8574;
	// end inline asm
	shr.u32 	%r8582, %r8560, 8;
	// begin inline asm
	lop3.b32 %r8580, %r789, %r8582, %r8561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8561, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8591, %r800, %r8582, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8595, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8596, %r8572, %r8595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8599, %r8591, %r8596;
	// end inline asm
	// begin inline asm
	mov.b32 %r8607, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8618, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8606, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r8604, %r789, %r8606, %r8607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8609, %r8607, %r8608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8612, %r8604, %r8609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8615, %r800, %r8606, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8620, %r8618, %r8619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8623, %r8615, %r8620;
	// end inline asm
	shr.u32 	%r8628, %r8606, 8;
	// begin inline asm
	lop3.b32 %r8626, %r789, %r8628, %r8607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8607, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8637, %r800, %r8628, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8641, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8642, %r8618, %r8641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8645, %r8637, %r8642;
	// end inline asm
	// begin inline asm
	mov.b32 %r8653, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8664, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8652, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r8650, %r789, %r8652, %r8653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8655, %r8653, %r8654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8658, %r8650, %r8655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8661, %r800, %r8652, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8666, %r8664, %r8665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8669, %r8661, %r8666;
	// end inline asm
	shr.u32 	%r8674, %r8652, 8;
	// begin inline asm
	lop3.b32 %r8672, %r789, %r8674, %r8653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8653, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8683, %r800, %r8674, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8687, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8688, %r8664, %r8687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8691, %r8683, %r8688;
	// end inline asm
	// begin inline asm
	mov.b32 %r8699, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8710, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8698, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r8696, %r789, %r8698, %r8699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8701, %r8699, %r8700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8704, %r8696, %r8701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8707, %r800, %r8698, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8712, %r8710, %r8711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8715, %r8707, %r8712;
	// end inline asm
	shr.u32 	%r8720, %r8698, 8;
	// begin inline asm
	lop3.b32 %r8718, %r789, %r8720, %r8699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8699, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8729, %r800, %r8720, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8733, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8734, %r8710, %r8733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8737, %r8729, %r8734;
	// end inline asm
	// begin inline asm
	mov.b32 %r8745, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8756, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r8744, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r8742, %r789, %r8744, %r8745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8747, %r8745, %r8746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8750, %r8742, %r8747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8753, %r800, %r8744, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8758, %r8756, %r8757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8761, %r8753, %r8758;
	// end inline asm
	shr.u32 	%r8766, %r8744, 8;
	// begin inline asm
	lop3.b32 %r8764, %r789, %r8766, %r8745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8745, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8775, %r800, %r8766, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8779, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8780, %r8756, %r8779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8783, %r8775, %r8780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8786, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8788, %r8786, %r8428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8791, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8793, %r8791, %r8439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8796, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8798, %r8796, %r8450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8801, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8803, %r8801, %r8461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8806, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8808, %r8806, %r8474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8811, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8813, %r8811, %r8485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8816, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8818, %r8816, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8821, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8823, %r8821, %r8507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8826, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8828, %r8826, %r8520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8831, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8833, %r8831, %r8531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8836, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8838, %r8836, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8841, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8843, %r8841, %r8553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8846, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8848, %r8846, %r8566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8851, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8853, %r8851, %r8577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8856, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8858, %r8856, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8861, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8863, %r8861, %r8599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8866, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8868, %r8866, %r8612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8871, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8873, %r8871, %r8623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8876, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8878, %r8876, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8881, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8883, %r8881, %r8645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8886, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8888, %r8886, %r8658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8783;
	// end inline asm
	// begin inline asm
	mov.b32 %r8951, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r8962, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8948, %r789, %r2374, %r8951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8952, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8953, %r8951, %r8952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8956, %r8948, %r8953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8959, %r800, %r2374, %r8962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8963, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8964, %r8962, %r8963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8967, %r8959, %r8964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8970, %r789, %r2396, %r8951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8974, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8975, %r8951, %r8974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8978, %r8970, %r8975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8981, %r800, %r2396, %r8962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8985, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8986, %r8962, %r8985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8989, %r8981, %r8986;
	// end inline asm
	// begin inline asm
	mov.b32 %r8997, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9008, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8994, %r789, %r2420, %r8997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8998, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8999, %r8997, %r8998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9002, %r8994, %r8999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9005, %r800, %r2420, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9009, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9010, %r9008, %r9009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9013, %r9005, %r9010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r789, %r2442, %r8997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r8997, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9027, %r800, %r2442, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9031, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9032, %r9008, %r9031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9035, %r9027, %r9032;
	// end inline asm
	// begin inline asm
	mov.b32 %r9043, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9054, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9040, %r789, %r2466, %r9043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9044, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9045, %r9043, %r9044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9048, %r9040, %r9045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9051, %r800, %r2466, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9056, %r9054, %r9055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9059, %r9051, %r9056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r789, %r2488, %r9043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9043, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9073, %r800, %r2488, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9077, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9078, %r9054, %r9077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9081, %r9073, %r9078;
	// end inline asm
	// begin inline asm
	mov.b32 %r9089, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9100, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9086, %r789, %r2512, %r9089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9091, %r9089, %r9090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9094, %r9086, %r9091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9097, %r800, %r2512, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9102, %r9100, %r9101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9105, %r9097, %r9102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r789, %r2534, %r9089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9089, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9119, %r800, %r2534, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9123, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9124, %r9100, %r9123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9127, %r9119, %r9124;
	// end inline asm
	// begin inline asm
	mov.b32 %r9135, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9146, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9132, %r789, %r2558, %r9135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9137, %r9135, %r9136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9140, %r9132, %r9137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9143, %r800, %r2558, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9148, %r9146, %r9147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9151, %r9143, %r9148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r789, %r2580, %r9135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9135, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9165, %r800, %r2580, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9169, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9170, %r9146, %r9169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9173, %r9165, %r9170;
	// end inline asm
	// begin inline asm
	mov.b32 %r9181, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9192, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9178, %r789, %r2604, %r9181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9183, %r9181, %r9182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9186, %r9178, %r9183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9189, %r800, %r2604, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9194, %r9192, %r9193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9197, %r9189, %r9194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r789, %r2626, %r9181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9181, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9211, %r800, %r2626, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9215, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9216, %r9192, %r9215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9219, %r9211, %r9216;
	// end inline asm
	// begin inline asm
	mov.b32 %r9227, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9238, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9224, %r789, %r2650, %r9227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9229, %r9227, %r9228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9232, %r9224, %r9229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9235, %r800, %r2650, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9240, %r9238, %r9239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9243, %r9235, %r9240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r789, %r2672, %r9227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9227, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9257, %r800, %r2672, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9261, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9262, %r9238, %r9261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9265, %r9257, %r9262;
	// end inline asm
	// begin inline asm
	mov.b32 %r9273, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9284, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9270, %r789, %r2696, %r9273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9275, %r9273, %r9274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9278, %r9270, %r9275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9281, %r800, %r2696, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9286, %r9284, %r9285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9289, %r9281, %r9286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r789, %r2718, %r9273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9273, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9303, %r800, %r2718, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9307, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9308, %r9284, %r9307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9311, %r9303, %r9308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9314, %r276, %r8956, %r8788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9318, %r276, %r8967, %r8793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9322, %r276, %r8978, %r8798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9326, %r276, %r8989, %r8803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9330, %r276, %r9002, %r8808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9334, %r276, %r9013, %r8813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9338, %r276, %r9024, %r8818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9342, %r276, %r9035, %r8823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9346, %r276, %r9048, %r8828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9350, %r276, %r9059, %r8833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9354, %r276, %r9070, %r8838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9358, %r276, %r9081, %r8843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9362, %r276, %r9094, %r8848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9366, %r276, %r9105, %r8853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9370, %r276, %r9116, %r8858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9374, %r276, %r9127, %r8863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9378, %r294, %r9140, %r8868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9382, %r294, %r9151, %r8873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9386, %r294, %r9162, %r8878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9390, %r294, %r9173, %r8883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9394, %r294, %r9186, %r8888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9398, %r294, %r9197, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9402, %r294, %r9208, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9406, %r294, %r9219, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r294, %r9232, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r294, %r9243, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r294, %r9254, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r294, %r9265, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r294, %r9278, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r294, %r9289, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r294, %r9300, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r294, %r9311, %r8943;
	// end inline asm
	// begin inline asm
	mov.b32 %r9447, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9458, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9444, %r789, %r790, %r9447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9449, %r9447, %r9448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9452, %r9444, %r9449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9455, %r800, %r790, %r9458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9459, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9460, %r9458, %r9459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9463, %r9455, %r9460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9466, %r789, %r812, %r9447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9470, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9471, %r9447, %r9470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9474, %r9466, %r9471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9477, %r800, %r812, %r9458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9481, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9482, %r9458, %r9481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9485, %r9477, %r9482;
	// end inline asm
	// begin inline asm
	mov.b32 %r9493, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9504, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9490, %r789, %r836, %r9493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9495, %r9493, %r9494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9498, %r9490, %r9495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9501, %r800, %r836, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9505, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9506, %r9504, %r9505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9509, %r9501, %r9506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r789, %r858, %r9493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9493, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9523, %r800, %r858, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9527, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9528, %r9504, %r9527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9531, %r9523, %r9528;
	// end inline asm
	// begin inline asm
	mov.b32 %r9539, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9550, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9536, %r789, %r882, %r9539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9541, %r9539, %r9540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9544, %r9536, %r9541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9547, %r800, %r882, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9552, %r9550, %r9551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9555, %r9547, %r9552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r789, %r904, %r9539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9539, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9569, %r800, %r904, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9573, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9574, %r9550, %r9573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9577, %r9569, %r9574;
	// end inline asm
	// begin inline asm
	mov.b32 %r9585, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9596, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9582, %r789, %r928, %r9585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9587, %r9585, %r9586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9590, %r9582, %r9587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9593, %r800, %r928, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9598, %r9596, %r9597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9601, %r9593, %r9598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r789, %r950, %r9585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9585, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9615, %r800, %r950, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9619, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9620, %r9596, %r9619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9623, %r9615, %r9620;
	// end inline asm
	// begin inline asm
	mov.b32 %r9631, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9642, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9628, %r789, %r974, %r9631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9633, %r9631, %r9632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9636, %r9628, %r9633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9639, %r800, %r974, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9644, %r9642, %r9643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9647, %r9639, %r9644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r789, %r996, %r9631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9631, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9661, %r800, %r996, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9665, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9666, %r9642, %r9665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9669, %r9661, %r9666;
	// end inline asm
	// begin inline asm
	mov.b32 %r9677, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9688, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9674, %r789, %r1020, %r9677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9679, %r9677, %r9678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9682, %r9674, %r9679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9685, %r800, %r1020, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9690, %r9688, %r9689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9693, %r9685, %r9690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r789, %r1042, %r9677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9677, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9707, %r800, %r1042, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9711, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9712, %r9688, %r9711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9715, %r9707, %r9712;
	// end inline asm
	// begin inline asm
	mov.b32 %r9723, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9734, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9720, %r789, %r1066, %r9723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9725, %r9723, %r9724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9728, %r9720, %r9725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9731, %r800, %r1066, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9736, %r9734, %r9735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9739, %r9731, %r9736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r789, %r1088, %r9723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9723, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9753, %r800, %r1088, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9757, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9758, %r9734, %r9757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9761, %r9753, %r9758;
	// end inline asm
	// begin inline asm
	mov.b32 %r9769, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r9780, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9766, %r789, %r1112, %r9769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9771, %r9769, %r9770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9774, %r9766, %r9771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9777, %r800, %r1112, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9782, %r9780, %r9781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9785, %r9777, %r9782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r789, %r1134, %r9769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9769, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9799, %r800, %r1134, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9803, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9804, %r9780, %r9803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9807, %r9799, %r9804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9810, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9812, %r9810, %r9452, %r9314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9816, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9818, %r9816, %r9463, %r9318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9822, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9824, %r9822, %r9474, %r9322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9828, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9830, %r9828, %r9485, %r9326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9834, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9836, %r9834, %r9498, %r9330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9840, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9842, %r9840, %r9509, %r9334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9846, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9848, %r9846, %r9520, %r9338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9852, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9854, %r9852, %r9531, %r9342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9858, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9860, %r9858, %r9544, %r9346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9864, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9866, %r9864, %r9555, %r9350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9870, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9872, %r9870, %r9566, %r9354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9876, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9878, %r9876, %r9577, %r9358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9882, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9884, %r9882, %r9590, %r9362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9888, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9890, %r9888, %r9601, %r9366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9894, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9896, %r9894, %r9612, %r9370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9900, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9902, %r9900, %r9623, %r9374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9906, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9908, %r9906, %r9636, %r9378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9912, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9914, %r9912, %r9647, %r9382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9918, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9920, %r9918, %r9658, %r9386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9924, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9926, %r9924, %r9669, %r9390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9930, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9932, %r9930, %r9682, %r9394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9936, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9938, %r9936, %r9693, %r9398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9942, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9944, %r9942, %r9704, %r9402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9948, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9950, %r9948, %r9715, %r9406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9954, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9956, %r9954, %r9728, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9960, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9962, %r9960, %r9739, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9966, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9968, %r9966, %r9750, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9972, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9974, %r9972, %r9761, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9978, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9980, %r9978, %r9774, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9984, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9986, %r9984, %r9785, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9990, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9992, %r9990, %r9796, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9996, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9998, %r9996, %r9807, %r9438;
	// end inline asm
	// begin inline asm
	mov.b32 %r10007, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10018, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10004, %r789, %r4606, %r10007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10008, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10009, %r10007, %r10008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10012, %r10004, %r10009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10015, %r800, %r4606, %r10018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10019, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10020, %r10018, %r10019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10023, %r10015, %r10020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10026, %r789, %r4628, %r10007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10031, %r10007, %r10030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10034, %r10026, %r10031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10037, %r800, %r4628, %r10018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10041, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10042, %r10018, %r10041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10045, %r10037, %r10042;
	// end inline asm
	// begin inline asm
	mov.b32 %r10053, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10064, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10050, %r789, %r4652, %r10053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10054, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10055, %r10053, %r10054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10058, %r10050, %r10055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10061, %r800, %r4652, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10065, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10066, %r10064, %r10065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10069, %r10061, %r10066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r789, %r4674, %r10053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10053, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10083, %r800, %r4674, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10087, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10088, %r10064, %r10087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10091, %r10083, %r10088;
	// end inline asm
	// begin inline asm
	mov.b32 %r10099, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10110, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10096, %r789, %r4698, %r10099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10100, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10101, %r10099, %r10100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10104, %r10096, %r10101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10107, %r800, %r4698, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10112, %r10110, %r10111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10115, %r10107, %r10112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r789, %r4720, %r10099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10099, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10129, %r800, %r4720, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10133, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10134, %r10110, %r10133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10137, %r10129, %r10134;
	// end inline asm
	// begin inline asm
	mov.b32 %r10145, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10156, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10142, %r789, %r4744, %r10145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10147, %r10145, %r10146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10150, %r10142, %r10147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10153, %r800, %r4744, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10158, %r10156, %r10157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10161, %r10153, %r10158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r789, %r4766, %r10145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10145, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10175, %r800, %r4766, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10179, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10180, %r10156, %r10179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10183, %r10175, %r10180;
	// end inline asm
	// begin inline asm
	mov.b32 %r10191, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10202, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10188, %r789, %r4790, %r10191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10193, %r10191, %r10192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10196, %r10188, %r10193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10199, %r800, %r4790, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10204, %r10202, %r10203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10207, %r10199, %r10204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r789, %r4812, %r10191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10191, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10221, %r800, %r4812, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10225, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10226, %r10202, %r10225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10229, %r10221, %r10226;
	// end inline asm
	// begin inline asm
	mov.b32 %r10237, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10248, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10234, %r789, %r4836, %r10237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10239, %r10237, %r10238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10242, %r10234, %r10239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10245, %r800, %r4836, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10250, %r10248, %r10249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10253, %r10245, %r10250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r789, %r4858, %r10237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10237, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10267, %r800, %r4858, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10271, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10272, %r10248, %r10271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10275, %r10267, %r10272;
	// end inline asm
	// begin inline asm
	mov.b32 %r10283, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10294, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10280, %r789, %r4882, %r10283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10285, %r10283, %r10284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10288, %r10280, %r10285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10291, %r800, %r4882, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10296, %r10294, %r10295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10299, %r10291, %r10296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r789, %r4904, %r10283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10283, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10313, %r800, %r4904, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10317, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10318, %r10294, %r10317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10321, %r10313, %r10318;
	// end inline asm
	// begin inline asm
	mov.b32 %r10329, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r10340, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10326, %r789, %r4928, %r10329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10331, %r10329, %r10330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10334, %r10326, %r10331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10337, %r800, %r4928, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10342, %r10340, %r10341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10345, %r10337, %r10342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r789, %r4950, %r10329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10329, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10359, %r800, %r4950, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10363, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10364, %r10340, %r10363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10367, %r10359, %r10364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10505, %r348, %r10012, %r9812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10502, %r348, %r10023, %r9818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10514, %r348, %r10034, %r9824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10511, %r348, %r10045, %r9830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10523, %r348, %r10058, %r9836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10520, %r348, %r10069, %r9842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10532, %r348, %r10080, %r9848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10529, %r348, %r10091, %r9854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10541, %r348, %r10104, %r9860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10538, %r348, %r10115, %r9866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10550, %r348, %r10126, %r9872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10547, %r348, %r10137, %r9878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10559, %r348, %r10150, %r9884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10556, %r348, %r10161, %r9890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10568, %r348, %r10172, %r9896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10565, %r348, %r10183, %r9902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10577, %r366, %r10196, %r9908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10574, %r366, %r10207, %r9914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10586, %r366, %r10218, %r9920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10583, %r366, %r10229, %r9926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10595, %r366, %r10242, %r9932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10592, %r366, %r10253, %r9938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10604, %r366, %r10264, %r9944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10601, %r366, %r10275, %r9950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r366, %r10288, %r9956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10610, %r366, %r10299, %r9962;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r366, %r10310, %r9968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10619, %r366, %r10321, %r9974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r366, %r10334, %r9980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10628, %r366, %r10345, %r9986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r366, %r10356, %r9992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10637, %r366, %r10367, %r9998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10498, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10500, %r10498, %r10502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10503, %r430, %r10505, %r10500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10507, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10509, %r10507, %r10511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10512, %r430, %r10514, %r10509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10516, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10518, %r10516, %r10520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10521, %r430, %r10523, %r10518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10525, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10527, %r10525, %r10529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10530, %r430, %r10532, %r10527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10534, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10536, %r10534, %r10538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r430, %r10541, %r10536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10543, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10545, %r10543, %r10547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r430, %r10550, %r10545;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10552, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10554, %r10552, %r10556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r430, %r10559, %r10554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10561, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10563, %r10561, %r10565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r430, %r10568, %r10563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10570, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10572, %r10570, %r10574;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r433, %r10577, %r10572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10579, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10581, %r10579, %r10583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r433, %r10586, %r10581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10588, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10590, %r10588, %r10592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r433, %r10595, %r10590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10597, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10599, %r10597, %r10601;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r433, %r10604, %r10599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10606, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10608, %r10606, %r10610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r433, %r10613, %r10608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10615, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10617, %r10615, %r10619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r433, %r10622, %r10617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10624, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10626, %r10624, %r10628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r433, %r10631, %r10626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10633, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10635, %r10633, %r10637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r433, %r10640, %r10635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10642, %r436, %r10505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r430, %r10502, %r10642;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r436, %r10514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r430, %r10511, %r10649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10656, %r436, %r10523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r430, %r10520, %r10656;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10663, %r436, %r10532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r430, %r10529, %r10663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10670, %r436, %r10541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r430, %r10538, %r10670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r436, %r10550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r430, %r10547, %r10677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10684, %r436, %r10559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r430, %r10556, %r10684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10691, %r436, %r10568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r430, %r10565, %r10691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10698, %r439, %r10577;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r433, %r10574, %r10698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10705, %r439, %r10586;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r433, %r10583, %r10705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r439, %r10595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r433, %r10592, %r10712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10719, %r439, %r10604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10722, %r433, %r10601, %r10719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10726, %r439, %r10613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r433, %r10610, %r10726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10733, %r439, %r10622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r433, %r10619, %r10733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10740, %r439, %r10631;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r433, %r10628, %r10740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10747, %r439, %r10640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r433, %r10637, %r10747;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10921, %r10918}, {%r478, %r484, %r481, %r487}, {%r10503, %r10645}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10930, %r10927}, {%r478, %r484, %r481, %r487}, {%r10512, %r10652}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10939, %r10936}, {%r478, %r484, %r481, %r487}, {%r10521, %r10659}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10948, %r10945}, {%r478, %r484, %r481, %r487}, {%r10530, %r10666}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10957, %r10954}, {%r478, %r484, %r481, %r487}, {%r10539, %r10673}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10966, %r10963}, {%r478, %r484, %r481, %r487}, {%r10548, %r10680}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10975, %r10972}, {%r478, %r484, %r481, %r487}, {%r10557, %r10687}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10984, %r10981}, {%r478, %r484, %r481, %r487}, {%r10566, %r10694}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10993, %r10990}, {%r478, %r484, %r481, %r487}, {%r10575, %r10701}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11002, %r10999}, {%r478, %r484, %r481, %r487}, {%r10584, %r10708}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11011, %r11008}, {%r478, %r484, %r481, %r487}, {%r10593, %r10715}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11020, %r11017}, {%r478, %r484, %r481, %r487}, {%r10602, %r10722}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11029, %r11026}, {%r478, %r484, %r481, %r487}, {%r10611, %r10729}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11038, %r11035}, {%r478, %r484, %r481, %r487}, {%r10620, %r10736}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11047, %r11044}, {%r478, %r484, %r481, %r487}, {%r10629, %r10743}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11056, %r11053}, {%r478, %r484, %r481, %r487}, {%r10638, %r10750}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10914, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10916, %r10914, %r10918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10919, %r525, %r10921, %r10916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10923, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10925, %r10923, %r10927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10928, %r525, %r10930, %r10925;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10932, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10934, %r10932, %r10936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10937, %r525, %r10939, %r10934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10941, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10943, %r10941, %r10945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10946, %r525, %r10948, %r10943;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10950, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10952, %r10950, %r10954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10955, %r525, %r10957, %r10952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10959, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10961, %r10959, %r10963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10964, %r525, %r10966, %r10961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10968, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10970, %r10968, %r10972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10973, %r525, %r10975, %r10970;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10977, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10979, %r10977, %r10981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10982, %r525, %r10984, %r10979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10986, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10988, %r10986, %r10990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10991, %r525, %r10993, %r10988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10995, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10997, %r10995, %r10999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11000, %r525, %r11002, %r10997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11004, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11006, %r11004, %r11008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11009, %r525, %r11011, %r11006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11013, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11015, %r11013, %r11017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11018, %r525, %r11020, %r11015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11022, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11024, %r11022, %r11026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11027, %r525, %r11029, %r11024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11031, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11033, %r11031, %r11035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11036, %r525, %r11038, %r11033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11040, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11042, %r11040, %r11044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11045, %r525, %r11047, %r11042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11049, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11051, %r11049, %r11053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11054, %r525, %r11056, %r11051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11058, %r528, %r10921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11061, %r525, %r10918, %r11058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r528, %r10930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r525, %r10927, %r11065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11072, %r528, %r10939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11075, %r525, %r10936, %r11072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11079, %r528, %r10948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11082, %r525, %r10945, %r11079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11086, %r528, %r10957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11089, %r525, %r10954, %r11086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r528, %r10966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r525, %r10963, %r11093;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11100, %r528, %r10975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11103, %r525, %r10972, %r11100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11107, %r528, %r10984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11110, %r525, %r10981, %r11107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11114, %r528, %r10993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11117, %r525, %r10990, %r11114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11121, %r528, %r11002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11124, %r525, %r10999, %r11121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r528, %r11011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r525, %r11008, %r11128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11135, %r528, %r11020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11138, %r525, %r11017, %r11135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11142, %r528, %r11029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11145, %r525, %r11026, %r11142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11149, %r528, %r11038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11152, %r525, %r11035, %r11149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11156, %r528, %r11047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11159, %r525, %r11044, %r11156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11163, %r528, %r11056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11166, %r525, %r11053, %r11163;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11459, %r11462}, {%r568, %r574, %r571, %r577}, {%r10919, %r11061}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11465, %r11468}, {%r568, %r574, %r571, %r577}, {%r10928, %r11068}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11471, %r11474}, {%r568, %r574, %r571, %r577}, {%r10937, %r11075}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11477, %r11480}, {%r568, %r574, %r571, %r577}, {%r10946, %r11082}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11483, %r11486}, {%r568, %r574, %r571, %r577}, {%r10955, %r11089}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11489, %r11492}, {%r568, %r574, %r571, %r577}, {%r10964, %r11096}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11495, %r11498}, {%r568, %r574, %r571, %r577}, {%r10973, %r11103}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11501, %r11504}, {%r568, %r574, %r571, %r577}, {%r10982, %r11110}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11460, %r11463}, {%r568, %r574, %r571, %r577}, {%r10991, %r11117}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11466, %r11469}, {%r568, %r574, %r571, %r577}, {%r11000, %r11124}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11472, %r11475}, {%r568, %r574, %r571, %r577}, {%r11009, %r11131}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11478, %r11481}, {%r568, %r574, %r571, %r577}, {%r11018, %r11138}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11484, %r11487}, {%r568, %r574, %r571, %r577}, {%r11027, %r11145}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11490, %r11493}, {%r568, %r574, %r571, %r577}, {%r11036, %r11152}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11496, %r11499}, {%r568, %r574, %r571, %r577}, {%r11045, %r11159}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11502, %r11505}, {%r568, %r574, %r571, %r577}, {%r11054, %r11166}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11458, %r11459, %r11460;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11461, %r11462, %r11463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11464, %r11465, %r11466;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11467, %r11468, %r11469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11470, %r11471, %r11472;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11473, %r11474, %r11475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11476, %r11477, %r11478;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11479, %r11480, %r11481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11482, %r11483, %r11484;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11485, %r11486, %r11487;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11488, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11491, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11494, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11497, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11500, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11503, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11506, %r11459, %r11460;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11509, %r11462, %r11463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11512, %r11465, %r11466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11515, %r11468, %r11469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11518, %r11471, %r11472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11521, %r11474, %r11475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11524, %r11477, %r11478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11527, %r11480, %r11481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11530, %r11483, %r11484;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11533, %r11486, %r11487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11536, %r11489, %r11490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11539, %r11492, %r11493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11542, %r11495, %r11496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11545, %r11498, %r11499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11548, %r11501, %r11502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11551, %r11504, %r11505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11554, %r13, %r11458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11557, %r13, %r11461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11560, %r13, %r11464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11563, %r13, %r11467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11566, %r13, %r11470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11569, %r13, %r11473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11572, %r13, %r11476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11575, %r13, %r11479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11578, %r13, %r11482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11581, %r13, %r11485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11584, %r13, %r11488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11587, %r13, %r11491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11590, %r13, %r11494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11593, %r13, %r11497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11596, %r13, %r11500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11599, %r13, %r11503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11602, %r14, %r11506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11605, %r14, %r11509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11608, %r14, %r11512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11611, %r14, %r11515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11614, %r14, %r11518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11617, %r14, %r11521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11620, %r14, %r11524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11623, %r14, %r11527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11626, %r14, %r11530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11629, %r14, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11632, %r14, %r11536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11635, %r14, %r11539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11638, %r14, %r11542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11641, %r14, %r11545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11644, %r14, %r11548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11647, %r14, %r11551;
	// end inline asm
	// begin inline asm
	mov.b32 %r11650, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11651, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11652, %r11554, %r11650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11655, %r11652, %r11651;
	// end inline asm
	// begin inline asm
	mov.b32 %r11658, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11659, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11660, %r11557, %r11658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11663, %r11660, %r11659;
	// end inline asm
	// begin inline asm
	mov.b32 %r11666, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11667, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11668, %r11560, %r11666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11671, %r11668, %r11667;
	// end inline asm
	// begin inline asm
	mov.b32 %r11674, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11675, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11676, %r11563, %r11674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11679, %r11676, %r11675;
	// end inline asm
	// begin inline asm
	mov.b32 %r11682, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11683, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11684, %r11566, %r11682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11687, %r11684, %r11683;
	// end inline asm
	// begin inline asm
	mov.b32 %r11690, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11691, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11692, %r11569, %r11690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11695, %r11692, %r11691;
	// end inline asm
	// begin inline asm
	mov.b32 %r11698, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11699, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11700, %r11572, %r11698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11703, %r11700, %r11699;
	// end inline asm
	// begin inline asm
	mov.b32 %r11706, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11707, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11708, %r11575, %r11706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11711, %r11708, %r11707;
	// end inline asm
	// begin inline asm
	mov.b32 %r11714, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11715, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11716, %r11578, %r11714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11719, %r11716, %r11715;
	// end inline asm
	// begin inline asm
	mov.b32 %r11722, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11723, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11724, %r11581, %r11722;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11727, %r11724, %r11723;
	// end inline asm
	// begin inline asm
	mov.b32 %r11730, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11731, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11732, %r11584, %r11730;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11735, %r11732, %r11731;
	// end inline asm
	// begin inline asm
	mov.b32 %r11738, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11739, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11740, %r11587, %r11738;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11743, %r11740, %r11739;
	// end inline asm
	// begin inline asm
	mov.b32 %r11746, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11747, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11748, %r11590, %r11746;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11751, %r11748, %r11747;
	// end inline asm
	// begin inline asm
	mov.b32 %r11754, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11755, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11756, %r11593, %r11754;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11759, %r11756, %r11755;
	// end inline asm
	// begin inline asm
	mov.b32 %r11762, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11763, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11764, %r11596, %r11762;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11767, %r11764, %r11763;
	// end inline asm
	// begin inline asm
	mov.b32 %r11770, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11771, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11772, %r11599, %r11770;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11775, %r11772, %r11771;
	// end inline asm
	// begin inline asm
	mov.b32 %r11778, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11779, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11780, %r11602, %r11778;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11783, %r11780, %r11779;
	// end inline asm
	// begin inline asm
	mov.b32 %r11786, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11787, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11788, %r11605, %r11786;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11791, %r11788, %r11787;
	// end inline asm
	// begin inline asm
	mov.b32 %r11794, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11795, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11796, %r11608, %r11794;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11799, %r11796, %r11795;
	// end inline asm
	// begin inline asm
	mov.b32 %r11802, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11803, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11804, %r11611, %r11802;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11807, %r11804, %r11803;
	// end inline asm
	// begin inline asm
	mov.b32 %r11810, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11811, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11812, %r11614, %r11810;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11815, %r11812, %r11811;
	// end inline asm
	// begin inline asm
	mov.b32 %r11818, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11819, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11820, %r11617, %r11818;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11823, %r11820, %r11819;
	// end inline asm
	// begin inline asm
	mov.b32 %r11826, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11827, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11828, %r11620, %r11826;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11831, %r11828, %r11827;
	// end inline asm
	// begin inline asm
	mov.b32 %r11834, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11835, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11836, %r11623, %r11834;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11839, %r11836, %r11835;
	// end inline asm
	// begin inline asm
	mov.b32 %r11842, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11843, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11844, %r11626, %r11842;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11847, %r11844, %r11843;
	// end inline asm
	// begin inline asm
	mov.b32 %r11850, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11851, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11852, %r11629, %r11850;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11855, %r11852, %r11851;
	// end inline asm
	// begin inline asm
	mov.b32 %r11858, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11859, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11860, %r11632, %r11858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11863, %r11860, %r11859;
	// end inline asm
	// begin inline asm
	mov.b32 %r11866, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11867, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11868, %r11635, %r11866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11871, %r11868, %r11867;
	// end inline asm
	// begin inline asm
	mov.b32 %r11874, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11875, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11876, %r11638, %r11874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11879, %r11876, %r11875;
	// end inline asm
	// begin inline asm
	mov.b32 %r11882, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11883, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11884, %r11641, %r11882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11887, %r11884, %r11883;
	// end inline asm
	// begin inline asm
	mov.b32 %r11890, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11891, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11892, %r11644, %r11890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11895, %r11892, %r11891;
	// end inline asm
	// begin inline asm
	mov.b32 %r11898, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r11899, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11900, %r11647, %r11898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11903, %r11900, %r11899;
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r11907, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11908, %r11909, %r11907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11911, %r11655, %r11908;
	// end inline asm
	// begin inline asm
	mov.b32 %r11914, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11915, %r11909, %r11914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11918, %r11663, %r11915;
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11922, %r11909, %r11921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11925, %r11671, %r11922;
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11929, %r11909, %r11928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11932, %r11679, %r11929;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11935, %r11911, %r11925, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11939, %r11918, %r11932, %r4306;
	// end inline asm
	shl.b32 	%r11946, %r11939, 4;
	// begin inline asm
	lop3.b32 %r11943, %r4312, %r11935, %r11946, 202;
	// end inline asm
	xor.b32  	%r16074, %r11943, -2004318072;
	// begin inline asm
	mov.b32 %r11950, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r11948, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11949, %r11950, %r11948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11952, %r11687, %r11949;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11956, %r11950, %r11955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11959, %r11695, %r11956;
	// end inline asm
	// begin inline asm
	mov.b32 %r11962, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11963, %r11950, %r11962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11966, %r11703, %r11963;
	// end inline asm
	// begin inline asm
	mov.b32 %r11969, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11970, %r11950, %r11969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11973, %r11711, %r11970;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11976, %r11952, %r11966, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11980, %r11959, %r11973, %r4306;
	// end inline asm
	shl.b32 	%r11987, %r11980, 4;
	// begin inline asm
	lop3.b32 %r11984, %r4312, %r11976, %r11987, 202;
	// end inline asm
	xor.b32  	%r16075, %r11984, -2004318072;
	// begin inline asm
	mov.b32 %r11991, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r11989, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11990, %r11991, %r11989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11993, %r11719, %r11990;
	// end inline asm
	// begin inline asm
	mov.b32 %r11996, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11997, %r11991, %r11996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r11727, %r11997;
	// end inline asm
	// begin inline asm
	mov.b32 %r12003, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12004, %r11991, %r12003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r11735, %r12004;
	// end inline asm
	// begin inline asm
	mov.b32 %r12010, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12011, %r11991, %r12010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12014, %r11743, %r12011;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12017, %r11993, %r12007, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12021, %r12000, %r12014, %r4306;
	// end inline asm
	shl.b32 	%r12028, %r12021, 4;
	// begin inline asm
	lop3.b32 %r12025, %r4312, %r12017, %r12028, 202;
	// end inline asm
	xor.b32  	%r16076, %r12025, -2004318072;
	// begin inline asm
	mov.b32 %r12032, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12031, %r12032, %r12030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12034, %r11751, %r12031;
	// end inline asm
	// begin inline asm
	mov.b32 %r12037, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12038, %r12032, %r12037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r11759, %r12038;
	// end inline asm
	// begin inline asm
	mov.b32 %r12044, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12045, %r12032, %r12044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r11767, %r12045;
	// end inline asm
	// begin inline asm
	mov.b32 %r12051, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12052, %r12032, %r12051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12055, %r11775, %r12052;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12058, %r12034, %r12048, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12062, %r12041, %r12055, %r4306;
	// end inline asm
	shl.b32 	%r12069, %r12062, 4;
	// begin inline asm
	lop3.b32 %r12066, %r4312, %r12058, %r12069, 202;
	// end inline asm
	xor.b32  	%r16077, %r12066, -2004318072;
	// begin inline asm
	mov.b32 %r12073, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12071, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12072, %r12073, %r12071;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12075, %r11783, %r12072;
	// end inline asm
	// begin inline asm
	mov.b32 %r12078, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12079, %r12073, %r12078;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r11791, %r12079;
	// end inline asm
	// begin inline asm
	mov.b32 %r12085, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12086, %r12073, %r12085;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r11799, %r12086;
	// end inline asm
	// begin inline asm
	mov.b32 %r12092, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12093, %r12073, %r12092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12096, %r11807, %r12093;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12099, %r12075, %r12089, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12103, %r12082, %r12096, %r4306;
	// end inline asm
	shl.b32 	%r12110, %r12103, 4;
	// begin inline asm
	lop3.b32 %r12107, %r4312, %r12099, %r12110, 202;
	// end inline asm
	xor.b32  	%r16078, %r12107, -2004318072;
	// begin inline asm
	mov.b32 %r12114, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12112, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12113, %r12114, %r12112;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12116, %r11815, %r12113;
	// end inline asm
	// begin inline asm
	mov.b32 %r12119, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12120, %r12114, %r12119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r11823, %r12120;
	// end inline asm
	// begin inline asm
	mov.b32 %r12126, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12127, %r12114, %r12126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r11831, %r12127;
	// end inline asm
	// begin inline asm
	mov.b32 %r12133, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12134, %r12114, %r12133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12137, %r11839, %r12134;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12140, %r12116, %r12130, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12144, %r12123, %r12137, %r4306;
	// end inline asm
	shl.b32 	%r12151, %r12144, 4;
	// begin inline asm
	lop3.b32 %r12148, %r4312, %r12140, %r12151, 202;
	// end inline asm
	xor.b32  	%r16079, %r12148, -2004318072;
	// begin inline asm
	mov.b32 %r12155, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12153, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12154, %r12155, %r12153;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12157, %r11847, %r12154;
	// end inline asm
	// begin inline asm
	mov.b32 %r12160, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12161, %r12155, %r12160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r11855, %r12161;
	// end inline asm
	// begin inline asm
	mov.b32 %r12167, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12168, %r12155, %r12167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r11863, %r12168;
	// end inline asm
	// begin inline asm
	mov.b32 %r12174, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12175, %r12155, %r12174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12178, %r11871, %r12175;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12181, %r12157, %r12171, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12185, %r12164, %r12178, %r4306;
	// end inline asm
	shl.b32 	%r12192, %r12185, 4;
	// begin inline asm
	lop3.b32 %r12189, %r4312, %r12181, %r12192, 202;
	// end inline asm
	xor.b32  	%r16080, %r12189, -2004318072;
	// begin inline asm
	mov.b32 %r12196, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12194, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12195, %r12196, %r12194;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12198, %r11879, %r12195;
	// end inline asm
	// begin inline asm
	mov.b32 %r12201, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12202, %r12196, %r12201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r11887, %r12202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12208, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12209, %r12196, %r12208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r11895, %r12209;
	// end inline asm
	// begin inline asm
	mov.b32 %r12215, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12216, %r12196, %r12215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12219, %r11903, %r12216;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12222, %r12198, %r12212, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12226, %r12205, %r12219, %r4306;
	// end inline asm
	shl.b32 	%r12233, %r12226, 4;
	// begin inline asm
	lop3.b32 %r12230, %r4312, %r12222, %r12233, 202;
	// end inline asm
	xor.b32  	%r16081, %r12230, -2004318072;
	st.shared.u32 	[%rd79], %r16074;
	st.shared.u32 	[%rd80], %r16075;
	st.shared.u32 	[%rd81], %r16076;
	st.shared.u32 	[%rd82], %r16077;
	st.shared.u32 	[%rd83], %r16078;
	st.shared.u32 	[%rd84], %r16079;
	st.shared.u32 	[%rd85], %r16080;
	st.shared.u32 	[%rd86], %r16081;
	ld.shared.u32 	%r16198, [%rd71];
	ld.shared.u32 	%r16199, [%rd72];
	ld.shared.u32 	%r16200, [%rd73];
	ld.shared.u32 	%r16201, [%rd74];
	ld.shared.u32 	%r16210, [%rd75];
	ld.shared.u32 	%r16211, [%rd76];
	ld.shared.u32 	%r16212, [%rd77];
	ld.shared.u32 	%r16213, [%rd78];
	// begin inline asm
	mov.b32 %r12239, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12250, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12238, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r12236, %r789, %r12238, %r12239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12240, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12241, %r12239, %r12240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12244, %r12236, %r12241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12247, %r800, %r12238, %r12250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12251, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12252, %r12250, %r12251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12255, %r12247, %r12252;
	// end inline asm
	shr.u32 	%r12260, %r12238, 8;
	// begin inline asm
	lop3.b32 %r12258, %r789, %r12260, %r12239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12262, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12263, %r12239, %r12262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12266, %r12258, %r12263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12269, %r800, %r12260, %r12250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12273, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12274, %r12250, %r12273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12277, %r12269, %r12274;
	// end inline asm
	// begin inline asm
	mov.b32 %r12285, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12296, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12284, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r12282, %r789, %r12284, %r12285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12286, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r12285, %r12286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12290, %r12282, %r12287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12293, %r800, %r12284, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12296, %r12297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12301, %r12293, %r12298;
	// end inline asm
	shr.u32 	%r12306, %r12284, 8;
	// begin inline asm
	lop3.b32 %r12304, %r789, %r12306, %r12285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12285, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12315, %r800, %r12306, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12296, %r12319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12323, %r12315, %r12320;
	// end inline asm
	// begin inline asm
	mov.b32 %r12331, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12342, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12330, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r12328, %r789, %r12330, %r12331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12332, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12333, %r12331, %r12332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12336, %r12328, %r12333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12339, %r800, %r12330, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12344, %r12342, %r12343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12347, %r12339, %r12344;
	// end inline asm
	shr.u32 	%r12352, %r12330, 8;
	// begin inline asm
	lop3.b32 %r12350, %r789, %r12352, %r12331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12331, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12361, %r800, %r12352, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12365, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12366, %r12342, %r12365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12369, %r12361, %r12366;
	// end inline asm
	// begin inline asm
	mov.b32 %r12377, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12388, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12376, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r12374, %r789, %r12376, %r12377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12379, %r12377, %r12378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12382, %r12374, %r12379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12385, %r800, %r12376, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12390, %r12388, %r12389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12393, %r12385, %r12390;
	// end inline asm
	shr.u32 	%r12398, %r12376, 8;
	// begin inline asm
	lop3.b32 %r12396, %r789, %r12398, %r12377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12377, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12407, %r800, %r12398, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12411, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12412, %r12388, %r12411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12415, %r12407, %r12412;
	// end inline asm
	// begin inline asm
	mov.b32 %r12423, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12434, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12422, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r12420, %r789, %r12422, %r12423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12425, %r12423, %r12424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12428, %r12420, %r12425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12431, %r800, %r12422, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12436, %r12434, %r12435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12439, %r12431, %r12436;
	// end inline asm
	shr.u32 	%r12444, %r12422, 8;
	// begin inline asm
	lop3.b32 %r12442, %r789, %r12444, %r12423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12423, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12453, %r800, %r12444, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12457, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12458, %r12434, %r12457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12461, %r12453, %r12458;
	// end inline asm
	// begin inline asm
	mov.b32 %r12469, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12480, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12468, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r12466, %r789, %r12468, %r12469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12471, %r12469, %r12470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12474, %r12466, %r12471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12477, %r800, %r12468, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12482, %r12480, %r12481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12485, %r12477, %r12482;
	// end inline asm
	shr.u32 	%r12490, %r12468, 8;
	// begin inline asm
	lop3.b32 %r12488, %r789, %r12490, %r12469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12469, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12499, %r800, %r12490, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12503, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12504, %r12480, %r12503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12507, %r12499, %r12504;
	// end inline asm
	// begin inline asm
	mov.b32 %r12515, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12526, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12514, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r12512, %r789, %r12514, %r12515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12517, %r12515, %r12516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12520, %r12512, %r12517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12523, %r800, %r12514, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12528, %r12526, %r12527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12531, %r12523, %r12528;
	// end inline asm
	shr.u32 	%r12536, %r12514, 8;
	// begin inline asm
	lop3.b32 %r12534, %r789, %r12536, %r12515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12515, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12545, %r800, %r12536, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12549, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12550, %r12526, %r12549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12553, %r12545, %r12550;
	// end inline asm
	// begin inline asm
	mov.b32 %r12561, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12572, {%rs2172, %rs2172};
	// end inline asm
	xor.b32  	%r12560, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r12558, %r789, %r12560, %r12561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12563, %r12561, %r12562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12566, %r12558, %r12563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12569, %r800, %r12560, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12574, %r12572, %r12573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12577, %r12569, %r12574;
	// end inline asm
	shr.u32 	%r12582, %r12560, 8;
	// begin inline asm
	lop3.b32 %r12580, %r789, %r12582, %r12561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12561, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12591, %r800, %r12582, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12595, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12596, %r12572, %r12595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12599, %r12591, %r12596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12602, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12604, %r12602, %r12244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12607, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12609, %r12607, %r12255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12612, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12614, %r12612, %r12266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12617, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12619, %r12617, %r12277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12622, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12624, %r12622, %r12290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12627, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12629, %r12627, %r12301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12632, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12634, %r12632, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12637, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12639, %r12637, %r12323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12642, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12644, %r12642, %r12336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12647, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12649, %r12647, %r12347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12652, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12654, %r12652, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12657, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12659, %r12657, %r12369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12662, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12664, %r12662, %r12382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12667, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12669, %r12667, %r12393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12672, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12674, %r12672, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12677, %r384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12679, %r12677, %r12415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12682, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12684, %r12682, %r12428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12687, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12689, %r12687, %r12439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12692, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12694, %r12692, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12697, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12699, %r12697, %r12461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12702, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12704, %r12702, %r12474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12599;
	// end inline asm
	// begin inline asm
	mov.b32 %r12767, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12778, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12764, %r789, %r790, %r12767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12768, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12769, %r12767, %r12768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12772, %r12764, %r12769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12775, %r800, %r790, %r12778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12779, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12780, %r12778, %r12779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12783, %r12775, %r12780;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12786, %r789, %r812, %r12767, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12790, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12791, %r12767, %r12790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12794, %r12786, %r12791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12797, %r800, %r812, %r12778, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12801, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12802, %r12778, %r12801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12805, %r12797, %r12802;
	// end inline asm
	// begin inline asm
	mov.b32 %r12813, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12824, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12810, %r789, %r836, %r12813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12814, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12815, %r12813, %r12814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12818, %r12810, %r12815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12821, %r800, %r836, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12825, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12826, %r12824, %r12825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12829, %r12821, %r12826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r789, %r858, %r12813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12813, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12843, %r800, %r858, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12847, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12848, %r12824, %r12847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12851, %r12843, %r12848;
	// end inline asm
	// begin inline asm
	mov.b32 %r12859, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12870, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12856, %r789, %r882, %r12859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12860, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12861, %r12859, %r12860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12864, %r12856, %r12861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12867, %r800, %r882, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12872, %r12870, %r12871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12875, %r12867, %r12872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r789, %r904, %r12859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12859, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12889, %r800, %r904, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12893, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12894, %r12870, %r12893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12897, %r12889, %r12894;
	// end inline asm
	// begin inline asm
	mov.b32 %r12905, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12916, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12902, %r789, %r928, %r12905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12907, %r12905, %r12906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12910, %r12902, %r12907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12913, %r800, %r928, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12918, %r12916, %r12917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12921, %r12913, %r12918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r789, %r950, %r12905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12905, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12935, %r800, %r950, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12939, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12940, %r12916, %r12939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12943, %r12935, %r12940;
	// end inline asm
	// begin inline asm
	mov.b32 %r12951, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r12962, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12948, %r789, %r974, %r12951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12953, %r12951, %r12952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12956, %r12948, %r12953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12959, %r800, %r974, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12964, %r12962, %r12963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12967, %r12959, %r12964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r789, %r996, %r12951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12951, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12981, %r800, %r996, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12985, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12986, %r12962, %r12985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12989, %r12981, %r12986;
	// end inline asm
	// begin inline asm
	mov.b32 %r12997, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13008, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12994, %r789, %r1020, %r12997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12999, %r12997, %r12998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13002, %r12994, %r12999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13005, %r800, %r1020, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13010, %r13008, %r13009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13013, %r13005, %r13010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r789, %r1042, %r12997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r12997, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13027, %r800, %r1042, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13031, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13032, %r13008, %r13031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13035, %r13027, %r13032;
	// end inline asm
	// begin inline asm
	mov.b32 %r13043, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13054, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13040, %r789, %r1066, %r13043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13045, %r13043, %r13044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13048, %r13040, %r13045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13051, %r800, %r1066, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13056, %r13054, %r13055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13059, %r13051, %r13056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r789, %r1088, %r13043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13043, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13073, %r800, %r1088, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13077, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13078, %r13054, %r13077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13081, %r13073, %r13078;
	// end inline asm
	// begin inline asm
	mov.b32 %r13089, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13100, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13086, %r789, %r1112, %r13089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13091, %r13089, %r13090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13094, %r13086, %r13091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13097, %r800, %r1112, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13102, %r13100, %r13101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13105, %r13097, %r13102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r789, %r1134, %r13089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13089, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13119, %r800, %r1134, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13123, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13124, %r13100, %r13123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13127, %r13119, %r13124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13130, %r276, %r12772, %r12604;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13134, %r276, %r12783, %r12609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13138, %r276, %r12794, %r12614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13142, %r276, %r12805, %r12619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13146, %r276, %r12818, %r12624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13150, %r276, %r12829, %r12629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13154, %r276, %r12840, %r12634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13158, %r276, %r12851, %r12639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13162, %r276, %r12864, %r12644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13166, %r276, %r12875, %r12649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13170, %r276, %r12886, %r12654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13174, %r276, %r12897, %r12659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13178, %r276, %r12910, %r12664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13182, %r276, %r12921, %r12669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13186, %r276, %r12932, %r12674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13190, %r276, %r12943, %r12679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13194, %r294, %r12956, %r12684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13198, %r294, %r12967, %r12689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13202, %r294, %r12978, %r12694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13206, %r294, %r12989, %r12699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13210, %r294, %r13002, %r12704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13214, %r294, %r13013, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13218, %r294, %r13024, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13222, %r294, %r13035, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r294, %r13048, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r294, %r13059, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r294, %r13070, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r294, %r13081, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r294, %r13094, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r294, %r13105, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r294, %r13116, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r294, %r13127, %r12759;
	// end inline asm
	// begin inline asm
	mov.b32 %r13263, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13274, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13260, %r789, %r4606, %r13263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13264, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13265, %r13263, %r13264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13268, %r13260, %r13265;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13271, %r800, %r4606, %r13274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13275, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13276, %r13274, %r13275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13279, %r13271, %r13276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13282, %r789, %r4628, %r13263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13286, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13287, %r13263, %r13286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13290, %r13282, %r13287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13293, %r800, %r4628, %r13274, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13297, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13298, %r13274, %r13297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13301, %r13293, %r13298;
	// end inline asm
	// begin inline asm
	mov.b32 %r13309, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13320, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13306, %r789, %r4652, %r13309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13310, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13311, %r13309, %r13310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13314, %r13306, %r13311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13317, %r800, %r4652, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13321, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13322, %r13320, %r13321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13325, %r13317, %r13322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r789, %r4674, %r13309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13309, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13339, %r800, %r4674, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13343, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13344, %r13320, %r13343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13347, %r13339, %r13344;
	// end inline asm
	// begin inline asm
	mov.b32 %r13355, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13366, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13352, %r789, %r4698, %r13355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13356, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13357, %r13355, %r13356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13360, %r13352, %r13357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13363, %r800, %r4698, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13368, %r13366, %r13367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13371, %r13363, %r13368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r789, %r4720, %r13355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13355, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13385, %r800, %r4720, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13389, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13390, %r13366, %r13389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13393, %r13385, %r13390;
	// end inline asm
	// begin inline asm
	mov.b32 %r13401, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13412, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13398, %r789, %r4744, %r13401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13403, %r13401, %r13402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13406, %r13398, %r13403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13409, %r800, %r4744, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13414, %r13412, %r13413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13417, %r13409, %r13414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r789, %r4766, %r13401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13401, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13431, %r800, %r4766, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13435, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13436, %r13412, %r13435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13439, %r13431, %r13436;
	// end inline asm
	// begin inline asm
	mov.b32 %r13447, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13458, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13444, %r789, %r4790, %r13447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13449, %r13447, %r13448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13452, %r13444, %r13449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13455, %r800, %r4790, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13460, %r13458, %r13459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13463, %r13455, %r13460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r789, %r4812, %r13447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13447, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13477, %r800, %r4812, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13481, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13482, %r13458, %r13481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13485, %r13477, %r13482;
	// end inline asm
	// begin inline asm
	mov.b32 %r13493, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13504, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13490, %r789, %r4836, %r13493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13495, %r13493, %r13494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13498, %r13490, %r13495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13501, %r800, %r4836, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13506, %r13504, %r13505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13509, %r13501, %r13506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r789, %r4858, %r13493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13493, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13523, %r800, %r4858, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13527, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13528, %r13504, %r13527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13531, %r13523, %r13528;
	// end inline asm
	// begin inline asm
	mov.b32 %r13539, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13550, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13536, %r789, %r4882, %r13539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13541, %r13539, %r13540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13544, %r13536, %r13541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13547, %r800, %r4882, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13552, %r13550, %r13551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13555, %r13547, %r13552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r789, %r4904, %r13539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13539, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13569, %r800, %r4904, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13573, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13574, %r13550, %r13573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13577, %r13569, %r13574;
	// end inline asm
	// begin inline asm
	mov.b32 %r13585, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13596, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13582, %r789, %r4928, %r13585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13587, %r13585, %r13586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13590, %r13582, %r13587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13593, %r800, %r4928, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13598, %r13596, %r13597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13601, %r13593, %r13598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r789, %r4950, %r13585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13585, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13615, %r800, %r4950, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13619, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13620, %r13596, %r13619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13623, %r13615, %r13620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13626, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13628, %r13626, %r13268, %r13130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13632, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13634, %r13632, %r13279, %r13134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13638, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13640, %r13638, %r13290, %r13138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13644, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13646, %r13644, %r13301, %r13142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13650, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13652, %r13650, %r13314, %r13146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13656, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13658, %r13656, %r13325, %r13150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13662, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13664, %r13662, %r13336, %r13154;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13668, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13670, %r13668, %r13347, %r13158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13674, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13676, %r13674, %r13360, %r13162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13680, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13682, %r13680, %r13371, %r13166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13686, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13688, %r13686, %r13382, %r13170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13692, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13694, %r13692, %r13393, %r13174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13698, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13700, %r13698, %r13406, %r13178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13704, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13706, %r13704, %r13417, %r13182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13710, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13712, %r13710, %r13428, %r13186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13716, %r312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13718, %r13716, %r13439, %r13190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13722, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13724, %r13722, %r13452, %r13194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13728, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13730, %r13728, %r13463, %r13198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13734, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13736, %r13734, %r13474, %r13202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13740, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13742, %r13740, %r13485, %r13206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13746, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13748, %r13746, %r13498, %r13210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13752, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13754, %r13752, %r13509, %r13214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13758, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13760, %r13758, %r13520, %r13218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13764, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13766, %r13764, %r13531, %r13222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13770, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13772, %r13770, %r13544, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13776, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13778, %r13776, %r13555, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13782, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13784, %r13782, %r13566, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13788, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13790, %r13788, %r13577, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13794, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13796, %r13794, %r13590, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13800, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13802, %r13800, %r13601, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13806, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13808, %r13806, %r13612, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13812, %r330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13814, %r13812, %r13623, %r13254;
	// end inline asm
	// begin inline asm
	mov.b32 %r13823, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13834, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13820, %r789, %r8422, %r13823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13824, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13825, %r13823, %r13824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13828, %r13820, %r13825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13831, %r800, %r8422, %r13834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13835, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13836, %r13834, %r13835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13839, %r13831, %r13836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13842, %r789, %r8444, %r13823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13846, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13847, %r13823, %r13846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13850, %r13842, %r13847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13853, %r800, %r8444, %r13834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13857, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13858, %r13834, %r13857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13861, %r13853, %r13858;
	// end inline asm
	// begin inline asm
	mov.b32 %r13869, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13880, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13866, %r789, %r8468, %r13869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13870, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13871, %r13869, %r13870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13874, %r13866, %r13871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13877, %r800, %r8468, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13881, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13882, %r13880, %r13881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13885, %r13877, %r13882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r789, %r8490, %r13869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13869, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13899, %r800, %r8490, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13903, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13904, %r13880, %r13903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13907, %r13899, %r13904;
	// end inline asm
	// begin inline asm
	mov.b32 %r13915, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13926, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13912, %r789, %r8514, %r13915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13916, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13917, %r13915, %r13916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13920, %r13912, %r13917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13923, %r800, %r8514, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13928, %r13926, %r13927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13931, %r13923, %r13928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r789, %r8536, %r13915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13915, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13945, %r800, %r8536, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13949, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13950, %r13926, %r13949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13953, %r13945, %r13950;
	// end inline asm
	// begin inline asm
	mov.b32 %r13961, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r13972, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13958, %r789, %r8560, %r13961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13963, %r13961, %r13962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13966, %r13958, %r13963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13969, %r800, %r8560, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13974, %r13972, %r13973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13977, %r13969, %r13974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r789, %r8582, %r13961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13961, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13991, %r800, %r8582, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13995, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13996, %r13972, %r13995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13999, %r13991, %r13996;
	// end inline asm
	// begin inline asm
	mov.b32 %r14007, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14018, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14004, %r789, %r8606, %r14007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14009, %r14007, %r14008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14012, %r14004, %r14009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14015, %r800, %r8606, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14020, %r14018, %r14019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14023, %r14015, %r14020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r789, %r8628, %r14007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14007, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14037, %r800, %r8628, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14041, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14042, %r14018, %r14041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14045, %r14037, %r14042;
	// end inline asm
	// begin inline asm
	mov.b32 %r14053, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14064, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14050, %r789, %r8652, %r14053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14055, %r14053, %r14054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14058, %r14050, %r14055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14061, %r800, %r8652, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14066, %r14064, %r14065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14069, %r14061, %r14066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r789, %r8674, %r14053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14053, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14083, %r800, %r8674, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14087, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14088, %r14064, %r14087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14091, %r14083, %r14088;
	// end inline asm
	// begin inline asm
	mov.b32 %r14099, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14110, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14096, %r789, %r8698, %r14099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14101, %r14099, %r14100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14104, %r14096, %r14101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14107, %r800, %r8698, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14112, %r14110, %r14111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14115, %r14107, %r14112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r789, %r8720, %r14099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14099, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14129, %r800, %r8720, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14133, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14134, %r14110, %r14133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14137, %r14129, %r14134;
	// end inline asm
	// begin inline asm
	mov.b32 %r14145, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r14156, {%rs2172, %rs2172};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14142, %r789, %r8744, %r14145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14147, %r14145, %r14146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14150, %r14142, %r14147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14153, %r800, %r8744, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14158, %r14156, %r14157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14161, %r14153, %r14158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r789, %r8766, %r14145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14145, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14175, %r800, %r8766, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14179, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14180, %r14156, %r14179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14183, %r14175, %r14180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14321, %r348, %r13828, %r13628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14318, %r348, %r13839, %r13634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14330, %r348, %r13850, %r13640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14327, %r348, %r13861, %r13646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14339, %r348, %r13874, %r13652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14336, %r348, %r13885, %r13658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14348, %r348, %r13896, %r13664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14345, %r348, %r13907, %r13670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14357, %r348, %r13920, %r13676;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14354, %r348, %r13931, %r13682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14366, %r348, %r13942, %r13688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14363, %r348, %r13953, %r13694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14375, %r348, %r13966, %r13700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14372, %r348, %r13977, %r13706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14384, %r348, %r13988, %r13712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14381, %r348, %r13999, %r13718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14393, %r366, %r14012, %r13724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14390, %r366, %r14023, %r13730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14402, %r366, %r14034, %r13736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14399, %r366, %r14045, %r13742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14411, %r366, %r14058, %r13748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14408, %r366, %r14069, %r13754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14420, %r366, %r14080, %r13760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14417, %r366, %r14091, %r13766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r366, %r14104, %r13772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14426, %r366, %r14115, %r13778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r366, %r14126, %r13784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14435, %r366, %r14137, %r13790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r366, %r14150, %r13796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14444, %r366, %r14161, %r13802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r366, %r14172, %r13808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14453, %r366, %r14183, %r13814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14314, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14316, %r14314, %r14318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14319, %r430, %r14321, %r14316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14323, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14325, %r14323, %r14327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14328, %r430, %r14330, %r14325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14332, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14334, %r14332, %r14336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14337, %r430, %r14339, %r14334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14341, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14343, %r14341, %r14345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14346, %r430, %r14348, %r14343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14350, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14352, %r14350, %r14354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r430, %r14357, %r14352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14359, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14361, %r14359, %r14363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r430, %r14366, %r14361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14368, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14370, %r14368, %r14372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r430, %r14375, %r14370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14377, %r436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14379, %r14377, %r14381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r430, %r14384, %r14379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14386, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14388, %r14386, %r14390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r433, %r14393, %r14388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14395, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14397, %r14395, %r14399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r433, %r14402, %r14397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14404, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14406, %r14404, %r14408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r433, %r14411, %r14406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14413, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14415, %r14413, %r14417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r433, %r14420, %r14415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14422, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14424, %r14422, %r14426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r433, %r14429, %r14424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14431, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14433, %r14431, %r14435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r433, %r14438, %r14433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14440, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14442, %r14440, %r14444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r433, %r14447, %r14442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14449, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14451, %r14449, %r14453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r433, %r14456, %r14451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14458, %r436, %r14321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r430, %r14318, %r14458;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r436, %r14330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r430, %r14327, %r14465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14472, %r436, %r14339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r430, %r14336, %r14472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14479, %r436, %r14348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r430, %r14345, %r14479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14486, %r436, %r14357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r430, %r14354, %r14486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r436, %r14366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r430, %r14363, %r14493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14500, %r436, %r14375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r430, %r14372, %r14500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14507, %r436, %r14384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r430, %r14381, %r14507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14514, %r439, %r14393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r433, %r14390, %r14514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14521, %r439, %r14402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r433, %r14399, %r14521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r439, %r14411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r433, %r14408, %r14528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14535, %r439, %r14420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14538, %r433, %r14417, %r14535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14542, %r439, %r14429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r433, %r14426, %r14542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14549, %r439, %r14438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r433, %r14435, %r14549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14556, %r439, %r14447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r433, %r14444, %r14556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14563, %r439, %r14456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r433, %r14453, %r14563;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14737, %r14734}, {%r478, %r484, %r481, %r487}, {%r14319, %r14461}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14746, %r14743}, {%r478, %r484, %r481, %r487}, {%r14328, %r14468}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14755, %r14752}, {%r478, %r484, %r481, %r487}, {%r14337, %r14475}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14764, %r14761}, {%r478, %r484, %r481, %r487}, {%r14346, %r14482}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14773, %r14770}, {%r478, %r484, %r481, %r487}, {%r14355, %r14489}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14782, %r14779}, {%r478, %r484, %r481, %r487}, {%r14364, %r14496}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14791, %r14788}, {%r478, %r484, %r481, %r487}, {%r14373, %r14503}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14800, %r14797}, {%r478, %r484, %r481, %r487}, {%r14382, %r14510}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14809, %r14806}, {%r478, %r484, %r481, %r487}, {%r14391, %r14517}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14818, %r14815}, {%r478, %r484, %r481, %r487}, {%r14400, %r14524}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14827, %r14824}, {%r478, %r484, %r481, %r487}, {%r14409, %r14531}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14836, %r14833}, {%r478, %r484, %r481, %r487}, {%r14418, %r14538}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14845, %r14842}, {%r478, %r484, %r481, %r487}, {%r14427, %r14545}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14854, %r14851}, {%r478, %r484, %r481, %r487}, {%r14436, %r14552}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14863, %r14860}, {%r478, %r484, %r481, %r487}, {%r14445, %r14559}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14872, %r14869}, {%r478, %r484, %r481, %r487}, {%r14454, %r14566}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14730, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14732, %r14730, %r14734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14735, %r525, %r14737, %r14732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14739, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14741, %r14739, %r14743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14744, %r525, %r14746, %r14741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14748, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14750, %r14748, %r14752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14753, %r525, %r14755, %r14750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14757, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14759, %r14757, %r14761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14762, %r525, %r14764, %r14759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14766, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14768, %r14766, %r14770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14771, %r525, %r14773, %r14768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14775, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14777, %r14775, %r14779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14780, %r525, %r14782, %r14777;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14784, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14786, %r14784, %r14788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14789, %r525, %r14791, %r14786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14793, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14795, %r14793, %r14797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14798, %r525, %r14800, %r14795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14802, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14804, %r14802, %r14806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14807, %r525, %r14809, %r14804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14811, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14813, %r14811, %r14815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14816, %r525, %r14818, %r14813;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14820, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14822, %r14820, %r14824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14825, %r525, %r14827, %r14822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14829, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14831, %r14829, %r14833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14834, %r525, %r14836, %r14831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14838, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14840, %r14838, %r14842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14843, %r525, %r14845, %r14840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14847, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14849, %r14847, %r14851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14852, %r525, %r14854, %r14849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14856, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14858, %r14856, %r14860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14861, %r525, %r14863, %r14858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14865, %r528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14867, %r14865, %r14869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14870, %r525, %r14872, %r14867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14874, %r528, %r14737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14877, %r525, %r14734, %r14874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r528, %r14746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r525, %r14743, %r14881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14888, %r528, %r14755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14891, %r525, %r14752, %r14888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14895, %r528, %r14764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14898, %r525, %r14761, %r14895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14902, %r528, %r14773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14905, %r525, %r14770, %r14902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r528, %r14782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r525, %r14779, %r14909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14916, %r528, %r14791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14919, %r525, %r14788, %r14916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14923, %r528, %r14800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14926, %r525, %r14797, %r14923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14930, %r528, %r14809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14933, %r525, %r14806, %r14930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14937, %r528, %r14818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14940, %r525, %r14815, %r14937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r528, %r14827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r525, %r14824, %r14944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14951, %r528, %r14836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14954, %r525, %r14833, %r14951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14958, %r528, %r14845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14961, %r525, %r14842, %r14958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14965, %r528, %r14854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14968, %r525, %r14851, %r14965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14972, %r528, %r14863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14975, %r525, %r14860, %r14972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14979, %r528, %r14872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14982, %r525, %r14869, %r14979;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15275, %r15278}, {%r568, %r574, %r571, %r577}, {%r14735, %r14877}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15281, %r15284}, {%r568, %r574, %r571, %r577}, {%r14744, %r14884}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15287, %r15290}, {%r568, %r574, %r571, %r577}, {%r14753, %r14891}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15293, %r15296}, {%r568, %r574, %r571, %r577}, {%r14762, %r14898}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15299, %r15302}, {%r568, %r574, %r571, %r577}, {%r14771, %r14905}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15305, %r15308}, {%r568, %r574, %r571, %r577}, {%r14780, %r14912}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15311, %r15314}, {%r568, %r574, %r571, %r577}, {%r14789, %r14919}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15317, %r15320}, {%r568, %r574, %r571, %r577}, {%r14798, %r14926}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15276, %r15279}, {%r568, %r574, %r571, %r577}, {%r14807, %r14933}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15282, %r15285}, {%r568, %r574, %r571, %r577}, {%r14816, %r14940}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15288, %r15291}, {%r568, %r574, %r571, %r577}, {%r14825, %r14947}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15294, %r15297}, {%r568, %r574, %r571, %r577}, {%r14834, %r14954}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15300, %r15303}, {%r568, %r574, %r571, %r577}, {%r14843, %r14961}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15306, %r15309}, {%r568, %r574, %r571, %r577}, {%r14852, %r14968}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15312, %r15315}, {%r568, %r574, %r571, %r577}, {%r14861, %r14975}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15318, %r15321}, {%r568, %r574, %r571, %r577}, {%r14870, %r14982}, {%r15145, %r15145};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15274, %r15275, %r15276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15277, %r15278, %r15279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15280, %r15281, %r15282;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15283, %r15284, %r15285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15286, %r15287, %r15288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15289, %r15290, %r15291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15292, %r15293, %r15294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15295, %r15296, %r15297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15298, %r15299, %r15300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15301, %r15302, %r15303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15304, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15307, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15310, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15313, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15316, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15319, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15322, %r15275, %r15276;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15325, %r15278, %r15279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15328, %r15281, %r15282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15331, %r15284, %r15285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15334, %r15287, %r15288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15337, %r15290, %r15291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15340, %r15293, %r15294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15343, %r15296, %r15297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15346, %r15299, %r15300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15349, %r15302, %r15303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15352, %r15305, %r15306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15355, %r15308, %r15309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15358, %r15311, %r15312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15361, %r15314, %r15315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15364, %r15317, %r15318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15367, %r15320, %r15321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15370, %r13, %r15274;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15373, %r13, %r15277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15376, %r13, %r15280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15379, %r13, %r15283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15382, %r13, %r15286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15385, %r13, %r15289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15388, %r13, %r15292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15391, %r13, %r15295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15394, %r13, %r15298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15397, %r13, %r15301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15400, %r13, %r15304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15403, %r13, %r15307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15406, %r13, %r15310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15409, %r13, %r15313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15412, %r13, %r15316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15415, %r13, %r15319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15418, %r14, %r15322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15421, %r14, %r15325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15424, %r14, %r15328;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15427, %r14, %r15331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15430, %r14, %r15334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15433, %r14, %r15337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15436, %r14, %r15340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15439, %r14, %r15343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15442, %r14, %r15346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15445, %r14, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15448, %r14, %r15352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15451, %r14, %r15355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15454, %r14, %r15358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15457, %r14, %r15361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15460, %r14, %r15364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15463, %r14, %r15367;
	// end inline asm
	// begin inline asm
	mov.b32 %r15466, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15467, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15468, %r15370, %r15466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15471, %r15468, %r15467;
	// end inline asm
	// begin inline asm
	mov.b32 %r15474, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15475, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15476, %r15373, %r15474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15479, %r15476, %r15475;
	// end inline asm
	// begin inline asm
	mov.b32 %r15482, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15483, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15484, %r15376, %r15482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15487, %r15484, %r15483;
	// end inline asm
	// begin inline asm
	mov.b32 %r15490, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15491, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15492, %r15379, %r15490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15495, %r15492, %r15491;
	// end inline asm
	// begin inline asm
	mov.b32 %r15498, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15499, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15500, %r15382, %r15498;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15503, %r15500, %r15499;
	// end inline asm
	// begin inline asm
	mov.b32 %r15506, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15507, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15508, %r15385, %r15506;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15511, %r15508, %r15507;
	// end inline asm
	// begin inline asm
	mov.b32 %r15514, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15515, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15516, %r15388, %r15514;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15519, %r15516, %r15515;
	// end inline asm
	// begin inline asm
	mov.b32 %r15522, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15523, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15524, %r15391, %r15522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15527, %r15524, %r15523;
	// end inline asm
	// begin inline asm
	mov.b32 %r15530, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15531, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15532, %r15394, %r15530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15535, %r15532, %r15531;
	// end inline asm
	// begin inline asm
	mov.b32 %r15538, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15539, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15540, %r15397, %r15538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15543, %r15540, %r15539;
	// end inline asm
	// begin inline asm
	mov.b32 %r15546, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15547, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15548, %r15400, %r15546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15551, %r15548, %r15547;
	// end inline asm
	// begin inline asm
	mov.b32 %r15554, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15555, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15556, %r15403, %r15554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15559, %r15556, %r15555;
	// end inline asm
	// begin inline asm
	mov.b32 %r15562, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15563, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15564, %r15406, %r15562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15567, %r15564, %r15563;
	// end inline asm
	// begin inline asm
	mov.b32 %r15570, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15571, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15572, %r15409, %r15570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15575, %r15572, %r15571;
	// end inline asm
	// begin inline asm
	mov.b32 %r15578, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15579, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15580, %r15412, %r15578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15583, %r15580, %r15579;
	// end inline asm
	// begin inline asm
	mov.b32 %r15586, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15587, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15588, %r15415, %r15586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15591, %r15588, %r15587;
	// end inline asm
	// begin inline asm
	mov.b32 %r15594, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15595, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15596, %r15418, %r15594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15599, %r15596, %r15595;
	// end inline asm
	// begin inline asm
	mov.b32 %r15602, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15603, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15604, %r15421, %r15602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15607, %r15604, %r15603;
	// end inline asm
	// begin inline asm
	mov.b32 %r15610, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15611, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15612, %r15424, %r15610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15615, %r15612, %r15611;
	// end inline asm
	// begin inline asm
	mov.b32 %r15618, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15619, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15620, %r15427, %r15618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15623, %r15620, %r15619;
	// end inline asm
	// begin inline asm
	mov.b32 %r15626, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15627, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15628, %r15430, %r15626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15631, %r15628, %r15627;
	// end inline asm
	// begin inline asm
	mov.b32 %r15634, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15635, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15636, %r15433, %r15634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15639, %r15636, %r15635;
	// end inline asm
	// begin inline asm
	mov.b32 %r15642, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15643, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15644, %r15436, %r15642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15647, %r15644, %r15643;
	// end inline asm
	// begin inline asm
	mov.b32 %r15650, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15651, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15652, %r15439, %r15650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15655, %r15652, %r15651;
	// end inline asm
	// begin inline asm
	mov.b32 %r15658, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15659, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15660, %r15442, %r15658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15663, %r15660, %r15659;
	// end inline asm
	// begin inline asm
	mov.b32 %r15666, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15667, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15668, %r15445, %r15666;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15671, %r15668, %r15667;
	// end inline asm
	// begin inline asm
	mov.b32 %r15674, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15675, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15676, %r15448, %r15674;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15679, %r15676, %r15675;
	// end inline asm
	// begin inline asm
	mov.b32 %r15682, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15683, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15684, %r15451, %r15682;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15687, %r15684, %r15683;
	// end inline asm
	// begin inline asm
	mov.b32 %r15690, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15691, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15692, %r15454, %r15690;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15695, %r15692, %r15691;
	// end inline asm
	// begin inline asm
	mov.b32 %r15698, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15699, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15700, %r15457, %r15698;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15703, %r15700, %r15699;
	// end inline asm
	// begin inline asm
	mov.b32 %r15706, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15707, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15708, %r15460, %r15706;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15711, %r15708, %r15707;
	// end inline asm
	// begin inline asm
	mov.b32 %r15714, {%rs2306, %rs2306};
	// end inline asm
	// begin inline asm
	mov.b32 %r15715, {%rs407, %rs407};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15716, %r15463, %r15714;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15719, %r15716, %r15715;
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15723, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15724, %r15725, %r15723;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15727, %r15471, %r15724;
	// end inline asm
	// begin inline asm
	mov.b32 %r15730, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15731, %r15725, %r15730;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15734, %r15479, %r15731;
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15738, %r15725, %r15737;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15741, %r15487, %r15738;
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15745, %r15725, %r15744;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15748, %r15495, %r15745;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15751, %r15727, %r15741, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15755, %r15734, %r15748, %r4306;
	// end inline asm
	shl.b32 	%r15762, %r15755, 4;
	// begin inline asm
	lop3.b32 %r15759, %r4312, %r15751, %r15762, 202;
	// end inline asm
	xor.b32  	%r16082, %r15759, -2004318072;
	// begin inline asm
	mov.b32 %r15766, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15764, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15765, %r15766, %r15764;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15768, %r15503, %r15765;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15772, %r15766, %r15771;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15775, %r15511, %r15772;
	// end inline asm
	// begin inline asm
	mov.b32 %r15778, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15779, %r15766, %r15778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15782, %r15519, %r15779;
	// end inline asm
	// begin inline asm
	mov.b32 %r15785, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15786, %r15766, %r15785;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15789, %r15527, %r15786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15792, %r15768, %r15782, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15796, %r15775, %r15789, %r4306;
	// end inline asm
	shl.b32 	%r15803, %r15796, 4;
	// begin inline asm
	lop3.b32 %r15800, %r4312, %r15792, %r15803, 202;
	// end inline asm
	xor.b32  	%r16083, %r15800, -2004318072;
	// begin inline asm
	mov.b32 %r15807, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15805, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15806, %r15807, %r15805;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15809, %r15535, %r15806;
	// end inline asm
	// begin inline asm
	mov.b32 %r15812, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15813, %r15807, %r15812;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15543, %r15813;
	// end inline asm
	// begin inline asm
	mov.b32 %r15819, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15820, %r15807, %r15819;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15551, %r15820;
	// end inline asm
	// begin inline asm
	mov.b32 %r15826, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15827, %r15807, %r15826;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15830, %r15559, %r15827;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15833, %r15809, %r15823, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15837, %r15816, %r15830, %r4306;
	// end inline asm
	shl.b32 	%r15844, %r15837, 4;
	// begin inline asm
	lop3.b32 %r15841, %r4312, %r15833, %r15844, 202;
	// end inline asm
	xor.b32  	%r16084, %r15841, -2004318072;
	// begin inline asm
	mov.b32 %r15848, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15846, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15847, %r15848, %r15846;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15850, %r15567, %r15847;
	// end inline asm
	// begin inline asm
	mov.b32 %r15853, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15854, %r15848, %r15853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15575, %r15854;
	// end inline asm
	// begin inline asm
	mov.b32 %r15860, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15861, %r15848, %r15860;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15583, %r15861;
	// end inline asm
	// begin inline asm
	mov.b32 %r15867, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15868, %r15848, %r15867;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15871, %r15591, %r15868;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15874, %r15850, %r15864, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15878, %r15857, %r15871, %r4306;
	// end inline asm
	shl.b32 	%r15885, %r15878, 4;
	// begin inline asm
	lop3.b32 %r15882, %r4312, %r15874, %r15885, 202;
	// end inline asm
	xor.b32  	%r16085, %r15882, -2004318072;
	// begin inline asm
	mov.b32 %r15889, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15887, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15888, %r15889, %r15887;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15891, %r15599, %r15888;
	// end inline asm
	// begin inline asm
	mov.b32 %r15894, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15895, %r15889, %r15894;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15607, %r15895;
	// end inline asm
	// begin inline asm
	mov.b32 %r15901, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15902, %r15889, %r15901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15615, %r15902;
	// end inline asm
	// begin inline asm
	mov.b32 %r15908, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15909, %r15889, %r15908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15912, %r15623, %r15909;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15915, %r15891, %r15905, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15919, %r15898, %r15912, %r4306;
	// end inline asm
	shl.b32 	%r15926, %r15919, 4;
	// begin inline asm
	lop3.b32 %r15923, %r4312, %r15915, %r15926, 202;
	// end inline asm
	xor.b32  	%r16086, %r15923, -2004318072;
	// begin inline asm
	mov.b32 %r15930, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15928, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15929, %r15930, %r15928;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15932, %r15631, %r15929;
	// end inline asm
	// begin inline asm
	mov.b32 %r15935, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15936, %r15930, %r15935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15639, %r15936;
	// end inline asm
	// begin inline asm
	mov.b32 %r15942, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15943, %r15930, %r15942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15647, %r15943;
	// end inline asm
	// begin inline asm
	mov.b32 %r15949, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15950, %r15930, %r15949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15953, %r15655, %r15950;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15956, %r15932, %r15946, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15960, %r15939, %r15953, %r4306;
	// end inline asm
	shl.b32 	%r15967, %r15960, 4;
	// begin inline asm
	lop3.b32 %r15964, %r4312, %r15956, %r15967, 202;
	// end inline asm
	xor.b32  	%r16087, %r15964, -2004318072;
	// begin inline asm
	mov.b32 %r15971, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r15969, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15970, %r15971, %r15969;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15973, %r15663, %r15970;
	// end inline asm
	// begin inline asm
	mov.b32 %r15976, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15977, %r15971, %r15976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15671, %r15977;
	// end inline asm
	// begin inline asm
	mov.b32 %r15983, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15984, %r15971, %r15983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15679, %r15984;
	// end inline asm
	// begin inline asm
	mov.b32 %r15990, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15991, %r15971, %r15990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15994, %r15687, %r15991;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15997, %r15973, %r15987, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16001, %r15980, %r15994, %r4306;
	// end inline asm
	shl.b32 	%r16008, %r16001, 4;
	// begin inline asm
	lop3.b32 %r16005, %r4312, %r15997, %r16008, 202;
	// end inline asm
	xor.b32  	%r16088, %r16005, -2004318072;
	// begin inline asm
	mov.b32 %r16012, {%rs2380, %rs2380};
	// end inline asm
	// begin inline asm
	mov.b32 %r16010, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16011, %r16012, %r16010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16014, %r15695, %r16011;
	// end inline asm
	// begin inline asm
	mov.b32 %r16017, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16018, %r16012, %r16017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r15703, %r16018;
	// end inline asm
	// begin inline asm
	mov.b32 %r16024, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16025, %r16012, %r16024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r15711, %r16025;
	// end inline asm
	// begin inline asm
	mov.b32 %r16031, {%rs2388, %rs2388};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16032, %r16012, %r16031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16035, %r15719, %r16032;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16038, %r16014, %r16028, %r4306;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16042, %r16021, %r16035, %r4306;
	// end inline asm
	shl.b32 	%r16049, %r16042, 4;
	// begin inline asm
	lop3.b32 %r16046, %r4312, %r16038, %r16049, 202;
	// end inline asm
	xor.b32  	%r16089, %r16046, -2004318072;
	st.shared.u32 	[%rd79], %r16082;
	st.shared.u32 	[%rd80], %r16083;
	st.shared.u32 	[%rd81], %r16084;
	st.shared.u32 	[%rd82], %r16085;
	st.shared.u32 	[%rd83], %r16086;
	st.shared.u32 	[%rd84], %r16087;
	st.shared.u32 	[%rd85], %r16088;
	st.shared.u32 	[%rd86], %r16089;
	add.s32 	%r16189, %r16189, -128;
	add.s64 	%rd91, %rd91, 16644;
	setp.eq.s32 	%p302, %r16189, 0;
	@%p302 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22980
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16095, [%rd7];
	ld.shared.u32 	%r16096, [%rd8+128];
	ld.shared.u32 	%r16103, [%rd8+4];
	ld.shared.u32 	%r16104, [%rd8+132];
	ld.shared.u32 	%r16111, [%rd9];
	ld.shared.u32 	%r16112, [%rd10+128];
	ld.shared.u32 	%r16119, [%rd10+4];
	ld.shared.u32 	%r16120, [%rd10+132];
	// begin inline asm
	prmt.b32 %r16090, %r16095, %r16096, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16094, %r16095, %r16096, %r759;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16098, %r16103, %r16104, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16102, %r16103, %r16104, %r759;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16106, %r16111, %r16112, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16110, %r16111, %r16112, %r759;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16114, %r16119, %r16120, %r755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16118, %r16119, %r16120, %r759;
	// end inline asm
	selp.b32 	%r16122, %r16094, %r16090, %p301;
	shfl.sync.bfly.b32	%r237, %r16122, 8, 31, -1;
	selp.b32 	%r16123, %r16102, %r16098, %p301;
	shfl.sync.bfly.b32	%r238, %r16123, 8, 31, -1;
	selp.b32 	%r16124, %r16110, %r16106, %p301;
	shfl.sync.bfly.b32	%r239, %r16124, 8, 31, -1;
	selp.b32 	%r16125, %r16118, %r16114, %p301;
	shfl.sync.bfly.b32	%r240, %r16125, 8, 31, -1;
	setp.lt.u32 	%p304, %r177, 384;
	@%p304 bra 	LBB0_181;
// %bb.180:                             // %L73303
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16126, %r240, %r16118, %p301;
	selp.b32 	%r16127, %r16114, %r240, %p301;
	selp.b32 	%r16128, %r239, %r16110, %p301;
	selp.b32 	%r16129, %r16106, %r239, %p301;
	selp.b32 	%r16130, %r238, %r16102, %p301;
	selp.b32 	%r16131, %r16098, %r238, %p301;
	selp.b32 	%r16132, %r237, %r16094, %p301;
	selp.b32 	%r16133, %r16090, %r237, %p301;
	shl.b32 	%r16134, %r177, 12;
	or.b32  	%r16135, %r16134, %r144;
	add.s32 	%r16136, %r16135, -1572864;
	or.b32  	%r16137, %r16136, %r151;
	or.b32  	%r16138, %r16137, %r149;
	mul.wide.s32 	%rd87, %r16138, 4;
	add.s64 	%rd88, %rd3, %rd87;
	st.global.v4.u32 	[%rd88], {%r16133, %r16131, %r16132, %r16130};
	add.s32 	%r16139, %r16134, -1572863;
	or.b32  	%r16140, %r16139, %r144;
	or.b32  	%r16141, %r16140, %r152;
	or.b32  	%r16142, %r16141, %r149;
	mul.wide.s32 	%rd89, %r16142, 4;
	add.s64 	%rd90, %rd3, %rd89;
	st.global.v4.u32 	[%rd90+-4], {%r16129, %r16127, %r16128, %r16126};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L73773
	st.global.u32 	[%rd4], %r15145;
	ret;
LBB0_1:                                 // %L9
	mov.u64 	%rd38, exception1;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd29;
	st.param.b32 	[param0+8], %r241;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L166
	mov.u32 	%r248, 2;
	st.global.u32 	[%rd4], %r248;
	mov.u64 	%rd41, exception5093;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd29;
	st.param.b32 	[param0+8], %r241;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
