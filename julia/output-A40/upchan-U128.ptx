// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5093[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<309>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16221>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r237, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r238, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r238, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r239, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r240, %r239, %r2;
	or.b32  	%r241, %r240, %r4;
	mul.wide.u32 	%rd46, %r241, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r242, 1;
	st.global.u32 	[%rd4], %r242;
	ld.global.u32 	%r5, [%rd36];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r243, %r5, 255;
	setp.eq.s32 	%p3, %r243, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r15, %r2, 1, 1;
	and.b32  	%r16, %r2, 1;
	bfe.u32 	%r18, %r2, 2, 1;
	shr.u32 	%r19, %r2, 4;
	shl.b32 	%r250, %r19, 2;
	shl.b32 	%r251, %r18, 3;
	shl.b32 	%r252, %r16, 4;
	shl.b32 	%r253, %r15, 5;
	or.b32  	%r254, %r252, %r253;
	or.b32  	%r255, %r251, %r254;
	or.b32  	%r256, %r250, %r255;
	bfe.u32 	%r21, %r2, 3, 1;
	shl.b32 	%r257, %r21, 1;
	or.b32  	%r22, %r257, %r256;
	or.b32  	%r23, %r22, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r22;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L592
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L595
	cvt.rn.f32.s32 	%f291, %r23;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L612
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L615
	or.b32  	%r275, %r22, 1;
	or.b32  	%r25, %r22, 65;
	cvt.rn.f32.s32 	%f326, %r275;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L694
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L697
	cvt.rn.f32.s32 	%f360, %r25;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L714
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L717
	or.b32  	%r293, %r22, 128;
	or.b32  	%r27, %r22, 192;
	cvt.rn.f32.s32 	%f395, %r293;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L796
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L799
	cvt.rn.f32.s32 	%f429, %r27;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L816
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L819
	or.b32  	%r311, %r22, 129;
	or.b32  	%r29, %r22, 193;
	cvt.rn.f32.s32 	%f464, %r311;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L898
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L901
	cvt.rn.f32.s32 	%f498, %r29;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L918
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L921
	or.b32  	%r329, %r22, 256;
	or.b32  	%r31, %r22, 320;
	cvt.rn.f32.s32 	%f533, %r329;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p58, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L1000
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1003
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r31;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p64, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1020
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1023
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r347, %r22, 257;
	or.b32  	%r33, %r22, 321;
	cvt.rn.f32.s32 	%f602, %r347;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p70, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1102
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1105
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r33;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p76, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1122
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1125
	setp.gt.f32 	%p5, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p11, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p17, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p23, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p29, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p35, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p41, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p47, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p53, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p59, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p65, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p71, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r365, %r22, 384;
	or.b32  	%r35, %r22, 448;
	cvt.rn.f32.s32 	%f671, %r365;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p77, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p82, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1204
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1207
	selp.f32 	%f263, %f262, %f260, %p5;
	selp.f32 	%f297, %f296, %f294, %p11;
	selp.f32 	%f332, %f331, %f329, %p17;
	selp.f32 	%f366, %f365, %f363, %p23;
	selp.f32 	%f401, %f400, %f398, %p29;
	selp.f32 	%f435, %f434, %f432, %p35;
	selp.f32 	%f470, %f469, %f467, %p41;
	selp.f32 	%f504, %f503, %f501, %p47;
	selp.f32 	%f539, %f538, %f536, %p53;
	selp.f32 	%f573, %f572, %f570, %p59;
	selp.f32 	%f608, %f607, %f605, %p65;
	selp.f32 	%f642, %f641, %f639, %p71;
	selp.f32 	%f677, %f676, %f674, %p77;
	cvt.rn.f32.s32 	%f705, %r35;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p83, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p83;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p88, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1224
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1227
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r383, %r22, 385;
	or.b32  	%r37, %r22, 449;
	cvt.rn.f32.s32 	%f740, %r383;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p89, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p89;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p94, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1306
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1309
	mov.b32 	%r258, %f264;
	mov.b32 	%r265, %f298;
	mov.b32 	%r276, %f333;
	mov.b32 	%r283, %f367;
	mov.b32 	%r294, %f402;
	mov.b32 	%r301, %f436;
	mov.b32 	%r312, %f471;
	mov.b32 	%r319, %f505;
	mov.b32 	%r330, %f540;
	mov.b32 	%r337, %f574;
	mov.b32 	%r348, %f609;
	mov.b32 	%r355, %f643;
	mov.b32 	%r366, %f678;
	mov.b32 	%r373, %f712;
	mov.b32 	%r384, %f747;
	cvt.rn.f32.s32 	%f774, %r37;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p95, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p95;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r391, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p100, %f71, 0f00000000;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1326
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1329
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r367, %r366, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r385, %r384, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	mul.lo.s32 	%r39, %r22, 127;
	cvt.rn.f32.s32 	%f808, %r39;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p101, %f1366, 0f40000000;
	@%p101 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p102, %f1366, 0f4B800000;
	@%p102 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r41, %f1366;
	and.b32  	%r401, %r41, 8388607;
	or.b32  	%r16151, %r401, 1065353216;
	mov.b32 	%f1365, %r16151;
	add.s32 	%r402, %r41, -1073741824;
	and.b32  	%r16152, %r402, -8388608;
	setp.eq.s32 	%p108, %r16152, 0;
	@%p108 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r403, %r16152, 192937984;
	add.s32 	%r404, %r403, %r16151;
	mov.b32 	%f820, %r404;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16152, %r16152, %r403;
	mov.b32 	%r16151, %f1365;
	setp.ne.s32 	%p109, %r16152, 0;
	setp.ne.s32 	%p110, %r16151, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p112, %r41, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r40, %f77;
	setp.lt.u32 	%p103, %r40, 1073741824;
	@%p103 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p104, %r40, -2147483647;
	@%p104 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p107;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p106;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r368, %r367, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r386, %r385, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p113, %f829, 0f7F800000;
	@%p113 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r405, %f74;
	and.b32  	%r406, %r405, -2147483648;
	mov.b32 	%r407, %f1366;
	or.b32  	%r408, %r406, %r407;
	mov.b32 	%f1366, %r408;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r260;
	mov.b32 	%f299, %r267;
	mov.b32 	%f334, %r278;
	mov.b32 	%f368, %r285;
	mov.b32 	%f403, %r296;
	mov.b32 	%f437, %r303;
	mov.b32 	%f472, %r314;
	mov.b32 	%f506, %r321;
	mov.b32 	%f541, %r332;
	mov.b32 	%f575, %r339;
	mov.b32 	%f610, %r350;
	mov.b32 	%f644, %r357;
	mov.b32 	%f679, %r368;
	mov.b32 	%f713, %r375;
	mov.b32 	%f748, %r386;
	mov.b32 	%f782, %r393;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r409, %f830;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f831, %r411;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p114, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p114;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p115, %f834, 0f3F000000;
	add.s32 	%r417, %r39, 8128;
	cvt.rn.f32.s32 	%f861, %r417;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p121, %f1370, 0f40000000;
	@%p121 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p122, %f1370, 0f4B800000;
	@%p122 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r49, %f1370;
	and.b32  	%r418, %r49, 8388607;
	or.b32  	%r16153, %r418, 1065353216;
	mov.b32 	%f1369, %r16153;
	add.s32 	%r419, %r49, -1073741824;
	and.b32  	%r16154, %r419, -8388608;
	setp.eq.s32 	%p128, %r16154, 0;
	@%p128 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r420, %r16154, 192937984;
	add.s32 	%r421, %r420, %r16153;
	mov.b32 	%f873, %r421;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16154, %r16154, %r420;
	mov.b32 	%r16153, %f1369;
	setp.ne.s32 	%p129, %r16154, 0;
	setp.ne.s32 	%p130, %r16153, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p132, %r49, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r48, %f96;
	setp.lt.u32 	%p123, %r48, 1073741824;
	@%p123 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p124, %r48, -2147483647;
	@%p124 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p127;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p126;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p115;
	shr.u32 	%r17, %r2, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p133, %f882, 0f7F800000;
	@%p133 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r422, %f93;
	and.b32  	%r423, %r422, -2147483648;
	mov.b32 	%r424, %f1370;
	or.b32  	%r425, %r423, %r424;
	mov.b32 	%f1370, %r425;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p6, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p12, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p18, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p24, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p30, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p36, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p42, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p48, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p54, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p60, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p66, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p72, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p78, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p84, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p90, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p96, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r438, %f883;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f884, %r440;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p134, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p134;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p135, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p135;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r446, %r2, 3;
	mul.lo.s32 	%r447, %r446, %r17;
	shl.b32 	%r448, %r447, 1;
	neg.s32 	%r60, %r448;
	cvt.rn.f32.s32 	%f916, %r60;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p141, %f1374, 0f40000000;
	@%p141 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p142, %f1374, 0f4B800000;
	@%p142 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r62, %f1374;
	and.b32  	%r449, %r62, 8388607;
	or.b32  	%r16155, %r449, 1065353216;
	mov.b32 	%f1373, %r16155;
	add.s32 	%r450, %r62, -1073741824;
	and.b32  	%r16156, %r450, -8388608;
	setp.eq.s32 	%p148, %r16156, 0;
	@%p148 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r451, %r16156, 192937984;
	add.s32 	%r452, %r451, %r16155;
	mov.b32 	%f928, %r452;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16156, %r16156, %r451;
	mov.b32 	%r16155, %f1373;
	setp.ne.s32 	%p149, %r16156, 0;
	setp.ne.s32 	%p150, %r16155, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p152, %r62, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r61, %f113;
	setp.lt.u32 	%p143, %r61, 1073741824;
	@%p143 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p144, %r61, -2147483647;
	@%p144 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p147;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p146;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p6;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p7, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p12;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p13, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p18;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p19, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p24;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p25, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p30;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p31, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p36;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p37, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p42;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p43, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p48;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p49, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p54;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p55, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p60;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p61, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p66;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p67, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p72;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p73, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p78;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p79, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p84;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p85, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p90;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p91, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p96;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p97, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p153, %f937, 0f7F800000;
	@%p153 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r453, %f110;
	and.b32  	%r454, %r453, -2147483648;
	mov.b32 	%r455, %f1374;
	or.b32  	%r456, %r454, %r455;
	mov.b32 	%f1374, %r456;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p7;
	selp.f32 	%f305, %f304, %f303, %p13;
	selp.f32 	%f340, %f339, %f338, %p19;
	selp.f32 	%f374, %f373, %f372, %p25;
	selp.f32 	%f409, %f408, %f407, %p31;
	selp.f32 	%f443, %f442, %f441, %p37;
	selp.f32 	%f478, %f477, %f476, %p43;
	selp.f32 	%f512, %f511, %f510, %p49;
	selp.f32 	%f547, %f546, %f545, %p55;
	selp.f32 	%f581, %f580, %f579, %p61;
	selp.f32 	%f616, %f615, %f614, %p67;
	selp.f32 	%f650, %f649, %f648, %p73;
	selp.f32 	%f685, %f684, %f683, %p79;
	selp.f32 	%f719, %f718, %f717, %p85;
	selp.f32 	%f754, %f753, %f752, %p91;
	selp.f32 	%f788, %f787, %f786, %p97;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r457, %f938;
	and.b32  	%r458, %r457, -2147483648;
	or.b32  	%r459, %r458, 1056964608;
	mov.b32 	%f939, %r459;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p154, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p154;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p155, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p155;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r69, %r17, 3;
	sub.s32 	%r465, %r60, %r69;
	cvt.rn.f32.s32 	%f969, %r465;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p161, %f1378, 0f40000000;
	@%p161 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p162, %f1378, 0f4B800000;
	@%p162 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r71, %f1378;
	and.b32  	%r466, %r71, 8388607;
	or.b32  	%r16157, %r466, 1065353216;
	mov.b32 	%f1377, %r16157;
	add.s32 	%r467, %r71, -1073741824;
	and.b32  	%r16158, %r467, -8388608;
	setp.eq.s32 	%p168, %r16158, 0;
	@%p168 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r468, %r16158, 192937984;
	add.s32 	%r469, %r468, %r16157;
	mov.b32 	%f981, %r469;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16158, %r16158, %r468;
	mov.b32 	%r16157, %f1377;
	setp.ne.s32 	%p169, %r16158, 0;
	setp.ne.s32 	%p170, %r16157, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p172, %r71, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r70, %f132;
	setp.lt.u32 	%p163, %r70, 1073741824;
	@%p163 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p164, %r70, -2147483647;
	@%p164 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p167, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p167;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p165, %f132, 0f40800000;
	@%p165 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p166, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p166;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r8, %r2, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p173, %f990, 0f7F800000;
	@%p173 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r470, %f129;
	and.b32  	%r471, %r470, -2147483648;
	mov.b32 	%r472, %f1378;
	or.b32  	%r473, %r471, %r472;
	mov.b32 	%f1378, %r473;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r486, %f991;
	and.b32  	%r487, %r486, -2147483648;
	or.b32  	%r488, %r487, 1056964608;
	mov.b32 	%f992, %r488;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p174, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p174;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p175, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p175;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r494, %r8, 6;
	shl.b32 	%r495, %r494, 1;
	neg.s32 	%r82, %r495;
	mul.lo.s32 	%r83, %r82, %r17;
	cvt.rn.f32.s32 	%f1024, %r83;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p181, %f1382, 0f40000000;
	@%p181 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p182, %f1382, 0f4B800000;
	@%p182 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r85, %f1382;
	and.b32  	%r496, %r85, 8388607;
	or.b32  	%r16159, %r496, 1065353216;
	mov.b32 	%f1381, %r16159;
	add.s32 	%r497, %r85, -1073741824;
	and.b32  	%r16160, %r497, -8388608;
	setp.eq.s32 	%p188, %r16160, 0;
	@%p188 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r498, %r16160, 192937984;
	add.s32 	%r499, %r498, %r16159;
	mov.b32 	%f1036, %r499;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16160, %r16160, %r498;
	mov.b32 	%r16159, %f1381;
	setp.ne.s32 	%p189, %r16160, 0;
	setp.ne.s32 	%p190, %r16159, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p192, %r85, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r84, %f149;
	setp.lt.u32 	%p183, %r84, 1073741824;
	@%p183 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p184, %r84, -2147483647;
	@%p184 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p187, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p187;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p185, %f149, 0f40800000;
	@%p185 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p186, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p186;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r268, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r286, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r441, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r460, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r489, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p193, %f1045, 0f7F800000;
	@%p193 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r500, %f146;
	and.b32  	%r501, %r500, -2147483648;
	mov.b32 	%r502, %f1382;
	or.b32  	%r503, %r501, %r502;
	mov.b32 	%f1382, %r503;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r442, %r441, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r461, %r460, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r490, %r489, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r504, %f1046;
	and.b32  	%r505, %r504, -2147483648;
	or.b32  	%r506, %r505, 1056964608;
	mov.b32 	%f1047, %r506;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p194, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p194;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p195, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p195;
	cvt.rzi.s32.f32 	%r507, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r512, %r83, %r69;
	cvt.rn.f32.s32 	%f1077, %r512;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p201, %f1386, 0f40000000;
	@%p201 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p202, %f1386, 0f4B800000;
	@%p202 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r93, %f1386;
	and.b32  	%r513, %r93, 8388607;
	or.b32  	%r16161, %r513, 1065353216;
	mov.b32 	%f1385, %r16161;
	add.s32 	%r514, %r93, -1073741824;
	and.b32  	%r16162, %r514, -8388608;
	setp.eq.s32 	%p208, %r16162, 0;
	@%p208 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r515, %r16162, 192937984;
	add.s32 	%r516, %r515, %r16161;
	mov.b32 	%f1089, %r516;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16162, %r16162, %r515;
	mov.b32 	%r16161, %f1385;
	setp.ne.s32 	%p209, %r16162, 0;
	setp.ne.s32 	%p210, %r16161, 0;
	and.pred  	%p211, %p209, %p210;
	@%p211 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p212, %r93, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p212;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r92, %f168;
	setp.lt.u32 	%p203, %r92, 1073741824;
	@%p203 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p204, %r92, -2147483647;
	@%p204 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p207, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p207;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p205, %f168, 0f40800000;
	@%p205 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p206, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p206;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p116, %r413, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p136, %r442, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p156, %r461, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p176, %r490, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r508, %r507, 1;
	shr.u32 	%r14, %r2, 1;
	shr.u32 	%r20, %r2, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p213, %f1098, 0f7F800000;
	@%p213 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r517, %f165;
	and.b32  	%r518, %r517, -2147483648;
	mov.b32 	%r519, %f1386;
	or.b32  	%r520, %r518, %r519;
	mov.b32 	%f1386, %r520;
LBB0_120:                               // %__nv_fmodf.exit2420
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p8, %r263, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p14, %r270, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p20, %r281, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p26, %r288, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p32, %r299, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p38, %r306, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p44, %r317, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p50, %r324, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p56, %r335, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p62, %r342, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p68, %r353, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p74, %r360, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p80, %r371, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p86, %r378, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p92, %r389, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p98, %r396, 1;
	selp.f32 	%f850, %f845, %f849, %p116;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f903, %f898, %f902, %p136;
	and.b32  	%r443, %r441, 2;
	selp.f32 	%f958, %f953, %f957, %p156;
	and.b32  	%r462, %r460, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p176;
	and.b32  	%r491, %r489, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p196, %r508, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r527, %f1099;
	and.b32  	%r528, %r527, -2147483648;
	or.b32  	%r529, %r528, 1056964608;
	mov.b32 	%f1100, %r529;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p214, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p214;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p215, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p215;
	cvt.rzi.s32.f32 	%r530, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r531, %r530, 1;
	setp.eq.b32 	%p216, %r531, 1;
	and.b32  	%r535, %r20, 2;
	and.b32  	%r536, %r14, 4;
	or.b32  	%r537, %r18, %r535;
	or.b32  	%r102, %r537, %r536;
	mul.lo.s32 	%r103, %r82, %r102;
	cvt.rn.f32.s32 	%f1132, %r103;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p221, %f1390, 0f40000000;
	@%p221 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p222, %f1390, 0f4B800000;
	@%p222 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r105, %f1390;
	and.b32  	%r538, %r105, 8388607;
	or.b32  	%r16163, %r538, 1065353216;
	mov.b32 	%f1389, %r16163;
	add.s32 	%r539, %r105, -1073741824;
	and.b32  	%r16164, %r539, -8388608;
	setp.eq.s32 	%p228, %r16164, 0;
	@%p228 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16164, 192937984;
	add.s32 	%r541, %r540, %r16163;
	mov.b32 	%f1144, %r541;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16164, %r16164, %r540;
	mov.b32 	%r16163, %f1389;
	setp.ne.s32 	%p229, %r16164, 0;
	setp.ne.s32 	%p230, %r16163, 0;
	and.pred  	%p231, %p229, %p230;
	@%p231 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p232, %r105, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p232;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r104, %f185;
	setp.lt.u32 	%p223, %r104, 1073741824;
	@%p223 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p224, %r104, -2147483647;
	@%p224 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p227, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p227;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p225, %f185, 0f40800000;
	@%p225 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p226, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p226;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	shl.b32 	%r6, %r2, 2;
	and.b32  	%r245, %r8, 8;
	and.b32  	%r246, %r2, 18;
	selp.f32 	%f283, %f281, %f282, %p8;
	and.b32  	%r264, %r262, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p14;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f352, %f350, %f351, %p20;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f386, %f384, %f385, %p26;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f421, %f419, %f420, %p32;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f455, %f453, %f454, %p38;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f490, %f488, %f489, %p44;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f524, %f522, %f523, %p50;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f559, %f557, %f558, %p56;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f593, %f591, %f592, %p62;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f628, %f626, %f627, %p68;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f662, %f660, %f661, %p74;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f697, %f695, %f696, %p80;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f731, %f729, %f730, %p86;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f766, %f764, %f765, %p92;
	and.b32  	%r390, %r388, 2;
	selp.f32 	%f800, %f798, %f799, %p98;
	and.b32  	%r397, %r395, 2;
	setp.eq.s32 	%p117, %r414, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r415, %r412, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p137, %r443, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r444, %r441, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p157, %r462, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r463, %r460, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p177, %r491, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r492, %r489, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p196;
	and.b32  	%r509, %r507, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p216;
	and.b32  	%r532, %r530, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p233, %f1153, 0f7F800000;
	@%p233 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r542, %f182;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1390;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1390, %r545;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r7, %r6, 4;
	or.b32  	%r11, %r246, %r245;
	setp.eq.s32 	%p9, %r264, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p15, %r271, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p21, %r282, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p27, %r289, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p33, %r300, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p39, %r307, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p45, %r318, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p51, %r325, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p57, %r336, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p63, %r343, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p69, %r354, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p75, %r361, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p81, %r372, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p87, %r379, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p93, %r390, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p99, %r397, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p116;
	selp.f32 	%f853, %f850, %f852, %p117;
	and.b32  	%r416, %r415, 2;
	setp.eq.f32 	%p119, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p136;
	selp.f32 	%f906, %f903, %f905, %p137;
	and.b32  	%r445, %r444, 2;
	setp.eq.f32 	%p139, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p156;
	selp.f32 	%f961, %f958, %f960, %p157;
	and.b32  	%r464, %r463, 2;
	setp.eq.f32 	%p159, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p176;
	selp.f32 	%f1014, %f1011, %f1013, %p177;
	and.b32  	%r493, %r492, 2;
	setp.eq.f32 	%p179, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p197, %r509, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r510, %r507, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p217, %r532, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r533, %r530, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r546, %f1154;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1155, %r548;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p234, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p234;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p235, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p235;
	cvt.rzi.s32.f32 	%r549, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r550, %r549, 1;
	setp.eq.b32 	%p236, %r550, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p236;
	selp.f32 	%f1175, %f1173, %f1169, %p236;
	and.b32  	%r551, %r549, 2;
	setp.eq.s32 	%p237, %r551, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p237;
	add.s32 	%r552, %r549, 1;
	and.b32  	%r553, %r552, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p239, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r554, %r102, 3;
	sub.s32 	%r555, %r103, %r554;
	cvt.rn.f32.s32 	%f1185, %r555;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p241, %f1394, 0f40000000;
	@%p241 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p242, %f1394, 0f4B800000;
	@%p242 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r113, %f1394;
	and.b32  	%r556, %r113, 8388607;
	or.b32  	%r16165, %r556, 1065353216;
	mov.b32 	%f1393, %r16165;
	add.s32 	%r557, %r113, -1073741824;
	and.b32  	%r16166, %r557, -8388608;
	setp.eq.s32 	%p248, %r16166, 0;
	@%p248 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16166, 192937984;
	add.s32 	%r559, %r558, %r16165;
	mov.b32 	%f1197, %r559;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16166, %r16166, %r558;
	mov.b32 	%r16165, %f1393;
	setp.ne.s32 	%p249, %r16166, 0;
	setp.ne.s32 	%p250, %r16165, 0;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p252, %r113, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p252;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r112, %f204;
	setp.lt.u32 	%p243, %r112, 1073741824;
	@%p243 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p244, %r112, -2147483647;
	@%p244 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p247, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p247;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p245, %f204, 0f40800000;
	@%p245 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p246, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p246;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r10, %r6, 32;
	or.b32  	%r247, %r11, %r7;
	selp.f32 	%f286, %f283, %f285, %p9;
	selp.f32 	%f320, %f317, %f319, %p15;
	selp.f32 	%f355, %f352, %f354, %p21;
	selp.f32 	%f389, %f386, %f388, %p27;
	selp.f32 	%f424, %f421, %f423, %p33;
	selp.f32 	%f458, %f455, %f457, %p39;
	selp.f32 	%f493, %f490, %f492, %p45;
	selp.f32 	%f527, %f524, %f526, %p51;
	selp.f32 	%f562, %f559, %f561, %p57;
	selp.f32 	%f596, %f593, %f595, %p63;
	selp.f32 	%f631, %f628, %f630, %p69;
	selp.f32 	%f665, %f662, %f664, %p75;
	selp.f32 	%f700, %f697, %f699, %p81;
	selp.f32 	%f734, %f731, %f733, %p87;
	selp.f32 	%f769, %f766, %f768, %p93;
	selp.f32 	%f803, %f800, %f802, %p99;
	setp.eq.s32 	%p118, %r416, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p119;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p138, %r445, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p139;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p158, %r464, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p159;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p178, %r493, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p179;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p196;
	selp.f32 	%f1069, %f1066, %f1068, %p197;
	and.b32  	%r511, %r510, 2;
	setp.eq.f32 	%p199, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p216;
	selp.f32 	%f1122, %f1119, %f1121, %p217;
	and.b32  	%r534, %r533, 2;
	setp.eq.f32 	%p219, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p238, %r553, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p239;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r9, %r2, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p253, %f1206, 0f7F800000;
	@%p253 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r560, %f201;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1394;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1394, %r563;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r248, %r247, %r10;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p118;
	setp.gt.f32 	%p120, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p138;
	setp.gt.f32 	%p140, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p158;
	setp.gt.f32 	%p160, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p178;
	setp.gt.f32 	%p180, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p198, %r511, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p199;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p218, %r534, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p219;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p238;
	setp.gt.f32 	%p240, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r576, %f1207;
	and.b32  	%r577, %r576, -2147483648;
	or.b32  	%r578, %r577, 1056964608;
	mov.b32 	%f1208, %r578;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p254, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p254;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p255, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p255;
	cvt.rzi.s32.f32 	%r579, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r580, %r579, 1;
	setp.eq.b32 	%p256, %r580, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p256;
	selp.f32 	%f1228, %f1226, %f1222, %p256;
	and.b32  	%r581, %r579, 2;
	setp.eq.s32 	%p257, %r581, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p257;
	add.s32 	%r582, %r579, 1;
	and.b32  	%r583, %r582, 2;
	setp.eq.s32 	%p258, %r583, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p258;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p259, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p259;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p260, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r585, %r251, %r9;
	neg.s32 	%r586, %r585;
	mad.lo.s32 	%r587, %r21, -32, %r586;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r588, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r589, %rs21;
	sub.s32 	%r590, %r587, %r589;
	shl.b32 	%r591, %r590, 1;
	cvt.rn.f32.s32 	%f1240, %r591;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p261, %f1398, 0f40000000;
	@%p261 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p262, %f1398, 0f4B800000;
	@%p262 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r126, %f1398;
	and.b32  	%r592, %r126, 8388607;
	or.b32  	%r16167, %r592, 1065353216;
	mov.b32 	%f1397, %r16167;
	add.s32 	%r593, %r126, -1073741824;
	and.b32  	%r16168, %r593, -8388608;
	setp.eq.s32 	%p268, %r16168, 0;
	@%p268 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16168, 192937984;
	add.s32 	%r595, %r594, %r16167;
	mov.b32 	%f1252, %r595;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16168, %r16168, %r594;
	mov.b32 	%r16167, %f1397;
	setp.ne.s32 	%p269, %r16168, 0;
	setp.ne.s32 	%p270, %r16167, 0;
	and.pred  	%p271, %p269, %p270;
	@%p271 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p272, %r126, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p272;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r125, %f221;
	setp.lt.u32 	%p263, %r125, 1073741824;
	@%p263 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p264, %r125, -2147483647;
	@%p264 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p267, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p267;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p265, %f221, 0f40800000;
	@%p265 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p266, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p266;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r249, %r248, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p120;
	selp.f32 	%f915, %f914, %f909, %p140;
	selp.f32 	%f128, %f968, %f964, %p160;
	selp.f32 	%f1023, %f1022, %f1017, %p180;
	selp.f32 	%f1072, %f1067, %f1071, %p198;
	setp.gt.f32 	%p200, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p218;
	setp.gt.f32 	%p220, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p240;
	selp.f32 	%f1239, %f1238, %f1233, %p260;
	sub.s32 	%r124, %r587, %r588;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p273, %f1261, 0f7F800000;
	@%p273 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r596, %f218;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1398;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1398, %r599;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r249, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r428, %f915;
	mov.b32 	%r427, %f92;
	mov.b32 	%r434, %f912;
	mov.b32 	%r433, %f91;
	mov.b32 	%r476, %f1023;
	mov.b32 	%r475, %f128;
	mov.b32 	%r482, %f1020;
	mov.b32 	%r481, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p200;
	selp.f32 	%f1131, %f1130, %f1125, %p220;
	mov.b32 	%r566, %f1239;
	mov.b32 	%r565, %f200;
	mov.b32 	%r572, %f1236;
	mov.b32 	%r571, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r600, %f1262;
	and.b32  	%r601, %r600, -2147483648;
	or.b32  	%r602, %r601, 1056964608;
	mov.b32 	%f1263, %r602;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p274, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p274;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p275, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p275;
	cvt.rzi.s32.f32 	%r603, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r604, %r603, 1;
	setp.eq.b32 	%p276, %r604, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p276;
	selp.f32 	%f1283, %f1281, %f1277, %p276;
	and.b32  	%r605, %r603, 2;
	setp.eq.s32 	%p277, %r605, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p277;
	add.s32 	%r606, %r603, 1;
	and.b32  	%r607, %r606, 2;
	setp.eq.s32 	%p278, %r607, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p278;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p279, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p279;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p280, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r608, %r124, 1;
	cvt.rn.f32.s32 	%f1293, %r608;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p281, %f1402, 0f40000000;
	@%p281 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p282, %f1402, 0f4B800000;
	@%p282 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r134, %f1402;
	and.b32  	%r609, %r134, 8388607;
	or.b32  	%r16169, %r609, 1065353216;
	mov.b32 	%f1401, %r16169;
	add.s32 	%r610, %r134, -1073741824;
	and.b32  	%r16170, %r610, -8388608;
	setp.eq.s32 	%p288, %r16170, 0;
	@%p288 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r611, %r16170, 192937984;
	add.s32 	%r612, %r611, %r16169;
	mov.b32 	%f1305, %r612;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16170, %r16170, %r611;
	mov.b32 	%r16169, %f1401;
	setp.ne.s32 	%p289, %r16170, 0;
	setp.ne.s32 	%p290, %r16169, 0;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p292, %r134, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p292;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r133, %f240;
	setp.lt.u32 	%p283, %r133, 1073741824;
	@%p283 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p284, %r133, -2147483647;
	@%p284 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p287, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p287;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p285, %f240, 0f40800000;
	@%p285 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p286, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p286;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r274, %f325;
	mov.b32 	%r273, %f6;
	mov.b32 	%r292, %f394;
	mov.b32 	%r291, %f15;
	mov.b32 	%r310, %f463;
	mov.b32 	%r309, %f24;
	mov.b32 	%r328, %f532;
	mov.b32 	%r327, %f33;
	mov.b32 	%r346, %f601;
	mov.b32 	%r345, %f42;
	mov.b32 	%r364, %f670;
	mov.b32 	%r363, %f51;
	mov.b32 	%r382, %f739;
	mov.b32 	%r381, %f60;
	mov.b32 	%r400, %f807;
	mov.b32 	%r399, %f69;
	xor.b32  	%r479, %r482, -2147483648;
	xor.b32  	%r478, %r481, -2147483648;
	mov.b32 	%r523, %f1131;
	mov.b32 	%r522, %f164;
	mov.b32 	%r526, %f1128;
	mov.b32 	%r525, %f163;
	xor.b32  	%r569, %r572, -2147483648;
	xor.b32  	%r568, %r571, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p280;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p293, %f1314, 0f7F800000;
	@%p293 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r613, %f237;
	and.b32  	%r614, %r613, -2147483648;
	mov.b32 	%r615, %f1402;
	or.b32  	%r616, %r614, %r615;
	mov.b32 	%f1402, %r616;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r12, [%rd50];
	ld.global.u32 	%r13, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r521, %r523, %r522;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r524, %r526, %r525;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r566, %r565;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r624, %f1315;
	and.b32  	%r625, %r624, -2147483648;
	or.b32  	%r626, %r625, 1056964608;
	mov.b32 	%f1316, %r626;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p294, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p294;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p295, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p295;
	cvt.rzi.s32.f32 	%r627, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r628, %r627, 1;
	setp.eq.b32 	%p296, %r628, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p296;
	selp.f32 	%f1336, %f1334, %f1330, %p296;
	and.b32  	%r629, %r627, 2;
	setp.eq.s32 	%p297, %r629, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p297;
	add.s32 	%r630, %r627, 1;
	and.b32  	%r631, %r630, 2;
	setp.eq.s32 	%p298, %r631, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p298;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p299, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p299;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p300, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p300;
	mov.b32 	%r619, %f1347;
	mov.b32 	%r618, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r617, %r619, %r618;
	// end inline asm
	mov.b32 	%r622, %f1344;
	mov.b32 	%r621, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r620, %r622, %r621;
	// end inline asm
	and.b32  	%r632, %r8, 32;
	shl.b32 	%r633, %r2, 3;
	and.b32  	%r634, %r633, 64;
	or.b32  	%r635, %r632, %r3;
	or.b32  	%r143, %r635, %r634;
	shl.b32 	%r636, %r1, 5;
	and.b32  	%r637, %r6, 28;
	and.b32  	%r638, %r636, 96;
	or.b32  	%r144, %r637, %r638;
	and.b32  	%r145, %r636, 128;
	and.b32  	%r146, %r2, 8;
	shl.b32 	%r639, %r2, 4;
	or.b32  	%r640, %r146, %r639;
	shr.u32 	%r641, %r640, 2;
	and.b32  	%r642, %r641, 30;
	bfe.u32 	%r643, %r3, 2, 1;
	and.b32  	%r644, %r3, 1;
	mul.lo.s32 	%r645, %r644, 2080;
	shr.u32 	%r646, %r3, 1;
	bfe.u32 	%r647, %r3, 1, 1;
	shr.u32 	%r648, %r3, 3;
	mad.lo.s32 	%r649, %r19, 65, %r645;
	mad.lo.s32 	%r650, %r648, 260, %r649;
	mad.lo.s32 	%r651, %r643, 520, %r650;
	mad.lo.s32 	%r652, %r647, 1040, %r651;
	add.s32 	%r653, %r652, %r642;
	mul.wide.u32 	%rd51, %r653, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r654, %r653, 32;
	mul.wide.u32 	%rd53, %r654, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r655, %r653, 1;
	mul.wide.u32 	%rd54, %r655, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r656, %r653, 33;
	mul.wide.u32 	%rd55, %r656, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r657, %r653, 130;
	mul.wide.u32 	%rd56, %r657, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r658, %r653, 162;
	mul.wide.u32 	%rd57, %r658, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r659, %r653, 131;
	mul.wide.u32 	%rd58, %r659, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r660, %r653, 163;
	mul.wide.u32 	%rd59, %r660, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r661, %r19, 520;
	mul.lo.s32 	%r662, %r21, 1040;
	and.b32  	%r663, %r4, 32;
	mul.lo.s32 	%r664, %r15, 65;
	mul.lo.s32 	%r665, %r16, 130;
	mul.lo.s32 	%r666, %r18, 260;
	or.b32  	%r667, %r661, %r646;
	add.s32 	%r668, %r665, %r663;
	add.s32 	%r669, %r668, %r667;
	add.s32 	%r670, %r669, %r662;
	add.s32 	%r671, %r670, %r664;
	add.s32 	%r672, %r671, %r666;
	or.b32  	%r673, %r646, 8;
	add.s32 	%r674, %r673, %r661;
	add.s32 	%r675, %r668, %r674;
	add.s32 	%r676, %r675, %r662;
	add.s32 	%r677, %r676, %r664;
	add.s32 	%r678, %r677, %r666;
	or.b32  	%r679, %r646, 16;
	add.s32 	%r680, %r679, %r661;
	add.s32 	%r681, %r668, %r680;
	add.s32 	%r682, %r681, %r662;
	add.s32 	%r683, %r682, %r664;
	add.s32 	%r684, %r683, %r666;
	or.b32  	%r685, %r646, 24;
	add.s32 	%r686, %r685, %r661;
	add.s32 	%r687, %r668, %r686;
	add.s32 	%r688, %r687, %r662;
	add.s32 	%r689, %r688, %r664;
	add.s32 	%r690, %r689, %r666;
	add.s32 	%r691, %r661, 2080;
	add.s32 	%r692, %r691, %r673;
	add.s32 	%r693, %r668, %r692;
	add.s32 	%r694, %r693, %r662;
	add.s32 	%r695, %r694, %r664;
	add.s32 	%r696, %r695, %r666;
	add.s32 	%r697, %r691, %r679;
	add.s32 	%r698, %r668, %r697;
	add.s32 	%r699, %r698, %r662;
	add.s32 	%r700, %r699, %r664;
	add.s32 	%r701, %r700, %r666;
	add.s32 	%r702, %r691, %r685;
	add.s32 	%r703, %r668, %r702;
	add.s32 	%r704, %r703, %r662;
	add.s32 	%r705, %r704, %r664;
	add.s32 	%r706, %r705, %r666;
	shl.b32 	%r707, %r1, 4;
	and.b32  	%r708, %r707, 1920;
	or.b32  	%r709, %r11, %r10;
	or.b32  	%r710, %r709, %r7;
	shr.u32 	%r711, %r710, 1;
	mul.lo.s32 	%r712, %r711, 65;
	or.b32  	%r713, %r663, %r646;
	add.s32 	%r714, %r713, %r712;
	or.b32  	%r715, %r663, %r673;
	add.s32 	%r716, %r715, %r712;
	or.b32  	%r717, %r663, %r679;
	add.s32 	%r718, %r717, %r712;
	or.b32  	%r719, %r663, %r685;
	add.s32 	%r720, %r719, %r712;
	add.s32 	%r721, %r712, 2080;
	add.s32 	%r722, %r713, %r721;
	add.s32 	%r723, %r715, %r721;
	add.s32 	%r724, %r717, %r721;
	add.s32 	%r725, %r719, %r721;
	shl.b32 	%r726, %r3, 1;
	or.b32  	%r727, %r726, %r19;
	mul.lo.s32 	%r728, %r727, 65;
	add.s32 	%r729, %r642, %r728;
	mul.wide.u32 	%rd60, %r729, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r642;
	cvt.u64.u32 	%rd62, %r728;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r730, %r727, 32;
	mul.lo.s32 	%r731, %r730, 65;
	add.s32 	%r732, %r642, %r731;
	mul.wide.u32 	%rd65, %r732, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r731;
	add.s64 	%rd67, %rd66, %rd61;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r733, %r3, 2;
	or.b32  	%r734, %r20, %r733;
	or.b32  	%r735, %r145, %r144;
	or.b32  	%r736, %r734, %r708;
	shl.b32 	%r737, %r736, 8;
	or.b32  	%r738, %r735, %r737;
	or.b32  	%r147, %r738, -1572864;
	or.b32  	%r148, %r738, -1556480;
	mul.wide.u32 	%rd17, %r725, 4;
	mul.wide.u32 	%rd18, %r724, 4;
	mul.wide.u32 	%rd19, %r723, 4;
	mul.wide.u32 	%rd20, %r722, 4;
	mul.wide.u32 	%rd21, %r720, 4;
	mul.wide.u32 	%rd22, %r718, 4;
	mul.wide.u32 	%rd23, %r716, 4;
	mul.wide.u32 	%rd24, %r714, 4;
	mul.wide.u32 	%rd25, %r706, 4;
	mul.wide.u32 	%rd26, %r701, 4;
	mul.wide.u32 	%rd27, %r696, 4;
	mul.wide.u32 	%rd28, %r690, 4;
	mul.wide.u32 	%rd29, %r684, 4;
	mul.wide.u32 	%rd30, %r678, 4;
	add.s32 	%r739, %r667, %r662;
	add.s32 	%r740, %r739, %r666;
	add.s32 	%r741, %r740, %r665;
	add.s32 	%r742, %r741, %r664;
	add.s32 	%r743, %r742, %r663;
	add.s32 	%r744, %r743, 2080;
	mul.wide.u32 	%rd31, %r744, 4;
	mul.wide.u32 	%rd32, %r672, 4;
	mov.u32 	%r16197, 0;
	setp.eq.s32 	%p301, %r146, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16198, %r16197;
	mov.u32 	%r16199, %r16197;
	mov.u32 	%r16200, %r16197;
	mov.u32 	%r16201, %r16197;
	mov.u32 	%r16202, %r16197;
	mov.u32 	%r16203, %r16197;
	mov.u32 	%r16204, %r16197;
	mov.u32 	%r16205, %r16197;
	mov.u32 	%r16206, %r16197;
	mov.u32 	%r16207, %r16197;
	mov.u32 	%r16208, %r16197;
	mov.u32 	%r16209, %r16197;
	mov.u32 	%r16210, %r16197;
	mov.u32 	%r16211, %r16197;
	mov.u32 	%r16212, %r16197;
	mov.u32 	%r16213, %r16197;
	mov.u32 	%r16214, %r16197;
	mov.u32 	%r16215, %r16197;
	mov.u32 	%r16216, %r16197;
	mov.u32 	%r16217, %r16197;
	mov.u32 	%r16218, %r16197;
	mov.u32 	%r16219, %r16197;
	mov.u32 	%r16220, %r16197;
	mov.u32 	%r16195, %r16197;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63541
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16195, %r173, 256;
	setp.gt.s32 	%p306, %r5, %r16195;
	setp.ne.s32 	%p307, %r173, 32512;
	and.pred  	%p308, %p307, %p306;
	@%p308 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2061
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r173, %r16195;
	or.b32  	%r778, %r143, %r173;
	shl.b32 	%r779, %r778, 12;
	or.b32  	%r780, %r779, %r144;
	or.b32  	%r781, %r780, %r145;
	mul.wide.s32 	%rd70, %r781, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r782, %r783, %r784, %r785}, [%rd71];
	or.b32  	%r786, %r781, 65536;
	mul.wide.s32 	%rd72, %r786, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r787, %r788, %r789, %r790}, [%rd73];
	selp.b32 	%r791, %r784, %r782, %p301;
	shfl.sync.bfly.b32	%r792, %r791, 8, 31, -1;
	selp.b32 	%r746, %r782, %r792, %p301;
	selp.b32 	%r747, %r792, %r784, %p301;
	selp.b32 	%r793, %r785, %r783, %p301;
	shfl.sync.bfly.b32	%r794, %r793, 8, 31, -1;
	selp.b32 	%r754, %r783, %r794, %p301;
	selp.b32 	%r755, %r794, %r785, %p301;
	selp.b32 	%r795, %r789, %r787, %p301;
	shfl.sync.bfly.b32	%r796, %r795, 8, 31, -1;
	selp.b32 	%r762, %r787, %r796, %p301;
	selp.b32 	%r763, %r796, %r789, %p301;
	selp.b32 	%r797, %r790, %r788, %p301;
	shfl.sync.bfly.b32	%r798, %r797, 8, 31, -1;
	selp.b32 	%r770, %r788, %r798, %p301;
	selp.b32 	%r771, %r798, %r790, %p301;
	mov.u32 	%r772, 21520;
	// begin inline asm
	prmt.b32 %r745, %r746, %r747, %r772;
	// end inline asm
	mov.u32 	%r776, 30258;
	// begin inline asm
	prmt.b32 %r749, %r746, %r747, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r753, %r754, %r755, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r757, %r754, %r755, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r761, %r762, %r763, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r765, %r762, %r763, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r769, %r770, %r771, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r773, %r770, %r771, %r776;
	// end inline asm
	st.shared.u32 	[%rd5], %r745;
	st.shared.u32 	[%rd6], %r749;
	st.shared.u32 	[%rd7], %r753;
	st.shared.u32 	[%rd8], %r757;
	st.shared.u32 	[%rd9], %r761;
	st.shared.u32 	[%rd10], %r765;
	st.shared.u32 	[%rd11], %r769;
	st.shared.u32 	[%rd12], %r773;
	bar.sync 	0;
	mov.u32 	%r16196, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9059
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16063, [%rd74];
	add.s64 	%rd75, %rd94, %rd30;
	ld.shared.u32 	%r16064, [%rd75];
	add.s64 	%rd76, %rd94, %rd29;
	ld.shared.u32 	%r16065, [%rd76];
	add.s64 	%rd77, %rd94, %rd28;
	ld.shared.u32 	%r16066, [%rd77];
	add.s64 	%rd78, %rd94, %rd31;
	ld.shared.u32 	%r16067, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16068, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16069, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16070, [%rd81];
	// begin inline asm
	mov.b32 %r804, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r815, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r803, %r16063, -2004318072;
	mov.u32 	%r802, 983055;
	// begin inline asm
	lop3.b32 %r801, %r802, %r803, %r804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r806, %r804, %r805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r809, %r801, %r806;
	// end inline asm
	mov.u32 	%r813, 15728880;
	// begin inline asm
	lop3.b32 %r812, %r813, %r803, %r815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r817, %r815, %r816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r820, %r812, %r817;
	// end inline asm
	shr.u32 	%r825, %r803, 8;
	// begin inline asm
	lop3.b32 %r823, %r802, %r825, %r804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r828, %r804, %r827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r831, %r823, %r828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r834, %r813, %r825, %r815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r839, %r815, %r838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r842, %r834, %r839;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r849, %r16064, -2004318072;
	// begin inline asm
	lop3.b32 %r847, %r802, %r849, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r850, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r858, %r813, %r849, %r861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r861, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	shr.u32 	%r871, %r849, 8;
	// begin inline asm
	lop3.b32 %r869, %r802, %r871, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r874, %r850, %r873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r877, %r869, %r874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r880, %r813, %r871, %r861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r861, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r895, %r16065, -2004318072;
	// begin inline asm
	lop3.b32 %r893, %r802, %r895, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r896, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r904, %r813, %r895, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r909, %r907, %r908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r912, %r904, %r909;
	// end inline asm
	shr.u32 	%r917, %r895, 8;
	// begin inline asm
	lop3.b32 %r915, %r802, %r917, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r896, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r926, %r813, %r917, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r907, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r941, %r16066, -2004318072;
	// begin inline asm
	lop3.b32 %r939, %r802, %r941, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r942, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r950, %r813, %r941, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r953, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	shr.u32 	%r963, %r941, 8;
	// begin inline asm
	lop3.b32 %r961, %r802, %r963, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r942, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r972, %r813, %r963, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r953, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r987, %r16067, -2004318072;
	// begin inline asm
	lop3.b32 %r985, %r802, %r987, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r988, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r996, %r813, %r987, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r999, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	shr.u32 	%r1009, %r987, 8;
	// begin inline asm
	lop3.b32 %r1007, %r802, %r1009, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1012, %r988, %r1011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1015, %r1007, %r1012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1018, %r813, %r1009, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r999, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1033, %r16068, -2004318072;
	// begin inline asm
	lop3.b32 %r1031, %r802, %r1033, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1034, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1042, %r813, %r1033, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1045, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	shr.u32 	%r1055, %r1033, 8;
	// begin inline asm
	lop3.b32 %r1053, %r802, %r1055, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1034, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1064, %r813, %r1055, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1045, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1079, %r16069, -2004318072;
	// begin inline asm
	lop3.b32 %r1077, %r802, %r1079, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1080, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1088, %r813, %r1079, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1091, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	shr.u32 	%r1101, %r1079, 8;
	// begin inline asm
	lop3.b32 %r1099, %r802, %r1101, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1080, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1110, %r813, %r1101, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1091, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	mov.b32 %r1126, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1137, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1125, %r16070, -2004318072;
	// begin inline asm
	lop3.b32 %r1123, %r802, %r1125, %r1126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1128, %r1126, %r1127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1131, %r1123, %r1128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1134, %r813, %r1125, %r1137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1139, %r1137, %r1138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1142, %r1134, %r1139;
	// end inline asm
	shr.u32 	%r1147, %r1125, 8;
	// begin inline asm
	lop3.b32 %r1145, %r802, %r1147, %r1126, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1150, %r1126, %r1149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1153, %r1145, %r1150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1156, %r813, %r1147, %r1137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1137, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1167, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1169, %r1167, %r809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1172, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1174, %r1172, %r820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1177, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1179, %r1177, %r831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1182, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1184, %r1182, %r842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1187, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1189, %r1187, %r855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1192, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1194, %r1192, %r866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1197, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1199, %r1197, %r877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1202, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1204, %r1202, %r888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1207, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1209, %r1207, %r901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r1212, %r912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1217, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1219, %r1217, %r923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1222, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1224, %r1222, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1229, %r1227, %r947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r1004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r1015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r1039;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r1050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r1061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1164;
	// end inline asm
	// begin inline asm
	mov.b32 %r1332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1343, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1331, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1329, %r802, %r1331, %r1332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1334, %r1332, %r1333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1337, %r1329, %r1334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1340, %r813, %r1331, %r1343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1345, %r1343, %r1344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1348, %r1340, %r1345;
	// end inline asm
	shr.u32 	%r1353, %r1331, 8;
	// begin inline asm
	lop3.b32 %r1351, %r802, %r1353, %r1332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1356, %r1332, %r1355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1359, %r1351, %r1356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1362, %r813, %r1353, %r1343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1367, %r1343, %r1366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1370, %r1362, %r1367;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1377, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1375, %r802, %r1377, %r1378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1380, %r1378, %r1379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1383, %r1375, %r1380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1386, %r813, %r1377, %r1389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1391, %r1389, %r1390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1394, %r1386, %r1391;
	// end inline asm
	shr.u32 	%r1399, %r1377, 8;
	// begin inline asm
	lop3.b32 %r1397, %r802, %r1399, %r1378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1402, %r1378, %r1401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1405, %r1397, %r1402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1408, %r813, %r1399, %r1389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1413, %r1389, %r1412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1416, %r1408, %r1413;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1423, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1421, %r802, %r1423, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1424, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1432, %r813, %r1423, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1437, %r1435, %r1436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1440, %r1432, %r1437;
	// end inline asm
	shr.u32 	%r1445, %r1423, 8;
	// begin inline asm
	lop3.b32 %r1443, %r802, %r1445, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1448, %r1424, %r1447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1451, %r1443, %r1448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1454, %r813, %r1445, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1435, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1469, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1467, %r802, %r1469, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1470, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1478, %r813, %r1469, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1481, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	shr.u32 	%r1491, %r1469, 8;
	// begin inline asm
	lop3.b32 %r1489, %r802, %r1491, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1470, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1500, %r813, %r1491, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1481, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1515, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r1513, %r802, %r1515, %r1516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1516, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1524, %r813, %r1515, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1529, %r1527, %r1528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1532, %r1524, %r1529;
	// end inline asm
	shr.u32 	%r1537, %r1515, 8;
	// begin inline asm
	lop3.b32 %r1535, %r802, %r1537, %r1516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1516, %r1539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1543, %r1535, %r1540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1546, %r813, %r1537, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1527, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	// begin inline asm
	mov.b32 %r1562, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1573, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1561, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r1559, %r802, %r1561, %r1562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1564, %r1562, %r1563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1567, %r1559, %r1564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1570, %r813, %r1561, %r1573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1575, %r1573, %r1574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1578, %r1570, %r1575;
	// end inline asm
	shr.u32 	%r1583, %r1561, 8;
	// begin inline asm
	lop3.b32 %r1581, %r802, %r1583, %r1562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1585, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1586, %r1562, %r1585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1589, %r1581, %r1586;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1592, %r813, %r1583, %r1573, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1573, %r1596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1600, %r1592, %r1597;
	// end inline asm
	// begin inline asm
	mov.b32 %r1608, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1619, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1607, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r1605, %r802, %r1607, %r1608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1609, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1610, %r1608, %r1609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1613, %r1605, %r1610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1616, %r813, %r1607, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1620, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1621, %r1619, %r1620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1624, %r1616, %r1621;
	// end inline asm
	shr.u32 	%r1629, %r1607, 8;
	// begin inline asm
	lop3.b32 %r1627, %r802, %r1629, %r1608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1632, %r1608, %r1631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1635, %r1627, %r1632;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1638, %r813, %r1629, %r1619, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1619, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	// begin inline asm
	mov.b32 %r1654, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1665, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1653, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r1651, %r802, %r1653, %r1654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1655, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1656, %r1654, %r1655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1659, %r1651, %r1656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1662, %r813, %r1653, %r1665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1666, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1667, %r1665, %r1666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1670, %r1662, %r1667;
	// end inline asm
	shr.u32 	%r1675, %r1653, 8;
	// begin inline asm
	lop3.b32 %r1673, %r802, %r1675, %r1654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1677, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1678, %r1654, %r1677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1681, %r1673, %r1678;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1684, %r813, %r1675, %r1665, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1689, %r1665, %r1688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1692, %r1684, %r1689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1695, %r272, %r1337, %r1169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r272, %r1348, %r1174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1703, %r272, %r1359, %r1179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1707, %r272, %r1370, %r1184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1711, %r272, %r1383, %r1189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1715, %r272, %r1394, %r1194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1719, %r272, %r1405, %r1199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r272, %r1416, %r1204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r272, %r1429, %r1209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r272, %r1440, %r1214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r272, %r1451, %r1219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1739, %r272, %r1462, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1743, %r272, %r1475, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r272, %r1486, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r272, %r1497, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r272, %r1508, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r290, %r1521, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r290, %r1532, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r290, %r1543, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r290, %r1554, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r290, %r1567, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r290, %r1578, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r290, %r1589, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r290, %r1600, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r290, %r1613, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r290, %r1624, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r290, %r1635, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r290, %r1646, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r290, %r1659, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r290, %r1670, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r290, %r1681, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r290, %r1692, %r1324;
	// end inline asm
	// begin inline asm
	mov.b32 %r1828, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1839, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1827, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1825, %r802, %r1827, %r1828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1830, %r1828, %r1829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1833, %r1825, %r1830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1836, %r813, %r1827, %r1839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1841, %r1839, %r1840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1844, %r1836, %r1841;
	// end inline asm
	shr.u32 	%r1849, %r1827, 8;
	// begin inline asm
	lop3.b32 %r1847, %r802, %r1849, %r1828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1852, %r1828, %r1851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1855, %r1847, %r1852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1858, %r813, %r1849, %r1839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1863, %r1839, %r1862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1866, %r1858, %r1863;
	// end inline asm
	// begin inline asm
	mov.b32 %r1874, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1885, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1873, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1871, %r802, %r1873, %r1874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1876, %r1874, %r1875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1879, %r1871, %r1876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1882, %r813, %r1873, %r1885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1887, %r1885, %r1886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1890, %r1882, %r1887;
	// end inline asm
	shr.u32 	%r1895, %r1873, 8;
	// begin inline asm
	lop3.b32 %r1893, %r802, %r1895, %r1874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1898, %r1874, %r1897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1901, %r1893, %r1898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1904, %r813, %r1895, %r1885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1909, %r1885, %r1908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1912, %r1904, %r1909;
	// end inline asm
	// begin inline asm
	mov.b32 %r1920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1931, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1919, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r1917, %r802, %r1919, %r1920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1922, %r1920, %r1921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1925, %r1917, %r1922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1928, %r813, %r1919, %r1931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1933, %r1931, %r1932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1936, %r1928, %r1933;
	// end inline asm
	shr.u32 	%r1941, %r1919, 8;
	// begin inline asm
	lop3.b32 %r1939, %r802, %r1941, %r1920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1944, %r1920, %r1943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1947, %r1939, %r1944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1950, %r813, %r1941, %r1931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1955, %r1931, %r1954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1958, %r1950, %r1955;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1977, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1965, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r1963, %r802, %r1965, %r1966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1968, %r1966, %r1967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1971, %r1963, %r1968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1974, %r813, %r1965, %r1977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1979, %r1977, %r1978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1982, %r1974, %r1979;
	// end inline asm
	shr.u32 	%r1987, %r1965, 8;
	// begin inline asm
	lop3.b32 %r1985, %r802, %r1987, %r1966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1990, %r1966, %r1989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1993, %r1985, %r1990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1996, %r813, %r1987, %r1977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2001, %r1977, %r2000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2004, %r1996, %r2001;
	// end inline asm
	// begin inline asm
	mov.b32 %r2012, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2023, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2011, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r2009, %r802, %r2011, %r2012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2014, %r2012, %r2013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2017, %r2009, %r2014;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2020, %r813, %r2011, %r2023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2025, %r2023, %r2024;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2028, %r2020, %r2025;
	// end inline asm
	shr.u32 	%r2033, %r2011, 8;
	// begin inline asm
	lop3.b32 %r2031, %r802, %r2033, %r2012, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2036, %r2012, %r2035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2039, %r2031, %r2036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2042, %r813, %r2033, %r2023, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2047, %r2023, %r2046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2050, %r2042, %r2047;
	// end inline asm
	// begin inline asm
	mov.b32 %r2058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2069, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2057, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r2055, %r802, %r2057, %r2058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2060, %r2058, %r2059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2063, %r2055, %r2060;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2066, %r813, %r2057, %r2069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2071, %r2069, %r2070;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2074, %r2066, %r2071;
	// end inline asm
	shr.u32 	%r2079, %r2057, 8;
	// begin inline asm
	lop3.b32 %r2077, %r802, %r2079, %r2058, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2082, %r2058, %r2081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2085, %r2077, %r2082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2088, %r813, %r2079, %r2069, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2093, %r2069, %r2092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2096, %r2088, %r2093;
	// end inline asm
	// begin inline asm
	mov.b32 %r2104, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2115, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2103, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r2101, %r802, %r2103, %r2104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2106, %r2104, %r2105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2109, %r2101, %r2106;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2112, %r813, %r2103, %r2115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2116, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2117, %r2115, %r2116;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2120, %r2112, %r2117;
	// end inline asm
	shr.u32 	%r2125, %r2103, 8;
	// begin inline asm
	lop3.b32 %r2123, %r802, %r2125, %r2104, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2128, %r2104, %r2127;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2131, %r2123, %r2128;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2134, %r813, %r2125, %r2115, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2115, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2161, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2149, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2147, %r802, %r2149, %r2150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2152, %r2150, %r2151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2155, %r2147, %r2152;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2158, %r813, %r2149, %r2161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2163, %r2161, %r2162;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2166, %r2158, %r2163;
	// end inline asm
	shr.u32 	%r2171, %r2149, 8;
	// begin inline asm
	lop3.b32 %r2169, %r802, %r2171, %r2150, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2174, %r2150, %r2173;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2177, %r2169, %r2174;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2180, %r813, %r2171, %r2161, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2161, %r2184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2188, %r2180, %r2185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2191, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2193, %r2191, %r1833, %r1695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2197, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2199, %r2197, %r1844, %r1699;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2203, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2205, %r2203, %r1855, %r1703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2209, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2211, %r2209, %r1866, %r1707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2215, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2217, %r2215, %r1879, %r1711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2221, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2223, %r2221, %r1890, %r1715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2227, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2229, %r2227, %r1901, %r1719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2233, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2235, %r2233, %r1912, %r1723;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2239, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2241, %r2239, %r1925, %r1727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2245, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2247, %r2245, %r1936, %r1731;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2251, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2253, %r2251, %r1947, %r1735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2257, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2259, %r2257, %r1958, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2263, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2265, %r2263, %r1971, %r1743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2269, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2271, %r2269, %r1982, %r1747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2275, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2277, %r2275, %r1993, %r1751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2281, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2283, %r2281, %r2004, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2287, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2289, %r2287, %r2017, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2293, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2295, %r2293, %r2028, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2299, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2301, %r2299, %r2039, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2305, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2307, %r2305, %r2050, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2311, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2313, %r2311, %r2063, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2317, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2319, %r2317, %r2074, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2323, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2325, %r2323, %r2085, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2329, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2331, %r2329, %r2096, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2335, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2337, %r2335, %r2109, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2341, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2343, %r2341, %r2120, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2347, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2349, %r2347, %r2131, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2353, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2355, %r2353, %r2142, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2359, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2361, %r2359, %r2155, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2365, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2367, %r2365, %r2166, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2371, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2373, %r2371, %r2177, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2377, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2379, %r2377, %r2188, %r1819;
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2399, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2387, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r2385, %r802, %r2387, %r2388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2390, %r2388, %r2389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2393, %r2385, %r2390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2396, %r813, %r2387, %r2399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2401, %r2399, %r2400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2404, %r2396, %r2401;
	// end inline asm
	shr.u32 	%r2409, %r2387, 8;
	// begin inline asm
	lop3.b32 %r2407, %r802, %r2409, %r2388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2388, %r2411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2415, %r2407, %r2412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2418, %r813, %r2409, %r2399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2399, %r2422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2426, %r2418, %r2423;
	// end inline asm
	// begin inline asm
	mov.b32 %r2434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2445, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2433, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r2431, %r802, %r2433, %r2434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2436, %r2434, %r2435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2439, %r2431, %r2436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2442, %r813, %r2433, %r2445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2447, %r2445, %r2446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2450, %r2442, %r2447;
	// end inline asm
	shr.u32 	%r2455, %r2433, 8;
	// begin inline asm
	lop3.b32 %r2453, %r802, %r2455, %r2434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2458, %r2434, %r2457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2461, %r2453, %r2458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2464, %r813, %r2455, %r2445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2469, %r2445, %r2468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2472, %r2464, %r2469;
	// end inline asm
	// begin inline asm
	mov.b32 %r2480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2491, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2479, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r2477, %r802, %r2479, %r2480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2482, %r2480, %r2481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2485, %r2477, %r2482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2488, %r813, %r2479, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2493, %r2491, %r2492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2496, %r2488, %r2493;
	// end inline asm
	shr.u32 	%r2501, %r2479, 8;
	// begin inline asm
	lop3.b32 %r2499, %r802, %r2501, %r2480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2504, %r2480, %r2503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2507, %r2499, %r2504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2510, %r813, %r2501, %r2491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2491, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	// begin inline asm
	mov.b32 %r2526, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2537, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2525, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r2523, %r802, %r2525, %r2526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2528, %r2526, %r2527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2531, %r2523, %r2528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2534, %r813, %r2525, %r2537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2539, %r2537, %r2538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2542, %r2534, %r2539;
	// end inline asm
	shr.u32 	%r2547, %r2525, 8;
	// begin inline asm
	lop3.b32 %r2545, %r802, %r2547, %r2526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2550, %r2526, %r2549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2553, %r2545, %r2550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2556, %r813, %r2547, %r2537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2561, %r2537, %r2560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2564, %r2556, %r2561;
	// end inline asm
	// begin inline asm
	mov.b32 %r2572, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2583, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2571, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r2569, %r802, %r2571, %r2572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2574, %r2572, %r2573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2577, %r2569, %r2574;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2580, %r813, %r2571, %r2583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2585, %r2583, %r2584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2588, %r2580, %r2585;
	// end inline asm
	shr.u32 	%r2593, %r2571, 8;
	// begin inline asm
	lop3.b32 %r2591, %r802, %r2593, %r2572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2596, %r2572, %r2595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2599, %r2591, %r2596;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2602, %r813, %r2593, %r2583, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2583, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	// begin inline asm
	mov.b32 %r2618, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2629, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2617, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r2615, %r802, %r2617, %r2618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2618, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2626, %r813, %r2617, %r2629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2631, %r2629, %r2630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2634, %r2626, %r2631;
	// end inline asm
	shr.u32 	%r2639, %r2617, 8;
	// begin inline asm
	lop3.b32 %r2637, %r802, %r2639, %r2618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2642, %r2618, %r2641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2645, %r2637, %r2642;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2648, %r813, %r2639, %r2629, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2629, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	mov.b32 %r2664, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2675, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2663, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r2661, %r802, %r2663, %r2664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2666, %r2664, %r2665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2669, %r2661, %r2666;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2672, %r813, %r2663, %r2675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2677, %r2675, %r2676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2680, %r2672, %r2677;
	// end inline asm
	shr.u32 	%r2685, %r2663, 8;
	// begin inline asm
	lop3.b32 %r2683, %r802, %r2685, %r2664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2688, %r2664, %r2687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2691, %r2683, %r2688;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2694, %r813, %r2685, %r2675, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2675, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	mov.b32 %r2710, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2721, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2709, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r2707, %r802, %r2709, %r2710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2712, %r2710, %r2711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2715, %r2707, %r2712;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2718, %r813, %r2709, %r2721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2723, %r2721, %r2722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2726, %r2718, %r2723;
	// end inline asm
	shr.u32 	%r2731, %r2709, 8;
	// begin inline asm
	lop3.b32 %r2729, %r802, %r2731, %r2710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2734, %r2710, %r2733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2737, %r2729, %r2734;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2740, %r813, %r2731, %r2721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2721, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2886, %r344, %r2393, %r2193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2883, %r344, %r2404, %r2199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2895, %r344, %r2415, %r2205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2892, %r344, %r2426, %r2211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r344, %r2439, %r2217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r344, %r2450, %r2223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2913, %r344, %r2461, %r2229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r344, %r2472, %r2235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r344, %r2485, %r2241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r344, %r2496, %r2247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2931, %r344, %r2507, %r2253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r344, %r2518, %r2259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r344, %r2531, %r2265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r344, %r2542, %r2271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2949, %r344, %r2553, %r2277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r344, %r2564, %r2283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2958, %r362, %r2577, %r2289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r362, %r2588, %r2295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2967, %r362, %r2599, %r2301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r362, %r2610, %r2307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2976, %r362, %r2623, %r2313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r362, %r2634, %r2319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2985, %r362, %r2645, %r2325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r362, %r2656, %r2331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2994, %r362, %r2669, %r2337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r362, %r2680, %r2343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3003, %r362, %r2691, %r2349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r362, %r2702, %r2355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3012, %r362, %r2715, %r2361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r362, %r2726, %r2367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3021, %r362, %r2737, %r2373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r362, %r2748, %r2379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2879, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2881, %r2879, %r2883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2884, %r426, %r2886, %r2881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2888, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2890, %r2888, %r2892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2893, %r426, %r2895, %r2890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2897, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2899, %r2897, %r2901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2902, %r426, %r2904, %r2899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2906, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2908, %r2906, %r2910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2911, %r426, %r2913, %r2908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2915, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2917, %r2915, %r2919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r426, %r2922, %r2917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2924, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2926, %r2924, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2929, %r426, %r2931, %r2926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2933, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2935, %r2933, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r426, %r2940, %r2935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2942, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2944, %r2942, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r426, %r2949, %r2944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2951, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2953, %r2951, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r429, %r2958, %r2953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2960, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2962, %r2960, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r429, %r2967, %r2962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2969, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2971, %r2969, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r429, %r2976, %r2971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2978, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2980, %r2978, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r429, %r2985, %r2980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2987, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2989, %r2987, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r429, %r2994, %r2989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2996, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2998, %r2996, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r429, %r3003, %r2998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3005, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3007, %r3005, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r429, %r3012, %r3007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3014, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3016, %r3014, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r429, %r3021, %r3016;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3023, %r432, %r2886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r426, %r2883, %r3023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3030, %r432, %r2895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r426, %r2892, %r3030;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3037, %r432, %r2904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r426, %r2901, %r3037;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r432, %r2913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r426, %r2910, %r3044;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3051, %r432, %r2922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r426, %r2919, %r3051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3058, %r432, %r2931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r426, %r2928, %r3058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3065, %r432, %r2940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3068, %r426, %r2937, %r3065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3072, %r432, %r2949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r426, %r2946, %r3072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3079, %r435, %r2958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r429, %r2955, %r3079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3086, %r435, %r2967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r429, %r2964, %r3086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3093, %r435, %r2976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3096, %r429, %r2973, %r3093;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3100, %r435, %r2985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3103, %r429, %r2982, %r3100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3107, %r435, %r2994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3110, %r429, %r2991, %r3107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3114, %r435, %r3003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r429, %r3000, %r3114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3121, %r435, %r3012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r429, %r3009, %r3121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3128, %r435, %r3021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3131, %r429, %r3018, %r3128;
	// end inline asm
	mov.u32 	%r15158, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3302, %r3299}, {%r474, %r480, %r477, %r483}, {%r2884, %r3026}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3311, %r3308}, {%r474, %r480, %r477, %r483}, {%r2893, %r3033}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3320, %r3317}, {%r474, %r480, %r477, %r483}, {%r2902, %r3040}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3329, %r3326}, {%r474, %r480, %r477, %r483}, {%r2911, %r3047}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3338, %r3335}, {%r474, %r480, %r477, %r483}, {%r2920, %r3054}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3347, %r3344}, {%r474, %r480, %r477, %r483}, {%r2929, %r3061}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3356, %r3353}, {%r474, %r480, %r477, %r483}, {%r2938, %r3068}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3365, %r3362}, {%r474, %r480, %r477, %r483}, {%r2947, %r3075}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3374, %r3371}, {%r474, %r480, %r477, %r483}, {%r2956, %r3082}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3383, %r3380}, {%r474, %r480, %r477, %r483}, {%r2965, %r3089}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3392, %r3389}, {%r474, %r480, %r477, %r483}, {%r2974, %r3096}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3401, %r3398}, {%r474, %r480, %r477, %r483}, {%r2983, %r3103}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3410, %r3407}, {%r474, %r480, %r477, %r483}, {%r2992, %r3110}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3419, %r3416}, {%r474, %r480, %r477, %r483}, {%r3001, %r3117}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3428, %r3425}, {%r474, %r480, %r477, %r483}, {%r3010, %r3124}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3437, %r3434}, {%r474, %r480, %r477, %r483}, {%r3019, %r3131}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3295, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3297, %r3295, %r3299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3300, %r521, %r3302, %r3297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3304, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3306, %r3304, %r3308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3309, %r521, %r3311, %r3306;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3313, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3315, %r3313, %r3317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3318, %r521, %r3320, %r3315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3322, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3324, %r3322, %r3326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3327, %r521, %r3329, %r3324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3331, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3333, %r3331, %r3335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3336, %r521, %r3338, %r3333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3340, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3342, %r3340, %r3344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3345, %r521, %r3347, %r3342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3349, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3351, %r3349, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3354, %r521, %r3356, %r3351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3358, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3360, %r3358, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3363, %r521, %r3365, %r3360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3367, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3369, %r3367, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3372, %r521, %r3374, %r3369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3376, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3378, %r3376, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3381, %r521, %r3383, %r3378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3385, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3387, %r3385, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3390, %r521, %r3392, %r3387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3394, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3396, %r3394, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r521, %r3401, %r3396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3403, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3405, %r3403, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r521, %r3410, %r3405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r521, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r521, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r521, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3439, %r524, %r3302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r521, %r3299, %r3439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3446, %r524, %r3311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3449, %r521, %r3308, %r3446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3453, %r524, %r3320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3456, %r521, %r3317, %r3453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r524, %r3329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r521, %r3326, %r3460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3467, %r524, %r3338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3470, %r521, %r3335, %r3467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3474, %r524, %r3347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3477, %r521, %r3344, %r3474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3481, %r524, %r3356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r521, %r3353, %r3481;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3488, %r524, %r3365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3491, %r521, %r3362, %r3488;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3495, %r524, %r3374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r521, %r3371, %r3495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r524, %r3383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r521, %r3380, %r3502;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3509, %r524, %r3392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3512, %r521, %r3389, %r3509;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3516, %r524, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r521, %r3398, %r3516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3523, %r524, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3526, %r521, %r3407, %r3523;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3530, %r524, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3533, %r521, %r3416, %r3530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3537, %r524, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r521, %r3425, %r3537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r524, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r521, %r3434, %r3544;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3840, %r3843}, {%r564, %r570, %r567, %r573}, {%r3300, %r3442}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3846, %r3849}, {%r564, %r570, %r567, %r573}, {%r3309, %r3449}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3852, %r3855}, {%r564, %r570, %r567, %r573}, {%r3318, %r3456}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3858, %r3861}, {%r564, %r570, %r567, %r573}, {%r3327, %r3463}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3864, %r3867}, {%r564, %r570, %r567, %r573}, {%r3336, %r3470}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3870, %r3873}, {%r564, %r570, %r567, %r573}, {%r3345, %r3477}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3876, %r3879}, {%r564, %r570, %r567, %r573}, {%r3354, %r3484}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3882, %r3885}, {%r564, %r570, %r567, %r573}, {%r3363, %r3491}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3841, %r3844}, {%r564, %r570, %r567, %r573}, {%r3372, %r3498}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3847, %r3850}, {%r564, %r570, %r567, %r573}, {%r3381, %r3505}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3853, %r3856}, {%r564, %r570, %r567, %r573}, {%r3390, %r3512}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3859, %r3862}, {%r564, %r570, %r567, %r573}, {%r3399, %r3519}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3865, %r3868}, {%r564, %r570, %r567, %r573}, {%r3408, %r3526}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3871, %r3874}, {%r564, %r570, %r567, %r573}, {%r3417, %r3533}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3877, %r3880}, {%r564, %r570, %r567, %r573}, {%r3426, %r3540}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3883, %r3886}, {%r564, %r570, %r567, %r573}, {%r3435, %r3547}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3839, %r3840, %r3841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3842, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3845, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3848, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3851, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3854, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3857, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3860, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3884, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3887, %r3840, %r3841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3890, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3893, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3896, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3899, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3902, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3905, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3908, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3932, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3935, %r12, %r3839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3938, %r12, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3941, %r12, %r3845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3944, %r12, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3947, %r12, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3950, %r12, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3953, %r12, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3956, %r12, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r12, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r12, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r12, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r12, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r12, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r12, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r12, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r12, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r13, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r13, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r13, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r13, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r13, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r13, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r13, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r13, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r13, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r13, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r13, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r13, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r13, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r13, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r13, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r13, %r3932;
	// end inline asm
	// begin inline asm
	mov.b32 %r4031, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4032, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4033, %r3935, %r4031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4036, %r4033, %r4032;
	// end inline asm
	// begin inline asm
	mov.b32 %r4039, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4040, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4041, %r3938, %r4039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4044, %r4041, %r4040;
	// end inline asm
	// begin inline asm
	mov.b32 %r4047, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4049, %r3941, %r4047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4052, %r4049, %r4048;
	// end inline asm
	// begin inline asm
	mov.b32 %r4055, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4057, %r3944, %r4055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4060, %r4057, %r4056;
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4065, %r3947, %r4063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4068, %r4065, %r4064;
	// end inline asm
	// begin inline asm
	mov.b32 %r4071, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4073, %r3950, %r4071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4076, %r4073, %r4072;
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4081, %r3953, %r4079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4084, %r4081, %r4080;
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4089, %r3956, %r4087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4092, %r4089, %r4088;
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4097, %r3959, %r4095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4100, %r4097, %r4096;
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4105, %r3962, %r4103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4108, %r4105, %r4104;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4113, %r3965, %r4111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4116, %r4113, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4121, %r3968, %r4119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4124, %r4121, %r4120;
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4129, %r3971, %r4127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4132, %r4129, %r4128;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4137, %r3974, %r4135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4140, %r4137, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4145, %r3977, %r4143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4148, %r4145, %r4144;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4153, %r3980, %r4151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4156, %r4153, %r4152;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4161, %r3983, %r4159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4164, %r4161, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4169, %r3986, %r4167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4172, %r4169, %r4168;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4177, %r3989, %r4175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4180, %r4177, %r4176;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4185, %r3992, %r4183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4188, %r4185, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4193, %r3995, %r4191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4196, %r4193, %r4192;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4201, %r3998, %r4199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4204, %r4201, %r4200;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4209, %r4001, %r4207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4212, %r4209, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4217, %r4004, %r4215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4220, %r4217, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4225, %r4007, %r4223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4228, %r4225, %r4224;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4233, %r4010, %r4231;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4236, %r4233, %r4232;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4241, %r4013, %r4239;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4244, %r4241, %r4240;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4249, %r4016, %r4247;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4252, %r4249, %r4248;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4257, %r4019, %r4255;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4260, %r4257, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4265, %r4022, %r4263;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4268, %r4265, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4273, %r4025, %r4271;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4276, %r4273, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4281, %r4028, %r4279;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4284, %r4281, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4289, %r4290, %r4288;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4292, %r4036, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4296, %r4290, %r4295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4299, %r4044, %r4296;
	// end inline asm
	// begin inline asm
	mov.b32 %r4302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4303, %r4290, %r4302;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4306, %r4052, %r4303;
	// end inline asm
	// begin inline asm
	mov.b32 %r4309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4310, %r4290, %r4309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4313, %r4060, %r4310;
	// end inline asm
	mov.u32 	%r4319, 25152;
	// begin inline asm
	prmt.b32 %r4316, %r4292, %r4306, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4320, %r4299, %r4313, %r4319;
	// end inline asm
	shl.b32 	%r4327, %r4320, 4;
	mov.u32 	%r4325, 252645135;
	// begin inline asm
	lop3.b32 %r4324, %r4325, %r4316, %r4327, 202;
	// end inline asm
	xor.b32  	%r16071, %r4324, -2004318072;
	// begin inline asm
	mov.b32 %r4331, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4331, %r4329;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4333, %r4068, %r4330;
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4337, %r4331, %r4336;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4076, %r4337;
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4344, %r4331, %r4343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4347, %r4084, %r4344;
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4351, %r4331, %r4350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4092, %r4351;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4357, %r4333, %r4347, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4361, %r4340, %r4354, %r4319;
	// end inline asm
	shl.b32 	%r4368, %r4361, 4;
	// begin inline asm
	lop3.b32 %r4365, %r4325, %r4357, %r4368, 202;
	// end inline asm
	xor.b32  	%r16072, %r4365, -2004318072;
	// begin inline asm
	mov.b32 %r4372, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4371, %r4372, %r4370;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4374, %r4100, %r4371;
	// end inline asm
	// begin inline asm
	mov.b32 %r4377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4378, %r4372, %r4377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4381, %r4108, %r4378;
	// end inline asm
	// begin inline asm
	mov.b32 %r4384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4385, %r4372, %r4384;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4388, %r4116, %r4385;
	// end inline asm
	// begin inline asm
	mov.b32 %r4391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4392, %r4372, %r4391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4395, %r4124, %r4392;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4398, %r4374, %r4388, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4402, %r4381, %r4395, %r4319;
	// end inline asm
	shl.b32 	%r4409, %r4402, 4;
	// begin inline asm
	lop3.b32 %r4406, %r4325, %r4398, %r4409, 202;
	// end inline asm
	xor.b32  	%r16073, %r4406, -2004318072;
	// begin inline asm
	mov.b32 %r4413, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4413, %r4411;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4132, %r4412;
	// end inline asm
	// begin inline asm
	mov.b32 %r4418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4419, %r4413, %r4418;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4140, %r4419;
	// end inline asm
	// begin inline asm
	mov.b32 %r4425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4426, %r4413, %r4425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4429, %r4148, %r4426;
	// end inline asm
	// begin inline asm
	mov.b32 %r4432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4413, %r4432;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4436, %r4156, %r4433;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4439, %r4415, %r4429, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4443, %r4422, %r4436, %r4319;
	// end inline asm
	shl.b32 	%r4450, %r4443, 4;
	// begin inline asm
	lop3.b32 %r4447, %r4325, %r4439, %r4450, 202;
	// end inline asm
	xor.b32  	%r16074, %r4447, -2004318072;
	// begin inline asm
	mov.b32 %r4454, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4454, %r4452;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4164, %r4453;
	// end inline asm
	// begin inline asm
	mov.b32 %r4459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4460, %r4454, %r4459;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4463, %r4172, %r4460;
	// end inline asm
	// begin inline asm
	mov.b32 %r4466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4467, %r4454, %r4466;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4470, %r4180, %r4467;
	// end inline asm
	// begin inline asm
	mov.b32 %r4473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4454, %r4473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4188, %r4474;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4480, %r4456, %r4470, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4484, %r4463, %r4477, %r4319;
	// end inline asm
	shl.b32 	%r4491, %r4484, 4;
	// begin inline asm
	lop3.b32 %r4488, %r4325, %r4480, %r4491, 202;
	// end inline asm
	xor.b32  	%r16075, %r4488, -2004318072;
	// begin inline asm
	mov.b32 %r4495, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4495, %r4493;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4196, %r4494;
	// end inline asm
	// begin inline asm
	mov.b32 %r4500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4501, %r4495, %r4500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4504, %r4204, %r4501;
	// end inline asm
	// begin inline asm
	mov.b32 %r4507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4508, %r4495, %r4507;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4511, %r4212, %r4508;
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4495, %r4514;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4518, %r4220, %r4515;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4521, %r4497, %r4511, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4525, %r4504, %r4518, %r4319;
	// end inline asm
	shl.b32 	%r4532, %r4525, 4;
	// begin inline asm
	lop3.b32 %r4529, %r4325, %r4521, %r4532, 202;
	// end inline asm
	xor.b32  	%r16076, %r4529, -2004318072;
	// begin inline asm
	mov.b32 %r4536, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4536, %r4534;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4228, %r4535;
	// end inline asm
	// begin inline asm
	mov.b32 %r4541, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4542, %r4536, %r4541;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4545, %r4236, %r4542;
	// end inline asm
	// begin inline asm
	mov.b32 %r4548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4549, %r4536, %r4548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4552, %r4244, %r4549;
	// end inline asm
	// begin inline asm
	mov.b32 %r4555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4536, %r4555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4252, %r4556;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4562, %r4538, %r4552, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4566, %r4545, %r4559, %r4319;
	// end inline asm
	shl.b32 	%r4573, %r4566, 4;
	// begin inline asm
	lop3.b32 %r4570, %r4325, %r4562, %r4573, 202;
	// end inline asm
	xor.b32  	%r16077, %r4570, -2004318072;
	// begin inline asm
	mov.b32 %r4577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4577, %r4575;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4260, %r4576;
	// end inline asm
	// begin inline asm
	mov.b32 %r4582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4577, %r4582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4586, %r4268, %r4583;
	// end inline asm
	// begin inline asm
	mov.b32 %r4589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4590, %r4577, %r4589;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4276, %r4590;
	// end inline asm
	// begin inline asm
	mov.b32 %r4596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4597, %r4577, %r4596;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4600, %r4284, %r4597;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4603, %r4579, %r4593, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4607, %r4586, %r4600, %r4319;
	// end inline asm
	shl.b32 	%r4614, %r4607, 4;
	// begin inline asm
	lop3.b32 %r4611, %r4325, %r4603, %r4614, 202;
	// end inline asm
	xor.b32  	%r16078, %r4611, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16071;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16072;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16073;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16074;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16075;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16076;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16077;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16078;
	ld.shared.u32 	%r16197, [%rd74];
	ld.shared.u32 	%r16198, [%rd75];
	ld.shared.u32 	%r16199, [%rd76];
	ld.shared.u32 	%r16200, [%rd77];
	ld.shared.u32 	%r16209, [%rd78];
	ld.shared.u32 	%r16210, [%rd79];
	ld.shared.u32 	%r16211, [%rd80];
	ld.shared.u32 	%r16212, [%rd81];
	// begin inline asm
	mov.b32 %r4620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4631, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4619, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r4617, %r802, %r4619, %r4620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4622, %r4620, %r4621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4625, %r4617, %r4622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4628, %r813, %r4619, %r4631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4631, %r4632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4636, %r4628, %r4633;
	// end inline asm
	shr.u32 	%r4641, %r4619, 8;
	// begin inline asm
	lop3.b32 %r4639, %r802, %r4641, %r4620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4644, %r4620, %r4643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4647, %r4639, %r4644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4650, %r813, %r4641, %r4631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4631, %r4654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4658, %r4650, %r4655;
	// end inline asm
	// begin inline asm
	mov.b32 %r4666, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4677, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4665, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r4663, %r802, %r4665, %r4666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4668, %r4666, %r4667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4671, %r4663, %r4668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4674, %r813, %r4665, %r4677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4679, %r4677, %r4678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4682, %r4674, %r4679;
	// end inline asm
	shr.u32 	%r4687, %r4665, 8;
	// begin inline asm
	lop3.b32 %r4685, %r802, %r4687, %r4666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4690, %r4666, %r4689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4693, %r4685, %r4690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4696, %r813, %r4687, %r4677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4701, %r4677, %r4700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4704, %r4696, %r4701;
	// end inline asm
	// begin inline asm
	mov.b32 %r4712, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4723, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4711, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r4709, %r802, %r4711, %r4712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4712, %r4713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4717, %r4709, %r4714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4720, %r813, %r4711, %r4723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4723, %r4724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4728, %r4720, %r4725;
	// end inline asm
	shr.u32 	%r4733, %r4711, 8;
	// begin inline asm
	lop3.b32 %r4731, %r802, %r4733, %r4712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4736, %r4712, %r4735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4739, %r4731, %r4736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4742, %r813, %r4733, %r4723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4723, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	mov.b32 %r4758, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4769, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4757, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r4755, %r802, %r4757, %r4758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4760, %r4758, %r4759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4763, %r4755, %r4760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4766, %r813, %r4757, %r4769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4771, %r4769, %r4770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4774, %r4766, %r4771;
	// end inline asm
	shr.u32 	%r4779, %r4757, 8;
	// begin inline asm
	lop3.b32 %r4777, %r802, %r4779, %r4758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4782, %r4758, %r4781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4785, %r4777, %r4782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4788, %r813, %r4779, %r4769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4769, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	mov.b32 %r4804, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4815, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4803, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r4801, %r802, %r4803, %r4804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4806, %r4804, %r4805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4809, %r4801, %r4806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4812, %r813, %r4803, %r4815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4817, %r4815, %r4816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4820, %r4812, %r4817;
	// end inline asm
	shr.u32 	%r4825, %r4803, 8;
	// begin inline asm
	lop3.b32 %r4823, %r802, %r4825, %r4804, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4828, %r4804, %r4827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4831, %r4823, %r4828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4834, %r813, %r4825, %r4815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4815, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	// begin inline asm
	mov.b32 %r4850, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4861, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4849, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r4847, %r802, %r4849, %r4850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4852, %r4850, %r4851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4855, %r4847, %r4852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4858, %r813, %r4849, %r4861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4863, %r4861, %r4862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4866, %r4858, %r4863;
	// end inline asm
	shr.u32 	%r4871, %r4849, 8;
	// begin inline asm
	lop3.b32 %r4869, %r802, %r4871, %r4850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4874, %r4850, %r4873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4877, %r4869, %r4874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4880, %r813, %r4871, %r4861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4861, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	// begin inline asm
	mov.b32 %r4896, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4907, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4895, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r4893, %r802, %r4895, %r4896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4898, %r4896, %r4897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4901, %r4893, %r4898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4904, %r813, %r4895, %r4907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4909, %r4907, %r4908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4912, %r4904, %r4909;
	// end inline asm
	shr.u32 	%r4917, %r4895, 8;
	// begin inline asm
	lop3.b32 %r4915, %r802, %r4917, %r4896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4920, %r4896, %r4919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4923, %r4915, %r4920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4926, %r813, %r4917, %r4907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4907, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	// begin inline asm
	mov.b32 %r4942, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4953, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4941, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r4939, %r802, %r4941, %r4942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4944, %r4942, %r4943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4947, %r4939, %r4944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4950, %r813, %r4941, %r4953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4955, %r4953, %r4954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4958, %r4950, %r4955;
	// end inline asm
	shr.u32 	%r4963, %r4941, 8;
	// begin inline asm
	lop3.b32 %r4961, %r802, %r4963, %r4942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4966, %r4942, %r4965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4969, %r4961, %r4966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4972, %r813, %r4963, %r4953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4953, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4983, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4985, %r4983, %r4625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4988, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4990, %r4988, %r4636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4993, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4995, %r4993, %r4647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4998, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5000, %r4998, %r4658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5003, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5005, %r5003, %r4671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5008, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5010, %r5008, %r4682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5013, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5015, %r5013, %r4693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5018, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5020, %r5018, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5023, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5025, %r5023, %r4717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5028, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5030, %r5028, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5033, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5035, %r5033, %r4739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5038, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5040, %r5038, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5043, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5045, %r5043, %r4763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4901;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4958;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4969;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4980;
	// end inline asm
	// begin inline asm
	mov.b32 %r5148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5159, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5145, %r802, %r1827, %r5148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5150, %r5148, %r5149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5153, %r5145, %r5150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5156, %r813, %r1827, %r5159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5161, %r5159, %r5160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5164, %r5156, %r5161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5167, %r802, %r1849, %r5148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5172, %r5148, %r5171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5175, %r5167, %r5172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5178, %r813, %r1849, %r5159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5183, %r5159, %r5182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5186, %r5178, %r5183;
	// end inline asm
	// begin inline asm
	mov.b32 %r5194, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5205, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5191, %r802, %r1873, %r5194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5196, %r5194, %r5195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5199, %r5191, %r5196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5202, %r813, %r1873, %r5205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5207, %r5205, %r5206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5210, %r5202, %r5207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5213, %r802, %r1895, %r5194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5218, %r5194, %r5217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5221, %r5213, %r5218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5224, %r813, %r1895, %r5205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5229, %r5205, %r5228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5232, %r5224, %r5229;
	// end inline asm
	// begin inline asm
	mov.b32 %r5240, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5251, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5237, %r802, %r1919, %r5240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5242, %r5240, %r5241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5245, %r5237, %r5242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5248, %r813, %r1919, %r5251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5253, %r5251, %r5252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5256, %r5248, %r5253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5259, %r802, %r1941, %r5240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5264, %r5240, %r5263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5267, %r5259, %r5264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5270, %r813, %r1941, %r5251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5275, %r5251, %r5274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5278, %r5270, %r5275;
	// end inline asm
	// begin inline asm
	mov.b32 %r5286, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5297, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5283, %r802, %r1965, %r5286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5288, %r5286, %r5287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5291, %r5283, %r5288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5294, %r813, %r1965, %r5297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5299, %r5297, %r5298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5302, %r5294, %r5299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5305, %r802, %r1987, %r5286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5310, %r5286, %r5309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5313, %r5305, %r5310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5316, %r813, %r1987, %r5297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5321, %r5297, %r5320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5324, %r5316, %r5321;
	// end inline asm
	// begin inline asm
	mov.b32 %r5332, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5343, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5329, %r802, %r2011, %r5332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5334, %r5332, %r5333;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5337, %r5329, %r5334;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5340, %r813, %r2011, %r5343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5344, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5345, %r5343, %r5344;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5348, %r5340, %r5345;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5351, %r802, %r2033, %r5332, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5355, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5356, %r5332, %r5355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5359, %r5351, %r5356;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5362, %r813, %r2033, %r5343, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5367, %r5343, %r5366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5370, %r5362, %r5367;
	// end inline asm
	// begin inline asm
	mov.b32 %r5378, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5389, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5375, %r802, %r2057, %r5378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5380, %r5378, %r5379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5383, %r5375, %r5380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5386, %r813, %r2057, %r5389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5391, %r5389, %r5390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5394, %r5386, %r5391;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5397, %r802, %r2079, %r5378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5401, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5402, %r5378, %r5401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5405, %r5397, %r5402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5408, %r813, %r2079, %r5389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5413, %r5389, %r5412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5416, %r5408, %r5413;
	// end inline asm
	// begin inline asm
	mov.b32 %r5424, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5435, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5421, %r802, %r2103, %r5424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5425, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5426, %r5424, %r5425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5429, %r5421, %r5426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5432, %r813, %r2103, %r5435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5436, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5437, %r5435, %r5436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5440, %r5432, %r5437;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5443, %r802, %r2125, %r5424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5448, %r5424, %r5447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5451, %r5443, %r5448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5454, %r813, %r2125, %r5435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5459, %r5435, %r5458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5462, %r5454, %r5459;
	// end inline asm
	// begin inline asm
	mov.b32 %r5470, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5481, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5467, %r802, %r2149, %r5470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5471, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5472, %r5470, %r5471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5475, %r5467, %r5472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5478, %r813, %r2149, %r5481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5483, %r5481, %r5482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5486, %r5478, %r5483;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5489, %r802, %r2171, %r5470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5493, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5494, %r5470, %r5493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5497, %r5489, %r5494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5500, %r813, %r2171, %r5481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5505, %r5481, %r5504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5508, %r5500, %r5505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5511, %r272, %r5153, %r4985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5515, %r272, %r5164, %r4990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5519, %r272, %r5175, %r4995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5523, %r272, %r5186, %r5000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5527, %r272, %r5199, %r5005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5531, %r272, %r5210, %r5010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5535, %r272, %r5221, %r5015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5539, %r272, %r5232, %r5020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5543, %r272, %r5245, %r5025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5547, %r272, %r5256, %r5030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r272, %r5267, %r5035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5555, %r272, %r5278, %r5040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5559, %r272, %r5291, %r5045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5563, %r272, %r5302, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r272, %r5313, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5571, %r272, %r5324, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r290, %r5337, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r290, %r5348, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r290, %r5359, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r290, %r5370, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r290, %r5383, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r290, %r5394, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r290, %r5405, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r290, %r5416, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r290, %r5429, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r290, %r5440, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r290, %r5451, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r290, %r5462, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r290, %r5475, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r290, %r5486, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r290, %r5497, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r290, %r5508, %r5140;
	// end inline asm
	// begin inline asm
	mov.b32 %r5644, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5641, %r802, %r2387, %r5644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5646, %r5644, %r5645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5649, %r5641, %r5646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5652, %r813, %r2387, %r5655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5657, %r5655, %r5656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5660, %r5652, %r5657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5663, %r802, %r2409, %r5644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5668, %r5644, %r5667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5671, %r5663, %r5668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5674, %r813, %r2409, %r5655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5679, %r5655, %r5678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5682, %r5674, %r5679;
	// end inline asm
	// begin inline asm
	mov.b32 %r5690, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5687, %r802, %r2433, %r5690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5692, %r5690, %r5691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5695, %r5687, %r5692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5698, %r813, %r2433, %r5701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5703, %r5701, %r5702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5706, %r5698, %r5703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5709, %r802, %r2455, %r5690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5714, %r5690, %r5713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5717, %r5709, %r5714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5720, %r813, %r2455, %r5701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5725, %r5701, %r5724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5728, %r5720, %r5725;
	// end inline asm
	// begin inline asm
	mov.b32 %r5736, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5747, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5733, %r802, %r2479, %r5736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5738, %r5736, %r5737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5741, %r5733, %r5738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5744, %r813, %r2479, %r5747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5749, %r5747, %r5748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5752, %r5744, %r5749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5755, %r802, %r2501, %r5736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5760, %r5736, %r5759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5763, %r5755, %r5760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5766, %r813, %r2501, %r5747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5747, %r5770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5774, %r5766, %r5771;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5793, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5779, %r802, %r2525, %r5782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5782, %r5783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5787, %r5779, %r5784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5790, %r813, %r2525, %r5793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5795, %r5793, %r5794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5798, %r5790, %r5795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5801, %r802, %r2547, %r5782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5806, %r5782, %r5805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5809, %r5801, %r5806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5812, %r813, %r2547, %r5793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5793, %r5816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5820, %r5812, %r5817;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5825, %r802, %r2571, %r5828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5830, %r5828, %r5829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5833, %r5825, %r5830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5836, %r813, %r2571, %r5839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5841, %r5839, %r5840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5844, %r5836, %r5841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5847, %r802, %r2593, %r5828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5852, %r5828, %r5851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5855, %r5847, %r5852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5858, %r813, %r2593, %r5839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5839, %r5862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5866, %r5858, %r5863;
	// end inline asm
	// begin inline asm
	mov.b32 %r5874, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5871, %r802, %r2617, %r5874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5875, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5874, %r5875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5879, %r5871, %r5876;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5882, %r813, %r2617, %r5885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5885, %r5886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5890, %r5882, %r5887;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5893, %r802, %r2639, %r5874, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5898, %r5874, %r5897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5901, %r5893, %r5898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5904, %r813, %r2639, %r5885, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5885, %r5908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5912, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	mov.b32 %r5920, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5931, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5917, %r802, %r2663, %r5920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5920, %r5921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5925, %r5917, %r5922;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5928, %r813, %r2663, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5932, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5931, %r5932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5936, %r5928, %r5933;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5939, %r802, %r2685, %r5920, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5920, %r5943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5947, %r5939, %r5944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5950, %r813, %r2685, %r5931, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5931, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5977, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5963, %r802, %r2709, %r5966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5966, %r5967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5971, %r5963, %r5968;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5974, %r813, %r2709, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5979, %r5977, %r5978;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5982, %r5974, %r5979;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5985, %r802, %r2731, %r5966, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5990, %r5966, %r5989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5993, %r5985, %r5990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5996, %r813, %r2731, %r5977, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5977, %r6000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6004, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6007, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6009, %r6007, %r5649, %r5511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6013, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6015, %r6013, %r5660, %r5515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6019, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6021, %r6019, %r5671, %r5519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6025, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6027, %r6025, %r5682, %r5523;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6031, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6033, %r6031, %r5695, %r5527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6037, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6039, %r6037, %r5706, %r5531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6043, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6045, %r6043, %r5717, %r5535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6049, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6051, %r6049, %r5728, %r5539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6055, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6057, %r6055, %r5741, %r5543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6061, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6063, %r6061, %r5752, %r5547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6067, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6069, %r6067, %r5763, %r5551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6073, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6075, %r6073, %r5774, %r5555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6079, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6081, %r6079, %r5787, %r5559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6085, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6087, %r6085, %r5798, %r5563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6091, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6093, %r6091, %r5809, %r5567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6097, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6099, %r6097, %r5820, %r5571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6103, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6105, %r6103, %r5833, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6109, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6111, %r6109, %r5844, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6115, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6117, %r6115, %r5855, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6121, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6123, %r6121, %r5866, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6127, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6129, %r6127, %r5879, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6133, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6135, %r6133, %r5890, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6139, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6141, %r6139, %r5901, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6147, %r6145, %r5912, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6151, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6153, %r6151, %r5925, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6157, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6159, %r6157, %r5936, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6165, %r6163, %r5947, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6169, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6171, %r6169, %r5958, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6177, %r6175, %r5971, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6181, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6183, %r6181, %r5982, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6187, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6189, %r6187, %r5993, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6195, %r6193, %r6004, %r5635;
	// end inline asm
	// begin inline asm
	mov.b32 %r6204, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6215, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6201, %r802, %r803, %r6204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6206, %r6204, %r6205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6209, %r6201, %r6206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6212, %r813, %r803, %r6215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6217, %r6215, %r6216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6220, %r6212, %r6217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6223, %r802, %r825, %r6204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6228, %r6204, %r6227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6231, %r6223, %r6228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r813, %r825, %r6215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6215, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	mov.b32 %r6250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6261, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6247, %r802, %r849, %r6250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6252, %r6250, %r6251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6255, %r6247, %r6252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6258, %r813, %r849, %r6261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6263, %r6261, %r6262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6266, %r6258, %r6263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6269, %r802, %r871, %r6250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6274, %r6250, %r6273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6277, %r6269, %r6274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r813, %r871, %r6261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6261, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6293, %r802, %r895, %r6296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6298, %r6296, %r6297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6301, %r6293, %r6298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6304, %r813, %r895, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6309, %r6307, %r6308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6312, %r6304, %r6309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6315, %r802, %r917, %r6296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6320, %r6296, %r6319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6323, %r6315, %r6320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r813, %r917, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6307, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r802, %r941, %r6342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6342, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r813, %r941, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6353, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6361, %r802, %r963, %r6342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6366, %r6342, %r6365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6369, %r6361, %r6366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r813, %r963, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6353, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r802, %r987, %r6388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6388, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6396, %r813, %r987, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6401, %r6399, %r6400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6404, %r6396, %r6401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6407, %r802, %r1009, %r6388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6412, %r6388, %r6411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6415, %r6407, %r6412;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r813, %r1009, %r6399, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6399, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	mov.b32 %r6434, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6445, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6431, %r802, %r1033, %r6434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6436, %r6434, %r6435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6439, %r6431, %r6436;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6442, %r813, %r1033, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6447, %r6445, %r6446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6450, %r6442, %r6447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6453, %r802, %r1055, %r6434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6458, %r6434, %r6457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6461, %r6453, %r6458;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r813, %r1055, %r6445, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6445, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	mov.b32 %r6480, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6491, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r802, %r1079, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6480, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6488, %r813, %r1079, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6493, %r6491, %r6492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6496, %r6488, %r6493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6499, %r802, %r1101, %r6480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6504, %r6480, %r6503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6507, %r6499, %r6504;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r813, %r1101, %r6491, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6491, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	mov.b32 %r6526, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6537, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6523, %r802, %r1125, %r6526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6528, %r6526, %r6527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6531, %r6523, %r6528;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6534, %r813, %r1125, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6539, %r6537, %r6538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6542, %r6534, %r6539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6545, %r802, %r1147, %r6526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6550, %r6526, %r6549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6553, %r6545, %r6550;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r813, %r1147, %r6537, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6537, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6702, %r344, %r6209, %r6009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6699, %r344, %r6220, %r6015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6711, %r344, %r6231, %r6021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r344, %r6242, %r6027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6720, %r344, %r6255, %r6033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r344, %r6266, %r6039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6729, %r344, %r6277, %r6045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r344, %r6288, %r6051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r344, %r6301, %r6057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r344, %r6312, %r6063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6747, %r344, %r6323, %r6069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r344, %r6334, %r6075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r344, %r6347, %r6081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r344, %r6358, %r6087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6765, %r344, %r6369, %r6093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r344, %r6380, %r6099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r362, %r6393, %r6105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r362, %r6404, %r6111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6783, %r362, %r6415, %r6117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r362, %r6426, %r6123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r362, %r6439, %r6129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r362, %r6450, %r6135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6801, %r362, %r6461, %r6141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r362, %r6472, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r362, %r6485, %r6153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r362, %r6496, %r6159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6819, %r362, %r6507, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r362, %r6518, %r6171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r362, %r6531, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r362, %r6542, %r6183;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6837, %r362, %r6553, %r6189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r362, %r6564, %r6195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6695, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6697, %r6695, %r6699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6700, %r426, %r6702, %r6697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6704, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6706, %r6704, %r6708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6709, %r426, %r6711, %r6706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6713, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6715, %r6713, %r6717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6718, %r426, %r6720, %r6715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6722, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6724, %r6722, %r6726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r426, %r6729, %r6724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6731, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6733, %r6731, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6736, %r426, %r6738, %r6733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6740, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6742, %r6740, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r426, %r6747, %r6742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6749, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6751, %r6749, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6754, %r426, %r6756, %r6751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6758, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6760, %r6758, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r426, %r6765, %r6760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6767, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6769, %r6767, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r429, %r6774, %r6769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6776, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6778, %r6776, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r429, %r6783, %r6778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6785, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6787, %r6785, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r429, %r6792, %r6787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6794, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6796, %r6794, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r429, %r6801, %r6796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6803, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6805, %r6803, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r429, %r6810, %r6805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6812, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6814, %r6812, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r429, %r6819, %r6814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6821, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6823, %r6821, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r429, %r6828, %r6823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6830, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6832, %r6830, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r429, %r6837, %r6832;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6839, %r432, %r6702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r426, %r6699, %r6839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6846, %r432, %r6711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r426, %r6708, %r6846;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6853, %r432, %r6720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r426, %r6717, %r6853;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r432, %r6729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r426, %r6726, %r6860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6867, %r432, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r426, %r6735, %r6867;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6874, %r432, %r6747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r426, %r6744, %r6874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6881, %r432, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6884, %r426, %r6753, %r6881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6888, %r432, %r6765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6891, %r426, %r6762, %r6888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6895, %r435, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r429, %r6771, %r6895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6902, %r435, %r6783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6905, %r429, %r6780, %r6902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6909, %r435, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6912, %r429, %r6789, %r6909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6916, %r435, %r6801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6919, %r429, %r6798, %r6916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6923, %r435, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6926, %r429, %r6807, %r6923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6930, %r435, %r6819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6933, %r429, %r6816, %r6930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6937, %r435, %r6828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6940, %r429, %r6825, %r6937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6944, %r435, %r6837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6947, %r429, %r6834, %r6944;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7118, %r7115}, {%r474, %r480, %r477, %r483}, {%r6700, %r6842}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7127, %r7124}, {%r474, %r480, %r477, %r483}, {%r6709, %r6849}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7136, %r7133}, {%r474, %r480, %r477, %r483}, {%r6718, %r6856}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7145, %r7142}, {%r474, %r480, %r477, %r483}, {%r6727, %r6863}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7154, %r7151}, {%r474, %r480, %r477, %r483}, {%r6736, %r6870}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7163, %r7160}, {%r474, %r480, %r477, %r483}, {%r6745, %r6877}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7172, %r7169}, {%r474, %r480, %r477, %r483}, {%r6754, %r6884}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7181, %r7178}, {%r474, %r480, %r477, %r483}, {%r6763, %r6891}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7190, %r7187}, {%r474, %r480, %r477, %r483}, {%r6772, %r6898}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7199, %r7196}, {%r474, %r480, %r477, %r483}, {%r6781, %r6905}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7208, %r7205}, {%r474, %r480, %r477, %r483}, {%r6790, %r6912}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7217, %r7214}, {%r474, %r480, %r477, %r483}, {%r6799, %r6919}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7226, %r7223}, {%r474, %r480, %r477, %r483}, {%r6808, %r6926}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7235, %r7232}, {%r474, %r480, %r477, %r483}, {%r6817, %r6933}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7244, %r7241}, {%r474, %r480, %r477, %r483}, {%r6826, %r6940}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7253, %r7250}, {%r474, %r480, %r477, %r483}, {%r6835, %r6947}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7111, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7113, %r7111, %r7115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7116, %r521, %r7118, %r7113;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7120, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7122, %r7120, %r7124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7125, %r521, %r7127, %r7122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7129, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7131, %r7129, %r7133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7134, %r521, %r7136, %r7131;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7138, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7140, %r7138, %r7142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7143, %r521, %r7145, %r7140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7147, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7149, %r7147, %r7151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7152, %r521, %r7154, %r7149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7156, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7158, %r7156, %r7160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7161, %r521, %r7163, %r7158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7165, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7167, %r7165, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7170, %r521, %r7172, %r7167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7174, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7176, %r7174, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7179, %r521, %r7181, %r7176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7183, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7185, %r7183, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7188, %r521, %r7190, %r7185;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7192, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7194, %r7192, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7197, %r521, %r7199, %r7194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7201, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7203, %r7201, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7206, %r521, %r7208, %r7203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7210, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7212, %r7210, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7215, %r521, %r7217, %r7212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7219, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7221, %r7219, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7224, %r521, %r7226, %r7221;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7228, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7230, %r7228, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7233, %r521, %r7235, %r7230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7237, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7239, %r7237, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7242, %r521, %r7244, %r7239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7246, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7248, %r7246, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7251, %r521, %r7253, %r7248;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7255, %r524, %r7118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7258, %r521, %r7115, %r7255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7262, %r524, %r7127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7265, %r521, %r7124, %r7262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7269, %r524, %r7136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7272, %r521, %r7133, %r7269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r524, %r7145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r521, %r7142, %r7276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7283, %r524, %r7154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7286, %r521, %r7151, %r7283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r524, %r7163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r521, %r7160, %r7290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7297, %r524, %r7172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7300, %r521, %r7169, %r7297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7304, %r524, %r7181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7307, %r521, %r7178, %r7304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7311, %r524, %r7190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7314, %r521, %r7187, %r7311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7318, %r524, %r7199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7321, %r521, %r7196, %r7318;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7325, %r524, %r7208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7328, %r521, %r7205, %r7325;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7332, %r524, %r7217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7335, %r521, %r7214, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7339, %r524, %r7226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7342, %r521, %r7223, %r7339;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7346, %r524, %r7235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7349, %r521, %r7232, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7353, %r524, %r7244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7356, %r521, %r7241, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7360, %r524, %r7253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7363, %r521, %r7250, %r7360;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7656, %r7659}, {%r564, %r570, %r567, %r573}, {%r7116, %r7258}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7662, %r7665}, {%r564, %r570, %r567, %r573}, {%r7125, %r7265}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7668, %r7671}, {%r564, %r570, %r567, %r573}, {%r7134, %r7272}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7674, %r7677}, {%r564, %r570, %r567, %r573}, {%r7143, %r7279}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7680, %r7683}, {%r564, %r570, %r567, %r573}, {%r7152, %r7286}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7686, %r7689}, {%r564, %r570, %r567, %r573}, {%r7161, %r7293}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7692, %r7695}, {%r564, %r570, %r567, %r573}, {%r7170, %r7300}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7698, %r7701}, {%r564, %r570, %r567, %r573}, {%r7179, %r7307}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7657, %r7660}, {%r564, %r570, %r567, %r573}, {%r7188, %r7314}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7663, %r7666}, {%r564, %r570, %r567, %r573}, {%r7197, %r7321}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7669, %r7672}, {%r564, %r570, %r567, %r573}, {%r7206, %r7328}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7675, %r7678}, {%r564, %r570, %r567, %r573}, {%r7215, %r7335}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7681, %r7684}, {%r564, %r570, %r567, %r573}, {%r7224, %r7342}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7687, %r7690}, {%r564, %r570, %r567, %r573}, {%r7233, %r7349}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7693, %r7696}, {%r564, %r570, %r567, %r573}, {%r7242, %r7356}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7699, %r7702}, {%r564, %r570, %r567, %r573}, {%r7251, %r7363}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7656, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7703, %r7656, %r7657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7706, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7709, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7712, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7715, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7718, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7721, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7724, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7748, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7751, %r12, %r7655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7754, %r12, %r7658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7757, %r12, %r7661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7760, %r12, %r7664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7763, %r12, %r7667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7766, %r12, %r7670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7769, %r12, %r7673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7772, %r12, %r7676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r12, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r12, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r12, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r12, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r12, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r12, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r12, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r12, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r13, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r13, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r13, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r13, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r13, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r13, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r13, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r13, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r13, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r13, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r13, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r13, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r13, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r13, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r13, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r13, %r7748;
	// end inline asm
	// begin inline asm
	mov.b32 %r7847, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7848, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7849, %r7751, %r7847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7852, %r7849, %r7848;
	// end inline asm
	// begin inline asm
	mov.b32 %r7855, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7856, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7857, %r7754, %r7855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7860, %r7857, %r7856;
	// end inline asm
	// begin inline asm
	mov.b32 %r7863, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7864, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7865, %r7757, %r7863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7868, %r7865, %r7864;
	// end inline asm
	// begin inline asm
	mov.b32 %r7871, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7872, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7873, %r7760, %r7871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7876, %r7873, %r7872;
	// end inline asm
	// begin inline asm
	mov.b32 %r7879, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7880, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7881, %r7763, %r7879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7884, %r7881, %r7880;
	// end inline asm
	// begin inline asm
	mov.b32 %r7887, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7889, %r7766, %r7887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7892, %r7889, %r7888;
	// end inline asm
	// begin inline asm
	mov.b32 %r7895, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7897, %r7769, %r7895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7900, %r7897, %r7896;
	// end inline asm
	// begin inline asm
	mov.b32 %r7903, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7905, %r7772, %r7903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7908, %r7905, %r7904;
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7913, %r7775, %r7911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7916, %r7913, %r7912;
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7921, %r7778, %r7919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7924, %r7921, %r7920;
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7929, %r7781, %r7927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7932, %r7929, %r7928;
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7937, %r7784, %r7935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7940, %r7937, %r7936;
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7945, %r7787, %r7943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7948, %r7945, %r7944;
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7953, %r7790, %r7951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7956, %r7953, %r7952;
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7961, %r7793, %r7959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7964, %r7961, %r7960;
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7969, %r7796, %r7967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7972, %r7969, %r7968;
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7977, %r7799, %r7975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7980, %r7977, %r7976;
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7985, %r7802, %r7983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7988, %r7985, %r7984;
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7993, %r7805, %r7991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7996, %r7993, %r7992;
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8001, %r7808, %r7999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8004, %r8001, %r8000;
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8009, %r7811, %r8007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8012, %r8009, %r8008;
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8017, %r7814, %r8015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8020, %r8017, %r8016;
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8025, %r7817, %r8023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8028, %r8025, %r8024;
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8033, %r7820, %r8031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8036, %r8033, %r8032;
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8041, %r7823, %r8039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8044, %r8041, %r8040;
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8049, %r7826, %r8047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8052, %r8049, %r8048;
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8057, %r7829, %r8055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8060, %r8057, %r8056;
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8065, %r7832, %r8063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8068, %r8065, %r8064;
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8073, %r7835, %r8071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8076, %r8073, %r8072;
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8081, %r7838, %r8079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8084, %r8081, %r8080;
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8089, %r7841, %r8087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8092, %r8089, %r8088;
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8097, %r7844, %r8095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8100, %r8097, %r8096;
	// end inline asm
	// begin inline asm
	mov.b32 %r8106, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8105, %r8106, %r8104;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8108, %r7852, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8112, %r8106, %r8111;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8115, %r7860, %r8112;
	// end inline asm
	// begin inline asm
	mov.b32 %r8118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8119, %r8106, %r8118;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8122, %r7868, %r8119;
	// end inline asm
	// begin inline asm
	mov.b32 %r8125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8126, %r8106, %r8125;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8129, %r7876, %r8126;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8132, %r8108, %r8122, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8136, %r8115, %r8129, %r4319;
	// end inline asm
	shl.b32 	%r8143, %r8136, 4;
	// begin inline asm
	lop3.b32 %r8140, %r4325, %r8132, %r8143, 202;
	// end inline asm
	xor.b32  	%r16079, %r8140, -2004318072;
	// begin inline asm
	mov.b32 %r8147, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8146, %r8147, %r8145;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8149, %r7884, %r8146;
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8153, %r8147, %r8152;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8156, %r7892, %r8153;
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8160, %r8147, %r8159;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8163, %r7900, %r8160;
	// end inline asm
	// begin inline asm
	mov.b32 %r8166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8167, %r8147, %r8166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8170, %r7908, %r8167;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8173, %r8149, %r8163, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8177, %r8156, %r8170, %r4319;
	// end inline asm
	shl.b32 	%r8184, %r8177, 4;
	// begin inline asm
	lop3.b32 %r8181, %r4325, %r8173, %r8184, 202;
	// end inline asm
	xor.b32  	%r16080, %r8181, -2004318072;
	// begin inline asm
	mov.b32 %r8188, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8187, %r8188, %r8186;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8190, %r7916, %r8187;
	// end inline asm
	// begin inline asm
	mov.b32 %r8193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8194, %r8188, %r8193;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8197, %r7924, %r8194;
	// end inline asm
	// begin inline asm
	mov.b32 %r8200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8201, %r8188, %r8200;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8204, %r7932, %r8201;
	// end inline asm
	// begin inline asm
	mov.b32 %r8207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8208, %r8188, %r8207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8211, %r7940, %r8208;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8214, %r8190, %r8204, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8218, %r8197, %r8211, %r4319;
	// end inline asm
	shl.b32 	%r8225, %r8218, 4;
	// begin inline asm
	lop3.b32 %r8222, %r4325, %r8214, %r8225, 202;
	// end inline asm
	xor.b32  	%r16081, %r8222, -2004318072;
	// begin inline asm
	mov.b32 %r8229, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8228, %r8229, %r8227;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8231, %r7948, %r8228;
	// end inline asm
	// begin inline asm
	mov.b32 %r8234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8235, %r8229, %r8234;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8238, %r7956, %r8235;
	// end inline asm
	// begin inline asm
	mov.b32 %r8241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8242, %r8229, %r8241;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8245, %r7964, %r8242;
	// end inline asm
	// begin inline asm
	mov.b32 %r8248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8249, %r8229, %r8248;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8252, %r7972, %r8249;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8255, %r8231, %r8245, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8259, %r8238, %r8252, %r4319;
	// end inline asm
	shl.b32 	%r8266, %r8259, 4;
	// begin inline asm
	lop3.b32 %r8263, %r4325, %r8255, %r8266, 202;
	// end inline asm
	xor.b32  	%r16082, %r8263, -2004318072;
	// begin inline asm
	mov.b32 %r8270, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8269, %r8270, %r8268;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8272, %r7980, %r8269;
	// end inline asm
	// begin inline asm
	mov.b32 %r8275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8276, %r8270, %r8275;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8279, %r7988, %r8276;
	// end inline asm
	// begin inline asm
	mov.b32 %r8282, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8283, %r8270, %r8282;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8286, %r7996, %r8283;
	// end inline asm
	// begin inline asm
	mov.b32 %r8289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8290, %r8270, %r8289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8293, %r8004, %r8290;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8296, %r8272, %r8286, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8300, %r8279, %r8293, %r4319;
	// end inline asm
	shl.b32 	%r8307, %r8300, 4;
	// begin inline asm
	lop3.b32 %r8304, %r4325, %r8296, %r8307, 202;
	// end inline asm
	xor.b32  	%r16083, %r8304, -2004318072;
	// begin inline asm
	mov.b32 %r8311, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8310, %r8311, %r8309;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8313, %r8012, %r8310;
	// end inline asm
	// begin inline asm
	mov.b32 %r8316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8317, %r8311, %r8316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8320, %r8020, %r8317;
	// end inline asm
	// begin inline asm
	mov.b32 %r8323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8324, %r8311, %r8323;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8327, %r8028, %r8324;
	// end inline asm
	// begin inline asm
	mov.b32 %r8330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8331, %r8311, %r8330;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8334, %r8036, %r8331;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8337, %r8313, %r8327, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8341, %r8320, %r8334, %r4319;
	// end inline asm
	shl.b32 	%r8348, %r8341, 4;
	// begin inline asm
	lop3.b32 %r8345, %r4325, %r8337, %r8348, 202;
	// end inline asm
	xor.b32  	%r16084, %r8345, -2004318072;
	// begin inline asm
	mov.b32 %r8352, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8351, %r8352, %r8350;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8354, %r8044, %r8351;
	// end inline asm
	// begin inline asm
	mov.b32 %r8357, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8358, %r8352, %r8357;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8361, %r8052, %r8358;
	// end inline asm
	// begin inline asm
	mov.b32 %r8364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8365, %r8352, %r8364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8368, %r8060, %r8365;
	// end inline asm
	// begin inline asm
	mov.b32 %r8371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8372, %r8352, %r8371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8375, %r8068, %r8372;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8378, %r8354, %r8368, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8382, %r8361, %r8375, %r4319;
	// end inline asm
	shl.b32 	%r8389, %r8382, 4;
	// begin inline asm
	lop3.b32 %r8386, %r4325, %r8378, %r8389, 202;
	// end inline asm
	xor.b32  	%r16085, %r8386, -2004318072;
	// begin inline asm
	mov.b32 %r8393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8392, %r8393, %r8391;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8395, %r8076, %r8392;
	// end inline asm
	// begin inline asm
	mov.b32 %r8398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8399, %r8393, %r8398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8402, %r8084, %r8399;
	// end inline asm
	// begin inline asm
	mov.b32 %r8405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8406, %r8393, %r8405;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8409, %r8092, %r8406;
	// end inline asm
	// begin inline asm
	mov.b32 %r8412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8413, %r8393, %r8412;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8416, %r8100, %r8413;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8419, %r8395, %r8409, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8423, %r8402, %r8416, %r4319;
	// end inline asm
	shl.b32 	%r8430, %r8423, 4;
	// begin inline asm
	lop3.b32 %r8427, %r4325, %r8419, %r8430, 202;
	// end inline asm
	xor.b32  	%r16086, %r8427, -2004318072;
	st.shared.u32 	[%rd82], %r16079;
	st.shared.u32 	[%rd83], %r16080;
	st.shared.u32 	[%rd84], %r16081;
	st.shared.u32 	[%rd85], %r16082;
	st.shared.u32 	[%rd86], %r16083;
	st.shared.u32 	[%rd87], %r16084;
	st.shared.u32 	[%rd88], %r16085;
	st.shared.u32 	[%rd89], %r16086;
	ld.shared.u32 	%r16201, [%rd74];
	ld.shared.u32 	%r16202, [%rd75];
	ld.shared.u32 	%r16203, [%rd76];
	ld.shared.u32 	%r16204, [%rd77];
	ld.shared.u32 	%r16213, [%rd78];
	ld.shared.u32 	%r16214, [%rd79];
	ld.shared.u32 	%r16215, [%rd80];
	ld.shared.u32 	%r16216, [%rd81];
	// begin inline asm
	mov.b32 %r8436, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8447, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8435, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r8433, %r802, %r8435, %r8436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8438, %r8436, %r8437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8441, %r8433, %r8438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8444, %r813, %r8435, %r8447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8447, %r8448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8452, %r8444, %r8449;
	// end inline asm
	shr.u32 	%r8457, %r8435, 8;
	// begin inline asm
	lop3.b32 %r8455, %r802, %r8457, %r8436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8460, %r8436, %r8459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8463, %r8455, %r8460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8466, %r813, %r8457, %r8447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8447, %r8470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8474, %r8466, %r8471;
	// end inline asm
	// begin inline asm
	mov.b32 %r8482, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8493, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8481, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r8479, %r802, %r8481, %r8482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8484, %r8482, %r8483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8487, %r8479, %r8484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8490, %r813, %r8481, %r8493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8495, %r8493, %r8494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8498, %r8490, %r8495;
	// end inline asm
	shr.u32 	%r8503, %r8481, 8;
	// begin inline asm
	lop3.b32 %r8501, %r802, %r8503, %r8482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8506, %r8482, %r8505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8509, %r8501, %r8506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8512, %r813, %r8503, %r8493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8517, %r8493, %r8516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8520, %r8512, %r8517;
	// end inline asm
	// begin inline asm
	mov.b32 %r8528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8539, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8527, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r8525, %r802, %r8527, %r8528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8530, %r8528, %r8529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8533, %r8525, %r8530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8536, %r813, %r8527, %r8539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8541, %r8539, %r8540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8544, %r8536, %r8541;
	// end inline asm
	shr.u32 	%r8549, %r8527, 8;
	// begin inline asm
	lop3.b32 %r8547, %r802, %r8549, %r8528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8552, %r8528, %r8551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8555, %r8547, %r8552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8558, %r813, %r8549, %r8539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8563, %r8539, %r8562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8566, %r8558, %r8563;
	// end inline asm
	// begin inline asm
	mov.b32 %r8574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8585, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8573, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r8571, %r802, %r8573, %r8574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8576, %r8574, %r8575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8579, %r8571, %r8576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8582, %r813, %r8573, %r8585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8587, %r8585, %r8586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8590, %r8582, %r8587;
	// end inline asm
	shr.u32 	%r8595, %r8573, 8;
	// begin inline asm
	lop3.b32 %r8593, %r802, %r8595, %r8574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8598, %r8574, %r8597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8601, %r8593, %r8598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8604, %r813, %r8595, %r8585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8609, %r8585, %r8608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8612, %r8604, %r8609;
	// end inline asm
	// begin inline asm
	mov.b32 %r8620, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8631, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8619, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r8617, %r802, %r8619, %r8620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8622, %r8620, %r8621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8625, %r8617, %r8622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8628, %r813, %r8619, %r8631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8633, %r8631, %r8632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8636, %r8628, %r8633;
	// end inline asm
	shr.u32 	%r8641, %r8619, 8;
	// begin inline asm
	lop3.b32 %r8639, %r802, %r8641, %r8620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8644, %r8620, %r8643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8647, %r8639, %r8644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8650, %r813, %r8641, %r8631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8655, %r8631, %r8654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8658, %r8650, %r8655;
	// end inline asm
	// begin inline asm
	mov.b32 %r8666, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8677, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8665, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r8663, %r802, %r8665, %r8666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8668, %r8666, %r8667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8671, %r8663, %r8668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8674, %r813, %r8665, %r8677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8679, %r8677, %r8678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8682, %r8674, %r8679;
	// end inline asm
	shr.u32 	%r8687, %r8665, 8;
	// begin inline asm
	lop3.b32 %r8685, %r802, %r8687, %r8666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8690, %r8666, %r8689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8693, %r8685, %r8690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8696, %r813, %r8687, %r8677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8701, %r8677, %r8700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8704, %r8696, %r8701;
	// end inline asm
	// begin inline asm
	mov.b32 %r8712, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8723, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8711, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r8709, %r802, %r8711, %r8712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8714, %r8712, %r8713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8717, %r8709, %r8714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8720, %r813, %r8711, %r8723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8725, %r8723, %r8724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8728, %r8720, %r8725;
	// end inline asm
	shr.u32 	%r8733, %r8711, 8;
	// begin inline asm
	lop3.b32 %r8731, %r802, %r8733, %r8712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8736, %r8712, %r8735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8739, %r8731, %r8736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8742, %r813, %r8733, %r8723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8747, %r8723, %r8746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8750, %r8742, %r8747;
	// end inline asm
	// begin inline asm
	mov.b32 %r8758, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8769, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8757, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r8755, %r802, %r8757, %r8758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8760, %r8758, %r8759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8763, %r8755, %r8760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8766, %r813, %r8757, %r8769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8771, %r8769, %r8770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8774, %r8766, %r8771;
	// end inline asm
	shr.u32 	%r8779, %r8757, 8;
	// begin inline asm
	lop3.b32 %r8777, %r802, %r8779, %r8758, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8782, %r8758, %r8781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8785, %r8777, %r8782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8788, %r813, %r8779, %r8769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8793, %r8769, %r8792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8796, %r8788, %r8793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8799, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8801, %r8799, %r8441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8804, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8806, %r8804, %r8452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8809, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8811, %r8809, %r8463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8814, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8816, %r8814, %r8474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8819, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8821, %r8819, %r8487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8824, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8826, %r8824, %r8498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8829, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8831, %r8829, %r8509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8834, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8836, %r8834, %r8520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8839, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8841, %r8839, %r8533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8844, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8846, %r8844, %r8544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8849, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8851, %r8849, %r8555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8854, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8856, %r8854, %r8566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8859, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8861, %r8859, %r8579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8785;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8796;
	// end inline asm
	// begin inline asm
	mov.b32 %r8964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8975, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8961, %r802, %r2387, %r8964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8966, %r8964, %r8965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8969, %r8961, %r8966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8972, %r813, %r2387, %r8975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8977, %r8975, %r8976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8980, %r8972, %r8977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8983, %r802, %r2409, %r8964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8988, %r8964, %r8987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8991, %r8983, %r8988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8994, %r813, %r2409, %r8975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8999, %r8975, %r8998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9002, %r8994, %r8999;
	// end inline asm
	// begin inline asm
	mov.b32 %r9010, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9021, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9007, %r802, %r2433, %r9010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9012, %r9010, %r9011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9015, %r9007, %r9012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9018, %r813, %r2433, %r9021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9023, %r9021, %r9022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9026, %r9018, %r9023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9029, %r802, %r2455, %r9010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9034, %r9010, %r9033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9037, %r9029, %r9034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9040, %r813, %r2455, %r9021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9045, %r9021, %r9044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9048, %r9040, %r9045;
	// end inline asm
	// begin inline asm
	mov.b32 %r9056, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9067, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9053, %r802, %r2479, %r9056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9058, %r9056, %r9057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9061, %r9053, %r9058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9064, %r813, %r2479, %r9067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9069, %r9067, %r9068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9072, %r9064, %r9069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9075, %r802, %r2501, %r9056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9080, %r9056, %r9079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9083, %r9075, %r9080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9086, %r813, %r2501, %r9067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9091, %r9067, %r9090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9094, %r9086, %r9091;
	// end inline asm
	// begin inline asm
	mov.b32 %r9102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9113, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9099, %r802, %r2525, %r9102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9104, %r9102, %r9103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9107, %r9099, %r9104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9110, %r813, %r2525, %r9113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9115, %r9113, %r9114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9118, %r9110, %r9115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9121, %r802, %r2547, %r9102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9126, %r9102, %r9125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9129, %r9121, %r9126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9132, %r813, %r2547, %r9113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9137, %r9113, %r9136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9140, %r9132, %r9137;
	// end inline asm
	// begin inline asm
	mov.b32 %r9148, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9159, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9145, %r802, %r2571, %r9148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9150, %r9148, %r9149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9153, %r9145, %r9150;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9156, %r813, %r2571, %r9159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9161, %r9159, %r9160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9164, %r9156, %r9161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9167, %r802, %r2593, %r9148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9172, %r9148, %r9171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9175, %r9167, %r9172;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9178, %r813, %r2593, %r9159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9183, %r9159, %r9182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9186, %r9178, %r9183;
	// end inline asm
	// begin inline asm
	mov.b32 %r9194, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9205, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9191, %r802, %r2617, %r9194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9196, %r9194, %r9195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9199, %r9191, %r9196;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9202, %r813, %r2617, %r9205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9207, %r9205, %r9206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9210, %r9202, %r9207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9213, %r802, %r2639, %r9194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9218, %r9194, %r9217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9221, %r9213, %r9218;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9224, %r813, %r2639, %r9205, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9229, %r9205, %r9228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9232, %r9224, %r9229;
	// end inline asm
	// begin inline asm
	mov.b32 %r9240, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9251, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9237, %r802, %r2663, %r9240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9241, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9242, %r9240, %r9241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9245, %r9237, %r9242;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9248, %r813, %r2663, %r9251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9252, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9253, %r9251, %r9252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9256, %r9248, %r9253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9259, %r802, %r2685, %r9240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9264, %r9240, %r9263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9267, %r9259, %r9264;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9270, %r813, %r2685, %r9251, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9275, %r9251, %r9274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9278, %r9270, %r9275;
	// end inline asm
	// begin inline asm
	mov.b32 %r9286, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9297, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9283, %r802, %r2709, %r9286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9287, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9288, %r9286, %r9287;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9291, %r9283, %r9288;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9294, %r813, %r2709, %r9297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9299, %r9297, %r9298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9302, %r9294, %r9299;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9305, %r802, %r2731, %r9286, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9309, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9310, %r9286, %r9309;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9313, %r9305, %r9310;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9316, %r813, %r2731, %r9297, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9321, %r9297, %r9320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9324, %r9316, %r9321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9327, %r272, %r8969, %r8801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9331, %r272, %r8980, %r8806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9335, %r272, %r8991, %r8811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9339, %r272, %r9002, %r8816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9343, %r272, %r9015, %r8821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9347, %r272, %r9026, %r8826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9351, %r272, %r9037, %r8831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9355, %r272, %r9048, %r8836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9359, %r272, %r9061, %r8841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9363, %r272, %r9072, %r8846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9367, %r272, %r9083, %r8851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9371, %r272, %r9094, %r8856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9375, %r272, %r9107, %r8861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9379, %r272, %r9118, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9383, %r272, %r9129, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9387, %r272, %r9140, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r290, %r9153, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r290, %r9164, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r290, %r9175, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r290, %r9186, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r290, %r9199, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r290, %r9210, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r290, %r9221, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r290, %r9232, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r290, %r9245, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r290, %r9256, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r290, %r9267, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r290, %r9278, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r290, %r9291, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r290, %r9302, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r290, %r9313, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r290, %r9324, %r8956;
	// end inline asm
	// begin inline asm
	mov.b32 %r9460, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9471, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9457, %r802, %r803, %r9460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9462, %r9460, %r9461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9465, %r9457, %r9462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9468, %r813, %r803, %r9471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9473, %r9471, %r9472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9476, %r9468, %r9473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9479, %r802, %r825, %r9460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9484, %r9460, %r9483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9487, %r9479, %r9484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9490, %r813, %r825, %r9471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9495, %r9471, %r9494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9498, %r9490, %r9495;
	// end inline asm
	// begin inline asm
	mov.b32 %r9506, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9517, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9503, %r802, %r849, %r9506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9508, %r9506, %r9507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9511, %r9503, %r9508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9514, %r813, %r849, %r9517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9519, %r9517, %r9518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9522, %r9514, %r9519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9525, %r802, %r871, %r9506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9530, %r9506, %r9529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9533, %r9525, %r9530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9536, %r813, %r871, %r9517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9541, %r9517, %r9540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9544, %r9536, %r9541;
	// end inline asm
	// begin inline asm
	mov.b32 %r9552, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9563, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9549, %r802, %r895, %r9552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9554, %r9552, %r9553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9557, %r9549, %r9554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9560, %r813, %r895, %r9563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9565, %r9563, %r9564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9568, %r9560, %r9565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9571, %r802, %r917, %r9552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9576, %r9552, %r9575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9579, %r9571, %r9576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9582, %r813, %r917, %r9563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9587, %r9563, %r9586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9590, %r9582, %r9587;
	// end inline asm
	// begin inline asm
	mov.b32 %r9598, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9609, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9595, %r802, %r941, %r9598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9600, %r9598, %r9599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9603, %r9595, %r9600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9606, %r813, %r941, %r9609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9611, %r9609, %r9610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9614, %r9606, %r9611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9617, %r802, %r963, %r9598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9622, %r9598, %r9621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9625, %r9617, %r9622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9628, %r813, %r963, %r9609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9633, %r9609, %r9632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9636, %r9628, %r9633;
	// end inline asm
	// begin inline asm
	mov.b32 %r9644, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9655, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9641, %r802, %r987, %r9644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9646, %r9644, %r9645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9649, %r9641, %r9646;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9652, %r813, %r987, %r9655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9656, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9657, %r9655, %r9656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9660, %r9652, %r9657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9663, %r802, %r1009, %r9644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9667, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9668, %r9644, %r9667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9671, %r9663, %r9668;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9674, %r813, %r1009, %r9655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9679, %r9655, %r9678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9682, %r9674, %r9679;
	// end inline asm
	// begin inline asm
	mov.b32 %r9690, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9701, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9687, %r802, %r1033, %r9690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9691, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9692, %r9690, %r9691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9695, %r9687, %r9692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9698, %r813, %r1033, %r9701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9702, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9703, %r9701, %r9702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9706, %r9698, %r9703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9709, %r802, %r1055, %r9690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9713, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9714, %r9690, %r9713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9717, %r9709, %r9714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9720, %r813, %r1055, %r9701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9725, %r9701, %r9724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9728, %r9720, %r9725;
	// end inline asm
	// begin inline asm
	mov.b32 %r9736, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9747, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9733, %r802, %r1079, %r9736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9737, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9738, %r9736, %r9737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9741, %r9733, %r9738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9744, %r813, %r1079, %r9747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9748, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9749, %r9747, %r9748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9752, %r9744, %r9749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9755, %r802, %r1101, %r9736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9759, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9760, %r9736, %r9759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9763, %r9755, %r9760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9766, %r813, %r1101, %r9747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9771, %r9747, %r9770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9774, %r9766, %r9771;
	// end inline asm
	// begin inline asm
	mov.b32 %r9782, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9793, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9779, %r802, %r1125, %r9782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9784, %r9782, %r9783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9787, %r9779, %r9784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9790, %r813, %r1125, %r9793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9794, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9795, %r9793, %r9794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9798, %r9790, %r9795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9801, %r802, %r1147, %r9782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9805, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9806, %r9782, %r9805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9809, %r9801, %r9806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9812, %r813, %r1147, %r9793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9817, %r9793, %r9816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9820, %r9812, %r9817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9823, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9825, %r9823, %r9465, %r9327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9829, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9831, %r9829, %r9476, %r9331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9835, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9837, %r9835, %r9487, %r9335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9841, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9843, %r9841, %r9498, %r9339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9847, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9849, %r9847, %r9511, %r9343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9853, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9855, %r9853, %r9522, %r9347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9859, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9861, %r9859, %r9533, %r9351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9865, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9867, %r9865, %r9544, %r9355;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9871, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9873, %r9871, %r9557, %r9359;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9877, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9879, %r9877, %r9568, %r9363;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9883, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9885, %r9883, %r9579, %r9367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9889, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9891, %r9889, %r9590, %r9371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9895, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9897, %r9895, %r9603, %r9375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9901, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9903, %r9901, %r9614, %r9379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9907, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9909, %r9907, %r9625, %r9383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9913, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9915, %r9913, %r9636, %r9387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9919, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9921, %r9919, %r9649, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9925, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9927, %r9925, %r9660, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9931, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9933, %r9931, %r9671, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9937, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9939, %r9937, %r9682, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9943, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9945, %r9943, %r9695, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9949, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9951, %r9949, %r9706, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9955, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9957, %r9955, %r9717, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9961, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9963, %r9961, %r9728, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9967, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9969, %r9967, %r9741, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9973, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9975, %r9973, %r9752, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9979, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9981, %r9979, %r9763, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9985, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9987, %r9985, %r9774, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9991, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9993, %r9991, %r9787, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9997, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9999, %r9997, %r9798, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10003, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10005, %r10003, %r9809, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10009, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10011, %r10009, %r9820, %r9451;
	// end inline asm
	// begin inline asm
	mov.b32 %r10020, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10031, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10017, %r802, %r4619, %r10020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10022, %r10020, %r10021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10025, %r10017, %r10022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10028, %r813, %r4619, %r10031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10033, %r10031, %r10032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10036, %r10028, %r10033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10039, %r802, %r4641, %r10020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10044, %r10020, %r10043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10047, %r10039, %r10044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10050, %r813, %r4641, %r10031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10055, %r10031, %r10054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10058, %r10050, %r10055;
	// end inline asm
	// begin inline asm
	mov.b32 %r10066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10077, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10063, %r802, %r4665, %r10066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10068, %r10066, %r10067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10071, %r10063, %r10068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10074, %r813, %r4665, %r10077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10079, %r10077, %r10078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10082, %r10074, %r10079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10085, %r802, %r4687, %r10066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10090, %r10066, %r10089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10093, %r10085, %r10090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10096, %r813, %r4687, %r10077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10101, %r10077, %r10100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10104, %r10096, %r10101;
	// end inline asm
	// begin inline asm
	mov.b32 %r10112, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10123, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10109, %r802, %r4711, %r10112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10114, %r10112, %r10113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10117, %r10109, %r10114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10120, %r813, %r4711, %r10123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10125, %r10123, %r10124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10128, %r10120, %r10125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10131, %r802, %r4733, %r10112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10136, %r10112, %r10135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10139, %r10131, %r10136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10142, %r813, %r4733, %r10123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10147, %r10123, %r10146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10150, %r10142, %r10147;
	// end inline asm
	// begin inline asm
	mov.b32 %r10158, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10169, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10155, %r802, %r4757, %r10158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10160, %r10158, %r10159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10163, %r10155, %r10160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10166, %r813, %r4757, %r10169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10171, %r10169, %r10170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10174, %r10166, %r10171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10177, %r802, %r4779, %r10158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10182, %r10158, %r10181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10185, %r10177, %r10182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10188, %r813, %r4779, %r10169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10193, %r10169, %r10192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10196, %r10188, %r10193;
	// end inline asm
	// begin inline asm
	mov.b32 %r10204, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10215, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10201, %r802, %r4803, %r10204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10205, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10206, %r10204, %r10205;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10209, %r10201, %r10206;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10212, %r813, %r4803, %r10215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10217, %r10215, %r10216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10220, %r10212, %r10217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10223, %r802, %r4825, %r10204, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10227, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10228, %r10204, %r10227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10231, %r10223, %r10228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10234, %r813, %r4825, %r10215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10239, %r10215, %r10238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10242, %r10234, %r10239;
	// end inline asm
	// begin inline asm
	mov.b32 %r10250, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10261, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10247, %r802, %r4849, %r10250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10252, %r10250, %r10251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10255, %r10247, %r10252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10258, %r813, %r4849, %r10261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10262, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10263, %r10261, %r10262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10266, %r10258, %r10263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10269, %r802, %r4871, %r10250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10273, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10274, %r10250, %r10273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10277, %r10269, %r10274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10280, %r813, %r4871, %r10261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10285, %r10261, %r10284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10288, %r10280, %r10285;
	// end inline asm
	// begin inline asm
	mov.b32 %r10296, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10307, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10293, %r802, %r4895, %r10296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10298, %r10296, %r10297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10301, %r10293, %r10298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10304, %r813, %r4895, %r10307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10309, %r10307, %r10308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10312, %r10304, %r10309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10315, %r802, %r4917, %r10296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10320, %r10296, %r10319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10323, %r10315, %r10320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10326, %r813, %r4917, %r10307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10331, %r10307, %r10330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10334, %r10326, %r10331;
	// end inline asm
	// begin inline asm
	mov.b32 %r10342, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10353, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10339, %r802, %r4941, %r10342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10344, %r10342, %r10343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10347, %r10339, %r10344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10350, %r813, %r4941, %r10353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10355, %r10353, %r10354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10358, %r10350, %r10355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10361, %r802, %r4963, %r10342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10366, %r10342, %r10365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10369, %r10361, %r10366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10372, %r813, %r4963, %r10353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10377, %r10353, %r10376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10380, %r10372, %r10377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10518, %r344, %r10025, %r9825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10515, %r344, %r10036, %r9831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10527, %r344, %r10047, %r9837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10524, %r344, %r10058, %r9843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10536, %r344, %r10071, %r9849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10533, %r344, %r10082, %r9855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10545, %r344, %r10093, %r9861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r344, %r10104, %r9867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10554, %r344, %r10117, %r9873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r344, %r10128, %r9879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10563, %r344, %r10139, %r9885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r344, %r10150, %r9891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10572, %r344, %r10163, %r9897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r344, %r10174, %r9903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10581, %r344, %r10185, %r9909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r344, %r10196, %r9915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10590, %r362, %r10209, %r9921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r362, %r10220, %r9927;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10599, %r362, %r10231, %r9933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r362, %r10242, %r9939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10608, %r362, %r10255, %r9945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r362, %r10266, %r9951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10617, %r362, %r10277, %r9957;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r362, %r10288, %r9963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10626, %r362, %r10301, %r9969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r362, %r10312, %r9975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10635, %r362, %r10323, %r9981;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r362, %r10334, %r9987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10644, %r362, %r10347, %r9993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r362, %r10358, %r9999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10653, %r362, %r10369, %r10005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r362, %r10380, %r10011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10511, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10513, %r10511, %r10515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10516, %r426, %r10518, %r10513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10520, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10522, %r10520, %r10524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10525, %r426, %r10527, %r10522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10529, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10531, %r10529, %r10533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10534, %r426, %r10536, %r10531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10538, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10540, %r10538, %r10542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10543, %r426, %r10545, %r10540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10547, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10549, %r10547, %r10551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10552, %r426, %r10554, %r10549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10556, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10558, %r10556, %r10560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10561, %r426, %r10563, %r10558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10565, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10567, %r10565, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10570, %r426, %r10572, %r10567;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10574, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10576, %r10574, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r426, %r10581, %r10576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10583, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10585, %r10583, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r429, %r10590, %r10585;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10592, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10594, %r10592, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r429, %r10599, %r10594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10601, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10603, %r10601, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r429, %r10608, %r10603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10610, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10612, %r10610, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r429, %r10617, %r10612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10619, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10621, %r10619, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r429, %r10626, %r10621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10628, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10630, %r10628, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r429, %r10635, %r10630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10637, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10639, %r10637, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r429, %r10644, %r10639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10646, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10648, %r10646, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r429, %r10653, %r10648;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10655, %r432, %r10518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r426, %r10515, %r10655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10662, %r432, %r10527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r426, %r10524, %r10662;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10669, %r432, %r10536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r426, %r10533, %r10669;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r432, %r10545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r426, %r10542, %r10676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10683, %r432, %r10554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r426, %r10551, %r10683;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10690, %r432, %r10563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r426, %r10560, %r10690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10697, %r432, %r10572;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10700, %r426, %r10569, %r10697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10704, %r432, %r10581;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10707, %r426, %r10578, %r10704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10711, %r435, %r10590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r429, %r10587, %r10711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10718, %r435, %r10599;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10721, %r429, %r10596, %r10718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10725, %r435, %r10608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10728, %r429, %r10605, %r10725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10732, %r435, %r10617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10735, %r429, %r10614, %r10732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10739, %r435, %r10626;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10742, %r429, %r10623, %r10739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10746, %r435, %r10635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10749, %r429, %r10632, %r10746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10753, %r435, %r10644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10756, %r429, %r10641, %r10753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10760, %r435, %r10653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10763, %r429, %r10650, %r10760;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10934, %r10931}, {%r474, %r480, %r477, %r483}, {%r10516, %r10658}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10943, %r10940}, {%r474, %r480, %r477, %r483}, {%r10525, %r10665}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10952, %r10949}, {%r474, %r480, %r477, %r483}, {%r10534, %r10672}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10961, %r10958}, {%r474, %r480, %r477, %r483}, {%r10543, %r10679}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10970, %r10967}, {%r474, %r480, %r477, %r483}, {%r10552, %r10686}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10979, %r10976}, {%r474, %r480, %r477, %r483}, {%r10561, %r10693}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10988, %r10985}, {%r474, %r480, %r477, %r483}, {%r10570, %r10700}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10997, %r10994}, {%r474, %r480, %r477, %r483}, {%r10579, %r10707}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11006, %r11003}, {%r474, %r480, %r477, %r483}, {%r10588, %r10714}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11015, %r11012}, {%r474, %r480, %r477, %r483}, {%r10597, %r10721}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11024, %r11021}, {%r474, %r480, %r477, %r483}, {%r10606, %r10728}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11033, %r11030}, {%r474, %r480, %r477, %r483}, {%r10615, %r10735}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11042, %r11039}, {%r474, %r480, %r477, %r483}, {%r10624, %r10742}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11051, %r11048}, {%r474, %r480, %r477, %r483}, {%r10633, %r10749}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11060, %r11057}, {%r474, %r480, %r477, %r483}, {%r10642, %r10756}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11069, %r11066}, {%r474, %r480, %r477, %r483}, {%r10651, %r10763}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10927, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10929, %r10927, %r10931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10932, %r521, %r10934, %r10929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10936, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10938, %r10936, %r10940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10941, %r521, %r10943, %r10938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10945, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10947, %r10945, %r10949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10950, %r521, %r10952, %r10947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10954, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10956, %r10954, %r10958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10959, %r521, %r10961, %r10956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10963, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10965, %r10963, %r10967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10968, %r521, %r10970, %r10965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10972, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10974, %r10972, %r10976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10977, %r521, %r10979, %r10974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10981, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10983, %r10981, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10986, %r521, %r10988, %r10983;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10990, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10992, %r10990, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10995, %r521, %r10997, %r10992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10999, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11001, %r10999, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11004, %r521, %r11006, %r11001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11008, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11010, %r11008, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11013, %r521, %r11015, %r11010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11017, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11019, %r11017, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11022, %r521, %r11024, %r11019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11026, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11028, %r11026, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11031, %r521, %r11033, %r11028;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11035, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11037, %r11035, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11040, %r521, %r11042, %r11037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11044, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11046, %r11044, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11049, %r521, %r11051, %r11046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11053, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11055, %r11053, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11058, %r521, %r11060, %r11055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11062, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11064, %r11062, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11067, %r521, %r11069, %r11064;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11071, %r524, %r10934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11074, %r521, %r10931, %r11071;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11078, %r524, %r10943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11081, %r521, %r10940, %r11078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11085, %r524, %r10952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11088, %r521, %r10949, %r11085;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r524, %r10961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r521, %r10958, %r11092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11099, %r524, %r10970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11102, %r521, %r10967, %r11099;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11106, %r524, %r10979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11109, %r521, %r10976, %r11106;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11113, %r524, %r10988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11116, %r521, %r10985, %r11113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11120, %r524, %r10997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11123, %r521, %r10994, %r11120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11127, %r524, %r11006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11130, %r521, %r11003, %r11127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11134, %r524, %r11015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11137, %r521, %r11012, %r11134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11141, %r524, %r11024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11144, %r521, %r11021, %r11141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11148, %r524, %r11033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11151, %r521, %r11030, %r11148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11155, %r524, %r11042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11158, %r521, %r11039, %r11155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11162, %r524, %r11051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11165, %r521, %r11048, %r11162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11169, %r524, %r11060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11172, %r521, %r11057, %r11169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11176, %r524, %r11069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11179, %r521, %r11066, %r11176;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11472, %r11475}, {%r564, %r570, %r567, %r573}, {%r10932, %r11074}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11478, %r11481}, {%r564, %r570, %r567, %r573}, {%r10941, %r11081}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11484, %r11487}, {%r564, %r570, %r567, %r573}, {%r10950, %r11088}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11490, %r11493}, {%r564, %r570, %r567, %r573}, {%r10959, %r11095}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11496, %r11499}, {%r564, %r570, %r567, %r573}, {%r10968, %r11102}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11502, %r11505}, {%r564, %r570, %r567, %r573}, {%r10977, %r11109}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11508, %r11511}, {%r564, %r570, %r567, %r573}, {%r10986, %r11116}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11514, %r11517}, {%r564, %r570, %r567, %r573}, {%r10995, %r11123}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11473, %r11476}, {%r564, %r570, %r567, %r573}, {%r11004, %r11130}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11479, %r11482}, {%r564, %r570, %r567, %r573}, {%r11013, %r11137}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11485, %r11488}, {%r564, %r570, %r567, %r573}, {%r11022, %r11144}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11491, %r11494}, {%r564, %r570, %r567, %r573}, {%r11031, %r11151}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11497, %r11500}, {%r564, %r570, %r567, %r573}, {%r11040, %r11158}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11503, %r11506}, {%r564, %r570, %r567, %r573}, {%r11049, %r11165}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11509, %r11512}, {%r564, %r570, %r567, %r573}, {%r11058, %r11172}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11515, %r11518}, {%r564, %r570, %r567, %r573}, {%r11067, %r11179}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11471, %r11472, %r11473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11474, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11477, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11480, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11483, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11486, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11489, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11492, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11516, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11519, %r11472, %r11473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11522, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11525, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11528, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11531, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11534, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11537, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11540, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11564, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11567, %r12, %r11471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11570, %r12, %r11474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11573, %r12, %r11477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11576, %r12, %r11480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11579, %r12, %r11483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11582, %r12, %r11486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11585, %r12, %r11489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11588, %r12, %r11492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r12, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r12, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r12, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r12, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r12, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r12, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r12, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r12, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r13, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r13, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r13, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r13, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r13, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r13, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r13, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r13, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r13, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r13, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r13, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r13, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r13, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r13, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r13, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r13, %r11564;
	// end inline asm
	// begin inline asm
	mov.b32 %r11663, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11664, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11665, %r11567, %r11663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11668, %r11665, %r11664;
	// end inline asm
	// begin inline asm
	mov.b32 %r11671, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11672, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11673, %r11570, %r11671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11676, %r11673, %r11672;
	// end inline asm
	// begin inline asm
	mov.b32 %r11679, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11680, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11681, %r11573, %r11679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11684, %r11681, %r11680;
	// end inline asm
	// begin inline asm
	mov.b32 %r11687, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11688, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11689, %r11576, %r11687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11692, %r11689, %r11688;
	// end inline asm
	// begin inline asm
	mov.b32 %r11695, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11696, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11697, %r11579, %r11695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11700, %r11697, %r11696;
	// end inline asm
	// begin inline asm
	mov.b32 %r11703, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11705, %r11582, %r11703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11708, %r11705, %r11704;
	// end inline asm
	// begin inline asm
	mov.b32 %r11711, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11713, %r11585, %r11711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11716, %r11713, %r11712;
	// end inline asm
	// begin inline asm
	mov.b32 %r11719, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11721, %r11588, %r11719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11724, %r11721, %r11720;
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11729, %r11591, %r11727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11732, %r11729, %r11728;
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11737, %r11594, %r11735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11740, %r11737, %r11736;
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11745, %r11597, %r11743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11748, %r11745, %r11744;
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11753, %r11600, %r11751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11756, %r11753, %r11752;
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11761, %r11603, %r11759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11764, %r11761, %r11760;
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11769, %r11606, %r11767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11772, %r11769, %r11768;
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11777, %r11609, %r11775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11780, %r11777, %r11776;
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11785, %r11612, %r11783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11788, %r11785, %r11784;
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11793, %r11615, %r11791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11796, %r11793, %r11792;
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11801, %r11618, %r11799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11804, %r11801, %r11800;
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11809, %r11621, %r11807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11812, %r11809, %r11808;
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11817, %r11624, %r11815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11820, %r11817, %r11816;
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11825, %r11627, %r11823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11828, %r11825, %r11824;
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11833, %r11630, %r11831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11836, %r11833, %r11832;
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11841, %r11633, %r11839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11844, %r11841, %r11840;
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11849, %r11636, %r11847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11852, %r11849, %r11848;
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11857, %r11639, %r11855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11860, %r11857, %r11856;
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11865, %r11642, %r11863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11868, %r11865, %r11864;
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11873, %r11645, %r11871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11876, %r11873, %r11872;
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11881, %r11648, %r11879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11884, %r11881, %r11880;
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11889, %r11651, %r11887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11892, %r11889, %r11888;
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11897, %r11654, %r11895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11900, %r11897, %r11896;
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11905, %r11657, %r11903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11908, %r11905, %r11904;
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11913, %r11660, %r11911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11916, %r11913, %r11912;
	// end inline asm
	// begin inline asm
	mov.b32 %r11922, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11921, %r11922, %r11920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11924, %r11668, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11928, %r11922, %r11927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11931, %r11676, %r11928;
	// end inline asm
	// begin inline asm
	mov.b32 %r11934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11935, %r11922, %r11934;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11938, %r11684, %r11935;
	// end inline asm
	// begin inline asm
	mov.b32 %r11941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11942, %r11922, %r11941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11945, %r11692, %r11942;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11948, %r11924, %r11938, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11952, %r11931, %r11945, %r4319;
	// end inline asm
	shl.b32 	%r11959, %r11952, 4;
	// begin inline asm
	lop3.b32 %r11956, %r4325, %r11948, %r11959, 202;
	// end inline asm
	xor.b32  	%r16087, %r11956, -2004318072;
	// begin inline asm
	mov.b32 %r11963, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11962, %r11963, %r11961;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11965, %r11700, %r11962;
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11969, %r11963, %r11968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11972, %r11708, %r11969;
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11976, %r11963, %r11975;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11979, %r11716, %r11976;
	// end inline asm
	// begin inline asm
	mov.b32 %r11982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11983, %r11963, %r11982;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11986, %r11724, %r11983;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11989, %r11965, %r11979, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11993, %r11972, %r11986, %r4319;
	// end inline asm
	shl.b32 	%r12000, %r11993, 4;
	// begin inline asm
	lop3.b32 %r11997, %r4325, %r11989, %r12000, 202;
	// end inline asm
	xor.b32  	%r16088, %r11997, -2004318072;
	// begin inline asm
	mov.b32 %r12004, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12003, %r12004, %r12002;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12006, %r11732, %r12003;
	// end inline asm
	// begin inline asm
	mov.b32 %r12009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12010, %r12004, %r12009;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12013, %r11740, %r12010;
	// end inline asm
	// begin inline asm
	mov.b32 %r12016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12017, %r12004, %r12016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12020, %r11748, %r12017;
	// end inline asm
	// begin inline asm
	mov.b32 %r12023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12024, %r12004, %r12023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12027, %r11756, %r12024;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12030, %r12006, %r12020, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12034, %r12013, %r12027, %r4319;
	// end inline asm
	shl.b32 	%r12041, %r12034, 4;
	// begin inline asm
	lop3.b32 %r12038, %r4325, %r12030, %r12041, 202;
	// end inline asm
	xor.b32  	%r16089, %r12038, -2004318072;
	// begin inline asm
	mov.b32 %r12045, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12044, %r12045, %r12043;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12047, %r11764, %r12044;
	// end inline asm
	// begin inline asm
	mov.b32 %r12050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12051, %r12045, %r12050;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12054, %r11772, %r12051;
	// end inline asm
	// begin inline asm
	mov.b32 %r12057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12058, %r12045, %r12057;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12061, %r11780, %r12058;
	// end inline asm
	// begin inline asm
	mov.b32 %r12064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12065, %r12045, %r12064;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12068, %r11788, %r12065;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12071, %r12047, %r12061, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12075, %r12054, %r12068, %r4319;
	// end inline asm
	shl.b32 	%r12082, %r12075, 4;
	// begin inline asm
	lop3.b32 %r12079, %r4325, %r12071, %r12082, 202;
	// end inline asm
	xor.b32  	%r16090, %r12079, -2004318072;
	// begin inline asm
	mov.b32 %r12086, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12085, %r12086, %r12084;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12088, %r11796, %r12085;
	// end inline asm
	// begin inline asm
	mov.b32 %r12091, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12092, %r12086, %r12091;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12095, %r11804, %r12092;
	// end inline asm
	// begin inline asm
	mov.b32 %r12098, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12099, %r12086, %r12098;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12102, %r11812, %r12099;
	// end inline asm
	// begin inline asm
	mov.b32 %r12105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12106, %r12086, %r12105;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12109, %r11820, %r12106;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12112, %r12088, %r12102, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12116, %r12095, %r12109, %r4319;
	// end inline asm
	shl.b32 	%r12123, %r12116, 4;
	// begin inline asm
	lop3.b32 %r12120, %r4325, %r12112, %r12123, 202;
	// end inline asm
	xor.b32  	%r16091, %r12120, -2004318072;
	// begin inline asm
	mov.b32 %r12127, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12126, %r12127, %r12125;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12129, %r11828, %r12126;
	// end inline asm
	// begin inline asm
	mov.b32 %r12132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12133, %r12127, %r12132;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12136, %r11836, %r12133;
	// end inline asm
	// begin inline asm
	mov.b32 %r12139, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12140, %r12127, %r12139;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12143, %r11844, %r12140;
	// end inline asm
	// begin inline asm
	mov.b32 %r12146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12147, %r12127, %r12146;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12150, %r11852, %r12147;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12153, %r12129, %r12143, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12157, %r12136, %r12150, %r4319;
	// end inline asm
	shl.b32 	%r12164, %r12157, 4;
	// begin inline asm
	lop3.b32 %r12161, %r4325, %r12153, %r12164, 202;
	// end inline asm
	xor.b32  	%r16092, %r12161, -2004318072;
	// begin inline asm
	mov.b32 %r12168, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12166, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12167, %r12168, %r12166;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12170, %r11860, %r12167;
	// end inline asm
	// begin inline asm
	mov.b32 %r12173, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12174, %r12168, %r12173;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12177, %r11868, %r12174;
	// end inline asm
	// begin inline asm
	mov.b32 %r12180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12181, %r12168, %r12180;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12184, %r11876, %r12181;
	// end inline asm
	// begin inline asm
	mov.b32 %r12187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12188, %r12168, %r12187;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12191, %r11884, %r12188;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12194, %r12170, %r12184, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12198, %r12177, %r12191, %r4319;
	// end inline asm
	shl.b32 	%r12205, %r12198, 4;
	// begin inline asm
	lop3.b32 %r12202, %r4325, %r12194, %r12205, 202;
	// end inline asm
	xor.b32  	%r16093, %r12202, -2004318072;
	// begin inline asm
	mov.b32 %r12209, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12207, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12208, %r12209, %r12207;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12211, %r11892, %r12208;
	// end inline asm
	// begin inline asm
	mov.b32 %r12214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12215, %r12209, %r12214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12218, %r11900, %r12215;
	// end inline asm
	// begin inline asm
	mov.b32 %r12221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12222, %r12209, %r12221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12225, %r11908, %r12222;
	// end inline asm
	// begin inline asm
	mov.b32 %r12228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12229, %r12209, %r12228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12232, %r11916, %r12229;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12235, %r12211, %r12225, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12239, %r12218, %r12232, %r4319;
	// end inline asm
	shl.b32 	%r12246, %r12239, 4;
	// begin inline asm
	lop3.b32 %r12243, %r4325, %r12235, %r12246, 202;
	// end inline asm
	xor.b32  	%r16094, %r12243, -2004318072;
	st.shared.u32 	[%rd82], %r16087;
	st.shared.u32 	[%rd83], %r16088;
	st.shared.u32 	[%rd84], %r16089;
	st.shared.u32 	[%rd85], %r16090;
	st.shared.u32 	[%rd86], %r16091;
	st.shared.u32 	[%rd87], %r16092;
	st.shared.u32 	[%rd88], %r16093;
	st.shared.u32 	[%rd89], %r16094;
	ld.shared.u32 	%r16205, [%rd74];
	ld.shared.u32 	%r16206, [%rd75];
	ld.shared.u32 	%r16207, [%rd76];
	ld.shared.u32 	%r16208, [%rd77];
	ld.shared.u32 	%r16217, [%rd78];
	ld.shared.u32 	%r16218, [%rd79];
	ld.shared.u32 	%r16219, [%rd80];
	ld.shared.u32 	%r16220, [%rd81];
	// begin inline asm
	mov.b32 %r12252, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12263, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12251, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r12249, %r802, %r12251, %r12252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12253, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12254, %r12252, %r12253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12257, %r12249, %r12254;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12260, %r813, %r12251, %r12263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r12263, %r12264;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12268, %r12260, %r12265;
	// end inline asm
	shr.u32 	%r12273, %r12251, 8;
	// begin inline asm
	lop3.b32 %r12271, %r802, %r12273, %r12252, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12275, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12276, %r12252, %r12275;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12279, %r12271, %r12276;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12282, %r813, %r12273, %r12263, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r12263, %r12286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12290, %r12282, %r12287;
	// end inline asm
	// begin inline asm
	mov.b32 %r12298, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12309, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12297, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r12295, %r802, %r12297, %r12298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12300, %r12298, %r12299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12303, %r12295, %r12300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12306, %r813, %r12297, %r12309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12311, %r12309, %r12310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12314, %r12306, %r12311;
	// end inline asm
	shr.u32 	%r12319, %r12297, 8;
	// begin inline asm
	lop3.b32 %r12317, %r802, %r12319, %r12298, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12322, %r12298, %r12321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12325, %r12317, %r12322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12328, %r813, %r12319, %r12309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12333, %r12309, %r12332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12336, %r12328, %r12333;
	// end inline asm
	// begin inline asm
	mov.b32 %r12344, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12355, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12343, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r12341, %r802, %r12343, %r12344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12346, %r12344, %r12345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12349, %r12341, %r12346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12352, %r813, %r12343, %r12355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12357, %r12355, %r12356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12360, %r12352, %r12357;
	// end inline asm
	shr.u32 	%r12365, %r12343, 8;
	// begin inline asm
	lop3.b32 %r12363, %r802, %r12365, %r12344, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12368, %r12344, %r12367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12371, %r12363, %r12368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12374, %r813, %r12365, %r12355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12379, %r12355, %r12378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12382, %r12374, %r12379;
	// end inline asm
	// begin inline asm
	mov.b32 %r12390, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12401, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12389, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r12387, %r802, %r12389, %r12390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12392, %r12390, %r12391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12395, %r12387, %r12392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12398, %r813, %r12389, %r12401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12403, %r12401, %r12402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12406, %r12398, %r12403;
	// end inline asm
	shr.u32 	%r12411, %r12389, 8;
	// begin inline asm
	lop3.b32 %r12409, %r802, %r12411, %r12390, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12414, %r12390, %r12413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12417, %r12409, %r12414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12420, %r813, %r12411, %r12401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12425, %r12401, %r12424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12428, %r12420, %r12425;
	// end inline asm
	// begin inline asm
	mov.b32 %r12436, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12447, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12435, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r12433, %r802, %r12435, %r12436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12438, %r12436, %r12437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12441, %r12433, %r12438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12444, %r813, %r12435, %r12447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12449, %r12447, %r12448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12452, %r12444, %r12449;
	// end inline asm
	shr.u32 	%r12457, %r12435, 8;
	// begin inline asm
	lop3.b32 %r12455, %r802, %r12457, %r12436, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12460, %r12436, %r12459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12463, %r12455, %r12460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12466, %r813, %r12457, %r12447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12471, %r12447, %r12470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12474, %r12466, %r12471;
	// end inline asm
	// begin inline asm
	mov.b32 %r12482, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12493, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12481, %r16218, -2004318072;
	// begin inline asm
	lop3.b32 %r12479, %r802, %r12481, %r12482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12484, %r12482, %r12483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12487, %r12479, %r12484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12490, %r813, %r12481, %r12493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12495, %r12493, %r12494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12498, %r12490, %r12495;
	// end inline asm
	shr.u32 	%r12503, %r12481, 8;
	// begin inline asm
	lop3.b32 %r12501, %r802, %r12503, %r12482, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12506, %r12482, %r12505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12509, %r12501, %r12506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12512, %r813, %r12503, %r12493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12517, %r12493, %r12516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12520, %r12512, %r12517;
	// end inline asm
	// begin inline asm
	mov.b32 %r12528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12539, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12527, %r16219, -2004318072;
	// begin inline asm
	lop3.b32 %r12525, %r802, %r12527, %r12528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12530, %r12528, %r12529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12533, %r12525, %r12530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12536, %r813, %r12527, %r12539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12541, %r12539, %r12540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12544, %r12536, %r12541;
	// end inline asm
	shr.u32 	%r12549, %r12527, 8;
	// begin inline asm
	lop3.b32 %r12547, %r802, %r12549, %r12528, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12552, %r12528, %r12551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12555, %r12547, %r12552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12558, %r813, %r12549, %r12539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12563, %r12539, %r12562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12566, %r12558, %r12563;
	// end inline asm
	// begin inline asm
	mov.b32 %r12574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12585, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12573, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r12571, %r802, %r12573, %r12574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12576, %r12574, %r12575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12579, %r12571, %r12576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12582, %r813, %r12573, %r12585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12587, %r12585, %r12586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12590, %r12582, %r12587;
	// end inline asm
	shr.u32 	%r12595, %r12573, 8;
	// begin inline asm
	lop3.b32 %r12593, %r802, %r12595, %r12574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12598, %r12574, %r12597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12601, %r12593, %r12598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12604, %r813, %r12595, %r12585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12609, %r12585, %r12608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12612, %r12604, %r12609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12615, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12617, %r12615, %r12257;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12620, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12622, %r12620, %r12268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12625, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12627, %r12625, %r12279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12630, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12632, %r12630, %r12290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12635, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12637, %r12635, %r12303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12640, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12642, %r12640, %r12314;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12645, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12647, %r12645, %r12325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12650, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12652, %r12650, %r12336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12655, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12657, %r12655, %r12349;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12660, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12662, %r12660, %r12360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12665, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12667, %r12665, %r12371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12670, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12672, %r12670, %r12382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12675, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12677, %r12675, %r12395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12612;
	// end inline asm
	// begin inline asm
	mov.b32 %r12780, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12791, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12777, %r802, %r803, %r12780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12782, %r12780, %r12781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12785, %r12777, %r12782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12788, %r813, %r803, %r12791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12793, %r12791, %r12792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12796, %r12788, %r12793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12799, %r802, %r825, %r12780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12804, %r12780, %r12803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12807, %r12799, %r12804;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12810, %r813, %r825, %r12791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12815, %r12791, %r12814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12818, %r12810, %r12815;
	// end inline asm
	// begin inline asm
	mov.b32 %r12826, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12837, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12823, %r802, %r849, %r12826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12828, %r12826, %r12827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12831, %r12823, %r12828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12834, %r813, %r849, %r12837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12839, %r12837, %r12838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12842, %r12834, %r12839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12845, %r802, %r871, %r12826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12850, %r12826, %r12849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12853, %r12845, %r12850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12856, %r813, %r871, %r12837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12861, %r12837, %r12860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12864, %r12856, %r12861;
	// end inline asm
	// begin inline asm
	mov.b32 %r12872, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12883, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12869, %r802, %r895, %r12872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12874, %r12872, %r12873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12877, %r12869, %r12874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12880, %r813, %r895, %r12883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12885, %r12883, %r12884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12888, %r12880, %r12885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12891, %r802, %r917, %r12872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12896, %r12872, %r12895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12899, %r12891, %r12896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12902, %r813, %r917, %r12883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12907, %r12883, %r12906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12910, %r12902, %r12907;
	// end inline asm
	// begin inline asm
	mov.b32 %r12918, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12929, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12915, %r802, %r941, %r12918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12920, %r12918, %r12919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12923, %r12915, %r12920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12926, %r813, %r941, %r12929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12931, %r12929, %r12930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12934, %r12926, %r12931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12937, %r802, %r963, %r12918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12942, %r12918, %r12941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12945, %r12937, %r12942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12948, %r813, %r963, %r12929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12953, %r12929, %r12952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12956, %r12948, %r12953;
	// end inline asm
	// begin inline asm
	mov.b32 %r12964, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12975, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12961, %r802, %r987, %r12964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12966, %r12964, %r12965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12969, %r12961, %r12966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12972, %r813, %r987, %r12975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12977, %r12975, %r12976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12980, %r12972, %r12977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12983, %r802, %r1009, %r12964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12988, %r12964, %r12987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12991, %r12983, %r12988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12994, %r813, %r1009, %r12975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12999, %r12975, %r12998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13002, %r12994, %r12999;
	// end inline asm
	// begin inline asm
	mov.b32 %r13010, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13021, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13007, %r802, %r1033, %r13010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13012, %r13010, %r13011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13015, %r13007, %r13012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13018, %r813, %r1033, %r13021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13023, %r13021, %r13022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13026, %r13018, %r13023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13029, %r802, %r1055, %r13010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13034, %r13010, %r13033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13037, %r13029, %r13034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13040, %r813, %r1055, %r13021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13045, %r13021, %r13044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13048, %r13040, %r13045;
	// end inline asm
	// begin inline asm
	mov.b32 %r13056, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13067, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13053, %r802, %r1079, %r13056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13058, %r13056, %r13057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13061, %r13053, %r13058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13064, %r813, %r1079, %r13067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13069, %r13067, %r13068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13072, %r13064, %r13069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13075, %r802, %r1101, %r13056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13080, %r13056, %r13079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13083, %r13075, %r13080;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13086, %r813, %r1101, %r13067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13091, %r13067, %r13090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13094, %r13086, %r13091;
	// end inline asm
	// begin inline asm
	mov.b32 %r13102, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13113, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13099, %r802, %r1125, %r13102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13104, %r13102, %r13103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13107, %r13099, %r13104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13110, %r813, %r1125, %r13113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13115, %r13113, %r13114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13118, %r13110, %r13115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13121, %r802, %r1147, %r13102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13126, %r13102, %r13125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13129, %r13121, %r13126;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13132, %r813, %r1147, %r13113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13137, %r13113, %r13136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13140, %r13132, %r13137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13143, %r272, %r12785, %r12617;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13147, %r272, %r12796, %r12622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13151, %r272, %r12807, %r12627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13155, %r272, %r12818, %r12632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13159, %r272, %r12831, %r12637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13163, %r272, %r12842, %r12642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13167, %r272, %r12853, %r12647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13171, %r272, %r12864, %r12652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13175, %r272, %r12877, %r12657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13179, %r272, %r12888, %r12662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13183, %r272, %r12899, %r12667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13187, %r272, %r12910, %r12672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13191, %r272, %r12923, %r12677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13195, %r272, %r12934, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13199, %r272, %r12945, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13203, %r272, %r12956, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r290, %r12969, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r290, %r12980, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r290, %r12991, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r290, %r13002, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r290, %r13015, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r290, %r13026, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r290, %r13037, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r290, %r13048, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r290, %r13061, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r290, %r13072, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r290, %r13083, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r290, %r13094, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r290, %r13107, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r290, %r13118, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r290, %r13129, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r290, %r13140, %r12772;
	// end inline asm
	// begin inline asm
	mov.b32 %r13276, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13287, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13273, %r802, %r4619, %r13276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13278, %r13276, %r13277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13281, %r13273, %r13278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13284, %r813, %r4619, %r13287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13288, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13289, %r13287, %r13288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13292, %r13284, %r13289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13295, %r802, %r4641, %r13276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13300, %r13276, %r13299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13303, %r13295, %r13300;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13306, %r813, %r4641, %r13287, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13311, %r13287, %r13310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13314, %r13306, %r13311;
	// end inline asm
	// begin inline asm
	mov.b32 %r13322, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13333, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13319, %r802, %r4665, %r13322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13323, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13324, %r13322, %r13323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13327, %r13319, %r13324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13330, %r813, %r4665, %r13333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13334, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13335, %r13333, %r13334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13338, %r13330, %r13335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13341, %r802, %r4687, %r13322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13346, %r13322, %r13345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13349, %r13341, %r13346;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13352, %r813, %r4687, %r13333, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13357, %r13333, %r13356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13360, %r13352, %r13357;
	// end inline asm
	// begin inline asm
	mov.b32 %r13368, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13379, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13365, %r802, %r4711, %r13368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13370, %r13368, %r13369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13373, %r13365, %r13370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13376, %r813, %r4711, %r13379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13381, %r13379, %r13380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13384, %r13376, %r13381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13387, %r802, %r4733, %r13368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13391, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13392, %r13368, %r13391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13395, %r13387, %r13392;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13398, %r813, %r4733, %r13379, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13403, %r13379, %r13402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13406, %r13398, %r13403;
	// end inline asm
	// begin inline asm
	mov.b32 %r13414, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13425, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13411, %r802, %r4757, %r13414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13416, %r13414, %r13415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13419, %r13411, %r13416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13422, %r813, %r4757, %r13425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13427, %r13425, %r13426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13430, %r13422, %r13427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13433, %r802, %r4779, %r13414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13437, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13438, %r13414, %r13437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13441, %r13433, %r13438;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13444, %r813, %r4779, %r13425, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13449, %r13425, %r13448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13452, %r13444, %r13449;
	// end inline asm
	// begin inline asm
	mov.b32 %r13460, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13471, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13457, %r802, %r4803, %r13460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13462, %r13460, %r13461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13465, %r13457, %r13462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13468, %r813, %r4803, %r13471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13472, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13473, %r13471, %r13472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13476, %r13468, %r13473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13479, %r802, %r4825, %r13460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13483, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13484, %r13460, %r13483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13487, %r13479, %r13484;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13490, %r813, %r4825, %r13471, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13495, %r13471, %r13494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13498, %r13490, %r13495;
	// end inline asm
	// begin inline asm
	mov.b32 %r13506, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13517, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13503, %r802, %r4849, %r13506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13507, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13508, %r13506, %r13507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13511, %r13503, %r13508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13514, %r813, %r4849, %r13517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13518, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13519, %r13517, %r13518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13522, %r13514, %r13519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13525, %r802, %r4871, %r13506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13530, %r13506, %r13529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13533, %r13525, %r13530;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13536, %r813, %r4871, %r13517, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13541, %r13517, %r13540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13544, %r13536, %r13541;
	// end inline asm
	// begin inline asm
	mov.b32 %r13552, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13563, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13549, %r802, %r4895, %r13552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13553, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13554, %r13552, %r13553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13557, %r13549, %r13554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13560, %r813, %r4895, %r13563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13565, %r13563, %r13564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13568, %r13560, %r13565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13571, %r802, %r4917, %r13552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13575, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13576, %r13552, %r13575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13579, %r13571, %r13576;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13582, %r813, %r4917, %r13563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13587, %r13563, %r13586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13590, %r13582, %r13587;
	// end inline asm
	// begin inline asm
	mov.b32 %r13598, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13609, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13595, %r802, %r4941, %r13598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13599, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13600, %r13598, %r13599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13603, %r13595, %r13600;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13606, %r813, %r4941, %r13609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13610, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13611, %r13609, %r13610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13614, %r13606, %r13611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13617, %r802, %r4963, %r13598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13621, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13622, %r13598, %r13621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13625, %r13617, %r13622;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13628, %r813, %r4963, %r13609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13633, %r13609, %r13632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13636, %r13628, %r13633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13639, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13641, %r13639, %r13281, %r13143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13645, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13647, %r13645, %r13292, %r13147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13651, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13653, %r13651, %r13303, %r13151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13657, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13659, %r13657, %r13314, %r13155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13663, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13665, %r13663, %r13327, %r13159;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13669, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13671, %r13669, %r13338, %r13163;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13675, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13677, %r13675, %r13349, %r13167;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13681, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13683, %r13681, %r13360, %r13171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13687, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13689, %r13687, %r13373, %r13175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13693, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13695, %r13693, %r13384, %r13179;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13699, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13701, %r13699, %r13395, %r13183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13705, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13707, %r13705, %r13406, %r13187;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13711, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13713, %r13711, %r13419, %r13191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13717, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13719, %r13717, %r13430, %r13195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13723, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13725, %r13723, %r13441, %r13199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13729, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13731, %r13729, %r13452, %r13203;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13735, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13737, %r13735, %r13465, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13741, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13743, %r13741, %r13476, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13747, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13749, %r13747, %r13487, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13753, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13755, %r13753, %r13498, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13759, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13761, %r13759, %r13511, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13765, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13767, %r13765, %r13522, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13771, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13773, %r13771, %r13533, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13777, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13779, %r13777, %r13544, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13783, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13785, %r13783, %r13557, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13789, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13791, %r13789, %r13568, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13795, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13797, %r13795, %r13579, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13801, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13803, %r13801, %r13590, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13807, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13809, %r13807, %r13603, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13813, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13815, %r13813, %r13614, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13819, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13821, %r13819, %r13625, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13825, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13827, %r13825, %r13636, %r13267;
	// end inline asm
	// begin inline asm
	mov.b32 %r13836, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13847, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13833, %r802, %r8435, %r13836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13838, %r13836, %r13837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13841, %r13833, %r13838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13844, %r813, %r8435, %r13847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13849, %r13847, %r13848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13852, %r13844, %r13849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13855, %r802, %r8457, %r13836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13860, %r13836, %r13859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13863, %r13855, %r13860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13866, %r813, %r8457, %r13847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13871, %r13847, %r13870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13874, %r13866, %r13871;
	// end inline asm
	// begin inline asm
	mov.b32 %r13882, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13893, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13879, %r802, %r8481, %r13882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13884, %r13882, %r13883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13887, %r13879, %r13884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13890, %r813, %r8481, %r13893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13895, %r13893, %r13894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13898, %r13890, %r13895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13901, %r802, %r8503, %r13882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13906, %r13882, %r13905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13909, %r13901, %r13906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13912, %r813, %r8503, %r13893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13917, %r13893, %r13916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13920, %r13912, %r13917;
	// end inline asm
	// begin inline asm
	mov.b32 %r13928, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13939, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13925, %r802, %r8527, %r13928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13930, %r13928, %r13929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13933, %r13925, %r13930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13936, %r813, %r8527, %r13939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13941, %r13939, %r13940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13944, %r13936, %r13941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13947, %r802, %r8549, %r13928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13952, %r13928, %r13951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13955, %r13947, %r13952;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13958, %r813, %r8549, %r13939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13963, %r13939, %r13962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13966, %r13958, %r13963;
	// end inline asm
	// begin inline asm
	mov.b32 %r13974, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13985, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13971, %r802, %r8573, %r13974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13976, %r13974, %r13975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13979, %r13971, %r13976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13982, %r813, %r8573, %r13985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13987, %r13985, %r13986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13990, %r13982, %r13987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13993, %r802, %r8595, %r13974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13998, %r13974, %r13997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14001, %r13993, %r13998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14004, %r813, %r8595, %r13985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14009, %r13985, %r14008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14012, %r14004, %r14009;
	// end inline asm
	// begin inline asm
	mov.b32 %r14020, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14031, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14017, %r802, %r8619, %r14020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14022, %r14020, %r14021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14025, %r14017, %r14022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14028, %r813, %r8619, %r14031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14033, %r14031, %r14032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14036, %r14028, %r14033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14039, %r802, %r8641, %r14020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14044, %r14020, %r14043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14047, %r14039, %r14044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14050, %r813, %r8641, %r14031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14055, %r14031, %r14054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14058, %r14050, %r14055;
	// end inline asm
	// begin inline asm
	mov.b32 %r14066, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14077, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14063, %r802, %r8665, %r14066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14068, %r14066, %r14067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14071, %r14063, %r14068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14074, %r813, %r8665, %r14077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14079, %r14077, %r14078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14082, %r14074, %r14079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14085, %r802, %r8687, %r14066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14090, %r14066, %r14089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14093, %r14085, %r14090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14096, %r813, %r8687, %r14077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14101, %r14077, %r14100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14104, %r14096, %r14101;
	// end inline asm
	// begin inline asm
	mov.b32 %r14112, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14123, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14109, %r802, %r8711, %r14112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14114, %r14112, %r14113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14117, %r14109, %r14114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14120, %r813, %r8711, %r14123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14125, %r14123, %r14124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14128, %r14120, %r14125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14131, %r802, %r8733, %r14112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14136, %r14112, %r14135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14139, %r14131, %r14136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14142, %r813, %r8733, %r14123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14147, %r14123, %r14146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14150, %r14142, %r14147;
	// end inline asm
	// begin inline asm
	mov.b32 %r14158, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14169, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14155, %r802, %r8757, %r14158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14160, %r14158, %r14159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14163, %r14155, %r14160;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14166, %r813, %r8757, %r14169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14171, %r14169, %r14170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14174, %r14166, %r14171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14177, %r802, %r8779, %r14158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14182, %r14158, %r14181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14185, %r14177, %r14182;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14188, %r813, %r8779, %r14169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14193, %r14169, %r14192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14196, %r14188, %r14193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14334, %r344, %r13841, %r13641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14331, %r344, %r13852, %r13647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14343, %r344, %r13863, %r13653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14340, %r344, %r13874, %r13659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14352, %r344, %r13887, %r13665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14349, %r344, %r13898, %r13671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14361, %r344, %r13909, %r13677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r344, %r13920, %r13683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14370, %r344, %r13933, %r13689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r344, %r13944, %r13695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14379, %r344, %r13955, %r13701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r344, %r13966, %r13707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14388, %r344, %r13979, %r13713;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r344, %r13990, %r13719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14397, %r344, %r14001, %r13725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r344, %r14012, %r13731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14406, %r362, %r14025, %r13737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r362, %r14036, %r13743;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14415, %r362, %r14047, %r13749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r362, %r14058, %r13755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14424, %r362, %r14071, %r13761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r362, %r14082, %r13767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14433, %r362, %r14093, %r13773;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r362, %r14104, %r13779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14442, %r362, %r14117, %r13785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r362, %r14128, %r13791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14451, %r362, %r14139, %r13797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r362, %r14150, %r13803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14460, %r362, %r14163, %r13809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r362, %r14174, %r13815;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14469, %r362, %r14185, %r13821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r362, %r14196, %r13827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14327, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14329, %r14327, %r14331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14332, %r426, %r14334, %r14329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14336, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14338, %r14336, %r14340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14341, %r426, %r14343, %r14338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14345, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14347, %r14345, %r14349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14350, %r426, %r14352, %r14347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14354, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14356, %r14354, %r14358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14359, %r426, %r14361, %r14356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14363, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14365, %r14363, %r14367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14368, %r426, %r14370, %r14365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14372, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14374, %r14372, %r14376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14377, %r426, %r14379, %r14374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14381, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14383, %r14381, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14386, %r426, %r14388, %r14383;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14390, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14392, %r14390, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r426, %r14397, %r14392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14399, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14401, %r14399, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r429, %r14406, %r14401;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14408, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14410, %r14408, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r429, %r14415, %r14410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14417, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14419, %r14417, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r429, %r14424, %r14419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14426, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14428, %r14426, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r429, %r14433, %r14428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14435, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14437, %r14435, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r429, %r14442, %r14437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14444, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14446, %r14444, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r429, %r14451, %r14446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14453, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14455, %r14453, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r429, %r14460, %r14455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14462, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14464, %r14462, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r429, %r14469, %r14464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14471, %r432, %r14334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r426, %r14331, %r14471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14478, %r432, %r14343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r426, %r14340, %r14478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14485, %r432, %r14352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r426, %r14349, %r14485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r432, %r14361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r426, %r14358, %r14492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14499, %r432, %r14370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r426, %r14367, %r14499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14506, %r432, %r14379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r426, %r14376, %r14506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14513, %r432, %r14388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14516, %r426, %r14385, %r14513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14520, %r432, %r14397;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14523, %r426, %r14394, %r14520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14527, %r435, %r14406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r429, %r14403, %r14527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14534, %r435, %r14415;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14537, %r429, %r14412, %r14534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14541, %r435, %r14424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14544, %r429, %r14421, %r14541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14548, %r435, %r14433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14551, %r429, %r14430, %r14548;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14555, %r435, %r14442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14558, %r429, %r14439, %r14555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14562, %r435, %r14451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14565, %r429, %r14448, %r14562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14569, %r435, %r14460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14572, %r429, %r14457, %r14569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14576, %r435, %r14469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14579, %r429, %r14466, %r14576;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14750, %r14747}, {%r474, %r480, %r477, %r483}, {%r14332, %r14474}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14759, %r14756}, {%r474, %r480, %r477, %r483}, {%r14341, %r14481}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14768, %r14765}, {%r474, %r480, %r477, %r483}, {%r14350, %r14488}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14777, %r14774}, {%r474, %r480, %r477, %r483}, {%r14359, %r14495}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14786, %r14783}, {%r474, %r480, %r477, %r483}, {%r14368, %r14502}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14795, %r14792}, {%r474, %r480, %r477, %r483}, {%r14377, %r14509}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14804, %r14801}, {%r474, %r480, %r477, %r483}, {%r14386, %r14516}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14813, %r14810}, {%r474, %r480, %r477, %r483}, {%r14395, %r14523}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14822, %r14819}, {%r474, %r480, %r477, %r483}, {%r14404, %r14530}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14831, %r14828}, {%r474, %r480, %r477, %r483}, {%r14413, %r14537}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14840, %r14837}, {%r474, %r480, %r477, %r483}, {%r14422, %r14544}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14849, %r14846}, {%r474, %r480, %r477, %r483}, {%r14431, %r14551}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14858, %r14855}, {%r474, %r480, %r477, %r483}, {%r14440, %r14558}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14867, %r14864}, {%r474, %r480, %r477, %r483}, {%r14449, %r14565}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14876, %r14873}, {%r474, %r480, %r477, %r483}, {%r14458, %r14572}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14885, %r14882}, {%r474, %r480, %r477, %r483}, {%r14467, %r14579}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14743, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14745, %r14743, %r14747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14748, %r521, %r14750, %r14745;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14752, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14754, %r14752, %r14756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14757, %r521, %r14759, %r14754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14761, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14763, %r14761, %r14765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14766, %r521, %r14768, %r14763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14770, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14772, %r14770, %r14774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14775, %r521, %r14777, %r14772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14779, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14781, %r14779, %r14783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14784, %r521, %r14786, %r14781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14788, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14790, %r14788, %r14792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14793, %r521, %r14795, %r14790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14797, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14799, %r14797, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14802, %r521, %r14804, %r14799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14806, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14808, %r14806, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14811, %r521, %r14813, %r14808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14815, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14817, %r14815, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14820, %r521, %r14822, %r14817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14824, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14826, %r14824, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14829, %r521, %r14831, %r14826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14833, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14835, %r14833, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14838, %r521, %r14840, %r14835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14842, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14844, %r14842, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14847, %r521, %r14849, %r14844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14851, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14853, %r14851, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14856, %r521, %r14858, %r14853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14860, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14862, %r14860, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14865, %r521, %r14867, %r14862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14869, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14871, %r14869, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14874, %r521, %r14876, %r14871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14878, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14880, %r14878, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14883, %r521, %r14885, %r14880;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14887, %r524, %r14750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14890, %r521, %r14747, %r14887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14894, %r524, %r14759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14897, %r521, %r14756, %r14894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14901, %r524, %r14768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14904, %r521, %r14765, %r14901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r524, %r14777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r521, %r14774, %r14908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14915, %r524, %r14786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14918, %r521, %r14783, %r14915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14922, %r524, %r14795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14925, %r521, %r14792, %r14922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14929, %r524, %r14804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14932, %r521, %r14801, %r14929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14936, %r524, %r14813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14939, %r521, %r14810, %r14936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14943, %r524, %r14822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14946, %r521, %r14819, %r14943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14950, %r524, %r14831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14953, %r521, %r14828, %r14950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14957, %r524, %r14840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14960, %r521, %r14837, %r14957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14964, %r524, %r14849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14967, %r521, %r14846, %r14964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14971, %r524, %r14858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14974, %r521, %r14855, %r14971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14978, %r524, %r14867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14981, %r521, %r14864, %r14978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14985, %r524, %r14876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14988, %r521, %r14873, %r14985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14992, %r524, %r14885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14995, %r521, %r14882, %r14992;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15288, %r15291}, {%r564, %r570, %r567, %r573}, {%r14748, %r14890}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15294, %r15297}, {%r564, %r570, %r567, %r573}, {%r14757, %r14897}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15300, %r15303}, {%r564, %r570, %r567, %r573}, {%r14766, %r14904}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15306, %r15309}, {%r564, %r570, %r567, %r573}, {%r14775, %r14911}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15312, %r15315}, {%r564, %r570, %r567, %r573}, {%r14784, %r14918}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15318, %r15321}, {%r564, %r570, %r567, %r573}, {%r14793, %r14925}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15324, %r15327}, {%r564, %r570, %r567, %r573}, {%r14802, %r14932}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15330, %r15333}, {%r564, %r570, %r567, %r573}, {%r14811, %r14939}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15289, %r15292}, {%r564, %r570, %r567, %r573}, {%r14820, %r14946}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15295, %r15298}, {%r564, %r570, %r567, %r573}, {%r14829, %r14953}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15301, %r15304}, {%r564, %r570, %r567, %r573}, {%r14838, %r14960}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15307, %r15310}, {%r564, %r570, %r567, %r573}, {%r14847, %r14967}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15313, %r15316}, {%r564, %r570, %r567, %r573}, {%r14856, %r14974}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15319, %r15322}, {%r564, %r570, %r567, %r573}, {%r14865, %r14981}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15325, %r15328}, {%r564, %r570, %r567, %r573}, {%r14874, %r14988}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15331, %r15334}, {%r564, %r570, %r567, %r573}, {%r14883, %r14995}, {%r15158, %r15158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15287, %r15288, %r15289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15290, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15293, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15296, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15299, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15302, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15305, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15308, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15332, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15335, %r15288, %r15289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15338, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15341, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15344, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15347, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15350, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15353, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15356, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15380, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15383, %r12, %r15287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15386, %r12, %r15290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15389, %r12, %r15293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15392, %r12, %r15296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15395, %r12, %r15299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15398, %r12, %r15302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15401, %r12, %r15305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15404, %r12, %r15308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r12, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r12, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r12, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r12, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r12, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r12, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r12, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r12, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r13, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r13, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r13, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r13, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r13, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r13, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r13, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r13, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r13, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r13, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r13, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r13, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r13, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r13, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r13, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r13, %r15380;
	// end inline asm
	// begin inline asm
	mov.b32 %r15479, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15480, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15481, %r15383, %r15479;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15484, %r15481, %r15480;
	// end inline asm
	// begin inline asm
	mov.b32 %r15487, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15488, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15489, %r15386, %r15487;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15492, %r15489, %r15488;
	// end inline asm
	// begin inline asm
	mov.b32 %r15495, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15496, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15497, %r15389, %r15495;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15500, %r15497, %r15496;
	// end inline asm
	// begin inline asm
	mov.b32 %r15503, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15504, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15505, %r15392, %r15503;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15508, %r15505, %r15504;
	// end inline asm
	// begin inline asm
	mov.b32 %r15511, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15512, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15513, %r15395, %r15511;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15516, %r15513, %r15512;
	// end inline asm
	// begin inline asm
	mov.b32 %r15519, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15521, %r15398, %r15519;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15524, %r15521, %r15520;
	// end inline asm
	// begin inline asm
	mov.b32 %r15527, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15529, %r15401, %r15527;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15532, %r15529, %r15528;
	// end inline asm
	// begin inline asm
	mov.b32 %r15535, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15537, %r15404, %r15535;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15540, %r15537, %r15536;
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15545, %r15407, %r15543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15548, %r15545, %r15544;
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15553, %r15410, %r15551;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15556, %r15553, %r15552;
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15561, %r15413, %r15559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15564, %r15561, %r15560;
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15569, %r15416, %r15567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15572, %r15569, %r15568;
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15577, %r15419, %r15575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15580, %r15577, %r15576;
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15585, %r15422, %r15583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15588, %r15585, %r15584;
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15593, %r15425, %r15591;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15596, %r15593, %r15592;
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15601, %r15428, %r15599;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15604, %r15601, %r15600;
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15609, %r15431, %r15607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15612, %r15609, %r15608;
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15617, %r15434, %r15615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15620, %r15617, %r15616;
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15625, %r15437, %r15623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15628, %r15625, %r15624;
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15633, %r15440, %r15631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15636, %r15633, %r15632;
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15641, %r15443, %r15639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15644, %r15641, %r15640;
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15649, %r15446, %r15647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15652, %r15649, %r15648;
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15657, %r15449, %r15655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15660, %r15657, %r15656;
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15665, %r15452, %r15663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15668, %r15665, %r15664;
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15673, %r15455, %r15671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15676, %r15673, %r15672;
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15681, %r15458, %r15679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15684, %r15681, %r15680;
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15689, %r15461, %r15687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15692, %r15689, %r15688;
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15697, %r15464, %r15695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15700, %r15697, %r15696;
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15705, %r15467, %r15703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15708, %r15705, %r15704;
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15713, %r15470, %r15711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15716, %r15713, %r15712;
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15721, %r15473, %r15719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15724, %r15721, %r15720;
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15729, %r15476, %r15727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15732, %r15729, %r15728;
	// end inline asm
	// begin inline asm
	mov.b32 %r15738, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15737, %r15738, %r15736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15740, %r15484, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15744, %r15738, %r15743;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15747, %r15492, %r15744;
	// end inline asm
	// begin inline asm
	mov.b32 %r15750, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15751, %r15738, %r15750;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15754, %r15500, %r15751;
	// end inline asm
	// begin inline asm
	mov.b32 %r15757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15758, %r15738, %r15757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15761, %r15508, %r15758;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15764, %r15740, %r15754, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15768, %r15747, %r15761, %r4319;
	// end inline asm
	shl.b32 	%r15775, %r15768, 4;
	// begin inline asm
	lop3.b32 %r15772, %r4325, %r15764, %r15775, 202;
	// end inline asm
	xor.b32  	%r16095, %r15772, -2004318072;
	// begin inline asm
	mov.b32 %r15779, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15778, %r15779, %r15777;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15781, %r15516, %r15778;
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15785, %r15779, %r15784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15788, %r15524, %r15785;
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15792, %r15779, %r15791;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15795, %r15532, %r15792;
	// end inline asm
	// begin inline asm
	mov.b32 %r15798, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15799, %r15779, %r15798;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15802, %r15540, %r15799;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15805, %r15781, %r15795, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15809, %r15788, %r15802, %r4319;
	// end inline asm
	shl.b32 	%r15816, %r15809, 4;
	// begin inline asm
	lop3.b32 %r15813, %r4325, %r15805, %r15816, 202;
	// end inline asm
	xor.b32  	%r16096, %r15813, -2004318072;
	// begin inline asm
	mov.b32 %r15820, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15818, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15819, %r15820, %r15818;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15822, %r15548, %r15819;
	// end inline asm
	// begin inline asm
	mov.b32 %r15825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15826, %r15820, %r15825;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15829, %r15556, %r15826;
	// end inline asm
	// begin inline asm
	mov.b32 %r15832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15833, %r15820, %r15832;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15836, %r15564, %r15833;
	// end inline asm
	// begin inline asm
	mov.b32 %r15839, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15840, %r15820, %r15839;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15843, %r15572, %r15840;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15846, %r15822, %r15836, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15850, %r15829, %r15843, %r4319;
	// end inline asm
	shl.b32 	%r15857, %r15850, 4;
	// begin inline asm
	lop3.b32 %r15854, %r4325, %r15846, %r15857, 202;
	// end inline asm
	xor.b32  	%r16097, %r15854, -2004318072;
	// begin inline asm
	mov.b32 %r15861, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15860, %r15861, %r15859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15863, %r15580, %r15860;
	// end inline asm
	// begin inline asm
	mov.b32 %r15866, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15867, %r15861, %r15866;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15870, %r15588, %r15867;
	// end inline asm
	// begin inline asm
	mov.b32 %r15873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15874, %r15861, %r15873;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15877, %r15596, %r15874;
	// end inline asm
	// begin inline asm
	mov.b32 %r15880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15881, %r15861, %r15880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15884, %r15604, %r15881;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15887, %r15863, %r15877, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15891, %r15870, %r15884, %r4319;
	// end inline asm
	shl.b32 	%r15898, %r15891, 4;
	// begin inline asm
	lop3.b32 %r15895, %r4325, %r15887, %r15898, 202;
	// end inline asm
	xor.b32  	%r16098, %r15895, -2004318072;
	// begin inline asm
	mov.b32 %r15902, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15901, %r15902, %r15900;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15904, %r15612, %r15901;
	// end inline asm
	// begin inline asm
	mov.b32 %r15907, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15908, %r15902, %r15907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15911, %r15620, %r15908;
	// end inline asm
	// begin inline asm
	mov.b32 %r15914, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15915, %r15902, %r15914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15918, %r15628, %r15915;
	// end inline asm
	// begin inline asm
	mov.b32 %r15921, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15922, %r15902, %r15921;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15925, %r15636, %r15922;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15928, %r15904, %r15918, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15932, %r15911, %r15925, %r4319;
	// end inline asm
	shl.b32 	%r15939, %r15932, 4;
	// begin inline asm
	lop3.b32 %r15936, %r4325, %r15928, %r15939, 202;
	// end inline asm
	xor.b32  	%r16099, %r15936, -2004318072;
	// begin inline asm
	mov.b32 %r15943, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15942, %r15943, %r15941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15945, %r15644, %r15942;
	// end inline asm
	// begin inline asm
	mov.b32 %r15948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15949, %r15943, %r15948;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15952, %r15652, %r15949;
	// end inline asm
	// begin inline asm
	mov.b32 %r15955, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15956, %r15943, %r15955;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15959, %r15660, %r15956;
	// end inline asm
	// begin inline asm
	mov.b32 %r15962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15963, %r15943, %r15962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15966, %r15668, %r15963;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15969, %r15945, %r15959, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15973, %r15952, %r15966, %r4319;
	// end inline asm
	shl.b32 	%r15980, %r15973, 4;
	// begin inline asm
	lop3.b32 %r15977, %r4325, %r15969, %r15980, 202;
	// end inline asm
	xor.b32  	%r16100, %r15977, -2004318072;
	// begin inline asm
	mov.b32 %r15984, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15982, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15983, %r15984, %r15982;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15986, %r15676, %r15983;
	// end inline asm
	// begin inline asm
	mov.b32 %r15989, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15990, %r15984, %r15989;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15993, %r15684, %r15990;
	// end inline asm
	// begin inline asm
	mov.b32 %r15996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15997, %r15984, %r15996;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16000, %r15692, %r15997;
	// end inline asm
	// begin inline asm
	mov.b32 %r16003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16004, %r15984, %r16003;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16007, %r15700, %r16004;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16010, %r15986, %r16000, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16014, %r15993, %r16007, %r4319;
	// end inline asm
	shl.b32 	%r16021, %r16014, 4;
	// begin inline asm
	lop3.b32 %r16018, %r4325, %r16010, %r16021, 202;
	// end inline asm
	xor.b32  	%r16101, %r16018, -2004318072;
	// begin inline asm
	mov.b32 %r16025, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16023, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16024, %r16025, %r16023;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16027, %r15708, %r16024;
	// end inline asm
	// begin inline asm
	mov.b32 %r16030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16031, %r16025, %r16030;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16034, %r15716, %r16031;
	// end inline asm
	// begin inline asm
	mov.b32 %r16037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16038, %r16025, %r16037;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16041, %r15724, %r16038;
	// end inline asm
	// begin inline asm
	mov.b32 %r16044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16045, %r16025, %r16044;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16048, %r15732, %r16045;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16051, %r16027, %r16041, %r4319;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16055, %r16034, %r16048, %r4319;
	// end inline asm
	shl.b32 	%r16062, %r16055, 4;
	// begin inline asm
	lop3.b32 %r16059, %r4325, %r16051, %r16062, 202;
	// end inline asm
	xor.b32  	%r16102, %r16059, -2004318072;
	st.shared.u32 	[%rd82], %r16095;
	st.shared.u32 	[%rd83], %r16096;
	st.shared.u32 	[%rd84], %r16097;
	st.shared.u32 	[%rd85], %r16098;
	st.shared.u32 	[%rd86], %r16099;
	st.shared.u32 	[%rd87], %r16100;
	st.shared.u32 	[%rd88], %r16101;
	st.shared.u32 	[%rd89], %r16102;
	add.s32 	%r16196, %r16196, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p302, %r16196, 0;
	@%p302 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22980
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16108, [%rd13];
	ld.shared.u32 	%r16109, [%rd14+128];
	ld.shared.u32 	%r16116, [%rd14+4];
	ld.shared.u32 	%r16117, [%rd14+132];
	ld.shared.u32 	%r16124, [%rd15];
	ld.shared.u32 	%r16125, [%rd16+128];
	ld.shared.u32 	%r16132, [%rd16+4];
	ld.shared.u32 	%r16133, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16103, %r16108, %r16109, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16107, %r16108, %r16109, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16111, %r16116, %r16117, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16115, %r16116, %r16117, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16119, %r16124, %r16125, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16123, %r16124, %r16125, %r776;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16127, %r16132, %r16133, %r772;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16131, %r16132, %r16133, %r776;
	// end inline asm
	selp.b32 	%r16135, %r16107, %r16103, %p301;
	shfl.sync.bfly.b32	%r233, %r16135, 8, 31, -1;
	selp.b32 	%r16136, %r16115, %r16111, %p301;
	shfl.sync.bfly.b32	%r234, %r16136, 8, 31, -1;
	selp.b32 	%r16137, %r16123, %r16119, %p301;
	shfl.sync.bfly.b32	%r235, %r16137, 8, 31, -1;
	selp.b32 	%r16138, %r16131, %r16127, %p301;
	shfl.sync.bfly.b32	%r236, %r16138, 8, 31, -1;
	setp.lt.u32 	%p304, %r173, 384;
	@%p304 bra 	LBB0_181;
// %bb.180:                             // %L63134
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16139, %r236, %r16131, %p301;
	selp.b32 	%r16140, %r16127, %r236, %p301;
	selp.b32 	%r16141, %r235, %r16123, %p301;
	selp.b32 	%r16142, %r16119, %r235, %p301;
	selp.b32 	%r16143, %r234, %r16115, %p301;
	selp.b32 	%r16144, %r16111, %r234, %p301;
	selp.b32 	%r16145, %r233, %r16107, %p301;
	selp.b32 	%r16146, %r16103, %r233, %p301;
	shl.b32 	%r16147, %r173, 12;
	add.s32 	%r16148, %r147, %r16147;
	mul.wide.s32 	%rd90, %r16148, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16146, %r16144, %r16145, %r16143};
	add.s32 	%r16149, %r148, %r16147;
	mul.wide.s32 	%rd92, %r16149, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16142, %r16140, %r16141, %r16139};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63556
	st.global.u32 	[%rd4], %r15158;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r237;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r244, 2;
	st.global.u32 	[%rd4], %r244;
	mov.u64 	%rd47, exception5093;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r237;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
