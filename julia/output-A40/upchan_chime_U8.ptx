// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=256, blocks_per_sm=4

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2679[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 256, 1, 1
.minnctapersm 4
{
	.reg .pred 	%p<220>;
	.reg .b16 	%rs<96>;
	.reg .b32 	%r<1328>;
	.reg .f32 	%f<692>;
	.reg .b64 	%rd<247>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r123, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd46, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r130, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r130, 73983;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd47, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r124, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r2, %r1, 8;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %tid.y;
	shl.b32 	%r5, %r4, 5;
	or.b32  	%r131, %r2, %r3;
	or.b32  	%r132, %r131, %r5;
	mul.wide.u32 	%rd53, %r132, 4;
	add.s64 	%rd4, %rd47, %rd53;
	mov.u32 	%r133, 1;
	st.global.u32 	[%rd4], %r133;
	setp.gt.u32 	%p2, %r124, 8191;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r125, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r125, %r124;
	setp.gt.s32 	%p4, %r125, 16383;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r126, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r134, %r125, %r124;
	and.b32  	%r135, %r134, 255;
	setp.ne.s32 	%p6, %r135, 0;
	setp.gt.u32 	%p7, %r126, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r127, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r127, %r126;
	setp.gt.s32 	%p10, %r127, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r136, %r127, %r126;
	add.s32 	%r137, %r136, 3;
	and.b32  	%r138, %r137, 31;
	setp.eq.s32 	%p12, %r138, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r128, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r128, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r129, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r128, %r129;
	setp.lt.s32 	%p15, %r129, 17;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass153
	and.b32  	%r64, %r3, 3;
	or.b32  	%r65, %r64, 4;
	mov.f32 	%f109, 0f40000000;
	mov.f32 	%f110, 0f41F80000;
	div.approx.f32 	%f69, %f110, %f109;
	cvt.rn.f32.s32 	%f111, %r64;
	sub.f32 	%f112, %f111, %f69;
	mov.f32 	%f141, 0f41000000;
	div.approx.f32 	%f71, %f112, %f141;
	setp.ne.f32 	%p22, %f71, 0f00000000;
	mov.f32 	%f675, 0f3F800000;
	mov.f32 	%f668, %f675;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L535
	sin.approx.f32 	%f142, %f71;
	div.approx.f32 	%f668, %f142, %f71;
$L__BB0_13:                             // %L538
	cvt.rn.f32.s32 	%f145, %r65;
	sub.f32 	%f146, %f145, %f69;
	div.approx.f32 	%f5, %f146, %f141;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f669, %f675;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L555
	sin.approx.f32 	%f176, %f5;
	div.approx.f32 	%f669, %f176, %f5;
$L__BB0_15:                             // %L558
	or.b32  	%r158, %r64, 8;
	or.b32  	%r7, %r64, 12;
	cvt.rn.f32.s32 	%f180, %r158;
	sub.f32 	%f181, %f180, %f69;
	div.approx.f32 	%f9, %f181, %f141;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f670, %f675;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L637
	sin.approx.f32 	%f211, %f9;
	div.approx.f32 	%f670, %f211, %f9;
$L__BB0_17:                             // %L640
	cvt.rn.f32.s32 	%f214, %r7;
	sub.f32 	%f215, %f214, %f69;
	div.approx.f32 	%f14, %f215, %f141;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f671, %f675;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L657
	sin.approx.f32 	%f245, %f14;
	div.approx.f32 	%f671, %f245, %f14;
$L__BB0_19:                             // %L660
	or.b32  	%r176, %r64, 16;
	or.b32  	%r9, %r64, 20;
	cvt.rn.f32.s32 	%f249, %r176;
	sub.f32 	%f250, %f249, %f69;
	div.approx.f32 	%f18, %f250, %f141;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f672, %f675;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L739
	sin.approx.f32 	%f280, %f18;
	div.approx.f32 	%f672, %f280, %f18;
$L__BB0_21:                             // %L742
	cvt.rn.f32.s32 	%f283, %r9;
	sub.f32 	%f284, %f283, %f69;
	div.approx.f32 	%f23, %f284, %f141;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f673, %f675;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L759
	sin.approx.f32 	%f314, %f23;
	div.approx.f32 	%f673, %f314, %f23;
$L__BB0_23:                             // %L762
	or.b32  	%r194, %r64, 24;
	or.b32  	%r11, %r3, 28;
	cvt.rn.f32.s32 	%f318, %r194;
	sub.f32 	%f319, %f318, %f69;
	div.approx.f32 	%f27, %f319, %f141;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f674, %f675;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L841
	sin.approx.f32 	%f349, %f27;
	div.approx.f32 	%f674, %f349, %f27;
$L__BB0_25:                             // %L844
	shr.u32 	%r63, %r3, 1;
	cvt.rn.f32.s32 	%f352, %r11;
	sub.f32 	%f353, %f352, %f69;
	div.approx.f32 	%f32, %f353, %f141;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L861
	sin.approx.f32 	%f383, %f32;
	div.approx.f32 	%f675, %f383, %f32;
$L__BB0_27:                             // %L864
	bfe.u32 	%r238, %r3, 2, 1;
	shr.u32 	%r15, %r3, 3;
	and.b32  	%r16, %r15, 2;
	and.b32  	%r17, %r63, 4;
	or.b32  	%r239, %r238, %r16;
	or.b32  	%r18, %r239, %r17;
	mul.lo.s32 	%r240, %r64, %r18;
	shl.b32 	%r241, %r240, 1;
	neg.s32 	%r242, %r241;
	cvt.rn.f32.s32 	%f454, %r242;
	div.approx.f32 	%f35, %f454, %f141;
	abs.f32 	%f686, %f35;
	setp.lt.f32 	%p79, %f686, 0f40000000;
	@%p79 bra 	$L__BB0_76;
// %bb.28:
	setp.gtu.f32 	%p80, %f686, 0f4B800000;
	@%p80 bra 	$L__BB0_72;
	bra.uni 	$L__BB0_29;
$L__BB0_72:
	mov.b32 	%r67, %f686;
	and.b32  	%r243, %r67, 8388607;
	or.b32  	%r1323, %r243, 1065353216;
	mov.b32 	%f685, %r1323;
	add.s32 	%r244, %r67, -1073741824;
	and.b32  	%r1324, %r244, -8388608;
	setp.eq.s32 	%p86, %r1324, 0;
	@%p86 bra 	$L__BB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i592.preheader
	mov.f32 	%f464, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f463,%f464;
	// end inline asm
$L__BB0_74:                             // %__nv_fmaf_rn.exit4.i.i.i592
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r245, %r1324, 192937984;
	add.s32 	%r246, %r1323, %r245;
	mov.b32 	%f465, %r246;
	mul.f32 	%f466, %f463, %f465;
	sub.f32 	%f467, %f465, %f466;
	fma.rn.f32 	%f468, %f467, %f463, %f466;
	sub.f32 	%f469, %f465, %f468;
	fma.rz.f32 	%f470, %f469, %f463, %f468;
	cvt.rzi.f32.f32 	%f471, %f470;
	sub.f32 	%f685, %f465, %f471;
	sub.s32 	%r1324, %r1324, %r245;
	mov.b32 	%r1323, %f685;
	setp.ne.s32 	%p87, %r1324, 0;
	setp.ne.s32 	%p88, %r1323, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_74;
$L__BB0_75:                             // %__internal_fmodf_slowpath_mod.exit.i.i594
	setp.gt.u32 	%p90, %r67, 2139095039;
	selp.f32 	%f472, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f473, %f685, 0f34000000;
	mul.f32 	%f686, %f472, %f473;
	bra.uni 	$L__BB0_76;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i571
	div.approx.f32 	%f456, %f686, %f109;
	cvt.rzi.f32.f32 	%f684, %f456;
	fma.rn.f32 	%f73, %f684, 0fC0000000, %f686;
	mov.b32 	%r66, %f73;
	setp.lt.u32 	%p81, %r66, 1073741824;
	@%p81 bra 	$L__BB0_71;
// %bb.30:
	setp.lt.u32 	%p82, %r66, -2147483647;
	@%p82 bra 	$L__BB0_69;
// %bb.31:
	add.f32 	%f461, %f684, 0fBF800000;
	setp.lt.f32 	%p85, %f73, 0fC0000000;
	add.f32 	%f462, %f461, 0fBF800000;
	selp.f32 	%f684, %f462, %f461, %p85;
	bra.uni 	$L__BB0_71;
$L__BB0_69:
	add.f32 	%f684, %f684, 0f3F800000;
	setp.ltu.f32 	%p83, %f73, 0f40800000;
	@%p83 bra 	$L__BB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i575
	add.f32 	%f457, %f684, 0f3F800000;
	fma.rn.f32 	%f459, %f109, 0fC0400000, %f73;
	setp.ge.f32 	%p84, %f459, 0f00000000;
	add.f32 	%f460, %f457, 0f3F800000;
	selp.f32 	%f684, %f460, %f457, %p84;
$L__BB0_71:                             // %__internal_fmodf_fastpath_quot.exit.i.i578
	fma.rn.f32 	%f686, %f684, 0fC0000000, %f686;
$L__BB0_76:                             // %__internal_fmodf_kernel.exit.i597
	abs.f32 	%f474, %f686;
	setp.gtu.f32 	%p91, %f474, 0f7F800000;
	@%p91 bra 	$L__BB0_78;
// %bb.77:
	mov.b32 	%r247, %f35;
	and.b32  	%r248, %r247, -2147483648;
	mov.b32 	%r249, %f686;
	or.b32  	%r250, %r248, %r249;
	mov.b32 	%f686, %r250;
$L__BB0_78:                             // %__nv_fmodf.exit598
	shl.b32 	%r74, %r3, 1;
	and.b32  	%r259, %r74, 6;
	mov.u32 	%r260, -8;
	sub.s32 	%r261, %r260, %r259;
	mul.lo.s32 	%r262, %r18, %r261;
	cvt.rn.f32.s32 	%f505, %r262;
	div.approx.f32 	%f89, %f505, %f141;
	abs.f32 	%f678, %f89;
	setp.lt.f32 	%p99, %f678, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f678, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r20, %f678;
	and.b32  	%r263, %r20, 8388607;
	or.b32  	%r1311, %r263, 1065353216;
	mov.b32 	%f677, %r1311;
	add.s32 	%r264, %r20, -1073741824;
	and.b32  	%r1312, %r264, -8388608;
	setp.eq.s32 	%p106, %r1312, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f516, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f515,%f516;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r265, %r1312, 192937984;
	add.s32 	%r266, %r1311, %r265;
	mov.b32 	%f517, %r266;
	mul.f32 	%f518, %f515, %f517;
	sub.f32 	%f519, %f517, %f518;
	fma.rn.f32 	%f520, %f519, %f515, %f518;
	sub.f32 	%f521, %f517, %f520;
	fma.rz.f32 	%f522, %f521, %f515, %f520;
	cvt.rzi.f32.f32 	%f523, %f522;
	sub.f32 	%f677, %f517, %f523;
	sub.s32 	%r1312, %r1312, %r265;
	mov.b32 	%r1311, %f677;
	setp.ne.s32 	%p107, %r1312, 0;
	setp.ne.s32 	%p108, %r1311, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r20, 2139095039;
	selp.f32 	%f524, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f525, %f677, 0f34000000;
	mul.f32 	%f678, %f524, %f525;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f508, %f678, %f109;
	cvt.rzi.f32.f32 	%f676, %f508;
	fma.rn.f32 	%f38, %f676, 0fC0000000, %f678;
	mov.b32 	%r19, %f38;
	setp.lt.u32 	%p101, %r19, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r19, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f513, %f676, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f514, %f513, 0fBF800000;
	selp.f32 	%f676, %f514, %f513, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f676, %f676, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f509, %f676, 0f3F800000;
	fma.rn.f32 	%f511, %f109, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f511, 0f00000000;
	add.f32 	%f512, %f509, 0f3F800000;
	selp.f32 	%f676, %f512, %f509, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f678, %f676, 0fC0000000, %f678;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	mov.f32 	%f138, 0f00000000;
	abs.f32 	%f526, %f678;
	setp.gtu.f32 	%p111, %f526, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r267, %f89;
	and.b32  	%r268, %r267, -2147483648;
	mov.b32 	%r269, %f678;
	or.b32  	%r270, %r268, %r269;
	mov.b32 	%f678, %r270;
$L__BB0_45:                             // %__nv_fmodf.exit
	mov.f32 	%f559, 0f3F800000;
	div.approx.f32 	%f52, %f138, %f559;
	abs.f32 	%f682, %f52;
	setp.lt.f32 	%p119, %f682, 0f40000000;
	setp.gtu.f32 	%p219, %f682, 0f4B800000;
	mov.f32 	%f690, %f682;
	@%p119 bra 	$L__BB0_86;
// %bb.46:
	@%p219 bra 	$L__BB0_82;
	bra.uni 	$L__BB0_47;
$L__BB0_82:
	mov.b32 	%r76, %f682;
	and.b32  	%r291, %r76, 8388607;
	or.b32  	%r1325, %r291, 1065353216;
	mov.b32 	%f689, %r1325;
	add.s32 	%r292, %r76, -1073741824;
	and.b32  	%r1326, %r292, -8388608;
	setp.eq.s32 	%p126, %r1326, 0;
	@%p126 bra 	$L__BB0_85;
// %bb.83:                              // %__nv_fmaf_rn.exit4.i.i.i623.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f568,%f559;
	// end inline asm
$L__BB0_84:                             // %__nv_fmaf_rn.exit4.i.i.i623
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r293, %r1326, 192937984;
	add.s32 	%r294, %r1325, %r293;
	mov.b32 	%f570, %r294;
	mul.f32 	%f571, %f568, %f570;
	sub.f32 	%f572, %f570, %f571;
	fma.rn.f32 	%f573, %f572, %f568, %f571;
	sub.f32 	%f574, %f570, %f573;
	fma.rz.f32 	%f575, %f574, %f568, %f573;
	cvt.rzi.f32.f32 	%f576, %f575;
	sub.f32 	%f689, %f570, %f576;
	sub.s32 	%r1326, %r1326, %r293;
	mov.b32 	%r1325, %f689;
	setp.ne.s32 	%p127, %r1326, 0;
	setp.ne.s32 	%p128, %r1325, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_84;
$L__BB0_85:                             // %__internal_fmodf_slowpath_mod.exit.i.i625
	setp.gt.u32 	%p130, %r76, 2139095039;
	selp.f32 	%f577, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f578, %f689, 0f34000000;
	mul.f32 	%f690, %f577, %f578;
	bra.uni 	$L__BB0_86;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i602
	div.approx.f32 	%f561, %f682, %f109;
	cvt.rzi.f32.f32 	%f688, %f561;
	fma.rn.f32 	%f92, %f688, 0fC0000000, %f682;
	mov.b32 	%r75, %f92;
	setp.lt.u32 	%p121, %r75, 1073741824;
	@%p121 bra 	$L__BB0_81;
// %bb.48:
	setp.lt.u32 	%p122, %r75, -2147483647;
	@%p122 bra 	$L__BB0_79;
// %bb.49:
	add.f32 	%f566, %f688, 0fBF800000;
	setp.lt.f32 	%p125, %f92, 0fC0000000;
	add.f32 	%f567, %f566, 0fBF800000;
	selp.f32 	%f688, %f567, %f566, %p125;
	bra.uni 	$L__BB0_81;
$L__BB0_79:
	add.f32 	%f688, %f688, 0f3F800000;
	setp.ltu.f32 	%p123, %f92, 0f40800000;
	@%p123 bra 	$L__BB0_81;
// %bb.80:                              // %__nv_fmaf_rn.exit.i.i.i606
	add.f32 	%f562, %f688, 0f3F800000;
	fma.rn.f32 	%f564, %f109, 0fC0400000, %f92;
	setp.ge.f32 	%p124, %f564, 0f00000000;
	add.f32 	%f565, %f562, 0f3F800000;
	selp.f32 	%f688, %f565, %f562, %p124;
$L__BB0_81:                             // %__internal_fmodf_fastpath_quot.exit.i.i609
	fma.rn.f32 	%f690, %f688, 0fC0000000, %f682;
$L__BB0_86:                             // %__internal_fmodf_kernel.exit.i628
	abs.f32 	%f579, %f690;
	setp.gtu.f32 	%p131, %f579, 0f7F800000;
	mov.b32 	%r295, %f52;
	and.b32  	%r83, %r295, -2147483648;
	@%p131 bra 	$L__BB0_88;
// %bb.87:
	mov.b32 	%r296, %f690;
	or.b32  	%r297, %r83, %r296;
	mov.b32 	%f690, %r297;
$L__BB0_88:                             // %__nv_fmodf.exit629
	@%p119 bra 	$L__BB0_61;
// %bb.50:
	@%p219 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r34, %f682;
	and.b32  	%r306, %r34, 8388607;
	or.b32  	%r1313, %r306, 1065353216;
	mov.b32 	%f681, %r1313;
	add.s32 	%r307, %r34, -1073741824;
	and.b32  	%r1314, %r307, -8388608;
	setp.eq.s32 	%p147, %r1314, 0;
	@%p147 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i561.preheader
	// begin inline asm
	rcp.approx.ftz.f32 %f621,%f559;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i561
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r308, %r1314, 192937984;
	add.s32 	%r309, %r1313, %r308;
	mov.b32 	%f623, %r309;
	mul.f32 	%f624, %f621, %f623;
	sub.f32 	%f625, %f623, %f624;
	fma.rn.f32 	%f626, %f625, %f621, %f624;
	sub.f32 	%f627, %f623, %f626;
	fma.rz.f32 	%f628, %f627, %f621, %f626;
	cvt.rzi.f32.f32 	%f629, %f628;
	sub.f32 	%f681, %f623, %f629;
	sub.s32 	%r1314, %r1314, %r308;
	mov.b32 	%r1313, %f681;
	setp.ne.s32 	%p148, %r1314, 0;
	setp.ne.s32 	%p149, %r1313, 0;
	and.pred  	%p150, %p148, %p149;
	@%p150 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i563
	setp.gt.u32 	%p151, %r34, 2139095039;
	selp.f32 	%f630, 0f7FFFFFFF, 0f4B800000, %p151;
	mul.f32 	%f631, %f681, 0f34000000;
	mul.f32 	%f682, %f630, %f631;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i540
	div.approx.f32 	%f614, %f682, %f109;
	cvt.rzi.f32.f32 	%f680, %f614;
	fma.rn.f32 	%f55, %f680, 0fC0000000, %f682;
	mov.b32 	%r33, %f55;
	setp.lt.u32 	%p142, %r33, 1073741824;
	@%p142 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p143, %r33, -2147483647;
	@%p143 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f619, %f680, 0fBF800000;
	setp.lt.f32 	%p146, %f55, 0fC0000000;
	add.f32 	%f620, %f619, 0fBF800000;
	selp.f32 	%f680, %f620, %f619, %p146;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f680, %f680, 0f3F800000;
	setp.ltu.f32 	%p144, %f55, 0f40800000;
	@%p144 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i544
	add.f32 	%f615, %f680, 0f3F800000;
	fma.rn.f32 	%f617, %f109, 0fC0400000, %f55;
	setp.ge.f32 	%p145, %f617, 0f00000000;
	add.f32 	%f618, %f615, 0f3F800000;
	selp.f32 	%f680, %f618, %f615, %p145;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i547
	fma.rn.f32 	%f682, %f680, 0fC0000000, %f682;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i566
	abs.f32 	%f632, %f682;
	setp.gtu.f32 	%p152, %f632, 0f7F800000;
	@%p152 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r310, %f682;
	or.b32  	%r311, %r83, %r310;
	mov.b32 	%f682, %r311;
$L__BB0_63:                             // %__nv_fmodf.exit567
	setp.le.s32 	%p161, %r125, %r124;
	mov.u32 	%r1309, 0;
	@%p161 bra 	$L__BB0_91;
// %bb.64:                              // %L1259.lr.ph
	mov.f32 	%f113, 0f42040000;
	mul.lo.s32 	%r218, %r64, 7;
	div.approx.f32 	%f114, %f112, %f113;
	div.approx.f32 	%f148, %f146, %f113;
	div.approx.f32 	%f183, %f181, %f113;
	div.approx.f32 	%f217, %f215, %f113;
	div.approx.f32 	%f252, %f250, %f113;
	div.approx.f32 	%f286, %f284, %f113;
	div.approx.f32 	%f321, %f319, %f113;
	div.approx.f32 	%f355, %f353, %f113;
	add.s32 	%r228, %r218, 12;
	abs.f32 	%f115, %f114;
	abs.f32 	%f149, %f148;
	abs.f32 	%f184, %f183;
	abs.f32 	%f218, %f217;
	abs.f32 	%f253, %f252;
	abs.f32 	%f287, %f286;
	abs.f32 	%f322, %f321;
	abs.f32 	%f356, %f355;
	and.b32  	%r219, %r218, 15;
	and.b32  	%r229, %r228, 15;
	setp.gt.f32 	%p17, %f115, 0f4B800000;
	mul.f32 	%f116, %f114, 0f00000000;
	setp.gt.f32 	%p23, %f149, 0f4B800000;
	mul.f32 	%f150, %f148, 0f00000000;
	setp.gt.f32 	%p29, %f184, 0f4B800000;
	mul.f32 	%f185, %f183, 0f00000000;
	setp.gt.f32 	%p35, %f218, 0f4B800000;
	mul.f32 	%f219, %f217, 0f00000000;
	setp.gt.f32 	%p41, %f253, 0f4B800000;
	mul.f32 	%f254, %f252, 0f00000000;
	setp.gt.f32 	%p47, %f287, 0f4B800000;
	mul.f32 	%f288, %f286, 0f00000000;
	setp.gt.f32 	%p53, %f322, 0f4B800000;
	mul.f32 	%f323, %f321, 0f00000000;
	setp.gt.f32 	%p59, %f356, 0f4B800000;
	mul.f32 	%f357, %f355, 0f00000000;
	cvt.rn.f32.s32 	%f386, %r219;
	cvt.rn.f32.s32 	%f421, %r229;
	selp.f32 	%f117, %f116, %f114, %p17;
	selp.f32 	%f151, %f150, %f148, %p23;
	selp.f32 	%f186, %f185, %f183, %p29;
	selp.f32 	%f220, %f219, %f217, %p35;
	selp.f32 	%f255, %f254, %f252, %p41;
	selp.f32 	%f289, %f288, %f286, %p47;
	selp.f32 	%f324, %f323, %f321, %p53;
	selp.f32 	%f358, %f357, %f355, %p59;
	div.approx.f32 	%f388, %f386, %f141;
	div.approx.f32 	%f422, %f421, %f141;
	add.f32 	%f118, %f117, %f117;
	add.f32 	%f152, %f151, %f151;
	add.f32 	%f187, %f186, %f186;
	add.f32 	%f221, %f220, %f220;
	add.f32 	%f256, %f255, %f255;
	add.f32 	%f290, %f289, %f289;
	add.f32 	%f325, %f324, %f324;
	add.f32 	%f359, %f358, %f358;
	add.f32 	%f389, %f388, %f388;
	add.f32 	%f423, %f422, %f422;
	add.f32 	%f475, %f686, %f686;
	add.f32 	%f527, %f678, %f678;
	mov.b32 	%r141, %f118;
	mov.b32 	%r148, %f152;
	mov.b32 	%r159, %f187;
	mov.b32 	%r166, %f221;
	mov.b32 	%r177, %f256;
	mov.b32 	%r184, %f290;
	mov.b32 	%r195, %f325;
	mov.b32 	%r202, %f359;
	mov.b32 	%r220, %f389;
	mov.b32 	%r230, %f423;
	mov.b32 	%r251, %f475;
	mov.b32 	%r283, %f527;
	and.b32  	%r142, %r141, -2147483648;
	and.b32  	%r149, %r148, -2147483648;
	and.b32  	%r160, %r159, -2147483648;
	and.b32  	%r167, %r166, -2147483648;
	and.b32  	%r178, %r177, -2147483648;
	and.b32  	%r185, %r184, -2147483648;
	and.b32  	%r196, %r195, -2147483648;
	and.b32  	%r203, %r202, -2147483648;
	and.b32  	%r221, %r220, -2147483648;
	and.b32  	%r231, %r230, -2147483648;
	and.b32  	%r252, %r251, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	add.f32 	%f580, %f690, %f690;
	or.b32  	%r143, %r142, 1056964608;
	or.b32  	%r150, %r149, 1056964608;
	or.b32  	%r161, %r160, 1056964608;
	or.b32  	%r168, %r167, 1056964608;
	or.b32  	%r179, %r178, 1056964608;
	or.b32  	%r186, %r185, 1056964608;
	or.b32  	%r197, %r196, 1056964608;
	or.b32  	%r204, %r203, 1056964608;
	or.b32  	%r222, %r221, 1056964608;
	or.b32  	%r232, %r231, 1056964608;
	or.b32  	%r253, %r252, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	mov.b32 	%r298, %f580;
	mov.b32 	%f119, %r143;
	mov.b32 	%f153, %r150;
	mov.b32 	%f188, %r161;
	mov.b32 	%f222, %r168;
	mov.b32 	%f257, %r179;
	mov.b32 	%f291, %r186;
	mov.b32 	%f326, %r197;
	mov.b32 	%f360, %r204;
	mov.b32 	%f390, %r222;
	mov.b32 	%f424, %r232;
	mov.b32 	%f476, %r253;
	mov.b32 	%f528, %r285;
	and.b32  	%r299, %r298, -2147483648;
	add.f32 	%f120, %f118, %f119;
	abs.f32 	%f122, %f118;
	add.f32 	%f154, %f152, %f153;
	abs.f32 	%f156, %f152;
	add.f32 	%f189, %f187, %f188;
	abs.f32 	%f191, %f187;
	add.f32 	%f223, %f221, %f222;
	abs.f32 	%f225, %f221;
	add.f32 	%f258, %f256, %f257;
	abs.f32 	%f260, %f256;
	add.f32 	%f292, %f290, %f291;
	abs.f32 	%f294, %f290;
	add.f32 	%f327, %f325, %f326;
	abs.f32 	%f329, %f325;
	add.f32 	%f361, %f359, %f360;
	abs.f32 	%f363, %f359;
	add.f32 	%f391, %f389, %f390;
	abs.f32 	%f393, %f389;
	add.f32 	%f425, %f423, %f424;
	abs.f32 	%f427, %f423;
	add.f32 	%f477, %f475, %f476;
	abs.f32 	%f479, %f475;
	add.f32 	%f529, %f527, %f528;
	abs.f32 	%f531, %f527;
	or.b32  	%r300, %r299, 1056964608;
	cvt.rzi.f32.f32 	%f121, %f120;
	setp.gt.f32 	%p18, %f122, 0f4B000000;
	cvt.rzi.f32.f32 	%f155, %f154;
	setp.gt.f32 	%p24, %f156, 0f4B000000;
	cvt.rzi.f32.f32 	%f190, %f189;
	setp.gt.f32 	%p30, %f191, 0f4B000000;
	cvt.rzi.f32.f32 	%f224, %f223;
	setp.gt.f32 	%p36, %f225, 0f4B000000;
	cvt.rzi.f32.f32 	%f259, %f258;
	setp.gt.f32 	%p42, %f260, 0f4B000000;
	cvt.rzi.f32.f32 	%f293, %f292;
	setp.gt.f32 	%p48, %f294, 0f4B000000;
	cvt.rzi.f32.f32 	%f328, %f327;
	setp.gt.f32 	%p54, %f329, 0f4B000000;
	cvt.rzi.f32.f32 	%f362, %f361;
	setp.gt.f32 	%p60, %f363, 0f4B000000;
	cvt.rzi.f32.f32 	%f392, %f391;
	setp.gt.f32 	%p65, %f393, 0f4B000000;
	cvt.rzi.f32.f32 	%f426, %f425;
	setp.gt.f32 	%p72, %f427, 0f4B000000;
	cvt.rzi.f32.f32 	%f478, %f477;
	setp.gt.f32 	%p92, %f479, 0f4B000000;
	cvt.rzi.f32.f32 	%f530, %f529;
	setp.gt.f32 	%p112, %f531, 0f4B000000;
	cvt.u16.u32 	%rs1, %r3;
	mov.b32 	%f581, %r300;
	selp.f32 	%f123, %f118, %f121, %p18;
	cvt.rzi.f32.f32 	%f124, %f118;
	setp.lt.f32 	%p19, %f122, 0f3F000000;
	selp.f32 	%f157, %f152, %f155, %p24;
	cvt.rzi.f32.f32 	%f158, %f152;
	setp.lt.f32 	%p25, %f156, 0f3F000000;
	selp.f32 	%f192, %f187, %f190, %p30;
	cvt.rzi.f32.f32 	%f193, %f187;
	setp.lt.f32 	%p31, %f191, 0f3F000000;
	selp.f32 	%f226, %f221, %f224, %p36;
	cvt.rzi.f32.f32 	%f227, %f221;
	setp.lt.f32 	%p37, %f225, 0f3F000000;
	selp.f32 	%f261, %f256, %f259, %p42;
	cvt.rzi.f32.f32 	%f262, %f256;
	setp.lt.f32 	%p43, %f260, 0f3F000000;
	selp.f32 	%f295, %f290, %f293, %p48;
	cvt.rzi.f32.f32 	%f296, %f290;
	setp.lt.f32 	%p49, %f294, 0f3F000000;
	selp.f32 	%f330, %f325, %f328, %p54;
	cvt.rzi.f32.f32 	%f331, %f325;
	setp.lt.f32 	%p55, %f329, 0f3F000000;
	selp.f32 	%f364, %f359, %f362, %p60;
	cvt.rzi.f32.f32 	%f365, %f359;
	setp.lt.f32 	%p61, %f363, 0f3F000000;
	selp.f32 	%f394, %f389, %f392, %p65;
	cvt.rzi.f32.f32 	%f395, %f389;
	setp.lt.f32 	%p66, %f393, 0f3F000000;
	selp.f32 	%f428, %f423, %f426, %p72;
	cvt.rzi.f32.f32 	%f429, %f423;
	setp.lt.f32 	%p73, %f427, 0f3F000000;
	selp.f32 	%f480, %f475, %f478, %p92;
	cvt.rzi.f32.f32 	%f481, %f475;
	setp.lt.f32 	%p93, %f479, 0f3F000000;
	selp.f32 	%f532, %f527, %f530, %p112;
	cvt.rzi.f32.f32 	%f533, %f527;
	setp.lt.f32 	%p113, %f531, 0f3F000000;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	add.f32 	%f582, %f580, %f581;
	abs.f32 	%f584, %f580;
	selp.f32 	%f125, %f124, %f123, %p19;
	selp.f32 	%f159, %f158, %f157, %p25;
	selp.f32 	%f194, %f193, %f192, %p31;
	selp.f32 	%f228, %f227, %f226, %p37;
	selp.f32 	%f263, %f262, %f261, %p43;
	selp.f32 	%f297, %f296, %f295, %p49;
	selp.f32 	%f332, %f331, %f330, %p55;
	selp.f32 	%f366, %f365, %f364, %p61;
	selp.f32 	%f396, %f395, %f394, %p66;
	selp.f32 	%f430, %f429, %f428, %p73;
	selp.f32 	%f482, %f481, %f480, %p93;
	selp.f32 	%f534, %f533, %f532, %p113;
	or.b16  	%rs4, %rs3, %rs2;
	cvt.rzi.f32.f32 	%f583, %f582;
	setp.gt.f32 	%p134, %f584, 0f4B000000;
	fma.rn.f32 	%f126, %f125, 0fBF000000, %f117;
	fma.rn.f32 	%f160, %f159, 0fBF000000, %f151;
	fma.rn.f32 	%f195, %f194, 0fBF000000, %f186;
	fma.rn.f32 	%f229, %f228, 0fBF000000, %f220;
	fma.rn.f32 	%f264, %f263, 0fBF000000, %f255;
	fma.rn.f32 	%f298, %f297, 0fBF000000, %f289;
	fma.rn.f32 	%f333, %f332, 0fBF000000, %f324;
	fma.rn.f32 	%f367, %f366, 0fBF000000, %f358;
	fma.rn.f32 	%f397, %f396, 0fBF000000, %f388;
	fma.rn.f32 	%f431, %f430, 0fBF000000, %f422;
	fma.rn.f32 	%f483, %f482, 0fBF000000, %f686;
	fma.rn.f32 	%f535, %f534, 0fBF000000, %f678;
	shr.u16 	%rs6, %rs4, 4;
	selp.f32 	%f585, %f580, %f583, %p134;
	cvt.rzi.f32.f32 	%f586, %f580;
	setp.lt.f32 	%p135, %f584, 0f3F000000;
	mul.f32 	%f127, %f126, %f126;
	mul.f32 	%f161, %f160, %f160;
	mul.f32 	%f196, %f195, %f195;
	mul.f32 	%f230, %f229, %f229;
	mul.f32 	%f265, %f264, %f264;
	mul.f32 	%f299, %f298, %f298;
	mul.f32 	%f334, %f333, %f333;
	mul.f32 	%f368, %f367, %f367;
	mul.f32 	%f398, %f397, %f397;
	mul.f32 	%f432, %f431, %f431;
	mul.f32 	%f484, %f483, %f483;
	mul.f32 	%f536, %f535, %f535;
	shl.b16 	%rs5, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	selp.f32 	%f587, %f586, %f585, %p135;
	cvt.rzi.s32.f32 	%r144, %f125;
	fma.rn.f32 	%f128, %f127, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f129, %f127, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r151, %f159;
	fma.rn.f32 	%f162, %f161, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f163, %f161, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r162, %f194;
	fma.rn.f32 	%f197, %f196, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f198, %f196, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r169, %f228;
	fma.rn.f32 	%f231, %f230, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f232, %f230, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r180, %f263;
	fma.rn.f32 	%f266, %f265, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f267, %f265, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r187, %f297;
	fma.rn.f32 	%f300, %f299, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f301, %f299, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r198, %f332;
	fma.rn.f32 	%f335, %f334, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f336, %f334, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r205, %f366;
	fma.rn.f32 	%f369, %f368, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f370, %f368, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f399, %f398, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f400, %f398, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f433, %f432, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f434, %f432, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f485, %f484, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f486, %f484, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f537, %f536, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f538, %f536, 0f3E684E12, 0fBFAAD2E0;
	or.b16  	%rs8, %rs7, %rs5;
	fma.rn.f32 	%f588, %f587, 0fBF000000, %f690;
	add.s32 	%r145, %r144, 1;
	fma.rn.f32 	%f130, %f128, %f127, 0fC0A55DF6;
	fma.rn.f32 	%f131, %f129, %f127, 0f4081E0CF;
	fma.rn.f32 	%f132, %f127, %f126, 0f00000000;
	add.s32 	%r152, %r151, 1;
	fma.rn.f32 	%f164, %f162, %f161, 0fC0A55DF6;
	fma.rn.f32 	%f165, %f163, %f161, 0f4081E0CF;
	fma.rn.f32 	%f166, %f161, %f160, 0f00000000;
	add.s32 	%r163, %r162, 1;
	fma.rn.f32 	%f199, %f197, %f196, 0fC0A55DF6;
	fma.rn.f32 	%f200, %f198, %f196, 0f4081E0CF;
	fma.rn.f32 	%f201, %f196, %f195, 0f00000000;
	add.s32 	%r170, %r169, 1;
	fma.rn.f32 	%f233, %f231, %f230, 0fC0A55DF6;
	fma.rn.f32 	%f234, %f232, %f230, 0f4081E0CF;
	fma.rn.f32 	%f235, %f230, %f229, 0f00000000;
	add.s32 	%r181, %r180, 1;
	fma.rn.f32 	%f268, %f266, %f265, 0fC0A55DF6;
	fma.rn.f32 	%f269, %f267, %f265, 0f4081E0CF;
	fma.rn.f32 	%f270, %f265, %f264, 0f00000000;
	add.s32 	%r188, %r187, 1;
	fma.rn.f32 	%f302, %f300, %f299, 0fC0A55DF6;
	fma.rn.f32 	%f303, %f301, %f299, 0f4081E0CF;
	fma.rn.f32 	%f304, %f299, %f298, 0f00000000;
	add.s32 	%r199, %r198, 1;
	fma.rn.f32 	%f337, %f335, %f334, 0fC0A55DF6;
	fma.rn.f32 	%f338, %f336, %f334, 0f4081E0CF;
	fma.rn.f32 	%f339, %f334, %f333, 0f00000000;
	add.s32 	%r206, %r205, 1;
	fma.rn.f32 	%f371, %f369, %f368, 0fC0A55DF6;
	fma.rn.f32 	%f372, %f370, %f368, 0f4081E0CF;
	fma.rn.f32 	%f373, %f368, %f367, 0f00000000;
	cvt.rzi.s32.f32 	%r223, %f396;
	fma.rn.f32 	%f401, %f399, %f398, 0fC0A55DF6;
	fma.rn.f32 	%f402, %f400, %f398, 0f4081E0CF;
	fma.rn.f32 	%f403, %f398, %f397, 0f00000000;
	cvt.rzi.s32.f32 	%r233, %f430;
	fma.rn.f32 	%f435, %f433, %f432, 0fC0A55DF6;
	fma.rn.f32 	%f436, %f434, %f432, 0f4081E0CF;
	fma.rn.f32 	%f437, %f432, %f431, 0f00000000;
	cvt.rzi.s32.f32 	%r254, %f482;
	fma.rn.f32 	%f487, %f485, %f484, 0fC0A55DF6;
	fma.rn.f32 	%f488, %f486, %f484, 0f4081E0CF;
	fma.rn.f32 	%f489, %f484, %f483, 0f00000000;
	cvt.rzi.s32.f32 	%r286, %f534;
	fma.rn.f32 	%f539, %f537, %f536, 0fC0A55DF6;
	fma.rn.f32 	%f540, %f538, %f536, 0f4081E0CF;
	fma.rn.f32 	%f541, %f536, %f535, 0f00000000;
	and.b16  	%rs9, %rs8, 13107;
	shr.u16 	%rs11, %rs8, 2;
	mul.f32 	%f589, %f588, %f588;
	fma.rn.f32 	%f133, %f131, %f127, 0fC09DE9E6;
	fma.rn.f32 	%f134, %f130, %f132, 0f00000000;
	and.b32  	%r146, %r145, 1;
	fma.rn.f32 	%f167, %f165, %f161, 0fC09DE9E6;
	fma.rn.f32 	%f168, %f164, %f166, 0f00000000;
	and.b32  	%r153, %r152, 1;
	fma.rn.f32 	%f202, %f200, %f196, 0fC09DE9E6;
	fma.rn.f32 	%f203, %f199, %f201, 0f00000000;
	and.b32  	%r164, %r163, 1;
	fma.rn.f32 	%f236, %f234, %f230, 0fC09DE9E6;
	fma.rn.f32 	%f237, %f233, %f235, 0f00000000;
	and.b32  	%r171, %r170, 1;
	fma.rn.f32 	%f271, %f269, %f265, 0fC09DE9E6;
	fma.rn.f32 	%f272, %f268, %f270, 0f00000000;
	and.b32  	%r182, %r181, 1;
	fma.rn.f32 	%f305, %f303, %f299, 0fC09DE9E6;
	fma.rn.f32 	%f306, %f302, %f304, 0f00000000;
	and.b32  	%r189, %r188, 1;
	fma.rn.f32 	%f340, %f338, %f334, 0fC09DE9E6;
	fma.rn.f32 	%f341, %f337, %f339, 0f00000000;
	and.b32  	%r200, %r199, 1;
	fma.rn.f32 	%f374, %f372, %f368, 0fC09DE9E6;
	fma.rn.f32 	%f375, %f371, %f373, 0f00000000;
	and.b32  	%r207, %r206, 1;
	fma.rn.f32 	%f404, %f402, %f398, 0fC09DE9E6;
	fma.rn.f32 	%f405, %f401, %f403, 0f00000000;
	and.b32  	%r224, %r223, 1;
	fma.rn.f32 	%f438, %f436, %f432, 0fC09DE9E6;
	fma.rn.f32 	%f439, %f435, %f437, 0f00000000;
	and.b32  	%r234, %r233, 1;
	fma.rn.f32 	%f490, %f488, %f484, 0fC09DE9E6;
	fma.rn.f32 	%f491, %f487, %f489, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f542, %f540, %f536, 0fC09DE9E6;
	fma.rn.f32 	%f543, %f539, %f541, 0f00000000;
	and.b32  	%r287, %r286, 1;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs12, %rs11, 13107;
	fma.rn.f32 	%f590, %f589, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f591, %f589, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f135, %f133, %f127, 0f3F800000;
	fma.rn.f32 	%f136, %f126, 0f40490FDB, %f134;
	setp.eq.b32 	%p20, %r146, 1;
	fma.rn.f32 	%f169, %f167, %f161, 0f3F800000;
	fma.rn.f32 	%f170, %f160, 0f40490FDB, %f168;
	setp.eq.b32 	%p26, %r153, 1;
	fma.rn.f32 	%f204, %f202, %f196, 0f3F800000;
	fma.rn.f32 	%f205, %f195, 0f40490FDB, %f203;
	setp.eq.b32 	%p32, %r164, 1;
	fma.rn.f32 	%f238, %f236, %f230, 0f3F800000;
	fma.rn.f32 	%f239, %f229, 0f40490FDB, %f237;
	setp.eq.b32 	%p38, %r171, 1;
	fma.rn.f32 	%f273, %f271, %f265, 0f3F800000;
	fma.rn.f32 	%f274, %f264, 0f40490FDB, %f272;
	setp.eq.b32 	%p44, %r182, 1;
	fma.rn.f32 	%f307, %f305, %f299, 0f3F800000;
	fma.rn.f32 	%f308, %f298, 0f40490FDB, %f306;
	setp.eq.b32 	%p50, %r189, 1;
	fma.rn.f32 	%f342, %f340, %f334, 0f3F800000;
	fma.rn.f32 	%f343, %f333, 0f40490FDB, %f341;
	setp.eq.b32 	%p56, %r200, 1;
	fma.rn.f32 	%f376, %f374, %f368, 0f3F800000;
	fma.rn.f32 	%f377, %f367, 0f40490FDB, %f375;
	setp.eq.b32 	%p62, %r207, 1;
	fma.rn.f32 	%f406, %f404, %f398, 0f3F800000;
	fma.rn.f32 	%f407, %f397, 0f40490FDB, %f405;
	setp.eq.b32 	%p67, %r224, 1;
	fma.rn.f32 	%f440, %f438, %f432, 0f3F800000;
	fma.rn.f32 	%f441, %f431, 0f40490FDB, %f439;
	setp.eq.b32 	%p74, %r234, 1;
	fma.rn.f32 	%f492, %f490, %f484, 0f3F800000;
	fma.rn.f32 	%f493, %f483, 0f40490FDB, %f491;
	setp.eq.b32 	%p94, %r255, 1;
	fma.rn.f32 	%f544, %f542, %f536, 0f3F800000;
	fma.rn.f32 	%f545, %f535, 0f40490FDB, %f543;
	setp.eq.b32 	%p114, %r287, 1;
	or.b16  	%rs13, %rs12, %rs10;
	cvt.rzi.s32.f32 	%r301, %f587;
	fma.rn.f32 	%f592, %f590, %f589, 0fC0A55DF6;
	fma.rn.f32 	%f593, %f591, %f589, 0f4081E0CF;
	fma.rn.f32 	%f594, %f589, %f588, 0f00000000;
	selp.f32 	%f137, %f135, %f136, %p20;
	and.b32  	%r147, %r145, 2;
	selp.f32 	%f171, %f169, %f170, %p26;
	and.b32  	%r154, %r152, 2;
	selp.f32 	%f206, %f204, %f205, %p32;
	and.b32  	%r165, %r163, 2;
	selp.f32 	%f240, %f238, %f239, %p38;
	and.b32  	%r172, %r170, 2;
	selp.f32 	%f275, %f273, %f274, %p44;
	and.b32  	%r183, %r181, 2;
	selp.f32 	%f309, %f307, %f308, %p50;
	and.b32  	%r190, %r188, 2;
	selp.f32 	%f344, %f342, %f343, %p56;
	and.b32  	%r201, %r199, 2;
	selp.f32 	%f378, %f376, %f377, %p62;
	and.b32  	%r208, %r206, 2;
	selp.f32 	%f408, %f406, %f407, %p67;
	and.b32  	%r225, %r223, 2;
	selp.f32 	%f442, %f440, %f441, %p74;
	and.b32  	%r235, %r233, 2;
	selp.f32 	%f494, %f492, %f493, %p94;
	and.b32  	%r256, %r254, 2;
	selp.f32 	%f546, %f544, %f545, %p114;
	and.b32  	%r288, %r286, 2;
	and.b16  	%rs14, %rs13, 20480;
	shr.u16 	%rs16, %rs13, 1;
	fma.rn.f32 	%f595, %f593, %f589, 0fC09DE9E6;
	fma.rn.f32 	%f596, %f592, %f594, 0f00000000;
	and.b32  	%r302, %r301, 1;
	shl.b32 	%r60, %r3, 2;
	and.b32  	%r139, %r3, 2;
	setp.eq.s32 	%p21, %r147, 0;
	sub.f32 	%f139, %f138, %f137;
	setp.eq.s32 	%p27, %r154, 0;
	sub.f32 	%f173, %f138, %f171;
	setp.eq.s32 	%p33, %r165, 0;
	sub.f32 	%f208, %f138, %f206;
	setp.eq.s32 	%p39, %r172, 0;
	sub.f32 	%f242, %f138, %f240;
	setp.eq.s32 	%p45, %r183, 0;
	sub.f32 	%f277, %f138, %f275;
	setp.eq.s32 	%p51, %r190, 0;
	sub.f32 	%f311, %f138, %f309;
	setp.eq.s32 	%p57, %r201, 0;
	sub.f32 	%f346, %f138, %f344;
	setp.eq.s32 	%p63, %r208, 0;
	sub.f32 	%f380, %f138, %f378;
	setp.eq.s32 	%p68, %r225, 0;
	neg.f32 	%f410, %f408;
	add.s32 	%r226, %r223, 1;
	cvt.rzi.f32.f32 	%f415, %f388;
	setp.eq.s32 	%p75, %r235, 0;
	neg.f32 	%f444, %f442;
	add.s32 	%r236, %r233, 1;
	cvt.rzi.f32.f32 	%f448, %f422;
	setp.eq.s32 	%p95, %r256, 0;
	neg.f32 	%f496, %f494;
	add.s32 	%r257, %r254, 1;
	cvt.rzi.f32.f32 	%f501, %f686;
	setp.eq.s32 	%p115, %r288, 0;
	neg.f32 	%f548, %f546;
	add.s32 	%r289, %r286, 1;
	cvt.rzi.f32.f32 	%f553, %f678;
	shl.b16 	%rs15, %rs14, 1;
	and.b16  	%rs17, %rs16, 16384;
	fma.rn.f32 	%f597, %f595, %f589, 0f3F800000;
	fma.rn.f32 	%f598, %f588, 0f40490FDB, %f596;
	setp.eq.b32 	%p136, %r302, 1;
	or.b32  	%r140, %r60, %r139;
	selp.f32 	%f140, %f137, %f139, %p21;
	selp.f32 	%f174, %f171, %f173, %p27;
	selp.f32 	%f209, %f206, %f208, %p33;
	selp.f32 	%f243, %f240, %f242, %p39;
	selp.f32 	%f278, %f275, %f277, %p45;
	selp.f32 	%f312, %f309, %f311, %p51;
	selp.f32 	%f347, %f344, %f346, %p57;
	selp.f32 	%f381, %f378, %f380, %p63;
	selp.f32 	%f409, %f407, %f406, %p67;
	selp.f32 	%f411, %f408, %f410, %p68;
	and.b32  	%r227, %r226, 2;
	setp.eq.f32 	%p70, %f415, %f388;
	mul.f32 	%f416, %f388, 0f00000000;
	selp.f32 	%f443, %f441, %f440, %p74;
	selp.f32 	%f445, %f442, %f444, %p75;
	and.b32  	%r237, %r236, 2;
	setp.eq.f32 	%p77, %f448, %f422;
	mul.f32 	%f449, %f422, 0f00000000;
	selp.f32 	%f495, %f493, %f492, %p94;
	selp.f32 	%f497, %f494, %f496, %p95;
	and.b32  	%r258, %r257, 2;
	setp.eq.f32 	%p97, %f501, %f686;
	mul.f32 	%f502, %f686, 0f00000000;
	selp.f32 	%f547, %f545, %f544, %p114;
	selp.f32 	%f549, %f546, %f548, %p115;
	and.b32  	%r290, %r289, 2;
	setp.eq.f32 	%p117, %f553, %f678;
	mul.f32 	%f554, %f678, 0f00000000;
	or.b16  	%rs18, %rs17, %rs15;
	selp.f32 	%f599, %f597, %f598, %p136;
	and.b32  	%r303, %r301, 2;
	bfe.u32 	%r61, %r140, 1, 2;
	mul.f32 	%f70, %f140, %f140;
	mul.f32 	%f4, %f174, %f174;
	mul.f32 	%f8, %f209, %f209;
	mul.f32 	%f13, %f243, %f243;
	mul.f32 	%f17, %f278, %f278;
	mul.f32 	%f22, %f312, %f312;
	mul.f32 	%f26, %f347, %f347;
	mul.f32 	%f31, %f381, %f381;
	setp.eq.s32 	%p69, %r227, 0;
	sub.f32 	%f413, %f138, %f409;
	selp.f32 	%f417, %f416, %f411, %p70;
	abs.f32 	%f418, %f388;
	setp.eq.s32 	%p76, %r237, 0;
	sub.f32 	%f446, %f138, %f443;
	selp.f32 	%f450, %f449, %f445, %p77;
	abs.f32 	%f451, %f422;
	setp.eq.s32 	%p96, %r258, 0;
	sub.f32 	%f499, %f138, %f495;
	selp.f32 	%f87, %f502, %f497, %p97;
	abs.f32 	%f503, %f686;
	setp.eq.s32 	%p116, %r290, 0;
	sub.f32 	%f551, %f138, %f547;
	selp.f32 	%f555, %f554, %f549, %p117;
	abs.f32 	%f556, %f678;
	shr.u16 	%rs19, %rs18, 13;
	setp.eq.s32 	%p137, %r303, 0;
	neg.f32 	%f601, %f599;
	add.s32 	%r304, %r301, 1;
	cvt.rzi.f32.f32 	%f606, %f690;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd54, %r61, 4;
	mul.f32 	%f144, %f70, 0f3D87E86B;
	mul.f32 	%f178, %f4, 0f3D87E86B;
	mul.f32 	%f213, %f8, 0f3D87E86B;
	mul.f32 	%f247, %f13, 0f3D87E86B;
	mul.f32 	%f282, %f17, 0f3D87E86B;
	mul.f32 	%f316, %f22, 0f3D87E86B;
	mul.f32 	%f351, %f26, 0f3D87E86B;
	mul.f32 	%f384, %f31, 0f3D87E86B;
	selp.f32 	%f414, %f409, %f413, %p69;
	setp.gt.f32 	%p71, %f418, 0f4B800000;
	add.f32 	%f419, %f417, 0f3F800000;
	selp.f32 	%f447, %f443, %f446, %p76;
	setp.gt.f32 	%p78, %f451, 0f4B800000;
	add.f32 	%f452, %f450, 0f3F800000;
	selp.f32 	%f500, %f495, %f499, %p96;
	setp.gt.f32 	%p98, %f503, 0f4B800000;
	add.f32 	%f504, %f87, 0f3F800000;
	selp.f32 	%f552, %f547, %f551, %p116;
	setp.gt.f32 	%p118, %f556, 0f4B800000;
	add.f32 	%f557, %f555, 0f3F800000;
	and.b16  	%rs20, %rs19, 6;
	selp.f32 	%f600, %f598, %f597, %p136;
	selp.f32 	%f602, %f599, %f601, %p137;
	and.b32  	%r305, %r304, 2;
	setp.eq.f32 	%p139, %f606, %f690;
	mul.f32 	%f607, %f690, 0f00000000;
	add.s64 	%rd55, %rd1, %rd54;
	mul.f32 	%f3, %f144, %f668;
	mul.f32 	%f179, %f178, %f669;
	mul.f32 	%f12, %f213, %f670;
	mul.f32 	%f248, %f247, %f671;
	mul.f32 	%f21, %f282, %f672;
	mul.f32 	%f317, %f316, %f673;
	mul.f32 	%f30, %f351, %f674;
	mul.f32 	%f385, %f384, %f675;
	selp.f32 	%f420, %f419, %f414, %p71;
	selp.f32 	%f453, %f452, %f447, %p78;
	selp.f32 	%f88, %f504, %f500, %p98;
	selp.f32 	%f558, %f557, %f552, %p118;
	cvt.u32.u16 	%r31, %rs20;
	setp.eq.s32 	%p138, %r305, 0;
	sub.f32 	%f604, %f138, %f600;
	selp.f32 	%f608, %f607, %f602, %p139;
	abs.f32 	%f609, %f690;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r62, [%rd55];
	mov.b32 	%r157, %f179;
	mov.b32 	%r156, %f3;
	mov.b32 	%r175, %f248;
	mov.b32 	%r174, %f12;
	mov.b32 	%r193, %f317;
	mov.b32 	%r192, %f21;
	mov.b32 	%r211, %f385;
	mov.b32 	%r210, %f30;
	mov.b32 	%r213, %f420;
	mov.b32 	%r214, %f453;
	mov.b32 	%r216, %f417;
	mov.b32 	%r217, %f450;
	mov.b32 	%r273, %f558;
	mov.b32 	%r272, %f88;
	mov.b32 	%r279, %f555;
	mov.b32 	%r278, %f87;
	setp.eq.s32 	%p133, %r18, %r31;
	selp.f32 	%f605, %f600, %f604, %p138;
	setp.gt.f32 	%p140, %f609, 0f4B800000;
	add.f32 	%f610, %f608, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r155, %r157, %r156;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r173, %r175, %r174;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r191, %r193, %r192;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r209, %r211, %r210;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r212, %r214, %r213;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r215, %r217, %r216;
	// end inline asm
	xor.b32  	%r276, %r279, -2147483648;
	xor.b32  	%r275, %r278, -2147483648;
	or.b16  	%rs21, %rs19, 1;
	selp.f32 	%f611, %f610, %f605, %p140;
	selp.f32 	%f612, 0f3F800000, 0f00000000, %p133;
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r274, %r276, %r275;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r277, %r279, %r278;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r273, %r272;
	// end inline asm
	cvt.u32.u16 	%r32, %rs21;
	mul.f32 	%f106, %f611, %f612;
	mul.f32 	%f107, %f608, %f612;
	setp.eq.s32 	%p153, %r18, %r32;
	add.f32 	%f633, %f682, %f682;
	mov.b32 	%r324, %f633;
	and.b32  	%r325, %r324, -2147483648;
	or.b32  	%r326, %r325, 1056964608;
	mov.b32 	%f634, %r326;
	add.f32 	%f635, %f633, %f634;
	cvt.rzi.f32.f32 	%f636, %f635;
	abs.f32 	%f637, %f633;
	setp.gt.f32 	%p154, %f637, 0f4B000000;
	selp.f32 	%f638, %f633, %f636, %p154;
	cvt.rzi.f32.f32 	%f639, %f633;
	setp.lt.f32 	%p155, %f637, 0f3F000000;
	selp.f32 	%f640, %f639, %f638, %p155;
	cvt.rzi.s32.f32 	%r327, %f640;
	fma.rn.f32 	%f641, %f640, 0fBF000000, %f682;
	mul.f32 	%f642, %f641, %f641;
	fma.rn.f32 	%f643, %f642, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f644, %f642, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f645, %f643, %f642, 0fC0A55DF6;
	fma.rn.f32 	%f646, %f644, %f642, 0f4081E0CF;
	fma.rn.f32 	%f647, %f642, %f641, 0f00000000;
	fma.rn.f32 	%f648, %f646, %f642, 0fC09DE9E6;
	fma.rn.f32 	%f649, %f645, %f647, 0f00000000;
	fma.rn.f32 	%f650, %f648, %f642, 0f3F800000;
	fma.rn.f32 	%f651, %f641, 0f40490FDB, %f649;
	and.b32  	%r328, %r327, 1;
	setp.eq.b32 	%p156, %r328, 1;
	selp.f32 	%f652, %f650, %f651, %p156;
	selp.f32 	%f653, %f651, %f650, %p156;
	and.b32  	%r329, %r327, 2;
	setp.eq.s32 	%p157, %r329, 0;
	neg.f32 	%f654, %f652;
	selp.f32 	%f655, %f652, %f654, %p157;
	add.s32 	%r330, %r327, 1;
	and.b32  	%r331, %r330, 2;
	setp.eq.s32 	%p158, %r331, 0;
	sub.f32 	%f657, %f138, %f653;
	selp.f32 	%f658, %f653, %f657, %p158;
	cvt.rzi.f32.f32 	%f659, %f682;
	setp.eq.f32 	%p159, %f659, %f682;
	mul.f32 	%f660, %f682, 0f00000000;
	selp.f32 	%f661, %f660, %f655, %p159;
	abs.f32 	%f662, %f682;
	setp.gt.f32 	%p160, %f662, 0f4B800000;
	add.f32 	%f663, %f661, 0f3F800000;
	selp.f32 	%f664, %f663, %f658, %p160;
	selp.f32 	%f665, 0f3F800000, 0f00000000, %p153;
	mul.f32 	%f666, %f664, %f665;
	mul.f32 	%f667, %f661, %f665;
	mov.b32 	%r314, %f666;
	mov.b32 	%r313, %f106;
	// begin inline asm
	cvt.rn.f16x2.f32 %r312, %r314, %r313;
	// end inline asm
	mov.b32 	%r320, %f667;
	xor.b32  	%r317, %r320, -2147483648;
	mov.b32 	%r319, %f107;
	xor.b32  	%r316, %r319, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r315, %r317, %r316;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r314, %r313;
	// end inline asm
	shl.b32 	%r333, %r124, 13;
	shl.b32 	%r334, %r128, 9;
	and.b32  	%r335, %r60, 28;
	shl.b32 	%r336, %r1, 5;
	and.b32  	%r337, %r336, 224;
	or.b32  	%r338, %r335, %r337;
	and.b32  	%r339, %r2, 4096;
	and.b32  	%r45, %r4, 1;
	neg.s32 	%r340, %r45;
	or.b32  	%r341, %r339, %r338;
	shl.b32 	%r342, %r4, 2;
	and.b32  	%r46, %r342, 24;
	and.b32  	%r343, %r336, 256;
	or.b32  	%r344, %r333, %r343;
	or.b32  	%r345, %r344, %r341;
	add.s32 	%r47, %r345, %r334;
	and.b32  	%r48, %r3, 8;
	shl.b32 	%r346, %r3, 4;
	or.b32  	%r347, %r346, %r48;
	shr.u32 	%r348, %r347, 2;
	and.b32  	%r349, %r348, 30;
	and.b32  	%r350, %r60, 16;
	shl.b32 	%r351, %r3, 3;
	and.b32  	%r352, %r351, 64;
	and.b32  	%r353, %r74, 32;
	shl.b32 	%r354, %r4, 1;
	or.b32  	%r355, %r352, %r354;
	or.b32  	%r356, %r355, %r350;
	or.b32  	%r357, %r356, %r353;
	shr.u32 	%r358, %r357, 2;
	and.b32  	%r359, %r5, 32;
	or.b32  	%r360, %r358, %r359;
	mad.lo.s32 	%r361, %r61, 65, %r359;
	add.s32 	%r362, %r361, %r358;
	shr.u32 	%r363, %r3, 4;
	shl.b32 	%r364, %r126, 12;
	add.s32 	%r365, %r364, -12288;
	and.b32  	%r366, %r342, 4;
	or.b32  	%r367, %r366, %r15;
	shl.b32 	%r368, %r367, 9;
	or.b32  	%r369, %r368, %r338;
	or.b32  	%r49, %r369, %r343;
	cvt.s64.s32 	%rd5, %r365;
	shr.u32 	%r370, %r64, 1;
	shr.u32 	%r371, %r4, 1;
	or.b32  	%r372, %r371, 4;
	or.b32  	%r373, %r371, 8;
	or.b32  	%r374, %r371, 12;
	or.b32  	%r375, %r371, 16;
	or.b32  	%r376, %r371, 20;
	or.b32  	%r377, %r371, 24;
	or.b32  	%r378, %r371, 28;
	setp.eq.s32 	%p162, %r45, 0;
	and.b32  	%r379, %r340, 130;
	mul.lo.s32 	%r380, %r371, 289;
	mul.lo.s32 	%r381, %r363, 65;
	add.s32 	%r382, %r379, %r349;
	add.s32 	%r383, %r382, %r380;
	add.s32 	%r384, %r383, %r381;
	mul.wide.u32 	%rd56, %r384, 4;
	mov.u64 	%rd57, shmem;
	add.s64 	%rd6, %rd57, %rd56;
	cvt.u64.u32 	%rd58, %r381;
	cvt.u64.u32 	%rd59, %r380;
	selp.b64 	%rd60, 0, 130, %p162;
	cvt.u64.u32 	%rd61, %r349;
	add.s64 	%rd62, %rd61, %rd60;
	add.s64 	%rd63, %rd62, %rd59;
	add.s64 	%rd64, %rd63, %rd58;
	shl.b64 	%rd65, %rd64, 2;
	add.s64 	%rd7, %rd57, %rd65;
	mul.lo.s32 	%r385, %r372, 289;
	add.s32 	%r386, %r382, %r385;
	add.s32 	%r387, %r386, %r381;
	mul.wide.u32 	%rd66, %r387, 4;
	add.s64 	%rd8, %rd57, %rd66;
	cvt.u64.u32 	%rd67, %r385;
	add.s64 	%rd68, %rd62, %rd67;
	add.s64 	%rd69, %rd68, %rd58;
	shl.b64 	%rd70, %rd69, 2;
	add.s64 	%rd9, %rd57, %rd70;
	mul.lo.s32 	%r388, %r373, 289;
	add.s32 	%r389, %r382, %r388;
	add.s32 	%r390, %r389, %r381;
	mul.wide.u32 	%rd71, %r390, 4;
	add.s64 	%rd10, %rd57, %rd71;
	cvt.u64.u32 	%rd72, %r388;
	add.s64 	%rd73, %rd62, %rd72;
	add.s64 	%rd74, %rd73, %rd58;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd11, %rd57, %rd75;
	mul.lo.s32 	%r391, %r374, 289;
	add.s32 	%r392, %r382, %r391;
	add.s32 	%r393, %r392, %r381;
	mul.wide.u32 	%rd76, %r393, 4;
	add.s64 	%rd12, %rd57, %rd76;
	cvt.u64.u32 	%rd77, %r391;
	add.s64 	%rd78, %rd62, %rd77;
	add.s64 	%rd79, %rd78, %rd58;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd13, %rd57, %rd80;
	mul.lo.s32 	%r394, %r375, 289;
	add.s32 	%r395, %r382, %r394;
	add.s32 	%r396, %r395, %r381;
	mul.wide.u32 	%rd81, %r396, 4;
	add.s64 	%rd14, %rd57, %rd81;
	cvt.u64.u32 	%rd82, %r394;
	add.s64 	%rd83, %rd62, %rd82;
	add.s64 	%rd84, %rd83, %rd58;
	shl.b64 	%rd85, %rd84, 2;
	add.s64 	%rd15, %rd57, %rd85;
	mul.lo.s32 	%r397, %r376, 289;
	add.s32 	%r398, %r382, %r397;
	add.s32 	%r399, %r398, %r381;
	mul.wide.u32 	%rd86, %r399, 4;
	add.s64 	%rd16, %rd57, %rd86;
	cvt.u64.u32 	%rd87, %r397;
	add.s64 	%rd88, %rd62, %rd87;
	add.s64 	%rd89, %rd88, %rd58;
	shl.b64 	%rd90, %rd89, 2;
	add.s64 	%rd17, %rd57, %rd90;
	mul.lo.s32 	%r400, %r377, 289;
	add.s32 	%r401, %r382, %r400;
	add.s32 	%r402, %r401, %r381;
	mul.wide.u32 	%rd91, %r402, 4;
	add.s64 	%rd18, %rd57, %rd91;
	cvt.u64.u32 	%rd92, %r400;
	add.s64 	%rd93, %rd62, %rd92;
	add.s64 	%rd94, %rd93, %rd58;
	shl.b64 	%rd95, %rd94, 2;
	add.s64 	%rd19, %rd57, %rd95;
	mul.lo.s32 	%r403, %r378, 289;
	add.s32 	%r404, %r382, %r403;
	add.s32 	%r405, %r404, %r381;
	mul.wide.u32 	%rd96, %r405, 4;
	add.s64 	%rd20, %rd57, %rd96;
	cvt.u64.u32 	%rd97, %r403;
	add.s64 	%rd98, %rd62, %rd97;
	add.s64 	%rd99, %rd98, %rd58;
	shl.b64 	%rd100, %rd99, 2;
	add.s64 	%rd21, %rd57, %rd100;
	and.b32  	%r406, %r3, 1;
	neg.s32 	%r407, %r406;
	and.b32  	%r408, %r407, 130;
	and.b32  	%r409, %r354, 2;
	or.b32  	%r410, %r409, %r363;
	mul.lo.s32 	%r411, %r410, 65;
	add.s32 	%r412, %r411, %r349;
	add.s32 	%r413, %r412, %r380;
	mul.wide.u32 	%rd101, %r413, 4;
	add.s64 	%rd22, %rd57, %rd101;
	cvt.u64.u32 	%rd102, %r411;
	add.s64 	%rd103, %rd61, %rd102;
	add.s64 	%rd104, %rd103, %rd59;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd23, %rd57, %rd105;
	add.s32 	%r414, %r412, %r385;
	mul.wide.u32 	%rd106, %r414, 4;
	add.s64 	%rd24, %rd57, %rd106;
	add.s64 	%rd107, %rd103, %rd67;
	shl.b64 	%rd108, %rd107, 2;
	add.s64 	%rd25, %rd57, %rd108;
	add.s32 	%r415, %r412, %r388;
	mul.wide.u32 	%rd109, %r415, 4;
	add.s64 	%rd26, %rd57, %rd109;
	add.s64 	%rd110, %rd103, %rd72;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd27, %rd57, %rd111;
	add.s32 	%r416, %r412, %r391;
	mul.wide.u32 	%rd112, %r416, 4;
	add.s64 	%rd28, %rd57, %rd112;
	add.s64 	%rd113, %rd103, %rd77;
	shl.b64 	%rd114, %rd113, 2;
	add.s64 	%rd29, %rd57, %rd114;
	add.s32 	%r417, %r412, %r394;
	mul.wide.u32 	%rd115, %r417, 4;
	add.s64 	%rd30, %rd57, %rd115;
	add.s64 	%rd116, %rd103, %rd82;
	shl.b64 	%rd117, %rd116, 2;
	add.s64 	%rd31, %rd57, %rd117;
	add.s32 	%r418, %r412, %r397;
	mul.wide.u32 	%rd118, %r418, 4;
	add.s64 	%rd32, %rd57, %rd118;
	add.s64 	%rd119, %rd103, %rd87;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd33, %rd57, %rd120;
	add.s32 	%r419, %r412, %r400;
	mul.wide.u32 	%rd121, %r419, 4;
	add.s64 	%rd34, %rd57, %rd121;
	add.s64 	%rd122, %rd103, %rd92;
	shl.b64 	%rd123, %rd122, 2;
	add.s64 	%rd35, %rd57, %rd123;
	add.s32 	%r420, %r412, %r403;
	mul.wide.u32 	%rd124, %r420, 4;
	add.s64 	%rd36, %rd57, %rd124;
	add.s64 	%rd125, %rd103, %rd97;
	shl.b64 	%rd126, %rd125, 2;
	add.s64 	%rd37, %rd57, %rd126;
	mul.wide.u32 	%rd127, %r362, 4;
	add.s64 	%rd38, %rd57, %rd127;
	add.s32 	%r421, %r408, %r360;
	mad.lo.s32 	%r422, %r370, 65, %r421;
	mul.wide.u32 	%rd128, %r422, 4;
	add.s64 	%rd39, %rd57, %rd128;
	setp.eq.s32 	%p163, %r48, 0;
	mov.u16 	%rs87, 25600;
	mov.u16 	%rs61, 21504;
	mov.u16 	%rs95, 18432;
	mov.u16 	%rs83, -14592;
	mov.u32 	%r1315, %r1309;
	mov.u32 	%r1316, %r1309;
	mov.u32 	%r1322, %r1309;
	mov.u32 	%r53, %r1309;
	bra.uni 	$L__BB0_65;
$L__BB0_89:                             // %pass12286
                                        //   in Loop: Header=BB0_65 Depth=1
	selp.b32 	%r1292, %r93, %r1146, %p163;
	selp.b32 	%r1293, %r1142, %r93, %p163;
	selp.b32 	%r1294, %r92, %r1138, %p163;
	selp.b32 	%r1295, %r1134, %r92, %p163;
	or.b32  	%r1327, %r1310, %r49;
	cvt.u64.u32 	%rd145, %r1327;
	add.s64 	%rd146, %rd145, %rd5;
	shr.u64 	%rd147, %rd146, 42;
	add.s64 	%rd148, %rd146, %rd147;
	shr.s64 	%rd149, %rd148, 22;
	setp.lt.s64 	%p192, %rd146, 0;
	and.b64  	%rd150, %rd148, -4194304;
	setp.ne.s64 	%p193, %rd150, %rd146;
	and.pred  	%p194, %p192, %p193;
	selp.u64 	%rd151, 1, 0, %p194;
	sub.s64 	%rd152, %rd151, %rd149;
	shl.b64 	%rd153, %rd152, 22;
	add.s64 	%rd154, %rd153, %rd146;
	shl.b64 	%rd155, %rd154, 2;
	add.s64 	%rd156, %rd3, %rd155;
	st.global.v4.u32 	[%rd156], {%r1295, %r1293, %r1294, %r1292};
$L__BB0_90:                             // %pass12411
                                        //   in Loop: Header=BB0_65 Depth=1
	or.b32  	%r1298, %r1327, 16384;
	cvt.s64.s32 	%rd157, %r1298;
	add.s64 	%rd158, %rd157, %rd5;
	shr.u64 	%rd159, %rd158, 42;
	add.s64 	%rd160, %rd158, %rd159;
	shr.s64 	%rd161, %rd160, 22;
	setp.lt.s64 	%p195, %rd158, 0;
	and.b64  	%rd162, %rd160, -4194304;
	setp.ne.s64 	%p196, %rd162, %rd158;
	and.pred  	%p197, %p195, %p196;
	selp.u64 	%rd163, 1, 0, %p197;
	sub.s64 	%rd164, %rd163, %rd161;
	shl.b64 	%rd165, %rd164, 22;
	add.s64 	%rd166, %rd165, %rd158;
	shl.b64 	%rd167, %rd166, 2;
	add.s64 	%rd168, %rd3, %rd167;
	st.global.v4.u32 	[%rd168], {%r94, %r96, %r95, %r97};
	or.b32  	%r1299, %r1327, 32768;
	cvt.s64.s32 	%rd169, %r1299;
	add.s64 	%rd170, %rd169, %rd5;
	shr.u64 	%rd171, %rd170, 42;
	add.s64 	%rd172, %rd170, %rd171;
	shr.s64 	%rd173, %rd172, 22;
	setp.lt.s64 	%p198, %rd170, 0;
	and.b64  	%rd174, %rd172, -4194304;
	setp.ne.s64 	%p199, %rd174, %rd170;
	and.pred  	%p200, %p198, %p199;
	selp.u64 	%rd175, 1, 0, %p200;
	sub.s64 	%rd176, %rd175, %rd173;
	shl.b64 	%rd177, %rd176, 22;
	add.s64 	%rd178, %rd177, %rd170;
	shl.b64 	%rd179, %rd178, 2;
	add.s64 	%rd180, %rd3, %rd179;
	st.global.v4.u32 	[%rd180], {%r98, %r100, %r99, %r101};
	or.b32  	%r1300, %r1327, 49152;
	cvt.s64.s32 	%rd181, %r1300;
	add.s64 	%rd182, %rd181, %rd5;
	shr.u64 	%rd183, %rd182, 42;
	add.s64 	%rd184, %rd182, %rd183;
	shr.s64 	%rd185, %rd184, 22;
	setp.lt.s64 	%p201, %rd182, 0;
	and.b64  	%rd186, %rd184, -4194304;
	setp.ne.s64 	%p202, %rd186, %rd182;
	and.pred  	%p203, %p201, %p202;
	selp.u64 	%rd187, 1, 0, %p203;
	sub.s64 	%rd188, %rd187, %rd185;
	shl.b64 	%rd189, %rd188, 22;
	add.s64 	%rd190, %rd189, %rd182;
	shl.b64 	%rd191, %rd190, 2;
	add.s64 	%rd192, %rd3, %rd191;
	st.global.v4.u32 	[%rd192], {%r102, %r104, %r103, %r105};
	or.b32  	%r1301, %r1327, 65536;
	cvt.s64.s32 	%rd193, %r1301;
	add.s64 	%rd194, %rd193, %rd5;
	shr.u64 	%rd195, %rd194, 42;
	add.s64 	%rd196, %rd194, %rd195;
	shr.s64 	%rd197, %rd196, 22;
	setp.lt.s64 	%p204, %rd194, 0;
	and.b64  	%rd198, %rd196, -4194304;
	setp.ne.s64 	%p205, %rd198, %rd194;
	and.pred  	%p206, %p204, %p205;
	selp.u64 	%rd199, 1, 0, %p206;
	sub.s64 	%rd200, %rd199, %rd197;
	shl.b64 	%rd201, %rd200, 22;
	add.s64 	%rd202, %rd201, %rd194;
	shl.b64 	%rd203, %rd202, 2;
	add.s64 	%rd204, %rd3, %rd203;
	st.global.v4.u32 	[%rd204], {%r106, %r108, %r107, %r109};
	or.b32  	%r1302, %r1327, 81920;
	cvt.s64.s32 	%rd205, %r1302;
	add.s64 	%rd206, %rd205, %rd5;
	shr.u64 	%rd207, %rd206, 42;
	add.s64 	%rd208, %rd206, %rd207;
	shr.s64 	%rd209, %rd208, 22;
	setp.lt.s64 	%p207, %rd206, 0;
	and.b64  	%rd210, %rd208, -4194304;
	setp.ne.s64 	%p208, %rd210, %rd206;
	and.pred  	%p209, %p207, %p208;
	selp.u64 	%rd211, 1, 0, %p209;
	sub.s64 	%rd212, %rd211, %rd209;
	shl.b64 	%rd213, %rd212, 22;
	add.s64 	%rd214, %rd213, %rd206;
	shl.b64 	%rd215, %rd214, 2;
	add.s64 	%rd216, %rd3, %rd215;
	st.global.v4.u32 	[%rd216], {%r110, %r112, %r111, %r113};
	or.b32  	%r1303, %r1327, 98304;
	cvt.s64.s32 	%rd217, %r1303;
	add.s64 	%rd218, %rd217, %rd5;
	shr.u64 	%rd219, %rd218, 42;
	add.s64 	%rd220, %rd218, %rd219;
	shr.s64 	%rd221, %rd220, 22;
	setp.lt.s64 	%p210, %rd218, 0;
	and.b64  	%rd222, %rd220, -4194304;
	setp.ne.s64 	%p211, %rd222, %rd218;
	and.pred  	%p212, %p210, %p211;
	selp.u64 	%rd223, 1, 0, %p212;
	sub.s64 	%rd224, %rd223, %rd221;
	shl.b64 	%rd225, %rd224, 22;
	add.s64 	%rd226, %rd225, %rd218;
	shl.b64 	%rd227, %rd226, 2;
	add.s64 	%rd228, %rd3, %rd227;
	st.global.v4.u32 	[%rd228], {%r114, %r116, %r115, %r117};
	or.b32  	%r1304, %r1327, 114688;
	cvt.s64.s32 	%rd229, %r1304;
	add.s64 	%rd230, %rd229, %rd5;
	shr.u64 	%rd231, %rd230, 42;
	add.s64 	%rd232, %rd230, %rd231;
	shr.s64 	%rd233, %rd232, 22;
	setp.lt.s64 	%p213, %rd230, 0;
	and.b64  	%rd234, %rd232, -4194304;
	setp.ne.s64 	%p214, %rd234, %rd230;
	and.pred  	%p215, %p213, %p214;
	selp.u64 	%rd235, 1, 0, %p215;
	sub.s64 	%rd236, %rd235, %rd233;
	shl.b64 	%rd237, %rd236, 22;
	add.s64 	%rd238, %rd237, %rd230;
	shl.b64 	%rd239, %rd238, 2;
	add.s64 	%rd240, %rd3, %rd239;
	st.global.v4.u32 	[%rd240], {%r118, %r120, %r119, %r121};
	setp.ne.s32 	%p216, %r53, 7936;
	add.s32 	%r53, %r53, 256;
	add.s32 	%r1305, %r53, %r124;
	setp.lt.s32 	%p217, %r1305, %r125;
	and.pred  	%p218, %p216, %p217;
	@%p218 bra 	$L__BB0_65;
	bra.uni 	$L__BB0_91;
$L__BB0_65:                             // %L1259
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_66 Depth 2
	or.b32  	%r552, %r53, %r45;
	or.b32  	%r553, %r552, %r46;
	or.b32  	%r554, %r553, %r17;
	or.b32  	%r555, %r554, %r16;
	shl.b32 	%r556, %r555, 13;
	add.s32 	%r557, %r47, %r556;
	shr.s32 	%r558, %r557, 31;
	shr.u32 	%r559, %r558, 6;
	add.s32 	%r560, %r557, %r559;
	shr.s32 	%r561, %r560, 26;
	setp.lt.s32 	%p164, %r557, 0;
	and.b32  	%r562, %r560, -67108864;
	setp.ne.s32 	%p165, %r562, %r557;
	and.pred  	%p166, %p164, %p165;
	selp.u32 	%r563, 1, 0, %p166;
	sub.s32 	%r564, %r563, %r561;
	shl.b32 	%r565, %r564, 26;
	or.b32  	%r566, %r557, 1;
	add.s32 	%r567, %r566, %r565;
	mul.wide.s32 	%rd129, %r567, 4;
	add.s64 	%rd130, %rd2, %rd129;
	ld.global.v4.u32 	{%r568, %r569, %r570, %r571}, [%rd130+-4];
	or.b32  	%r572, %r556, 262144;
	add.s32 	%r573, %r47, %r572;
	shr.s32 	%r574, %r573, 31;
	shr.u32 	%r575, %r574, 6;
	add.s32 	%r576, %r573, %r575;
	shr.s32 	%r577, %r576, 26;
	setp.lt.s32 	%p167, %r573, 0;
	and.b32  	%r578, %r576, -67108864;
	setp.ne.s32 	%p168, %r578, %r573;
	and.pred  	%p169, %p167, %p168;
	selp.u32 	%r579, 1, 0, %p169;
	sub.s32 	%r580, %r579, %r577;
	shl.b32 	%r581, %r580, 26;
	or.b32  	%r582, %r573, 1;
	add.s32 	%r583, %r582, %r581;
	mul.wide.s32 	%rd131, %r583, 4;
	add.s64 	%rd132, %rd2, %rd131;
	ld.global.v4.u32 	{%r584, %r585, %r586, %r587}, [%rd132+-4];
	or.b32  	%r588, %r556, 524288;
	add.s32 	%r589, %r47, %r588;
	shr.s32 	%r590, %r589, 31;
	shr.u32 	%r591, %r590, 6;
	add.s32 	%r592, %r589, %r591;
	shr.s32 	%r593, %r592, 26;
	setp.lt.s32 	%p170, %r589, 0;
	and.b32  	%r594, %r592, -67108864;
	setp.ne.s32 	%p171, %r594, %r589;
	and.pred  	%p172, %p170, %p171;
	selp.u32 	%r595, 1, 0, %p172;
	sub.s32 	%r596, %r595, %r593;
	shl.b32 	%r597, %r596, 26;
	or.b32  	%r598, %r589, 1;
	add.s32 	%r599, %r598, %r597;
	mul.wide.s32 	%rd133, %r599, 4;
	add.s64 	%rd134, %rd2, %rd133;
	ld.global.v4.u32 	{%r600, %r601, %r602, %r603}, [%rd134+-4];
	or.b32  	%r604, %r556, 786432;
	add.s32 	%r605, %r47, %r604;
	shr.s32 	%r606, %r605, 31;
	shr.u32 	%r607, %r606, 6;
	add.s32 	%r608, %r605, %r607;
	shr.s32 	%r609, %r608, 26;
	setp.lt.s32 	%p173, %r605, 0;
	and.b32  	%r610, %r608, -67108864;
	setp.ne.s32 	%p174, %r610, %r605;
	and.pred  	%p175, %p173, %p174;
	selp.u32 	%r611, 1, 0, %p175;
	sub.s32 	%r612, %r611, %r609;
	shl.b32 	%r613, %r612, 26;
	or.b32  	%r614, %r605, 1;
	add.s32 	%r615, %r614, %r613;
	mul.wide.s32 	%rd135, %r615, 4;
	add.s64 	%rd136, %rd2, %rd135;
	ld.global.v4.u32 	{%r616, %r617, %r618, %r619}, [%rd136+-4];
	or.b32  	%r620, %r556, 1048576;
	add.s32 	%r621, %r47, %r620;
	shr.s32 	%r622, %r621, 31;
	shr.u32 	%r623, %r622, 6;
	add.s32 	%r624, %r621, %r623;
	shr.s32 	%r625, %r624, 26;
	setp.lt.s32 	%p176, %r621, 0;
	and.b32  	%r626, %r624, -67108864;
	setp.ne.s32 	%p177, %r626, %r621;
	and.pred  	%p178, %p176, %p177;
	selp.u32 	%r627, 1, 0, %p178;
	sub.s32 	%r628, %r627, %r625;
	shl.b32 	%r629, %r628, 26;
	or.b32  	%r630, %r621, 1;
	add.s32 	%r631, %r630, %r629;
	mul.wide.s32 	%rd137, %r631, 4;
	add.s64 	%rd138, %rd2, %rd137;
	ld.global.v4.u32 	{%r632, %r633, %r634, %r635}, [%rd138+-4];
	or.b32  	%r636, %r556, 1310720;
	add.s32 	%r637, %r47, %r636;
	shr.s32 	%r638, %r637, 31;
	shr.u32 	%r639, %r638, 6;
	add.s32 	%r640, %r637, %r639;
	shr.s32 	%r641, %r640, 26;
	setp.lt.s32 	%p179, %r637, 0;
	and.b32  	%r642, %r640, -67108864;
	setp.ne.s32 	%p180, %r642, %r637;
	and.pred  	%p181, %p179, %p180;
	selp.u32 	%r643, 1, 0, %p181;
	sub.s32 	%r644, %r643, %r641;
	shl.b32 	%r645, %r644, 26;
	or.b32  	%r646, %r637, 1;
	add.s32 	%r647, %r646, %r645;
	mul.wide.s32 	%rd139, %r647, 4;
	add.s64 	%rd140, %rd2, %rd139;
	ld.global.v4.u32 	{%r648, %r649, %r650, %r651}, [%rd140+-4];
	or.b32  	%r652, %r556, 1572864;
	add.s32 	%r653, %r47, %r652;
	shr.s32 	%r654, %r653, 31;
	shr.u32 	%r655, %r654, 6;
	add.s32 	%r656, %r653, %r655;
	shr.s32 	%r657, %r656, 26;
	setp.lt.s32 	%p182, %r653, 0;
	and.b32  	%r658, %r656, -67108864;
	setp.ne.s32 	%p183, %r658, %r653;
	and.pred  	%p184, %p182, %p183;
	selp.u32 	%r659, 1, 0, %p184;
	sub.s32 	%r660, %r659, %r657;
	shl.b32 	%r661, %r660, 26;
	or.b32  	%r662, %r653, 1;
	add.s32 	%r663, %r662, %r661;
	mul.wide.s32 	%rd141, %r663, 4;
	add.s64 	%rd142, %rd2, %rd141;
	ld.global.v4.u32 	{%r664, %r665, %r666, %r667}, [%rd142+-4];
	or.b32  	%r668, %r556, 1835008;
	add.s32 	%r669, %r47, %r668;
	shr.s32 	%r670, %r669, 31;
	shr.u32 	%r671, %r670, 6;
	add.s32 	%r672, %r669, %r671;
	shr.s32 	%r673, %r672, 26;
	setp.lt.s32 	%p185, %r669, 0;
	and.b32  	%r674, %r672, -67108864;
	setp.ne.s32 	%p186, %r674, %r669;
	and.pred  	%p187, %p185, %p186;
	selp.u32 	%r675, 1, 0, %p187;
	sub.s32 	%r676, %r675, %r673;
	shl.b32 	%r677, %r676, 26;
	or.b32  	%r678, %r669, 1;
	add.s32 	%r679, %r678, %r677;
	mul.wide.s32 	%rd143, %r679, 4;
	add.s64 	%rd144, %rd2, %rd143;
	ld.global.v4.u32 	{%r680, %r681, %r682, %r683}, [%rd144+-4];
	selp.b32 	%r684, %r570, %r568, %p163;
	shfl.sync.bfly.b32	%r685, %r684, 8, 31, -1;
	selp.b32 	%r424, %r568, %r685, %p163;
	selp.b32 	%r425, %r685, %r570, %p163;
	selp.b32 	%r686, %r571, %r569, %p163;
	shfl.sync.bfly.b32	%r687, %r686, 8, 31, -1;
	selp.b32 	%r432, %r569, %r687, %p163;
	selp.b32 	%r433, %r687, %r571, %p163;
	selp.b32 	%r688, %r586, %r584, %p163;
	shfl.sync.bfly.b32	%r689, %r688, 8, 31, -1;
	selp.b32 	%r440, %r584, %r689, %p163;
	selp.b32 	%r441, %r689, %r586, %p163;
	selp.b32 	%r690, %r587, %r585, %p163;
	shfl.sync.bfly.b32	%r691, %r690, 8, 31, -1;
	selp.b32 	%r448, %r585, %r691, %p163;
	selp.b32 	%r449, %r691, %r587, %p163;
	selp.b32 	%r692, %r602, %r600, %p163;
	shfl.sync.bfly.b32	%r693, %r692, 8, 31, -1;
	selp.b32 	%r456, %r600, %r693, %p163;
	selp.b32 	%r457, %r693, %r602, %p163;
	selp.b32 	%r694, %r603, %r601, %p163;
	shfl.sync.bfly.b32	%r695, %r694, 8, 31, -1;
	selp.b32 	%r464, %r601, %r695, %p163;
	selp.b32 	%r465, %r695, %r603, %p163;
	selp.b32 	%r696, %r618, %r616, %p163;
	shfl.sync.bfly.b32	%r697, %r696, 8, 31, -1;
	selp.b32 	%r472, %r616, %r697, %p163;
	selp.b32 	%r473, %r697, %r618, %p163;
	selp.b32 	%r698, %r619, %r617, %p163;
	shfl.sync.bfly.b32	%r699, %r698, 8, 31, -1;
	selp.b32 	%r480, %r617, %r699, %p163;
	selp.b32 	%r481, %r699, %r619, %p163;
	selp.b32 	%r700, %r634, %r632, %p163;
	shfl.sync.bfly.b32	%r701, %r700, 8, 31, -1;
	selp.b32 	%r488, %r632, %r701, %p163;
	selp.b32 	%r489, %r701, %r634, %p163;
	selp.b32 	%r702, %r635, %r633, %p163;
	shfl.sync.bfly.b32	%r703, %r702, 8, 31, -1;
	selp.b32 	%r496, %r633, %r703, %p163;
	selp.b32 	%r497, %r703, %r635, %p163;
	selp.b32 	%r704, %r650, %r648, %p163;
	shfl.sync.bfly.b32	%r705, %r704, 8, 31, -1;
	selp.b32 	%r504, %r648, %r705, %p163;
	selp.b32 	%r505, %r705, %r650, %p163;
	selp.b32 	%r706, %r651, %r649, %p163;
	shfl.sync.bfly.b32	%r707, %r706, 8, 31, -1;
	selp.b32 	%r512, %r649, %r707, %p163;
	selp.b32 	%r513, %r707, %r651, %p163;
	selp.b32 	%r708, %r666, %r664, %p163;
	shfl.sync.bfly.b32	%r709, %r708, 8, 31, -1;
	selp.b32 	%r520, %r664, %r709, %p163;
	selp.b32 	%r521, %r709, %r666, %p163;
	selp.b32 	%r710, %r667, %r665, %p163;
	shfl.sync.bfly.b32	%r711, %r710, 8, 31, -1;
	selp.b32 	%r528, %r665, %r711, %p163;
	selp.b32 	%r529, %r711, %r667, %p163;
	selp.b32 	%r712, %r682, %r680, %p163;
	shfl.sync.bfly.b32	%r713, %r712, 8, 31, -1;
	selp.b32 	%r536, %r680, %r713, %p163;
	selp.b32 	%r537, %r713, %r682, %p163;
	selp.b32 	%r714, %r683, %r681, %p163;
	shfl.sync.bfly.b32	%r715, %r714, 8, 31, -1;
	selp.b32 	%r544, %r681, %r715, %p163;
	selp.b32 	%r545, %r715, %r683, %p163;
	mov.u32 	%r546, 21520;
	// begin inline asm
	prmt.b32 %r423, %r424, %r425, %r546;
	// end inline asm
	mov.u32 	%r550, 30258;
	// begin inline asm
	prmt.b32 %r427, %r424, %r425, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r431, %r432, %r433, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r435, %r432, %r433, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r439, %r440, %r441, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r443, %r440, %r441, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r447, %r448, %r449, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r451, %r448, %r449, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r456, %r457, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r459, %r456, %r457, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r464, %r465, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r467, %r464, %r465, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r472, %r473, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r475, %r472, %r473, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r480, %r481, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r483, %r480, %r481, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r488, %r489, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r488, %r489, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r496, %r497, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r496, %r497, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r504, %r505, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r507, %r504, %r505, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r512, %r513, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r512, %r513, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r520, %r521, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r520, %r521, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r528, %r529, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r528, %r529, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r536, %r537, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r536, %r537, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r544, %r545, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r544, %r545, %r550;
	// end inline asm
	st.shared.u32 	[%rd6], %r423;
	st.shared.u32 	[%rd7+128], %r427;
	st.shared.u32 	[%rd7+4], %r431;
	st.shared.u32 	[%rd7+132], %r435;
	st.shared.u32 	[%rd8], %r439;
	st.shared.u32 	[%rd9+128], %r443;
	st.shared.u32 	[%rd9+4], %r447;
	st.shared.u32 	[%rd9+132], %r451;
	st.shared.u32 	[%rd10], %r455;
	st.shared.u32 	[%rd11+128], %r459;
	st.shared.u32 	[%rd11+4], %r463;
	st.shared.u32 	[%rd11+132], %r467;
	st.shared.u32 	[%rd12], %r471;
	st.shared.u32 	[%rd13+128], %r475;
	st.shared.u32 	[%rd13+4], %r479;
	st.shared.u32 	[%rd13+132], %r483;
	st.shared.u32 	[%rd14], %r487;
	st.shared.u32 	[%rd15+128], %r491;
	st.shared.u32 	[%rd15+4], %r495;
	st.shared.u32 	[%rd15+132], %r499;
	st.shared.u32 	[%rd16], %r503;
	st.shared.u32 	[%rd17+128], %r507;
	st.shared.u32 	[%rd17+4], %r511;
	st.shared.u32 	[%rd17+132], %r515;
	st.shared.u32 	[%rd18], %r519;
	st.shared.u32 	[%rd19+128], %r523;
	st.shared.u32 	[%rd19+4], %r527;
	st.shared.u32 	[%rd19+132], %r531;
	st.shared.u32 	[%rd20], %r535;
	st.shared.u32 	[%rd21+128], %r539;
	st.shared.u32 	[%rd21+4], %r543;
	st.shared.u32 	[%rd21+132], %r547;
	bar.sync 	0;
	mov.u32 	%r1319, 256;
	mov.u64 	%rd245, %rd39;
	mov.u64 	%rd246, %rd38;
	mov.u32 	%r1320, %r1315;
	mov.u32 	%r1321, %r1316;
$L__BB0_66:                             // %L17560
                                        //   Parent Loop BB0_65 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1316, %r1322;
	mov.u32 	%r1315, %r1321;
	ld.shared.u32 	%r1322, [%rd245];
	// begin inline asm
	mov.b32 %r721, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r732, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r720, %r1322, -2004318072;
	mov.u32 	%r719, 983055;
	// begin inline asm
	lop3.b32 %r718, %r719, %r720, %r721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r722, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r723, %r721, %r722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r726, %r718, %r723;
	// end inline asm
	mov.u32 	%r730, 15728880;
	// begin inline asm
	lop3.b32 %r729, %r730, %r720, %r732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r733, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r734, %r732, %r733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r737, %r729, %r734;
	// end inline asm
	shr.u32 	%r742, %r720, 8;
	// begin inline asm
	lop3.b32 %r740, %r719, %r742, %r721, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r744, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r745, %r721, %r744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r748, %r740, %r745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r751, %r730, %r742, %r732, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r755, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r756, %r732, %r755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r759, %r751, %r756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r777, %r209;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r779, %r777, %r759;
	// end inline asm
	// begin inline asm
	mov.b32 %r787, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r798, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r786, %r1320, -2004318072;
	// begin inline asm
	lop3.b32 %r784, %r719, %r786, %r787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r788, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r789, %r787, %r788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r792, %r784, %r789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r795, %r730, %r786, %r798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r799, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r800, %r798, %r799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r803, %r795, %r800;
	// end inline asm
	shr.u32 	%r808, %r786, 8;
	// begin inline asm
	lop3.b32 %r806, %r719, %r808, %r787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r810, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r811, %r787, %r810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r814, %r806, %r811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r817, %r730, %r808, %r798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r821, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r822, %r798, %r821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r825, %r817, %r822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r828, %r155, %r792, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r832, %r155, %r803, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r836, %r155, %r814, %r774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r840, %r155, %r825, %r779;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r848, %r1315, -2004318072;
	// begin inline asm
	lop3.b32 %r846, %r719, %r848, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r849, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r857, %r730, %r848, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r862, %r860, %r861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r857, %r862;
	// end inline asm
	shr.u32 	%r870, %r848, 8;
	// begin inline asm
	lop3.b32 %r868, %r719, %r870, %r849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r872, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r873, %r849, %r872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r876, %r868, %r873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r879, %r730, %r870, %r860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r884, %r860, %r883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r887, %r879, %r884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r890, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r892, %r890, %r854, %r828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r896, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r898, %r896, %r865, %r832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r902, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r904, %r902, %r876, %r836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r908, %r173;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r910, %r908, %r887, %r840;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs61, %rs61};
	// end inline asm
	xor.b32  	%r918, %r1316, -2004318072;
	// begin inline asm
	lop3.b32 %r916, %r719, %r918, %r919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r921, %r919, %r920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r924, %r916, %r921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r927, %r730, %r918, %r930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r931, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r932, %r930, %r931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r935, %r927, %r932;
	// end inline asm
	shr.u32 	%r940, %r918, 8;
	// begin inline asm
	lop3.b32 %r938, %r719, %r940, %r919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r919, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r949, %r730, %r940, %r930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r930, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r983, %r191, %r924, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r980, %r191, %r935, %r898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r992, %r191, %r946, %r904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r989, %r191, %r957, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r976, %r215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r978, %r976, %r980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r981, %r212, %r983, %r978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r985, %r215;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r987, %r985, %r989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r990, %r212, %r992, %r987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r994, %r215, %r983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r997, %r212, %r980, %r994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1001, %r215, %r992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1004, %r212, %r989, %r1001;
	// end inline asm
	mov.u32 	%r1016, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1008, %r1009}, {%r271, %r277, %r274, %r280}, {%r981, %r997}, {%r1016, %r1016};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1018, %r1019}, {%r271, %r277, %r274, %r280}, {%r990, %r1004}, {%r1016, %r1016};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1028, %r1029}, {%r312, %r318, %r315, %r321}, {%r1008, %r1009}, {%r1016, %r1016};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1038, %r1039}, {%r312, %r318, %r315, %r321}, {%r1018, %r1019}, {%r1016, %r1016};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1048, %r62, %r1028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1051, %r62, %r1029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1054, %r62, %r1038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1057, %r62, %r1039;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs83, %rs83};
	// end inline asm
	mov.u16 	%rs72, 18176;
	// begin inline asm
	mov.b32 %r1061, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1062, %r1048, %r1060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1065, %r1062, %r1061;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1069, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1070, %r1051, %r1068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1073, %r1070, %r1069;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1078, %r1054, %r1076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1081, %r1078, %r1077;
	// end inline asm
	// begin inline asm
	mov.b32 %r1084, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs72, %rs72};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1086, %r1057, %r1084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1089, %r1086, %r1085;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs87, %rs87};
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1095, %r1093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1065, %r1094;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1073, %r1101;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1095, %r1107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1081, %r1108;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs95, %rs95};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1095, %r1114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1118, %r1089, %r1115;
	// end inline asm
	mov.u32 	%r1124, 25152;
	// begin inline asm
	prmt.b32 %r1121, %r1097, %r1111, %r1124;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1125, %r1104, %r1118, %r1124;
	// end inline asm
	shl.b32 	%r1132, %r1125, 4;
	mov.u32 	%r1130, 252645135;
	// begin inline asm
	lop3.b32 %r1129, %r1130, %r1121, %r1132, 202;
	// end inline asm
	xor.b32  	%r1133, %r1129, -2004318072;
	st.shared.u32 	[%rd246], %r1133;
	add.s32 	%r1319, %r1319, -8;
	add.s64 	%rd246, %rd246, 1156;
	add.s64 	%rd245, %rd245, 1156;
	setp.eq.s32 	%p188, %r1319, 0;
	mov.u32 	%r1320, %r1315;
	mov.u32 	%r1321, %r1316;
	@%p188 bra 	$L__BB0_67;
	bra.uni 	$L__BB0_66;
$L__BB0_67:                             // %guard_exit13331
                                        //   in Loop: Header=BB0_65 Depth=1
	bar.sync 	0;
	or.b32  	%r87, %r53, %r46;
	ld.shared.u32 	%r1139, [%rd22];
	ld.shared.u32 	%r1140, [%rd23+128];
	ld.shared.u32 	%r1147, [%rd23+4];
	ld.shared.u32 	%r1148, [%rd23+132];
	ld.shared.u32 	%r1155, [%rd24];
	ld.shared.u32 	%r1156, [%rd25+128];
	ld.shared.u32 	%r1163, [%rd25+4];
	ld.shared.u32 	%r1164, [%rd25+132];
	ld.shared.u32 	%r1171, [%rd26];
	ld.shared.u32 	%r1172, [%rd27+128];
	ld.shared.u32 	%r1179, [%rd27+4];
	ld.shared.u32 	%r1180, [%rd27+132];
	ld.shared.u32 	%r1187, [%rd28];
	ld.shared.u32 	%r1188, [%rd29+128];
	ld.shared.u32 	%r1195, [%rd29+4];
	ld.shared.u32 	%r1196, [%rd29+132];
	ld.shared.u32 	%r1203, [%rd30];
	ld.shared.u32 	%r1204, [%rd31+128];
	ld.shared.u32 	%r1211, [%rd31+4];
	ld.shared.u32 	%r1212, [%rd31+132];
	ld.shared.u32 	%r1219, [%rd32];
	ld.shared.u32 	%r1220, [%rd33+128];
	ld.shared.u32 	%r1227, [%rd33+4];
	ld.shared.u32 	%r1228, [%rd33+132];
	ld.shared.u32 	%r1235, [%rd34];
	ld.shared.u32 	%r1236, [%rd35+128];
	ld.shared.u32 	%r1243, [%rd35+4];
	ld.shared.u32 	%r1244, [%rd35+132];
	ld.shared.u32 	%r1251, [%rd36];
	ld.shared.u32 	%r1252, [%rd37+128];
	ld.shared.u32 	%r1259, [%rd37+4];
	ld.shared.u32 	%r1260, [%rd37+132];
	// begin inline asm
	prmt.b32 %r1134, %r1139, %r1140, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1138, %r1139, %r1140, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1142, %r1147, %r1148, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1146, %r1147, %r1148, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1150, %r1155, %r1156, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1154, %r1155, %r1156, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1158, %r1163, %r1164, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1162, %r1163, %r1164, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1166, %r1171, %r1172, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1170, %r1171, %r1172, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1174, %r1179, %r1180, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1178, %r1179, %r1180, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1182, %r1187, %r1188, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1186, %r1187, %r1188, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1190, %r1195, %r1196, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1194, %r1195, %r1196, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1198, %r1203, %r1204, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1202, %r1203, %r1204, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1206, %r1211, %r1212, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1210, %r1211, %r1212, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1214, %r1219, %r1220, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1218, %r1219, %r1220, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1222, %r1227, %r1228, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1226, %r1227, %r1228, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1230, %r1235, %r1236, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1234, %r1235, %r1236, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1238, %r1243, %r1244, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1242, %r1243, %r1244, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1246, %r1251, %r1252, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1250, %r1251, %r1252, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1254, %r1259, %r1260, %r546;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1258, %r1259, %r1260, %r550;
	// end inline asm
	selp.b32 	%r1262, %r1138, %r1134, %p163;
	shfl.sync.bfly.b32	%r92, %r1262, 8, 31, -1;
	selp.b32 	%r1263, %r1146, %r1142, %p163;
	shfl.sync.bfly.b32	%r93, %r1263, 8, 31, -1;
	selp.b32 	%r1264, %r1154, %r1150, %p163;
	shfl.sync.bfly.b32	%r1265, %r1264, 8, 31, -1;
	selp.b32 	%r94, %r1150, %r1265, %p163;
	selp.b32 	%r95, %r1265, %r1154, %p163;
	selp.b32 	%r1266, %r1162, %r1158, %p163;
	shfl.sync.bfly.b32	%r1267, %r1266, 8, 31, -1;
	selp.b32 	%r96, %r1158, %r1267, %p163;
	selp.b32 	%r97, %r1267, %r1162, %p163;
	selp.b32 	%r1268, %r1170, %r1166, %p163;
	shfl.sync.bfly.b32	%r1269, %r1268, 8, 31, -1;
	selp.b32 	%r98, %r1166, %r1269, %p163;
	selp.b32 	%r99, %r1269, %r1170, %p163;
	selp.b32 	%r1270, %r1178, %r1174, %p163;
	shfl.sync.bfly.b32	%r1271, %r1270, 8, 31, -1;
	selp.b32 	%r100, %r1174, %r1271, %p163;
	selp.b32 	%r101, %r1271, %r1178, %p163;
	selp.b32 	%r1272, %r1186, %r1182, %p163;
	shfl.sync.bfly.b32	%r1273, %r1272, 8, 31, -1;
	selp.b32 	%r102, %r1182, %r1273, %p163;
	selp.b32 	%r103, %r1273, %r1186, %p163;
	selp.b32 	%r1274, %r1194, %r1190, %p163;
	shfl.sync.bfly.b32	%r1275, %r1274, 8, 31, -1;
	selp.b32 	%r104, %r1190, %r1275, %p163;
	selp.b32 	%r105, %r1275, %r1194, %p163;
	selp.b32 	%r1276, %r1202, %r1198, %p163;
	shfl.sync.bfly.b32	%r1277, %r1276, 8, 31, -1;
	selp.b32 	%r106, %r1198, %r1277, %p163;
	selp.b32 	%r107, %r1277, %r1202, %p163;
	selp.b32 	%r1278, %r1210, %r1206, %p163;
	shfl.sync.bfly.b32	%r1279, %r1278, 8, 31, -1;
	selp.b32 	%r108, %r1206, %r1279, %p163;
	selp.b32 	%r109, %r1279, %r1210, %p163;
	selp.b32 	%r1280, %r1218, %r1214, %p163;
	shfl.sync.bfly.b32	%r1281, %r1280, 8, 31, -1;
	selp.b32 	%r110, %r1214, %r1281, %p163;
	selp.b32 	%r111, %r1281, %r1218, %p163;
	selp.b32 	%r1282, %r1226, %r1222, %p163;
	shfl.sync.bfly.b32	%r1283, %r1282, 8, 31, -1;
	selp.b32 	%r112, %r1222, %r1283, %p163;
	selp.b32 	%r113, %r1283, %r1226, %p163;
	selp.b32 	%r1284, %r1234, %r1230, %p163;
	shfl.sync.bfly.b32	%r1285, %r1284, 8, 31, -1;
	selp.b32 	%r114, %r1230, %r1285, %p163;
	selp.b32 	%r115, %r1285, %r1234, %p163;
	selp.b32 	%r1286, %r1242, %r1238, %p163;
	shfl.sync.bfly.b32	%r1287, %r1286, 8, 31, -1;
	selp.b32 	%r116, %r1238, %r1287, %p163;
	selp.b32 	%r117, %r1287, %r1242, %p163;
	selp.b32 	%r1288, %r1250, %r1246, %p163;
	shfl.sync.bfly.b32	%r1289, %r1288, 8, 31, -1;
	selp.b32 	%r118, %r1246, %r1289, %p163;
	selp.b32 	%r119, %r1289, %r1250, %p163;
	selp.b32 	%r1290, %r1258, %r1254, %p163;
	shfl.sync.bfly.b32	%r1291, %r1290, 8, 31, -1;
	selp.b32 	%r120, %r1254, %r1291, %p163;
	selp.b32 	%r121, %r1291, %r1258, %p163;
	setp.gt.u32 	%p190, %r87, 23;
	shl.b32 	%r1310, %r87, 9;
	@%p190 bra 	$L__BB0_89;
// %bb.68:                              // %guard_exit13331.pass12411_crit_edge
                                        //   in Loop: Header=BB0_65 Depth=1
	or.b32  	%r1327, %r1310, %r49;
	bra.uni 	$L__BB0_90;
$L__BB0_91:                             // %L30103
	st.global.u32 	[%rd4], %r1309;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r1308, 2;
	st.global.u32 	[%rd4], %r1308;
	mov.u64 	%rd243, exception2679;
	cvta.global.u64 	%rd244, %rd243;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd244;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r123;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r1307, 3;
	st.global.u32 	[%rd4], %r1307;
	mov.u64 	%rd241, exception2679;
	cvta.global.u64 	%rd242, %rd241;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd242;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r123;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd51, exception1;
	cvta.global.u64 	%rd52, %rd51;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd52;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd46;
	st.param.b32 	[param0+8], %r123;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
