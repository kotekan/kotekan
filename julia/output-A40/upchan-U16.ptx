// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1549[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception11569[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<222>;
	.reg .b16 	%rs<107>;
	.reg .f32 	%f<927>;
	.reg .b32 	%r<1157>;
	.reg .b64 	%rd<103>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r148, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd29, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r149, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r149, 69887;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L11
	ld.param.u64 	%rd34, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd30, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r150, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r151, %r2, %r150;
	or.b32  	%r152, %r151, %r4;
	mul.wide.u32 	%rd40, %r152, 4;
	add.s64 	%rd4, %rd34, %rd40;
	mov.u32 	%r153, 1;
	st.global.u32 	[%rd4], %r153;
	ld.global.u32 	%r5, [%rd30];
	setp.lt.u32 	%p2, %r5, 32769;
	and.b32  	%r154, %r5, 255;
	setp.eq.s32 	%p3, %r154, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L271
	bfe.u32 	%r10, %r2, 1, 1;
	and.b32  	%r11, %r2, 1;
	shl.b32 	%r161, %r11, 1;
	shl.b32 	%r162, %r10, 2;
	or.b32  	%r163, %r161, %r162;
	bfe.u32 	%r13, %r2, 2, 1;
	or.b32  	%r14, %r13, %r163;
	or.b32  	%r15, %r14, 8;
	mov.f32 	%f184, 0f40000000;
	mov.f32 	%f185, 0f427C0000;
	div.approx.f32 	%f1, %f185, %f184;
	cvt.rn.f32.s32 	%f186, %r14;
	sub.f32 	%f187, %f186, %f1;
	mov.f32 	%f188, 0f42820000;
	div.approx.f32 	%f189, %f187, %f188;
	abs.f32 	%f190, %f189;
	setp.gt.f32 	%p5, %f190, 0f4B800000;
	mul.f32 	%f191, %f189, 0f00000000;
	mov.f32 	%f216, 0f41800000;
	div.approx.f32 	%f3, %f187, %f216;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f894, 0f3F800000;
	mov.f32 	%f887, %f894;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L453
	sin.approx.f32 	%f217, %f3;
	div.approx.f32 	%f887, %f217, %f3;
LBB0_6:                                 // %L456
	selp.f32 	%f192, %f191, %f189, %p5;
	cvt.rn.f32.s32 	%f220, %r15;
	sub.f32 	%f221, %f220, %f1;
	div.approx.f32 	%f223, %f221, %f188;
	abs.f32 	%f224, %f223;
	setp.gt.f32 	%p11, %f224, 0f4B800000;
	mul.f32 	%f225, %f223, 0f00000000;
	selp.f32 	%f226, %f225, %f223, %p11;
	div.approx.f32 	%f8, %f221, %f216;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f888, %f894;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L473
	sin.approx.f32 	%f251, %f8;
	div.approx.f32 	%f888, %f251, %f8;
LBB0_8:                                 // %L476
	add.f32 	%f193, %f192, %f192;
	add.f32 	%f227, %f226, %f226;
	or.b32  	%r181, %r14, 16;
	or.b32  	%r17, %r14, 24;
	cvt.rn.f32.s32 	%f255, %r181;
	sub.f32 	%f256, %f255, %f1;
	div.approx.f32 	%f258, %f256, %f188;
	abs.f32 	%f259, %f258;
	setp.gt.f32 	%p17, %f259, 0f4B800000;
	mul.f32 	%f260, %f258, 0f00000000;
	selp.f32 	%f261, %f260, %f258, %p17;
	add.f32 	%f262, %f261, %f261;
	div.approx.f32 	%f12, %f256, %f216;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f889, %f894;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L561
	sin.approx.f32 	%f286, %f12;
	div.approx.f32 	%f889, %f286, %f12;
LBB0_10:                                // %L564
	mov.b32 	%r164, %f193;
	mov.b32 	%r171, %f227;
	mov.b32 	%r182, %f262;
	cvt.rn.f32.s32 	%f289, %r17;
	sub.f32 	%f290, %f289, %f1;
	div.approx.f32 	%f292, %f290, %f188;
	abs.f32 	%f293, %f292;
	setp.gt.f32 	%p23, %f293, 0f4B800000;
	mul.f32 	%f294, %f292, 0f00000000;
	selp.f32 	%f295, %f294, %f292, %p23;
	add.f32 	%f296, %f295, %f295;
	mov.b32 	%r189, %f296;
	div.approx.f32 	%f17, %f290, %f216;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f890, %f894;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L581
	sin.approx.f32 	%f320, %f17;
	div.approx.f32 	%f890, %f320, %f17;
LBB0_12:                                // %L584
	and.b32  	%r165, %r164, -2147483648;
	and.b32  	%r172, %r171, -2147483648;
	and.b32  	%r183, %r182, -2147483648;
	and.b32  	%r190, %r189, -2147483648;
	or.b32  	%r199, %r14, 32;
	or.b32  	%r19, %r14, 40;
	cvt.rn.f32.s32 	%f324, %r199;
	sub.f32 	%f325, %f324, %f1;
	div.approx.f32 	%f327, %f325, %f188;
	abs.f32 	%f328, %f327;
	setp.gt.f32 	%p29, %f328, 0f4B800000;
	mul.f32 	%f329, %f327, 0f00000000;
	selp.f32 	%f330, %f329, %f327, %p29;
	add.f32 	%f331, %f330, %f330;
	mov.b32 	%r200, %f331;
	and.b32  	%r201, %r200, -2147483648;
	div.approx.f32 	%f21, %f325, %f216;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f891, %f894;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L669
	sin.approx.f32 	%f355, %f21;
	div.approx.f32 	%f891, %f355, %f21;
LBB0_14:                                // %L672
	or.b32  	%r166, %r165, 1056964608;
	or.b32  	%r173, %r172, 1056964608;
	or.b32  	%r184, %r183, 1056964608;
	or.b32  	%r191, %r190, 1056964608;
	or.b32  	%r202, %r201, 1056964608;
	cvt.rn.f32.s32 	%f358, %r19;
	sub.f32 	%f359, %f358, %f1;
	div.approx.f32 	%f361, %f359, %f188;
	abs.f32 	%f362, %f361;
	setp.gt.f32 	%p35, %f362, 0f4B800000;
	mul.f32 	%f363, %f361, 0f00000000;
	selp.f32 	%f364, %f363, %f361, %p35;
	add.f32 	%f365, %f364, %f364;
	mov.b32 	%r207, %f365;
	and.b32  	%r208, %r207, -2147483648;
	or.b32  	%r209, %r208, 1056964608;
	div.approx.f32 	%f26, %f359, %f216;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f892, %f894;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L689
	sin.approx.f32 	%f389, %f26;
	div.approx.f32 	%f892, %f389, %f26;
LBB0_16:                                // %L692
	mov.b32 	%f194, %r166;
	mov.b32 	%f228, %r173;
	mov.b32 	%f263, %r184;
	mov.b32 	%f297, %r191;
	mov.b32 	%f332, %r202;
	mov.b32 	%f366, %r209;
	or.b32  	%r217, %r14, 48;
	or.b32  	%r21, %r14, 56;
	cvt.rn.f32.s32 	%f393, %r217;
	sub.f32 	%f394, %f393, %f1;
	div.approx.f32 	%f396, %f394, %f188;
	abs.f32 	%f397, %f396;
	setp.gt.f32 	%p41, %f397, 0f4B800000;
	mul.f32 	%f398, %f396, 0f00000000;
	selp.f32 	%f399, %f398, %f396, %p41;
	add.f32 	%f400, %f399, %f399;
	mov.b32 	%r218, %f400;
	and.b32  	%r219, %r218, -2147483648;
	or.b32  	%r220, %r219, 1056964608;
	mov.b32 	%f401, %r220;
	div.approx.f32 	%f30, %f394, %f216;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f893, %f894;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L777
	sin.approx.f32 	%f424, %f30;
	div.approx.f32 	%f893, %f424, %f30;
LBB0_18:                                // %L780
	add.f32 	%f195, %f193, %f194;
	abs.f32 	%f197, %f193;
	add.f32 	%f229, %f227, %f228;
	abs.f32 	%f231, %f227;
	add.f32 	%f264, %f262, %f263;
	abs.f32 	%f266, %f262;
	add.f32 	%f298, %f296, %f297;
	abs.f32 	%f300, %f296;
	add.f32 	%f333, %f331, %f332;
	abs.f32 	%f335, %f331;
	add.f32 	%f367, %f365, %f366;
	abs.f32 	%f369, %f365;
	add.f32 	%f402, %f400, %f401;
	abs.f32 	%f404, %f400;
	cvt.rn.f32.s32 	%f427, %r21;
	sub.f32 	%f428, %f427, %f1;
	div.approx.f32 	%f430, %f428, %f188;
	abs.f32 	%f431, %f430;
	setp.gt.f32 	%p47, %f431, 0f4B800000;
	mul.f32 	%f432, %f430, 0f00000000;
	selp.f32 	%f433, %f432, %f430, %p47;
	add.f32 	%f434, %f433, %f433;
	mov.b32 	%r225, %f434;
	and.b32  	%r226, %r225, -2147483648;
	or.b32  	%r227, %r226, 1056964608;
	mov.b32 	%f435, %r227;
	add.f32 	%f436, %f434, %f435;
	abs.f32 	%f438, %f434;
	div.approx.f32 	%f35, %f428, %f216;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L797
	sin.approx.f32 	%f458, %f35;
	div.approx.f32 	%f894, %f458, %f35;
LBB0_20:                                // %L800
	cvt.rzi.f32.f32 	%f196, %f195;
	setp.gt.f32 	%p6, %f197, 0f4B000000;
	cvt.rzi.f32.f32 	%f230, %f229;
	setp.gt.f32 	%p12, %f231, 0f4B000000;
	cvt.rzi.f32.f32 	%f265, %f264;
	setp.gt.f32 	%p18, %f266, 0f4B000000;
	cvt.rzi.f32.f32 	%f299, %f298;
	setp.gt.f32 	%p24, %f300, 0f4B000000;
	cvt.rzi.f32.f32 	%f334, %f333;
	setp.gt.f32 	%p30, %f335, 0f4B000000;
	cvt.rzi.f32.f32 	%f368, %f367;
	setp.gt.f32 	%p36, %f369, 0f4B000000;
	cvt.rzi.f32.f32 	%f403, %f402;
	setp.gt.f32 	%p42, %f404, 0f4B000000;
	cvt.rzi.f32.f32 	%f437, %f436;
	setp.gt.f32 	%p48, %f438, 0f4B000000;
	mul.lo.s32 	%r23, %r14, 15;
	cvt.rn.f32.s32 	%f461, %r23;
	div.approx.f32 	%f38, %f461, %f216;
	abs.f32 	%f897, %f38;
	setp.lt.f32 	%p53, %f897, 0f40000000;
	@%p53 bra 	LBB0_32;
// %bb.21:
	setp.gtu.f32 	%p54, %f897, 0f4B800000;
	@%p54 bra 	LBB0_28;
	bra.uni 	LBB0_22;
LBB0_28:
	mov.b32 	%r25, %f897;
	and.b32  	%r235, %r25, 8388607;
	or.b32  	%r1133, %r235, 1065353216;
	mov.b32 	%f896, %r1133;
	add.s32 	%r236, %r25, -1073741824;
	and.b32  	%r1134, %r236, -8388608;
	setp.eq.s32 	%p60, %r1134, 0;
	@%p60 bra 	LBB0_31;
// %bb.29:                              // %.lr.ph1485.preheader
	mov.f32 	%f472, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f471,%f472;
	// end inline asm
LBB0_30:                                // %.lr.ph1485
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r237, %r1134, 192937984;
	add.s32 	%r238, %r237, %r1133;
	mov.b32 	%f473, %r238;
	mul.f32 	%f474, %f471, %f473;
	sub.f32 	%f475, %f473, %f474;
	fma.rn.f32 	%f476, %f475, %f471, %f474;
	sub.f32 	%f477, %f473, %f476;
	fma.rz.f32 	%f478, %f477, %f471, %f476;
	cvt.rzi.f32.f32 	%f479, %f478;
	sub.f32 	%f896, %f473, %f479;
	sub.s32 	%r1134, %r1134, %r237;
	mov.b32 	%r1133, %f896;
	setp.ne.s32 	%p61, %r1134, 0;
	setp.ne.s32 	%p62, %r1133, 0;
	and.pred  	%p63, %p61, %p62;
	@%p63 bra 	LBB0_30;
LBB0_31:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p64, %r25, 2139095039;
	selp.f32 	%f480, 0f7FFFFFFF, 0f4B800000, %p64;
	mul.f32 	%f481, %f896, 0f34000000;
	mul.f32 	%f897, %f480, %f481;
	bra.uni 	LBB0_32;
LBB0_22:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f464, %f897, %f184;
	cvt.rzi.f32.f32 	%f40, %f464;
	fma.rn.f32 	%f41, %f40, 0fC0000000, %f897;
	mov.b32 	%r24, %f41;
	setp.lt.u32 	%p55, %r24, 1073741824;
	mov.f32 	%f895, %f40;
	@%p55 bra 	LBB0_27;
// %bb.23:
	setp.lt.u32 	%p56, %r24, -2147483647;
	@%p56 bra 	LBB0_25;
// %bb.24:
	add.f32 	%f469, %f40, 0fBF800000;
	setp.lt.f32 	%p59, %f41, 0fC0000000;
	selp.f32 	%f470, %f469, %f40, %p59;
	add.f32 	%f895, %f470, 0fBF800000;
	bra.uni 	LBB0_27;
LBB0_25:
	add.f32 	%f895, %f40, 0f3F800000;
	setp.ltu.f32 	%p57, %f41, 0f40800000;
	@%p57 bra 	LBB0_27;
// %bb.26:                              // %__nv_fmaf_rn.exit.i.i.i
	fma.rn.f32 	%f466, %f184, 0fC0400000, %f41;
	setp.ge.f32 	%p58, %f466, 0f00000000;
	selp.f32 	%f467, %f895, %f40, %p58;
	add.f32 	%f468, %f467, 0f3F800000;
	add.f32 	%f895, %f468, 0f3F800000;
LBB0_27:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f897, %f895, 0fC0000000, %f897;
LBB0_32:                                // %__internal_fmodf_kernel.exit.i
	selp.f32 	%f198, %f193, %f196, %p6;
	cvt.rzi.f32.f32 	%f199, %f193;
	setp.lt.f32 	%p7, %f197, 0f3F000000;
	selp.f32 	%f232, %f227, %f230, %p12;
	cvt.rzi.f32.f32 	%f233, %f227;
	setp.lt.f32 	%p13, %f231, 0f3F000000;
	selp.f32 	%f267, %f262, %f265, %p18;
	cvt.rzi.f32.f32 	%f268, %f262;
	setp.lt.f32 	%p19, %f266, 0f3F000000;
	selp.f32 	%f301, %f296, %f299, %p24;
	cvt.rzi.f32.f32 	%f302, %f296;
	setp.lt.f32 	%p25, %f300, 0f3F000000;
	selp.f32 	%f336, %f331, %f334, %p30;
	cvt.rzi.f32.f32 	%f337, %f331;
	setp.lt.f32 	%p31, %f335, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p36;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p37, %f369, 0f3F000000;
	selp.f32 	%f405, %f400, %f403, %p42;
	cvt.rzi.f32.f32 	%f406, %f400;
	setp.lt.f32 	%p43, %f404, 0f3F000000;
	selp.f32 	%f439, %f434, %f437, %p48;
	cvt.rzi.f32.f32 	%f440, %f434;
	setp.lt.f32 	%p49, %f438, 0f3F000000;
	abs.f32 	%f482, %f897;
	setp.gtu.f32 	%p65, %f482, 0f7F800000;
	@%p65 bra 	LBB0_34;
// %bb.33:
	mov.b32 	%r239, %f38;
	and.b32  	%r240, %r239, -2147483648;
	mov.b32 	%r241, %f897;
	or.b32  	%r242, %r240, %r241;
	mov.b32 	%f897, %r242;
LBB0_34:                                // %__nv_fmodf.exit
	selp.f32 	%f200, %f199, %f198, %p7;
	selp.f32 	%f234, %f233, %f232, %p13;
	selp.f32 	%f269, %f268, %f267, %p19;
	selp.f32 	%f303, %f302, %f301, %p25;
	selp.f32 	%f338, %f337, %f336, %p31;
	selp.f32 	%f372, %f371, %f370, %p37;
	selp.f32 	%f407, %f406, %f405, %p43;
	selp.f32 	%f441, %f440, %f439, %p49;
	add.f32 	%f483, %f897, %f897;
	mov.b32 	%r243, %f483;
	and.b32  	%r244, %r243, -2147483648;
	or.b32  	%r245, %r244, 1056964608;
	mov.b32 	%f484, %r245;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p66, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p66;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p67, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p67;
	add.s32 	%r251, %r23, 120;
	cvt.rn.f32.s32 	%f513, %r251;
	div.approx.f32 	%f57, %f513, %f216;
	abs.f32 	%f901, %f57;
	setp.lt.f32 	%p73, %f901, 0f40000000;
	@%p73 bra 	LBB0_46;
// %bb.35:
	setp.gtu.f32 	%p74, %f901, 0f4B800000;
	@%p74 bra 	LBB0_42;
	bra.uni 	LBB0_36;
LBB0_42:
	mov.b32 	%r33, %f901;
	and.b32  	%r252, %r33, 8388607;
	or.b32  	%r1135, %r252, 1065353216;
	mov.b32 	%f900, %r1135;
	add.s32 	%r253, %r33, -1073741824;
	and.b32  	%r1136, %r253, -8388608;
	setp.eq.s32 	%p80, %r1136, 0;
	@%p80 bra 	LBB0_45;
// %bb.43:                              // %.lr.ph1480.preheader
	mov.f32 	%f524, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f523,%f524;
	// end inline asm
LBB0_44:                                // %.lr.ph1480
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r254, %r1136, 192937984;
	add.s32 	%r255, %r254, %r1135;
	mov.b32 	%f525, %r255;
	mul.f32 	%f526, %f523, %f525;
	sub.f32 	%f527, %f525, %f526;
	fma.rn.f32 	%f528, %f527, %f523, %f526;
	sub.f32 	%f529, %f525, %f528;
	fma.rz.f32 	%f530, %f529, %f523, %f528;
	cvt.rzi.f32.f32 	%f531, %f530;
	sub.f32 	%f900, %f525, %f531;
	sub.s32 	%r1136, %r1136, %r254;
	mov.b32 	%r1135, %f900;
	setp.ne.s32 	%p81, %r1136, 0;
	setp.ne.s32 	%p82, %r1135, 0;
	and.pred  	%p83, %p81, %p82;
	@%p83 bra 	LBB0_44;
LBB0_45:                                // %__internal_fmodf_slowpath_mod.exit.i.i942
	setp.gt.u32 	%p84, %r33, 2139095039;
	selp.f32 	%f532, 0f7FFFFFFF, 0f4B800000, %p84;
	mul.f32 	%f533, %f900, 0f34000000;
	mul.f32 	%f901, %f532, %f533;
	bra.uni 	LBB0_46;
LBB0_36:                                // %__nv_fast_fdividef.exit.i.i.i908
	div.approx.f32 	%f516, %f901, %f184;
	cvt.rzi.f32.f32 	%f59, %f516;
	fma.rn.f32 	%f60, %f59, 0fC0000000, %f901;
	mov.b32 	%r32, %f60;
	setp.lt.u32 	%p75, %r32, 1073741824;
	mov.f32 	%f899, %f59;
	@%p75 bra 	LBB0_41;
// %bb.37:
	setp.lt.u32 	%p76, %r32, -2147483647;
	@%p76 bra 	LBB0_39;
// %bb.38:
	add.f32 	%f521, %f59, 0fBF800000;
	setp.lt.f32 	%p79, %f60, 0fC0000000;
	selp.f32 	%f522, %f521, %f59, %p79;
	add.f32 	%f899, %f522, 0fBF800000;
	bra.uni 	LBB0_41;
LBB0_39:
	add.f32 	%f899, %f59, 0f3F800000;
	setp.ltu.f32 	%p77, %f60, 0f40800000;
	@%p77 bra 	LBB0_41;
// %bb.40:                              // %__nv_fmaf_rn.exit.i.i.i913
	fma.rn.f32 	%f518, %f184, 0fC0400000, %f60;
	setp.ge.f32 	%p78, %f518, 0f00000000;
	selp.f32 	%f519, %f899, %f59, %p78;
	add.f32 	%f520, %f519, 0f3F800000;
	add.f32 	%f899, %f520, 0f3F800000;
LBB0_41:                                // %__internal_fmodf_fastpath_quot.exit.i.i916
	fma.rn.f32 	%f901, %f899, 0fC0000000, %f901;
LBB0_46:                                // %__internal_fmodf_kernel.exit.i945
	fma.rn.f32 	%f201, %f200, 0fBF000000, %f192;
	fma.rn.f32 	%f235, %f234, 0fBF000000, %f226;
	fma.rn.f32 	%f270, %f269, 0fBF000000, %f261;
	fma.rn.f32 	%f304, %f303, 0fBF000000, %f295;
	fma.rn.f32 	%f339, %f338, 0fBF000000, %f330;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f408, %f407, 0fBF000000, %f399;
	fma.rn.f32 	%f442, %f441, 0fBF000000, %f433;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f897;
	shr.u32 	%r12, %r2, 2;
	abs.f32 	%f534, %f901;
	setp.gtu.f32 	%p85, %f534, 0f7F800000;
	@%p85 bra 	LBB0_48;
// %bb.47:
	mov.b32 	%r256, %f57;
	and.b32  	%r257, %r256, -2147483648;
	mov.b32 	%r258, %f901;
	or.b32  	%r259, %r257, %r258;
	mov.b32 	%f901, %r259;
LBB0_48:                                // %__nv_fmodf.exit948
	mul.f32 	%f202, %f201, %f201;
	mul.f32 	%f236, %f235, %f235;
	mul.f32 	%f271, %f270, %f270;
	mul.f32 	%f305, %f304, %f304;
	mul.f32 	%f340, %f339, %f339;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f409, %f408, %f408;
	mul.f32 	%f443, %f442, %f442;
	mul.f32 	%f492, %f491, %f491;
	add.f32 	%f535, %f901, %f901;
	mov.b32 	%r266, %f535;
	and.b32  	%r267, %r266, -2147483648;
	or.b32  	%r268, %r267, 1056964608;
	mov.b32 	%f536, %r268;
	add.f32 	%f537, %f535, %f536;
	cvt.rzi.f32.f32 	%f538, %f537;
	abs.f32 	%f539, %f535;
	setp.gt.f32 	%p86, %f539, 0f4B000000;
	selp.f32 	%f540, %f535, %f538, %p86;
	cvt.rzi.f32.f32 	%f541, %f535;
	setp.lt.f32 	%p87, %f539, 0f3F000000;
	selp.f32 	%f542, %f541, %f540, %p87;
	fma.rn.f32 	%f543, %f542, 0fBF000000, %f901;
	mul.f32 	%f544, %f543, %f543;
	and.b32  	%r274, %r2, 3;
	mul.lo.s32 	%r275, %r274, %r12;
	shl.b32 	%r276, %r275, 1;
	neg.s32 	%r44, %r276;
	cvt.rn.f32.s32 	%f567, %r44;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f74, %f567, %f568;
	abs.f32 	%f905, %f74;
	setp.lt.f32 	%p93, %f905, 0f40000000;
	@%p93 bra 	LBB0_60;
// %bb.49:
	setp.gtu.f32 	%p94, %f905, 0f4B800000;
	@%p94 bra 	LBB0_56;
	bra.uni 	LBB0_50;
LBB0_56:
	mov.b32 	%r46, %f905;
	and.b32  	%r277, %r46, 8388607;
	or.b32  	%r1137, %r277, 1065353216;
	mov.b32 	%f904, %r1137;
	add.s32 	%r278, %r46, -1073741824;
	and.b32  	%r1138, %r278, -8388608;
	setp.eq.s32 	%p100, %r1138, 0;
	@%p100 bra 	LBB0_59;
// %bb.57:                              // %.lr.ph1469.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_58:                                // %.lr.ph1469
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r279, %r1138, 192937984;
	add.s32 	%r280, %r279, %r1137;
	mov.b32 	%f579, %r280;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f904, %f579, %f585;
	sub.s32 	%r1138, %r1138, %r279;
	mov.b32 	%r1137, %f904;
	setp.ne.s32 	%p101, %r1138, 0;
	setp.ne.s32 	%p102, %r1137, 0;
	and.pred  	%p103, %p101, %p102;
	@%p103 bra 	LBB0_58;
LBB0_59:                                // %__internal_fmodf_slowpath_mod.exit.i.i995
	setp.gt.u32 	%p104, %r46, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p104;
	mul.f32 	%f587, %f904, 0f34000000;
	mul.f32 	%f905, %f586, %f587;
	bra.uni 	LBB0_60;
LBB0_50:                                // %__nv_fast_fdividef.exit.i.i.i961
	div.approx.f32 	%f570, %f905, %f184;
	cvt.rzi.f32.f32 	%f76, %f570;
	fma.rn.f32 	%f77, %f76, 0fC0000000, %f905;
	mov.b32 	%r45, %f77;
	setp.lt.u32 	%p95, %r45, 1073741824;
	mov.f32 	%f903, %f76;
	@%p95 bra 	LBB0_55;
// %bb.51:
	setp.lt.u32 	%p96, %r45, -2147483647;
	@%p96 bra 	LBB0_53;
// %bb.52:
	add.f32 	%f575, %f76, 0fBF800000;
	setp.lt.f32 	%p99, %f77, 0fC0000000;
	selp.f32 	%f576, %f575, %f76, %p99;
	add.f32 	%f903, %f576, 0fBF800000;
	bra.uni 	LBB0_55;
LBB0_53:
	add.f32 	%f903, %f76, 0f3F800000;
	setp.ltu.f32 	%p97, %f77, 0f40800000;
	@%p97 bra 	LBB0_55;
// %bb.54:                              // %__nv_fmaf_rn.exit.i.i.i966
	fma.rn.f32 	%f572, %f184, 0fC0400000, %f77;
	setp.ge.f32 	%p98, %f572, 0f00000000;
	selp.f32 	%f573, %f903, %f76, %p98;
	add.f32 	%f574, %f573, 0f3F800000;
	add.f32 	%f903, %f574, 0f3F800000;
LBB0_55:                                // %__internal_fmodf_fastpath_quot.exit.i.i969
	fma.rn.f32 	%f905, %f903, 0fC0000000, %f905;
LBB0_60:                                // %__internal_fmodf_kernel.exit.i998
	cvt.rzi.s32.f32 	%r167, %f200;
	fma.rn.f32 	%f203, %f202, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f204, %f202, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r174, %f234;
	fma.rn.f32 	%f237, %f236, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f238, %f236, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r185, %f269;
	fma.rn.f32 	%f272, %f271, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f273, %f271, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r192, %f303;
	fma.rn.f32 	%f306, %f305, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f307, %f305, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r203, %f338;
	fma.rn.f32 	%f341, %f340, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f342, %f340, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r210, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f407;
	fma.rn.f32 	%f410, %f409, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f411, %f409, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r228, %f441;
	fma.rn.f32 	%f444, %f443, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f445, %f443, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f545, %f544, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f546, %f544, 0f3E684E12, 0fBFAAD2E0;
	abs.f32 	%f588, %f905;
	setp.gtu.f32 	%p105, %f588, 0f7F800000;
	@%p105 bra 	LBB0_62;
// %bb.61:
	mov.b32 	%r281, %f74;
	and.b32  	%r282, %r281, -2147483648;
	mov.b32 	%r283, %f905;
	or.b32  	%r284, %r282, %r283;
	mov.b32 	%f905, %r284;
LBB0_62:                                // %__nv_fmodf.exit1001
	add.s32 	%r168, %r167, 1;
	fma.rn.f32 	%f205, %f203, %f202, 0fC0A55DF6;
	fma.rn.f32 	%f206, %f204, %f202, 0f4081E0CF;
	fma.rn.f32 	%f207, %f202, %f201, 0f00000000;
	add.s32 	%r175, %r174, 1;
	fma.rn.f32 	%f239, %f237, %f236, 0fC0A55DF6;
	fma.rn.f32 	%f240, %f238, %f236, 0f4081E0CF;
	fma.rn.f32 	%f241, %f236, %f235, 0f00000000;
	add.s32 	%r186, %r185, 1;
	fma.rn.f32 	%f274, %f272, %f271, 0fC0A55DF6;
	fma.rn.f32 	%f275, %f273, %f271, 0f4081E0CF;
	fma.rn.f32 	%f276, %f271, %f270, 0f00000000;
	add.s32 	%r193, %r192, 1;
	fma.rn.f32 	%f308, %f306, %f305, 0fC0A55DF6;
	fma.rn.f32 	%f309, %f307, %f305, 0f4081E0CF;
	fma.rn.f32 	%f310, %f305, %f304, 0f00000000;
	add.s32 	%r204, %r203, 1;
	fma.rn.f32 	%f343, %f341, %f340, 0fC0A55DF6;
	fma.rn.f32 	%f344, %f342, %f340, 0f4081E0CF;
	fma.rn.f32 	%f345, %f340, %f339, 0f00000000;
	add.s32 	%r211, %r210, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f412, %f410, %f409, 0fC0A55DF6;
	fma.rn.f32 	%f413, %f411, %f409, 0f4081E0CF;
	fma.rn.f32 	%f414, %f409, %f408, 0f00000000;
	add.s32 	%r229, %r228, 1;
	fma.rn.f32 	%f446, %f444, %f443, 0fC0A55DF6;
	fma.rn.f32 	%f447, %f445, %f443, 0f4081E0CF;
	fma.rn.f32 	%f448, %f443, %f442, 0f00000000;
	cvt.rzi.s32.f32 	%r246, %f490;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	cvt.rzi.s32.f32 	%r269, %f542;
	fma.rn.f32 	%f547, %f545, %f544, 0fC0A55DF6;
	fma.rn.f32 	%f548, %f546, %f544, 0f4081E0CF;
	fma.rn.f32 	%f549, %f544, %f543, 0f00000000;
	add.f32 	%f589, %f905, %f905;
	mov.b32 	%r285, %f589;
	and.b32  	%r286, %r285, -2147483648;
	or.b32  	%r287, %r286, 1056964608;
	mov.b32 	%f590, %r287;
	add.f32 	%f591, %f589, %f590;
	cvt.rzi.f32.f32 	%f592, %f591;
	abs.f32 	%f593, %f589;
	setp.gt.f32 	%p106, %f593, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p106;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p107, %f593, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p107;
	cvt.rzi.s32.f32 	%r288, %f596;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f905;
	mul.f32 	%f598, %f597, %f597;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r289, %r288, 1;
	shl.b32 	%r293, %r12, 3;
	sub.s32 	%r294, %r44, %r293;
	cvt.rn.f32.s32 	%f619, %r294;
	div.approx.f32 	%f93, %f619, %f568;
	abs.f32 	%f909, %f93;
	setp.lt.f32 	%p113, %f909, 0f40000000;
	@%p113 bra 	LBB0_74;
// %bb.63:
	setp.gtu.f32 	%p114, %f909, 0f4B800000;
	@%p114 bra 	LBB0_70;
	bra.uni 	LBB0_64;
LBB0_70:
	mov.b32 	%r54, %f909;
	and.b32  	%r295, %r54, 8388607;
	or.b32  	%r1139, %r295, 1065353216;
	mov.b32 	%f908, %r1139;
	add.s32 	%r296, %r54, -1073741824;
	and.b32  	%r1140, %r296, -8388608;
	setp.eq.s32 	%p120, %r1140, 0;
	@%p120 bra 	LBB0_73;
// %bb.71:                              // %.lr.ph1459.preheader
	mov.f32 	%f630, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f629,%f630;
	// end inline asm
LBB0_72:                                // %.lr.ph1459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r297, %r1140, 192937984;
	add.s32 	%r298, %r297, %r1139;
	mov.b32 	%f631, %r298;
	mul.f32 	%f632, %f629, %f631;
	sub.f32 	%f633, %f631, %f632;
	fma.rn.f32 	%f634, %f633, %f629, %f632;
	sub.f32 	%f635, %f631, %f634;
	fma.rz.f32 	%f636, %f635, %f629, %f634;
	cvt.rzi.f32.f32 	%f637, %f636;
	sub.f32 	%f908, %f631, %f637;
	sub.s32 	%r1140, %r1140, %r297;
	mov.b32 	%r1139, %f908;
	setp.ne.s32 	%p121, %r1140, 0;
	setp.ne.s32 	%p122, %r1139, 0;
	and.pred  	%p123, %p121, %p122;
	@%p123 bra 	LBB0_72;
LBB0_73:                                // %__internal_fmodf_slowpath_mod.exit.i.i1048
	setp.gt.u32 	%p124, %r54, 2139095039;
	selp.f32 	%f638, 0f7FFFFFFF, 0f4B800000, %p124;
	mul.f32 	%f639, %f908, 0f34000000;
	mul.f32 	%f909, %f638, %f639;
	bra.uni 	LBB0_74;
LBB0_64:                                // %__nv_fast_fdividef.exit.i.i.i1014
	div.approx.f32 	%f622, %f909, %f184;
	cvt.rzi.f32.f32 	%f95, %f622;
	fma.rn.f32 	%f96, %f95, 0fC0000000, %f909;
	mov.b32 	%r53, %f96;
	setp.lt.u32 	%p115, %r53, 1073741824;
	mov.f32 	%f907, %f95;
	@%p115 bra 	LBB0_69;
// %bb.65:
	setp.lt.u32 	%p116, %r53, -2147483647;
	@%p116 bra 	LBB0_67;
// %bb.66:
	add.f32 	%f627, %f95, 0fBF800000;
	setp.lt.f32 	%p119, %f96, 0fC0000000;
	selp.f32 	%f628, %f627, %f95, %p119;
	add.f32 	%f907, %f628, 0fBF800000;
	bra.uni 	LBB0_69;
LBB0_67:
	add.f32 	%f907, %f95, 0f3F800000;
	setp.ltu.f32 	%p117, %f96, 0f40800000;
	@%p117 bra 	LBB0_69;
// %bb.68:                              // %__nv_fmaf_rn.exit.i.i.i1019
	fma.rn.f32 	%f624, %f184, 0fC0400000, %f96;
	setp.ge.f32 	%p118, %f624, 0f00000000;
	selp.f32 	%f625, %f907, %f95, %p118;
	add.f32 	%f626, %f625, 0f3F800000;
	add.f32 	%f907, %f626, 0f3F800000;
LBB0_69:                                // %__internal_fmodf_fastpath_quot.exit.i.i1022
	fma.rn.f32 	%f909, %f907, 0fC0000000, %f909;
LBB0_74:                                // %__internal_fmodf_kernel.exit.i1051
	fma.rn.f32 	%f208, %f206, %f202, 0fC09DE9E6;
	fma.rn.f32 	%f209, %f205, %f207, 0f00000000;
	and.b32  	%r169, %r168, 1;
	fma.rn.f32 	%f242, %f240, %f236, 0fC09DE9E6;
	fma.rn.f32 	%f243, %f239, %f241, 0f00000000;
	and.b32  	%r176, %r175, 1;
	fma.rn.f32 	%f277, %f275, %f271, 0fC09DE9E6;
	fma.rn.f32 	%f278, %f274, %f276, 0f00000000;
	and.b32  	%r187, %r186, 1;
	fma.rn.f32 	%f311, %f309, %f305, 0fC09DE9E6;
	fma.rn.f32 	%f312, %f308, %f310, 0f00000000;
	and.b32  	%r194, %r193, 1;
	fma.rn.f32 	%f346, %f344, %f340, 0fC09DE9E6;
	fma.rn.f32 	%f347, %f343, %f345, 0f00000000;
	and.b32  	%r205, %r204, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r212, %r211, 1;
	fma.rn.f32 	%f415, %f413, %f409, 0fC09DE9E6;
	fma.rn.f32 	%f416, %f412, %f414, 0f00000000;
	and.b32  	%r223, %r222, 1;
	fma.rn.f32 	%f449, %f447, %f443, 0fC09DE9E6;
	fma.rn.f32 	%f450, %f446, %f448, 0f00000000;
	and.b32  	%r230, %r229, 1;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	and.b32  	%r247, %r246, 1;
	fma.rn.f32 	%f550, %f548, %f544, 0fC09DE9E6;
	fma.rn.f32 	%f551, %f547, %f549, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p108, %r289, 1;
	mov.f32 	%f213, 0f00000000;
	abs.f32 	%f640, %f909;
	setp.gtu.f32 	%p125, %f640, 0f7F800000;
	@%p125 bra 	LBB0_76;
// %bb.75:
	mov.b32 	%r299, %f93;
	and.b32  	%r300, %r299, -2147483648;
	mov.b32 	%r301, %f909;
	or.b32  	%r302, %r300, %r301;
	mov.b32 	%f909, %r302;
LBB0_76:                                // %__nv_fmodf.exit1054
	fma.rn.f32 	%f210, %f208, %f202, 0f3F800000;
	fma.rn.f32 	%f211, %f201, 0f40490FDB, %f209;
	setp.eq.b32 	%p8, %r169, 1;
	fma.rn.f32 	%f244, %f242, %f236, 0f3F800000;
	fma.rn.f32 	%f245, %f235, 0f40490FDB, %f243;
	setp.eq.b32 	%p14, %r176, 1;
	fma.rn.f32 	%f279, %f277, %f271, 0f3F800000;
	fma.rn.f32 	%f280, %f270, 0f40490FDB, %f278;
	setp.eq.b32 	%p20, %r187, 1;
	fma.rn.f32 	%f313, %f311, %f305, 0f3F800000;
	fma.rn.f32 	%f314, %f304, 0f40490FDB, %f312;
	setp.eq.b32 	%p26, %r194, 1;
	fma.rn.f32 	%f348, %f346, %f340, 0f3F800000;
	fma.rn.f32 	%f349, %f339, 0f40490FDB, %f347;
	setp.eq.b32 	%p32, %r205, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p38, %r212, 1;
	fma.rn.f32 	%f417, %f415, %f409, 0f3F800000;
	fma.rn.f32 	%f418, %f408, 0f40490FDB, %f416;
	setp.eq.b32 	%p44, %r223, 1;
	fma.rn.f32 	%f451, %f449, %f443, 0f3F800000;
	fma.rn.f32 	%f452, %f442, 0f40490FDB, %f450;
	setp.eq.b32 	%p50, %r230, 1;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	setp.eq.b32 	%p68, %r247, 1;
	fma.rn.f32 	%f552, %f550, %f544, 0f3F800000;
	fma.rn.f32 	%f553, %f543, 0f40490FDB, %f551;
	setp.eq.b32 	%p88, %r270, 1;
	selp.f32 	%f608, %f606, %f607, %p108;
	and.b32  	%r290, %r288, 2;
	add.f32 	%f641, %f909, %f909;
	mov.b32 	%r315, %f641;
	and.b32  	%r316, %r315, -2147483648;
	or.b32  	%r317, %r316, 1056964608;
	mov.b32 	%f642, %r317;
	add.f32 	%f643, %f641, %f642;
	cvt.rzi.f32.f32 	%f644, %f643;
	abs.f32 	%f645, %f641;
	setp.gt.f32 	%p126, %f645, 0f4B000000;
	selp.f32 	%f646, %f641, %f644, %p126;
	cvt.rzi.f32.f32 	%f647, %f641;
	setp.lt.f32 	%p127, %f645, 0f3F000000;
	selp.f32 	%f648, %f647, %f646, %p127;
	cvt.rzi.s32.f32 	%r318, %f648;
	fma.rn.f32 	%f649, %f648, 0fBF000000, %f909;
	mul.f32 	%f650, %f649, %f649;
	fma.rn.f32 	%f651, %f650, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f652, %f650, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f653, %f651, %f650, 0fC0A55DF6;
	fma.rn.f32 	%f654, %f652, %f650, 0f4081E0CF;
	fma.rn.f32 	%f655, %f650, %f649, 0f00000000;
	fma.rn.f32 	%f656, %f654, %f650, 0fC09DE9E6;
	fma.rn.f32 	%f657, %f653, %f655, 0f00000000;
	fma.rn.f32 	%f658, %f656, %f650, 0f3F800000;
	fma.rn.f32 	%f659, %f649, 0f40490FDB, %f657;
	and.b32  	%r319, %r318, 1;
	setp.eq.b32 	%p128, %r319, 1;
	selp.f32 	%f660, %f658, %f659, %p128;
	and.b32  	%r320, %r318, 2;
	div.approx.f32 	%f110, %f213, %f216;
	abs.f32 	%f913, %f110;
	setp.lt.f32 	%p133, %f913, 0f40000000;
	@%p133 bra 	LBB0_88;
// %bb.77:
	setp.gtu.f32 	%p134, %f913, 0f4B800000;
	@%p134 bra 	LBB0_84;
	bra.uni 	LBB0_78;
LBB0_84:
	mov.b32 	%r66, %f913;
	and.b32  	%r323, %r66, 8388607;
	or.b32  	%r1141, %r323, 1065353216;
	mov.b32 	%f912, %r1141;
	add.s32 	%r324, %r66, -1073741824;
	and.b32  	%r1142, %r324, -8388608;
	setp.eq.s32 	%p140, %r1142, 0;
	@%p140 bra 	LBB0_87;
// %bb.85:                              // %.lr.ph1452.preheader
	mov.f32 	%f683, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f682,%f683;
	// end inline asm
LBB0_86:                                // %.lr.ph1452
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r325, %r1142, 192937984;
	add.s32 	%r326, %r325, %r1141;
	mov.b32 	%f684, %r326;
	mul.f32 	%f685, %f682, %f684;
	sub.f32 	%f686, %f684, %f685;
	fma.rn.f32 	%f687, %f686, %f682, %f685;
	sub.f32 	%f688, %f684, %f687;
	fma.rz.f32 	%f689, %f688, %f682, %f687;
	cvt.rzi.f32.f32 	%f690, %f689;
	sub.f32 	%f912, %f684, %f690;
	sub.s32 	%r1142, %r1142, %r325;
	mov.b32 	%r1141, %f912;
	setp.ne.s32 	%p141, %r1142, 0;
	setp.ne.s32 	%p142, %r1141, 0;
	and.pred  	%p143, %p141, %p142;
	@%p143 bra 	LBB0_86;
LBB0_87:                                // %__internal_fmodf_slowpath_mod.exit.i.i1101
	setp.gt.u32 	%p144, %r66, 2139095039;
	selp.f32 	%f691, 0f7FFFFFFF, 0f4B800000, %p144;
	mul.f32 	%f692, %f912, 0f34000000;
	mul.f32 	%f913, %f691, %f692;
	bra.uni 	LBB0_88;
LBB0_78:                                // %__nv_fast_fdividef.exit.i.i.i1067
	div.approx.f32 	%f675, %f913, %f184;
	cvt.rzi.f32.f32 	%f112, %f675;
	fma.rn.f32 	%f113, %f112, 0fC0000000, %f913;
	mov.b32 	%r65, %f113;
	setp.lt.u32 	%p135, %r65, 1073741824;
	mov.f32 	%f911, %f112;
	@%p135 bra 	LBB0_83;
// %bb.79:
	setp.lt.u32 	%p136, %r65, -2147483647;
	@%p136 bra 	LBB0_81;
// %bb.80:
	add.f32 	%f680, %f112, 0fBF800000;
	setp.lt.f32 	%p139, %f113, 0fC0000000;
	selp.f32 	%f681, %f680, %f112, %p139;
	add.f32 	%f911, %f681, 0fBF800000;
	bra.uni 	LBB0_83;
LBB0_81:
	add.f32 	%f911, %f112, 0f3F800000;
	setp.ltu.f32 	%p137, %f113, 0f40800000;
	@%p137 bra 	LBB0_83;
// %bb.82:                              // %__nv_fmaf_rn.exit.i.i.i1072
	fma.rn.f32 	%f677, %f184, 0fC0400000, %f113;
	setp.ge.f32 	%p138, %f677, 0f00000000;
	selp.f32 	%f678, %f911, %f112, %p138;
	add.f32 	%f679, %f678, 0f3F800000;
	add.f32 	%f911, %f679, 0f3F800000;
LBB0_83:                                // %__internal_fmodf_fastpath_quot.exit.i.i1075
	fma.rn.f32 	%f913, %f911, 0fC0000000, %f913;
LBB0_88:                                // %__internal_fmodf_kernel.exit.i1104
	shl.b32 	%r6, %r2, 1;
	selp.f32 	%f212, %f210, %f211, %p8;
	and.b32  	%r170, %r168, 2;
	selp.f32 	%f246, %f244, %f245, %p14;
	and.b32  	%r177, %r175, 2;
	selp.f32 	%f281, %f279, %f280, %p20;
	and.b32  	%r188, %r186, 2;
	selp.f32 	%f315, %f313, %f314, %p26;
	and.b32  	%r195, %r193, 2;
	selp.f32 	%f350, %f348, %f349, %p32;
	and.b32  	%r206, %r204, 2;
	selp.f32 	%f384, %f382, %f383, %p38;
	and.b32  	%r213, %r211, 2;
	selp.f32 	%f419, %f417, %f418, %p44;
	and.b32  	%r224, %r222, 2;
	selp.f32 	%f453, %f451, %f452, %p50;
	and.b32  	%r231, %r229, 2;
	selp.f32 	%f502, %f500, %f501, %p68;
	and.b32  	%r248, %r246, 2;
	selp.f32 	%f554, %f552, %f553, %p88;
	and.b32  	%r271, %r269, 2;
	setp.eq.s32 	%p109, %r290, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r291, %r288, 1;
	cvt.rzi.f32.f32 	%f615, %f905;
	setp.eq.s32 	%p129, %r320, 0;
	neg.f32 	%f662, %f660;
	add.s32 	%r321, %r318, 1;
	cvt.rzi.f32.f32 	%f667, %f909;
	abs.f32 	%f693, %f913;
	setp.gtu.f32 	%p145, %f693, 0f7F800000;
	@%p145 bra 	LBB0_90;
// %bb.89:
	mov.b32 	%r327, %f110;
	and.b32  	%r328, %r327, -2147483648;
	mov.b32 	%r329, %f913;
	or.b32  	%r330, %r328, %r329;
	mov.b32 	%f913, %r330;
LBB0_90:                                // %__nv_fmodf.exit1107
	and.b32  	%r7, %r6, 8;
	and.b32  	%r156, %r2, 2;
	shl.b32 	%r8, %r2, 2;
	setp.eq.s32 	%p9, %r170, 0;
	sub.f32 	%f214, %f213, %f212;
	setp.eq.s32 	%p15, %r177, 0;
	sub.f32 	%f248, %f213, %f246;
	setp.eq.s32 	%p21, %r188, 0;
	sub.f32 	%f283, %f213, %f281;
	setp.eq.s32 	%p27, %r195, 0;
	sub.f32 	%f317, %f213, %f315;
	setp.eq.s32 	%p33, %r206, 0;
	sub.f32 	%f352, %f213, %f350;
	setp.eq.s32 	%p39, %r213, 0;
	sub.f32 	%f386, %f213, %f384;
	setp.eq.s32 	%p45, %r224, 0;
	sub.f32 	%f421, %f213, %f419;
	setp.eq.s32 	%p51, %r231, 0;
	sub.f32 	%f455, %f213, %f453;
	setp.eq.s32 	%p69, %r248, 0;
	neg.f32 	%f504, %f502;
	add.s32 	%r249, %r246, 1;
	cvt.rzi.f32.f32 	%f509, %f897;
	setp.eq.s32 	%p89, %r271, 0;
	neg.f32 	%f556, %f554;
	add.s32 	%r272, %r269, 1;
	cvt.rzi.f32.f32 	%f561, %f901;
	selp.f32 	%f609, %f607, %f606, %p108;
	selp.f32 	%f611, %f608, %f610, %p109;
	and.b32  	%r292, %r291, 2;
	setp.eq.f32 	%p111, %f615, %f905;
	mul.f32 	%f616, %f905, 0f00000000;
	selp.f32 	%f661, %f659, %f658, %p128;
	selp.f32 	%f663, %f660, %f662, %p129;
	and.b32  	%r322, %r321, 2;
	setp.eq.f32 	%p131, %f667, %f909;
	mul.f32 	%f668, %f909, 0f00000000;
	add.f32 	%f694, %f913, %f913;
	mov.b32 	%r331, %f694;
	and.b32  	%r332, %r331, -2147483648;
	or.b32  	%r333, %r332, 1056964608;
	mov.b32 	%f695, %r333;
	add.f32 	%f696, %f694, %f695;
	cvt.rzi.f32.f32 	%f697, %f696;
	abs.f32 	%f698, %f694;
	setp.gt.f32 	%p146, %f698, 0f4B000000;
	selp.f32 	%f699, %f694, %f697, %p146;
	cvt.rzi.f32.f32 	%f700, %f694;
	setp.lt.f32 	%p147, %f698, 0f3F000000;
	selp.f32 	%f701, %f700, %f699, %p147;
	cvt.rzi.s32.f32 	%r334, %f701;
	fma.rn.f32 	%f702, %f701, 0fBF000000, %f913;
	mul.f32 	%f703, %f702, %f702;
	fma.rn.f32 	%f704, %f703, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f705, %f703, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f706, %f704, %f703, 0fC0A55DF6;
	fma.rn.f32 	%f707, %f705, %f703, 0f4081E0CF;
	fma.rn.f32 	%f708, %f703, %f702, 0f00000000;
	fma.rn.f32 	%f709, %f707, %f703, 0fC09DE9E6;
	fma.rn.f32 	%f710, %f706, %f708, 0f00000000;
	fma.rn.f32 	%f711, %f709, %f703, 0f3F800000;
	fma.rn.f32 	%f712, %f702, 0f40490FDB, %f710;
	and.b32  	%r335, %r334, 1;
	setp.eq.b32 	%p148, %r335, 1;
	selp.f32 	%f713, %f711, %f712, %p148;
	and.b32  	%r336, %r334, 2;
	setp.eq.s32 	%p149, %r336, 0;
	neg.f32 	%f715, %f713;
	add.s32 	%r337, %r334, 1;
	cvt.rzi.f32.f32 	%f720, %f913;
	shl.b32 	%r339, %r12, 1;
	neg.s32 	%r340, %r339;
	cvt.rn.f32.s32 	%f724, %r340;
	div.approx.f32 	%f129, %f724, %f216;
	abs.f32 	%f917, %f129;
	setp.lt.f32 	%p153, %f917, 0f40000000;
	@%p153 bra 	LBB0_102;
// %bb.91:
	setp.gtu.f32 	%p154, %f917, 0f4B800000;
	@%p154 bra 	LBB0_98;
	bra.uni 	LBB0_92;
LBB0_98:
	mov.b32 	%r74, %f917;
	and.b32  	%r341, %r74, 8388607;
	or.b32  	%r1143, %r341, 1065353216;
	mov.b32 	%f916, %r1143;
	add.s32 	%r342, %r74, -1073741824;
	and.b32  	%r1144, %r342, -8388608;
	setp.eq.s32 	%p160, %r1144, 0;
	@%p160 bra 	LBB0_101;
// %bb.99:                              // %.lr.ph1446.preheader
	mov.f32 	%f735, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f734,%f735;
	// end inline asm
LBB0_100:                               // %.lr.ph1446
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r343, %r1144, 192937984;
	add.s32 	%r344, %r343, %r1143;
	mov.b32 	%f736, %r344;
	mul.f32 	%f737, %f734, %f736;
	sub.f32 	%f738, %f736, %f737;
	fma.rn.f32 	%f739, %f738, %f734, %f737;
	sub.f32 	%f740, %f736, %f739;
	fma.rz.f32 	%f741, %f740, %f734, %f739;
	cvt.rzi.f32.f32 	%f742, %f741;
	sub.f32 	%f916, %f736, %f742;
	sub.s32 	%r1144, %r1144, %r343;
	mov.b32 	%r1143, %f916;
	setp.ne.s32 	%p161, %r1144, 0;
	setp.ne.s32 	%p162, %r1143, 0;
	and.pred  	%p163, %p161, %p162;
	@%p163 bra 	LBB0_100;
LBB0_101:                               // %__internal_fmodf_slowpath_mod.exit.i.i1154
	setp.gt.u32 	%p164, %r74, 2139095039;
	selp.f32 	%f743, 0f7FFFFFFF, 0f4B800000, %p164;
	mul.f32 	%f744, %f916, 0f34000000;
	mul.f32 	%f917, %f743, %f744;
	bra.uni 	LBB0_102;
LBB0_92:                                // %__nv_fast_fdividef.exit.i.i.i1120
	div.approx.f32 	%f727, %f917, %f184;
	cvt.rzi.f32.f32 	%f131, %f727;
	fma.rn.f32 	%f132, %f131, 0fC0000000, %f917;
	mov.b32 	%r73, %f132;
	setp.lt.u32 	%p155, %r73, 1073741824;
	mov.f32 	%f915, %f131;
	@%p155 bra 	LBB0_97;
// %bb.93:
	setp.lt.u32 	%p156, %r73, -2147483647;
	@%p156 bra 	LBB0_95;
// %bb.94:
	add.f32 	%f732, %f131, 0fBF800000;
	setp.lt.f32 	%p159, %f132, 0fC0000000;
	selp.f32 	%f733, %f732, %f131, %p159;
	add.f32 	%f915, %f733, 0fBF800000;
	bra.uni 	LBB0_97;
LBB0_95:
	add.f32 	%f915, %f131, 0f3F800000;
	setp.ltu.f32 	%p157, %f132, 0f40800000;
	@%p157 bra 	LBB0_97;
// %bb.96:                              // %__nv_fmaf_rn.exit.i.i.i1125
	fma.rn.f32 	%f729, %f184, 0fC0400000, %f132;
	setp.ge.f32 	%p158, %f729, 0f00000000;
	selp.f32 	%f730, %f915, %f131, %p158;
	add.f32 	%f731, %f730, 0f3F800000;
	add.f32 	%f915, %f731, 0f3F800000;
LBB0_97:                                // %__internal_fmodf_fastpath_quot.exit.i.i1128
	fma.rn.f32 	%f917, %f915, 0fC0000000, %f917;
LBB0_102:                               // %__internal_fmodf_kernel.exit.i1157
	or.b32  	%r157, %r156, %r7;
	and.b32  	%r158, %r8, 4;
	selp.f32 	%f215, %f212, %f214, %p9;
	selp.f32 	%f249, %f246, %f248, %p15;
	selp.f32 	%f284, %f281, %f283, %p21;
	selp.f32 	%f318, %f315, %f317, %p27;
	selp.f32 	%f353, %f350, %f352, %p33;
	selp.f32 	%f387, %f384, %f386, %p39;
	selp.f32 	%f422, %f419, %f421, %p45;
	selp.f32 	%f456, %f453, %f455, %p51;
	selp.f32 	%f503, %f501, %f500, %p68;
	selp.f32 	%f505, %f502, %f504, %p69;
	and.b32  	%r250, %r249, 2;
	setp.eq.f32 	%p71, %f509, %f897;
	mul.f32 	%f510, %f897, 0f00000000;
	selp.f32 	%f555, %f553, %f552, %p88;
	selp.f32 	%f557, %f554, %f556, %p89;
	and.b32  	%r273, %r272, 2;
	setp.eq.f32 	%p91, %f561, %f901;
	mul.f32 	%f562, %f901, 0f00000000;
	setp.eq.s32 	%p110, %r292, 0;
	sub.f32 	%f613, %f213, %f609;
	selp.f32 	%f91, %f616, %f611, %p111;
	abs.f32 	%f617, %f905;
	setp.eq.s32 	%p130, %r322, 0;
	sub.f32 	%f665, %f213, %f661;
	selp.f32 	%f669, %f668, %f663, %p131;
	abs.f32 	%f670, %f909;
	selp.f32 	%f714, %f712, %f711, %p148;
	selp.f32 	%f716, %f713, %f715, %p149;
	and.b32  	%r338, %r337, 2;
	setp.eq.f32 	%p151, %f720, %f913;
	mul.f32 	%f721, %f913, 0f00000000;
	abs.f32 	%f745, %f917;
	setp.gtu.f32 	%p165, %f745, 0f7F800000;
	@%p165 bra 	LBB0_104;
// %bb.103:
	mov.b32 	%r345, %f129;
	and.b32  	%r346, %r345, -2147483648;
	mov.b32 	%r347, %f917;
	or.b32  	%r348, %r346, %r347;
	mov.b32 	%f917, %r348;
LBB0_104:                               // %__nv_fmodf.exit1160
	or.b32  	%r159, %r157, %r158;
	mul.f32 	%f2, %f215, %f215;
	mul.f32 	%f7, %f249, %f249;
	mul.f32 	%f11, %f284, %f284;
	mul.f32 	%f16, %f318, %f318;
	mul.f32 	%f20, %f353, %f353;
	mul.f32 	%f25, %f387, %f387;
	mul.f32 	%f29, %f422, %f422;
	mul.f32 	%f34, %f456, %f456;
	setp.eq.s32 	%p70, %r250, 0;
	sub.f32 	%f507, %f213, %f503;
	selp.f32 	%f55, %f510, %f505, %p71;
	abs.f32 	%f511, %f897;
	setp.eq.s32 	%p90, %r273, 0;
	sub.f32 	%f559, %f213, %f555;
	selp.f32 	%f563, %f562, %f557, %p91;
	abs.f32 	%f564, %f901;
	selp.f32 	%f614, %f609, %f613, %p110;
	setp.gt.f32 	%p112, %f617, 0f4B800000;
	add.f32 	%f618, %f91, 0f3F800000;
	selp.f32 	%f666, %f661, %f665, %p130;
	setp.gt.f32 	%p132, %f670, 0f4B800000;
	add.f32 	%f671, %f669, 0f3F800000;
	setp.eq.s32 	%p150, %r338, 0;
	sub.f32 	%f718, %f213, %f714;
	selp.f32 	%f127, %f721, %f716, %p151;
	abs.f32 	%f722, %f913;
	and.b32  	%r42, %r12, 2;
	add.f32 	%f746, %f917, %f917;
	mov.b32 	%r355, %f746;
	and.b32  	%r356, %r355, -2147483648;
	or.b32  	%r357, %r356, 1056964608;
	mov.b32 	%f747, %r357;
	add.f32 	%f748, %f746, %f747;
	cvt.rzi.f32.f32 	%f749, %f748;
	abs.f32 	%f750, %f746;
	setp.gt.f32 	%p166, %f750, 0f4B000000;
	selp.f32 	%f751, %f746, %f749, %p166;
	cvt.rzi.f32.f32 	%f752, %f746;
	setp.lt.f32 	%p167, %f750, 0f3F000000;
	selp.f32 	%f753, %f752, %f751, %p167;
	cvt.rzi.s32.f32 	%r358, %f753;
	fma.rn.f32 	%f754, %f753, 0fBF000000, %f917;
	mul.f32 	%f755, %f754, %f754;
	fma.rn.f32 	%f756, %f755, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f757, %f755, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f758, %f756, %f755, 0fC0A55DF6;
	fma.rn.f32 	%f759, %f757, %f755, 0f4081E0CF;
	fma.rn.f32 	%f760, %f755, %f754, 0f00000000;
	fma.rn.f32 	%f761, %f759, %f755, 0fC09DE9E6;
	fma.rn.f32 	%f762, %f758, %f760, 0f00000000;
	fma.rn.f32 	%f763, %f761, %f755, 0f3F800000;
	fma.rn.f32 	%f764, %f754, 0f40490FDB, %f762;
	and.b32  	%r359, %r358, 1;
	setp.eq.b32 	%p168, %r359, 1;
	selp.f32 	%f765, %f763, %f764, %p168;
	selp.f32 	%f766, %f764, %f763, %p168;
	and.b32  	%r360, %r358, 2;
	setp.eq.s32 	%p169, %r360, 0;
	neg.f32 	%f767, %f765;
	selp.f32 	%f768, %f765, %f767, %p169;
	add.s32 	%r361, %r358, 1;
	and.b32  	%r362, %r361, 2;
	setp.eq.s32 	%p170, %r362, 0;
	sub.f32 	%f770, %f213, %f766;
	cvt.rzi.f32.f32 	%f772, %f917;
	setp.eq.f32 	%p171, %f772, %f917;
	mul.f32 	%f773, %f917, 0f00000000;
	selp.f32 	%f774, %f773, %f768, %p171;
	abs.f32 	%f775, %f917;
	shr.u32 	%r83, %r2, 4;
	cvt.u16.u32 	%rs1, %r2;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shl.b16 	%rs6, %rs1, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13104;
	shl.b16 	%rs10, %rs9, 2;
	and.b16  	%rs11, %rs8, -13312;
	shr.u16 	%rs12, %rs11, 2;
	or.b16  	%rs13, %rs12, %rs10;
	shr.u16 	%rs14, %rs13, 1;
	and.b16  	%rs15, %rs13, 16384;
	shl.b16 	%rs16, %rs15, 1;
	or.b16  	%rs17, %rs14, %rs16;
	shr.u16 	%rs18, %rs17, 14;
	div.approx.f32 	%f146, %f213, %f184;
	abs.f32 	%f921, %f146;
	setp.lt.f32 	%p173, %f921, 0f40000000;
	@%p173 bra 	LBB0_122;
// %bb.105:
	setp.gtu.f32 	%p174, %f921, 0f4B800000;
	@%p174 bra 	LBB0_118;
	bra.uni 	LBB0_106;
LBB0_118:
	mov.b32 	%r98, %f921;
	and.b32  	%r363, %r98, 8388607;
	or.b32  	%r1153, %r363, 1065353216;
	mov.b32 	%f920, %r1153;
	add.s32 	%r364, %r98, -1073741824;
	and.b32  	%r1154, %r364, -8388608;
	setp.eq.s32 	%p180, %r1154, 0;
	@%p180 bra 	LBB0_121;
// %bb.119:                             // %.lr.ph1440.preheader
	mov.f32 	%f788, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f787,%f788;
	// end inline asm
LBB0_120:                               // %.lr.ph1440
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r365, %r1154, 192937984;
	add.s32 	%r366, %r365, %r1153;
	mov.b32 	%f789, %r366;
	mul.f32 	%f790, %f787, %f789;
	sub.f32 	%f791, %f789, %f790;
	fma.rn.f32 	%f792, %f791, %f787, %f790;
	sub.f32 	%f793, %f789, %f792;
	fma.rz.f32 	%f794, %f793, %f787, %f792;
	cvt.rzi.f32.f32 	%f795, %f794;
	sub.f32 	%f920, %f789, %f795;
	sub.s32 	%r1154, %r1154, %r365;
	mov.b32 	%r1153, %f920;
	setp.ne.s32 	%p181, %r1154, 0;
	setp.ne.s32 	%p182, %r1153, 0;
	and.pred  	%p183, %p181, %p182;
	@%p183 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i1207
	setp.gt.u32 	%p184, %r98, 2139095039;
	selp.f32 	%f796, 0f7FFFFFFF, 0f4B800000, %p184;
	mul.f32 	%f797, %f920, 0f34000000;
	mul.f32 	%f921, %f796, %f797;
	bra.uni 	LBB0_122;
LBB0_106:                               // %__nv_fast_fdividef.exit.i.i.i1173
	div.approx.f32 	%f780, %f921, %f184;
	cvt.rzi.f32.f32 	%f148, %f780;
	fma.rn.f32 	%f149, %f148, 0fC0000000, %f921;
	mov.b32 	%r97, %f149;
	setp.lt.u32 	%p175, %r97, 1073741824;
	mov.f32 	%f919, %f148;
	@%p175 bra 	LBB0_117;
// %bb.107:
	setp.lt.u32 	%p176, %r97, -2147483647;
	@%p176 bra 	LBB0_115;
// %bb.108:
	add.f32 	%f785, %f148, 0fBF800000;
	setp.lt.f32 	%p179, %f149, 0fC0000000;
	selp.f32 	%f786, %f785, %f148, %p179;
	add.f32 	%f919, %f786, 0fBF800000;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f919, %f148, 0f3F800000;
	setp.ltu.f32 	%p177, %f149, 0f40800000;
	@%p177 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1178
	fma.rn.f32 	%f782, %f184, 0fC0400000, %f149;
	setp.ge.f32 	%p178, %f782, 0f00000000;
	selp.f32 	%f783, %f919, %f148, %p178;
	add.f32 	%f784, %f783, 0f3F800000;
	add.f32 	%f919, %f784, 0f3F800000;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i1181
	fma.rn.f32 	%f921, %f919, 0fC0000000, %f921;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i1210
	shr.u32 	%r160, %r159, 1;
	mul.f32 	%f219, %f2, 0f3D09A17B;
	mul.f32 	%f253, %f7, 0f3D09A17B;
	mul.f32 	%f288, %f11, 0f3D09A17B;
	mul.f32 	%f322, %f16, 0f3D09A17B;
	mul.f32 	%f357, %f20, 0f3D09A17B;
	mul.f32 	%f391, %f25, 0f3D09A17B;
	mul.f32 	%f426, %f29, 0f3D09A17B;
	mul.f32 	%f459, %f34, 0f3D09A17B;
	selp.f32 	%f508, %f503, %f507, %p70;
	setp.gt.f32 	%p72, %f511, 0f4B800000;
	add.f32 	%f512, %f55, 0f3F800000;
	selp.f32 	%f560, %f555, %f559, %p90;
	setp.gt.f32 	%p92, %f564, 0f4B800000;
	add.f32 	%f565, %f563, 0f3F800000;
	selp.f32 	%f92, %f618, %f614, %p112;
	selp.f32 	%f672, %f671, %f666, %p132;
	selp.f32 	%f719, %f714, %f718, %p150;
	setp.gt.f32 	%p152, %f722, 0f4B800000;
	add.f32 	%f723, %f127, 0f3F800000;
	selp.f32 	%f771, %f766, %f770, %p170;
	setp.gt.f32 	%p172, %f775, 0f4B800000;
	add.f32 	%f776, %f774, 0f3F800000;
	cvt.u32.u16 	%r84, %rs18;
	or.b32  	%r85, %r42, %r83;
	abs.f32 	%f798, %f921;
	setp.gtu.f32 	%p185, %f798, 0f7F800000;
	@%p185 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r367, %f146;
	and.b32  	%r368, %r367, -2147483648;
	mov.b32 	%r369, %f921;
	or.b32  	%r370, %r368, %r369;
	mov.b32 	%f921, %r370;
LBB0_124:                               // %__nv_fmodf.exit1213
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd43, %r160, 4;
	mul.f32 	%f6, %f219, %f887;
	mul.f32 	%f254, %f253, %f888;
	mul.f32 	%f15, %f288, %f889;
	mul.f32 	%f323, %f322, %f890;
	mul.f32 	%f24, %f357, %f891;
	mul.f32 	%f392, %f391, %f892;
	mul.f32 	%f33, %f426, %f893;
	mul.f32 	%f460, %f459, %f894;
	selp.f32 	%f56, %f512, %f508, %p72;
	selp.f32 	%f566, %f565, %f560, %p92;
	mov.b32 	%r305, %f672;
	mov.b32 	%r304, %f92;
	mov.b32 	%r311, %f669;
	mov.b32 	%r310, %f91;
	selp.f32 	%f128, %f723, %f719, %p152;
	selp.f32 	%f777, %f776, %f771, %p172;
	setp.eq.s32 	%p186, %r85, %r84;
	add.f32 	%f799, %f921, %f921;
	mov.b32 	%r371, %f799;
	and.b32  	%r372, %r371, -2147483648;
	or.b32  	%r373, %r372, 1056964608;
	mov.b32 	%f800, %r373;
	add.f32 	%f801, %f799, %f800;
	cvt.rzi.f32.f32 	%f802, %f801;
	abs.f32 	%f803, %f799;
	setp.gt.f32 	%p187, %f803, 0f4B000000;
	selp.f32 	%f804, %f799, %f802, %p187;
	cvt.rzi.f32.f32 	%f805, %f799;
	setp.lt.f32 	%p188, %f803, 0f3F000000;
	selp.f32 	%f806, %f805, %f804, %p188;
	cvt.rzi.s32.f32 	%r374, %f806;
	fma.rn.f32 	%f807, %f806, 0fBF000000, %f921;
	mul.f32 	%f808, %f807, %f807;
	fma.rn.f32 	%f809, %f808, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f810, %f808, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f811, %f809, %f808, 0fC0A55DF6;
	fma.rn.f32 	%f812, %f810, %f808, 0f4081E0CF;
	fma.rn.f32 	%f813, %f808, %f807, 0f00000000;
	fma.rn.f32 	%f814, %f812, %f808, 0fC09DE9E6;
	fma.rn.f32 	%f815, %f811, %f813, 0f00000000;
	fma.rn.f32 	%f816, %f814, %f808, 0f3F800000;
	fma.rn.f32 	%f817, %f807, 0f40490FDB, %f815;
	and.b32  	%r375, %r374, 1;
	setp.eq.b32 	%p189, %r375, 1;
	selp.f32 	%f818, %f816, %f817, %p189;
	selp.f32 	%f819, %f817, %f816, %p189;
	and.b32  	%r376, %r374, 2;
	setp.eq.s32 	%p190, %r376, 0;
	neg.f32 	%f820, %f818;
	selp.f32 	%f821, %f818, %f820, %p190;
	add.s32 	%r377, %r374, 1;
	and.b32  	%r378, %r377, 2;
	setp.eq.s32 	%p191, %r378, 0;
	sub.f32 	%f823, %f213, %f819;
	selp.f32 	%f824, %f819, %f823, %p191;
	cvt.rzi.f32.f32 	%f825, %f921;
	setp.eq.f32 	%p192, %f825, %f921;
	mul.f32 	%f826, %f921, 0f00000000;
	selp.f32 	%f827, %f826, %f821, %p192;
	abs.f32 	%f828, %f921;
	setp.gt.f32 	%p193, %f828, 0f4B800000;
	add.f32 	%f829, %f827, 0f3F800000;
	selp.f32 	%f830, %f829, %f824, %p193;
	selp.f32 	%f163, 0f3F800000, 0f00000000, %p186;
	shl.b32 	%r379, %r13, 1;
	neg.s32 	%r380, %r379;
	cvt.rn.f32.s32 	%f831, %r380;
	div.approx.f32 	%f166, %f831, %f184;
	abs.f32 	%f925, %f166;
	setp.lt.f32 	%p194, %f925, 0f40000000;
	@%p194 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p195, %f925, 0f4B800000;
	@%p195 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r106, %f925;
	and.b32  	%r381, %r106, 8388607;
	or.b32  	%r1155, %r381, 1065353216;
	mov.b32 	%f924, %r1155;
	add.s32 	%r382, %r106, -1073741824;
	and.b32  	%r1156, %r382, -8388608;
	setp.eq.s32 	%p201, %r1156, 0;
	@%p201 bra 	LBB0_135;
// %bb.133:                             // %.lr.ph.preheader
	mov.f32 	%f842, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f841,%f842;
	// end inline asm
LBB0_134:                               // %.lr.ph
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r383, %r1156, 192937984;
	add.s32 	%r384, %r383, %r1155;
	mov.b32 	%f843, %r384;
	mul.f32 	%f844, %f841, %f843;
	sub.f32 	%f845, %f843, %f844;
	fma.rn.f32 	%f846, %f845, %f841, %f844;
	sub.f32 	%f847, %f843, %f846;
	fma.rz.f32 	%f848, %f847, %f841, %f846;
	cvt.rzi.f32.f32 	%f849, %f848;
	sub.f32 	%f924, %f843, %f849;
	sub.s32 	%r1156, %r1156, %r383;
	mov.b32 	%r1155, %f924;
	setp.ne.s32 	%p202, %r1156, 0;
	setp.ne.s32 	%p203, %r1155, 0;
	and.pred  	%p204, %p202, %p203;
	@%p204 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i1260
	setp.gt.u32 	%p205, %r106, 2139095039;
	selp.f32 	%f850, 0f7FFFFFFF, 0f4B800000, %p205;
	mul.f32 	%f851, %f924, 0f34000000;
	mul.f32 	%f925, %f850, %f851;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i1226
	div.approx.f32 	%f834, %f925, %f184;
	cvt.rzi.f32.f32 	%f168, %f834;
	fma.rn.f32 	%f169, %f168, 0fC0000000, %f925;
	mov.b32 	%r105, %f169;
	setp.lt.u32 	%p196, %r105, 1073741824;
	mov.f32 	%f923, %f168;
	@%p196 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p197, %r105, -2147483647;
	@%p197 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f839, %f168, 0fBF800000;
	setp.lt.f32 	%p200, %f169, 0fC0000000;
	selp.f32 	%f840, %f839, %f168, %p200;
	add.f32 	%f923, %f840, 0fBF800000;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f923, %f168, 0f3F800000;
	setp.ltu.f32 	%p198, %f169, 0f40800000;
	@%p198 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1231
	fma.rn.f32 	%f836, %f184, 0fC0400000, %f169;
	setp.ge.f32 	%p199, %f836, 0f00000000;
	selp.f32 	%f837, %f923, %f168, %p199;
	add.f32 	%f838, %f837, 0f3F800000;
	add.f32 	%f923, %f838, 0f3F800000;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i1234
	fma.rn.f32 	%f925, %f923, 0fC0000000, %f925;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i1263
	add.s64 	%rd44, %rd1, %rd43;
	mov.b32 	%r180, %f254;
	mov.b32 	%r179, %f6;
	mov.b32 	%r198, %f323;
	mov.b32 	%r197, %f15;
	mov.b32 	%r216, %f392;
	mov.b32 	%r215, %f24;
	mov.b32 	%r234, %f460;
	mov.b32 	%r233, %f33;
	mov.b32 	%r262, %f566;
	mov.b32 	%r261, %f56;
	mov.b32 	%r265, %f563;
	mov.b32 	%r264, %f55;
	xor.b32  	%r308, %r311, -2147483648;
	xor.b32  	%r307, %r310, -2147483648;
	mov.b32 	%r351, %f777;
	mov.b32 	%r350, %f128;
	mov.b32 	%r354, %f774;
	mov.b32 	%r353, %f127;
	mul.f32 	%f164, %f830, %f163;
	mul.f32 	%f165, %f827, %f163;
	abs.f32 	%f852, %f925;
	setp.gtu.f32 	%p206, %f852, 0f7F800000;
	@%p206 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r385, %f166;
	and.b32  	%r386, %r385, -2147483648;
	mov.b32 	%r387, %f925;
	or.b32  	%r388, %r386, %r387;
	mov.b32 	%f925, %r388;
LBB0_138:                               // %__nv_fmodf.exit1266
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r9, [%rd44];
	// begin inline asm
	cvt.rn.f16x2.f32 %r178, %r180, %r179;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r196, %r198, %r197;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r214, %r216, %r215;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r232, %r234, %r233;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r260, %r262, %r261;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r263, %r265, %r264;
	// end inline asm
	and.b32  	%r43, %r12, 4;
	// begin inline asm
	cvt.rn.f16x2.f32 %r303, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r306, %r308, %r307;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r309, %r311, %r310;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r312, %r305, %r304;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r349, %r351, %r350;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r352, %r354, %r353;
	// end inline asm
	add.f32 	%f853, %f925, %f925;
	mov.b32 	%r402, %f853;
	and.b32  	%r403, %r402, -2147483648;
	or.b32  	%r404, %r403, 1056964608;
	mov.b32 	%f854, %r404;
	add.f32 	%f855, %f853, %f854;
	cvt.rzi.f32.f32 	%f856, %f855;
	abs.f32 	%f857, %f853;
	setp.gt.f32 	%p207, %f857, 0f4B000000;
	selp.f32 	%f858, %f853, %f856, %p207;
	cvt.rzi.f32.f32 	%f859, %f853;
	setp.lt.f32 	%p208, %f857, 0f3F000000;
	selp.f32 	%f860, %f859, %f858, %p208;
	cvt.rzi.s32.f32 	%r405, %f860;
	fma.rn.f32 	%f861, %f860, 0fBF000000, %f925;
	mul.f32 	%f862, %f861, %f861;
	fma.rn.f32 	%f863, %f862, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f864, %f862, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f865, %f863, %f862, 0fC0A55DF6;
	fma.rn.f32 	%f866, %f864, %f862, 0f4081E0CF;
	fma.rn.f32 	%f867, %f862, %f861, 0f00000000;
	fma.rn.f32 	%f868, %f866, %f862, 0fC09DE9E6;
	fma.rn.f32 	%f869, %f865, %f867, 0f00000000;
	fma.rn.f32 	%f870, %f868, %f862, 0f3F800000;
	fma.rn.f32 	%f871, %f861, 0f40490FDB, %f869;
	and.b32  	%r406, %r405, 1;
	setp.eq.b32 	%p209, %r406, 1;
	selp.f32 	%f872, %f870, %f871, %p209;
	selp.f32 	%f873, %f871, %f870, %p209;
	and.b32  	%r407, %r405, 2;
	setp.eq.s32 	%p210, %r407, 0;
	neg.f32 	%f874, %f872;
	selp.f32 	%f875, %f872, %f874, %p210;
	add.s32 	%r408, %r405, 1;
	and.b32  	%r409, %r408, 2;
	setp.eq.s32 	%p211, %r409, 0;
	sub.f32 	%f877, %f213, %f873;
	selp.f32 	%f878, %f873, %f877, %p211;
	cvt.rzi.f32.f32 	%f879, %f925;
	setp.eq.f32 	%p212, %f879, %f925;
	mul.f32 	%f880, %f925, 0f00000000;
	selp.f32 	%f881, %f880, %f875, %p212;
	abs.f32 	%f882, %f925;
	setp.gt.f32 	%p213, %f882, 0f4B800000;
	add.f32 	%f883, %f881, 0f3F800000;
	selp.f32 	%f884, %f883, %f878, %p213;
	mul.f32 	%f885, %f884, %f163;
	mul.f32 	%f886, %f881, %f163;
	mov.b32 	%r391, %f885;
	mov.b32 	%r390, %f164;
	// begin inline asm
	cvt.rn.f16x2.f32 %r113, %r391, %r390;
	// end inline asm
	mov.b32 	%r397, %f886;
	xor.b32  	%r394, %r397, -2147483648;
	mov.b32 	%r396, %f165;
	xor.b32  	%r393, %r396, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r114, %r394, %r393;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r115, %r397, %r396;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r116, %r391, %r390;
	// end inline asm
	shl.b32 	%r410, %r1, 5;
	and.b32  	%r117, %r410, 128;
	shl.b32 	%r411, %r3, 2;
	and.b32  	%r118, %r411, 48;
	and.b32  	%r119, %r2, 8;
	and.b32  	%r120, %r3, 3;
	and.b32  	%r412, %r8, 28;
	and.b32  	%r413, %r410, 96;
	or.b32  	%r121, %r412, %r413;
	shr.u32 	%r414, %r2, 3;
	shl.b32 	%r415, %r2, 4;
	or.b32  	%r416, %r415, %r119;
	shr.u32 	%r417, %r416, 2;
	and.b32  	%r418, %r417, 30;
	and.b32  	%r419, %r3, 1;
	mul.lo.s32 	%r420, %r419, 260;
	mul.lo.s32 	%r421, %r83, 65;
	bfe.u32 	%r422, %r3, 1, 1;
	mul.lo.s32 	%r423, %r422, 130;
	shr.u32 	%r424, %r3, 2;
	mul.lo.s32 	%r425, %r424, 545;
	add.s32 	%r426, %r420, %r418;
	add.s32 	%r427, %r426, %r421;
	add.s32 	%r428, %r427, %r423;
	add.s32 	%r429, %r428, %r425;
	mul.wide.u32 	%rd45, %r429, 4;
	mov.u64 	%rd46, shmem;
	add.s64 	%rd11, %rd46, %rd45;
	cvt.u64.u32 	%rd47, %r425;
	cvt.u64.u32 	%rd48, %r423;
	cvt.u64.u32 	%rd49, %r421;
	cvt.u64.u32 	%rd50, %r420;
	cvt.u64.u32 	%rd51, %r418;
	add.s64 	%rd52, %rd51, %rd50;
	add.s64 	%rd53, %rd52, %rd49;
	add.s64 	%rd54, %rd53, %rd48;
	add.s64 	%rd55, %rd54, %rd47;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd12, %rd46, %rd56;
	or.b32  	%r430, %r424, 4;
	mul.lo.s32 	%r431, %r430, 545;
	add.s32 	%r432, %r428, %r431;
	mul.wide.u32 	%rd57, %r432, 4;
	add.s64 	%rd13, %rd46, %rd57;
	cvt.u64.u32 	%rd58, %r431;
	add.s64 	%rd59, %rd54, %rd58;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd14, %rd46, %rd60;
	or.b32  	%r433, %r424, 8;
	mul.lo.s32 	%r434, %r433, 545;
	add.s32 	%r435, %r428, %r434;
	mul.wide.u32 	%rd61, %r435, 4;
	add.s64 	%rd15, %rd46, %rd61;
	cvt.u64.u32 	%rd62, %r434;
	add.s64 	%rd63, %rd54, %rd62;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd16, %rd46, %rd64;
	or.b32  	%r436, %r424, 12;
	mul.lo.s32 	%r437, %r436, 545;
	add.s32 	%r438, %r428, %r437;
	mul.wide.u32 	%rd65, %r438, 4;
	add.s64 	%rd17, %rd46, %rd65;
	cvt.u64.u32 	%rd66, %r437;
	add.s64 	%rd67, %rd54, %rd66;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd18, %rd46, %rd68;
	and.b32  	%r439, %r4, 32;
	shl.b32 	%r440, %r3, 1;
	shl.b32 	%r441, %r2, 3;
	and.b32  	%r442, %r441, 64;
	or.b32  	%r443, %r442, %r440;
	and.b32  	%r444, %r6, 32;
	or.b32  	%r445, %r443, %r444;
	shr.u32 	%r446, %r445, 2;
	or.b32  	%r447, %r446, %r439;
	and.b16  	%rs25, %rs6, 768;
	or.b16  	%rs26, %rs25, %rs5;
	and.b16  	%rs27, %rs26, 13104;
	shl.b16 	%rs28, %rs27, 3;
	shl.b16 	%rs29, %rs27, 1;
	and.b16  	%rs30, %rs29, 16384;
	or.b16  	%rs31, %rs30, %rs28;
	shr.u16 	%rs32, %rs31, 13;
	cvt.u32.u16 	%r448, %rs32;
	or.b32  	%r449, %r7, %r448;
	shr.u32 	%r450, %r449, 1;
	shl.b32 	%r451, %r3, 14;
	and.b32  	%r122, %r451, 196608;
	shl.b32 	%r452, %r1, 1;
	and.b32  	%r453, %r452, 240;
	or.b32  	%r454, %r453, %r414;
	and.b32  	%r455, %r411, 12;
	or.b32  	%r456, %r454, %r455;
	shl.b32 	%r123, %r456, 8;
	and.b32  	%r457, %r440, 6;
	or.b32  	%r458, %r457, %r83;
	mul.lo.s32 	%r459, %r458, 65;
	add.s32 	%r460, %r459, %r418;
	add.s32 	%r461, %r460, %r425;
	mul.wide.u32 	%rd69, %r461, 4;
	add.s64 	%rd19, %rd46, %rd69;
	cvt.u64.u32 	%rd70, %r459;
	add.s64 	%rd71, %rd51, %rd70;
	add.s64 	%rd72, %rd71, %rd47;
	shl.b64 	%rd73, %rd72, 2;
	add.s64 	%rd20, %rd46, %rd73;
	add.s32 	%r462, %r460, %r431;
	mul.wide.u32 	%rd74, %r462, 4;
	add.s64 	%rd21, %rd46, %rd74;
	add.s64 	%rd75, %rd71, %rd58;
	shl.b64 	%rd76, %rd75, 2;
	add.s64 	%rd22, %rd46, %rd76;
	add.s32 	%r463, %r460, %r434;
	mul.wide.u32 	%rd77, %r463, 4;
	add.s64 	%rd23, %rd46, %rd77;
	add.s64 	%rd78, %rd71, %rd62;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd24, %rd46, %rd79;
	add.s32 	%r464, %r460, %r437;
	mul.wide.u32 	%rd80, %r464, 4;
	add.s64 	%rd25, %rd46, %rd80;
	add.s64 	%rd81, %rd71, %rd66;
	shl.b64 	%rd82, %rd81, 2;
	add.s64 	%rd26, %rd46, %rd82;
	mad.lo.s32 	%r465, %r450, 65, %r447;
	mul.wide.u32 	%rd83, %r465, 4;
	add.s64 	%rd27, %rd46, %rd83;
	mad.lo.s32 	%r466, %r13, 260, %r447;
	mad.lo.s32 	%r467, %r11, 130, %r466;
	mad.lo.s32 	%r468, %r10, 65, %r467;
	mul.wide.u32 	%rd84, %r468, 4;
	add.s64 	%rd28, %rd46, %rd84;
	mov.u32 	%r1145, 0;
	setp.eq.s32 	%p214, %r119, 0;
	mov.u16 	%rs98, 25600;
	mov.u16 	%rs72, 21504;
	mov.u32 	%r1146, %r1145;
	mov.u32 	%r1152, %r1145;
	mov.u32 	%r1148, %r1145;
	bra.uni 	LBB0_109;
LBB0_113:                               // %L19494
                                        //   in Loop: Header=BB0_109 Depth=1
	add.s32 	%r1148, %r89, 256;
	setp.gt.s32 	%p219, %r5, %r1148;
	setp.ne.s32 	%p220, %r89, 32512;
	and.pred  	%p221, %p220, %p219;
	@%p221 bra 	LBB0_109;
	bra.uni 	LBB0_114;
LBB0_109:                               // %L1275
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_110 Depth 2
	mov.u32 	%r89, %r1148;
	or.b32  	%r534, %r118, %r89;
	or.b32  	%r535, %r534, %r119;
	or.b32  	%r536, %r535, %r43;
	or.b32  	%r537, %r536, %r120;
	shl.b32 	%r538, %r537, 12;
	or.b32  	%r539, %r538, %r117;
	or.b32  	%r540, %r121, %r539;
	mul.wide.s32 	%rd85, %r540, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r541, %r542, %r543, %r544}, [%rd86];
	or.b32  	%r545, %r540, 262144;
	mul.wide.s32 	%rd87, %r545, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r546, %r547, %r548, %r549}, [%rd88];
	or.b32  	%r550, %r540, 524288;
	mul.wide.s32 	%rd89, %r550, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r551, %r552, %r553, %r554}, [%rd90];
	or.b32  	%r555, %r540, 786432;
	mul.wide.s32 	%rd91, %r555, 4;
	add.s64 	%rd92, %rd2, %rd91;
	ld.global.v4.u32 	{%r556, %r557, %r558, %r559}, [%rd92];
	selp.b32 	%r560, %r543, %r541, %p214;
	shfl.sync.bfly.b32	%r561, %r560, 8, 31, -1;
	selp.b32 	%r470, %r541, %r561, %p214;
	selp.b32 	%r471, %r561, %r543, %p214;
	selp.b32 	%r562, %r544, %r542, %p214;
	shfl.sync.bfly.b32	%r563, %r562, 8, 31, -1;
	selp.b32 	%r478, %r542, %r563, %p214;
	selp.b32 	%r479, %r563, %r544, %p214;
	selp.b32 	%r564, %r548, %r546, %p214;
	shfl.sync.bfly.b32	%r565, %r564, 8, 31, -1;
	selp.b32 	%r486, %r546, %r565, %p214;
	selp.b32 	%r487, %r565, %r548, %p214;
	selp.b32 	%r566, %r549, %r547, %p214;
	shfl.sync.bfly.b32	%r567, %r566, 8, 31, -1;
	selp.b32 	%r494, %r547, %r567, %p214;
	selp.b32 	%r495, %r567, %r549, %p214;
	selp.b32 	%r568, %r553, %r551, %p214;
	shfl.sync.bfly.b32	%r569, %r568, 8, 31, -1;
	selp.b32 	%r502, %r551, %r569, %p214;
	selp.b32 	%r503, %r569, %r553, %p214;
	selp.b32 	%r570, %r554, %r552, %p214;
	shfl.sync.bfly.b32	%r571, %r570, 8, 31, -1;
	selp.b32 	%r510, %r552, %r571, %p214;
	selp.b32 	%r511, %r571, %r554, %p214;
	selp.b32 	%r572, %r558, %r556, %p214;
	shfl.sync.bfly.b32	%r573, %r572, 8, 31, -1;
	selp.b32 	%r518, %r556, %r573, %p214;
	selp.b32 	%r519, %r573, %r558, %p214;
	selp.b32 	%r574, %r559, %r557, %p214;
	shfl.sync.bfly.b32	%r575, %r574, 8, 31, -1;
	selp.b32 	%r526, %r557, %r575, %p214;
	selp.b32 	%r527, %r575, %r559, %p214;
	mov.u32 	%r528, 21520;
	// begin inline asm
	prmt.b32 %r469, %r470, %r471, %r528;
	// end inline asm
	mov.u32 	%r532, 30258;
	// begin inline asm
	prmt.b32 %r473, %r470, %r471, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r478, %r479, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r481, %r478, %r479, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r486, %r487, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r489, %r486, %r487, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r493, %r494, %r495, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r497, %r494, %r495, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r501, %r502, %r503, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r505, %r502, %r503, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r509, %r510, %r511, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r513, %r510, %r511, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r517, %r518, %r519, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r521, %r518, %r519, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r525, %r526, %r527, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r529, %r526, %r527, %r532;
	// end inline asm
	st.shared.u32 	[%rd11], %r469;
	st.shared.u32 	[%rd12+128], %r473;
	st.shared.u32 	[%rd12+4], %r477;
	st.shared.u32 	[%rd12+132], %r481;
	st.shared.u32 	[%rd13], %r485;
	st.shared.u32 	[%rd14+128], %r489;
	st.shared.u32 	[%rd14+4], %r493;
	st.shared.u32 	[%rd14+132], %r497;
	st.shared.u32 	[%rd15], %r501;
	st.shared.u32 	[%rd16+128], %r505;
	st.shared.u32 	[%rd16+4], %r509;
	st.shared.u32 	[%rd16+132], %r513;
	st.shared.u32 	[%rd17], %r517;
	st.shared.u32 	[%rd18+128], %r521;
	st.shared.u32 	[%rd18+4], %r525;
	st.shared.u32 	[%rd18+132], %r529;
	bar.sync 	0;
	mov.u32 	%r1149, 256;
	mov.u64 	%rd101, %rd28;
	mov.u64 	%rd102, %rd27;
	mov.u32 	%r1150, %r1145;
	mov.u32 	%r1151, %r1146;
LBB0_110:                               // %L11855
                                        //   Parent Loop BB0_109 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1146, %r1152;
	mov.u32 	%r1145, %r1151;
	ld.shared.u32 	%r1152, [%rd101];
	// begin inline asm
	mov.b32 %r581, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r592, {%rs72, %rs72};
	// end inline asm
	xor.b32  	%r580, %r1152, -2004318072;
	mov.u32 	%r579, 983055;
	// begin inline asm
	lop3.b32 %r578, %r579, %r580, %r581, 202;
	// end inline asm
	mov.u16 	%rs37, 18432;
	// begin inline asm
	mov.b32 %r582, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r583, %r581, %r582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r586, %r578, %r583;
	// end inline asm
	mov.u32 	%r590, 15728880;
	// begin inline asm
	lop3.b32 %r589, %r590, %r580, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r593, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r594, %r592, %r593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r597, %r589, %r594;
	// end inline asm
	shr.u32 	%r602, %r580, 8;
	// begin inline asm
	lop3.b32 %r600, %r579, %r602, %r581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r604, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r605, %r581, %r604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r608, %r600, %r605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r611, %r590, %r602, %r592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r615, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r616, %r592, %r615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r619, %r611, %r616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r622, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r624, %r622, %r586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r627, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r629, %r627, %r597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r632, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r634, %r632, %r608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r637, %r232;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r639, %r637, %r619;
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs72, %rs72};
	// end inline asm
	xor.b32  	%r646, %r1150, -2004318072;
	// begin inline asm
	lop3.b32 %r644, %r579, %r646, %r647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r648, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r649, %r647, %r648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r652, %r644, %r649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r655, %r590, %r646, %r658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r659, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r660, %r658, %r659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r663, %r655, %r660;
	// end inline asm
	shr.u32 	%r668, %r646, 8;
	// begin inline asm
	lop3.b32 %r666, %r579, %r668, %r647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r670, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r671, %r647, %r670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r674, %r666, %r671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r677, %r590, %r668, %r658, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r681, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r682, %r658, %r681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r685, %r677, %r682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r688, %r178, %r652, %r624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r692, %r178, %r663, %r629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r696, %r178, %r674, %r634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r700, %r178, %r685, %r639;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs72, %rs72};
	// end inline asm
	xor.b32  	%r708, %r1145, -2004318072;
	// begin inline asm
	lop3.b32 %r706, %r579, %r708, %r709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r710, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r711, %r709, %r710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r714, %r706, %r711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r717, %r590, %r708, %r720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r721, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r722, %r720, %r721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r725, %r717, %r722;
	// end inline asm
	shr.u32 	%r730, %r708, 8;
	// begin inline asm
	lop3.b32 %r728, %r579, %r730, %r709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r732, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r733, %r709, %r732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r736, %r728, %r733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r739, %r590, %r730, %r720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r743, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r744, %r720, %r743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r747, %r739, %r744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r750, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r752, %r750, %r714, %r688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r756, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r758, %r756, %r725, %r692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r764, %r762, %r736, %r696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r768, %r196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r770, %r768, %r747, %r700;
	// end inline asm
	// begin inline asm
	mov.b32 %r779, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs72, %rs72};
	// end inline asm
	xor.b32  	%r778, %r1146, -2004318072;
	// begin inline asm
	lop3.b32 %r776, %r579, %r778, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r780, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r781, %r779, %r780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r784, %r776, %r781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r787, %r590, %r778, %r790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r791, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r792, %r790, %r791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r795, %r787, %r792;
	// end inline asm
	shr.u32 	%r800, %r778, 8;
	// begin inline asm
	lop3.b32 %r798, %r579, %r800, %r779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r803, %r779, %r802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r806, %r798, %r803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r809, %r590, %r800, %r790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r814, %r790, %r813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r817, %r809, %r814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r843, %r214, %r784, %r752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r840, %r214, %r795, %r758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r852, %r214, %r806, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r849, %r214, %r817, %r770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r836, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r838, %r836, %r840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r841, %r260, %r843, %r838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r845, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r847, %r845, %r849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r850, %r260, %r852, %r847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r854, %r263, %r843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r857, %r260, %r840, %r854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r861, %r263, %r852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r864, %r260, %r849, %r861;
	// end inline asm
	mov.u32 	%r939, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r895, %r892}, {%r303, %r309, %r306, %r312}, {%r841, %r857}, {%r939, %r939};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r904, %r901}, {%r303, %r309, %r306, %r312}, {%r850, %r864}, {%r939, %r939};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r888, %r352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r890, %r888, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r349, %r895, %r890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r897, %r352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r899, %r897, %r901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r902, %r349, %r904, %r899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r906, %r352, %r895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r909, %r349, %r892, %r906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r913, %r352, %r904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r916, %r349, %r901, %r913;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r920, %r921}, {%r113, %r115, %r114, %r116}, {%r893, %r909}, {%r939, %r939};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r930, %r931}, {%r113, %r115, %r114, %r116}, {%r902, %r916}, {%r939, %r939};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r940, %r9, %r920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r943, %r9, %r921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r946, %r9, %r930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r949, %r9, %r931;
	// end inline asm
	mov.u16 	%rs81, -14592;
	// begin inline asm
	mov.b32 %r952, {%rs81, %rs81};
	// end inline asm
	mov.u16 	%rs83, 18176;
	// begin inline asm
	mov.b32 %r953, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	max.f16x2 %r954, %r940, %r952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r957, %r954, %r953;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs81, %rs81};
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	max.f16x2 %r962, %r943, %r960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r965, %r962, %r961;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs81, %rs81};
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	max.f16x2 %r970, %r946, %r968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r973, %r970, %r969;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs81, %rs81};
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs83, %rs83};
	// end inline asm
	// begin inline asm
	max.f16x2 %r978, %r949, %r976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r981, %r978, %r977;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs98, %rs98};
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r986, %r987, %r985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r957, %r986;
	// end inline asm
	// begin inline asm
	mov.b32 %r992, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r993, %r987, %r992;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r965, %r993;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r987, %r999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1003, %r973, %r1000;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs37, %rs37};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1007, %r987, %r1006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r981, %r1007;
	// end inline asm
	mov.u32 	%r1016, 25152;
	// begin inline asm
	prmt.b32 %r1013, %r989, %r1003, %r1016;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1017, %r996, %r1010, %r1016;
	// end inline asm
	shl.b32 	%r1024, %r1017, 4;
	mov.u32 	%r1022, 252645135;
	// begin inline asm
	lop3.b32 %r1021, %r1022, %r1013, %r1024, 202;
	// end inline asm
	xor.b32  	%r1025, %r1021, -2004318072;
	st.shared.u32 	[%rd102], %r1025;
	add.s32 	%r1149, %r1149, -16;
	add.s64 	%rd102, %rd102, 2180;
	add.s64 	%rd101, %rd101, 2180;
	setp.eq.s32 	%p215, %r1149, 0;
	mov.u32 	%r1150, %r1145;
	mov.u32 	%r1151, %r1146;
	@%p215 bra 	LBB0_111;
	bra.uni 	LBB0_110;
LBB0_111:                               // %guard_pass6987
                                        //   in Loop: Header=BB0_109 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r1031, [%rd19];
	ld.shared.u32 	%r1032, [%rd20+128];
	ld.shared.u32 	%r1039, [%rd20+4];
	ld.shared.u32 	%r1040, [%rd20+132];
	ld.shared.u32 	%r1047, [%rd21];
	ld.shared.u32 	%r1048, [%rd22+128];
	ld.shared.u32 	%r1055, [%rd22+4];
	ld.shared.u32 	%r1056, [%rd22+132];
	ld.shared.u32 	%r1063, [%rd23];
	ld.shared.u32 	%r1064, [%rd24+128];
	ld.shared.u32 	%r1071, [%rd24+4];
	ld.shared.u32 	%r1072, [%rd24+132];
	ld.shared.u32 	%r1079, [%rd25];
	ld.shared.u32 	%r1080, [%rd26+128];
	ld.shared.u32 	%r1087, [%rd26+4];
	ld.shared.u32 	%r1088, [%rd26+132];
	// begin inline asm
	prmt.b32 %r1026, %r1031, %r1032, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1030, %r1031, %r1032, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1034, %r1039, %r1040, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1038, %r1039, %r1040, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1042, %r1047, %r1048, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1046, %r1047, %r1048, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1050, %r1055, %r1056, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1054, %r1055, %r1056, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1058, %r1063, %r1064, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1062, %r1063, %r1064, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1066, %r1071, %r1072, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1070, %r1071, %r1072, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1074, %r1079, %r1080, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1078, %r1079, %r1080, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1082, %r1087, %r1088, %r528;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1086, %r1087, %r1088, %r532;
	// end inline asm
	selp.b32 	%r1090, %r1030, %r1026, %p214;
	shfl.sync.bfly.b32	%r140, %r1090, 8, 31, -1;
	selp.b32 	%r1091, %r1038, %r1034, %p214;
	shfl.sync.bfly.b32	%r141, %r1091, 8, 31, -1;
	selp.b32 	%r1092, %r1046, %r1042, %p214;
	shfl.sync.bfly.b32	%r142, %r1092, 8, 31, -1;
	selp.b32 	%r1093, %r1054, %r1050, %p214;
	shfl.sync.bfly.b32	%r143, %r1093, 8, 31, -1;
	selp.b32 	%r1094, %r1062, %r1058, %p214;
	shfl.sync.bfly.b32	%r144, %r1094, 8, 31, -1;
	selp.b32 	%r1095, %r1070, %r1066, %p214;
	shfl.sync.bfly.b32	%r145, %r1095, 8, 31, -1;
	selp.b32 	%r1096, %r1078, %r1074, %p214;
	shfl.sync.bfly.b32	%r146, %r1096, 8, 31, -1;
	selp.b32 	%r1097, %r1086, %r1082, %p214;
	shfl.sync.bfly.b32	%r147, %r1097, 8, 31, -1;
	setp.eq.s32 	%p217, %r89, 0;
	@%p217 bra 	LBB0_113;
// %bb.112:                             // %L18587
                                        //   in Loop: Header=BB0_109 Depth=1
	selp.b32 	%r1098, %r147, %r1086, %p214;
	selp.b32 	%r1099, %r1082, %r147, %p214;
	selp.b32 	%r1100, %r146, %r1078, %p214;
	selp.b32 	%r1101, %r1074, %r146, %p214;
	selp.b32 	%r1102, %r145, %r1070, %p214;
	selp.b32 	%r1103, %r1066, %r145, %p214;
	selp.b32 	%r1104, %r144, %r1062, %p214;
	selp.b32 	%r1105, %r1058, %r144, %p214;
	selp.b32 	%r1106, %r143, %r1054, %p214;
	selp.b32 	%r1107, %r1050, %r143, %p214;
	selp.b32 	%r1108, %r142, %r1046, %p214;
	selp.b32 	%r1109, %r1042, %r142, %p214;
	selp.b32 	%r1110, %r141, %r1038, %p214;
	selp.b32 	%r1111, %r1034, %r141, %p214;
	selp.b32 	%r1112, %r140, %r1030, %p214;
	selp.b32 	%r1113, %r1026, %r140, %p214;
	shl.b32 	%r1114, %r89, 12;
	or.b32  	%r1115, %r1114, %r117;
	add.s32 	%r1116, %r1115, %r122;
	add.s32 	%r1117, %r1116, -196608;
	or.b32  	%r1118, %r1117, %r121;
	or.b32  	%r1119, %r1118, %r123;
	mul.wide.s32 	%rd93, %r1119, 4;
	add.s64 	%rd94, %rd3, %rd93;
	st.global.v4.u32 	[%rd94], {%r1113, %r1111, %r1112, %r1110};
	or.b32  	%r1120, %r1115, 65536;
	add.s32 	%r1121, %r1120, %r122;
	or.b32  	%r1122, %r1121, %r121;
	or.b32  	%r1123, %r1122, %r123;
	mul.wide.s32 	%rd95, %r1123, 4;
	add.s64 	%rd96, %rd3, %rd95;
	st.global.v4.u32 	[%rd96], {%r1109, %r1107, %r1108, %r1106};
	or.b32  	%r1124, %r1115, 327680;
	add.s32 	%r1125, %r1124, %r122;
	or.b32  	%r1126, %r1125, %r121;
	or.b32  	%r1127, %r1126, %r123;
	mul.wide.s32 	%rd97, %r1127, 4;
	add.s64 	%rd98, %rd3, %rd97;
	st.global.v4.u32 	[%rd98], {%r1105, %r1103, %r1104, %r1102};
	or.b32  	%r1128, %r1115, 589824;
	add.s32 	%r1129, %r1128, %r122;
	or.b32  	%r1130, %r1129, %r121;
	or.b32  	%r1131, %r1130, %r123;
	mul.wide.s32 	%rd99, %r1131, 4;
	add.s64 	%rd100, %rd3, %rd99;
	st.global.v4.u32 	[%rd100], {%r1101, %r1099, %r1100, %r1098};
	bra.uni 	LBB0_113;
LBB0_114:                               // %L19511
	st.global.u32 	[%rd4], %r939;
	ret;
LBB0_1:                                 // %L9
	mov.u64 	%rd38, exception11569;
	cvta.global.u64 	%rd39, %rd38;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd39;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd29;
	st.param.b32 	[param0+8], %r148;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L166
	mov.u32 	%r155, 2;
	st.global.u32 	[%rd4], %r155;
	mov.u64 	%rd41, exception1549;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd29;
	st.param.b32 	[param0+8], %r148;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
