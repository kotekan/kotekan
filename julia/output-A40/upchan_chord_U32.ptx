// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2098[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<309>;
	.reg .b32 	%r<2578>;
	.reg .f32 	%f<847>;
	.reg .b64 	%rd<159>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r146, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd30, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r153, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r153, 67839;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd31, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r147, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r154, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r155, %r154, %r4;
	or.b32  	%r156, %r155, %r2;
	mul.wide.u32 	%rd37, %r156, 4;
	add.s64 	%rd4, %rd31, %rd37;
	mov.u32 	%r157, 1;
	st.global.u32 	[%rd4], %r157;
	setp.gt.u32 	%p2, %r147, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L119
	ld.param.u32 	%r148, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r148, %r147;
	setp.gt.s32 	%p4, %r148, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L126
	ld.param.u32 	%r149, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r158, %r148, %r147;
	and.b32  	%r159, %r158, 255;
	setp.ne.s32 	%p6, %r159, 0;
	setp.gt.u32 	%p7, %r149, 1023;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L137
	ld.param.u32 	%r150, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r150, %r149;
	setp.gt.s32 	%p10, %r150, 2047;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L144
	sub.s32 	%r160, %r150, %r149;
	add.s32 	%r161, %r160, 3;
	and.b32  	%r162, %r161, 7;
	setp.eq.s32 	%p12, %r162, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r151, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r151, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r152, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r151, %r152;
	setp.lt.s32 	%p15, %r152, 49;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass171
	bfe.u32 	%r83, %r4, 1, 1;
	and.b32  	%r84, %r4, 1;
	bfe.u32 	%r85, %r4, 2, 1;
	shl.b32 	%r168, %r85, 1;
	shl.b32 	%r169, %r84, 2;
	shl.b32 	%r170, %r83, 3;
	or.b32  	%r171, %r169, %r170;
	or.b32  	%r172, %r168, %r171;
	shr.u32 	%r86, %r4, 4;
	or.b32  	%r87, %r86, %r172;
	or.b32  	%r88, %r87, 16;
	mov.f32 	%f148, 0f40000000;
	mov.f32 	%f149, 0f42FE0000;
	div.approx.f32 	%f86, %f149, %f148;
	cvt.rn.f32.s32 	%f150, %r87;
	sub.f32 	%f151, %f150, %f86;
	mov.f32 	%f180, 0f42000000;
	div.approx.f32 	%f88, %f151, %f180;
	setp.ne.f32 	%p22, %f88, 0f00000000;
	mov.f32 	%f822, 0f3F800000;
	mov.f32 	%f815, %f822;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L581
	sin.approx.f32 	%f181, %f88;
	div.approx.f32 	%f815, %f181, %f88;
$L__BB0_13:                             // %L584
	cvt.rn.f32.s32 	%f184, %r88;
	sub.f32 	%f185, %f184, %f86;
	div.approx.f32 	%f5, %f185, %f180;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f816, %f822;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L601
	sin.approx.f32 	%f215, %f5;
	div.approx.f32 	%f816, %f215, %f5;
$L__BB0_15:                             // %L604
	or.b32  	%r190, %r87, 32;
	or.b32  	%r6, %r87, 48;
	cvt.rn.f32.s32 	%f219, %r190;
	sub.f32 	%f220, %f219, %f86;
	div.approx.f32 	%f9, %f220, %f180;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f817, %f822;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L683
	sin.approx.f32 	%f250, %f9;
	div.approx.f32 	%f817, %f250, %f9;
$L__BB0_17:                             // %L686
	cvt.rn.f32.s32 	%f253, %r6;
	sub.f32 	%f254, %f253, %f86;
	div.approx.f32 	%f14, %f254, %f180;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f818, %f822;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L703
	sin.approx.f32 	%f284, %f14;
	div.approx.f32 	%f818, %f284, %f14;
$L__BB0_19:                             // %L706
	or.b32  	%r208, %r87, 64;
	or.b32  	%r8, %r87, 80;
	cvt.rn.f32.s32 	%f288, %r208;
	sub.f32 	%f289, %f288, %f86;
	div.approx.f32 	%f18, %f289, %f180;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f819, %f822;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L785
	sin.approx.f32 	%f319, %f18;
	div.approx.f32 	%f819, %f319, %f18;
$L__BB0_21:                             // %L788
	cvt.rn.f32.s32 	%f322, %r8;
	sub.f32 	%f323, %f322, %f86;
	div.approx.f32 	%f23, %f323, %f180;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f820, %f822;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L805
	sin.approx.f32 	%f353, %f23;
	div.approx.f32 	%f820, %f353, %f23;
$L__BB0_23:                             // %L808
	or.b32  	%r226, %r87, 96;
	or.b32  	%r10, %r87, 112;
	cvt.rn.f32.s32 	%f357, %r226;
	sub.f32 	%f358, %f357, %f86;
	div.approx.f32 	%f27, %f358, %f180;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f821, %f822;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L887
	sin.approx.f32 	%f388, %f27;
	div.approx.f32 	%f821, %f388, %f27;
$L__BB0_25:                             // %L890
	shr.u32 	%r82, %r4, 1;
	cvt.rn.f32.s32 	%f391, %r10;
	sub.f32 	%f392, %f391, %f86;
	div.approx.f32 	%f32, %f392, %f180;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L907
	sin.approx.f32 	%f422, %f32;
	div.approx.f32 	%f822, %f422, %f32;
$L__BB0_27:                             // %L910
	shr.u32 	%r14, %r4, 3;
	and.b32  	%r270, %r14, 2;
	and.b32  	%r271, %r82, 4;
	or.b32  	%r15, %r85, %r270;
	or.b32  	%r16, %r15, %r271;
	and.b32  	%r272, %r4, 3;
	mul.lo.s32 	%r273, %r272, %r16;
	shl.b32 	%r274, %r273, 1;
	neg.s32 	%r275, %r274;
	cvt.rn.f32.s32 	%f493, %r275;
	mov.f32 	%f494, 0f41000000;
	div.approx.f32 	%f35, %f493, %f494;
	abs.f32 	%f837, %f35;
	setp.lt.f32 	%p79, %f837, 0f40000000;
	@%p79 bra 	$L__BB0_98;
// %bb.28:
	setp.gtu.f32 	%p80, %f837, 0f4B800000;
	@%p80 bra 	$L__BB0_94;
	bra.uni 	$L__BB0_29;
$L__BB0_94:
	mov.b32 	%r90, %f837;
	and.b32  	%r276, %r90, 8388607;
	or.b32  	%r2565, %r276, 1065353216;
	mov.b32 	%f836, %r2565;
	add.s32 	%r277, %r90, -1073741824;
	and.b32  	%r2566, %r277, -8388608;
	setp.eq.s32 	%p86, %r2566, 0;
	@%p86 bra 	$L__BB0_97;
// %bb.95:                              // %__nv_fmaf_rn.exit4.i.i.i649.preheader
	mov.f32 	%f504, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f503,%f504;
	// end inline asm
$L__BB0_96:                             // %__nv_fmaf_rn.exit4.i.i.i649
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r278, %r2566, 192937984;
	add.s32 	%r279, %r2565, %r278;
	mov.b32 	%f505, %r279;
	mul.f32 	%f506, %f503, %f505;
	sub.f32 	%f507, %f505, %f506;
	fma.rn.f32 	%f508, %f507, %f503, %f506;
	sub.f32 	%f509, %f505, %f508;
	fma.rz.f32 	%f510, %f509, %f503, %f508;
	cvt.rzi.f32.f32 	%f511, %f510;
	sub.f32 	%f836, %f505, %f511;
	sub.s32 	%r2566, %r2566, %r278;
	mov.b32 	%r2565, %f836;
	setp.ne.s32 	%p87, %r2566, 0;
	setp.ne.s32 	%p88, %r2565, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_96;
$L__BB0_97:                             // %__internal_fmodf_slowpath_mod.exit.i.i651
	setp.gt.u32 	%p90, %r90, 2139095039;
	selp.f32 	%f512, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f513, %f836, 0f34000000;
	mul.f32 	%f837, %f512, %f513;
	bra.uni 	$L__BB0_98;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i628
	div.approx.f32 	%f496, %f837, %f148;
	cvt.rzi.f32.f32 	%f835, %f496;
	fma.rn.f32 	%f90, %f835, 0fC0000000, %f837;
	mov.b32 	%r89, %f90;
	setp.lt.u32 	%p81, %r89, 1073741824;
	@%p81 bra 	$L__BB0_93;
// %bb.30:
	setp.lt.u32 	%p82, %r89, -2147483647;
	@%p82 bra 	$L__BB0_91;
// %bb.31:
	add.f32 	%f501, %f835, 0fBF800000;
	setp.lt.f32 	%p85, %f90, 0fC0000000;
	add.f32 	%f502, %f501, 0fBF800000;
	selp.f32 	%f835, %f502, %f501, %p85;
	bra.uni 	$L__BB0_93;
$L__BB0_91:
	add.f32 	%f835, %f835, 0f3F800000;
	setp.ltu.f32 	%p83, %f90, 0f40800000;
	@%p83 bra 	$L__BB0_93;
// %bb.92:                              // %__nv_fmaf_rn.exit.i.i.i632
	add.f32 	%f497, %f835, 0f3F800000;
	fma.rn.f32 	%f499, %f148, 0fC0400000, %f90;
	setp.ge.f32 	%p84, %f499, 0f00000000;
	add.f32 	%f500, %f497, 0f3F800000;
	selp.f32 	%f835, %f500, %f497, %p84;
$L__BB0_93:                             // %__internal_fmodf_fastpath_quot.exit.i.i635
	fma.rn.f32 	%f837, %f835, 0fC0000000, %f837;
$L__BB0_98:                             // %__internal_fmodf_kernel.exit.i654
	shl.b32 	%r75, %r4, 1;
	abs.f32 	%f514, %f837;
	setp.gtu.f32 	%p91, %f514, 0f7F800000;
	@%p91 bra 	$L__BB0_100;
// %bb.99:
	mov.b32 	%r280, %f35;
	and.b32  	%r281, %r280, -2147483648;
	mov.b32 	%r282, %f837;
	or.b32  	%r283, %r281, %r282;
	mov.b32 	%f837, %r283;
$L__BB0_100:                            // %__nv_fmodf.exit655
	and.b32  	%r292, %r75, 6;
	mov.u32 	%r293, -8;
	sub.s32 	%r294, %r293, %r292;
	mul.lo.s32 	%r295, %r16, %r294;
	cvt.rn.f32.s32 	%f545, %r295;
	div.approx.f32 	%f106, %f545, %f494;
	abs.f32 	%f825, %f106;
	setp.lt.f32 	%p99, %f825, 0f40000000;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	setp.gtu.f32 	%p100, %f825, 0f4B800000;
	@%p100 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r18, %f825;
	and.b32  	%r296, %r18, 8388607;
	or.b32  	%r2552, %r296, 1065353216;
	mov.b32 	%f824, %r2552;
	add.s32 	%r297, %r18, -1073741824;
	and.b32  	%r2553, %r297, -8388608;
	setp.eq.s32 	%p106, %r2553, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f556, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f555,%f556;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r298, %r2553, 192937984;
	add.s32 	%r299, %r2552, %r298;
	mov.b32 	%f557, %r299;
	mul.f32 	%f558, %f555, %f557;
	sub.f32 	%f559, %f557, %f558;
	fma.rn.f32 	%f560, %f559, %f555, %f558;
	sub.f32 	%f561, %f557, %f560;
	fma.rz.f32 	%f562, %f561, %f555, %f560;
	cvt.rzi.f32.f32 	%f563, %f562;
	sub.f32 	%f824, %f557, %f563;
	sub.s32 	%r2553, %r2553, %r298;
	mov.b32 	%r2552, %f824;
	setp.ne.s32 	%p107, %r2553, 0;
	setp.ne.s32 	%p108, %r2552, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r18, 2139095039;
	selp.f32 	%f564, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f565, %f824, 0f34000000;
	mul.f32 	%f825, %f564, %f565;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f548, %f825, %f148;
	cvt.rzi.f32.f32 	%f823, %f548;
	fma.rn.f32 	%f38, %f823, 0fC0000000, %f825;
	mov.b32 	%r17, %f38;
	setp.lt.u32 	%p101, %r17, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r17, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f553, %f823, 0fBF800000;
	setp.lt.f32 	%p105, %f38, 0fC0000000;
	add.f32 	%f554, %f553, 0fBF800000;
	selp.f32 	%f823, %f554, %f553, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f823, %f823, 0f3F800000;
	setp.ltu.f32 	%p103, %f38, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f549, %f823, 0f3F800000;
	fma.rn.f32 	%f551, %f148, 0fC0400000, %f38;
	setp.ge.f32 	%p104, %f551, 0f00000000;
	add.f32 	%f552, %f549, 0f3F800000;
	selp.f32 	%f823, %f552, %f549, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f825, %f823, 0fC0000000, %f825;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f566, %f825;
	setp.gtu.f32 	%p111, %f566, 0f7F800000;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r300, %f106;
	and.b32  	%r301, %r300, -2147483648;
	mov.b32 	%r302, %f825;
	or.b32  	%r303, %r301, %r302;
	mov.b32 	%f825, %r303;
$L__BB0_45:                             // %__nv_fmodf.exit
	shl.b32 	%r324, %r83, 1;
	neg.s32 	%r29, %r324;
	mul.lo.s32 	%r30, %r29, %r16;
	cvt.rn.f32.s32 	%f599, %r30;
	div.approx.f32 	%f52, %f599, %f180;
	abs.f32 	%f841, %f52;
	setp.lt.f32 	%p119, %f841, 0f40000000;
	@%p119 bra 	$L__BB0_108;
// %bb.46:
	setp.gtu.f32 	%p120, %f841, 0f4B800000;
	@%p120 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_47;
$L__BB0_104:
	mov.b32 	%r98, %f841;
	and.b32  	%r325, %r98, 8388607;
	or.b32  	%r2567, %r325, 1065353216;
	mov.b32 	%f840, %r2567;
	add.s32 	%r326, %r98, -1073741824;
	and.b32  	%r2568, %r326, -8388608;
	setp.eq.s32 	%p126, %r2568, 0;
	@%p126 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i680.preheader
	mov.f32 	%f610, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f609,%f610;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i680
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r327, %r2568, 192937984;
	add.s32 	%r328, %r2567, %r327;
	mov.b32 	%f611, %r328;
	mul.f32 	%f612, %f609, %f611;
	sub.f32 	%f613, %f611, %f612;
	fma.rn.f32 	%f614, %f613, %f609, %f612;
	sub.f32 	%f615, %f611, %f614;
	fma.rz.f32 	%f616, %f615, %f609, %f614;
	cvt.rzi.f32.f32 	%f617, %f616;
	sub.f32 	%f840, %f611, %f617;
	sub.s32 	%r2568, %r2568, %r327;
	mov.b32 	%r2567, %f840;
	setp.ne.s32 	%p127, %r2568, 0;
	setp.ne.s32 	%p128, %r2567, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i682
	setp.gt.u32 	%p130, %r98, 2139095039;
	selp.f32 	%f618, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f619, %f840, 0f34000000;
	mul.f32 	%f841, %f618, %f619;
	bra.uni 	$L__BB0_108;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i659
	div.approx.f32 	%f602, %f841, %f148;
	cvt.rzi.f32.f32 	%f839, %f602;
	fma.rn.f32 	%f109, %f839, 0fC0000000, %f841;
	mov.b32 	%r97, %f109;
	setp.lt.u32 	%p121, %r97, 1073741824;
	@%p121 bra 	$L__BB0_103;
// %bb.48:
	setp.lt.u32 	%p122, %r97, -2147483647;
	@%p122 bra 	$L__BB0_101;
// %bb.49:
	add.f32 	%f607, %f839, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f608, %f607, 0fBF800000;
	selp.f32 	%f839, %f608, %f607, %p125;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f839, %f839, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i663
	add.f32 	%f603, %f839, 0f3F800000;
	fma.rn.f32 	%f605, %f148, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f605, 0f00000000;
	add.f32 	%f606, %f603, 0f3F800000;
	selp.f32 	%f839, %f606, %f603, %p124;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i666
	fma.rn.f32 	%f841, %f839, 0fC0000000, %f841;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i685
	abs.f32 	%f620, %f841;
	setp.gtu.f32 	%p131, %f620, 0f7F800000;
	@%p131 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r329, %f52;
	and.b32  	%r330, %r329, -2147483648;
	mov.b32 	%r331, %f841;
	or.b32  	%r332, %r330, %r331;
	mov.b32 	%f841, %r332;
$L__BB0_110:                            // %__nv_fmodf.exit686
	shl.b32 	%r341, %r16, 2;
	sub.s32 	%r342, %r30, %r341;
	cvt.rn.f32.s32 	%f651, %r342;
	div.approx.f32 	%f125, %f651, %f180;
	abs.f32 	%f829, %f125;
	setp.lt.f32 	%p139, %f829, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f829, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r32, %f829;
	and.b32  	%r343, %r32, 8388607;
	or.b32  	%r2554, %r343, 1065353216;
	mov.b32 	%f828, %r2554;
	add.s32 	%r344, %r32, -1073741824;
	and.b32  	%r2555, %r344, -8388608;
	setp.eq.s32 	%p146, %r2555, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i587.preheader
	mov.f32 	%f662, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f661,%f662;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i587
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r345, %r2555, 192937984;
	add.s32 	%r346, %r2554, %r345;
	mov.b32 	%f663, %r346;
	mul.f32 	%f664, %f661, %f663;
	sub.f32 	%f665, %f663, %f664;
	fma.rn.f32 	%f666, %f665, %f661, %f664;
	sub.f32 	%f667, %f663, %f666;
	fma.rz.f32 	%f668, %f667, %f661, %f666;
	cvt.rzi.f32.f32 	%f669, %f668;
	sub.f32 	%f828, %f663, %f669;
	sub.s32 	%r2555, %r2555, %r345;
	mov.b32 	%r2554, %f828;
	setp.ne.s32 	%p147, %r2555, 0;
	setp.ne.s32 	%p148, %r2554, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i589
	setp.gt.u32 	%p150, %r32, 2139095039;
	selp.f32 	%f670, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f671, %f828, 0f34000000;
	mul.f32 	%f829, %f670, %f671;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i566
	div.approx.f32 	%f654, %f829, %f148;
	cvt.rzi.f32.f32 	%f827, %f654;
	fma.rn.f32 	%f55, %f827, 0fC0000000, %f829;
	mov.b32 	%r31, %f55;
	setp.lt.u32 	%p141, %r31, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r31, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f659, %f827, 0fBF800000;
	setp.lt.f32 	%p145, %f55, 0fC0000000;
	add.f32 	%f660, %f659, 0fBF800000;
	selp.f32 	%f827, %f660, %f659, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f827, %f827, 0f3F800000;
	setp.ltu.f32 	%p143, %f55, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i570
	add.f32 	%f655, %f827, 0f3F800000;
	fma.rn.f32 	%f657, %f148, 0fC0400000, %f55;
	setp.ge.f32 	%p144, %f657, 0f00000000;
	add.f32 	%f658, %f655, 0f3F800000;
	selp.f32 	%f827, %f658, %f655, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i573
	fma.rn.f32 	%f829, %f827, 0fC0000000, %f829;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i592
	abs.f32 	%f672, %f829;
	setp.gtu.f32 	%p151, %f672, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r347, %f125;
	and.b32  	%r348, %r347, -2147483648;
	mov.b32 	%r349, %f829;
	or.b32  	%r350, %r348, %r349;
	mov.b32 	%f829, %r350;
$L__BB0_63:                             // %__nv_fmodf.exit593
	mul.lo.s32 	%r42, %r29, %r15;
	cvt.rn.f32.s32 	%f705, %r42;
	mov.f32 	%f706, 0f40800000;
	div.approx.f32 	%f69, %f705, %f706;
	abs.f32 	%f845, %f69;
	setp.lt.f32 	%p159, %f845, 0f40000000;
	@%p159 bra 	$L__BB0_118;
// %bb.64:
	setp.gtu.f32 	%p160, %f845, 0f4B800000;
	@%p160 bra 	$L__BB0_114;
	bra.uni 	$L__BB0_65;
$L__BB0_114:
	mov.b32 	%r106, %f845;
	and.b32  	%r365, %r106, 8388607;
	or.b32  	%r2569, %r365, 1065353216;
	mov.b32 	%f844, %r2569;
	add.s32 	%r366, %r106, -1073741824;
	and.b32  	%r2570, %r366, -8388608;
	setp.eq.s32 	%p166, %r2570, 0;
	@%p166 bra 	$L__BB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i711.preheader
	mov.f32 	%f716, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f715,%f716;
	// end inline asm
$L__BB0_116:                            // %__nv_fmaf_rn.exit4.i.i.i711
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r367, %r2570, 192937984;
	add.s32 	%r368, %r2569, %r367;
	mov.b32 	%f717, %r368;
	mul.f32 	%f718, %f715, %f717;
	sub.f32 	%f719, %f717, %f718;
	fma.rn.f32 	%f720, %f719, %f715, %f718;
	sub.f32 	%f721, %f717, %f720;
	fma.rz.f32 	%f722, %f721, %f715, %f720;
	cvt.rzi.f32.f32 	%f723, %f722;
	sub.f32 	%f844, %f717, %f723;
	sub.s32 	%r2570, %r2570, %r367;
	mov.b32 	%r2569, %f844;
	setp.ne.s32 	%p167, %r2570, 0;
	setp.ne.s32 	%p168, %r2569, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_116;
$L__BB0_117:                            // %__internal_fmodf_slowpath_mod.exit.i.i713
	setp.gt.u32 	%p170, %r106, 2139095039;
	selp.f32 	%f724, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f725, %f844, 0f34000000;
	mul.f32 	%f845, %f724, %f725;
	bra.uni 	$L__BB0_118;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i690
	div.approx.f32 	%f708, %f845, %f148;
	cvt.rzi.f32.f32 	%f843, %f708;
	fma.rn.f32 	%f128, %f843, 0fC0000000, %f845;
	mov.b32 	%r105, %f128;
	setp.lt.u32 	%p161, %r105, 1073741824;
	@%p161 bra 	$L__BB0_113;
// %bb.66:
	setp.lt.u32 	%p162, %r105, -2147483647;
	@%p162 bra 	$L__BB0_111;
// %bb.67:
	add.f32 	%f713, %f843, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f714, %f713, 0fBF800000;
	selp.f32 	%f843, %f714, %f713, %p165;
	bra.uni 	$L__BB0_113;
$L__BB0_111:
	add.f32 	%f843, %f843, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i694
	add.f32 	%f709, %f843, 0f3F800000;
	fma.rn.f32 	%f711, %f148, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f711, 0f00000000;
	add.f32 	%f712, %f709, 0f3F800000;
	selp.f32 	%f843, %f712, %f709, %p164;
$L__BB0_113:                            // %__internal_fmodf_fastpath_quot.exit.i.i697
	fma.rn.f32 	%f845, %f843, 0fC0000000, %f845;
$L__BB0_118:                            // %__internal_fmodf_kernel.exit.i716
	abs.f32 	%f726, %f845;
	setp.gtu.f32 	%p171, %f726, 0f7F800000;
	@%p171 bra 	$L__BB0_120;
// %bb.119:
	mov.b32 	%r369, %f69;
	and.b32  	%r370, %r369, -2147483648;
	mov.b32 	%r371, %f845;
	or.b32  	%r372, %r370, %r371;
	mov.b32 	%f845, %r372;
$L__BB0_120:                            // %__nv_fmodf.exit717
	shl.b32 	%r381, %r15, 2;
	sub.s32 	%r382, %r42, %r381;
	cvt.rn.f32.s32 	%f759, %r382;
	div.approx.f32 	%f145, %f759, %f706;
	abs.f32 	%f833, %f145;
	setp.lt.f32 	%p180, %f833, 0f40000000;
	@%p180 bra 	$L__BB0_79;
// %bb.68:
	setp.gtu.f32 	%p181, %f833, 0f4B800000;
	@%p181 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r44, %f833;
	and.b32  	%r383, %r44, 8388607;
	or.b32  	%r2556, %r383, 1065353216;
	mov.b32 	%f832, %r2556;
	add.s32 	%r384, %r44, -1073741824;
	and.b32  	%r2557, %r384, -8388608;
	setp.eq.s32 	%p187, %r2557, 0;
	@%p187 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i618.preheader
	mov.f32 	%f770, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f769,%f770;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i618
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r385, %r2557, 192937984;
	add.s32 	%r386, %r2556, %r385;
	mov.b32 	%f771, %r386;
	mul.f32 	%f772, %f769, %f771;
	sub.f32 	%f773, %f771, %f772;
	fma.rn.f32 	%f774, %f773, %f769, %f772;
	sub.f32 	%f775, %f771, %f774;
	fma.rz.f32 	%f776, %f775, %f769, %f774;
	cvt.rzi.f32.f32 	%f777, %f776;
	sub.f32 	%f832, %f771, %f777;
	sub.s32 	%r2557, %r2557, %r385;
	mov.b32 	%r2556, %f832;
	setp.ne.s32 	%p188, %r2557, 0;
	setp.ne.s32 	%p189, %r2556, 0;
	and.pred  	%p190, %p188, %p189;
	@%p190 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i620
	setp.gt.u32 	%p191, %r44, 2139095039;
	selp.f32 	%f778, 0f7FFFFFFF, 0f4B800000, %p191;
	mul.f32 	%f779, %f832, 0f34000000;
	mul.f32 	%f833, %f778, %f779;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i597
	div.approx.f32 	%f762, %f833, %f148;
	cvt.rzi.f32.f32 	%f831, %f762;
	fma.rn.f32 	%f72, %f831, 0fC0000000, %f833;
	mov.b32 	%r43, %f72;
	setp.lt.u32 	%p182, %r43, 1073741824;
	@%p182 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p183, %r43, -2147483647;
	@%p183 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f767, %f831, 0fBF800000;
	setp.lt.f32 	%p186, %f72, 0fC0000000;
	add.f32 	%f768, %f767, 0fBF800000;
	selp.f32 	%f831, %f768, %f767, %p186;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f831, %f831, 0f3F800000;
	setp.ltu.f32 	%p184, %f72, 0f40800000;
	@%p184 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i601
	add.f32 	%f763, %f831, 0f3F800000;
	fma.rn.f32 	%f765, %f148, 0fC0400000, %f72;
	setp.ge.f32 	%p185, %f765, 0f00000000;
	add.f32 	%f766, %f763, 0f3F800000;
	selp.f32 	%f831, %f766, %f763, %p185;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i604
	fma.rn.f32 	%f833, %f831, 0fC0000000, %f833;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i623
	abs.f32 	%f780, %f833;
	setp.gtu.f32 	%p192, %f780, 0f7F800000;
	@%p192 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r387, %f145;
	and.b32  	%r388, %r387, -2147483648;
	mov.b32 	%r389, %f833;
	or.b32  	%r390, %r388, %r389;
	mov.b32 	%f833, %r390;
$L__BB0_81:                             // %__nv_fmodf.exit624
	setp.le.s32 	%p200, %r148, %r147;
	mov.u32 	%r2550, 0;
	@%p200 bra 	$L__BB0_90;
// %bb.82:                              // %L1416.lr.ph
	mov.f32 	%f152, 0f43010000;
	mul.lo.s32 	%r250, %r87, 31;
	div.approx.f32 	%f153, %f151, %f152;
	div.approx.f32 	%f187, %f185, %f152;
	div.approx.f32 	%f222, %f220, %f152;
	div.approx.f32 	%f256, %f254, %f152;
	div.approx.f32 	%f291, %f289, %f152;
	div.approx.f32 	%f325, %f323, %f152;
	div.approx.f32 	%f360, %f358, %f152;
	div.approx.f32 	%f394, %f392, %f152;
	add.s32 	%r260, %r250, 48;
	abs.f32 	%f154, %f153;
	abs.f32 	%f188, %f187;
	abs.f32 	%f223, %f222;
	abs.f32 	%f257, %f256;
	abs.f32 	%f292, %f291;
	abs.f32 	%f326, %f325;
	abs.f32 	%f361, %f360;
	abs.f32 	%f395, %f394;
	and.b32  	%r251, %r250, 63;
	and.b32  	%r261, %r260, 63;
	setp.gt.f32 	%p17, %f154, 0f4B800000;
	mul.f32 	%f155, %f153, 0f00000000;
	setp.gt.f32 	%p23, %f188, 0f4B800000;
	mul.f32 	%f189, %f187, 0f00000000;
	setp.gt.f32 	%p29, %f223, 0f4B800000;
	mul.f32 	%f224, %f222, 0f00000000;
	setp.gt.f32 	%p35, %f257, 0f4B800000;
	mul.f32 	%f258, %f256, 0f00000000;
	setp.gt.f32 	%p41, %f292, 0f4B800000;
	mul.f32 	%f293, %f291, 0f00000000;
	setp.gt.f32 	%p47, %f326, 0f4B800000;
	mul.f32 	%f327, %f325, 0f00000000;
	setp.gt.f32 	%p53, %f361, 0f4B800000;
	mul.f32 	%f362, %f360, 0f00000000;
	setp.gt.f32 	%p59, %f395, 0f4B800000;
	mul.f32 	%f396, %f394, 0f00000000;
	cvt.rn.f32.s32 	%f425, %r251;
	cvt.rn.f32.s32 	%f460, %r261;
	selp.f32 	%f156, %f155, %f153, %p17;
	selp.f32 	%f190, %f189, %f187, %p23;
	selp.f32 	%f225, %f224, %f222, %p29;
	selp.f32 	%f259, %f258, %f256, %p35;
	selp.f32 	%f294, %f293, %f291, %p41;
	selp.f32 	%f328, %f327, %f325, %p47;
	selp.f32 	%f363, %f362, %f360, %p53;
	selp.f32 	%f397, %f396, %f394, %p59;
	div.approx.f32 	%f427, %f425, %f180;
	div.approx.f32 	%f461, %f460, %f180;
	add.f32 	%f157, %f156, %f156;
	add.f32 	%f191, %f190, %f190;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f260, %f259, %f259;
	add.f32 	%f295, %f294, %f294;
	add.f32 	%f329, %f328, %f328;
	add.f32 	%f364, %f363, %f363;
	add.f32 	%f398, %f397, %f397;
	add.f32 	%f428, %f427, %f427;
	add.f32 	%f462, %f461, %f461;
	add.f32 	%f515, %f837, %f837;
	add.f32 	%f567, %f825, %f825;
	mov.b32 	%r173, %f157;
	mov.b32 	%r180, %f191;
	mov.b32 	%r191, %f226;
	mov.b32 	%r198, %f260;
	mov.b32 	%r209, %f295;
	mov.b32 	%r216, %f329;
	mov.b32 	%r227, %f364;
	mov.b32 	%r234, %f398;
	mov.b32 	%r252, %f428;
	mov.b32 	%r262, %f462;
	mov.b32 	%r284, %f515;
	mov.b32 	%r316, %f567;
	and.b32  	%r174, %r173, -2147483648;
	and.b32  	%r181, %r180, -2147483648;
	and.b32  	%r192, %r191, -2147483648;
	and.b32  	%r199, %r198, -2147483648;
	and.b32  	%r210, %r209, -2147483648;
	and.b32  	%r217, %r216, -2147483648;
	and.b32  	%r228, %r227, -2147483648;
	and.b32  	%r235, %r234, -2147483648;
	and.b32  	%r253, %r252, -2147483648;
	and.b32  	%r263, %r262, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r317, %r316, -2147483648;
	add.f32 	%f621, %f841, %f841;
	add.f32 	%f673, %f829, %f829;
	or.b32  	%r175, %r174, 1056964608;
	or.b32  	%r182, %r181, 1056964608;
	or.b32  	%r193, %r192, 1056964608;
	or.b32  	%r200, %r199, 1056964608;
	or.b32  	%r211, %r210, 1056964608;
	or.b32  	%r218, %r217, 1056964608;
	or.b32  	%r229, %r228, 1056964608;
	or.b32  	%r236, %r235, 1056964608;
	or.b32  	%r254, %r253, 1056964608;
	or.b32  	%r264, %r263, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r318, %r317, 1056964608;
	mov.b32 	%r333, %f621;
	mov.b32 	%r357, %f673;
	add.f32 	%f727, %f845, %f845;
	mov.b32 	%f158, %r175;
	mov.b32 	%f192, %r182;
	mov.b32 	%f227, %r193;
	mov.b32 	%f261, %r200;
	mov.b32 	%f296, %r211;
	mov.b32 	%f330, %r218;
	mov.b32 	%f365, %r229;
	mov.b32 	%f399, %r236;
	mov.b32 	%f429, %r254;
	mov.b32 	%f463, %r264;
	mov.b32 	%f516, %r286;
	mov.b32 	%f568, %r318;
	and.b32  	%r334, %r333, -2147483648;
	and.b32  	%r358, %r357, -2147483648;
	mov.b32 	%r373, %f727;
	add.f32 	%f159, %f157, %f158;
	abs.f32 	%f161, %f157;
	add.f32 	%f193, %f191, %f192;
	abs.f32 	%f195, %f191;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f262, %f260, %f261;
	abs.f32 	%f264, %f260;
	add.f32 	%f297, %f295, %f296;
	abs.f32 	%f299, %f295;
	add.f32 	%f331, %f329, %f330;
	abs.f32 	%f333, %f329;
	add.f32 	%f366, %f364, %f365;
	abs.f32 	%f368, %f364;
	add.f32 	%f400, %f398, %f399;
	abs.f32 	%f402, %f398;
	add.f32 	%f430, %f428, %f429;
	abs.f32 	%f432, %f428;
	add.f32 	%f464, %f462, %f463;
	abs.f32 	%f466, %f462;
	add.f32 	%f517, %f515, %f516;
	abs.f32 	%f519, %f515;
	add.f32 	%f569, %f567, %f568;
	abs.f32 	%f571, %f567;
	or.b32  	%r335, %r334, 1056964608;
	or.b32  	%r359, %r358, 1056964608;
	and.b32  	%r374, %r373, -2147483648;
	cvt.rzi.f32.f32 	%f160, %f159;
	setp.gt.f32 	%p18, %f161, 0f4B000000;
	cvt.rzi.f32.f32 	%f194, %f193;
	setp.gt.f32 	%p24, %f195, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p30, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f263, %f262;
	setp.gt.f32 	%p36, %f264, 0f4B000000;
	cvt.rzi.f32.f32 	%f298, %f297;
	setp.gt.f32 	%p42, %f299, 0f4B000000;
	cvt.rzi.f32.f32 	%f332, %f331;
	setp.gt.f32 	%p48, %f333, 0f4B000000;
	cvt.rzi.f32.f32 	%f367, %f366;
	setp.gt.f32 	%p54, %f368, 0f4B000000;
	cvt.rzi.f32.f32 	%f401, %f400;
	setp.gt.f32 	%p60, %f402, 0f4B000000;
	cvt.rzi.f32.f32 	%f431, %f430;
	setp.gt.f32 	%p65, %f432, 0f4B000000;
	cvt.rzi.f32.f32 	%f465, %f464;
	setp.gt.f32 	%p72, %f466, 0f4B000000;
	cvt.rzi.f32.f32 	%f518, %f517;
	setp.gt.f32 	%p92, %f519, 0f4B000000;
	cvt.rzi.f32.f32 	%f570, %f569;
	setp.gt.f32 	%p112, %f571, 0f4B000000;
	mov.b32 	%f622, %r335;
	mov.b32 	%f674, %r359;
	or.b32  	%r375, %r374, 1056964608;
	selp.f32 	%f162, %f157, %f160, %p18;
	cvt.rzi.f32.f32 	%f163, %f157;
	setp.lt.f32 	%p19, %f161, 0f3F000000;
	selp.f32 	%f196, %f191, %f194, %p24;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p25, %f195, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p30;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p31, %f230, 0f3F000000;
	selp.f32 	%f265, %f260, %f263, %p36;
	cvt.rzi.f32.f32 	%f266, %f260;
	setp.lt.f32 	%p37, %f264, 0f3F000000;
	selp.f32 	%f300, %f295, %f298, %p42;
	cvt.rzi.f32.f32 	%f301, %f295;
	setp.lt.f32 	%p43, %f299, 0f3F000000;
	selp.f32 	%f334, %f329, %f332, %p48;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p49, %f333, 0f3F000000;
	selp.f32 	%f369, %f364, %f367, %p54;
	cvt.rzi.f32.f32 	%f370, %f364;
	setp.lt.f32 	%p55, %f368, 0f3F000000;
	selp.f32 	%f403, %f398, %f401, %p60;
	cvt.rzi.f32.f32 	%f404, %f398;
	setp.lt.f32 	%p61, %f402, 0f3F000000;
	selp.f32 	%f433, %f428, %f431, %p65;
	cvt.rzi.f32.f32 	%f434, %f428;
	setp.lt.f32 	%p66, %f432, 0f3F000000;
	selp.f32 	%f467, %f462, %f465, %p72;
	cvt.rzi.f32.f32 	%f468, %f462;
	setp.lt.f32 	%p73, %f466, 0f3F000000;
	selp.f32 	%f520, %f515, %f518, %p92;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p93, %f519, 0f3F000000;
	selp.f32 	%f572, %f567, %f570, %p112;
	cvt.rzi.f32.f32 	%f573, %f567;
	setp.lt.f32 	%p113, %f571, 0f3F000000;
	add.f32 	%f623, %f621, %f622;
	abs.f32 	%f625, %f621;
	add.f32 	%f675, %f673, %f674;
	abs.f32 	%f677, %f673;
	mov.b32 	%f728, %r375;
	shr.u32 	%r163, %r3, 3;
	selp.f32 	%f164, %f163, %f162, %p19;
	selp.f32 	%f198, %f197, %f196, %p25;
	selp.f32 	%f233, %f232, %f231, %p31;
	selp.f32 	%f267, %f266, %f265, %p37;
	selp.f32 	%f302, %f301, %f300, %p43;
	selp.f32 	%f336, %f335, %f334, %p49;
	selp.f32 	%f371, %f370, %f369, %p55;
	selp.f32 	%f405, %f404, %f403, %p61;
	selp.f32 	%f435, %f434, %f433, %p66;
	selp.f32 	%f469, %f468, %f467, %p73;
	selp.f32 	%f522, %f521, %f520, %p93;
	selp.f32 	%f574, %f573, %f572, %p113;
	cvt.rzi.f32.f32 	%f624, %f623;
	setp.gt.f32 	%p132, %f625, 0f4B000000;
	cvt.rzi.f32.f32 	%f676, %f675;
	setp.gt.f32 	%p152, %f677, 0f4B000000;
	add.f32 	%f729, %f727, %f728;
	abs.f32 	%f731, %f727;
	cvt.u16.u32 	%rs1, %r163;
	fma.rn.f32 	%f165, %f164, 0fBF000000, %f156;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f190;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f268, %f267, 0fBF000000, %f259;
	fma.rn.f32 	%f303, %f302, 0fBF000000, %f294;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f328;
	fma.rn.f32 	%f372, %f371, 0fBF000000, %f363;
	fma.rn.f32 	%f406, %f405, 0fBF000000, %f397;
	fma.rn.f32 	%f436, %f435, 0fBF000000, %f427;
	fma.rn.f32 	%f470, %f469, 0fBF000000, %f461;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f837;
	fma.rn.f32 	%f575, %f574, 0fBF000000, %f825;
	selp.f32 	%f626, %f621, %f624, %p132;
	cvt.rzi.f32.f32 	%f627, %f621;
	setp.lt.f32 	%p133, %f625, 0f3F000000;
	selp.f32 	%f678, %f673, %f676, %p152;
	cvt.rzi.f32.f32 	%f679, %f673;
	setp.lt.f32 	%p153, %f677, 0f3F000000;
	cvt.rzi.f32.f32 	%f730, %f729;
	setp.gt.f32 	%p173, %f731, 0f4B000000;
	and.b16  	%rs2, %rs1, 255;
	mul.f32 	%f166, %f165, %f165;
	mul.f32 	%f200, %f199, %f199;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f269, %f268, %f268;
	mul.f32 	%f304, %f303, %f303;
	mul.f32 	%f338, %f337, %f337;
	mul.f32 	%f373, %f372, %f372;
	mul.f32 	%f407, %f406, %f406;
	mul.f32 	%f437, %f436, %f436;
	mul.f32 	%f471, %f470, %f470;
	mul.f32 	%f524, %f523, %f523;
	mul.f32 	%f576, %f575, %f575;
	selp.f32 	%f628, %f627, %f626, %p133;
	selp.f32 	%f680, %f679, %f678, %p153;
	selp.f32 	%f732, %f727, %f730, %p173;
	cvt.rzi.f32.f32 	%f733, %f727;
	setp.lt.f32 	%p174, %f731, 0f3F000000;
	mul.lo.s16 	%rs3, %rs2, 171;
	cvt.rzi.s32.f32 	%r176, %f164;
	fma.rn.f32 	%f167, %f166, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f168, %f166, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r183, %f198;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r194, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r201, %f267;
	fma.rn.f32 	%f270, %f269, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f271, %f269, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r212, %f302;
	fma.rn.f32 	%f305, %f304, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f306, %f304, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r219, %f336;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r230, %f371;
	fma.rn.f32 	%f374, %f373, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f375, %f373, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r237, %f405;
	fma.rn.f32 	%f408, %f407, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f409, %f407, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f438, %f437, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f439, %f437, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f472, %f471, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f473, %f471, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f577, %f576, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f578, %f576, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f629, %f628, 0fBF000000, %f841;
	fma.rn.f32 	%f681, %f680, 0fBF000000, %f829;
	selp.f32 	%f734, %f733, %f732, %p174;
	shr.u16 	%rs4, %rs3, 13;
	add.s32 	%r177, %r176, 1;
	fma.rn.f32 	%f169, %f167, %f166, 0fC0A55DF6;
	fma.rn.f32 	%f170, %f168, %f166, 0f4081E0CF;
	fma.rn.f32 	%f171, %f166, %f165, 0f00000000;
	add.s32 	%r184, %r183, 1;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	add.s32 	%r195, %r194, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r202, %r201, 1;
	fma.rn.f32 	%f272, %f270, %f269, 0fC0A55DF6;
	fma.rn.f32 	%f273, %f271, %f269, 0f4081E0CF;
	fma.rn.f32 	%f274, %f269, %f268, 0f00000000;
	add.s32 	%r213, %r212, 1;
	fma.rn.f32 	%f307, %f305, %f304, 0fC0A55DF6;
	fma.rn.f32 	%f308, %f306, %f304, 0f4081E0CF;
	fma.rn.f32 	%f309, %f304, %f303, 0f00000000;
	add.s32 	%r220, %r219, 1;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	add.s32 	%r231, %r230, 1;
	fma.rn.f32 	%f376, %f374, %f373, 0fC0A55DF6;
	fma.rn.f32 	%f377, %f375, %f373, 0f4081E0CF;
	fma.rn.f32 	%f378, %f373, %f372, 0f00000000;
	add.s32 	%r238, %r237, 1;
	fma.rn.f32 	%f410, %f408, %f407, 0fC0A55DF6;
	fma.rn.f32 	%f411, %f409, %f407, 0f4081E0CF;
	fma.rn.f32 	%f412, %f407, %f406, 0f00000000;
	cvt.rzi.s32.f32 	%r255, %f435;
	fma.rn.f32 	%f440, %f438, %f437, 0fC0A55DF6;
	fma.rn.f32 	%f441, %f439, %f437, 0f4081E0CF;
	fma.rn.f32 	%f442, %f437, %f436, 0f00000000;
	cvt.rzi.s32.f32 	%r265, %f469;
	fma.rn.f32 	%f474, %f472, %f471, 0fC0A55DF6;
	fma.rn.f32 	%f475, %f473, %f471, 0f4081E0CF;
	fma.rn.f32 	%f476, %f471, %f470, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f522;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	cvt.rzi.s32.f32 	%r319, %f574;
	fma.rn.f32 	%f579, %f577, %f576, 0fC0A55DF6;
	fma.rn.f32 	%f580, %f578, %f576, 0f4081E0CF;
	fma.rn.f32 	%f581, %f576, %f575, 0f00000000;
	mul.f32 	%f630, %f629, %f629;
	mul.f32 	%f682, %f681, %f681;
	fma.rn.f32 	%f735, %f734, 0fBF000000, %f845;
	mul.lo.s16 	%rs5, %rs4, 48;
	fma.rn.f32 	%f172, %f170, %f166, 0fC09DE9E6;
	fma.rn.f32 	%f173, %f169, %f171, 0f00000000;
	and.b32  	%r178, %r177, 1;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	and.b32  	%r185, %r184, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r196, %r195, 1;
	fma.rn.f32 	%f275, %f273, %f269, 0fC09DE9E6;
	fma.rn.f32 	%f276, %f272, %f274, 0f00000000;
	and.b32  	%r203, %r202, 1;
	fma.rn.f32 	%f310, %f308, %f304, 0fC09DE9E6;
	fma.rn.f32 	%f311, %f307, %f309, 0f00000000;
	and.b32  	%r214, %r213, 1;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	and.b32  	%r221, %r220, 1;
	fma.rn.f32 	%f379, %f377, %f373, 0fC09DE9E6;
	fma.rn.f32 	%f380, %f376, %f378, 0f00000000;
	and.b32  	%r232, %r231, 1;
	fma.rn.f32 	%f413, %f411, %f407, 0fC09DE9E6;
	fma.rn.f32 	%f414, %f410, %f412, 0f00000000;
	and.b32  	%r239, %r238, 1;
	fma.rn.f32 	%f443, %f441, %f437, 0fC09DE9E6;
	fma.rn.f32 	%f444, %f440, %f442, 0f00000000;
	and.b32  	%r256, %r255, 1;
	fma.rn.f32 	%f477, %f475, %f471, 0fC09DE9E6;
	fma.rn.f32 	%f478, %f474, %f476, 0f00000000;
	and.b32  	%r266, %r265, 1;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f582, %f580, %f576, 0fC09DE9E6;
	fma.rn.f32 	%f583, %f579, %f581, 0f00000000;
	and.b32  	%r320, %r319, 1;
	fma.rn.f32 	%f631, %f630, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f632, %f630, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f683, %f682, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f684, %f682, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f736, %f735, %f735;
	and.b32  	%r76, %r75, 8;
	shl.b32 	%r77, %r4, 2;
	sub.s16 	%rs6, %rs1, %rs5;
	and.b32  	%r80, %r4, 18;
	fma.rn.f32 	%f174, %f172, %f166, 0f3F800000;
	fma.rn.f32 	%f175, %f165, 0f40490FDB, %f173;
	setp.eq.b32 	%p20, %r178, 1;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	setp.eq.b32 	%p26, %r185, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p32, %r196, 1;
	fma.rn.f32 	%f277, %f275, %f269, 0f3F800000;
	fma.rn.f32 	%f278, %f268, 0f40490FDB, %f276;
	setp.eq.b32 	%p38, %r203, 1;
	fma.rn.f32 	%f312, %f310, %f304, 0f3F800000;
	fma.rn.f32 	%f313, %f303, 0f40490FDB, %f311;
	setp.eq.b32 	%p44, %r214, 1;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	setp.eq.b32 	%p50, %r221, 1;
	fma.rn.f32 	%f381, %f379, %f373, 0f3F800000;
	fma.rn.f32 	%f382, %f372, 0f40490FDB, %f380;
	setp.eq.b32 	%p56, %r232, 1;
	fma.rn.f32 	%f415, %f413, %f407, 0f3F800000;
	fma.rn.f32 	%f416, %f406, 0f40490FDB, %f414;
	setp.eq.b32 	%p62, %r239, 1;
	fma.rn.f32 	%f445, %f443, %f437, 0f3F800000;
	fma.rn.f32 	%f446, %f436, 0f40490FDB, %f444;
	setp.eq.b32 	%p67, %r256, 1;
	fma.rn.f32 	%f479, %f477, %f471, 0f3F800000;
	fma.rn.f32 	%f480, %f470, 0f40490FDB, %f478;
	setp.eq.b32 	%p74, %r266, 1;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	setp.eq.b32 	%p94, %r288, 1;
	fma.rn.f32 	%f584, %f582, %f576, 0f3F800000;
	fma.rn.f32 	%f585, %f575, 0f40490FDB, %f583;
	setp.eq.b32 	%p114, %r320, 1;
	cvt.rzi.s32.f32 	%r336, %f628;
	fma.rn.f32 	%f633, %f631, %f630, 0fC0A55DF6;
	fma.rn.f32 	%f634, %f632, %f630, 0f4081E0CF;
	fma.rn.f32 	%f635, %f630, %f629, 0f00000000;
	cvt.rzi.s32.f32 	%r360, %f680;
	fma.rn.f32 	%f685, %f683, %f682, 0fC0A55DF6;
	fma.rn.f32 	%f686, %f684, %f682, 0f4081E0CF;
	fma.rn.f32 	%f687, %f682, %f681, 0f00000000;
	fma.rn.f32 	%f737, %f736, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f738, %f736, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r78, %r77, 4;
	and.b16  	%rs7, %rs6, 255;
	or.b32  	%r164, %r80, %r76;
	selp.f32 	%f176, %f174, %f175, %p20;
	and.b32  	%r179, %r177, 2;
	mov.f32 	%f177, 0f00000000;
	selp.f32 	%f210, %f208, %f209, %p26;
	and.b32  	%r186, %r184, 2;
	selp.f32 	%f245, %f243, %f244, %p32;
	and.b32  	%r197, %r195, 2;
	selp.f32 	%f279, %f277, %f278, %p38;
	and.b32  	%r204, %r202, 2;
	selp.f32 	%f314, %f312, %f313, %p44;
	and.b32  	%r215, %r213, 2;
	selp.f32 	%f348, %f346, %f347, %p50;
	and.b32  	%r222, %r220, 2;
	selp.f32 	%f383, %f381, %f382, %p56;
	and.b32  	%r233, %r231, 2;
	selp.f32 	%f417, %f415, %f416, %p62;
	and.b32  	%r240, %r238, 2;
	selp.f32 	%f447, %f445, %f446, %p67;
	and.b32  	%r257, %r255, 2;
	selp.f32 	%f481, %f479, %f480, %p74;
	and.b32  	%r267, %r265, 2;
	selp.f32 	%f534, %f532, %f533, %p94;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f586, %f584, %f585, %p114;
	and.b32  	%r321, %r319, 2;
	fma.rn.f32 	%f636, %f634, %f630, 0fC09DE9E6;
	fma.rn.f32 	%f637, %f633, %f635, 0f00000000;
	and.b32  	%r337, %r336, 1;
	fma.rn.f32 	%f688, %f686, %f682, 0fC09DE9E6;
	fma.rn.f32 	%f689, %f685, %f687, 0f00000000;
	and.b32  	%r361, %r360, 1;
	cvt.rzi.s32.f32 	%r376, %f734;
	fma.rn.f32 	%f739, %f737, %f736, 0fC0A55DF6;
	fma.rn.f32 	%f740, %f738, %f736, 0f4081E0CF;
	fma.rn.f32 	%f741, %f736, %f735, 0f00000000;
	mul.wide.u16 	%r79, %rs7, 32;
	or.b32  	%r165, %r164, %r78;
	setp.eq.s32 	%p21, %r179, 0;
	sub.f32 	%f178, %f177, %f176;
	setp.eq.s32 	%p27, %r186, 0;
	sub.f32 	%f212, %f177, %f210;
	setp.eq.s32 	%p33, %r197, 0;
	sub.f32 	%f247, %f177, %f245;
	setp.eq.s32 	%p39, %r204, 0;
	sub.f32 	%f281, %f177, %f279;
	setp.eq.s32 	%p45, %r215, 0;
	sub.f32 	%f316, %f177, %f314;
	setp.eq.s32 	%p51, %r222, 0;
	sub.f32 	%f350, %f177, %f348;
	setp.eq.s32 	%p57, %r233, 0;
	sub.f32 	%f385, %f177, %f383;
	setp.eq.s32 	%p63, %r240, 0;
	sub.f32 	%f419, %f177, %f417;
	setp.eq.s32 	%p68, %r257, 0;
	neg.f32 	%f449, %f447;
	add.s32 	%r258, %r255, 1;
	cvt.rzi.f32.f32 	%f454, %f427;
	setp.eq.s32 	%p75, %r267, 0;
	neg.f32 	%f483, %f481;
	add.s32 	%r268, %r265, 1;
	cvt.rzi.f32.f32 	%f487, %f461;
	setp.eq.s32 	%p95, %r289, 0;
	neg.f32 	%f536, %f534;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f541, %f837;
	setp.eq.s32 	%p115, %r321, 0;
	neg.f32 	%f588, %f586;
	add.s32 	%r322, %r319, 1;
	cvt.rzi.f32.f32 	%f593, %f825;
	fma.rn.f32 	%f638, %f636, %f630, 0f3F800000;
	fma.rn.f32 	%f639, %f629, 0f40490FDB, %f637;
	setp.eq.b32 	%p134, %r337, 1;
	fma.rn.f32 	%f690, %f688, %f682, 0f3F800000;
	fma.rn.f32 	%f691, %f681, 0f40490FDB, %f689;
	setp.eq.b32 	%p154, %r361, 1;
	fma.rn.f32 	%f742, %f740, %f736, 0fC09DE9E6;
	fma.rn.f32 	%f743, %f739, %f741, 0f00000000;
	and.b32  	%r377, %r376, 1;
	or.b32  	%r166, %r165, %r79;
	selp.f32 	%f179, %f176, %f178, %p21;
	selp.f32 	%f213, %f210, %f212, %p27;
	selp.f32 	%f248, %f245, %f247, %p33;
	selp.f32 	%f282, %f279, %f281, %p39;
	selp.f32 	%f317, %f314, %f316, %p45;
	selp.f32 	%f351, %f348, %f350, %p51;
	selp.f32 	%f386, %f383, %f385, %p57;
	selp.f32 	%f420, %f417, %f419, %p63;
	selp.f32 	%f448, %f446, %f445, %p67;
	selp.f32 	%f450, %f447, %f449, %p68;
	and.b32  	%r259, %r258, 2;
	setp.eq.f32 	%p70, %f454, %f427;
	mul.f32 	%f455, %f427, 0f00000000;
	selp.f32 	%f482, %f480, %f479, %p74;
	selp.f32 	%f484, %f481, %f483, %p75;
	and.b32  	%r269, %r268, 2;
	setp.eq.f32 	%p77, %f487, %f461;
	mul.f32 	%f488, %f461, 0f00000000;
	selp.f32 	%f535, %f533, %f532, %p94;
	selp.f32 	%f537, %f534, %f536, %p95;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p97, %f541, %f837;
	mul.f32 	%f542, %f837, 0f00000000;
	selp.f32 	%f587, %f585, %f584, %p114;
	selp.f32 	%f589, %f586, %f588, %p115;
	and.b32  	%r323, %r322, 2;
	setp.eq.f32 	%p117, %f593, %f825;
	mul.f32 	%f594, %f825, 0f00000000;
	selp.f32 	%f640, %f638, %f639, %p134;
	and.b32  	%r338, %r336, 2;
	selp.f32 	%f692, %f690, %f691, %p154;
	and.b32  	%r362, %r360, 2;
	fma.rn.f32 	%f744, %f742, %f736, 0f3F800000;
	fma.rn.f32 	%f745, %f735, 0f40490FDB, %f743;
	setp.eq.b32 	%p175, %r377, 1;
	bfe.u32 	%r167, %r166, 1, 7;
	mul.f32 	%f87, %f179, %f179;
	mul.f32 	%f4, %f213, %f213;
	mul.f32 	%f8, %f248, %f248;
	mul.f32 	%f13, %f282, %f282;
	mul.f32 	%f17, %f317, %f317;
	mul.f32 	%f22, %f351, %f351;
	mul.f32 	%f26, %f386, %f386;
	mul.f32 	%f31, %f420, %f420;
	setp.eq.s32 	%p69, %r259, 0;
	sub.f32 	%f452, %f177, %f448;
	selp.f32 	%f456, %f455, %f450, %p70;
	abs.f32 	%f457, %f427;
	setp.eq.s32 	%p76, %r269, 0;
	sub.f32 	%f485, %f177, %f482;
	selp.f32 	%f489, %f488, %f484, %p77;
	abs.f32 	%f490, %f461;
	setp.eq.s32 	%p96, %r291, 0;
	sub.f32 	%f539, %f177, %f535;
	selp.f32 	%f104, %f542, %f537, %p97;
	abs.f32 	%f543, %f837;
	setp.eq.s32 	%p116, %r323, 0;
	sub.f32 	%f591, %f177, %f587;
	selp.f32 	%f595, %f594, %f589, %p117;
	abs.f32 	%f596, %f825;
	setp.eq.s32 	%p135, %r338, 0;
	neg.f32 	%f642, %f640;
	add.s32 	%r339, %r336, 1;
	cvt.rzi.f32.f32 	%f647, %f841;
	setp.eq.s32 	%p155, %r362, 0;
	neg.f32 	%f694, %f692;
	add.s32 	%r363, %r360, 1;
	cvt.rzi.f32.f32 	%f699, %f829;
	selp.f32 	%f746, %f744, %f745, %p175;
	and.b32  	%r378, %r376, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd38, %r167, 4;
	mul.f32 	%f183, %f87, 0f3C8A83B8;
	mul.f32 	%f217, %f4, 0f3C8A83B8;
	mul.f32 	%f252, %f8, 0f3C8A83B8;
	mul.f32 	%f286, %f13, 0f3C8A83B8;
	mul.f32 	%f321, %f17, 0f3C8A83B8;
	mul.f32 	%f355, %f22, 0f3C8A83B8;
	mul.f32 	%f390, %f26, 0f3C8A83B8;
	mul.f32 	%f423, %f31, 0f3C8A83B8;
	selp.f32 	%f453, %f448, %f452, %p69;
	setp.gt.f32 	%p71, %f457, 0f4B800000;
	add.f32 	%f458, %f456, 0f3F800000;
	selp.f32 	%f486, %f482, %f485, %p76;
	setp.gt.f32 	%p78, %f490, 0f4B800000;
	add.f32 	%f491, %f489, 0f3F800000;
	selp.f32 	%f540, %f535, %f539, %p96;
	setp.gt.f32 	%p98, %f543, 0f4B800000;
	add.f32 	%f544, %f104, 0f3F800000;
	selp.f32 	%f592, %f587, %f591, %p116;
	setp.gt.f32 	%p118, %f596, 0f4B800000;
	add.f32 	%f597, %f595, 0f3F800000;
	selp.f32 	%f641, %f639, %f638, %p134;
	selp.f32 	%f643, %f640, %f642, %p135;
	and.b32  	%r340, %r339, 2;
	setp.eq.f32 	%p137, %f647, %f841;
	mul.f32 	%f648, %f841, 0f00000000;
	selp.f32 	%f693, %f691, %f690, %p154;
	selp.f32 	%f695, %f692, %f694, %p155;
	and.b32  	%r364, %r363, 2;
	setp.eq.f32 	%p157, %f699, %f829;
	mul.f32 	%f700, %f829, 0f00000000;
	setp.eq.s32 	%p176, %r378, 0;
	neg.f32 	%f748, %f746;
	add.s32 	%r379, %r376, 1;
	cvt.rzi.f32.f32 	%f753, %f845;
	add.s64 	%rd39, %rd1, %rd38;
	mul.f32 	%f3, %f183, %f815;
	mul.f32 	%f218, %f217, %f816;
	mul.f32 	%f12, %f252, %f817;
	mul.f32 	%f287, %f286, %f818;
	mul.f32 	%f21, %f321, %f819;
	mul.f32 	%f356, %f355, %f820;
	mul.f32 	%f30, %f390, %f821;
	mul.f32 	%f424, %f423, %f822;
	selp.f32 	%f459, %f458, %f453, %p71;
	selp.f32 	%f492, %f491, %f486, %p78;
	selp.f32 	%f105, %f544, %f540, %p98;
	selp.f32 	%f598, %f597, %f592, %p118;
	setp.eq.s32 	%p136, %r340, 0;
	sub.f32 	%f645, %f177, %f641;
	selp.f32 	%f123, %f648, %f643, %p137;
	abs.f32 	%f649, %f841;
	setp.eq.s32 	%p156, %r364, 0;
	sub.f32 	%f697, %f177, %f693;
	selp.f32 	%f701, %f700, %f695, %p157;
	abs.f32 	%f702, %f829;
	selp.f32 	%f747, %f745, %f744, %p175;
	selp.f32 	%f749, %f746, %f748, %p176;
	and.b32  	%r380, %r379, 2;
	setp.eq.f32 	%p178, %f753, %f845;
	mul.f32 	%f754, %f845, 0f00000000;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r81, [%rd39];
	mov.b32 	%r189, %f218;
	mov.b32 	%r188, %f3;
	mov.b32 	%r207, %f287;
	mov.b32 	%r206, %f12;
	mov.b32 	%r225, %f356;
	mov.b32 	%r224, %f21;
	mov.b32 	%r243, %f424;
	mov.b32 	%r242, %f30;
	mov.b32 	%r245, %f459;
	mov.b32 	%r246, %f492;
	mov.b32 	%r248, %f456;
	mov.b32 	%r249, %f489;
	mov.b32 	%r306, %f598;
	mov.b32 	%r305, %f105;
	mov.b32 	%r312, %f595;
	mov.b32 	%r311, %f104;
	selp.f32 	%f646, %f641, %f645, %p136;
	setp.gt.f32 	%p138, %f649, 0f4B800000;
	add.f32 	%f650, %f123, 0f3F800000;
	selp.f32 	%f698, %f693, %f697, %p156;
	setp.gt.f32 	%p158, %f702, 0f4B800000;
	add.f32 	%f703, %f701, 0f3F800000;
	and.b32  	%r41, %r14, 1;
	setp.eq.s32 	%p177, %r380, 0;
	sub.f32 	%f751, %f177, %f747;
	selp.f32 	%f755, %f754, %f749, %p178;
	abs.f32 	%f756, %f845;
	// begin inline asm
	cvt.rn.f16x2.f32 %r187, %r189, %r188;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r205, %r207, %r206;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r223, %r225, %r224;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r241, %r243, %r242;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r244, %r246, %r245;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r247, %r249, %r248;
	// end inline asm
	xor.b32  	%r309, %r312, -2147483648;
	xor.b32  	%r308, %r311, -2147483648;
	selp.f32 	%f124, %f650, %f646, %p138;
	selp.f32 	%f704, %f703, %f698, %p158;
	setp.eq.s32 	%p172, %r41, %r84;
	selp.f32 	%f752, %f747, %f751, %p177;
	setp.gt.f32 	%p179, %f756, 0f4B800000;
	add.f32 	%f757, %f755, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r304, %r306, %r305;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r307, %r309, %r308;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r310, %r312, %r311;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r313, %r306, %r305;
	// end inline asm
	mov.b32 	%r353, %f704;
	mov.b32 	%r352, %f124;
	mov.b32 	%r356, %f701;
	mov.b32 	%r355, %f123;
	selp.f32 	%f758, %f757, %f752, %p179;
	selp.f32 	%f142, 0f3F800000, 0f00000000, %p172;
	// begin inline asm
	cvt.rn.f16x2.f32 %r351, %r353, %r352;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r355;
	// end inline asm
	mul.f32 	%f143, %f758, %f142;
	mul.f32 	%f144, %f755, %f142;
	add.f32 	%f781, %f833, %f833;
	mov.b32 	%r403, %f781;
	and.b32  	%r404, %r403, -2147483648;
	or.b32  	%r405, %r404, 1056964608;
	mov.b32 	%f782, %r405;
	add.f32 	%f783, %f781, %f782;
	cvt.rzi.f32.f32 	%f784, %f783;
	abs.f32 	%f785, %f781;
	setp.gt.f32 	%p193, %f785, 0f4B000000;
	selp.f32 	%f786, %f781, %f784, %p193;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p194, %f785, 0f3F000000;
	selp.f32 	%f788, %f787, %f786, %p194;
	cvt.rzi.s32.f32 	%r406, %f788;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f833;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	and.b32  	%r407, %r406, 1;
	setp.eq.b32 	%p195, %r407, 1;
	selp.f32 	%f800, %f798, %f799, %p195;
	selp.f32 	%f801, %f799, %f798, %p195;
	and.b32  	%r408, %r406, 2;
	setp.eq.s32 	%p196, %r408, 0;
	neg.f32 	%f802, %f800;
	selp.f32 	%f803, %f800, %f802, %p196;
	add.s32 	%r409, %r406, 1;
	and.b32  	%r410, %r409, 2;
	setp.eq.s32 	%p197, %r410, 0;
	sub.f32 	%f805, %f177, %f801;
	selp.f32 	%f806, %f801, %f805, %p197;
	cvt.rzi.f32.f32 	%f807, %f833;
	setp.eq.f32 	%p198, %f807, %f833;
	mul.f32 	%f808, %f833, 0f00000000;
	selp.f32 	%f809, %f808, %f803, %p198;
	abs.f32 	%f810, %f833;
	setp.gt.f32 	%p199, %f810, 0f4B800000;
	add.f32 	%f811, %f809, 0f3F800000;
	selp.f32 	%f812, %f811, %f806, %p199;
	mul.f32 	%f813, %f812, %f142;
	mul.f32 	%f814, %f809, %f142;
	mov.b32 	%r393, %f813;
	mov.b32 	%r392, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r391, %r393, %r392;
	// end inline asm
	mov.b32 	%r399, %f814;
	xor.b32  	%r396, %r399, -2147483648;
	mov.b32 	%r398, %f144;
	xor.b32  	%r395, %r398, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r394, %r396, %r395;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r397, %r399, %r398;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r400, %r393, %r392;
	// end inline asm
	and.b32  	%r412, %r1, 7;
	shl.b32 	%r413, %r1, 2;
	and.b32  	%r55, %r413, 32;
	or.b32  	%r414, %r412, %r55;
	and.b32  	%r415, %r75, 16;
	or.b32  	%r56, %r415, %r414;
	and.b32  	%r57, %r82, 8;
	shl.b32 	%r416, %r3, 5;
	and.b32  	%r58, %r416, 128;
	cvt.u16.u32 	%rs8, %r79;
	mul.hi.u16 	%rs9, %rs8, -21845;
	shr.u16 	%rs10, %rs9, 5;
	mul.lo.s16 	%rs11, %rs10, 48;
	sub.s16 	%rs12, %rs8, %rs11;
	cvt.u32.u16 	%r417, %rs12;
	and.b32  	%r418, %r77, 28;
	and.b32  	%r419, %r416, 96;
	or.b32  	%r59, %r418, %r419;
	add.s32 	%r420, %r417, %r151;
	shl.b32 	%r421, %r420, 8;
	or.b32  	%r422, %r59, %r58;
	or.b32  	%r60, %r422, %r421;
	and.b32  	%r61, %r4, 8;
	shl.b32 	%r423, %r4, 4;
	or.b32  	%r424, %r423, %r61;
	shr.u32 	%r425, %r424, 2;
	and.b32  	%r426, %r425, 30;
	shl.b32 	%r427, %r4, 3;
	and.b32  	%r428, %r427, 64;
	shl.b32 	%r429, %r1, 1;
	or.b32  	%r430, %r428, %r429;
	shr.u32 	%r431, %r430, 2;
	and.b32  	%r432, %r2, 32;
	or.b32  	%r62, %r431, %r432;
	or.b32  	%r63, %r62, 8;
	or.b32  	%r433, %r80, %r78;
	or.b32  	%r434, %r433, %r76;
	shr.u32 	%r435, %r434, 1;
	mul.lo.s32 	%r436, %r435, 65;
	add.s32 	%r437, %r62, %r436;
	add.s32 	%r438, %r63, %r436;
	shl.b32 	%r439, %r149, 16;
	add.s32 	%r440, %r439, -196608;
	and.b32  	%r441, %r413, 28;
	or.b32  	%r442, %r441, %r14;
	and.b32  	%r443, %r79, 224;
	or.b32  	%r444, %r442, %r443;
	shl.b32 	%r64, %r444, 8;
	cvt.s64.s32 	%rd5, %r440;
	shr.u32 	%r445, %r1, 3;
	setp.gt.u32 	%p201, %r4, 15;
	or.b32  	%r446, %r445, 2;
	or.b32  	%r447, %r445, 4;
	or.b32  	%r448, %r445, 6;
	and.b32  	%r449, %r1, 1;
	neg.s32 	%r450, %r449;
	setp.eq.b32 	%p202, %r449, 1;
	and.b32  	%r451, %r450, 520;
	mul.lo.s32 	%r452, %r445, 1057;
	bfe.s32 	%r453, %r1, 2, 1;
	and.b32  	%r454, %r1, 4;
	setp.eq.s32 	%p203, %r454, 0;
	and.b32  	%r455, %r453, 130;
	bfe.s32 	%r456, %r1, 1, 1;
	and.b32  	%r457, %r1, 2;
	setp.eq.s32 	%p204, %r457, 0;
	and.b32  	%r458, %r456, 260;
	selp.b32 	%r459, 65, 0, %p201;
	add.s32 	%r460, %r451, %r426;
	add.s32 	%r461, %r460, %r452;
	add.s32 	%r462, %r461, %r455;
	add.s32 	%r463, %r462, %r458;
	add.s32 	%r464, %r463, %r459;
	mul.wide.u32 	%rd40, %r464, 4;
	mov.u64 	%rd41, shmem;
	add.s64 	%rd6, %rd41, %rd40;
	selp.b64 	%rd42, 65, 0, %p201;
	selp.b64 	%rd43, 0, 260, %p204;
	selp.b64 	%rd44, 0, 130, %p203;
	cvt.u64.u32 	%rd45, %r452;
	selp.b64 	%rd46, 520, 0, %p202;
	cvt.u64.u32 	%rd47, %r426;
	add.s64 	%rd48, %rd47, %rd46;
	add.s64 	%rd49, %rd48, %rd45;
	add.s64 	%rd50, %rd49, %rd44;
	add.s64 	%rd51, %rd50, %rd43;
	add.s64 	%rd52, %rd51, %rd42;
	shl.b64 	%rd53, %rd52, 2;
	add.s64 	%rd7, %rd41, %rd53;
	mul.lo.s32 	%r465, %r446, 1057;
	mul.lo.s32 	%r466, %r86, 65;
	add.s32 	%r467, %r460, %r465;
	add.s32 	%r468, %r467, %r455;
	add.s32 	%r469, %r468, %r458;
	add.s32 	%r470, %r469, %r466;
	mul.wide.u32 	%rd54, %r470, 4;
	add.s64 	%rd8, %rd41, %rd54;
	cvt.u64.u32 	%rd55, %r466;
	cvt.u64.u32 	%rd56, %r465;
	add.s64 	%rd57, %rd48, %rd56;
	add.s64 	%rd58, %rd57, %rd44;
	add.s64 	%rd59, %rd58, %rd43;
	add.s64 	%rd60, %rd59, %rd55;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd9, %rd41, %rd61;
	mul.lo.s32 	%r471, %r447, 1057;
	add.s32 	%r472, %r460, %r471;
	add.s32 	%r473, %r472, %r455;
	add.s32 	%r474, %r473, %r458;
	add.s32 	%r475, %r474, %r466;
	mul.wide.u32 	%rd62, %r475, 4;
	add.s64 	%rd10, %rd41, %rd62;
	cvt.u64.u32 	%rd63, %r471;
	add.s64 	%rd64, %rd48, %rd63;
	add.s64 	%rd65, %rd64, %rd44;
	add.s64 	%rd66, %rd65, %rd43;
	add.s64 	%rd67, %rd66, %rd55;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd11, %rd41, %rd68;
	mul.lo.s32 	%r476, %r448, 1057;
	add.s32 	%r477, %r460, %r476;
	add.s32 	%r478, %r477, %r455;
	add.s32 	%r479, %r478, %r458;
	add.s32 	%r480, %r479, %r466;
	mul.wide.u32 	%rd69, %r480, 4;
	add.s64 	%rd12, %rd41, %rd69;
	cvt.u64.u32 	%rd70, %r476;
	add.s64 	%rd71, %rd48, %rd70;
	add.s64 	%rd72, %rd71, %rd44;
	add.s64 	%rd73, %rd72, %rd43;
	add.s64 	%rd74, %rd73, %rd55;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd13, %rd41, %rd75;
	setp.eq.s32 	%p205, %r84, 0;
	selp.b32 	%r65, 0, 130, %p205;
	bfe.s32 	%r481, %r4, 2, 1;
	and.b32  	%r66, %r481, 260;
	bfe.s32 	%r482, %r4, 1, 1;
	and.b32  	%r67, %r482, 65;
	and.b32  	%r483, %r429, 14;
	or.b32  	%r484, %r483, %r86;
	mul.lo.s32 	%r485, %r484, 65;
	add.s32 	%r486, %r426, %r485;
	add.s32 	%r487, %r486, %r452;
	mul.wide.u32 	%rd76, %r487, 4;
	add.s64 	%rd14, %rd41, %rd76;
	cvt.u64.u32 	%rd77, %r485;
	add.s64 	%rd78, %rd77, %rd47;
	add.s64 	%rd79, %rd78, %rd45;
	shl.b64 	%rd80, %rd79, 2;
	add.s64 	%rd15, %rd41, %rd80;
	add.s32 	%r488, %r486, %r465;
	mul.wide.u32 	%rd81, %r488, 4;
	add.s64 	%rd16, %rd41, %rd81;
	add.s64 	%rd82, %rd78, %rd56;
	shl.b64 	%rd83, %rd82, 2;
	add.s64 	%rd17, %rd41, %rd83;
	add.s32 	%r489, %r486, %r471;
	mul.wide.u32 	%rd84, %r489, 4;
	add.s64 	%rd18, %rd41, %rd84;
	add.s64 	%rd85, %rd78, %rd63;
	shl.b64 	%rd86, %rd85, 2;
	add.s64 	%rd19, %rd41, %rd86;
	add.s32 	%r490, %r486, %r476;
	mul.wide.u32 	%rd87, %r490, 4;
	add.s64 	%rd20, %rd41, %rd87;
	add.s64 	%rd88, %rd78, %rd70;
	shl.b64 	%rd89, %rd88, 2;
	add.s64 	%rd21, %rd41, %rd89;
	mul.wide.u32 	%rd90, %r438, 4;
	add.s64 	%rd22, %rd41, %rd90;
	mul.wide.u32 	%rd91, %r437, 4;
	add.s64 	%rd23, %rd41, %rd91;
	setp.eq.s32 	%p206, %r61, 0;
	mov.u16 	%rs300, 25600;
	mov.u16 	%rs248, 21504;
	mov.u16 	%rs308, 18432;
	mov.u32 	%r2558, %r2550;
	mov.u32 	%r2559, %r2550;
	mov.u32 	%r2560, %r2550;
	mov.u32 	%r2561, %r2550;
	mov.u32 	%r2571, %r2550;
	mov.u32 	%r2572, %r2550;
	mov.u32 	%r74, %r2550;
	bra.uni 	$L__BB0_83;
$L__BB0_89:                             // %pass10132
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r2541, %r2551, %r64;
	or.b32  	%r2542, %r2541, %r58;
	or.b32  	%r2543, %r2542, %r59;
	or.b32  	%r2544, %r2543, 262144;
	cvt.s64.s32 	%rd129, %r2544;
	add.s64 	%rd130, %rd129, %rd5;
	shr.u64 	%rd131, %rd130, 38;
	add.s64 	%rd132, %rd130, %rd131;
	shr.s64 	%rd133, %rd132, 26;
	setp.lt.s64 	%p230, %rd130, 0;
	and.b64  	%rd134, %rd132, -67108864;
	setp.ne.s64 	%p231, %rd134, %rd130;
	and.pred  	%p232, %p230, %p231;
	selp.u64 	%rd135, 1, 0, %p232;
	sub.s64 	%rd136, %rd135, %rd133;
	shl.b64 	%rd137, %rd136, 26;
	add.s64 	%rd138, %rd137, %rd130;
	shl.b64 	%rd139, %rd138, 2;
	add.s64 	%rd140, %rd3, %rd139;
	st.global.v4.u32 	[%rd140], {%r138, %r140, %r139, %r141};
	or.b32  	%r2545, %r2543, 393216;
	cvt.s64.s32 	%rd141, %r2545;
	add.s64 	%rd142, %rd141, %rd5;
	shr.u64 	%rd143, %rd142, 38;
	add.s64 	%rd144, %rd142, %rd143;
	shr.s64 	%rd145, %rd144, 26;
	setp.lt.s64 	%p233, %rd142, 0;
	and.b64  	%rd146, %rd144, -67108864;
	setp.ne.s64 	%p234, %rd146, %rd142;
	and.pred  	%p235, %p233, %p234;
	selp.u64 	%rd147, 1, 0, %p235;
	sub.s64 	%rd148, %rd147, %rd145;
	shl.b64 	%rd149, %rd148, 26;
	add.s64 	%rd150, %rd149, %rd142;
	shl.b64 	%rd151, %rd150, 2;
	add.s64 	%rd152, %rd3, %rd151;
	st.global.v4.u32 	[%rd152], {%r142, %r144, %r143, %r145};
	setp.ne.s32 	%p236, %r74, 32512;
	add.s32 	%r74, %r74, 256;
	add.s32 	%r2546, %r74, %r147;
	setp.lt.s32 	%p237, %r2546, %r148;
	and.pred  	%p238, %p236, %p237;
	@%p238 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_90;
$L__BB0_83:                             // %L1416
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r556, %r74, %r56;
	or.b32  	%r557, %r556, %r57;
	add.s32 	%r558, %r557, %r147;
	mad.lo.s32 	%r559, %r558, 12288, %r60;
	mul.hi.s32 	%r560, %r559, 715827883;
	shr.u32 	%r561, %r560, 31;
	shr.s32 	%r562, %r560, 26;
	add.s32 	%r563, %r562, %r561;
	setp.lt.s32 	%p207, %r559, 0;
	mul.lo.s32 	%r564, %r563, 402653184;
	setp.ne.s32 	%p208, %r564, %r559;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r565, -1, 0, %p209;
	add.s32 	%r566, %r563, %r565;
	mad.lo.s32 	%r567, %r566, -402653184, %r559;
	mul.wide.s32 	%rd92, %r567, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r568, %r569, %r570, %r571}, [%rd93];
	or.b32  	%r572, %r557, 64;
	add.s32 	%r573, %r572, %r147;
	mad.lo.s32 	%r574, %r573, 12288, %r60;
	mul.hi.s32 	%r575, %r574, 715827883;
	shr.u32 	%r576, %r575, 31;
	shr.s32 	%r577, %r575, 26;
	add.s32 	%r578, %r577, %r576;
	setp.lt.s32 	%p210, %r574, 0;
	mul.lo.s32 	%r579, %r578, 402653184;
	setp.ne.s32 	%p211, %r579, %r574;
	and.pred  	%p212, %p210, %p211;
	selp.s32 	%r580, -1, 0, %p212;
	add.s32 	%r581, %r578, %r580;
	mad.lo.s32 	%r582, %r581, -402653184, %r574;
	mul.wide.s32 	%rd94, %r582, 4;
	add.s64 	%rd95, %rd2, %rd94;
	ld.global.v4.u32 	{%r583, %r584, %r585, %r586}, [%rd95];
	or.b32  	%r587, %r557, 128;
	add.s32 	%r588, %r587, %r147;
	mad.lo.s32 	%r589, %r588, 12288, %r60;
	mul.hi.s32 	%r590, %r589, 715827883;
	shr.u32 	%r591, %r590, 31;
	shr.s32 	%r592, %r590, 26;
	add.s32 	%r593, %r592, %r591;
	setp.lt.s32 	%p213, %r589, 0;
	mul.lo.s32 	%r594, %r593, 402653184;
	setp.ne.s32 	%p214, %r594, %r589;
	and.pred  	%p215, %p213, %p214;
	selp.s32 	%r595, -1, 0, %p215;
	add.s32 	%r596, %r593, %r595;
	mad.lo.s32 	%r597, %r596, -402653184, %r589;
	mul.wide.s32 	%rd96, %r597, 4;
	add.s64 	%rd97, %rd2, %rd96;
	ld.global.v4.u32 	{%r598, %r599, %r600, %r601}, [%rd97];
	or.b32  	%r602, %r557, 192;
	add.s32 	%r603, %r602, %r147;
	mad.lo.s32 	%r604, %r603, 12288, %r60;
	mul.hi.s32 	%r605, %r604, 715827883;
	shr.u32 	%r606, %r605, 31;
	shr.s32 	%r607, %r605, 26;
	add.s32 	%r608, %r607, %r606;
	setp.lt.s32 	%p216, %r604, 0;
	mul.lo.s32 	%r609, %r608, 402653184;
	setp.ne.s32 	%p217, %r609, %r604;
	and.pred  	%p218, %p216, %p217;
	selp.s32 	%r610, -1, 0, %p218;
	add.s32 	%r611, %r608, %r610;
	mad.lo.s32 	%r612, %r611, -402653184, %r604;
	mul.wide.s32 	%rd98, %r612, 4;
	add.s64 	%rd99, %rd2, %rd98;
	ld.global.v4.u32 	{%r613, %r614, %r615, %r616}, [%rd99];
	selp.b32 	%r617, %r570, %r568, %p206;
	shfl.sync.bfly.b32	%r618, %r617, 8, 31, -1;
	selp.b32 	%r492, %r568, %r618, %p206;
	selp.b32 	%r493, %r618, %r570, %p206;
	selp.b32 	%r619, %r571, %r569, %p206;
	shfl.sync.bfly.b32	%r620, %r619, 8, 31, -1;
	selp.b32 	%r500, %r569, %r620, %p206;
	selp.b32 	%r501, %r620, %r571, %p206;
	selp.b32 	%r621, %r585, %r583, %p206;
	shfl.sync.bfly.b32	%r622, %r621, 8, 31, -1;
	selp.b32 	%r508, %r583, %r622, %p206;
	selp.b32 	%r509, %r622, %r585, %p206;
	selp.b32 	%r623, %r586, %r584, %p206;
	shfl.sync.bfly.b32	%r624, %r623, 8, 31, -1;
	selp.b32 	%r516, %r584, %r624, %p206;
	selp.b32 	%r517, %r624, %r586, %p206;
	selp.b32 	%r625, %r600, %r598, %p206;
	shfl.sync.bfly.b32	%r626, %r625, 8, 31, -1;
	selp.b32 	%r524, %r598, %r626, %p206;
	selp.b32 	%r525, %r626, %r600, %p206;
	selp.b32 	%r627, %r601, %r599, %p206;
	shfl.sync.bfly.b32	%r628, %r627, 8, 31, -1;
	selp.b32 	%r532, %r599, %r628, %p206;
	selp.b32 	%r533, %r628, %r601, %p206;
	selp.b32 	%r629, %r615, %r613, %p206;
	shfl.sync.bfly.b32	%r630, %r629, 8, 31, -1;
	selp.b32 	%r540, %r613, %r630, %p206;
	selp.b32 	%r541, %r630, %r615, %p206;
	selp.b32 	%r631, %r616, %r614, %p206;
	shfl.sync.bfly.b32	%r632, %r631, 8, 31, -1;
	selp.b32 	%r548, %r614, %r632, %p206;
	selp.b32 	%r549, %r632, %r616, %p206;
	mov.u32 	%r550, 21520;
	// begin inline asm
	prmt.b32 %r491, %r492, %r493, %r550;
	// end inline asm
	mov.u32 	%r554, 30258;
	// begin inline asm
	prmt.b32 %r495, %r492, %r493, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r499, %r500, %r501, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r503, %r500, %r501, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r507, %r508, %r509, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r511, %r508, %r509, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r532, %r533, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r532, %r533, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r540, %r541, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r540, %r541, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r548, %r549, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r548, %r549, %r554;
	// end inline asm
	st.shared.u32 	[%rd6], %r491;
	st.shared.u32 	[%rd7+128], %r495;
	st.shared.u32 	[%rd7+4], %r499;
	st.shared.u32 	[%rd7+132], %r503;
	st.shared.u32 	[%rd8], %r507;
	st.shared.u32 	[%rd9+128], %r511;
	st.shared.u32 	[%rd9+4], %r515;
	st.shared.u32 	[%rd9+132], %r519;
	st.shared.u32 	[%rd10], %r523;
	st.shared.u32 	[%rd11+128], %r527;
	st.shared.u32 	[%rd11+4], %r531;
	st.shared.u32 	[%rd11+132], %r535;
	st.shared.u32 	[%rd12], %r539;
	st.shared.u32 	[%rd13+128], %r543;
	st.shared.u32 	[%rd13+4], %r547;
	st.shared.u32 	[%rd13+132], %r551;
	bar.sync 	0;
	mov.u64 	%rd157, %rd23;
	mov.u64 	%rd158, %rd22;
	mov.u32 	%r2573, %r2550;
	mov.u32 	%r2574, %r2561;
	mov.u32 	%r2575, %r2560;
	mov.u32 	%r2576, %r2559;
	mov.u32 	%r2577, %r2558;
$L__BB0_84:                             // %pass5679
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r2559, %r2572;
	mov.u32 	%r2558, %r2571;
	or.b32  	%r2429, %r2573, %r86;
	add.s32 	%r2430, %r2429, %r74;
	and.b32  	%r2431, %r2430, 1;
	neg.s32 	%r2432, %r2431;
	and.b32  	%r2433, %r2432, 520;
	bfe.u32 	%r2434, %r2430, 5, 3;
	mul.lo.s32 	%r2435, %r2434, 1057;
	or.b32  	%r2436, %r62, %r2433;
	add.s32 	%r2437, %r2436, %r2435;
	add.s32 	%r2438, %r2437, %r65;
	add.s32 	%r2439, %r2438, %r66;
	add.s32 	%r2440, %r2439, %r67;
	mul.wide.u32 	%rd100, %r2440, 4;
	add.s64 	%rd102, %rd41, %rd100;
	ld.shared.u32 	%r2560, [%rd102];
	add.s32 	%r2441, %r63, %r2433;
	add.s32 	%r2442, %r2441, %r2435;
	add.s32 	%r2443, %r2442, %r65;
	add.s32 	%r2444, %r2443, %r66;
	add.s32 	%r2445, %r2444, %r67;
	mul.wide.u32 	%rd103, %r2445, 4;
	add.s64 	%rd104, %rd41, %rd103;
	ld.shared.u32 	%r2561, [%rd104];
	// begin inline asm
	mov.b32 %r638, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r649, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r637, %r2560, -2004318072;
	mov.u32 	%r636, 983055;
	// begin inline asm
	lop3.b32 %r635, %r636, %r637, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r639, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r640, %r638, %r639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r643, %r635, %r640;
	// end inline asm
	mov.u32 	%r647, 15728880;
	// begin inline asm
	lop3.b32 %r646, %r647, %r637, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r650, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r651, %r649, %r650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r654, %r646, %r651;
	// end inline asm
	shr.u32 	%r659, %r637, 8;
	// begin inline asm
	lop3.b32 %r657, %r636, %r659, %r638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r661, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r662, %r638, %r661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r665, %r657, %r662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r668, %r647, %r659, %r649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r672, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r673, %r649, %r672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r676, %r668, %r673;
	// end inline asm
	// begin inline asm
	mov.b32 %r684, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r695, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r683, %r2561, -2004318072;
	// begin inline asm
	lop3.b32 %r681, %r636, %r683, %r684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r686, %r684, %r685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r689, %r681, %r686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r692, %r647, %r683, %r695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r696, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r697, %r695, %r696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r700, %r692, %r697;
	// end inline asm
	shr.u32 	%r705, %r683, 8;
	// begin inline asm
	lop3.b32 %r703, %r636, %r705, %r684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r707, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r708, %r684, %r707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r711, %r703, %r708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r714, %r647, %r705, %r695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r718, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r719, %r695, %r718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r722, %r714, %r719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r725, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r727, %r725, %r643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r730, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r732, %r730, %r654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r735, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r737, %r735, %r665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r740, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r742, %r740, %r676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r745, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r747, %r745, %r689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r750, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r752, %r750, %r700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r755, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r757, %r755, %r711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r760, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r762, %r760, %r722;
	// end inline asm
	// begin inline asm
	mov.b32 %r770, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r781, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r769, %r2577, -2004318072;
	// begin inline asm
	lop3.b32 %r767, %r636, %r769, %r770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r771, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r772, %r770, %r771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r775, %r767, %r772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r778, %r647, %r769, %r781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r782, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r783, %r781, %r782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r786, %r778, %r783;
	// end inline asm
	shr.u32 	%r791, %r769, 8;
	// begin inline asm
	lop3.b32 %r789, %r636, %r791, %r770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r793, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r794, %r770, %r793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r797, %r789, %r794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r800, %r647, %r791, %r781, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r804, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r805, %r781, %r804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r808, %r800, %r805;
	// end inline asm
	// begin inline asm
	mov.b32 %r816, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r827, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r815, %r2576, -2004318072;
	// begin inline asm
	lop3.b32 %r813, %r636, %r815, %r816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r817, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r818, %r816, %r817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r821, %r813, %r818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r824, %r647, %r815, %r827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r829, %r827, %r828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r832, %r824, %r829;
	// end inline asm
	shr.u32 	%r837, %r815, 8;
	// begin inline asm
	lop3.b32 %r835, %r636, %r837, %r816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r840, %r816, %r839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r843, %r835, %r840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r846, %r647, %r837, %r827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r827, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r857, %r187, %r775, %r727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r861, %r187, %r786, %r732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r865, %r187, %r797, %r737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r187, %r808, %r742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r873, %r187, %r821, %r747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r877, %r187, %r832, %r752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r187, %r843, %r757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r885, %r187, %r854, %r762;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r893, %r2575, -2004318072;
	// begin inline asm
	lop3.b32 %r891, %r636, %r893, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r902, %r647, %r893, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r905, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	shr.u32 	%r915, %r893, 8;
	// begin inline asm
	lop3.b32 %r913, %r636, %r915, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r924, %r647, %r915, %r905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r928, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r929, %r905, %r928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r932, %r924, %r929;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r939, %r2574, -2004318072;
	// begin inline asm
	lop3.b32 %r937, %r636, %r939, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r948, %r647, %r939, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r951, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	shr.u32 	%r961, %r939, 8;
	// begin inline asm
	lop3.b32 %r959, %r636, %r961, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r970, %r647, %r961, %r951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r974, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r975, %r951, %r974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r978, %r970, %r975;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r981, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r983, %r981, %r899, %r857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r987, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r989, %r987, %r910, %r861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r993, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r995, %r993, %r921, %r865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r999, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1001, %r999, %r932, %r869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1005, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1007, %r1005, %r945, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1011, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1013, %r1011, %r956, %r877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1017, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1019, %r1017, %r967, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1023, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1025, %r1023, %r978, %r885;
	// end inline asm
	// begin inline asm
	mov.b32 %r1034, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1045, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r1033, %r2558, -2004318072;
	// begin inline asm
	lop3.b32 %r1031, %r636, %r1033, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1035, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1036, %r1034, %r1035;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1039, %r1031, %r1036;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1042, %r647, %r1033, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1046, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1047, %r1045, %r1046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1050, %r1042, %r1047;
	// end inline asm
	shr.u32 	%r1055, %r1033, 8;
	// begin inline asm
	lop3.b32 %r1053, %r636, %r1055, %r1034, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1057, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1058, %r1034, %r1057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1061, %r1053, %r1058;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1064, %r647, %r1055, %r1045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1045, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	mov.b32 %r1080, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1091, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r1079, %r2559, -2004318072;
	// begin inline asm
	lop3.b32 %r1077, %r636, %r1079, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1081, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1082, %r1080, %r1081;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1085, %r1077, %r1082;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1088, %r647, %r1079, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1092, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1093, %r1091, %r1092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1096, %r1088, %r1093;
	// end inline asm
	shr.u32 	%r1101, %r1079, 8;
	// begin inline asm
	lop3.b32 %r1099, %r636, %r1101, %r1080, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1103, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1104, %r1080, %r1103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1107, %r1099, %r1104;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1110, %r647, %r1101, %r1091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1091, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1160, %r223, %r1039, %r983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1157, %r223, %r1050, %r989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1169, %r223, %r1061, %r995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1166, %r223, %r1072, %r1001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1178, %r223, %r1085, %r1007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1175, %r223, %r1096, %r1013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1187, %r223, %r1107, %r1019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1184, %r223, %r1118, %r1025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1153, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1155, %r1153, %r1157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1158, %r244, %r1160, %r1155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1162, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1164, %r1162, %r1166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1167, %r244, %r1169, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1171, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1173, %r1171, %r1175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1176, %r244, %r1178, %r1173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1180, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1182, %r1180, %r1184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1185, %r244, %r1187, %r1182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1189, %r247, %r1160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1192, %r244, %r1157, %r1189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r247, %r1169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1199, %r244, %r1166, %r1196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1203, %r247, %r1178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1206, %r244, %r1175, %r1203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1210, %r247, %r1187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1213, %r244, %r1184, %r1210;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1264, %r1261}, {%r304, %r310, %r307, %r313}, {%r1158, %r1192}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1273, %r1270}, {%r304, %r310, %r307, %r313}, {%r1167, %r1199}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1282, %r1279}, {%r304, %r310, %r307, %r313}, {%r1176, %r1206}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1291, %r1288}, {%r304, %r310, %r307, %r313}, {%r1185, %r1213}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r351, %r1264, %r1259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r1270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1271, %r351, %r1273, %r1268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r351, %r1282, %r1277;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1289, %r351, %r1291, %r1286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r354, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1296, %r351, %r1261, %r1293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1300, %r354, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1303, %r351, %r1270, %r1300;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r354, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r351, %r1279, %r1307;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r354, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1317, %r351, %r1288, %r1314;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1321, %r1322}, {%r391, %r397, %r394, %r400}, {%r1262, %r1296}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1331, %r1332}, {%r391, %r397, %r394, %r400}, {%r1271, %r1303}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1341, %r1342}, {%r391, %r397, %r394, %r400}, {%r1280, %r1310}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1351, %r1352}, {%r391, %r397, %r394, %r400}, {%r1289, %r1317}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1361, %r81, %r1321;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1364, %r81, %r1322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1367, %r81, %r1331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1370, %r81, %r1332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1373, %r81, %r1341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1376, %r81, %r1342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1379, %r81, %r1351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1382, %r81, %r1352;
	// end inline asm
	mov.u16 	%rs109, -14592;
	// begin inline asm
	mov.b32 %r1385, {%rs109, %rs109};
	// end inline asm
	mov.u16 	%rs111, 18176;
	// begin inline asm
	mov.b32 %r1386, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1387, %r1361, %r1385;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1390, %r1387, %r1386;
	// end inline asm
	// begin inline asm
	mov.b32 %r1393, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1395, %r1364, %r1393;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1398, %r1395, %r1394;
	// end inline asm
	// begin inline asm
	mov.b32 %r1401, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1402, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1403, %r1367, %r1401;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1406, %r1403, %r1402;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1410, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1411, %r1370, %r1409;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1414, %r1411, %r1410;
	// end inline asm
	// begin inline asm
	mov.b32 %r1417, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1418, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1419, %r1373, %r1417;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1422, %r1419, %r1418;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1426, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1427, %r1376, %r1425;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1430, %r1427, %r1426;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1435, %r1379, %r1433;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1438, %r1435, %r1434;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1443, %r1382, %r1441;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1446, %r1443, %r1442;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1452, %r1450;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1454, %r1390, %r1451;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1458, %r1452, %r1457;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1461, %r1398, %r1458;
	// end inline asm
	// begin inline asm
	mov.b32 %r1464, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1465, %r1452, %r1464;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1468, %r1406, %r1465;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1452, %r1471;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1475, %r1414, %r1472;
	// end inline asm
	mov.u32 	%r1481, 25152;
	// begin inline asm
	prmt.b32 %r1478, %r1454, %r1468, %r1481;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1482, %r1461, %r1475, %r1481;
	// end inline asm
	shl.b32 	%r1489, %r1482, 4;
	mov.u32 	%r1487, 252645135;
	// begin inline asm
	lop3.b32 %r1486, %r1487, %r1478, %r1489, 202;
	// end inline asm
	xor.b32  	%r2446, %r1486, -2004318072;
	// begin inline asm
	mov.b32 %r1493, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1493, %r1491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1495, %r1422, %r1492;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1493, %r1498;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1430, %r1499;
	// end inline asm
	// begin inline asm
	mov.b32 %r1505, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1493, %r1505;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1509, %r1438, %r1506;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1493, %r1512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1446, %r1513;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1519, %r1495, %r1509, %r1481;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1523, %r1502, %r1516, %r1481;
	// end inline asm
	shl.b32 	%r1530, %r1523, 4;
	// begin inline asm
	lop3.b32 %r1527, %r1487, %r1519, %r1530, 202;
	// end inline asm
	xor.b32  	%r2447, %r1527, -2004318072;
	st.shared.u32 	[%rd157], %r2446;
	st.shared.u32 	[%rd158], %r2447;
	ld.shared.u32 	%r2571, [%rd102];
	ld.shared.u32 	%r2572, [%rd104];
	// begin inline asm
	mov.b32 %r1536, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r1535, %r2571, -2004318072;
	// begin inline asm
	lop3.b32 %r1533, %r636, %r1535, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1536, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1544, %r647, %r1535, %r1547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1548, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1549, %r1547, %r1548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1552, %r1544, %r1549;
	// end inline asm
	shr.u32 	%r1557, %r1535, 8;
	// begin inline asm
	lop3.b32 %r1555, %r636, %r1557, %r1536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1560, %r1536, %r1559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1563, %r1555, %r1560;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1566, %r647, %r1557, %r1547, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1571, %r1547, %r1570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1574, %r1566, %r1571;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs248, %rs248};
	// end inline asm
	xor.b32  	%r1581, %r2572, -2004318072;
	// begin inline asm
	lop3.b32 %r1579, %r636, %r1581, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1582, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1590, %r647, %r1581, %r1593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1594, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1595, %r1593, %r1594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1598, %r1590, %r1595;
	// end inline asm
	shr.u32 	%r1603, %r1581, 8;
	// begin inline asm
	lop3.b32 %r1601, %r636, %r1603, %r1582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1606, %r1582, %r1605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1609, %r1601, %r1606;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1612, %r647, %r1603, %r1593, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1617, %r1593, %r1616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1620, %r1612, %r1617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1623, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1625, %r1623, %r1541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1628, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1630, %r1628, %r1552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1633, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1635, %r1633, %r1563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1638, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1640, %r1638, %r1574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1643, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1645, %r1643, %r1587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1648, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1650, %r1648, %r1598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1653, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1655, %r1653, %r1609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1658, %r241;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1660, %r1658, %r1620;
	// end inline asm
	// begin inline asm
	mov.b32 %r1668, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1679, {%rs248, %rs248};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1665, %r636, %r893, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1670, %r1668, %r1669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1673, %r1665, %r1670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1676, %r647, %r893, %r1679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1681, %r1679, %r1680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1684, %r1676, %r1681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1687, %r636, %r915, %r1668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1691, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1692, %r1668, %r1691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1695, %r1687, %r1692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1698, %r647, %r915, %r1679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1702, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1703, %r1679, %r1702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1706, %r1698, %r1703;
	// end inline asm
	// begin inline asm
	mov.b32 %r1714, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1725, {%rs248, %rs248};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1711, %r636, %r939, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1715, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1716, %r1714, %r1715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1719, %r1711, %r1716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1722, %r647, %r939, %r1725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1726, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1727, %r1725, %r1726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1730, %r1722, %r1727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1733, %r636, %r961, %r1714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1737, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1738, %r1714, %r1737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1741, %r1733, %r1738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1744, %r647, %r961, %r1725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1748, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1749, %r1725, %r1748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1752, %r1744, %r1749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1755, %r187, %r1673, %r1625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r187, %r1684, %r1630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r187, %r1695, %r1635;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r187, %r1706, %r1640;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r187, %r1719, %r1645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r187, %r1730, %r1650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r187, %r1741, %r1655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r187, %r1752, %r1660;
	// end inline asm
	// begin inline asm
	mov.b32 %r1792, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1803, {%rs248, %rs248};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1789, %r636, %r1033, %r1792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1793, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1794, %r1792, %r1793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1797, %r1789, %r1794;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1800, %r647, %r1033, %r1803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1804, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1805, %r1803, %r1804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1808, %r1800, %r1805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1811, %r636, %r1055, %r1792, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1815, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1816, %r1792, %r1815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1819, %r1811, %r1816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1822, %r647, %r1055, %r1803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1826, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1827, %r1803, %r1826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1830, %r1822, %r1827;
	// end inline asm
	// begin inline asm
	mov.b32 %r1838, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1849, {%rs248, %rs248};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1835, %r636, %r1079, %r1838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1839, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1840, %r1838, %r1839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1843, %r1835, %r1840;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1846, %r647, %r1079, %r1849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1850, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1851, %r1849, %r1850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1854, %r1846, %r1851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1857, %r636, %r1101, %r1838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1862, %r1838, %r1861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1865, %r1857, %r1862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1868, %r647, %r1101, %r1849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1872, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1873, %r1849, %r1872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1876, %r1868, %r1873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1879, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1881, %r1879, %r1797, %r1755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1885, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1887, %r1885, %r1808, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1891, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1893, %r1891, %r1819, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1897, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r1897, %r1830, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1903, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r1903, %r1843, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1909, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r1909, %r1854, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1915, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r1915, %r1865, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1921, %r205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r1921, %r1876, %r1783;
	// end inline asm
	// begin inline asm
	mov.b32 %r1932, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1943, {%rs248, %rs248};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1929, %r636, %r637, %r1932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1933, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1934, %r1932, %r1933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1937, %r1929, %r1934;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1940, %r647, %r637, %r1943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1944, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1945, %r1943, %r1944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1948, %r1940, %r1945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1951, %r636, %r659, %r1932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1955, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1956, %r1932, %r1955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1959, %r1951, %r1956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1962, %r647, %r659, %r1943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1966, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1967, %r1943, %r1966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1970, %r1962, %r1967;
	// end inline asm
	// begin inline asm
	mov.b32 %r1978, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r1989, {%rs248, %rs248};
	// end inline asm
	// begin inline asm
	lop3.b32 %r1975, %r636, %r683, %r1978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1979, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1980, %r1978, %r1979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1983, %r1975, %r1980;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1986, %r647, %r683, %r1989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1990, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1991, %r1989, %r1990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1994, %r1986, %r1991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1997, %r636, %r705, %r1978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2001, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2002, %r1978, %r2001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2005, %r1997, %r2002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2008, %r647, %r705, %r1989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2012, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2013, %r1989, %r2012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2016, %r2008, %r2013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2058, %r223, %r1937, %r1881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2055, %r223, %r1948, %r1887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2067, %r223, %r1959, %r1893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2064, %r223, %r1970, %r1899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2076, %r223, %r1983, %r1905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2073, %r223, %r1994, %r1911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2085, %r223, %r2005, %r1917;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2082, %r223, %r2016, %r1923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2051, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2053, %r2051, %r2055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2056, %r244, %r2058, %r2053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2060, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2062, %r2060, %r2064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2065, %r244, %r2067, %r2062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2069, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2071, %r2069, %r2073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2074, %r244, %r2076, %r2071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2078, %r247;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2080, %r2078, %r2082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2083, %r244, %r2085, %r2080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2087, %r247, %r2058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2090, %r244, %r2055, %r2087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2094, %r247, %r2067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2097, %r244, %r2064, %r2094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2101, %r247, %r2076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2104, %r244, %r2073, %r2101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2108, %r247, %r2085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2111, %r244, %r2082, %r2108;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2162, %r2159}, {%r304, %r310, %r307, %r313}, {%r2056, %r2090}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2171, %r2168}, {%r304, %r310, %r307, %r313}, {%r2065, %r2097}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2180, %r2177}, {%r304, %r310, %r307, %r313}, {%r2074, %r2104}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2189, %r2186}, {%r304, %r310, %r307, %r313}, {%r2083, %r2111}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2155, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2157, %r2155, %r2159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2160, %r351, %r2162, %r2157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2164, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2166, %r2164, %r2168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2169, %r351, %r2171, %r2166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2173, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2175, %r2173, %r2177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2178, %r351, %r2180, %r2175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2182, %r354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2184, %r2182, %r2186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2187, %r351, %r2189, %r2184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2191, %r354, %r2162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2194, %r351, %r2159, %r2191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2198, %r354, %r2171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2201, %r351, %r2168, %r2198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2205, %r354, %r2180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2208, %r351, %r2177, %r2205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2212, %r354, %r2189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2215, %r351, %r2186, %r2212;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2219, %r2220}, {%r391, %r397, %r394, %r400}, {%r2160, %r2194}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2229, %r2230}, {%r391, %r397, %r394, %r400}, {%r2169, %r2201}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2239, %r2240}, {%r391, %r397, %r394, %r400}, {%r2178, %r2208}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2249, %r2250}, {%r391, %r397, %r394, %r400}, {%r2187, %r2215}, {%r2550, %r2550};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2259, %r81, %r2219;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2262, %r81, %r2220;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2265, %r81, %r2229;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2268, %r81, %r2230;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2271, %r81, %r2239;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2274, %r81, %r2240;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2277, %r81, %r2249;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2280, %r81, %r2250;
	// end inline asm
	// begin inline asm
	mov.b32 %r2283, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2284, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2285, %r2259, %r2283;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2288, %r2285, %r2284;
	// end inline asm
	// begin inline asm
	mov.b32 %r2291, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2292, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2293, %r2262, %r2291;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2296, %r2293, %r2292;
	// end inline asm
	// begin inline asm
	mov.b32 %r2299, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2300, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2301, %r2265, %r2299;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2304, %r2301, %r2300;
	// end inline asm
	// begin inline asm
	mov.b32 %r2307, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2308, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2309, %r2268, %r2307;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2312, %r2309, %r2308;
	// end inline asm
	// begin inline asm
	mov.b32 %r2315, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2316, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2317, %r2271, %r2315;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2320, %r2317, %r2316;
	// end inline asm
	// begin inline asm
	mov.b32 %r2323, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2324, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2325, %r2274, %r2323;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2328, %r2325, %r2324;
	// end inline asm
	// begin inline asm
	mov.b32 %r2331, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2332, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2333, %r2277, %r2331;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2336, %r2333, %r2332;
	// end inline asm
	// begin inline asm
	mov.b32 %r2339, {%rs109, %rs109};
	// end inline asm
	// begin inline asm
	mov.b32 %r2340, {%rs111, %rs111};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2341, %r2280, %r2339;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2344, %r2341, %r2340;
	// end inline asm
	// begin inline asm
	mov.b32 %r2350, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r2348, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2349, %r2350, %r2348;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2288, %r2349;
	// end inline asm
	// begin inline asm
	mov.b32 %r2355, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2356, %r2350, %r2355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2296, %r2356;
	// end inline asm
	// begin inline asm
	mov.b32 %r2362, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2363, %r2350, %r2362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2366, %r2304, %r2363;
	// end inline asm
	// begin inline asm
	mov.b32 %r2369, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2370, %r2350, %r2369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2373, %r2312, %r2370;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2376, %r2352, %r2366, %r1481;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2380, %r2359, %r2373, %r1481;
	// end inline asm
	shl.b32 	%r2387, %r2380, 4;
	// begin inline asm
	lop3.b32 %r2384, %r1487, %r2376, %r2387, 202;
	// end inline asm
	xor.b32  	%r2448, %r2384, -2004318072;
	// begin inline asm
	mov.b32 %r2391, {%rs300, %rs300};
	// end inline asm
	// begin inline asm
	mov.b32 %r2389, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2390, %r2391, %r2389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2393, %r2320, %r2390;
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2397, %r2391, %r2396;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2400, %r2328, %r2397;
	// end inline asm
	// begin inline asm
	mov.b32 %r2403, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2404, %r2391, %r2403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2336, %r2404;
	// end inline asm
	// begin inline asm
	mov.b32 %r2410, {%rs308, %rs308};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2411, %r2391, %r2410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2414, %r2344, %r2411;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2417, %r2393, %r2407, %r1481;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2421, %r2400, %r2414, %r1481;
	// end inline asm
	shl.b32 	%r2428, %r2421, 4;
	// begin inline asm
	lop3.b32 %r2425, %r1487, %r2417, %r2428, 202;
	// end inline asm
	xor.b32  	%r2449, %r2425, -2004318072;
	st.shared.u32 	[%rd157], %r2448;
	st.shared.u32 	[%rd158], %r2449;
	add.s32 	%r2573, %r2573, 32;
	add.s64 	%rd158, %rd158, 4228;
	add.s64 	%rd157, %rd157, 4228;
	setp.eq.s32 	%p219, %r2573, 256;
	mov.u32 	%r2574, %r2561;
	mov.u32 	%r2575, %r2560;
	mov.u32 	%r2576, %r2559;
	mov.u32 	%r2577, %r2558;
	@%p219 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit10551
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	or.b32  	%r126, %r74, %r55;
	ld.shared.u32 	%r2455, [%rd14];
	ld.shared.u32 	%r2456, [%rd15+128];
	ld.shared.u32 	%r2463, [%rd15+4];
	ld.shared.u32 	%r2464, [%rd15+132];
	or.b32  	%r127, %r126, 64;
	ld.shared.u32 	%r2471, [%rd16];
	ld.shared.u32 	%r2472, [%rd17+128];
	ld.shared.u32 	%r2479, [%rd17+4];
	ld.shared.u32 	%r2480, [%rd17+132];
	ld.shared.u32 	%r2487, [%rd18];
	ld.shared.u32 	%r2488, [%rd19+128];
	ld.shared.u32 	%r2495, [%rd19+4];
	ld.shared.u32 	%r2496, [%rd19+132];
	ld.shared.u32 	%r2503, [%rd20];
	ld.shared.u32 	%r2504, [%rd21+128];
	ld.shared.u32 	%r2511, [%rd21+4];
	ld.shared.u32 	%r2512, [%rd21+132];
	// begin inline asm
	prmt.b32 %r2450, %r2455, %r2456, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2454, %r2455, %r2456, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2458, %r2463, %r2464, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2462, %r2463, %r2464, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2466, %r2471, %r2472, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2470, %r2471, %r2472, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2474, %r2479, %r2480, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2478, %r2479, %r2480, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2482, %r2487, %r2488, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2486, %r2487, %r2488, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2490, %r2495, %r2496, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2494, %r2495, %r2496, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2498, %r2503, %r2504, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2502, %r2503, %r2504, %r554;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2506, %r2511, %r2512, %r550;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2510, %r2511, %r2512, %r554;
	// end inline asm
	selp.b32 	%r2514, %r2454, %r2450, %p206;
	shfl.sync.bfly.b32	%r132, %r2514, 8, 31, -1;
	selp.b32 	%r2515, %r2462, %r2458, %p206;
	shfl.sync.bfly.b32	%r133, %r2515, 8, 31, -1;
	selp.b32 	%r2516, %r2470, %r2466, %p206;
	shfl.sync.bfly.b32	%r2517, %r2516, 8, 31, -1;
	selp.b32 	%r2518, %r2478, %r2474, %p206;
	shfl.sync.bfly.b32	%r2519, %r2518, 8, 31, -1;
	selp.b32 	%r2520, %r2486, %r2482, %p206;
	shfl.sync.bfly.b32	%r2521, %r2520, 8, 31, -1;
	selp.b32 	%r2522, %r2494, %r2490, %p206;
	shfl.sync.bfly.b32	%r2523, %r2522, 8, 31, -1;
	selp.b32 	%r2524, %r2502, %r2498, %p206;
	shfl.sync.bfly.b32	%r2525, %r2524, 8, 31, -1;
	selp.b32 	%r2526, %r2510, %r2506, %p206;
	shfl.sync.bfly.b32	%r2527, %r2526, 8, 31, -1;
	setp.lt.u32 	%p221, %r126, 96;
	shl.b32 	%r2551, %r126, 11;
	@%p221 bra 	$L__BB0_87;
// %bb.86:                              // %pass9882
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r2528, %r133, %r2462, %p206;
	selp.b32 	%r2529, %r2458, %r133, %p206;
	selp.b32 	%r2530, %r132, %r2454, %p206;
	selp.b32 	%r2531, %r2450, %r132, %p206;
	or.b32  	%r2533, %r2551, %r64;
	or.b32  	%r2534, %r2533, %r58;
	or.b32  	%r2535, %r2534, %r59;
	cvt.s64.s32 	%rd105, %r2535;
	add.s64 	%rd106, %rd105, %rd5;
	shr.u64 	%rd107, %rd106, 38;
	add.s64 	%rd108, %rd106, %rd107;
	shr.s64 	%rd109, %rd108, 26;
	setp.lt.s64 	%p223, %rd106, 0;
	and.b64  	%rd110, %rd108, -67108864;
	setp.ne.s64 	%p224, %rd110, %rd106;
	and.pred  	%p225, %p223, %p224;
	selp.u64 	%rd111, 1, 0, %p225;
	sub.s64 	%rd112, %rd111, %rd109;
	shl.b64 	%rd113, %rd112, 26;
	add.s64 	%rd114, %rd113, %rd106;
	shl.b64 	%rd115, %rd114, 2;
	add.s64 	%rd116, %rd3, %rd115;
	st.global.v4.u32 	[%rd116], {%r2531, %r2529, %r2530, %r2528};
$L__BB0_87:                             // %pass9946
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r138, %r2482, %r2521, %p206;
	selp.b32 	%r139, %r2521, %r2486, %p206;
	selp.b32 	%r140, %r2490, %r2523, %p206;
	selp.b32 	%r141, %r2523, %r2494, %p206;
	selp.b32 	%r142, %r2498, %r2525, %p206;
	selp.b32 	%r143, %r2525, %r2502, %p206;
	selp.b32 	%r144, %r2506, %r2527, %p206;
	selp.b32 	%r145, %r2527, %r2510, %p206;
	setp.lt.u32 	%p226, %r127, 96;
	@%p226 bra 	$L__BB0_89;
// %bb.88:                              // %pass10007
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r134, %r2466, %r2517, %p206;
	selp.b32 	%r135, %r2517, %r2470, %p206;
	selp.b32 	%r136, %r2474, %r2519, %p206;
	selp.b32 	%r137, %r2519, %r2478, %p206;
	shl.b32 	%r2536, %r127, 11;
	or.b32  	%r2537, %r2536, %r64;
	or.b32  	%r2538, %r2537, %r58;
	or.b32  	%r2539, %r2538, %r59;
	cvt.s64.s32 	%rd117, %r2539;
	add.s64 	%rd118, %rd117, %rd5;
	shr.u64 	%rd119, %rd118, 38;
	add.s64 	%rd120, %rd118, %rd119;
	shr.s64 	%rd121, %rd120, 26;
	setp.lt.s64 	%p227, %rd118, 0;
	and.b64  	%rd122, %rd120, -67108864;
	setp.ne.s64 	%p228, %rd122, %rd118;
	and.pred  	%p229, %p227, %p228;
	selp.u64 	%rd123, 1, 0, %p229;
	sub.s64 	%rd124, %rd123, %rd121;
	shl.b64 	%rd125, %rd124, 26;
	add.s64 	%rd126, %rd125, %rd118;
	shl.b64 	%rd127, %rd126, 2;
	add.s64 	%rd128, %rd3, %rd127;
	st.global.v4.u32 	[%rd128], {%r134, %r136, %r135, %r137};
	bra.uni 	$L__BB0_89;
$L__BB0_90:                             // %L23989
	st.global.u32 	[%rd4], %r2550;
	ret;
$L__BB0_7:                              // %L166
	mov.u32 	%r2549, 2;
	st.global.u32 	[%rd4], %r2549;
	mov.u64 	%rd155, exception2098;
	cvta.global.u64 	%rd156, %rd155;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd156;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r146;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r2548, 3;
	st.global.u32 	[%rd4], %r2548;
	mov.u64 	%rd153, exception2098;
	cvta.global.u64 	%rd154, %rd153;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd154;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r146;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd35, exception1;
	cvta.global.u64 	%rd36, %rd35;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd36;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd30;
	st.param.b32 	[param0+8], %r146;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
