// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan32(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception1907[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<200>;
	.reg .b16 	%rs<133>;
	.reg .b32 	%r<1630>;
	.reg .f32 	%f<794>;
	.reg .b64 	%rd<148>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r90, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd31, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r97, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r97, 33919;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L10
	// begin inline asm
	mov.u32 %r98, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p2, %r98, 33919;
	@%p2 bra 	$L__BB0_4;
	bra.uni 	$L__BB0_3;
$L__BB0_4:                              // %L26
	ld.param.u32 	%r91, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	ld.param.u64 	%rd4, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r99, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r100, %r99, %r4;
	or.b32  	%r101, %r100, %r2;
	mul.wide.u32 	%rd36, %r101, 4;
	add.s64 	%rd5, %rd4, %rd36;
	mov.u32 	%r102, 1;
	st.global.u32 	[%rd5], %r102;
	setp.gt.u32 	%p3, %r91, 65535;
	@%p3 bra 	$L__BB0_9;
// %bb.5:                               // %L131
	ld.param.u32 	%r92, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p4, %r92, %r91;
	setp.gt.s32 	%p5, %r92, 131071;
	or.pred  	%p6, %p4, %p5;
	@%p6 bra 	$L__BB0_9;
// %bb.6:                               // %L138
	ld.param.u32 	%r93, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r103, %r92, %r91;
	and.b32  	%r104, %r103, 255;
	setp.ne.s32 	%p7, %r104, 0;
	setp.gt.u32 	%p8, %r93, 2047;
	or.pred  	%p9, %p7, %p8;
	@%p9 bra 	$L__BB0_9;
// %bb.7:                               // %L149
	ld.param.u32 	%r94, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p10, %r94, %r93;
	setp.gt.s32 	%p11, %r94, 4095;
	or.pred  	%p12, %p10, %p11;
	@%p12 bra 	$L__BB0_9;
// %bb.8:                               // %L156
	sub.s32 	%r105, %r94, %r93;
	add.s32 	%r106, %r105, 3;
	and.b32  	%r107, %r106, 7;
	setp.eq.s32 	%p13, %r107, 0;
	@%p13 bra 	$L__BB0_10;
	bra.uni 	$L__BB0_9;
$L__BB0_10:                             // %L269
	ld.param.u32 	%r95, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p14, %r95, 0;
	@%p14 bra 	$L__BB0_12;
// %bb.11:                              // %L271
	ld.param.u32 	%r96, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p15, %r95, %r96;
	setp.lt.s32 	%p16, %r96, 65;
	and.pred  	%p17, %p15, %p16;
	@%p17 bra 	$L__BB0_13;
	bra.uni 	$L__BB0_12;
$L__BB0_13:                             // %pass141
	bfe.u32 	%r51, %r4, 1, 1;
	and.b32  	%r52, %r4, 1;
	bfe.u32 	%r53, %r4, 2, 1;
	shl.b32 	%r113, %r53, 1;
	shl.b32 	%r114, %r52, 2;
	shl.b32 	%r115, %r51, 3;
	or.b32  	%r116, %r114, %r115;
	or.b32  	%r117, %r113, %r116;
	shr.u32 	%r54, %r4, 4;
	or.b32  	%r55, %r54, %r117;
	shl.b32 	%r56, %r55, 1;
	or.b32  	%r118, %r56, -127;
	cvt.rn.f32.s32 	%f46, %r118;
	mov.f32 	%f47, 0f43810000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p23, %f44, 0f00000000;
	mov.f32 	%f793, 0f3F800000;
	mov.f32 	%f786, %f793;
	@%p23 bra 	$L__BB0_14;
	bra.uni 	$L__BB0_15;
$L__BB0_14:                             // %L583
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r126, %f74;
	and.b32  	%r127, %r126, -2147483648;
	or.b32  	%r128, %r127, 1056964608;
	mov.b32 	%f75, %r128;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p24, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p24;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p25, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p25;
	cvt.rzi.s32.f32 	%r129, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r130, %r129, 1;
	setp.eq.b32 	%p26, %r130, 1;
	selp.f32 	%f93, %f91, %f92, %p26;
	and.b32  	%r131, %r129, 2;
	setp.eq.s32 	%p27, %r131, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p27;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p28, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p28;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f786, %f99, %f100;
$L__BB0_15:                             // %L587
	or.b32  	%r132, %r56, -95;
	cvt.rn.f32.s32 	%f104, %r132;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p34, %f6, 0f00000000;
	mov.f32 	%f787, %f793;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L601
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r140, %f132;
	and.b32  	%r141, %r140, -2147483648;
	or.b32  	%r142, %r141, 1056964608;
	mov.b32 	%f133, %r142;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p35, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p35;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p36, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p36;
	cvt.rzi.s32.f32 	%r143, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r144, %r143, 1;
	setp.eq.b32 	%p37, %r144, 1;
	selp.f32 	%f151, %f149, %f150, %p37;
	and.b32  	%r145, %r143, 2;
	setp.eq.s32 	%p38, %r145, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p38;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p39, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p39;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f787, %f157, %f158;
$L__BB0_17:                             // %L605
	or.b32  	%r149, %r56, -63;
	cvt.rn.f32.s32 	%f163, %r149;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p45, %f11, 0f00000000;
	mov.f32 	%f788, %f793;
	@%p45 bra 	$L__BB0_19;
// %bb.18:                              // %L681
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r157, %f191;
	and.b32  	%r158, %r157, -2147483648;
	or.b32  	%r159, %r158, 1056964608;
	mov.b32 	%f192, %r159;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p46, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p46;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p47, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p47;
	cvt.rzi.s32.f32 	%r160, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r161, %r160, 1;
	setp.eq.b32 	%p48, %r161, 1;
	selp.f32 	%f210, %f208, %f209, %p48;
	and.b32  	%r162, %r160, 2;
	setp.eq.s32 	%p49, %r162, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p49;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p50, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p50;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f788, %f216, %f217;
$L__BB0_19:                             // %L685
	or.b32  	%r163, %r56, -31;
	cvt.rn.f32.s32 	%f221, %r163;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p56, %f17, 0f00000000;
	mov.f32 	%f789, %f793;
	@%p56 bra 	$L__BB0_21;
// %bb.20:                              // %L699
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r171, %f249;
	and.b32  	%r172, %r171, -2147483648;
	or.b32  	%r173, %r172, 1056964608;
	mov.b32 	%f250, %r173;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p57, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p57;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p58, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p58;
	cvt.rzi.s32.f32 	%r174, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r175, %r174, 1;
	setp.eq.b32 	%p59, %r175, 1;
	selp.f32 	%f268, %f266, %f267, %p59;
	and.b32  	%r176, %r174, 2;
	setp.eq.s32 	%p60, %r176, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p60;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p61, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p61;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f789, %f274, %f275;
$L__BB0_21:                             // %L703
	or.b32  	%r180, %r56, 1;
	cvt.rn.f32.s32 	%f280, %r180;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p67, %f22, 0f00000000;
	mov.f32 	%f790, %f793;
	@%p67 bra 	$L__BB0_23;
// %bb.22:                              // %L779
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r188, %f308;
	and.b32  	%r189, %r188, -2147483648;
	or.b32  	%r190, %r189, 1056964608;
	mov.b32 	%f309, %r190;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p68, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p68;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p69, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p69;
	cvt.rzi.s32.f32 	%r191, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r192, %r191, 1;
	setp.eq.b32 	%p70, %r192, 1;
	selp.f32 	%f327, %f325, %f326, %p70;
	and.b32  	%r193, %r191, 2;
	setp.eq.s32 	%p71, %r193, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p71;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p72, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p72;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f790, %f333, %f334;
$L__BB0_23:                             // %L783
	or.b32  	%r194, %r56, 33;
	cvt.rn.f32.s32 	%f338, %r194;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p78, %f28, 0f00000000;
	mov.f32 	%f791, %f793;
	@%p78 bra 	$L__BB0_25;
// %bb.24:                              // %L797
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r202, %f366;
	and.b32  	%r203, %r202, -2147483648;
	or.b32  	%r204, %r203, 1056964608;
	mov.b32 	%f367, %r204;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p79, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p79;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p80, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p80;
	cvt.rzi.s32.f32 	%r205, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r206, %r205, 1;
	setp.eq.b32 	%p81, %r206, 1;
	selp.f32 	%f385, %f383, %f384, %p81;
	and.b32  	%r207, %r205, 2;
	setp.eq.s32 	%p82, %r207, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p82;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p83, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p83;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f791, %f391, %f392;
$L__BB0_25:                             // %L801
	or.b32  	%r211, %r56, 65;
	cvt.rn.f32.s32 	%f397, %r211;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p89, %f33, 0f00000000;
	mov.f32 	%f792, %f793;
	@%p89 bra 	$L__BB0_27;
// %bb.26:                              // %L877
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r219, %f425;
	and.b32  	%r220, %r219, -2147483648;
	or.b32  	%r221, %r220, 1056964608;
	mov.b32 	%f426, %r221;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p90, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p90;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p91, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p91;
	cvt.rzi.s32.f32 	%r222, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r223, %r222, 1;
	setp.eq.b32 	%p92, %r223, 1;
	selp.f32 	%f444, %f442, %f443, %p92;
	and.b32  	%r224, %r222, 2;
	setp.eq.s32 	%p93, %r224, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p93;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p94, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p94;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f792, %f450, %f451;
$L__BB0_27:                             // %L881
	or.b32  	%r225, %r56, 97;
	cvt.rn.f32.s32 	%f455, %r225;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p100, %f39, 0f00000000;
	@%p100 bra 	$L__BB0_29;
// %bb.28:                              // %L895
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r233, %f483;
	and.b32  	%r234, %r233, -2147483648;
	or.b32  	%r235, %r234, 1056964608;
	mov.b32 	%f484, %r235;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p101, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p101;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p102, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p102;
	cvt.rzi.s32.f32 	%r236, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r237, %r236, 1;
	setp.eq.b32 	%p103, %r237, 1;
	selp.f32 	%f502, %f500, %f501, %p103;
	and.b32  	%r238, %r236, 2;
	setp.eq.s32 	%p104, %r238, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p104;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p105, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p105;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f793, %f508, %f509;
$L__BB0_29:                             // %L899
	setp.le.s32 	%p163, %r92, %r91;
	mov.u32 	%r1613, 0;
	@%p163 bra 	$L__BB0_38;
// %bb.30:                              // %L1483.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p18, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p29, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p40, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p51, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p62, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p73, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p18;
	selp.f32 	%f108, %f107, %f4, %p29;
	selp.f32 	%f167, %f166, %f9, %p40;
	selp.f32 	%f225, %f224, %f15, %p51;
	selp.f32 	%f284, %f283, %f20, %p62;
	selp.f32 	%f342, %f341, %f26, %p73;
	setp.gt.f32 	%p84, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p84;
	abs.f32 	%f457, %f37;
	mov.b32 	%r119, %f51;
	mov.b32 	%r133, %f109;
	mov.b32 	%r150, %f168;
	mov.b32 	%r164, %f226;
	mov.b32 	%r181, %f285;
	mov.b32 	%r195, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p95, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r120, %r119, -2147483648;
	and.b32  	%r134, %r133, -2147483648;
	and.b32  	%r151, %r150, -2147483648;
	and.b32  	%r165, %r164, -2147483648;
	and.b32  	%r182, %r181, -2147483648;
	and.b32  	%r196, %r195, -2147483648;
	mov.b32 	%r212, %f402;
	selp.f32 	%f459, %f458, %f37, %p95;
	or.b32  	%r121, %r120, 1056964608;
	or.b32  	%r135, %r134, 1056964608;
	or.b32  	%r152, %r151, 1056964608;
	or.b32  	%r166, %r165, 1056964608;
	or.b32  	%r183, %r182, 1056964608;
	or.b32  	%r197, %r196, 1056964608;
	and.b32  	%r213, %r212, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r121;
	mov.b32 	%f110, %r135;
	mov.b32 	%f169, %r152;
	mov.b32 	%f227, %r166;
	mov.b32 	%f286, %r183;
	mov.b32 	%f344, %r197;
	or.b32  	%r214, %r213, 1056964608;
	mov.b32 	%r226, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r214;
	and.b32  	%r227, %r226, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p19, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p30, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p41, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p52, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p63, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p74, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r228, %r227, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p19;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p20, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p30;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p31, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p41;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p42, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p52;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p53, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p63;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p64, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p74;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p75, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p85, %f406, 0f4B000000;
	mov.b32 	%f461, %r228;
	selp.f32 	%f58, %f57, %f56, %p20;
	selp.f32 	%f116, %f115, %f114, %p31;
	selp.f32 	%f175, %f174, %f173, %p42;
	selp.f32 	%f233, %f232, %f231, %p53;
	selp.f32 	%f292, %f291, %f290, %p64;
	selp.f32 	%f350, %f349, %f348, %p75;
	selp.f32 	%f407, %f402, %f405, %p85;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p86, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p86;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p96, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p96;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p97, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r122, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r136, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r153, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r167, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r184, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r198, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p97;
	add.s32 	%r123, %r122, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r137, %r136, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r154, %r153, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r168, %r167, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r185, %r184, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r199, %r198, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r215, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	shl.b32 	%r108, %r3, 3;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r124, %r123, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r138, %r137, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r155, %r154, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r169, %r168, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r186, %r185, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r200, %r199, 1;
	add.s32 	%r216, %r215, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	shl.b32 	%r43, %r4, 1;
	and.b32  	%r45, %r108, 992;
	and.b32  	%r48, %r4, 18;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p21, %r124, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p32, %r138, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p43, %r155, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p54, %r169, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p65, %r186, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p76, %r200, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r217, %r216, 1;
	cvt.rzi.s32.f32 	%r229, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	and.b32  	%r44, %r43, 8;
	shl.b32 	%r46, %r4, 2;
	or.b32  	%r109, %r48, %r45;
	selp.f32 	%f70, %f68, %f69, %p21;
	and.b32  	%r125, %r123, 2;
	selp.f32 	%f128, %f126, %f127, %p32;
	and.b32  	%r139, %r137, 2;
	selp.f32 	%f187, %f185, %f186, %p43;
	and.b32  	%r156, %r154, 2;
	selp.f32 	%f245, %f243, %f244, %p54;
	and.b32  	%r170, %r168, 2;
	selp.f32 	%f304, %f302, %f303, %p65;
	and.b32  	%r187, %r185, 2;
	selp.f32 	%f362, %f360, %f361, %p76;
	and.b32  	%r201, %r199, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p87, %r217, 1;
	add.s32 	%r230, %r229, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	and.b32  	%r47, %r46, 4;
	or.b32  	%r110, %r109, %r44;
	setp.eq.s32 	%p22, %r125, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p33, %r139, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p44, %r156, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p55, %r170, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p66, %r187, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p77, %r201, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p87;
	and.b32  	%r218, %r216, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r231, %r230, 1;
	or.b32  	%r111, %r110, %r47;
	selp.f32 	%f73, %f70, %f72, %p22;
	selp.f32 	%f131, %f128, %f130, %p33;
	selp.f32 	%f190, %f187, %f189, %p44;
	selp.f32 	%f248, %f245, %f247, %p55;
	selp.f32 	%f307, %f304, %f306, %p66;
	selp.f32 	%f365, %f362, %f364, %p77;
	setp.eq.s32 	%p88, %r218, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p98, %r231, 1;
	shr.u32 	%r112, %r111, 1;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p88;
	selp.f32 	%f479, %f477, %f478, %p98;
	and.b32  	%r232, %r230, 2;
	ld.param.u64 	%rd1, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd37, %r112, 4;
	mul.f32 	%f102, %f786, %f43;
	mov.f32 	%f103, 0f42000000;
	mul.f32 	%f160, %f787, %f5;
	mul.f32 	%f219, %f788, %f10;
	mul.f32 	%f277, %f789, %f16;
	mul.f32 	%f336, %f790, %f21;
	mul.f32 	%f394, %f791, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p99, %r232, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd38, %rd1, %rd37;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f792, %f32;
	selp.f32 	%f482, %f479, %f481, %p99;
	ld.param.u64 	%rd2, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z8upchan325Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r49, [%rd38];
	shr.u32 	%r50, %r4, 1;
	mov.b32 	%r148, %f162;
	mov.b32 	%r147, %f3;
	mov.b32 	%r179, %f279;
	mov.b32 	%r178, %f14;
	mov.b32 	%r210, %f396;
	mov.b32 	%r209, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r146, %r148, %r147;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r177, %r179, %r178;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r208, %r210, %r209;
	// end inline asm
	mul.f32 	%f510, %f793, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r241, %f512;
	mov.b32 	%r240, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r239, %r241, %r240;
	// end inline asm
	mul.lo.s32 	%r278, %r55, 31;
	and.b32  	%r279, %r278, 63;
	cvt.rn.f32.s32 	%f513, %r279;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r280, %f515;
	and.b32  	%r281, %r280, -2147483648;
	or.b32  	%r282, %r281, 1056964608;
	mov.b32 	%f516, %r282;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p106, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p106;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p107, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p107;
	cvt.rzi.s32.f32 	%r283, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r284, %r283, 1;
	setp.eq.b32 	%p108, %r284, 1;
	selp.f32 	%f534, %f532, %f533, %p108;
	selp.f32 	%f535, %f533, %f532, %p108;
	and.b32  	%r285, %r283, 2;
	setp.eq.s32 	%p109, %r285, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p109;
	add.s32 	%r286, %r283, 1;
	and.b32  	%r287, %r286, 2;
	setp.eq.s32 	%p110, %r287, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p110;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p111, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p111;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p112, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p112;
	add.s32 	%r288, %r278, 48;
	and.b32  	%r289, %r288, 63;
	cvt.rn.f32.s32 	%f547, %r289;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r290, %f549;
	and.b32  	%r291, %r290, -2147483648;
	or.b32  	%r292, %r291, 1056964608;
	mov.b32 	%f550, %r292;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p113, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p113;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p114, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p114;
	cvt.rzi.s32.f32 	%r293, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r294, %r293, 1;
	setp.eq.b32 	%p115, %r294, 1;
	selp.f32 	%f568, %f566, %f567, %p115;
	selp.f32 	%f569, %f567, %f566, %p115;
	and.b32  	%r295, %r293, 2;
	setp.eq.s32 	%p116, %r295, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p116;
	add.s32 	%r296, %r293, 1;
	and.b32  	%r297, %r296, 2;
	setp.eq.s32 	%p117, %r297, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p117;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p118, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p118;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p119, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p119;
	mov.b32 	%r243, %f546;
	mov.b32 	%r244, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r242, %r244, %r243;
	// end inline asm
	mov.b32 	%r246, %f543;
	mov.b32 	%r247, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r245, %r247, %r246;
	// end inline asm
	shr.u32 	%r11, %r4, 3;
	and.b32  	%r298, %r11, 2;
	and.b32  	%r299, %r50, 4;
	or.b32  	%r300, %r53, %r298;
	or.b32  	%r301, %r300, %r299;
	and.b32  	%r302, %r43, 6;
	mul.lo.s32 	%r303, %r301, %r302;
	and.b32  	%r304, %r303, 14;
	cvt.rn.f32.s32 	%f580, %r304;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r305, %f583;
	and.b32  	%r306, %r305, -2147483648;
	or.b32  	%r307, %r306, 1056964608;
	mov.b32 	%f584, %r307;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p120, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p120;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p121, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p121;
	cvt.rzi.s32.f32 	%r308, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r309, %r308, 1;
	setp.eq.b32 	%p122, %r309, 1;
	selp.f32 	%f602, %f600, %f601, %p122;
	selp.f32 	%f603, %f601, %f600, %p122;
	and.b32  	%r310, %r308, 2;
	setp.eq.s32 	%p123, %r310, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p123;
	add.s32 	%r311, %r308, 1;
	and.b32  	%r312, %r311, 2;
	setp.eq.s32 	%p124, %r312, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p124;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p125, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p125;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p126, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p126;
	or.b32  	%r313, %r43, 8;
	mul.lo.s32 	%r314, %r301, %r313;
	and.b32  	%r315, %r314, 14;
	cvt.rn.f32.s32 	%f614, %r315;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r316, %f616;
	and.b32  	%r317, %r316, -2147483648;
	or.b32  	%r318, %r317, 1056964608;
	mov.b32 	%f617, %r318;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p127, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p127;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p128, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p128;
	cvt.rzi.s32.f32 	%r319, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r320, %r319, 1;
	setp.eq.b32 	%p129, %r320, 1;
	selp.f32 	%f635, %f633, %f634, %p129;
	selp.f32 	%f636, %f634, %f633, %p129;
	and.b32  	%r321, %r319, 2;
	setp.eq.s32 	%p130, %r321, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p130;
	add.s32 	%r322, %r319, 1;
	and.b32  	%r323, %r322, 2;
	setp.eq.s32 	%p131, %r323, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p131;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p132, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p132;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p133, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p133;
	mov.b32 	%r249, %f613;
	mov.b32 	%r250, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r248, %r250, %r249;
	// end inline asm
	mov.b32 	%r252, %f610;
	mov.b32 	%r253, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r251, %r253, %r252;
	// end inline asm
	xor.b32  	%r255, %r252, -2147483648;
	xor.b32  	%r256, %r253, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r254, %r256, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r257, %r250, %r249;
	// end inline asm
	shl.b32 	%r324, %r51, 1;
	mul.lo.s32 	%r325, %r324, %r301;
	cvt.rn.f32.s32 	%f647, %r325;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r326, %f649;
	and.b32  	%r327, %r326, -2147483648;
	or.b32  	%r328, %r327, 1056964608;
	mov.b32 	%f650, %r328;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p134, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p134;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p135, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p135;
	cvt.rzi.s32.f32 	%r329, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r330, %r329, 1;
	setp.eq.b32 	%p136, %r330, 1;
	selp.f32 	%f668, %f666, %f667, %p136;
	selp.f32 	%f669, %f667, %f666, %p136;
	and.b32  	%r331, %r329, 2;
	setp.eq.s32 	%p137, %r331, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p137;
	add.s32 	%r332, %r329, 1;
	and.b32  	%r333, %r332, 2;
	setp.eq.s32 	%p138, %r333, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p138;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p139, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p139;
	mov.b32 	%r334, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p140, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p140;
	shl.b32 	%r335, %r301, 2;
	add.s32 	%r336, %r325, %r335;
	cvt.rn.f32.s32 	%f680, %r336;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r337, %f682;
	and.b32  	%r338, %r337, -2147483648;
	or.b32  	%r339, %r338, 1056964608;
	mov.b32 	%f683, %r339;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p141, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p141;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p142, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p142;
	cvt.rzi.s32.f32 	%r340, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r341, %r340, 1;
	setp.eq.b32 	%p143, %r341, 1;
	selp.f32 	%f701, %f699, %f700, %p143;
	selp.f32 	%f702, %f700, %f699, %p143;
	and.b32  	%r342, %r340, 2;
	setp.eq.s32 	%p144, %r342, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p144;
	add.s32 	%r343, %r340, 1;
	and.b32  	%r344, %r343, 2;
	setp.eq.s32 	%p145, %r344, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p145;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p146, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p146;
	mov.b32 	%r345, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p147, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p147;
	mov.b32 	%r262, %f712;
	mov.b32 	%r261, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r260, %r262, %r261;
	// end inline asm
	xor.b32  	%r265, %r345, -2147483648;
	xor.b32  	%r264, %r334, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r263, %r265, %r264;
	// end inline asm
	bfe.u32 	%r346, %r4, 3, 1;
	setp.eq.s32 	%p148, %r346, %r52;
	mul.lo.s32 	%r347, %r324, %r300;
	cvt.rn.f32.s32 	%f713, %r347;
	mov.f32 	%f714, 0f40800000;
	div.approx.f32 	%f715, %f713, %f714;
	add.f32 	%f716, %f715, %f715;
	mov.b32 	%r348, %f716;
	and.b32  	%r349, %r348, -2147483648;
	or.b32  	%r350, %r349, 1056964608;
	mov.b32 	%f717, %r350;
	add.f32 	%f718, %f716, %f717;
	cvt.rzi.f32.f32 	%f719, %f718;
	abs.f32 	%f720, %f716;
	setp.gt.f32 	%p149, %f720, 0f4B000000;
	selp.f32 	%f721, %f716, %f719, %p149;
	cvt.rzi.f32.f32 	%f722, %f716;
	setp.lt.f32 	%p150, %f720, 0f3F000000;
	selp.f32 	%f723, %f722, %f721, %p150;
	cvt.rzi.s32.f32 	%r351, %f723;
	fma.rn.f32 	%f724, %f723, 0fBF000000, %f715;
	mul.f32 	%f725, %f724, %f724;
	fma.rn.f32 	%f726, %f725, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f727, %f725, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f728, %f726, %f725, 0fC0A55DF6;
	fma.rn.f32 	%f729, %f727, %f725, 0f4081E0CF;
	fma.rn.f32 	%f730, %f725, %f724, 0f00000000;
	fma.rn.f32 	%f731, %f729, %f725, 0fC09DE9E6;
	fma.rn.f32 	%f732, %f728, %f730, 0f00000000;
	fma.rn.f32 	%f733, %f731, %f725, 0f3F800000;
	fma.rn.f32 	%f734, %f724, 0f40490FDB, %f732;
	and.b32  	%r352, %r351, 1;
	setp.eq.b32 	%p151, %r352, 1;
	selp.f32 	%f735, %f733, %f734, %p151;
	selp.f32 	%f736, %f734, %f733, %p151;
	and.b32  	%r353, %r351, 2;
	setp.eq.s32 	%p152, %r353, 0;
	neg.f32 	%f737, %f735;
	selp.f32 	%f738, %f735, %f737, %p152;
	add.s32 	%r354, %r351, 1;
	and.b32  	%r355, %r354, 2;
	setp.eq.s32 	%p153, %r355, 0;
	sub.f32 	%f739, %f71, %f736;
	selp.f32 	%f740, %f736, %f739, %p153;
	cvt.rzi.f32.f32 	%f741, %f715;
	setp.eq.f32 	%p154, %f741, %f715;
	mul.f32 	%f742, %f715, 0f00000000;
	selp.f32 	%f743, %f742, %f738, %p154;
	abs.f32 	%f744, %f715;
	setp.gt.f32 	%p155, %f744, 0f4B800000;
	add.f32 	%f745, %f743, 0f3F800000;
	selp.f32 	%f746, %f745, %f740, %p155;
	selp.f32 	%f747, 0f3F800000, 0f00000000, %p148;
	mul.f32 	%f748, %f746, %f747;
	neg.f32 	%f749, %f747;
	mul.f32 	%f750, %f743, %f749;
	shl.b32 	%r356, %r53, 2;
	add.s32 	%r357, %r347, %r356;
	and.b32  	%r358, %r357, 6;
	cvt.rn.f32.s32 	%f751, %r358;
	div.approx.f32 	%f752, %f751, %f714;
	add.f32 	%f753, %f752, %f752;
	mov.b32 	%r359, %f753;
	and.b32  	%r360, %r359, -2147483648;
	or.b32  	%r361, %r360, 1056964608;
	mov.b32 	%f754, %r361;
	add.f32 	%f755, %f753, %f754;
	cvt.rzi.f32.f32 	%f756, %f755;
	abs.f32 	%f757, %f753;
	setp.gt.f32 	%p156, %f757, 0f4B000000;
	selp.f32 	%f758, %f753, %f756, %p156;
	cvt.rzi.f32.f32 	%f759, %f753;
	setp.lt.f32 	%p157, %f757, 0f3F000000;
	selp.f32 	%f760, %f759, %f758, %p157;
	cvt.rzi.s32.f32 	%r362, %f760;
	fma.rn.f32 	%f761, %f760, 0fBF000000, %f752;
	mul.f32 	%f762, %f761, %f761;
	fma.rn.f32 	%f763, %f762, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f764, %f762, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f765, %f763, %f762, 0fC0A55DF6;
	fma.rn.f32 	%f766, %f764, %f762, 0f4081E0CF;
	fma.rn.f32 	%f767, %f762, %f761, 0f00000000;
	fma.rn.f32 	%f768, %f766, %f762, 0fC09DE9E6;
	fma.rn.f32 	%f769, %f765, %f767, 0f00000000;
	fma.rn.f32 	%f770, %f768, %f762, 0f3F800000;
	fma.rn.f32 	%f771, %f761, 0f40490FDB, %f769;
	and.b32  	%r363, %r362, 1;
	setp.eq.b32 	%p158, %r363, 1;
	selp.f32 	%f772, %f770, %f771, %p158;
	selp.f32 	%f773, %f771, %f770, %p158;
	and.b32  	%r364, %r362, 2;
	setp.eq.s32 	%p159, %r364, 0;
	neg.f32 	%f774, %f772;
	selp.f32 	%f775, %f772, %f774, %p159;
	add.s32 	%r365, %r362, 1;
	and.b32  	%r366, %r365, 2;
	setp.eq.s32 	%p160, %r366, 0;
	sub.f32 	%f776, %f71, %f773;
	selp.f32 	%f777, %f773, %f776, %p160;
	cvt.rzi.f32.f32 	%f778, %f752;
	setp.eq.f32 	%p161, %f778, %f752;
	mul.f32 	%f779, %f752, 0f00000000;
	selp.f32 	%f780, %f779, %f775, %p161;
	abs.f32 	%f781, %f752;
	setp.gt.f32 	%p162, %f781, 0f4B800000;
	add.f32 	%f782, %f780, 0f3F800000;
	selp.f32 	%f783, %f782, %f777, %p162;
	mul.f32 	%f784, %f783, %f747;
	mul.f32 	%f785, %f780, %f749;
	mov.b32 	%r267, %f748;
	mov.b32 	%r268, %f784;
	// begin inline asm
	cvt.rn.f16x2.f32 %r266, %r268, %r267;
	// end inline asm
	mov.b32 	%r273, %f750;
	xor.b32  	%r270, %r273, -2147483648;
	mov.b32 	%r274, %f785;
	xor.b32  	%r271, %r274, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r269, %r271, %r270;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r275, %r268, %r267;
	// end inline asm
	shl.b32 	%r368, %r91, 13;
	shl.b32 	%r369, %r95, 7;
	shl.b32 	%r370, %r3, 5;
	and.b32  	%r22, %r370, 64;
	and.b32  	%r371, %r46, 28;
	and.b32  	%r372, %r370, 32;
	and.b32  	%r373, %r43, 16;
	and.b32  	%r374, %r1, 7;
	or.b32  	%r23, %r374, %r373;
	and.b32  	%r24, %r50, 8;
	shl.b32 	%r375, %r1, 2;
	and.b32  	%r25, %r375, 32;
	and.b32  	%r376, %r370, 8128;
	or.b32  	%r377, %r376, %r371;
	or.b32  	%r378, %r377, %r372;
	or.b32  	%r379, %r378, %r368;
	add.s32 	%r26, %r379, %r369;
	and.b32  	%r27, %r4, 8;
	shl.b32 	%r380, %r4, 4;
	or.b32  	%r381, %r380, %r27;
	shr.u32 	%r382, %r381, 2;
	and.b32  	%r383, %r382, 30;
	shl.b32 	%r384, %r1, 1;
	shl.b32 	%r385, %r4, 3;
	and.b32  	%r386, %r385, 64;
	or.b32  	%r387, %r386, %r384;
	shr.u32 	%r388, %r387, 2;
	and.b32  	%r28, %r46, 12;
	and.b32  	%r29, %r50, 2;
	and.b32  	%r389, %r2, 32;
	or.b32  	%r30, %r388, %r389;
	or.b32  	%r390, %r48, %r47;
	or.b32  	%r391, %r390, %r44;
	shr.u32 	%r392, %r391, 1;
	mul.lo.s32 	%r393, %r392, 65;
	add.s32 	%r394, %r30, %r393;
	or.b32  	%r31, %r30, 8;
	add.s32 	%r395, %r31, %r393;
	shl.b32 	%r396, %r93, 17;
	add.s32 	%r397, %r396, -393216;
	or.b32  	%r32, %r372, %r371;
	or.b32  	%r398, %r45, %r11;
	and.b32  	%r399, %r375, 28;
	or.b32  	%r400, %r398, %r399;
	shl.b32 	%r33, %r400, 7;
	cvt.s64.s32 	%rd6, %r397;
	shr.u32 	%r401, %r1, 3;
	or.b32  	%r402, %r401, 2;
	or.b32  	%r403, %r401, 4;
	or.b32  	%r404, %r401, 6;
	mul.lo.s32 	%r405, %r54, 65;
	bfe.s32 	%r406, %r1, 2, 1;
	and.b32  	%r407, %r1, 4;
	setp.eq.s32 	%p164, %r407, 0;
	and.b32  	%r408, %r406, 130;
	bfe.s32 	%r409, %r1, 1, 1;
	and.b32  	%r410, %r1, 2;
	setp.eq.s32 	%p165, %r410, 0;
	and.b32  	%r411, %r409, 260;
	and.b32  	%r412, %r1, 1;
	neg.s32 	%r413, %r412;
	setp.eq.b32 	%p166, %r412, 1;
	and.b32  	%r414, %r413, 520;
	mul.lo.s32 	%r415, %r401, 1057;
	add.s32 	%r416, %r414, %r383;
	add.s32 	%r417, %r416, %r405;
	add.s32 	%r418, %r417, %r408;
	add.s32 	%r419, %r418, %r411;
	add.s32 	%r420, %r419, %r415;
	mul.wide.u32 	%rd39, %r420, 4;
	mov.u64 	%rd40, shmem;
	add.s64 	%rd7, %rd40, %rd39;
	cvt.u64.u32 	%rd41, %r415;
	selp.b64 	%rd42, 0, 260, %p165;
	selp.b64 	%rd43, 0, 130, %p164;
	cvt.u64.u32 	%rd44, %r405;
	selp.b64 	%rd45, 520, 0, %p166;
	cvt.u64.u32 	%rd46, %r383;
	add.s64 	%rd47, %rd46, %rd45;
	add.s64 	%rd48, %rd47, %rd44;
	add.s64 	%rd49, %rd48, %rd43;
	add.s64 	%rd50, %rd49, %rd42;
	add.s64 	%rd51, %rd50, %rd41;
	shl.b64 	%rd52, %rd51, 2;
	add.s64 	%rd8, %rd40, %rd52;
	mul.lo.s32 	%r421, %r402, 1057;
	add.s32 	%r422, %r419, %r421;
	mul.wide.u32 	%rd53, %r422, 4;
	add.s64 	%rd9, %rd40, %rd53;
	cvt.u64.u32 	%rd54, %r421;
	add.s64 	%rd55, %rd50, %rd54;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd10, %rd40, %rd56;
	mul.lo.s32 	%r423, %r403, 1057;
	add.s32 	%r424, %r419, %r423;
	mul.wide.u32 	%rd57, %r424, 4;
	add.s64 	%rd11, %rd40, %rd57;
	cvt.u64.u32 	%rd58, %r423;
	add.s64 	%rd59, %rd50, %rd58;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd12, %rd40, %rd60;
	mul.lo.s32 	%r425, %r404, 1057;
	add.s32 	%r426, %r419, %r425;
	mul.wide.u32 	%rd61, %r426, 4;
	add.s64 	%rd13, %rd40, %rd61;
	cvt.u64.u32 	%rd62, %r425;
	add.s64 	%rd63, %rd50, %rd62;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd40, %rd64;
	and.b32  	%r427, %r384, 14;
	or.b32  	%r428, %r427, %r54;
	mul.lo.s32 	%r429, %r428, 65;
	add.s32 	%r430, %r429, %r383;
	add.s32 	%r431, %r430, %r415;
	mul.wide.u32 	%rd65, %r431, 4;
	add.s64 	%rd15, %rd40, %rd65;
	cvt.u64.u32 	%rd66, %r429;
	add.s64 	%rd67, %rd46, %rd66;
	add.s64 	%rd68, %rd67, %rd41;
	shl.b64 	%rd69, %rd68, 2;
	add.s64 	%rd16, %rd40, %rd69;
	add.s32 	%r432, %r430, %r421;
	mul.wide.u32 	%rd70, %r432, 4;
	add.s64 	%rd17, %rd40, %rd70;
	add.s64 	%rd71, %rd67, %rd54;
	shl.b64 	%rd72, %rd71, 2;
	add.s64 	%rd18, %rd40, %rd72;
	add.s32 	%r433, %r430, %r423;
	mul.wide.u32 	%rd73, %r433, 4;
	add.s64 	%rd19, %rd40, %rd73;
	add.s64 	%rd74, %rd67, %rd58;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd20, %rd40, %rd75;
	add.s32 	%r434, %r430, %r425;
	mul.wide.u32 	%rd76, %r434, 4;
	add.s64 	%rd21, %rd40, %rd76;
	add.s64 	%rd77, %rd67, %rd62;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd22, %rd40, %rd78;
	mul.wide.u32 	%rd79, %r395, 4;
	add.s64 	%rd23, %rd40, %rd79;
	mul.wide.u32 	%rd80, %r394, 4;
	add.s64 	%rd24, %rd40, %rd80;
	mov.u16 	%rs104, 25600;
	mov.u16 	%rs106, 21504;
	mov.u16 	%rs114, 18432;
	mov.u16 	%rs128, -14592;
	mov.u32 	%r1615, %r1613;
	mov.u32 	%r1616, %r1613;
	mov.u32 	%r1617, %r1613;
	mov.u32 	%r1618, %r1613;
	mov.u32 	%r1625, %r1613;
	mov.u32 	%r1626, %r1613;
	mov.u32 	%r40, %r1613;
	bra.uni 	$L__BB0_31;
$L__BB0_37:                             // %pass9258
                                        //   in Loop: Header=BB0_31 Depth=1
	or.b32  	%r1604, %r1614, %r22;
	or.b32  	%r1605, %r1604, %r32;
	or.b32  	%r1606, %r1605, %r33;
	or.b32  	%r1607, %r1606, 524288;
	cvt.s64.s32 	%rd118, %r1607;
	add.s64 	%rd119, %rd118, %rd6;
	shr.u64 	%rd120, %rd119, 36;
	add.s64 	%rd121, %rd119, %rd120;
	shr.s64 	%rd122, %rd121, 28;
	setp.lt.s64 	%p191, %rd119, 0;
	and.b64  	%rd123, %rd121, -268435456;
	setp.ne.s64 	%p192, %rd123, %rd119;
	and.pred  	%p193, %p191, %p192;
	selp.u64 	%rd124, 1, 0, %p193;
	sub.s64 	%rd125, %rd124, %rd122;
	shl.b64 	%rd126, %rd125, 28;
	add.s64 	%rd127, %rd126, %rd119;
	shl.b64 	%rd128, %rd127, 2;
	add.s64 	%rd129, %rd3, %rd128;
	st.global.v4.u32 	[%rd129], {%r82, %r84, %r83, %r85};
	or.b32  	%r1608, %r1606, 786432;
	cvt.s64.s32 	%rd130, %r1608;
	add.s64 	%rd131, %rd130, %rd6;
	shr.u64 	%rd132, %rd131, 36;
	add.s64 	%rd133, %rd131, %rd132;
	shr.s64 	%rd134, %rd133, 28;
	setp.lt.s64 	%p194, %rd131, 0;
	and.b64  	%rd135, %rd133, -268435456;
	setp.ne.s64 	%p195, %rd135, %rd131;
	and.pred  	%p196, %p194, %p195;
	selp.u64 	%rd136, 1, 0, %p196;
	sub.s64 	%rd137, %rd136, %rd134;
	shl.b64 	%rd138, %rd137, 28;
	add.s64 	%rd139, %rd138, %rd131;
	shl.b64 	%rd140, %rd139, 2;
	add.s64 	%rd141, %rd3, %rd140;
	st.global.v4.u32 	[%rd141], {%r86, %r88, %r87, %r89};
	setp.ne.s32 	%p197, %r40, 65280;
	add.s32 	%r40, %r40, 256;
	add.s32 	%r1609, %r40, %r91;
	setp.lt.s32 	%p198, %r1609, %r92;
	and.pred  	%p199, %p197, %p198;
	@%p199 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_38;
$L__BB0_31:                             // %L1483
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_32 Depth 2
	setp.eq.s32 	%p167, %r27, 0;
	or.b32  	%r500, %r40, %r23;
	or.b32  	%r501, %r500, %r24;
	or.b32  	%r502, %r501, %r25;
	shl.b32 	%r503, %r502, 13;
	add.s32 	%r504, %r26, %r503;
	shr.s32 	%r505, %r504, 31;
	shr.u32 	%r506, %r505, 3;
	add.s32 	%r507, %r504, %r506;
	shr.s32 	%r508, %r507, 29;
	setp.lt.s32 	%p168, %r504, 0;
	and.b32  	%r509, %r507, -536870912;
	setp.ne.s32 	%p169, %r509, %r504;
	and.pred  	%p170, %p168, %p169;
	selp.u32 	%r510, 1, 0, %p170;
	sub.s32 	%r511, %r510, %r508;
	shl.b32 	%r512, %r511, 29;
	or.b32  	%r513, %r504, 1;
	add.s32 	%r514, %r513, %r512;
	mul.wide.s32 	%rd81, %r514, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r515, %r516, %r517, %r518}, [%rd82+-4];
	or.b32  	%r519, %r503, 524288;
	add.s32 	%r520, %r26, %r519;
	shr.s32 	%r521, %r520, 31;
	shr.u32 	%r522, %r521, 3;
	add.s32 	%r523, %r520, %r522;
	shr.s32 	%r524, %r523, 29;
	setp.lt.s32 	%p171, %r520, 0;
	and.b32  	%r525, %r523, -536870912;
	setp.ne.s32 	%p172, %r525, %r520;
	and.pred  	%p173, %p171, %p172;
	selp.u32 	%r526, 1, 0, %p173;
	sub.s32 	%r527, %r526, %r524;
	shl.b32 	%r528, %r527, 29;
	or.b32  	%r529, %r520, 1;
	add.s32 	%r530, %r529, %r528;
	mul.wide.s32 	%rd83, %r530, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r531, %r532, %r533, %r534}, [%rd84+-4];
	or.b32  	%r535, %r503, 1048576;
	add.s32 	%r536, %r26, %r535;
	shr.s32 	%r537, %r536, 31;
	shr.u32 	%r538, %r537, 3;
	add.s32 	%r539, %r536, %r538;
	shr.s32 	%r540, %r539, 29;
	setp.lt.s32 	%p174, %r536, 0;
	and.b32  	%r541, %r539, -536870912;
	setp.ne.s32 	%p175, %r541, %r536;
	and.pred  	%p176, %p174, %p175;
	selp.u32 	%r542, 1, 0, %p176;
	sub.s32 	%r543, %r542, %r540;
	shl.b32 	%r544, %r543, 29;
	or.b32  	%r545, %r536, 1;
	add.s32 	%r546, %r545, %r544;
	mul.wide.s32 	%rd85, %r546, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r547, %r548, %r549, %r550}, [%rd86+-4];
	or.b32  	%r551, %r503, 1572864;
	add.s32 	%r552, %r26, %r551;
	shr.s32 	%r553, %r552, 31;
	shr.u32 	%r554, %r553, 3;
	add.s32 	%r555, %r552, %r554;
	shr.s32 	%r556, %r555, 29;
	setp.lt.s32 	%p177, %r552, 0;
	and.b32  	%r557, %r555, -536870912;
	setp.ne.s32 	%p178, %r557, %r552;
	and.pred  	%p179, %p177, %p178;
	selp.u32 	%r558, 1, 0, %p179;
	sub.s32 	%r559, %r558, %r556;
	shl.b32 	%r560, %r559, 29;
	or.b32  	%r561, %r552, 1;
	add.s32 	%r562, %r561, %r560;
	mul.wide.s32 	%rd87, %r562, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r563, %r564, %r565, %r566}, [%rd88+-4];
	selp.b32 	%r567, %r517, %r515, %p167;
	shfl.sync.bfly.b32	%r568, %r567, 8, 31, -1;
	selp.b32 	%r436, %r515, %r568, %p167;
	selp.b32 	%r437, %r568, %r517, %p167;
	selp.b32 	%r569, %r518, %r516, %p167;
	shfl.sync.bfly.b32	%r570, %r569, 8, 31, -1;
	selp.b32 	%r444, %r516, %r570, %p167;
	selp.b32 	%r445, %r570, %r518, %p167;
	selp.b32 	%r571, %r533, %r531, %p167;
	shfl.sync.bfly.b32	%r572, %r571, 8, 31, -1;
	selp.b32 	%r452, %r531, %r572, %p167;
	selp.b32 	%r453, %r572, %r533, %p167;
	selp.b32 	%r573, %r534, %r532, %p167;
	shfl.sync.bfly.b32	%r574, %r573, 8, 31, -1;
	selp.b32 	%r460, %r532, %r574, %p167;
	selp.b32 	%r461, %r574, %r534, %p167;
	selp.b32 	%r575, %r549, %r547, %p167;
	shfl.sync.bfly.b32	%r576, %r575, 8, 31, -1;
	selp.b32 	%r468, %r547, %r576, %p167;
	selp.b32 	%r469, %r576, %r549, %p167;
	selp.b32 	%r577, %r550, %r548, %p167;
	shfl.sync.bfly.b32	%r578, %r577, 8, 31, -1;
	selp.b32 	%r476, %r548, %r578, %p167;
	selp.b32 	%r477, %r578, %r550, %p167;
	selp.b32 	%r579, %r565, %r563, %p167;
	shfl.sync.bfly.b32	%r580, %r579, 8, 31, -1;
	selp.b32 	%r484, %r563, %r580, %p167;
	selp.b32 	%r485, %r580, %r565, %p167;
	selp.b32 	%r581, %r566, %r564, %p167;
	shfl.sync.bfly.b32	%r582, %r581, 8, 31, -1;
	selp.b32 	%r492, %r564, %r582, %p167;
	selp.b32 	%r493, %r582, %r566, %p167;
	mov.u32 	%r494, 21520;
	// begin inline asm
	prmt.b32 %r435, %r436, %r437, %r494;
	// end inline asm
	mov.u32 	%r498, 30258;
	// begin inline asm
	prmt.b32 %r439, %r436, %r437, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r443, %r444, %r445, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r447, %r444, %r445, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r451, %r452, %r453, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r455, %r452, %r453, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r459, %r460, %r461, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r463, %r460, %r461, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r467, %r468, %r469, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r471, %r468, %r469, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r475, %r476, %r477, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r479, %r476, %r477, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r483, %r484, %r485, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r487, %r484, %r485, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r491, %r492, %r493, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r495, %r492, %r493, %r498;
	// end inline asm
	st.shared.u32 	[%rd7], %r435;
	st.shared.u32 	[%rd8+128], %r439;
	st.shared.u32 	[%rd8+4], %r443;
	st.shared.u32 	[%rd8+132], %r447;
	st.shared.u32 	[%rd9], %r451;
	st.shared.u32 	[%rd10+128], %r455;
	st.shared.u32 	[%rd10+4], %r459;
	st.shared.u32 	[%rd10+132], %r463;
	st.shared.u32 	[%rd11], %r467;
	st.shared.u32 	[%rd12+128], %r471;
	st.shared.u32 	[%rd12+4], %r475;
	st.shared.u32 	[%rd12+132], %r479;
	st.shared.u32 	[%rd13], %r483;
	st.shared.u32 	[%rd14+128], %r487;
	st.shared.u32 	[%rd14+4], %r491;
	st.shared.u32 	[%rd14+132], %r495;
	bar.sync 	0;
	or.b32  	%r583, %r40, %r28;
	or.b32  	%r584, %r583, %r29;
	or.b32  	%r41, %r584, %r54;
	shr.u32 	%r1622, %r41, 5;
	mov.u64 	%rd146, %rd24;
	mov.u64 	%rd147, %rd23;
	mov.u32 	%r1623, %r1618;
	mov.u32 	%r1624, %r1617;
	mov.u32 	%r1627, %r1613;
	mov.u32 	%r1628, %r1616;
	mov.u32 	%r1629, %r1615;
$L__BB0_32:                             // %pass5772
                                        //   Parent Loop BB0_31 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	mov.u32 	%r1618, %r1626;
	mov.u32 	%r1617, %r1625;
	mov.u32 	%r1615, %r1624;
	mov.u32 	%r1616, %r1623;
	add.s32 	%r1491, %r41, %r1627;
	bfe.s32 	%r1492, %r1491, 3, 1;
	and.b32  	%r1493, %r1492, 65;
	bfe.s32 	%r1494, %r1491, 2, 1;
	and.b32  	%r1495, %r1494, 130;
	bfe.s32 	%r1496, %r1491, 1, 1;
	and.b32  	%r1497, %r1496, 260;
	and.b32  	%r1498, %r1491, 1;
	neg.s32 	%r1499, %r1498;
	and.b32  	%r1500, %r1499, 520;
	and.b32  	%r1501, %r1622, 7;
	mul.lo.s32 	%r1502, %r1501, 1057;
	or.b32  	%r1503, %r30, %r1500;
	add.s32 	%r1504, %r1503, %r1493;
	add.s32 	%r1505, %r1504, %r1495;
	add.s32 	%r1506, %r1505, %r1497;
	add.s32 	%r1507, %r1506, %r1502;
	mul.wide.u32 	%rd89, %r1507, 4;
	add.s64 	%rd91, %rd40, %rd89;
	ld.shared.u32 	%r1625, [%rd91];
	// begin inline asm
	mov.b32 %r590, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r601, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r589, %r1625, -2004318072;
	mov.u32 	%r588, 983055;
	// begin inline asm
	lop3.b32 %r587, %r588, %r589, %r590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r591, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r592, %r590, %r591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r595, %r587, %r592;
	// end inline asm
	mov.u32 	%r599, 15728880;
	// begin inline asm
	lop3.b32 %r598, %r599, %r589, %r601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r602, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r603, %r601, %r602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r606, %r598, %r603;
	// end inline asm
	shr.u32 	%r611, %r589, 8;
	// begin inline asm
	lop3.b32 %r609, %r588, %r611, %r590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r613, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r614, %r590, %r613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r617, %r609, %r614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r620, %r599, %r611, %r601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r624, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r625, %r601, %r624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r628, %r620, %r625;
	// end inline asm
	// begin inline asm
	mov.b32 %r636, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r647, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r635, %r1629, -2004318072;
	// begin inline asm
	lop3.b32 %r633, %r588, %r635, %r636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r637, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r638, %r636, %r637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r641, %r633, %r638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r644, %r599, %r635, %r647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r648, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r649, %r647, %r648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r652, %r644, %r649;
	// end inline asm
	shr.u32 	%r657, %r635, 8;
	// begin inline asm
	lop3.b32 %r655, %r588, %r657, %r636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r659, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r660, %r636, %r659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r663, %r655, %r660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r666, %r599, %r657, %r647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r670, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r671, %r647, %r670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r674, %r666, %r671;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r679, %r146, %r641, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r685, %r146, %r652, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r691, %r146, %r663, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r697, %r146, %r674, %r1613;
	// end inline asm
	// begin inline asm
	mov.b32 %r706, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r717, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r705, %r1615, -2004318072;
	// begin inline asm
	lop3.b32 %r703, %r588, %r705, %r706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r707, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r708, %r706, %r707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r711, %r703, %r708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r714, %r599, %r705, %r717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r718, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r719, %r717, %r718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r722, %r714, %r719;
	// end inline asm
	shr.u32 	%r727, %r705, 8;
	// begin inline asm
	lop3.b32 %r725, %r588, %r727, %r706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r729, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r730, %r706, %r729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r733, %r725, %r730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r736, %r599, %r727, %r717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r740, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r741, %r717, %r740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r744, %r736, %r741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r747, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r749, %r747, %r711, %r679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r753, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r755, %r753, %r722, %r685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r759, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r761, %r759, %r733, %r691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r765, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r767, %r765, %r744, %r697;
	// end inline asm
	// begin inline asm
	mov.b32 %r776, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r787, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r775, %r1617, -2004318072;
	// begin inline asm
	lop3.b32 %r773, %r588, %r775, %r776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r777, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r778, %r776, %r777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r781, %r773, %r778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r784, %r599, %r775, %r787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r788, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r789, %r787, %r788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r792, %r784, %r789;
	// end inline asm
	shr.u32 	%r797, %r775, 8;
	// begin inline asm
	lop3.b32 %r795, %r588, %r797, %r776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r799, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r800, %r776, %r799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r803, %r795, %r800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r806, %r599, %r797, %r787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r810, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r811, %r787, %r810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r814, %r806, %r811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r819, %r208, %r781, %r749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r825, %r208, %r792, %r755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r831, %r208, %r803, %r761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r837, %r208, %r814, %r767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r841, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r872, %r841, %r595, %r819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r847, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r869, %r847, %r606, %r825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r853, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r881, %r853, %r617, %r831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r859, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r878, %r859, %r628, %r837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r865, %r245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r865, %r869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r870, %r242, %r872, %r867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r874, %r245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r876, %r874, %r878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r879, %r242, %r881, %r876;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r883, %r245, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r886, %r242, %r869, %r883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r890, %r245, %r881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r893, %r242, %r878, %r890;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r924, %r921}, {%r248, %r254, %r251, %r257}, {%r870, %r886}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r933, %r930}, {%r248, %r254, %r251, %r257}, {%r879, %r893}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r917, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r919, %r917, %r921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r922, %r260, %r924, %r919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r926, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r928, %r926, %r930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r931, %r260, %r933, %r928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r935, %r263, %r924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r938, %r260, %r921, %r935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r942, %r263, %r933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r945, %r260, %r930, %r942;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r949, %r950}, {%r266, %r272, %r269, %r275}, {%r922, %r938}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r959, %r960}, {%r266, %r272, %r269, %r275}, {%r931, %r945}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r969, %r49, %r949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r972, %r49, %r950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r975, %r49, %r959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r978, %r49, %r960;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs128, %rs128};
	// end inline asm
	mov.u16 	%rs51, 18176;
	// begin inline asm
	mov.b32 %r982, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r983, %r969, %r981;
	// end inline asm
	// begin inline asm
	min.f16x2 %r986, %r983, %r982;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r991, %r972, %r989;
	// end inline asm
	// begin inline asm
	min.f16x2 %r994, %r991, %r990;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r999, %r975, %r997;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1002, %r999, %r998;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1007, %r978, %r1005;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1010, %r1007, %r1006;
	// end inline asm
	mov.u16 	%rs65, 26112;
	// begin inline asm
	mov.b32 %r1016, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1014, %r986, %r1016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r994, %r1016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r1002, %r1016;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r1010, %r1016;
	// end inline asm
	mov.u32 	%r1029, 25152;
	// begin inline asm
	prmt.b32 %r1026, %r1014, %r1020, %r1029;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1030, %r1017, %r1023, %r1029;
	// end inline asm
	shl.b32 	%r1037, %r1030, 4;
	mov.u32 	%r1035, 252645135;
	// begin inline asm
	lop3.b32 %r1034, %r1035, %r1026, %r1037, 202;
	// end inline asm
	st.shared.u32 	[%rd146], %r1034;
	add.s32 	%r1508, %r31, %r1500;
	add.s32 	%r1509, %r1508, %r1493;
	add.s32 	%r1510, %r1509, %r1495;
	add.s32 	%r1511, %r1510, %r1497;
	add.s32 	%r1512, %r1511, %r1502;
	mul.wide.u32 	%rd92, %r1512, 4;
	add.s64 	%rd93, %rd40, %rd92;
	ld.shared.u32 	%r1626, [%rd93];
	// begin inline asm
	mov.b32 %r1043, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1042, %r1626, -2004318072;
	// begin inline asm
	lop3.b32 %r1040, %r588, %r1042, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1043, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1051, %r599, %r1042, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1054, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	shr.u32 	%r1064, %r1042, 8;
	// begin inline asm
	lop3.b32 %r1062, %r588, %r1064, %r1043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1066, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1067, %r1043, %r1066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1070, %r1062, %r1067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1073, %r599, %r1064, %r1054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1078, %r1054, %r1077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1081, %r1073, %r1078;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1088, %r1628, -2004318072;
	// begin inline asm
	lop3.b32 %r1086, %r588, %r1088, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1089, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1097, %r599, %r1088, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1100, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	shr.u32 	%r1110, %r1088, 8;
	// begin inline asm
	lop3.b32 %r1108, %r588, %r1110, %r1089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1112, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1113, %r1089, %r1112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1116, %r1108, %r1113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1119, %r599, %r1110, %r1100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1124, %r1100, %r1123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1127, %r1119, %r1124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1132, %r146, %r1094, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1138, %r146, %r1105, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1144, %r146, %r1116, %r1613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1150, %r146, %r1127, %r1613;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1158, %r1616, -2004318072;
	// begin inline asm
	lop3.b32 %r1156, %r588, %r1158, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1159, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1167, %r599, %r1158, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1172, %r1170, %r1171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1175, %r1167, %r1172;
	// end inline asm
	shr.u32 	%r1180, %r1158, 8;
	// begin inline asm
	lop3.b32 %r1178, %r588, %r1180, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1183, %r1159, %r1182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1186, %r1178, %r1183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1189, %r599, %r1180, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1170, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1200, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1202, %r1200, %r1164, %r1132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1206, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1208, %r1206, %r1175, %r1138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1214, %r1212, %r1186, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1218, %r177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1220, %r1218, %r1197, %r1150;
	// end inline asm
	// begin inline asm
	mov.b32 %r1229, {%rs104, %rs104};
	// end inline asm
	// begin inline asm
	mov.b32 %r1240, {%rs106, %rs106};
	// end inline asm
	xor.b32  	%r1228, %r1618, -2004318072;
	// begin inline asm
	lop3.b32 %r1226, %r588, %r1228, %r1229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1230, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1231, %r1229, %r1230;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1234, %r1226, %r1231;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1237, %r599, %r1228, %r1240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1241, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1242, %r1240, %r1241;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1245, %r1237, %r1242;
	// end inline asm
	shr.u32 	%r1250, %r1228, 8;
	// begin inline asm
	lop3.b32 %r1248, %r588, %r1250, %r1229, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1252, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1253, %r1229, %r1252;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1256, %r1248, %r1253;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1259, %r599, %r1250, %r1240, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1263, {%rs114, %rs114};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1264, %r1240, %r1263;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1267, %r1259, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1272, %r208, %r1234, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1278, %r208, %r1245, %r1208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1284, %r208, %r1256, %r1214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1290, %r208, %r1267, %r1220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1325, %r1294, %r1048, %r1272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r1300, %r1059, %r1278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1306, %r1070, %r1284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1331, %r1312, %r1081, %r1290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1318, %r245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1320, %r1318, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1323, %r242, %r1325, %r1320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1332, %r242, %r1334, %r1329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r245, %r1325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1339, %r242, %r1322, %r1336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1343, %r245, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1346, %r242, %r1331, %r1343;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1377, %r1374}, {%r248, %r254, %r251, %r257}, {%r1323, %r1339}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1386, %r1383}, {%r248, %r254, %r251, %r257}, {%r1332, %r1346}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1370, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1372, %r1370, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1375, %r260, %r1377, %r1372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1381, %r1379, %r1383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1384, %r260, %r1386, %r1381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1388, %r263, %r1377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1391, %r260, %r1374, %r1388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1395, %r263, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1398, %r260, %r1383, %r1395;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1402, %r1403}, {%r266, %r272, %r269, %r275}, {%r1375, %r1391}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1412, %r1413}, {%r266, %r272, %r269, %r275}, {%r1384, %r1398}, {%r1613, %r1613};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1422, %r49, %r1402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1425, %r49, %r1403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1428, %r49, %r1412;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1431, %r49, %r1413;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1436, %r1422, %r1434;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1439, %r1436, %r1435;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1444, %r1425, %r1442;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1447, %r1444, %r1443;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1452, %r1428, %r1450;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1455, %r1452, %r1451;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs128, %rs128};
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs51, %rs51};
	// end inline asm
	// begin inline asm
	max.f16x2 %r1460, %r1431, %r1458;
	// end inline asm
	// begin inline asm
	min.f16x2 %r1463, %r1460, %r1459;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs65, %rs65};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1439, %r1469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1447, %r1469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1455, %r1469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1476, %r1463, %r1469;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1479, %r1467, %r1473, %r1029;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1483, %r1470, %r1476, %r1029;
	// end inline asm
	shl.b32 	%r1490, %r1483, 4;
	// begin inline asm
	lop3.b32 %r1487, %r1035, %r1479, %r1490, 202;
	// end inline asm
	st.shared.u32 	[%rd147], %r1487;
	add.s32 	%r1627, %r1627, 32;
	add.s64 	%rd147, %rd147, 4228;
	add.s64 	%rd146, %rd146, 4228;
	add.s32 	%r1622, %r1622, 1;
	setp.eq.s32 	%p180, %r1627, 256;
	mov.u32 	%r1623, %r1618;
	mov.u32 	%r1624, %r1617;
	mov.u32 	%r1628, %r1616;
	mov.u32 	%r1629, %r1615;
	@%p180 bra 	$L__BB0_33;
	bra.uni 	$L__BB0_32;
$L__BB0_33:                             // %guard_exit9738
                                        //   in Loop: Header=BB0_31 Depth=1
	bar.sync 	0;
	or.b32  	%r70, %r40, %r25;
	ld.shared.u32 	%r1518, [%rd15];
	ld.shared.u32 	%r1519, [%rd16+128];
	ld.shared.u32 	%r1526, [%rd16+4];
	ld.shared.u32 	%r1527, [%rd16+132];
	or.b32  	%r71, %r70, 64;
	ld.shared.u32 	%r1534, [%rd17];
	ld.shared.u32 	%r1535, [%rd18+128];
	ld.shared.u32 	%r1542, [%rd18+4];
	ld.shared.u32 	%r1543, [%rd18+132];
	ld.shared.u32 	%r1550, [%rd19];
	ld.shared.u32 	%r1551, [%rd20+128];
	ld.shared.u32 	%r1558, [%rd20+4];
	ld.shared.u32 	%r1559, [%rd20+132];
	ld.shared.u32 	%r1566, [%rd21];
	ld.shared.u32 	%r1567, [%rd22+128];
	ld.shared.u32 	%r1574, [%rd22+4];
	ld.shared.u32 	%r1575, [%rd22+132];
	// begin inline asm
	prmt.b32 %r1513, %r1518, %r1519, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1517, %r1518, %r1519, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1521, %r1526, %r1527, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1525, %r1526, %r1527, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1529, %r1534, %r1535, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1533, %r1534, %r1535, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1537, %r1542, %r1543, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1541, %r1542, %r1543, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1545, %r1550, %r1551, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1549, %r1550, %r1551, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1553, %r1558, %r1559, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1557, %r1558, %r1559, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1561, %r1566, %r1567, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1565, %r1566, %r1567, %r498;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1569, %r1574, %r1575, %r494;
	// end inline asm
	// begin inline asm
	prmt.b32 %r1573, %r1574, %r1575, %r498;
	// end inline asm
	selp.b32 	%r1577, %r1517, %r1513, %p167;
	shfl.sync.bfly.b32	%r76, %r1577, 8, 31, -1;
	selp.b32 	%r1578, %r1525, %r1521, %p167;
	shfl.sync.bfly.b32	%r77, %r1578, 8, 31, -1;
	selp.b32 	%r1579, %r1533, %r1529, %p167;
	shfl.sync.bfly.b32	%r1580, %r1579, 8, 31, -1;
	selp.b32 	%r1581, %r1541, %r1537, %p167;
	shfl.sync.bfly.b32	%r1582, %r1581, 8, 31, -1;
	selp.b32 	%r1583, %r1549, %r1545, %p167;
	shfl.sync.bfly.b32	%r1584, %r1583, 8, 31, -1;
	selp.b32 	%r1585, %r1557, %r1553, %p167;
	shfl.sync.bfly.b32	%r1586, %r1585, 8, 31, -1;
	selp.b32 	%r1587, %r1565, %r1561, %p167;
	shfl.sync.bfly.b32	%r1588, %r1587, 8, 31, -1;
	selp.b32 	%r1589, %r1573, %r1569, %p167;
	shfl.sync.bfly.b32	%r1590, %r1589, 8, 31, -1;
	setp.lt.u32 	%p182, %r70, 96;
	shl.b32 	%r1614, %r70, 12;
	@%p182 bra 	$L__BB0_35;
// %bb.34:                              // %pass9008
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r1591, %r77, %r1525, %p167;
	selp.b32 	%r1592, %r1521, %r77, %p167;
	selp.b32 	%r1593, %r76, %r1517, %p167;
	selp.b32 	%r1594, %r1513, %r76, %p167;
	or.b32  	%r1596, %r1614, %r22;
	or.b32  	%r1597, %r1596, %r32;
	or.b32  	%r1598, %r1597, %r33;
	cvt.u64.u32 	%rd94, %r1598;
	add.s64 	%rd95, %rd94, %rd6;
	shr.u64 	%rd96, %rd95, 36;
	add.s64 	%rd97, %rd95, %rd96;
	shr.s64 	%rd98, %rd97, 28;
	setp.lt.s64 	%p184, %rd95, 0;
	and.b64  	%rd99, %rd97, -268435456;
	setp.ne.s64 	%p185, %rd99, %rd95;
	and.pred  	%p186, %p184, %p185;
	selp.u64 	%rd100, 1, 0, %p186;
	sub.s64 	%rd101, %rd100, %rd98;
	shl.b64 	%rd102, %rd101, 28;
	add.s64 	%rd103, %rd102, %rd95;
	shl.b64 	%rd104, %rd103, 2;
	add.s64 	%rd105, %rd3, %rd104;
	st.global.v4.u32 	[%rd105], {%r1594, %r1592, %r1593, %r1591};
$L__BB0_35:                             // %pass9101
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r82, %r1545, %r1584, %p167;
	selp.b32 	%r83, %r1584, %r1549, %p167;
	selp.b32 	%r84, %r1553, %r1586, %p167;
	selp.b32 	%r85, %r1586, %r1557, %p167;
	selp.b32 	%r86, %r1561, %r1588, %p167;
	selp.b32 	%r87, %r1588, %r1565, %p167;
	selp.b32 	%r88, %r1569, %r1590, %p167;
	selp.b32 	%r89, %r1590, %r1573, %p167;
	setp.lt.u32 	%p187, %r71, 96;
	@%p187 bra 	$L__BB0_37;
// %bb.36:                              // %pass9133
                                        //   in Loop: Header=BB0_31 Depth=1
	selp.b32 	%r78, %r1529, %r1580, %p167;
	selp.b32 	%r79, %r1580, %r1533, %p167;
	selp.b32 	%r80, %r1537, %r1582, %p167;
	selp.b32 	%r81, %r1582, %r1541, %p167;
	shl.b32 	%r1599, %r71, 12;
	or.b32  	%r1600, %r1599, %r22;
	or.b32  	%r1601, %r1600, %r32;
	or.b32  	%r1602, %r1601, %r33;
	cvt.s64.s32 	%rd106, %r1602;
	add.s64 	%rd107, %rd106, %rd6;
	shr.u64 	%rd108, %rd107, 36;
	add.s64 	%rd109, %rd107, %rd108;
	shr.s64 	%rd110, %rd109, 28;
	setp.lt.s64 	%p188, %rd107, 0;
	and.b64  	%rd111, %rd109, -268435456;
	setp.ne.s64 	%p189, %rd111, %rd107;
	and.pred  	%p190, %p188, %p189;
	selp.u64 	%rd112, 1, 0, %p190;
	sub.s64 	%rd113, %rd112, %rd110;
	shl.b64 	%rd114, %rd113, 28;
	add.s64 	%rd115, %rd114, %rd107;
	shl.b64 	%rd116, %rd115, 2;
	add.s64 	%rd117, %rd3, %rd116;
	st.global.v4.u32 	[%rd117], {%r78, %r80, %r79, %r81};
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %L21242
	st.global.u32 	[%rd5], %r1613;
	ret;
$L__BB0_9:                              // %L177
	mov.u32 	%r1612, 2;
	st.global.u32 	[%rd5], %r1612;
	mov.u64 	%rd144, exception1907;
	cvta.global.u64 	%rd145, %rd144;
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd145;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 6
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r90;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 7
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_12:                             // %L283
	mov.u32 	%r1611, 3;
	st.global.u32 	[%rd5], %r1611;
	mov.u64 	%rd142, exception1907;
	cvta.global.u64 	%rd143, %rd142;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd143;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r90;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd32, exception1;
	cvta.global.u64 	%rd33, %rd32;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd33;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r90;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_3:                              // %L24
	mov.u64 	%rd34, exception1;
	cvta.global.u64 	%rd35, %rd34;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd35;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd31;
	st.param.b32 	[param0+8], %r90;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
