// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_11290
(
	.param .align 8 .b8 julia_power_by_squaring_11290_param_0[16],
	.param .b64 julia_power_by_squaring_11290_param_1,
	.param .b64 julia_power_by_squaring_11290_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3324[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<231>;
	.reg .b16 	%rs<1201>;
	.reg .b32 	%r<7981>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<156>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r156, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r161, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r161, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L19
	ld.param.u64 	%rd37, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r157, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r162, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r163, %r3, %r4;
	or.b32  	%r164, %r163, %r162;
	mul.wide.u32 	%rd43, %r164, 4;
	add.s64 	%rd4, %rd37, %rd43;
	mov.u32 	%r165, 1;
	st.global.u32 	[%rd4], %r165;
	setp.lt.s32 	%p2, %r157, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L114
	ld.param.u32 	%r158, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r158, %r157;
	setp.gt.s32 	%p4, %r158, 65536;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L124
	ld.param.u32 	%r159, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r166, %r158, %r157;
	and.b32  	%r167, %r166, 255;
	setp.ne.s32 	%p6, %r167, 0;
	setp.lt.s32 	%p7, %r159, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L130
	ld.param.u32 	%r160, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r160, %r159;
	setp.gt.s32 	%p10, %r160, 1024;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L140
	not.b32 	%r168, %r159;
	add.s32 	%r169, %r168, %r160;
	and.b32  	%r170, %r169, 3;
	setp.eq.s32 	%p12, %r170, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass134
	shl.b32 	%r95, %r4, 2;
	and.b32  	%r96, %r95, 32;
	shl.b32 	%r97, %r4, 1;
	and.b32  	%r98, %r97, 8;
	and.b32  	%r99, %r4, 16;
	shl.b32 	%r101, %r1, 6;
	and.b32  	%r102, %r4, 2;
	or.b32  	%r171, %r101, %r99;
	or.b32  	%r172, %r171, %r102;
	or.b32  	%r173, %r172, %r98;
	bfe.u32 	%r105, %r4, 2, 1;
	shr.u32 	%r106, %r4, 4;
	shl.b32 	%r178, %r106, 1;
	shl.b32 	%r179, %r105, 2;
	shl.b32 	%r180, %r4, 3;
	and.b32  	%r181, %r180, 24;
	or.b32  	%r182, %r179, %r181;
	or.b32  	%r183, %r178, %r182;
	bfe.u32 	%r184, %r4, 3, 1;
	or.b32  	%r108, %r184, %r183;
	or.b32  	%r109, %r108, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r108;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p18, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p18 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L484
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_10:                             // %L487
	and.b32  	%r100, %r95, 4;
	or.b32  	%r174, %r173, %r96;
	cvt.rn.f32.s32 	%f181, %r109;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p24, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p24 bra 	$L__BB0_12;
// %bb.11:                              // %L504
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_12:                             // %L507
	or.b32  	%r175, %r174, %r100;
	or.b32  	%r202, %r108, 64;
	or.b32  	%r6, %r108, 96;
	cvt.rn.f32.s32 	%f216, %r202;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p30, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p30 bra 	$L__BB0_14;
// %bb.13:                              // %L586
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_14:                             // %L589
	shr.u32 	%r176, %r175, 1;
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p36, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p36 bra 	$L__BB0_16;
// %bb.15:                              // %L606
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_16:                             // %L609
	cvt.u16.u32 	%rs1, %r176;
	or.b32  	%r220, %r108, 128;
	or.b32  	%r8, %r108, 160;
	cvt.rn.f32.s32 	%f285, %r220;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p42, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p42 bra 	$L__BB0_18;
// %bb.17:                              // %L688
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_18:                             // %L691
	mul.hi.u16 	%rs2, %rs1, -21845;
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p48, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p48 bra 	$L__BB0_20;
// %bb.19:                              // %L708
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_20:                             // %L711
	shr.u16 	%rs3, %rs2, 13;
	or.b32  	%r238, %r108, 192;
	or.b32  	%r10, %r108, 224;
	cvt.rn.f32.s32 	%f354, %r238;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p54, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p54 bra 	$L__BB0_22;
// %bb.21:                              // %L790
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_22:                             // %L793
	mul.lo.s16 	%rs4, %rs3, 12288;
	shr.u32 	%r104, %r4, 1;
	shr.u32 	%r107, %r4, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p60, %f32, 0f00000000;
	@%p60 bra 	$L__BB0_24;
// %bb.23:                              // %L810
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_24:                             // %L813
	sub.s16 	%rs5, %rs1, %rs4;
	and.b32  	%r282, %r4, 3;
	and.b32  	%r283, %r107, 2;
	and.b32  	%r284, %r104, 4;
	or.b32  	%r285, %r105, %r283;
	or.b32  	%r14, %r285, %r284;
	mul.lo.s32 	%r286, %r282, %r14;
	shl.b32 	%r287, %r286, 1;
	neg.s32 	%r288, %r287;
	cvt.rn.f32.s32 	%f35, %r288;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p75, %f830, 0f40000000;
	setp.gtu.f32 	%p229, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p75 bra 	$L__BB0_94;
// %bb.25:
	@%p229 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_26;
$L__BB0_90:
	mov.b32 	%r111, %f830;
	and.b32  	%r289, %r111, 8388607;
	or.b32  	%r7975, %r289, 1065353216;
	mov.b32 	%f821, %r7975;
	add.s32 	%r290, %r111, -1073741824;
	and.b32  	%r7976, %r290, -8388608;
	setp.eq.s32 	%p82, %r7976, 0;
	@%p82 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r291, %r7976, 192937984;
	add.s32 	%r292, %r7975, %r291;
	mov.b32 	%f501, %r292;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r7976, %r7976, %r291;
	mov.b32 	%r7975, %f821;
	setp.ne.s32 	%p83, %r7976, 0;
	setp.ne.s32 	%p84, %r7975, 0;
	and.pred  	%p85, %p83, %p84;
	@%p85 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p86, %r111, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p86;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_94;
$L__BB0_26:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r110, %f89;
	setp.lt.u32 	%p77, %r110, 1073741824;
	@%p77 bra 	$L__BB0_89;
// %bb.27:
	setp.lt.u32 	%p78, %r110, -2147483647;
	@%p78 bra 	$L__BB0_87;
// %bb.28:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p81, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p81;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p79, %f89, 0f40800000;
	@%p79 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p80, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p80;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i928
	cvt.u32.u16 	%r177, %rs5;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p87, %f510, 0f7F800000;
	mov.b32 	%r293, %f36;
	and.b32  	%r118, %r293, -2147483648;
	@%p87 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r294, %f822;
	or.b32  	%r295, %r118, %r294;
	mov.b32 	%f822, %r295;
$L__BB0_96:                             // %__nv_fmodf.exit929
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd44, %r177, 4;
	and.b32  	%r304, %r97, 6;
	mov.u32 	%r305, -8;
	sub.s32 	%r306, %r305, %r304;
	mul.lo.s32 	%r307, %r14, %r306;
	cvt.rn.f32.s32 	%f105, %r307;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p95, %f818, 0f40000000;
	setp.gtu.f32 	%p230, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p95 bra 	$L__BB0_40;
// %bb.29:
	@%p230 bra 	$L__BB0_36;
	bra.uni 	$L__BB0_30;
$L__BB0_36:
	mov.b32 	%r16, %f818;
	and.b32  	%r308, %r16, 8388607;
	or.b32  	%r7943, %r308, 1065353216;
	mov.b32 	%f809, %r7943;
	add.s32 	%r309, %r16, -1073741824;
	and.b32  	%r7944, %r309, -8388608;
	setp.eq.s32 	%p102, %r7944, 0;
	@%p102 bra 	$L__BB0_39;
// %bb.37:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_38:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r310, %r7944, 192937984;
	add.s32 	%r311, %r7943, %r310;
	mov.b32 	%f552, %r311;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7944, %r7944, %r310;
	mov.b32 	%r7943, %f809;
	setp.ne.s32 	%p103, %r7944, 0;
	setp.ne.s32 	%p104, %r7943, 0;
	and.pred  	%p105, %p103, %p104;
	@%p105 bra 	$L__BB0_38;
$L__BB0_39:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p106, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p106;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_40;
$L__BB0_30:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p97, %r15, 1073741824;
	@%p97 bra 	$L__BB0_35;
// %bb.31:
	setp.lt.u32 	%p98, %r15, -2147483647;
	@%p98 bra 	$L__BB0_33;
// %bb.32:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p101, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p101;
	bra.uni 	$L__BB0_35;
$L__BB0_33:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p99, %f39, 0f40800000;
	@%p99 bra 	$L__BB0_35;
// %bb.34:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p100, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p100;
$L__BB0_35:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_40:                             // %__internal_fmodf_kernel.exit.i
	add.s64 	%rd45, %rd1, %rd44;
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p107, %f561, 0f7F800000;
	mov.b32 	%r312, %f106;
	and.b32  	%r23, %r312, -2147483648;
	@%p107 bra 	$L__BB0_42;
// %bb.41:
	mov.b32 	%r313, %f810;
	or.b32  	%r314, %r23, %r313;
	mov.b32 	%f810, %r314;
$L__BB0_42:                             // %__nv_fmodf.exit
	ld.global.u32 	%r103, [%rd45];
	mov.u64 	%rd46, 2;
	mov.u64 	%rd47, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r156;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd46;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd47;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11290, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd48, [retval0+0];
	} // callseq 2
	cvt.rn.f32.s64 	%f594, %rd48;
	div.approx.f32 	%f53, %f35, %f594;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p115, %f826, 0f40000000;
	@%p115 bra 	$L__BB0_104;
// %bb.43:
	setp.gtu.f32 	%p116, %f826, 0f4B800000;
	@%p116 bra 	$L__BB0_100;
	bra.uni 	$L__BB0_44;
$L__BB0_100:
	mov.b32 	%r120, %f826;
	and.b32  	%r335, %r120, 8388607;
	or.b32  	%r7977, %r335, 1065353216;
	mov.b32 	%f825, %r7977;
	add.s32 	%r336, %r120, -1073741824;
	and.b32  	%r7978, %r336, -8388608;
	setp.eq.s32 	%p122, %r7978, 0;
	@%p122 bra 	$L__BB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_102:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r337, %r7978, 192937984;
	add.s32 	%r338, %r7977, %r337;
	mov.b32 	%f605, %r338;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r7978, %r7978, %r337;
	mov.b32 	%r7977, %f825;
	setp.ne.s32 	%p123, %r7978, 0;
	setp.ne.s32 	%p124, %r7977, 0;
	and.pred  	%p125, %p123, %p124;
	@%p125 bra 	$L__BB0_102;
$L__BB0_103:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p126, %r120, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p126;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_104;
$L__BB0_44:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r119, %f109;
	setp.lt.u32 	%p117, %r119, 1073741824;
	@%p117 bra 	$L__BB0_99;
// %bb.45:
	setp.lt.u32 	%p118, %r119, -2147483647;
	@%p118 bra 	$L__BB0_97;
// %bb.46:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p121, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p121;
	bra.uni 	$L__BB0_99;
$L__BB0_97:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p119, %f109, 0f40800000;
	@%p119 bra 	$L__BB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p120, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p120;
$L__BB0_99:                             // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_104:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p127, %f614, 0f7F800000;
	@%p127 bra 	$L__BB0_106;
// %bb.105:
	mov.b32 	%r339, %f53;
	and.b32  	%r340, %r339, -2147483648;
	mov.b32 	%r341, %f826;
	or.b32  	%r342, %r340, %r341;
	mov.b32 	%f826, %r342;
$L__BB0_106:                            // %__nv_fmodf.exit960
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r156;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd46;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd47;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_11290, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd52, [retval0+0];
	} // callseq 3
	cvt.rn.f32.s64 	%f645, %rd52;
	div.approx.f32 	%f125, %f105, %f645;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p135, %f814, 0f40000000;
	@%p135 bra 	$L__BB0_58;
// %bb.47:
	setp.gtu.f32 	%p136, %f814, 0f4B800000;
	@%p136 bra 	$L__BB0_54;
	bra.uni 	$L__BB0_48;
$L__BB0_54:
	mov.b32 	%r29, %f814;
	and.b32  	%r351, %r29, 8388607;
	or.b32  	%r7945, %r351, 1065353216;
	mov.b32 	%f813, %r7945;
	add.s32 	%r352, %r29, -1073741824;
	and.b32  	%r7946, %r352, -8388608;
	setp.eq.s32 	%p142, %r7946, 0;
	@%p142 bra 	$L__BB0_57;
// %bb.55:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_56:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r353, %r7946, 192937984;
	add.s32 	%r354, %r7945, %r353;
	mov.b32 	%f656, %r354;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7946, %r7946, %r353;
	mov.b32 	%r7945, %f813;
	setp.ne.s32 	%p143, %r7946, 0;
	setp.ne.s32 	%p144, %r7945, 0;
	and.pred  	%p145, %p143, %p144;
	@%p145 bra 	$L__BB0_56;
$L__BB0_57:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p146, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p146;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_58;
$L__BB0_48:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p137, %r28, 1073741824;
	@%p137 bra 	$L__BB0_53;
// %bb.49:
	setp.lt.u32 	%p138, %r28, -2147483647;
	@%p138 bra 	$L__BB0_51;
// %bb.50:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p141, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p141;
	bra.uni 	$L__BB0_53;
$L__BB0_51:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p139, %f56, 0f40800000;
	@%p139 bra 	$L__BB0_53;
// %bb.52:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p140, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p140;
$L__BB0_53:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_58:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p147, %f665, 0f7F800000;
	@%p147 bra 	$L__BB0_60;
// %bb.59:
	mov.b32 	%r355, %f125;
	and.b32  	%r356, %r355, -2147483648;
	mov.b32 	%r357, %f814;
	or.b32  	%r358, %r356, %r357;
	mov.b32 	%f814, %r358;
$L__BB0_60:                             // %__nv_fmodf.exit867
	@%p75 bra 	$L__BB0_114;
// %bb.61:
	@%p229 bra 	$L__BB0_110;
	bra.uni 	$L__BB0_62;
$L__BB0_110:
	mov.b32 	%r128, %f830;
	and.b32  	%r373, %r128, 8388607;
	or.b32  	%r7979, %r373, 1065353216;
	mov.b32 	%f829, %r7979;
	add.s32 	%r374, %r128, -1073741824;
	and.b32  	%r7980, %r374, -8388608;
	setp.eq.s32 	%p162, %r7980, 0;
	@%p162 bra 	$L__BB0_113;
// %bb.111:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_112:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r375, %r7980, 192937984;
	add.s32 	%r376, %r7979, %r375;
	mov.b32 	%f708, %r376;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r7980, %r7980, %r375;
	mov.b32 	%r7979, %f829;
	setp.ne.s32 	%p163, %r7980, 0;
	setp.ne.s32 	%p164, %r7979, 0;
	and.pred  	%p165, %p163, %p164;
	@%p165 bra 	$L__BB0_112;
$L__BB0_113:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p166, %r128, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p166;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_114;
$L__BB0_62:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r127, %f128;
	setp.lt.u32 	%p157, %r127, 1073741824;
	@%p157 bra 	$L__BB0_109;
// %bb.63:
	setp.lt.u32 	%p158, %r127, -2147483647;
	@%p158 bra 	$L__BB0_107;
// %bb.64:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p161, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p161;
	bra.uni 	$L__BB0_109;
$L__BB0_107:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p159, %f128, 0f40800000;
	@%p159 bra 	$L__BB0_109;
// %bb.108:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p160, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p160;
$L__BB0_109:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_114:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p167, %f717, 0f7F800000;
	@%p167 bra 	$L__BB0_116;
// %bb.115:
	mov.b32 	%r377, %f830;
	or.b32  	%r378, %r118, %r377;
	mov.b32 	%f830, %r378;
$L__BB0_116:                            // %__nv_fmodf.exit991
	@%p95 bra 	$L__BB0_76;
// %bb.65:
	@%p230 bra 	$L__BB0_72;
	bra.uni 	$L__BB0_66;
$L__BB0_72:
	mov.b32 	%r39, %f818;
	and.b32  	%r387, %r39, 8388607;
	or.b32  	%r7947, %r387, 1065353216;
	mov.b32 	%f817, %r7947;
	add.s32 	%r388, %r39, -1073741824;
	and.b32  	%r7948, %r388, -8388608;
	setp.eq.s32 	%p182, %r7948, 0;
	@%p182 bra 	$L__BB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_74:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r389, %r7948, 192937984;
	add.s32 	%r390, %r7947, %r389;
	mov.b32 	%f758, %r390;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7948, %r7948, %r389;
	mov.b32 	%r7947, %f817;
	setp.ne.s32 	%p183, %r7948, 0;
	setp.ne.s32 	%p184, %r7947, 0;
	and.pred  	%p185, %p183, %p184;
	@%p185 bra 	$L__BB0_74;
$L__BB0_75:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p186, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p186;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_76;
$L__BB0_66:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p177, %r38, 1073741824;
	@%p177 bra 	$L__BB0_71;
// %bb.67:
	setp.lt.u32 	%p178, %r38, -2147483647;
	@%p178 bra 	$L__BB0_69;
// %bb.68:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p181, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p181;
	bra.uni 	$L__BB0_71;
$L__BB0_69:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p179, %f71, 0f40800000;
	@%p179 bra 	$L__BB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p180, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p180;
$L__BB0_71:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_76:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p187, %f767, 0f7F800000;
	@%p187 bra 	$L__BB0_78;
// %bb.77:
	mov.b32 	%r391, %f818;
	or.b32  	%r392, %r23, %r391;
	mov.b32 	%f818, %r392;
$L__BB0_78:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p195, %r158, %r157;
	mov.u32 	%r7942, 0;
	@%p195 bra 	$L__BB0_86;
// %bb.79:                              // %L1334.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r262, %r108, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r272, %r262, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r263, %r262, 127;
	and.b32  	%r273, %r272, 127;
	setp.gt.f32 	%p13, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p19, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p25, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p31, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p37, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p43, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p49, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p55, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r263;
	cvt.rn.f32.s32 	%f457, %r273;
	selp.f32 	%f153, %f152, %f150, %p13;
	selp.f32 	%f187, %f186, %f184, %p19;
	selp.f32 	%f222, %f221, %f219, %p25;
	selp.f32 	%f256, %f255, %f253, %p31;
	selp.f32 	%f291, %f290, %f288, %p37;
	selp.f32 	%f325, %f324, %f322, %p43;
	selp.f32 	%f360, %f359, %f357, %p49;
	selp.f32 	%f394, %f393, %f391, %p55;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r185, %f154;
	mov.b32 	%r192, %f188;
	mov.b32 	%r203, %f223;
	mov.b32 	%r210, %f257;
	mov.b32 	%r221, %f292;
	mov.b32 	%r228, %f326;
	mov.b32 	%r239, %f361;
	mov.b32 	%r246, %f395;
	mov.b32 	%r264, %f425;
	mov.b32 	%r274, %f459;
	mov.b32 	%r296, %f511;
	mov.b32 	%r327, %f562;
	and.b32  	%r186, %r185, -2147483648;
	and.b32  	%r193, %r192, -2147483648;
	and.b32  	%r204, %r203, -2147483648;
	and.b32  	%r211, %r210, -2147483648;
	and.b32  	%r222, %r221, -2147483648;
	and.b32  	%r229, %r228, -2147483648;
	and.b32  	%r240, %r239, -2147483648;
	and.b32  	%r247, %r246, -2147483648;
	and.b32  	%r265, %r264, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r297, %r296, -2147483648;
	and.b32  	%r328, %r327, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r187, %r186, 1056964608;
	or.b32  	%r194, %r193, 1056964608;
	or.b32  	%r205, %r204, 1056964608;
	or.b32  	%r212, %r211, 1056964608;
	or.b32  	%r223, %r222, 1056964608;
	or.b32  	%r230, %r229, 1056964608;
	or.b32  	%r241, %r240, 1056964608;
	or.b32  	%r248, %r247, 1056964608;
	or.b32  	%r266, %r265, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r298, %r297, 1056964608;
	or.b32  	%r329, %r328, 1056964608;
	mov.b32 	%r343, %f615;
	mov.b32 	%r365, %f666;
	mov.b32 	%f155, %r187;
	mov.b32 	%f189, %r194;
	mov.b32 	%f224, %r205;
	mov.b32 	%f258, %r212;
	mov.b32 	%f293, %r223;
	mov.b32 	%f327, %r230;
	mov.b32 	%f362, %r241;
	mov.b32 	%f396, %r248;
	mov.b32 	%f426, %r266;
	mov.b32 	%f460, %r276;
	mov.b32 	%f512, %r298;
	mov.b32 	%f563, %r329;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r366, %r365, -2147483648;
	add.f32 	%f718, %f830, %f830;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r367, %r366, 1056964608;
	mov.b32 	%r379, %f718;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p14, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p20, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p26, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p32, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p38, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p44, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p50, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p56, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p61, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p68, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p88, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p108, %f566, 0f4B000000;
	mov.b32 	%f616, %r345;
	mov.b32 	%f667, %r367;
	and.b32  	%r380, %r379, -2147483648;
	selp.f32 	%f159, %f154, %f157, %p14;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p15, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p20;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p21, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p26;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p27, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p32;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p33, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p38;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p39, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p44;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p45, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p50;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p51, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p56;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p57, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p61;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p62, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p68;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p69, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p88;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p89, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p108;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p109, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r381, %r380, 1056964608;
	selp.f32 	%f161, %f160, %f159, %p15;
	selp.f32 	%f195, %f194, %f193, %p21;
	selp.f32 	%f230, %f229, %f228, %p27;
	selp.f32 	%f264, %f263, %f262, %p33;
	selp.f32 	%f299, %f298, %f297, %p39;
	selp.f32 	%f333, %f332, %f331, %p45;
	selp.f32 	%f368, %f367, %f366, %p51;
	selp.f32 	%f402, %f401, %f400, %p57;
	selp.f32 	%f432, %f431, %f430, %p62;
	selp.f32 	%f466, %f465, %f464, %p69;
	selp.f32 	%f518, %f517, %f516, %p89;
	selp.f32 	%f569, %f568, %f567, %p109;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p128, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p149, %f670, 0f4B000000;
	mov.b32 	%f719, %r381;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p128;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p129, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p149;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p150, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p129;
	selp.f32 	%f673, %f672, %f671, %p150;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p169, %f722, 0f4B000000;
	cvt.rzi.s32.f32 	%r188, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r195, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r206, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r213, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r224, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r231, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r242, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r249, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p169;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p170, %f722, 0f3F000000;
	add.s32 	%r189, %r188, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r196, %r195, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r207, %r206, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r214, %r213, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r225, %r224, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r232, %r231, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r243, %r242, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r250, %r249, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r267, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r277, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r299, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r330, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p170;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r190, %r189, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r197, %r196, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r208, %r207, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r215, %r214, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r226, %r225, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r233, %r232, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r244, %r243, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r251, %r250, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r268, %r267, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r300, %r299, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r331, %r330, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p16, %r190, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p22, %r197, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p28, %r208, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p34, %r215, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p40, %r226, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p46, %r233, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p52, %r244, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p58, %r251, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p63, %r268, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p70, %r278, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p90, %r300, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p110, %r331, 1;
	cvt.rzi.s32.f32 	%r346, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r368, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	selp.f32 	%f173, %f171, %f172, %p16;
	and.b32  	%r191, %r189, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p22;
	and.b32  	%r198, %r196, 2;
	selp.f32 	%f242, %f240, %f241, %p28;
	and.b32  	%r209, %r207, 2;
	selp.f32 	%f276, %f274, %f275, %p34;
	and.b32  	%r216, %r214, 2;
	selp.f32 	%f311, %f309, %f310, %p40;
	and.b32  	%r227, %r225, 2;
	selp.f32 	%f345, %f343, %f344, %p46;
	and.b32  	%r234, %r232, 2;
	selp.f32 	%f380, %f378, %f379, %p52;
	and.b32  	%r245, %r243, 2;
	selp.f32 	%f414, %f412, %f413, %p58;
	and.b32  	%r252, %r250, 2;
	selp.f32 	%f444, %f442, %f443, %p63;
	and.b32  	%r269, %r267, 2;
	selp.f32 	%f478, %f476, %f477, %p70;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f530, %f528, %f529, %p90;
	and.b32  	%r301, %r299, 2;
	selp.f32 	%f581, %f579, %f580, %p110;
	and.b32  	%r332, %r330, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r347, %r346, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r369, %r368, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	setp.eq.s32 	%p17, %r191, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p23, %r198, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p29, %r209, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p35, %r216, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p41, %r227, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p47, %r234, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p53, %r245, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p59, %r252, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p64, %r269, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r270, %r267, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p71, %r279, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p91, %r301, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r302, %r299, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p111, %r332, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r333, %r330, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p130, %r347, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p151, %r369, 1;
	cvt.rzi.s32.f32 	%r382, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	selp.f32 	%f176, %f173, %f175, %p17;
	selp.f32 	%f210, %f207, %f209, %p23;
	selp.f32 	%f245, %f242, %f244, %p29;
	selp.f32 	%f279, %f276, %f278, %p35;
	selp.f32 	%f314, %f311, %f313, %p41;
	selp.f32 	%f348, %f345, %f347, %p47;
	selp.f32 	%f383, %f380, %f382, %p53;
	selp.f32 	%f417, %f414, %f416, %p59;
	selp.f32 	%f445, %f443, %f442, %p63;
	selp.f32 	%f447, %f444, %f446, %p64;
	and.b32  	%r271, %r270, 2;
	setp.eq.f32 	%p66, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p70;
	selp.f32 	%f481, %f478, %f480, %p71;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p73, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p90;
	selp.f32 	%f533, %f530, %f532, %p91;
	and.b32  	%r303, %r302, 2;
	setp.eq.f32 	%p93, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p110;
	selp.f32 	%f584, %f581, %f583, %p111;
	and.b32  	%r334, %r333, 2;
	setp.eq.f32 	%p113, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p130;
	and.b32  	%r348, %r346, 2;
	selp.f32 	%f685, %f683, %f684, %p151;
	and.b32  	%r370, %r368, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r383, %r382, 1;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p65, %r271, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p66;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p72, %r281, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p73;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p92, %r303, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p93;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p112, %r334, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p113;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p131, %r348, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r349, %r346, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p152, %r370, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r371, %r368, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p171, %r383, 1;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p65;
	setp.gt.f32 	%p67, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p72;
	setp.gt.f32 	%p74, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p92;
	setp.gt.f32 	%p94, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p112;
	setp.gt.f32 	%p114, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p130;
	selp.f32 	%f637, %f634, %f636, %p131;
	and.b32  	%r350, %r349, 2;
	setp.eq.f32 	%p133, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p151;
	selp.f32 	%f688, %f685, %f687, %p152;
	and.b32  	%r372, %r371, 2;
	setp.eq.f32 	%p154, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p171;
	and.b32  	%r384, %r382, 2;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p67;
	selp.f32 	%f489, %f488, %f483, %p74;
	selp.f32 	%f104, %f540, %f536, %p94;
	selp.f32 	%f593, %f592, %f587, %p114;
	setp.eq.s32 	%p132, %r350, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p133;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p153, %r372, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p154;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p172, %r384, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r385, %r382, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mov.b32 	%r201, %f215;
	mov.b32 	%r200, %f3;
	mov.b32 	%r219, %f284;
	mov.b32 	%r218, %f12;
	mov.b32 	%r237, %f353;
	mov.b32 	%r236, %f21;
	mov.b32 	%r255, %f421;
	mov.b32 	%r254, %f30;
	mov.b32 	%r257, %f456;
	mov.b32 	%r258, %f489;
	mov.b32 	%r260, %f453;
	mov.b32 	%r261, %f486;
	mov.b32 	%r317, %f593;
	mov.b32 	%r316, %f104;
	mov.b32 	%r323, %f590;
	mov.b32 	%r322, %f103;
	selp.f32 	%f640, %f635, %f639, %p132;
	setp.gt.f32 	%p134, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p153;
	setp.gt.f32 	%p155, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p171;
	selp.f32 	%f740, %f737, %f739, %p172;
	and.b32  	%r386, %r385, 2;
	setp.eq.f32 	%p174, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r199, %r201, %r200;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r217, %r219, %r218;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r235, %r237, %r236;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r253, %r255, %r254;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r256, %r258, %r257;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r259, %r261, %r260;
	// end inline asm
	xor.b32  	%r320, %r323, -2147483648;
	xor.b32  	%r319, %r322, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p134;
	selp.f32 	%f697, %f696, %f691, %p155;
	setp.eq.s32 	%p173, %r386, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p174;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r315, %r317, %r316;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r321, %r323, %r322;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r324, %r317, %r316;
	// end inline asm
	mov.b32 	%r361, %f697;
	mov.b32 	%r360, %f124;
	mov.b32 	%r364, %f694;
	mov.b32 	%r363, %f123;
	selp.f32 	%f743, %f738, %f742, %p173;
	setp.gt.f32 	%p175, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r359, %r361, %r360;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p175;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r405, %f768;
	and.b32  	%r406, %r405, -2147483648;
	or.b32  	%r407, %r406, 1056964608;
	mov.b32 	%f769, %r407;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p188, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p188;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p189, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p189;
	cvt.rzi.s32.f32 	%r408, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r409, %r408, 1;
	setp.eq.b32 	%p190, %r409, 1;
	selp.f32 	%f787, %f785, %f786, %p190;
	selp.f32 	%f788, %f786, %f785, %p190;
	and.b32  	%r410, %r408, 2;
	setp.eq.s32 	%p191, %r410, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p191;
	add.s32 	%r411, %r408, 1;
	and.b32  	%r412, %r411, 2;
	setp.eq.s32 	%p192, %r412, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p192;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p193, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p193;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p194, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p194;
	mov.b32 	%r395, %f799;
	mov.b32 	%r394, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	mov.b32 	%r401, %f796;
	xor.b32  	%r398, %r401, -2147483648;
	mov.b32 	%r400, %f142;
	xor.b32  	%r397, %r400, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r398, %r397;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r395, %r394;
	// end inline asm
	and.b32  	%r414, %r95, 12;
	cvt.u16.u32 	%rs6, %r101;
	mul.hi.u16 	%rs7, %rs6, -21845;
	shr.u16 	%rs8, %rs7, 8;
	mul.lo.s16 	%rs9, %rs8, 384;
	sub.s16 	%rs10, %rs6, %rs9;
	shl.b16 	%rs11, %rs10, 5;
	cvt.u32.u16 	%r415, %rs11;
	and.b32  	%r416, %r95, 16;
	and.b32  	%r417, %r95, 28;
	or.b32  	%r50, %r417, %r415;
	bfe.s32 	%r418, %r4, 3, 1;
	and.b32  	%r51, %r4, 8;
	shl.b32 	%r419, %r4, 4;
	or.b32  	%r420, %r419, %r51;
	shr.u32 	%r421, %r420, 2;
	and.b32  	%r422, %r421, 14;
	or.b32  	%r423, %r422, %r416;
	shr.u32 	%r424, %r2, 1;
	and.b32  	%r425, %r3, 32;
	or.b32  	%r426, %r425, %r424;
	or.b32  	%r427, %r426, 8;
	or.b32  	%r428, %r426, 16;
	or.b32  	%r429, %r426, 24;
	and.b32  	%r430, %r4, 18;
	or.b32  	%r431, %r430, %r98;
	or.b32  	%r432, %r431, %r96;
	or.b32  	%r433, %r432, %r100;
	shr.u32 	%r434, %r433, 1;
	mul.lo.s32 	%r435, %r434, 65;
	add.s32 	%r436, %r426, %r435;
	add.s32 	%r437, %r427, %r435;
	add.s32 	%r438, %r428, %r435;
	add.s32 	%r439, %r429, %r435;
	shl.b32 	%r440, %r2, 1;
	or.b32  	%r441, %r106, %r440;
	mul.lo.s32 	%r442, %r441, 65;
	add.s32 	%r443, %r442, %r416;
	add.s32 	%r444, %r443, %r422;
	mul.wide.u32 	%rd54, %r444, 4;
	mov.u64 	%rd55, shmem;
	add.s64 	%rd5, %rd55, %rd54;
	cvt.u64.u32 	%rd56, %r422;
	cvt.u64.u32 	%rd57, %r442;
	cvt.u64.u32 	%rd58, %r416;
	add.s64 	%rd59, %rd58, %rd57;
	add.s64 	%rd60, %rd59, %rd56;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd6, %rd55, %rd61;
	or.b32  	%r445, %r422, 1;
	cvt.u64.u32 	%rd62, %r443;
	add.s64 	%rd63, %rd62, %rd56;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd7, %rd55, %rd64;
	cvt.u64.u32 	%rd65, %r445;
	add.s64 	%rd66, %rd59, %rd65;
	shl.b64 	%rd67, %rd66, 2;
	add.s64 	%rd8, %rd55, %rd67;
	mad.lo.s32 	%r446, %r159, 786432, -2359296;
	or.b32  	%r447, %r107, %r101;
	shl.b32 	%r448, %r2, 2;
	or.b32  	%r449, %r447, %r448;
	cvt.u16.u32 	%rs12, %r449;
	mul.hi.u16 	%rs13, %rs12, -21845;
	shr.u16 	%rs14, %rs13, 14;
	mul.lo.s16 	%rs15, %rs14, 24576;
	sub.s16 	%rs16, %rs12, %rs15;
	mul.wide.u16 	%r450, %rs16, 32;
	or.b32  	%r451, %r450, %r414;
	or.b32  	%r52, %r451, %r416;
	cvt.s64.s32 	%rd9, %r446;
	or.b32  	%r53, %r417, %r450;
	shr.u32 	%r452, %r2, 3;
	bfe.s32 	%r453, %r2, 1, 1;
	and.b32  	%r454, %r453, 520;
	shr.u32 	%r455, %r99, 4;
	bfe.s32 	%r456, %r2, 2, 1;
	and.b32  	%r457, %r456, 260;
	and.b32  	%r458, %r2, 1;
	neg.s32 	%r459, %r458;
	and.b32  	%r460, %r459, 1040;
	add.s32 	%r461, %r460, %r423;
	mad.lo.s32 	%r462, %r452, 130, %r461;
	add.s32 	%r463, %r462, %r454;
	mad.lo.s32 	%r464, %r455, 65, %r463;
	add.s32 	%r465, %r464, %r457;
	mul.wide.u32 	%rd68, %r465, 4;
	add.s64 	%rd10, %rd55, %rd68;
	add.s32 	%r466, %r465, 32;
	mul.wide.u32 	%rd69, %r466, 4;
	add.s64 	%rd11, %rd55, %rd69;
	add.s32 	%r467, %r465, 1;
	mul.wide.u32 	%rd70, %r467, 4;
	add.s64 	%rd12, %rd55, %rd70;
	add.s32 	%r468, %r465, 33;
	mul.wide.u32 	%rd71, %r468, 4;
	add.s64 	%rd13, %rd55, %rd71;
	add.s32 	%r469, %r465, 2081;
	mul.wide.u32 	%rd72, %r469, 4;
	add.s64 	%rd14, %rd55, %rd72;
	add.s32 	%r470, %r465, 2113;
	mul.wide.u32 	%rd73, %r470, 4;
	add.s64 	%rd15, %rd55, %rd73;
	add.s32 	%r471, %r465, 2082;
	mul.wide.u32 	%rd74, %r471, 4;
	add.s64 	%rd16, %rd55, %rd74;
	add.s32 	%r472, %r465, 2114;
	mul.wide.u32 	%rd75, %r472, 4;
	add.s64 	%rd17, %rd55, %rd75;
	add.s32 	%r473, %r465, 4162;
	mul.wide.u32 	%rd76, %r473, 4;
	add.s64 	%rd18, %rd55, %rd76;
	add.s32 	%r474, %r465, 4194;
	mul.wide.u32 	%rd77, %r474, 4;
	add.s64 	%rd19, %rd55, %rd77;
	add.s32 	%r475, %r465, 4163;
	mul.wide.u32 	%rd78, %r475, 4;
	add.s64 	%rd20, %rd55, %rd78;
	add.s32 	%r476, %r465, 4195;
	mul.wide.u32 	%rd79, %r476, 4;
	add.s64 	%rd21, %rd55, %rd79;
	add.s32 	%r477, %r465, 6243;
	mul.wide.u32 	%rd80, %r477, 4;
	add.s64 	%rd22, %rd55, %rd80;
	add.s32 	%r478, %r465, 6275;
	mul.wide.u32 	%rd81, %r478, 4;
	add.s64 	%rd23, %rd55, %rd81;
	add.s32 	%r479, %r465, 6244;
	mul.wide.u32 	%rd82, %r479, 4;
	add.s64 	%rd24, %rd55, %rd82;
	add.s32 	%r480, %r465, 6276;
	mul.wide.u32 	%rd83, %r480, 4;
	add.s64 	%rd25, %rd55, %rd83;
	and.b32  	%r481, %r4, 1;
	neg.s32 	%r482, %r481;
	and.b32  	%r483, %r482, 130;
	mul.lo.s32 	%r484, %r106, 520;
	setp.eq.s32 	%p196, %r102, 0;
	selp.b32 	%r485, 0, 65, %p196;
	bfe.s32 	%r486, %r4, 2, 1;
	and.b32  	%r487, %r486, 260;
	and.b32  	%r488, %r418, 1040;
	or.b32  	%r489, %r426, %r488;
	or.b32  	%r490, %r427, %r488;
	mul.wide.u32 	%rd26, %r439, 4;
	mul.wide.u32 	%rd27, %r438, 4;
	mul.wide.u32 	%rd28, %r437, 4;
	mul.wide.u32 	%rd29, %r436, 4;
	or.b32  	%r491, %r483, %r485;
	or.b32  	%r492, %r491, %r487;
	or.b32  	%r493, %r492, %r488;
	add.s32 	%r494, %r493, %r429;
	add.s32 	%r495, %r494, %r484;
	mul.wide.u32 	%rd30, %r495, 4;
	add.s32 	%r496, %r493, %r428;
	add.s32 	%r497, %r496, %r484;
	mul.wide.u32 	%rd31, %r497, 4;
	add.s32 	%r498, %r492, %r490;
	add.s32 	%r499, %r498, %r484;
	mul.wide.u32 	%rd32, %r499, 4;
	add.s32 	%r500, %r492, %r489;
	add.s32 	%r501, %r500, %r484;
	mul.wide.u32 	%rd33, %r501, 4;
	setp.eq.s32 	%p197, %r51, 0;
	mov.u16 	%rs1192, 25600;
	mov.u16 	%rs1088, 21504;
	mov.u32 	%r7963, %r7942;
	mov.u32 	%r7964, %r7942;
	mov.u32 	%r7965, %r7942;
	mov.u32 	%r7966, %r7942;
	mov.u32 	%r7967, %r7942;
	mov.u32 	%r7968, %r7942;
	mov.u32 	%r7969, %r7942;
	mov.u32 	%r7970, %r7942;
	mov.u32 	%r7971, %r7942;
	mov.u32 	%r7972, %r7942;
	mov.u32 	%r7973, %r7942;
	mov.u32 	%r7974, %r7942;
	mov.u32 	%r7961, %r7942;
	bra.uni 	$L__BB0_80;
$L__BB0_85:                             // %L37947
                                        //   in Loop: Header=BB0_80 Depth=1
	mad.lo.s32 	%r7938, %r137, 786432, %r53;
	cvt.u64.u32 	%rd140, %r7938;
	add.s64 	%rd141, %rd140, %rd9;
	mul.hi.s64 	%rd142, %rd141, 3074457345618258603;
	shr.u64 	%rd143, %rd142, 63;
	shr.s64 	%rd144, %rd142, 26;
	add.s64 	%rd145, %rd144, %rd143;
	setp.lt.s64 	%p225, %rd141, 0;
	mul.lo.s64 	%rd146, %rd145, 402653184;
	setp.ne.s64 	%p226, %rd146, %rd141;
	and.pred  	%p227, %p225, %p226;
	selp.s64 	%rd147, -1, 0, %p227;
	add.s64 	%rd148, %rd145, %rd147;
	mul.lo.s64 	%rd149, %rd148, 4611686018024734720;
	add.s64 	%rd150, %rd149, %rd141;
	shl.b64 	%rd151, %rd150, 2;
	add.s64 	%rd152, %rd3, %rd151;
	st.global.v4.u32 	[%rd152], {%r152, %r154, %r153, %r155};
	add.s32 	%r7961, %r7961, 256;
	add.s32 	%r7939, %r7961, %r157;
	setp.lt.s32 	%p228, %r7939, %r158;
	@%p228 bra 	$L__BB0_80;
	bra.uni 	$L__BB0_86;
$L__BB0_80:                             // %L1334
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_81 Depth 2
	shr.u32 	%r67, %r7961, 6;
	or.b32  	%r567, %r7961, %r4;
	and.b32  	%r568, %r567, 32528;
	or.b32  	%r569, %r568, %r96;
	or.b32  	%r570, %r569, %r2;
	add.s32 	%r571, %r570, %r157;
	mad.lo.s32 	%r572, %r571, 12288, %r50;
	mul.hi.s32 	%r573, %r572, 715827883;
	shr.u32 	%r574, %r573, 31;
	shr.s32 	%r575, %r573, 26;
	add.s32 	%r576, %r575, %r574;
	setp.lt.s32 	%p198, %r572, 0;
	mul.lo.s32 	%r577, %r576, 402653184;
	setp.ne.s32 	%p199, %r577, %r572;
	and.pred  	%p200, %p198, %p199;
	selp.s32 	%r578, -1, 0, %p200;
	add.s32 	%r579, %r576, %r578;
	mad.lo.s32 	%r580, %r579, -402653184, %r572;
	mul.wide.s32 	%rd85, %r580, 4;
	add.s64 	%rd86, %rd2, %rd85;
	ld.global.v4.u32 	{%r581, %r582, %r583, %r584}, [%rd86];
	or.b32  	%r585, %r570, 64;
	add.s32 	%r586, %r585, %r157;
	mad.lo.s32 	%r587, %r586, 12288, %r50;
	mul.hi.s32 	%r588, %r587, 715827883;
	shr.u32 	%r589, %r588, 31;
	shr.s32 	%r590, %r588, 26;
	add.s32 	%r591, %r590, %r589;
	setp.lt.s32 	%p201, %r587, 0;
	mul.lo.s32 	%r592, %r591, 402653184;
	setp.ne.s32 	%p202, %r592, %r587;
	and.pred  	%p203, %p201, %p202;
	selp.s32 	%r593, -1, 0, %p203;
	add.s32 	%r594, %r591, %r593;
	mad.lo.s32 	%r595, %r594, -402653184, %r587;
	mul.wide.s32 	%rd87, %r595, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r596, %r597, %r598, %r599}, [%rd88];
	or.b32  	%r600, %r570, 128;
	add.s32 	%r601, %r600, %r157;
	mad.lo.s32 	%r602, %r601, 12288, %r50;
	mul.hi.s32 	%r603, %r602, 715827883;
	shr.u32 	%r604, %r603, 31;
	shr.s32 	%r605, %r603, 26;
	add.s32 	%r606, %r605, %r604;
	setp.lt.s32 	%p204, %r602, 0;
	mul.lo.s32 	%r607, %r606, 402653184;
	setp.ne.s32 	%p205, %r607, %r602;
	and.pred  	%p206, %p204, %p205;
	selp.s32 	%r608, -1, 0, %p206;
	add.s32 	%r609, %r606, %r608;
	mad.lo.s32 	%r610, %r609, -402653184, %r602;
	mul.wide.s32 	%rd89, %r610, 4;
	add.s64 	%rd90, %rd2, %rd89;
	ld.global.v4.u32 	{%r611, %r612, %r613, %r614}, [%rd90];
	or.b32  	%r615, %r570, 192;
	add.s32 	%r616, %r615, %r157;
	mad.lo.s32 	%r617, %r616, 12288, %r50;
	mul.hi.s32 	%r618, %r617, 715827883;
	shr.u32 	%r619, %r618, 31;
	shr.s32 	%r620, %r618, 26;
	add.s32 	%r621, %r620, %r619;
	setp.lt.s32 	%p207, %r617, 0;
	mul.lo.s32 	%r622, %r621, 402653184;
	setp.ne.s32 	%p208, %r622, %r617;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r623, -1, 0, %p209;
	add.s32 	%r624, %r621, %r623;
	mad.lo.s32 	%r625, %r624, -402653184, %r617;
	mul.wide.s32 	%rd91, %r625, 4;
	add.s64 	%rd92, %rd2, %rd91;
	ld.global.v4.u32 	{%r626, %r627, %r628, %r629}, [%rd92];
	selp.b32 	%r630, %r583, %r581, %p197;
	shfl.sync.bfly.b32	%r631, %r630, 8, 31, -1;
	selp.b32 	%r503, %r581, %r631, %p197;
	selp.b32 	%r504, %r631, %r583, %p197;
	selp.b32 	%r632, %r584, %r582, %p197;
	shfl.sync.bfly.b32	%r633, %r632, 8, 31, -1;
	selp.b32 	%r511, %r582, %r633, %p197;
	selp.b32 	%r512, %r633, %r584, %p197;
	selp.b32 	%r634, %r598, %r596, %p197;
	shfl.sync.bfly.b32	%r635, %r634, 8, 31, -1;
	selp.b32 	%r519, %r596, %r635, %p197;
	selp.b32 	%r520, %r635, %r598, %p197;
	selp.b32 	%r636, %r599, %r597, %p197;
	shfl.sync.bfly.b32	%r637, %r636, 8, 31, -1;
	selp.b32 	%r527, %r597, %r637, %p197;
	selp.b32 	%r528, %r637, %r599, %p197;
	selp.b32 	%r638, %r613, %r611, %p197;
	shfl.sync.bfly.b32	%r639, %r638, 8, 31, -1;
	selp.b32 	%r535, %r611, %r639, %p197;
	selp.b32 	%r536, %r639, %r613, %p197;
	selp.b32 	%r640, %r614, %r612, %p197;
	shfl.sync.bfly.b32	%r641, %r640, 8, 31, -1;
	selp.b32 	%r543, %r612, %r641, %p197;
	selp.b32 	%r544, %r641, %r614, %p197;
	selp.b32 	%r642, %r628, %r626, %p197;
	shfl.sync.bfly.b32	%r643, %r642, 8, 31, -1;
	selp.b32 	%r551, %r626, %r643, %p197;
	selp.b32 	%r552, %r643, %r628, %p197;
	selp.b32 	%r644, %r629, %r627, %p197;
	shfl.sync.bfly.b32	%r645, %r644, 8, 31, -1;
	selp.b32 	%r559, %r627, %r645, %p197;
	selp.b32 	%r560, %r645, %r629, %p197;
	mov.u32 	%r561, 21520;
	// begin inline asm
	prmt.b32 %r502, %r503, %r504, %r561;
	// end inline asm
	mov.u32 	%r565, 30258;
	// begin inline asm
	prmt.b32 %r506, %r503, %r504, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r510, %r511, %r512, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r514, %r511, %r512, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r518, %r519, %r520, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r522, %r519, %r520, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r526, %r527, %r528, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r530, %r527, %r528, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r534, %r535, %r536, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r538, %r535, %r536, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r542, %r543, %r544, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r546, %r543, %r544, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r550, %r551, %r552, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r554, %r551, %r552, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r558, %r559, %r560, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r562, %r559, %r560, %r565;
	// end inline asm
	st.shared.u32 	[%rd10], %r502;
	st.shared.u32 	[%rd11], %r506;
	st.shared.u32 	[%rd12], %r510;
	st.shared.u32 	[%rd13], %r514;
	st.shared.u32 	[%rd14], %r518;
	st.shared.u32 	[%rd15], %r522;
	st.shared.u32 	[%rd16], %r526;
	st.shared.u32 	[%rd17], %r530;
	st.shared.u32 	[%rd18], %r534;
	st.shared.u32 	[%rd19], %r538;
	st.shared.u32 	[%rd20], %r542;
	st.shared.u32 	[%rd21], %r546;
	st.shared.u32 	[%rd22], %r550;
	st.shared.u32 	[%rd23], %r554;
	st.shared.u32 	[%rd24], %r558;
	st.shared.u32 	[%rd25], %r562;
	bar.sync 	0;
	mov.u32 	%r7962, 256;
	mov.u64 	%rd155, %rd55;
$L__BB0_81:                             // %L11198
                                        //   Parent Loop BB0_80 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd93, %rd155, %rd33;
	ld.shared.u32 	%r7830, [%rd93];
	add.s64 	%rd94, %rd155, %rd32;
	ld.shared.u32 	%r7831, [%rd94];
	add.s64 	%rd95, %rd155, %rd31;
	ld.shared.u32 	%r7832, [%rd95];
	add.s64 	%rd96, %rd155, %rd30;
	ld.shared.u32 	%r7833, [%rd96];
	// begin inline asm
	mov.b32 %r651, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r662, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r650, %r7830, -2004318072;
	mov.u32 	%r649, 983055;
	// begin inline asm
	lop3.b32 %r648, %r649, %r650, %r651, 202;
	// end inline asm
	mov.u16 	%rs21, 18432;
	// begin inline asm
	mov.b32 %r652, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r653, %r651, %r652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r656, %r648, %r653;
	// end inline asm
	mov.u32 	%r660, 15728880;
	// begin inline asm
	lop3.b32 %r659, %r660, %r650, %r662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r663, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r664, %r662, %r663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r667, %r659, %r664;
	// end inline asm
	shr.u32 	%r672, %r650, 8;
	// begin inline asm
	lop3.b32 %r670, %r649, %r672, %r651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r674, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r675, %r651, %r674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r678, %r670, %r675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r681, %r660, %r672, %r662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r685, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r686, %r662, %r685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r689, %r681, %r686;
	// end inline asm
	// begin inline asm
	mov.b32 %r697, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r708, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r696, %r7831, -2004318072;
	// begin inline asm
	lop3.b32 %r694, %r649, %r696, %r697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r698, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r699, %r697, %r698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r702, %r694, %r699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r705, %r660, %r696, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r709, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r710, %r708, %r709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r713, %r705, %r710;
	// end inline asm
	shr.u32 	%r718, %r696, 8;
	// begin inline asm
	lop3.b32 %r716, %r649, %r718, %r697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r720, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r721, %r697, %r720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r724, %r716, %r721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r727, %r660, %r718, %r708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r731, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r732, %r708, %r731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r735, %r727, %r732;
	// end inline asm
	// begin inline asm
	mov.b32 %r743, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r754, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r742, %r7832, -2004318072;
	// begin inline asm
	lop3.b32 %r740, %r649, %r742, %r743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r744, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r745, %r743, %r744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r748, %r740, %r745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r751, %r660, %r742, %r754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r755, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r756, %r754, %r755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r759, %r751, %r756;
	// end inline asm
	shr.u32 	%r764, %r742, 8;
	// begin inline asm
	lop3.b32 %r762, %r649, %r764, %r743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r766, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r767, %r743, %r766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r770, %r762, %r767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r773, %r660, %r764, %r754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r777, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r778, %r754, %r777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r781, %r773, %r778;
	// end inline asm
	// begin inline asm
	mov.b32 %r789, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r800, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r788, %r7833, -2004318072;
	// begin inline asm
	lop3.b32 %r786, %r649, %r788, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r790, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r791, %r789, %r790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r794, %r786, %r791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r797, %r660, %r788, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r801, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r802, %r800, %r801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r805, %r797, %r802;
	// end inline asm
	shr.u32 	%r810, %r788, 8;
	// begin inline asm
	lop3.b32 %r808, %r649, %r810, %r789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r813, %r789, %r812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r816, %r808, %r813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r819, %r660, %r810, %r800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r823, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r824, %r800, %r823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r827, %r819, %r824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r830, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r832, %r830, %r656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r840, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r842, %r840, %r678;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r845, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r847, %r845, %r689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r850, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r852, %r850, %r702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r855, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r857, %r855, %r713;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r860, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r862, %r860, %r724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r865, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r867, %r865, %r735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r870, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r872, %r870, %r748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r875, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r877, %r875, %r759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r880, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r882, %r880, %r770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r885, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r887, %r885, %r781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r890, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r892, %r890, %r794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r895, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r897, %r895, %r805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r900, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r902, %r900, %r816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r905, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r907, %r905, %r827;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r914, %r7963, -2004318072;
	// begin inline asm
	lop3.b32 %r912, %r649, %r914, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r917, %r915, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r920, %r912, %r917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r660, %r914, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r926, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	shr.u32 	%r936, %r914, 8;
	// begin inline asm
	lop3.b32 %r934, %r649, %r936, %r915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r938, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r939, %r915, %r938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r942, %r934, %r939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r945, %r660, %r936, %r926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r949, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r950, %r926, %r949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r953, %r945, %r950;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r960, %r7964, -2004318072;
	// begin inline asm
	lop3.b32 %r958, %r649, %r960, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r961, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r660, %r960, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r972, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	shr.u32 	%r982, %r960, 8;
	// begin inline asm
	lop3.b32 %r980, %r649, %r982, %r961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r984, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r985, %r961, %r984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r988, %r980, %r985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r991, %r660, %r982, %r972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r995, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r996, %r972, %r995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r999, %r991, %r996;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1006, %r7969, -2004318072;
	// begin inline asm
	lop3.b32 %r1004, %r649, %r1006, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1009, %r1007, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1012, %r1004, %r1009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r660, %r1006, %r1018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r1018, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	shr.u32 	%r1028, %r1006, 8;
	// begin inline asm
	lop3.b32 %r1026, %r649, %r1028, %r1007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1030, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1031, %r1007, %r1030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1034, %r1026, %r1031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1037, %r660, %r1028, %r1018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1041, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1042, %r1018, %r1041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1045, %r1037, %r1042;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1052, %r7970, -2004318072;
	// begin inline asm
	lop3.b32 %r1050, %r649, %r1052, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1053, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1058, %r1050, %r1055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r660, %r1052, %r1064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1064, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	shr.u32 	%r1074, %r1052, 8;
	// begin inline asm
	lop3.b32 %r1072, %r649, %r1074, %r1053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1053, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r660, %r1074, %r1064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1064, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1094, %r199, %r920, %r832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1098, %r199, %r931, %r837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1102, %r199, %r942, %r842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1106, %r199, %r953, %r847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1110, %r199, %r966, %r852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1114, %r199, %r977, %r857;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1118, %r199, %r988, %r862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1122, %r199, %r999, %r867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1126, %r199, %r1012, %r872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1130, %r199, %r1023, %r877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1134, %r199, %r1034, %r882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1138, %r199, %r1045, %r887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1142, %r199, %r1058, %r892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1146, %r199, %r1069, %r897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1150, %r199, %r1080, %r902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1154, %r199, %r1091, %r907;
	// end inline asm
	// begin inline asm
	mov.b32 %r1163, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1174, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1162, %r7965, -2004318072;
	// begin inline asm
	lop3.b32 %r1160, %r649, %r1162, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1163, %r1164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1168, %r1160, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1171, %r660, %r1162, %r1174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1174, %r1175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1179, %r1171, %r1176;
	// end inline asm
	shr.u32 	%r1184, %r1162, 8;
	// begin inline asm
	lop3.b32 %r1182, %r649, %r1184, %r1163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1186, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1187, %r1163, %r1186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1190, %r1182, %r1187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1193, %r660, %r1184, %r1174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1197, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1198, %r1174, %r1197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1201, %r1193, %r1198;
	// end inline asm
	// begin inline asm
	mov.b32 %r1209, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1220, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1208, %r7966, -2004318072;
	// begin inline asm
	lop3.b32 %r1206, %r649, %r1208, %r1209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1210, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1211, %r1209, %r1210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1214, %r1206, %r1211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1217, %r660, %r1208, %r1220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1221, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1222, %r1220, %r1221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1225, %r1217, %r1222;
	// end inline asm
	shr.u32 	%r1230, %r1208, 8;
	// begin inline asm
	lop3.b32 %r1228, %r649, %r1230, %r1209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1232, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1233, %r1209, %r1232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1236, %r1228, %r1233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1239, %r660, %r1230, %r1220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1243, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1244, %r1220, %r1243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1247, %r1239, %r1244;
	// end inline asm
	// begin inline asm
	mov.b32 %r1255, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1266, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1254, %r7971, -2004318072;
	// begin inline asm
	lop3.b32 %r1252, %r649, %r1254, %r1255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1256, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1257, %r1255, %r1256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1260, %r1252, %r1257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1263, %r660, %r1254, %r1266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1267, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1268, %r1266, %r1267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1271, %r1263, %r1268;
	// end inline asm
	shr.u32 	%r1276, %r1254, 8;
	// begin inline asm
	lop3.b32 %r1274, %r649, %r1276, %r1255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1278, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1279, %r1255, %r1278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1282, %r1274, %r1279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1285, %r660, %r1276, %r1266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1289, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1290, %r1266, %r1289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1293, %r1285, %r1290;
	// end inline asm
	// begin inline asm
	mov.b32 %r1301, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1312, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1300, %r7972, -2004318072;
	// begin inline asm
	lop3.b32 %r1298, %r649, %r1300, %r1301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1302, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1303, %r1301, %r1302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1306, %r1298, %r1303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1309, %r660, %r1300, %r1312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1313, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1314, %r1312, %r1313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1317, %r1309, %r1314;
	// end inline asm
	shr.u32 	%r1322, %r1300, 8;
	// begin inline asm
	lop3.b32 %r1320, %r649, %r1322, %r1301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1324, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1325, %r1301, %r1324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1328, %r1320, %r1325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1331, %r660, %r1322, %r1312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1335, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1336, %r1312, %r1335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1339, %r1331, %r1336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1342, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1344, %r1342, %r1168, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1348, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1350, %r1348, %r1179, %r1098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1356, %r1354, %r1190, %r1102;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1362, %r1360, %r1201, %r1106;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1368, %r1366, %r1214, %r1110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1374, %r1372, %r1225, %r1114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1378, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1380, %r1378, %r1236, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1384, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1386, %r1384, %r1247, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1392, %r1390, %r1260, %r1126;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1396, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1398, %r1396, %r1271, %r1130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1404, %r1402, %r1282, %r1134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1408, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1410, %r1408, %r1293, %r1138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1414, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1416, %r1414, %r1306, %r1142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1422, %r1420, %r1317, %r1146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1426, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1428, %r1426, %r1328, %r1150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1432, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1434, %r1432, %r1339, %r1154;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1442, %r7967, -2004318072;
	// begin inline asm
	lop3.b32 %r1440, %r649, %r1442, %r1443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1445, %r1443, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1448, %r1440, %r1445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r660, %r1442, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1454, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	shr.u32 	%r1464, %r1442, 8;
	// begin inline asm
	lop3.b32 %r1462, %r649, %r1464, %r1443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1466, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1467, %r1443, %r1466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1470, %r1462, %r1467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1473, %r660, %r1464, %r1454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1477, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1478, %r1454, %r1477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1481, %r1473, %r1478;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1488, %r7968, -2004318072;
	// begin inline asm
	lop3.b32 %r1486, %r649, %r1488, %r1489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1489, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r660, %r1488, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1500, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	shr.u32 	%r1510, %r1488, 8;
	// begin inline asm
	lop3.b32 %r1508, %r649, %r1510, %r1489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1512, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1513, %r1489, %r1512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1516, %r1508, %r1513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1519, %r660, %r1510, %r1500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1523, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1524, %r1500, %r1523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1527, %r1519, %r1524;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1534, %r7973, -2004318072;
	// begin inline asm
	lop3.b32 %r1532, %r649, %r1534, %r1535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1535, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1540, %r1532, %r1537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r660, %r1534, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1546, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	shr.u32 	%r1556, %r1534, 8;
	// begin inline asm
	lop3.b32 %r1554, %r649, %r1556, %r1535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1558, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1559, %r1535, %r1558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1562, %r1554, %r1559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1565, %r660, %r1556, %r1546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1569, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1570, %r1546, %r1569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1573, %r1565, %r1570;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r1580, %r7974, -2004318072;
	// begin inline asm
	lop3.b32 %r1578, %r649, %r1580, %r1581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1581, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r660, %r1580, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1592, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	shr.u32 	%r1602, %r1580, 8;
	// begin inline asm
	lop3.b32 %r1600, %r649, %r1602, %r1581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1604, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1605, %r1581, %r1604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1608, %r1600, %r1605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1611, %r660, %r1602, %r1592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1615, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1616, %r1592, %r1615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1619, %r1611, %r1616;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1693, %r235, %r1448, %r1344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1690, %r235, %r1459, %r1350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1702, %r235, %r1470, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r235, %r1481, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1711, %r235, %r1494, %r1368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r235, %r1505, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r235, %r1516, %r1380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r235, %r1527, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1729, %r235, %r1540, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r235, %r1551, %r1398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r235, %r1562, %r1404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r235, %r1573, %r1410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1747, %r235, %r1586, %r1416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r235, %r1597, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r235, %r1608, %r1428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1753, %r235, %r1619, %r1434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1686, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1688, %r1686, %r1690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r256, %r1693, %r1688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1695, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1697, %r1695, %r1699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r256, %r1702, %r1697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1704, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1706, %r1704, %r1708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1709, %r256, %r1711, %r1706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1713, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1715, %r1713, %r1717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r256, %r1720, %r1715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1722, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1724, %r1722, %r1726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1727, %r256, %r1729, %r1724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1731, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1733, %r1731, %r1735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r256, %r1738, %r1733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1740, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1742, %r1740, %r1744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1745, %r256, %r1747, %r1742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1749, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1751, %r1749, %r1753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r256, %r1756, %r1751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1758, %r259, %r1693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1761, %r256, %r1690, %r1758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1765, %r259, %r1702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r256, %r1699, %r1765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1772, %r259, %r1711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r256, %r1708, %r1772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1779, %r259, %r1720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r256, %r1717, %r1779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1786, %r259, %r1729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1789, %r256, %r1726, %r1786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1793, %r259, %r1738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r256, %r1735, %r1793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1800, %r259, %r1747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r256, %r1744, %r1800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1807, %r259, %r1756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r256, %r1753, %r1807;
	// end inline asm
	mov.u32 	%r1822, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1901, %r1898}, {%r315, %r321, %r318, %r324}, {%r1691, %r1761}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1910, %r1907}, {%r315, %r321, %r318, %r324}, {%r1700, %r1768}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1919, %r1916}, {%r315, %r321, %r318, %r324}, {%r1709, %r1775}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1928, %r1925}, {%r315, %r321, %r318, %r324}, {%r1718, %r1782}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1937, %r1934}, {%r315, %r321, %r318, %r324}, {%r1727, %r1789}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1946, %r1943}, {%r315, %r321, %r318, %r324}, {%r1736, %r1796}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1955, %r1952}, {%r315, %r321, %r318, %r324}, {%r1745, %r1803}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1964, %r1961}, {%r315, %r321, %r318, %r324}, {%r1754, %r1810}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1894, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1896, %r1894, %r1898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1899, %r359, %r1901, %r1896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1903, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1905, %r1903, %r1907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1908, %r359, %r1910, %r1905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1912, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1914, %r1912, %r1916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1917, %r359, %r1919, %r1914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1921, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1923, %r1921, %r1925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1926, %r359, %r1928, %r1923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1930, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1932, %r1930, %r1934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1935, %r359, %r1937, %r1932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1939, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1941, %r1939, %r1943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1944, %r359, %r1946, %r1941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1948, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1950, %r1948, %r1952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1953, %r359, %r1955, %r1950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1957, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1959, %r1957, %r1961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1962, %r359, %r1964, %r1959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1966, %r362, %r1901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1969, %r359, %r1898, %r1966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1973, %r362, %r1910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1976, %r359, %r1907, %r1973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1980, %r362, %r1919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1983, %r359, %r1916, %r1980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1987, %r362, %r1928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1990, %r359, %r1925, %r1987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1994, %r362, %r1937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1997, %r359, %r1934, %r1994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2001, %r362, %r1946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2004, %r359, %r1943, %r2001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2008, %r362, %r1955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2011, %r359, %r1952, %r2008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2015, %r362, %r1964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2018, %r359, %r1961, %r2015;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2022, %r2023}, {%r393, %r399, %r396, %r402}, {%r1899, %r1969}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2032, %r2033}, {%r393, %r399, %r396, %r402}, {%r1908, %r1976}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2042, %r2043}, {%r393, %r399, %r396, %r402}, {%r1917, %r1983}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2052, %r2053}, {%r393, %r399, %r396, %r402}, {%r1926, %r1990}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2062, %r2063}, {%r393, %r399, %r396, %r402}, {%r1935, %r1997}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2072, %r2073}, {%r393, %r399, %r396, %r402}, {%r1944, %r2004}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2082, %r2083}, {%r393, %r399, %r396, %r402}, {%r1953, %r2011}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2092, %r2093}, {%r393, %r399, %r396, %r402}, {%r1962, %r2018}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2102, %r103, %r2022;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2105, %r103, %r2023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2108, %r103, %r2032;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2111, %r103, %r2033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2114, %r103, %r2042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2117, %r103, %r2043;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2120, %r103, %r2052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2123, %r103, %r2053;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2126, %r103, %r2062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2129, %r103, %r2063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2132, %r103, %r2072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2135, %r103, %r2073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2138, %r103, %r2082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2141, %r103, %r2083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2144, %r103, %r2092;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2147, %r103, %r2093;
	// end inline asm
	mov.u16 	%rs209, -14592;
	// begin inline asm
	mov.b32 %r2150, {%rs209, %rs209};
	// end inline asm
	mov.u16 	%rs211, 18176;
	// begin inline asm
	mov.b32 %r2151, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2152, %r2102, %r2150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2155, %r2152, %r2151;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2160, %r2105, %r2158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2163, %r2160, %r2159;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2168, %r2108, %r2166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2171, %r2168, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2176, %r2111, %r2174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2179, %r2176, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2184, %r2114, %r2182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2187, %r2184, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2192, %r2117, %r2190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2195, %r2192, %r2191;
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2200, %r2120, %r2198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2203, %r2200, %r2199;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2207, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2208, %r2123, %r2206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2211, %r2208, %r2207;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2216, %r2126, %r2214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2219, %r2216, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2222, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2223, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2224, %r2129, %r2222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2227, %r2224, %r2223;
	// end inline asm
	// begin inline asm
	mov.b32 %r2230, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2231, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2232, %r2132, %r2230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2235, %r2232, %r2231;
	// end inline asm
	// begin inline asm
	mov.b32 %r2238, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2239, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2240, %r2135, %r2238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2243, %r2240, %r2239;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2247, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2248, %r2138, %r2246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2251, %r2248, %r2247;
	// end inline asm
	// begin inline asm
	mov.b32 %r2254, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2256, %r2141, %r2254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2259, %r2256, %r2255;
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2263, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2264, %r2144, %r2262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2267, %r2264, %r2263;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r2271, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2272, %r2147, %r2270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2275, %r2272, %r2271;
	// end inline asm
	// begin inline asm
	mov.b32 %r2281, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2279, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2281, %r2279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2283, %r2155, %r2280;
	// end inline asm
	// begin inline asm
	mov.b32 %r2286, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2287, %r2281, %r2286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2290, %r2163, %r2287;
	// end inline asm
	// begin inline asm
	mov.b32 %r2293, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2294, %r2281, %r2293;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2297, %r2171, %r2294;
	// end inline asm
	// begin inline asm
	mov.b32 %r2300, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2301, %r2281, %r2300;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2179, %r2301;
	// end inline asm
	mov.u32 	%r2310, 25152;
	// begin inline asm
	prmt.b32 %r2307, %r2283, %r2297, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2311, %r2290, %r2304, %r2310;
	// end inline asm
	shl.b32 	%r2318, %r2311, 4;
	mov.u32 	%r2316, 252645135;
	// begin inline asm
	lop3.b32 %r2315, %r2316, %r2307, %r2318, 202;
	// end inline asm
	xor.b32  	%r7834, %r2315, -2004318072;
	// begin inline asm
	mov.b32 %r2322, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2320, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2322, %r2320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2324, %r2187, %r2321;
	// end inline asm
	// begin inline asm
	mov.b32 %r2327, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2328, %r2322, %r2327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2331, %r2195, %r2328;
	// end inline asm
	// begin inline asm
	mov.b32 %r2334, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2335, %r2322, %r2334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2338, %r2203, %r2335;
	// end inline asm
	// begin inline asm
	mov.b32 %r2341, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2342, %r2322, %r2341;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2211, %r2342;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2348, %r2324, %r2338, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2352, %r2331, %r2345, %r2310;
	// end inline asm
	shl.b32 	%r2359, %r2352, 4;
	// begin inline asm
	lop3.b32 %r2356, %r2316, %r2348, %r2359, 202;
	// end inline asm
	xor.b32  	%r7835, %r2356, -2004318072;
	// begin inline asm
	mov.b32 %r2363, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2361, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2363, %r2361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2365, %r2219, %r2362;
	// end inline asm
	// begin inline asm
	mov.b32 %r2368, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2369, %r2363, %r2368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2372, %r2227, %r2369;
	// end inline asm
	// begin inline asm
	mov.b32 %r2375, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2376, %r2363, %r2375;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2379, %r2235, %r2376;
	// end inline asm
	// begin inline asm
	mov.b32 %r2382, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2383, %r2363, %r2382;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2386, %r2243, %r2383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2389, %r2365, %r2379, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2393, %r2372, %r2386, %r2310;
	// end inline asm
	shl.b32 	%r2400, %r2393, 4;
	// begin inline asm
	lop3.b32 %r2397, %r2316, %r2389, %r2400, 202;
	// end inline asm
	xor.b32  	%r7836, %r2397, -2004318072;
	// begin inline asm
	mov.b32 %r2404, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2402, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2403, %r2404, %r2402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2406, %r2251, %r2403;
	// end inline asm
	// begin inline asm
	mov.b32 %r2409, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2410, %r2404, %r2409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2413, %r2259, %r2410;
	// end inline asm
	// begin inline asm
	mov.b32 %r2416, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2417, %r2404, %r2416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2420, %r2267, %r2417;
	// end inline asm
	// begin inline asm
	mov.b32 %r2423, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2424, %r2404, %r2423;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2427, %r2275, %r2424;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2430, %r2406, %r2420, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2434, %r2413, %r2427, %r2310;
	// end inline asm
	shl.b32 	%r2441, %r2434, 4;
	// begin inline asm
	lop3.b32 %r2438, %r2316, %r2430, %r2441, 202;
	// end inline asm
	xor.b32  	%r7837, %r2438, -2004318072;
	add.s64 	%rd97, %rd155, %rd29;
	st.shared.u32 	[%rd97], %r7834;
	add.s64 	%rd98, %rd155, %rd28;
	st.shared.u32 	[%rd98], %r7835;
	add.s64 	%rd99, %rd155, %rd27;
	st.shared.u32 	[%rd99], %r7836;
	add.s64 	%rd100, %rd155, %rd26;
	st.shared.u32 	[%rd100], %r7837;
	ld.shared.u32 	%r7963, [%rd93];
	ld.shared.u32 	%r7964, [%rd94];
	ld.shared.u32 	%r7969, [%rd95];
	ld.shared.u32 	%r7970, [%rd96];
	// begin inline asm
	mov.b32 %r2447, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2458, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r2446, %r7963, -2004318072;
	// begin inline asm
	lop3.b32 %r2444, %r649, %r2446, %r2447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2448, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2449, %r2447, %r2448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2452, %r2444, %r2449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2455, %r660, %r2446, %r2458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2459, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2460, %r2458, %r2459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2463, %r2455, %r2460;
	// end inline asm
	shr.u32 	%r2468, %r2446, 8;
	// begin inline asm
	lop3.b32 %r2466, %r649, %r2468, %r2447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2470, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2471, %r2447, %r2470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2474, %r2466, %r2471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2477, %r660, %r2468, %r2458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2481, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2482, %r2458, %r2481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2485, %r2477, %r2482;
	// end inline asm
	// begin inline asm
	mov.b32 %r2493, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2504, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r2492, %r7964, -2004318072;
	// begin inline asm
	lop3.b32 %r2490, %r649, %r2492, %r2493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2494, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2495, %r2493, %r2494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2498, %r2490, %r2495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2501, %r660, %r2492, %r2504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2505, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2506, %r2504, %r2505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2509, %r2501, %r2506;
	// end inline asm
	shr.u32 	%r2514, %r2492, 8;
	// begin inline asm
	lop3.b32 %r2512, %r649, %r2514, %r2493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2516, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2517, %r2493, %r2516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2520, %r2512, %r2517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2523, %r660, %r2514, %r2504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2527, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2528, %r2504, %r2527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2531, %r2523, %r2528;
	// end inline asm
	// begin inline asm
	mov.b32 %r2539, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2550, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r2538, %r7969, -2004318072;
	// begin inline asm
	lop3.b32 %r2536, %r649, %r2538, %r2539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2540, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2541, %r2539, %r2540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2544, %r2536, %r2541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2547, %r660, %r2538, %r2550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2551, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2552, %r2550, %r2551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2555, %r2547, %r2552;
	// end inline asm
	shr.u32 	%r2560, %r2538, 8;
	// begin inline asm
	lop3.b32 %r2558, %r649, %r2560, %r2539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2562, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2563, %r2539, %r2562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2566, %r2558, %r2563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2569, %r660, %r2560, %r2550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2573, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2574, %r2550, %r2573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2577, %r2569, %r2574;
	// end inline asm
	// begin inline asm
	mov.b32 %r2585, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2596, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r2584, %r7970, -2004318072;
	// begin inline asm
	lop3.b32 %r2582, %r649, %r2584, %r2585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2586, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2587, %r2585, %r2586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2590, %r2582, %r2587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2593, %r660, %r2584, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2597, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2598, %r2596, %r2597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2601, %r2593, %r2598;
	// end inline asm
	shr.u32 	%r2606, %r2584, 8;
	// begin inline asm
	lop3.b32 %r2604, %r649, %r2606, %r2585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2608, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2609, %r2585, %r2608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2612, %r2604, %r2609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2615, %r660, %r2606, %r2596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2619, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2620, %r2596, %r2619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2623, %r2615, %r2620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2626, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2628, %r2626, %r2452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2631, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2633, %r2631, %r2463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2636, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2638, %r2636, %r2474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2641, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2643, %r2641, %r2485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2646, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2648, %r2646, %r2498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2651, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2653, %r2651, %r2509;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2656, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2658, %r2656, %r2520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2661, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2663, %r2661, %r2531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2666, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2668, %r2666, %r2544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2671, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2673, %r2671, %r2555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2676, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2678, %r2676, %r2566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2681, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2683, %r2681, %r2577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2686, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2688, %r2686, %r2590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2691, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2693, %r2691, %r2601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2696, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2698, %r2696, %r2612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2701, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2703, %r2701, %r2623;
	// end inline asm
	// begin inline asm
	mov.b32 %r2711, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2722, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2708, %r649, %r1162, %r2711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2712, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2713, %r2711, %r2712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2716, %r2708, %r2713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2719, %r660, %r1162, %r2722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2723, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2724, %r2722, %r2723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2727, %r2719, %r2724;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2730, %r649, %r1184, %r2711, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2734, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2735, %r2711, %r2734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2738, %r2730, %r2735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2741, %r660, %r1184, %r2722, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2745, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2746, %r2722, %r2745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2749, %r2741, %r2746;
	// end inline asm
	// begin inline asm
	mov.b32 %r2757, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2768, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2754, %r649, %r1208, %r2757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2758, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2759, %r2757, %r2758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2762, %r2754, %r2759;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2765, %r660, %r1208, %r2768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2769, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2770, %r2768, %r2769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2773, %r2765, %r2770;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2776, %r649, %r1230, %r2757, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2780, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2781, %r2757, %r2780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2784, %r2776, %r2781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2787, %r660, %r1230, %r2768, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2791, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2792, %r2768, %r2791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2795, %r2787, %r2792;
	// end inline asm
	// begin inline asm
	mov.b32 %r2803, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2814, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2800, %r649, %r1254, %r2803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2804, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2805, %r2803, %r2804;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2808, %r2800, %r2805;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2811, %r660, %r1254, %r2814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2815, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2816, %r2814, %r2815;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2819, %r2811, %r2816;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2822, %r649, %r1276, %r2803, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2826, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2827, %r2803, %r2826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2830, %r2822, %r2827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2833, %r660, %r1276, %r2814, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2837, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2838, %r2814, %r2837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2841, %r2833, %r2838;
	// end inline asm
	// begin inline asm
	mov.b32 %r2849, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2860, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2846, %r649, %r1300, %r2849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2850, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2851, %r2849, %r2850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2854, %r2846, %r2851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2857, %r660, %r1300, %r2860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2861, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2862, %r2860, %r2861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2865, %r2857, %r2862;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2868, %r649, %r1322, %r2849, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2872, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2873, %r2849, %r2872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2876, %r2868, %r2873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2879, %r660, %r1322, %r2860, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2883, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2884, %r2860, %r2883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2887, %r2879, %r2884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2890, %r199, %r2716, %r2628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2894, %r199, %r2727, %r2633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r199, %r2738, %r2638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2902, %r199, %r2749, %r2643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2906, %r199, %r2762, %r2648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r199, %r2773, %r2653;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2914, %r199, %r2784, %r2658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2918, %r199, %r2795, %r2663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2922, %r199, %r2808, %r2668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r199, %r2819, %r2673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2930, %r199, %r2830, %r2678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r199, %r2841, %r2683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2938, %r199, %r2854, %r2688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2942, %r199, %r2865, %r2693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r199, %r2876, %r2698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r199, %r2887, %r2703;
	// end inline asm
	// begin inline asm
	mov.b32 %r2959, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r2970, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2956, %r649, %r1442, %r2959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2960, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2961, %r2959, %r2960;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2964, %r2956, %r2961;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2967, %r660, %r1442, %r2970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2971, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2972, %r2970, %r2971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2975, %r2967, %r2972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2978, %r649, %r1464, %r2959, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2982, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2983, %r2959, %r2982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2986, %r2978, %r2983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2989, %r660, %r1464, %r2970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2993, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2994, %r2970, %r2993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2997, %r2989, %r2994;
	// end inline asm
	// begin inline asm
	mov.b32 %r3005, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3016, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3002, %r649, %r1488, %r3005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3006, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3007, %r3005, %r3006;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3010, %r3002, %r3007;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3013, %r660, %r1488, %r3016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3017, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3018, %r3016, %r3017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3021, %r3013, %r3018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3024, %r649, %r1510, %r3005, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3028, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3029, %r3005, %r3028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3032, %r3024, %r3029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3035, %r660, %r1510, %r3016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3039, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3040, %r3016, %r3039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3043, %r3035, %r3040;
	// end inline asm
	// begin inline asm
	mov.b32 %r3051, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3062, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3048, %r649, %r1534, %r3051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3052, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3053, %r3051, %r3052;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3056, %r3048, %r3053;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3059, %r660, %r1534, %r3062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3063, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3064, %r3062, %r3063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3067, %r3059, %r3064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3070, %r649, %r1556, %r3051, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3074, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3075, %r3051, %r3074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3078, %r3070, %r3075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3081, %r660, %r1556, %r3062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3085, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3086, %r3062, %r3085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3089, %r3081, %r3086;
	// end inline asm
	// begin inline asm
	mov.b32 %r3097, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3108, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3094, %r649, %r1580, %r3097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3098, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3099, %r3097, %r3098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3102, %r3094, %r3099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3105, %r660, %r1580, %r3108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3109, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3110, %r3108, %r3109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3113, %r3105, %r3110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3116, %r649, %r1602, %r3097, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3120, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3121, %r3097, %r3120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3124, %r3116, %r3121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3127, %r660, %r1602, %r3108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3131, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3132, %r3108, %r3131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3135, %r3127, %r3132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3138, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3140, %r3138, %r2964, %r2890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3144, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r3144, %r2975, %r2894;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3150, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r3150, %r2986, %r2898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3156, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r3156, %r2997, %r2902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3162, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r3162, %r3010, %r2906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3168, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3170, %r3168, %r3021, %r2910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3174, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3176, %r3174, %r3032, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3180, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r3180, %r3043, %r2918;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3186, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r3186, %r3056, %r2922;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3192, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3194, %r3192, %r3067, %r2926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3198, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r3198, %r3078, %r2930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3204, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3206, %r3204, %r3089, %r2934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3210, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3212, %r3210, %r3102, %r2938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3216, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3218, %r3216, %r3113, %r2942;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3222, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3224, %r3222, %r3124, %r2946;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3228, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3230, %r3228, %r3135, %r2950;
	// end inline asm
	// begin inline asm
	mov.b32 %r3239, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3250, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3236, %r649, %r650, %r3239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3240, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3241, %r3239, %r3240;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3244, %r3236, %r3241;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3247, %r660, %r650, %r3250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3251, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3252, %r3250, %r3251;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3255, %r3247, %r3252;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3258, %r649, %r672, %r3239, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3262, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3263, %r3239, %r3262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3266, %r3258, %r3263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3269, %r660, %r672, %r3250, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3273, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3274, %r3250, %r3273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3277, %r3269, %r3274;
	// end inline asm
	// begin inline asm
	mov.b32 %r3285, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3296, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3282, %r649, %r696, %r3285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3286, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3287, %r3285, %r3286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3290, %r3282, %r3287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3293, %r660, %r696, %r3296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3297, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3298, %r3296, %r3297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3301, %r3293, %r3298;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3304, %r649, %r718, %r3285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3308, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3309, %r3285, %r3308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3312, %r3304, %r3309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3315, %r660, %r718, %r3296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3319, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3320, %r3296, %r3319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3323, %r3315, %r3320;
	// end inline asm
	// begin inline asm
	mov.b32 %r3331, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3342, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3328, %r649, %r742, %r3331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3332, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3333, %r3331, %r3332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3336, %r3328, %r3333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3339, %r660, %r742, %r3342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3343, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3344, %r3342, %r3343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3347, %r3339, %r3344;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3350, %r649, %r764, %r3331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3354, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3355, %r3331, %r3354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3358, %r3350, %r3355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3361, %r660, %r764, %r3342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3365, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3366, %r3342, %r3365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3369, %r3361, %r3366;
	// end inline asm
	// begin inline asm
	mov.b32 %r3377, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r3388, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3374, %r649, %r788, %r3377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3378, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3379, %r3377, %r3378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3382, %r3374, %r3379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3385, %r660, %r788, %r3388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3389, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3390, %r3388, %r3389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3393, %r3385, %r3390;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3396, %r649, %r810, %r3377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3400, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3401, %r3377, %r3400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3404, %r3396, %r3401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3407, %r660, %r810, %r3388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3411, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3412, %r3388, %r3411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3415, %r3407, %r3412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r235, %r3244, %r3140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3486, %r235, %r3255, %r3146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3498, %r235, %r3266, %r3152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r235, %r3277, %r3158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3507, %r235, %r3290, %r3164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r235, %r3301, %r3170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3516, %r235, %r3312, %r3176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r235, %r3323, %r3182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3525, %r235, %r3336, %r3188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r235, %r3347, %r3194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r235, %r3358, %r3200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r235, %r3369, %r3206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3543, %r235, %r3382, %r3212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r235, %r3393, %r3218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r235, %r3404, %r3224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r235, %r3415, %r3230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3482, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r3482, %r3486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r256, %r3489, %r3484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3491, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r3491, %r3495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r256, %r3498, %r3493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3500, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r3500, %r3504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r256, %r3507, %r3502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3509, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r3509, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r256, %r3516, %r3511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3518, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3520, %r3518, %r3522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r256, %r3525, %r3520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3527, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r3527, %r3531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r256, %r3534, %r3529;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3536, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r3536, %r3540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r256, %r3543, %r3538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3545, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3547, %r3545, %r3549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3550, %r256, %r3552, %r3547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3554, %r259, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3557, %r256, %r3486, %r3554;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3561, %r259, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3564, %r256, %r3495, %r3561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3568, %r259, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3571, %r256, %r3504, %r3568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3575, %r259, %r3516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3578, %r256, %r3513, %r3575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3582, %r259, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3585, %r256, %r3522, %r3582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3589, %r259, %r3534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3592, %r256, %r3531, %r3589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3596, %r259, %r3543;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3599, %r256, %r3540, %r3596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3603, %r259, %r3552;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3606, %r256, %r3549, %r3603;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3697, %r3694}, {%r315, %r321, %r318, %r324}, {%r3487, %r3557}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3706, %r3703}, {%r315, %r321, %r318, %r324}, {%r3496, %r3564}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3715, %r3712}, {%r315, %r321, %r318, %r324}, {%r3505, %r3571}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3724, %r3721}, {%r315, %r321, %r318, %r324}, {%r3514, %r3578}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3733, %r3730}, {%r315, %r321, %r318, %r324}, {%r3523, %r3585}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3742, %r3739}, {%r315, %r321, %r318, %r324}, {%r3532, %r3592}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3751, %r3748}, {%r315, %r321, %r318, %r324}, {%r3541, %r3599}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3760, %r3757}, {%r315, %r321, %r318, %r324}, {%r3550, %r3606}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3690, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3692, %r3690, %r3694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3695, %r359, %r3697, %r3692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3699, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3701, %r3699, %r3703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3704, %r359, %r3706, %r3701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3708, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3710, %r3708, %r3712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3713, %r359, %r3715, %r3710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3717, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3719, %r3717, %r3721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3722, %r359, %r3724, %r3719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3726, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3728, %r3726, %r3730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3731, %r359, %r3733, %r3728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3735, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3737, %r3735, %r3739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3740, %r359, %r3742, %r3737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3744, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3746, %r3744, %r3748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3749, %r359, %r3751, %r3746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3753, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3755, %r3753, %r3757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3758, %r359, %r3760, %r3755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3762, %r362, %r3697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3765, %r359, %r3694, %r3762;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3769, %r362, %r3706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3772, %r359, %r3703, %r3769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3776, %r362, %r3715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3779, %r359, %r3712, %r3776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3783, %r362, %r3724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3786, %r359, %r3721, %r3783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3790, %r362, %r3733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3793, %r359, %r3730, %r3790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3797, %r362, %r3742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3800, %r359, %r3739, %r3797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3804, %r362, %r3751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3807, %r359, %r3748, %r3804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3811, %r362, %r3760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3814, %r359, %r3757, %r3811;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3818, %r3819}, {%r393, %r399, %r396, %r402}, {%r3695, %r3765}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3828, %r3829}, {%r393, %r399, %r396, %r402}, {%r3704, %r3772}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3838, %r3839}, {%r393, %r399, %r396, %r402}, {%r3713, %r3779}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3848, %r3849}, {%r393, %r399, %r396, %r402}, {%r3722, %r3786}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3858, %r3859}, {%r393, %r399, %r396, %r402}, {%r3731, %r3793}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3869}, {%r393, %r399, %r396, %r402}, {%r3740, %r3800}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3878, %r3879}, {%r393, %r399, %r396, %r402}, {%r3749, %r3807}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3888, %r3889}, {%r393, %r399, %r396, %r402}, {%r3758, %r3814}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3898, %r103, %r3818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3901, %r103, %r3819;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3904, %r103, %r3828;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3907, %r103, %r3829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3910, %r103, %r3838;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3913, %r103, %r3839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3916, %r103, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3919, %r103, %r3849;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3922, %r103, %r3858;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3925, %r103, %r3859;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3928, %r103, %r3868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3931, %r103, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3934, %r103, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r103, %r3879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r103, %r3888;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r103, %r3889;
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3948, %r3898, %r3946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3951, %r3948, %r3947;
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3956, %r3901, %r3954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3959, %r3956, %r3955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3964, %r3904, %r3962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3967, %r3964, %r3963;
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3972, %r3907, %r3970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3975, %r3972, %r3971;
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3980, %r3910, %r3978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3983, %r3980, %r3979;
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3987, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3988, %r3913, %r3986;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3991, %r3988, %r3987;
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r3995, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3996, %r3916, %r3994;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3999, %r3996, %r3995;
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4003, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4004, %r3919, %r4002;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4007, %r4004, %r4003;
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4011, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4012, %r3922, %r4010;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4015, %r4012, %r4011;
	// end inline asm
	// begin inline asm
	mov.b32 %r4018, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4019, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4020, %r3925, %r4018;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4023, %r4020, %r4019;
	// end inline asm
	// begin inline asm
	mov.b32 %r4026, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4027, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4028, %r3928, %r4026;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4031, %r4028, %r4027;
	// end inline asm
	// begin inline asm
	mov.b32 %r4034, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4035, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4036, %r3931, %r4034;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4039, %r4036, %r4035;
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4043, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4044, %r3934, %r4042;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4047, %r4044, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4050, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4052, %r3937, %r4050;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4055, %r4052, %r4051;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4059, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4060, %r3940, %r4058;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4063, %r4060, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4066, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r4067, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4068, %r3943, %r4066;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4071, %r4068, %r4067;
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4075, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4076, %r4077, %r4075;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4079, %r3951, %r4076;
	// end inline asm
	// begin inline asm
	mov.b32 %r4082, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4083, %r4077, %r4082;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4086, %r3959, %r4083;
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4090, %r4077, %r4089;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4093, %r3967, %r4090;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4097, %r4077, %r4096;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r3975, %r4097;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4103, %r4079, %r4093, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4107, %r4086, %r4100, %r2310;
	// end inline asm
	shl.b32 	%r4114, %r4107, 4;
	// begin inline asm
	lop3.b32 %r4111, %r2316, %r4103, %r4114, 202;
	// end inline asm
	xor.b32  	%r7838, %r4111, -2004318072;
	// begin inline asm
	mov.b32 %r4118, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r4118, %r4116;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4120, %r3983, %r4117;
	// end inline asm
	// begin inline asm
	mov.b32 %r4123, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4124, %r4118, %r4123;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4127, %r3991, %r4124;
	// end inline asm
	// begin inline asm
	mov.b32 %r4130, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4131, %r4118, %r4130;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4134, %r3999, %r4131;
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4138, %r4118, %r4137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r4007, %r4138;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4144, %r4120, %r4134, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4148, %r4127, %r4141, %r2310;
	// end inline asm
	shl.b32 	%r4155, %r4148, 4;
	// begin inline asm
	lop3.b32 %r4152, %r2316, %r4144, %r4155, 202;
	// end inline asm
	xor.b32  	%r7839, %r4152, -2004318072;
	// begin inline asm
	mov.b32 %r4159, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4159, %r4157;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4161, %r4015, %r4158;
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4165, %r4159, %r4164;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4168, %r4023, %r4165;
	// end inline asm
	// begin inline asm
	mov.b32 %r4171, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4172, %r4159, %r4171;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4175, %r4031, %r4172;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4179, %r4159, %r4178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4182, %r4039, %r4179;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4185, %r4161, %r4175, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4189, %r4168, %r4182, %r2310;
	// end inline asm
	shl.b32 	%r4196, %r4189, 4;
	// begin inline asm
	lop3.b32 %r4193, %r2316, %r4185, %r4196, 202;
	// end inline asm
	xor.b32  	%r7840, %r4193, -2004318072;
	// begin inline asm
	mov.b32 %r4200, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4199, %r4200, %r4198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4202, %r4047, %r4199;
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4206, %r4200, %r4205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4209, %r4055, %r4206;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4213, %r4200, %r4212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4216, %r4063, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4219, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4220, %r4200, %r4219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4223, %r4071, %r4220;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4226, %r4202, %r4216, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4230, %r4209, %r4223, %r2310;
	// end inline asm
	shl.b32 	%r4237, %r4230, 4;
	// begin inline asm
	lop3.b32 %r4234, %r2316, %r4226, %r4237, 202;
	// end inline asm
	xor.b32  	%r7841, %r4234, -2004318072;
	st.shared.u32 	[%rd97], %r7838;
	st.shared.u32 	[%rd98], %r7839;
	st.shared.u32 	[%rd99], %r7840;
	st.shared.u32 	[%rd100], %r7841;
	ld.shared.u32 	%r7965, [%rd93];
	ld.shared.u32 	%r7966, [%rd94];
	ld.shared.u32 	%r7971, [%rd95];
	ld.shared.u32 	%r7972, [%rd96];
	// begin inline asm
	mov.b32 %r4243, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r4242, %r7965, -2004318072;
	// begin inline asm
	lop3.b32 %r4240, %r649, %r4242, %r4243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4245, %r4243, %r4244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4248, %r4240, %r4245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4251, %r660, %r4242, %r4254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4256, %r4254, %r4255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4259, %r4251, %r4256;
	// end inline asm
	shr.u32 	%r4264, %r4242, 8;
	// begin inline asm
	lop3.b32 %r4262, %r649, %r4264, %r4243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4266, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4267, %r4243, %r4266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4270, %r4262, %r4267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4273, %r660, %r4264, %r4254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4278, %r4254, %r4277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4281, %r4273, %r4278;
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4300, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r4288, %r7966, -2004318072;
	// begin inline asm
	lop3.b32 %r4286, %r649, %r4288, %r4289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4290, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4291, %r4289, %r4290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4294, %r4286, %r4291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4297, %r660, %r4288, %r4300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4301, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4302, %r4300, %r4301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4305, %r4297, %r4302;
	// end inline asm
	shr.u32 	%r4310, %r4288, 8;
	// begin inline asm
	lop3.b32 %r4308, %r649, %r4310, %r4289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4313, %r4289, %r4312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4316, %r4308, %r4313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4319, %r660, %r4310, %r4300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4324, %r4300, %r4323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4327, %r4319, %r4324;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4346, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r4334, %r7971, -2004318072;
	// begin inline asm
	lop3.b32 %r4332, %r649, %r4334, %r4335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4337, %r4335, %r4336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4340, %r4332, %r4337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4343, %r660, %r4334, %r4346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4348, %r4346, %r4347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4351, %r4343, %r4348;
	// end inline asm
	shr.u32 	%r4356, %r4334, 8;
	// begin inline asm
	lop3.b32 %r4354, %r649, %r4356, %r4335, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4359, %r4335, %r4358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4362, %r4354, %r4359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4365, %r660, %r4356, %r4346, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4346, %r4369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4373, %r4365, %r4370;
	// end inline asm
	// begin inline asm
	mov.b32 %r4381, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r4380, %r7972, -2004318072;
	// begin inline asm
	lop3.b32 %r4378, %r649, %r4380, %r4381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4382, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4383, %r4381, %r4382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4386, %r4378, %r4383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4389, %r660, %r4380, %r4392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4392, %r4393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4397, %r4389, %r4394;
	// end inline asm
	shr.u32 	%r4402, %r4380, 8;
	// begin inline asm
	lop3.b32 %r4400, %r649, %r4402, %r4381, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4404, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4405, %r4381, %r4404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4408, %r4400, %r4405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4411, %r660, %r4402, %r4392, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4392, %r4415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4419, %r4411, %r4416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4422, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4424, %r4422, %r4248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4427, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4429, %r4427, %r4259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4432, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4434, %r4432, %r4270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4437, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4439, %r4437, %r4281;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4442, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4444, %r4442, %r4294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4447, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4449, %r4447, %r4305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4452, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4454, %r4452, %r4316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4457, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4459, %r4457, %r4327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4462, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4464, %r4462, %r4340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4467, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4469, %r4467, %r4351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4472, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4474, %r4472, %r4362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4477, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4479, %r4477, %r4373;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4482, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4484, %r4482, %r4386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4487, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4489, %r4487, %r4397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4492, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4494, %r4492, %r4408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4497, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4499, %r4497, %r4419;
	// end inline asm
	// begin inline asm
	mov.b32 %r4507, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4518, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4504, %r649, %r1442, %r4507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4507, %r4508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4512, %r4504, %r4509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4515, %r660, %r1442, %r4518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4519, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4518, %r4519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4523, %r4515, %r4520;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4526, %r649, %r1464, %r4507, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4507, %r4530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4534, %r4526, %r4531;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4537, %r660, %r1464, %r4518, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4541, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4542, %r4518, %r4541;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4545, %r4537, %r4542;
	// end inline asm
	// begin inline asm
	mov.b32 %r4553, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4550, %r649, %r1488, %r4553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4554, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4555, %r4553, %r4554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4558, %r4550, %r4555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4561, %r660, %r1488, %r4564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4565, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4566, %r4564, %r4565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4569, %r4561, %r4566;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4572, %r649, %r1510, %r4553, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4576, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4577, %r4553, %r4576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4580, %r4572, %r4577;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4583, %r660, %r1510, %r4564, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4587, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4588, %r4564, %r4587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4591, %r4583, %r4588;
	// end inline asm
	// begin inline asm
	mov.b32 %r4599, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4610, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4596, %r649, %r1534, %r4599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4600, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4599, %r4600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4604, %r4596, %r4601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4607, %r660, %r1534, %r4610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4611, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4610, %r4611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4615, %r4607, %r4612;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4618, %r649, %r1556, %r4599, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4622, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4623, %r4599, %r4622;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4626, %r4618, %r4623;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4629, %r660, %r1556, %r4610, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4633, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4634, %r4610, %r4633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4637, %r4629, %r4634;
	// end inline asm
	// begin inline asm
	mov.b32 %r4645, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4656, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4642, %r649, %r1580, %r4645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4647, %r4645, %r4646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4650, %r4642, %r4647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4653, %r660, %r1580, %r4656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4657, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4658, %r4656, %r4657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4661, %r4653, %r4658;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4664, %r649, %r1602, %r4645, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4668, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4669, %r4645, %r4668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4672, %r4664, %r4669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4675, %r660, %r1602, %r4656, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4679, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4680, %r4656, %r4679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4683, %r4675, %r4680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4686, %r199, %r4512, %r4424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4690, %r199, %r4523, %r4429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4694, %r199, %r4534, %r4434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4698, %r199, %r4545, %r4439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4702, %r199, %r4558, %r4444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4706, %r199, %r4569, %r4449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4710, %r199, %r4580, %r4454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4714, %r199, %r4591, %r4459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4718, %r199, %r4604, %r4464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4722, %r199, %r4615, %r4469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4726, %r199, %r4626, %r4474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4730, %r199, %r4637, %r4479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4734, %r199, %r4650, %r4484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4738, %r199, %r4661, %r4489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4742, %r199, %r4672, %r4494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4746, %r199, %r4683, %r4499;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4752, %r649, %r650, %r4755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4757, %r4755, %r4756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4760, %r4752, %r4757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4763, %r660, %r650, %r4766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4768, %r4766, %r4767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4771, %r4763, %r4768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4774, %r649, %r672, %r4755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4779, %r4755, %r4778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4782, %r4774, %r4779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4785, %r660, %r672, %r4766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4790, %r4766, %r4789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4793, %r4785, %r4790;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4798, %r649, %r696, %r4801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4803, %r4801, %r4802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4806, %r4798, %r4803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4809, %r660, %r696, %r4812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4814, %r4812, %r4813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4817, %r4809, %r4814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4820, %r649, %r718, %r4801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4825, %r4801, %r4824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4828, %r4820, %r4825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4831, %r660, %r718, %r4812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4836, %r4812, %r4835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4839, %r4831, %r4836;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4844, %r649, %r742, %r4847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4849, %r4847, %r4848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4852, %r4844, %r4849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4855, %r660, %r742, %r4858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4860, %r4858, %r4859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4863, %r4855, %r4860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4866, %r649, %r764, %r4847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4871, %r4847, %r4870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4874, %r4866, %r4871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4877, %r660, %r764, %r4858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4882, %r4858, %r4881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4885, %r4877, %r4882;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4890, %r649, %r788, %r4893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4895, %r4893, %r4894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4898, %r4890, %r4895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4901, %r660, %r788, %r4904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4906, %r4904, %r4905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4909, %r4901, %r4906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4912, %r649, %r810, %r4893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4917, %r4893, %r4916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4920, %r4912, %r4917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4923, %r660, %r810, %r4904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4928, %r4904, %r4927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4931, %r4923, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4934, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4936, %r4934, %r4760, %r4686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4940, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4942, %r4940, %r4771, %r4690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4946, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4948, %r4946, %r4782, %r4694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4952, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4954, %r4952, %r4793, %r4698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4958, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4960, %r4958, %r4806, %r4702;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4964, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4966, %r4964, %r4817, %r4706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4970, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4972, %r4970, %r4828, %r4710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4976, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4978, %r4976, %r4839, %r4714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4982, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4984, %r4982, %r4852, %r4718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4988, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4990, %r4988, %r4863, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4994, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4996, %r4994, %r4874, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5000, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5002, %r5000, %r4885, %r4730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5006, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5008, %r5006, %r4898, %r4734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5012, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5014, %r5012, %r4909, %r4738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5018, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5020, %r5018, %r4920, %r4742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5024, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5026, %r5024, %r4931, %r4746;
	// end inline asm
	// begin inline asm
	mov.b32 %r5035, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5046, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5032, %r649, %r2446, %r5035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5036, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5037, %r5035, %r5036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5040, %r5032, %r5037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5043, %r660, %r2446, %r5046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5047, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5048, %r5046, %r5047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5051, %r5043, %r5048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5054, %r649, %r2468, %r5035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5058, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5059, %r5035, %r5058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5062, %r5054, %r5059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5065, %r660, %r2468, %r5046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5069, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5070, %r5046, %r5069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5073, %r5065, %r5070;
	// end inline asm
	// begin inline asm
	mov.b32 %r5081, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5092, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5078, %r649, %r2492, %r5081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5082, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5083, %r5081, %r5082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5086, %r5078, %r5083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5089, %r660, %r2492, %r5092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5093, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5094, %r5092, %r5093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5097, %r5089, %r5094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5100, %r649, %r2514, %r5081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5104, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5105, %r5081, %r5104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5108, %r5100, %r5105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5111, %r660, %r2514, %r5092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5115, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5116, %r5092, %r5115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5119, %r5111, %r5116;
	// end inline asm
	// begin inline asm
	mov.b32 %r5127, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5138, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5124, %r649, %r2538, %r5127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5128, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5129, %r5127, %r5128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5132, %r5124, %r5129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5135, %r660, %r2538, %r5138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5139, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5140, %r5138, %r5139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5143, %r5135, %r5140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5146, %r649, %r2560, %r5127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5150, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5151, %r5127, %r5150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5154, %r5146, %r5151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5157, %r660, %r2560, %r5138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5161, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5162, %r5138, %r5161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5165, %r5157, %r5162;
	// end inline asm
	// begin inline asm
	mov.b32 %r5173, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5184, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5170, %r649, %r2584, %r5173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5174, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5175, %r5173, %r5174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5178, %r5170, %r5175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5181, %r660, %r2584, %r5184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5185, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5186, %r5184, %r5185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5189, %r5181, %r5186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5192, %r649, %r2606, %r5173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5196, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5197, %r5173, %r5196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5200, %r5192, %r5197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5203, %r660, %r2606, %r5184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5207, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5208, %r5184, %r5207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5211, %r5203, %r5208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5285, %r235, %r5040, %r4936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5282, %r235, %r5051, %r4942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5294, %r235, %r5062, %r4948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5291, %r235, %r5073, %r4954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5303, %r235, %r5086, %r4960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5300, %r235, %r5097, %r4966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5312, %r235, %r5108, %r4972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5309, %r235, %r5119, %r4978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5321, %r235, %r5132, %r4984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5318, %r235, %r5143, %r4990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5330, %r235, %r5154, %r4996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5327, %r235, %r5165, %r5002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5339, %r235, %r5178, %r5008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5336, %r235, %r5189, %r5014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5348, %r235, %r5200, %r5020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5345, %r235, %r5211, %r5026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5278, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5280, %r5278, %r5282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5283, %r256, %r5285, %r5280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5287, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5289, %r5287, %r5291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5292, %r256, %r5294, %r5289;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5296, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5298, %r5296, %r5300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5301, %r256, %r5303, %r5298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5305, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5307, %r5305, %r5309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5310, %r256, %r5312, %r5307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5314, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5316, %r5314, %r5318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5319, %r256, %r5321, %r5316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5323, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5325, %r5323, %r5327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5328, %r256, %r5330, %r5325;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5332, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5334, %r5332, %r5336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5337, %r256, %r5339, %r5334;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5341, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5343, %r5341, %r5345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5346, %r256, %r5348, %r5343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5350, %r259, %r5285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5353, %r256, %r5282, %r5350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5357, %r259, %r5294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5360, %r256, %r5291, %r5357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5364, %r259, %r5303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5367, %r256, %r5300, %r5364;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5371, %r259, %r5312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5374, %r256, %r5309, %r5371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5378, %r259, %r5321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5381, %r256, %r5318, %r5378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5385, %r259, %r5330;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5388, %r256, %r5327, %r5385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5392, %r259, %r5339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5395, %r256, %r5336, %r5392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5399, %r259, %r5348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5402, %r256, %r5345, %r5399;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5493, %r5490}, {%r315, %r321, %r318, %r324}, {%r5283, %r5353}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5502, %r5499}, {%r315, %r321, %r318, %r324}, {%r5292, %r5360}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5511, %r5508}, {%r315, %r321, %r318, %r324}, {%r5301, %r5367}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5520, %r5517}, {%r315, %r321, %r318, %r324}, {%r5310, %r5374}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5529, %r5526}, {%r315, %r321, %r318, %r324}, {%r5319, %r5381}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5538, %r5535}, {%r315, %r321, %r318, %r324}, {%r5328, %r5388}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5547, %r5544}, {%r315, %r321, %r318, %r324}, {%r5337, %r5395}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5556, %r5553}, {%r315, %r321, %r318, %r324}, {%r5346, %r5402}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5486, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5488, %r5486, %r5490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5491, %r359, %r5493, %r5488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5495, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5497, %r5495, %r5499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5500, %r359, %r5502, %r5497;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5504, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5506, %r5504, %r5508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5509, %r359, %r5511, %r5506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5513, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5515, %r5513, %r5517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5518, %r359, %r5520, %r5515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5522, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5524, %r5522, %r5526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5527, %r359, %r5529, %r5524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5531, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5533, %r5531, %r5535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5536, %r359, %r5538, %r5533;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5540, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5542, %r5540, %r5544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5545, %r359, %r5547, %r5542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5549, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5551, %r5549, %r5553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5554, %r359, %r5556, %r5551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5558, %r362, %r5493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5561, %r359, %r5490, %r5558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5565, %r362, %r5502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r359, %r5499, %r5565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5572, %r362, %r5511;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r359, %r5508, %r5572;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5579, %r362, %r5520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r359, %r5517, %r5579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5586, %r362, %r5529;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5589, %r359, %r5526, %r5586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5593, %r362, %r5538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r359, %r5535, %r5593;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5600, %r362, %r5547;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r359, %r5544, %r5600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5607, %r362, %r5556;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r359, %r5553, %r5607;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5614, %r5615}, {%r393, %r399, %r396, %r402}, {%r5491, %r5561}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5624, %r5625}, {%r393, %r399, %r396, %r402}, {%r5500, %r5568}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5634, %r5635}, {%r393, %r399, %r396, %r402}, {%r5509, %r5575}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5644, %r5645}, {%r393, %r399, %r396, %r402}, {%r5518, %r5582}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5654, %r5655}, {%r393, %r399, %r396, %r402}, {%r5527, %r5589}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5664, %r5665}, {%r393, %r399, %r396, %r402}, {%r5536, %r5596}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5674, %r5675}, {%r393, %r399, %r396, %r402}, {%r5545, %r5603}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5684, %r5685}, {%r393, %r399, %r396, %r402}, {%r5554, %r5610}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5694, %r103, %r5614;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5697, %r103, %r5615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5700, %r103, %r5624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5703, %r103, %r5625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5706, %r103, %r5634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5709, %r103, %r5635;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5712, %r103, %r5644;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5715, %r103, %r5645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5718, %r103, %r5654;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5721, %r103, %r5655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5724, %r103, %r5664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5727, %r103, %r5665;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5730, %r103, %r5674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5733, %r103, %r5675;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5736, %r103, %r5684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5739, %r103, %r5685;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5744, %r5694, %r5742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5747, %r5744, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5752, %r5697, %r5750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5755, %r5752, %r5751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5760, %r5700, %r5758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5763, %r5760, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5768, %r5703, %r5766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5771, %r5768, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5776, %r5706, %r5774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5779, %r5776, %r5775;
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5784, %r5709, %r5782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5787, %r5784, %r5783;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5792, %r5712, %r5790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5795, %r5792, %r5791;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5800, %r5715, %r5798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5803, %r5800, %r5799;
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5807, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5808, %r5718, %r5806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5811, %r5808, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5814, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5816, %r5721, %r5814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5819, %r5816, %r5815;
	// end inline asm
	// begin inline asm
	mov.b32 %r5822, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5824, %r5724, %r5822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5827, %r5824, %r5823;
	// end inline asm
	// begin inline asm
	mov.b32 %r5830, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5832, %r5727, %r5830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5835, %r5832, %r5831;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5839, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5840, %r5730, %r5838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5843, %r5840, %r5839;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5848, %r5733, %r5846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5851, %r5848, %r5847;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5856, %r5736, %r5854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5859, %r5856, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r5863, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5864, %r5739, %r5862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5867, %r5864, %r5863;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5873, %r5871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5875, %r5747, %r5872;
	// end inline asm
	// begin inline asm
	mov.b32 %r5878, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5879, %r5873, %r5878;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5882, %r5755, %r5879;
	// end inline asm
	// begin inline asm
	mov.b32 %r5885, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5886, %r5873, %r5885;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5763, %r5886;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5893, %r5873, %r5892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5771, %r5893;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5899, %r5875, %r5889, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5903, %r5882, %r5896, %r2310;
	// end inline asm
	shl.b32 	%r5910, %r5903, 4;
	// begin inline asm
	lop3.b32 %r5907, %r2316, %r5899, %r5910, 202;
	// end inline asm
	xor.b32  	%r7842, %r5907, -2004318072;
	// begin inline asm
	mov.b32 %r5914, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5914, %r5912;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5916, %r5779, %r5913;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5914, %r5919;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5923, %r5787, %r5920;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5914, %r5926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5930, %r5795, %r5927;
	// end inline asm
	// begin inline asm
	mov.b32 %r5933, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5934, %r5914, %r5933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5803, %r5934;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5940, %r5916, %r5930, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5944, %r5923, %r5937, %r2310;
	// end inline asm
	shl.b32 	%r5951, %r5944, 4;
	// begin inline asm
	lop3.b32 %r5948, %r2316, %r5940, %r5951, 202;
	// end inline asm
	xor.b32  	%r7843, %r5948, -2004318072;
	// begin inline asm
	mov.b32 %r5955, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5955, %r5953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5957, %r5811, %r5954;
	// end inline asm
	// begin inline asm
	mov.b32 %r5960, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5961, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5964, %r5819, %r5961;
	// end inline asm
	// begin inline asm
	mov.b32 %r5967, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5968, %r5955, %r5967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5971, %r5827, %r5968;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5955, %r5974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5978, %r5835, %r5975;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5981, %r5957, %r5971, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5985, %r5964, %r5978, %r2310;
	// end inline asm
	shl.b32 	%r5992, %r5985, 4;
	// begin inline asm
	lop3.b32 %r5989, %r2316, %r5981, %r5992, 202;
	// end inline asm
	xor.b32  	%r7844, %r5989, -2004318072;
	// begin inline asm
	mov.b32 %r5996, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5996, %r5994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5843, %r5995;
	// end inline asm
	// begin inline asm
	mov.b32 %r6001, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6002, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r5851, %r6002;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r5996, %r6008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r5859, %r6009;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r5996, %r6015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r5867, %r6016;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6022, %r5998, %r6012, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6026, %r6005, %r6019, %r2310;
	// end inline asm
	shl.b32 	%r6033, %r6026, 4;
	// begin inline asm
	lop3.b32 %r6030, %r2316, %r6022, %r6033, 202;
	// end inline asm
	xor.b32  	%r7845, %r6030, -2004318072;
	st.shared.u32 	[%rd97], %r7842;
	st.shared.u32 	[%rd98], %r7843;
	st.shared.u32 	[%rd99], %r7844;
	st.shared.u32 	[%rd100], %r7845;
	ld.shared.u32 	%r7967, [%rd93];
	ld.shared.u32 	%r7968, [%rd94];
	ld.shared.u32 	%r7973, [%rd95];
	ld.shared.u32 	%r7974, [%rd96];
	// begin inline asm
	mov.b32 %r6039, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6050, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r6038, %r7967, -2004318072;
	// begin inline asm
	lop3.b32 %r6036, %r649, %r6038, %r6039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6039, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r660, %r6038, %r6050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6050, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	shr.u32 	%r6060, %r6038, 8;
	// begin inline asm
	lop3.b32 %r6058, %r649, %r6060, %r6039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6062, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6063, %r6039, %r6062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6066, %r6058, %r6063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6069, %r660, %r6060, %r6050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6073, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6074, %r6050, %r6073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6077, %r6069, %r6074;
	// end inline asm
	// begin inline asm
	mov.b32 %r6085, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6096, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r6084, %r7968, -2004318072;
	// begin inline asm
	lop3.b32 %r6082, %r649, %r6084, %r6085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6086, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6087, %r6085, %r6086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6090, %r6082, %r6087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6093, %r660, %r6084, %r6096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6097, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6098, %r6096, %r6097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6101, %r6093, %r6098;
	// end inline asm
	shr.u32 	%r6106, %r6084, 8;
	// begin inline asm
	lop3.b32 %r6104, %r649, %r6106, %r6085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6108, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6109, %r6085, %r6108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6112, %r6104, %r6109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6115, %r660, %r6106, %r6096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6119, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6120, %r6096, %r6119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6123, %r6115, %r6120;
	// end inline asm
	// begin inline asm
	mov.b32 %r6131, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6142, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r6130, %r7973, -2004318072;
	// begin inline asm
	lop3.b32 %r6128, %r649, %r6130, %r6131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6132, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6133, %r6131, %r6132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6136, %r6128, %r6133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6139, %r660, %r6130, %r6142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6143, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6144, %r6142, %r6143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6147, %r6139, %r6144;
	// end inline asm
	shr.u32 	%r6152, %r6130, 8;
	// begin inline asm
	lop3.b32 %r6150, %r649, %r6152, %r6131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6154, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6155, %r6131, %r6154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6158, %r6150, %r6155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6161, %r660, %r6152, %r6142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6165, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6166, %r6142, %r6165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6169, %r6161, %r6166;
	// end inline asm
	// begin inline asm
	mov.b32 %r6177, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6188, {%rs1088, %rs1088};
	// end inline asm
	xor.b32  	%r6176, %r7974, -2004318072;
	// begin inline asm
	lop3.b32 %r6174, %r649, %r6176, %r6177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6178, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6179, %r6177, %r6178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6182, %r6174, %r6179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6185, %r660, %r6176, %r6188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6189, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6190, %r6188, %r6189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6193, %r6185, %r6190;
	// end inline asm
	shr.u32 	%r6198, %r6176, 8;
	// begin inline asm
	lop3.b32 %r6196, %r649, %r6198, %r6177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6200, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6201, %r6177, %r6200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6204, %r6196, %r6201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6207, %r660, %r6198, %r6188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6211, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6212, %r6188, %r6211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6215, %r6207, %r6212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6220, %r6218, %r6044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6225, %r6223, %r6055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6230, %r6228, %r6066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6235, %r6233, %r6077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6238, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6240, %r6238, %r6090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6243, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6245, %r6243, %r6101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6250, %r6248, %r6112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6253, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6255, %r6253, %r6123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6258, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6260, %r6258, %r6136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6263, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6265, %r6263, %r6147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6268, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6270, %r6268, %r6158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6273, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6275, %r6273, %r6169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6280, %r6278, %r6182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6283, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6285, %r6283, %r6193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6288, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6290, %r6288, %r6204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6293, %r253;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6295, %r6293, %r6215;
	// end inline asm
	// begin inline asm
	mov.b32 %r6303, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6300, %r649, %r650, %r6303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6305, %r6303, %r6304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6308, %r6300, %r6305;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6311, %r660, %r650, %r6314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6316, %r6314, %r6315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6319, %r6311, %r6316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6322, %r649, %r672, %r6303, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6327, %r6303, %r6326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6330, %r6322, %r6327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6333, %r660, %r672, %r6314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6338, %r6314, %r6337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6341, %r6333, %r6338;
	// end inline asm
	// begin inline asm
	mov.b32 %r6349, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6346, %r649, %r696, %r6349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6351, %r6349, %r6350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6354, %r6346, %r6351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r660, %r696, %r6360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6360, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6368, %r649, %r718, %r6349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6373, %r6349, %r6372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6376, %r6368, %r6373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6379, %r660, %r718, %r6360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6384, %r6360, %r6383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6387, %r6379, %r6384;
	// end inline asm
	// begin inline asm
	mov.b32 %r6395, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6392, %r649, %r742, %r6395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6397, %r6395, %r6396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6400, %r6392, %r6397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6403, %r660, %r742, %r6406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6408, %r6406, %r6407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6411, %r6403, %r6408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6414, %r649, %r764, %r6395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6419, %r6395, %r6418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6422, %r6414, %r6419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6425, %r660, %r764, %r6406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6430, %r6406, %r6429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6433, %r6425, %r6430;
	// end inline asm
	// begin inline asm
	mov.b32 %r6441, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6438, %r649, %r788, %r6441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6443, %r6441, %r6442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6446, %r6438, %r6443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6449, %r660, %r788, %r6452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6454, %r6452, %r6453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6457, %r6449, %r6454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6460, %r649, %r810, %r6441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6465, %r6441, %r6464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6468, %r6460, %r6465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6471, %r660, %r810, %r6452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6476, %r6452, %r6475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6479, %r6471, %r6476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6482, %r199, %r6308, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6486, %r199, %r6319, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6490, %r199, %r6330, %r6230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6494, %r199, %r6341, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6498, %r199, %r6354, %r6240;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6502, %r199, %r6365, %r6245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6506, %r199, %r6376, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6510, %r199, %r6387, %r6255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6514, %r199, %r6400, %r6260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6518, %r199, %r6411, %r6265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6522, %r199, %r6422, %r6270;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6526, %r199, %r6433, %r6275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6530, %r199, %r6446, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6534, %r199, %r6457, %r6285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6538, %r199, %r6468, %r6290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6542, %r199, %r6479, %r6295;
	// end inline asm
	// begin inline asm
	mov.b32 %r6551, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6562, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6548, %r649, %r2446, %r6551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6553, %r6551, %r6552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6556, %r6548, %r6553;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6559, %r660, %r2446, %r6562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6563, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6564, %r6562, %r6563;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6567, %r6559, %r6564;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6570, %r649, %r2468, %r6551, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6574, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6575, %r6551, %r6574;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6578, %r6570, %r6575;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6581, %r660, %r2468, %r6562, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6585, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6586, %r6562, %r6585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6589, %r6581, %r6586;
	// end inline asm
	// begin inline asm
	mov.b32 %r6597, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6608, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6594, %r649, %r2492, %r6597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6598, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6599, %r6597, %r6598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6602, %r6594, %r6599;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6605, %r660, %r2492, %r6608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6609, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6610, %r6608, %r6609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6613, %r6605, %r6610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6616, %r649, %r2514, %r6597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6620, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6621, %r6597, %r6620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6624, %r6616, %r6621;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6627, %r660, %r2514, %r6608, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6631, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6632, %r6608, %r6631;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6635, %r6627, %r6632;
	// end inline asm
	// begin inline asm
	mov.b32 %r6643, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6654, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6640, %r649, %r2538, %r6643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6644, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6645, %r6643, %r6644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6648, %r6640, %r6645;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6651, %r660, %r2538, %r6654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6655, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6656, %r6654, %r6655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6659, %r6651, %r6656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6662, %r649, %r2560, %r6643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6666, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6667, %r6643, %r6666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6670, %r6662, %r6667;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6673, %r660, %r2560, %r6654, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6677, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6678, %r6654, %r6677;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6681, %r6673, %r6678;
	// end inline asm
	// begin inline asm
	mov.b32 %r6689, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6700, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6686, %r649, %r2584, %r6689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6690, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6691, %r6689, %r6690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6694, %r6686, %r6691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6697, %r660, %r2584, %r6700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6701, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6702, %r6700, %r6701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6705, %r6697, %r6702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6708, %r649, %r2606, %r6689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6712, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6713, %r6689, %r6712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6716, %r6708, %r6713;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6719, %r660, %r2606, %r6700, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6723, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6724, %r6700, %r6723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6727, %r6719, %r6724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6730, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r6730, %r6556, %r6482;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6736, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r6736, %r6567, %r6486;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6742, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r6742, %r6578, %r6490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6748, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r6748, %r6589, %r6494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6754, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r6754, %r6602, %r6498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6760, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r6760, %r6613, %r6502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r6766, %r6624, %r6506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6772, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r6772, %r6635, %r6510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6778, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r6778, %r6648, %r6514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r6784, %r6659, %r6518;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6790, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r6790, %r6670, %r6522;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6796, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r6796, %r6681, %r6526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r6802, %r6694, %r6530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6808, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r6808, %r6705, %r6534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6814, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r6814, %r6716, %r6538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r6820, %r6727, %r6542;
	// end inline asm
	// begin inline asm
	mov.b32 %r6831, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6842, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6828, %r649, %r4242, %r6831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6832, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6833, %r6831, %r6832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6836, %r6828, %r6833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6839, %r660, %r4242, %r6842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6843, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6844, %r6842, %r6843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6847, %r6839, %r6844;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6850, %r649, %r4264, %r6831, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6854, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6855, %r6831, %r6854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6858, %r6850, %r6855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6861, %r660, %r4264, %r6842, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6865, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6866, %r6842, %r6865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6869, %r6861, %r6866;
	// end inline asm
	// begin inline asm
	mov.b32 %r6877, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6888, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6874, %r649, %r4288, %r6877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6878, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6879, %r6877, %r6878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6882, %r6874, %r6879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6885, %r660, %r4288, %r6888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6889, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6890, %r6888, %r6889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6893, %r6885, %r6890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6896, %r649, %r4310, %r6877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6900, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6901, %r6877, %r6900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6904, %r6896, %r6901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6907, %r660, %r4310, %r6888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6911, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6912, %r6888, %r6911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6915, %r6907, %r6912;
	// end inline asm
	// begin inline asm
	mov.b32 %r6923, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6934, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6920, %r649, %r4334, %r6923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6924, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6925, %r6923, %r6924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6928, %r6920, %r6925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6931, %r660, %r4334, %r6934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6935, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6936, %r6934, %r6935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6939, %r6931, %r6936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6942, %r649, %r4356, %r6923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6946, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6947, %r6923, %r6946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6950, %r6942, %r6947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6953, %r660, %r4356, %r6934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6957, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6958, %r6934, %r6957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6961, %r6953, %r6958;
	// end inline asm
	// begin inline asm
	mov.b32 %r6969, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r6980, {%rs1088, %rs1088};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6966, %r649, %r4380, %r6969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6970, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6971, %r6969, %r6970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6974, %r6966, %r6971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6977, %r660, %r4380, %r6980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6981, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6982, %r6980, %r6981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6985, %r6977, %r6982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6988, %r649, %r4402, %r6969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6992, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6993, %r6969, %r6992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6996, %r6988, %r6993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6999, %r660, %r4402, %r6980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7003, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7004, %r6980, %r7003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7007, %r6999, %r7004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7081, %r235, %r6836, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7078, %r235, %r6847, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7090, %r235, %r6858, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7087, %r235, %r6869, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7099, %r235, %r6882, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7096, %r235, %r6893, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7108, %r235, %r6904, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7105, %r235, %r6915, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7117, %r235, %r6928, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7114, %r235, %r6939, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7126, %r235, %r6950, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7123, %r235, %r6961, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7135, %r235, %r6974, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r235, %r6985, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7144, %r235, %r6996, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7141, %r235, %r7007, %r6822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7074, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7076, %r7074, %r7078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7079, %r256, %r7081, %r7076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7083, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7085, %r7083, %r7087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7088, %r256, %r7090, %r7085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7092, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7094, %r7092, %r7096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7097, %r256, %r7099, %r7094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7101, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7103, %r7101, %r7105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7106, %r256, %r7108, %r7103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7110, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7112, %r7110, %r7114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7115, %r256, %r7117, %r7112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7119, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7121, %r7119, %r7123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7124, %r256, %r7126, %r7121;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7128, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7130, %r7128, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7133, %r256, %r7135, %r7130;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7137, %r259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7139, %r7137, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7142, %r256, %r7144, %r7139;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7146, %r259, %r7081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r256, %r7078, %r7146;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7153, %r259, %r7090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7156, %r256, %r7087, %r7153;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7160, %r259, %r7099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7163, %r256, %r7096, %r7160;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7167, %r259, %r7108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7170, %r256, %r7105, %r7167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7174, %r259, %r7117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7177, %r256, %r7114, %r7174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7181, %r259, %r7126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7184, %r256, %r7123, %r7181;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7188, %r259, %r7135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7191, %r256, %r7132, %r7188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r259, %r7144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r256, %r7141, %r7195;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7289, %r7286}, {%r315, %r321, %r318, %r324}, {%r7079, %r7149}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7298, %r7295}, {%r315, %r321, %r318, %r324}, {%r7088, %r7156}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7307, %r7304}, {%r315, %r321, %r318, %r324}, {%r7097, %r7163}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7316, %r7313}, {%r315, %r321, %r318, %r324}, {%r7106, %r7170}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7325, %r7322}, {%r315, %r321, %r318, %r324}, {%r7115, %r7177}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7334, %r7331}, {%r315, %r321, %r318, %r324}, {%r7124, %r7184}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7343, %r7340}, {%r315, %r321, %r318, %r324}, {%r7133, %r7191}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7352, %r7349}, {%r315, %r321, %r318, %r324}, {%r7142, %r7198}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7282, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r7282, %r7286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r359, %r7289, %r7284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7291, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7293, %r7291, %r7295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7296, %r359, %r7298, %r7293;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7300, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r7300, %r7304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r359, %r7307, %r7302;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7309, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7311, %r7309, %r7313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7314, %r359, %r7316, %r7311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7318, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7320, %r7318, %r7322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7323, %r359, %r7325, %r7320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7327, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7329, %r7327, %r7331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7332, %r359, %r7334, %r7329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7336, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r7336, %r7340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r359, %r7343, %r7338;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7345, %r362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r7345, %r7349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r359, %r7352, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r362, %r7289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r359, %r7286, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r362, %r7298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r359, %r7295, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r362, %r7307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r359, %r7304, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r362, %r7316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7378, %r359, %r7313, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r362, %r7325;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7385, %r359, %r7322, %r7382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7389, %r362, %r7334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7392, %r359, %r7331, %r7389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r362, %r7343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7399, %r359, %r7340, %r7396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r362, %r7352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7406, %r359, %r7349, %r7403;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7410, %r7411}, {%r393, %r399, %r396, %r402}, {%r7287, %r7357}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7420, %r7421}, {%r393, %r399, %r396, %r402}, {%r7296, %r7364}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7430, %r7431}, {%r393, %r399, %r396, %r402}, {%r7305, %r7371}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7440, %r7441}, {%r393, %r399, %r396, %r402}, {%r7314, %r7378}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7450, %r7451}, {%r393, %r399, %r396, %r402}, {%r7323, %r7385}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7460, %r7461}, {%r393, %r399, %r396, %r402}, {%r7332, %r7392}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7470, %r7471}, {%r393, %r399, %r396, %r402}, {%r7341, %r7399}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7480, %r7481}, {%r393, %r399, %r396, %r402}, {%r7350, %r7406}, {%r1822, %r1822};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7490, %r103, %r7410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7493, %r103, %r7411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7496, %r103, %r7420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7499, %r103, %r7421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7502, %r103, %r7430;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7505, %r103, %r7431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7508, %r103, %r7440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7511, %r103, %r7441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7514, %r103, %r7450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7517, %r103, %r7451;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7520, %r103, %r7460;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7523, %r103, %r7461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7526, %r103, %r7470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7529, %r103, %r7471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7532, %r103, %r7480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7535, %r103, %r7481;
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7540, %r7490, %r7538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7543, %r7540, %r7539;
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7548, %r7493, %r7546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7551, %r7548, %r7547;
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7556, %r7496, %r7554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7559, %r7556, %r7555;
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7564, %r7499, %r7562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7567, %r7564, %r7563;
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7572, %r7502, %r7570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7575, %r7572, %r7571;
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7579, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7580, %r7505, %r7578;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7583, %r7580, %r7579;
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7587, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7588, %r7508, %r7586;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7591, %r7588, %r7587;
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7595, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7596, %r7511, %r7594;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7599, %r7596, %r7595;
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7603, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7604, %r7514, %r7602;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7607, %r7604, %r7603;
	// end inline asm
	// begin inline asm
	mov.b32 %r7610, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7611, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7612, %r7517, %r7610;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7615, %r7612, %r7611;
	// end inline asm
	// begin inline asm
	mov.b32 %r7618, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7619, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7620, %r7520, %r7618;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7623, %r7620, %r7619;
	// end inline asm
	// begin inline asm
	mov.b32 %r7626, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7627, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7628, %r7523, %r7626;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7631, %r7628, %r7627;
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7635, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7636, %r7526, %r7634;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7639, %r7636, %r7635;
	// end inline asm
	// begin inline asm
	mov.b32 %r7642, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7643, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7644, %r7529, %r7642;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7647, %r7644, %r7643;
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7651, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7652, %r7532, %r7650;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7655, %r7652, %r7651;
	// end inline asm
	// begin inline asm
	mov.b32 %r7658, {%rs209, %rs209};
	// end inline asm
	// begin inline asm
	mov.b32 %r7659, {%rs211, %rs211};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7660, %r7535, %r7658;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7663, %r7660, %r7659;
	// end inline asm
	// begin inline asm
	mov.b32 %r7669, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r7667, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7669, %r7667;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7671, %r7543, %r7668;
	// end inline asm
	// begin inline asm
	mov.b32 %r7674, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7675, %r7669, %r7674;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7678, %r7551, %r7675;
	// end inline asm
	// begin inline asm
	mov.b32 %r7681, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7669, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7559, %r7682;
	// end inline asm
	// begin inline asm
	mov.b32 %r7688, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7689, %r7669, %r7688;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7567, %r7689;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7695, %r7671, %r7685, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7699, %r7678, %r7692, %r2310;
	// end inline asm
	shl.b32 	%r7706, %r7699, 4;
	// begin inline asm
	lop3.b32 %r7703, %r2316, %r7695, %r7706, 202;
	// end inline asm
	xor.b32  	%r7846, %r7703, -2004318072;
	// begin inline asm
	mov.b32 %r7710, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r7708, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7710, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7575, %r7709;
	// end inline asm
	// begin inline asm
	mov.b32 %r7715, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7716, %r7710, %r7715;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7583, %r7716;
	// end inline asm
	// begin inline asm
	mov.b32 %r7722, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7723, %r7710, %r7722;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7726, %r7591, %r7723;
	// end inline asm
	// begin inline asm
	mov.b32 %r7729, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7730, %r7710, %r7729;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7599, %r7730;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7736, %r7712, %r7726, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7740, %r7719, %r7733, %r2310;
	// end inline asm
	shl.b32 	%r7747, %r7740, 4;
	// begin inline asm
	lop3.b32 %r7744, %r2316, %r7736, %r7747, 202;
	// end inline asm
	xor.b32  	%r7847, %r7744, -2004318072;
	// begin inline asm
	mov.b32 %r7751, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r7749, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7751, %r7749;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7753, %r7607, %r7750;
	// end inline asm
	// begin inline asm
	mov.b32 %r7756, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7757, %r7751, %r7756;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7760, %r7615, %r7757;
	// end inline asm
	// begin inline asm
	mov.b32 %r7763, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7751, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7623, %r7764;
	// end inline asm
	// begin inline asm
	mov.b32 %r7770, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7771, %r7751, %r7770;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7774, %r7631, %r7771;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7777, %r7753, %r7767, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7781, %r7760, %r7774, %r2310;
	// end inline asm
	shl.b32 	%r7788, %r7781, 4;
	// begin inline asm
	lop3.b32 %r7785, %r2316, %r7777, %r7788, 202;
	// end inline asm
	xor.b32  	%r7848, %r7785, -2004318072;
	// begin inline asm
	mov.b32 %r7792, {%rs1192, %rs1192};
	// end inline asm
	// begin inline asm
	mov.b32 %r7790, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7639, %r7791;
	// end inline asm
	// begin inline asm
	mov.b32 %r7797, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7798, %r7792, %r7797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7801, %r7647, %r7798;
	// end inline asm
	// begin inline asm
	mov.b32 %r7804, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7805, %r7792, %r7804;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7808, %r7655, %r7805;
	// end inline asm
	// begin inline asm
	mov.b32 %r7811, {%rs21, %rs21};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7812, %r7792, %r7811;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7815, %r7663, %r7812;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7818, %r7794, %r7808, %r2310;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7822, %r7801, %r7815, %r2310;
	// end inline asm
	shl.b32 	%r7829, %r7822, 4;
	// begin inline asm
	lop3.b32 %r7826, %r2316, %r7818, %r7829, 202;
	// end inline asm
	xor.b32  	%r7849, %r7826, -2004318072;
	st.shared.u32 	[%rd97], %r7846;
	st.shared.u32 	[%rd98], %r7847;
	st.shared.u32 	[%rd99], %r7848;
	st.shared.u32 	[%rd100], %r7849;
	add.s32 	%r7962, %r7962, -64;
	add.s64 	%rd155, %rd155, 8324;
	setp.eq.s32 	%p210, %r7962, 0;
	@%p210 bra 	$L__BB0_82;
	bra.uni 	$L__BB0_81;
$L__BB0_82:                             // %guard_exit16817
                                        //   in Loop: Header=BB0_80 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7855, [%rd5];
	ld.shared.u32 	%r7856, [%rd6+128];
	ld.shared.u32 	%r7863, [%rd7+4];
	ld.shared.u32 	%r7864, [%rd8+128];
	ld.shared.u32 	%r7871, [%rd5+8324];
	ld.shared.u32 	%r7872, [%rd6+8452];
	ld.shared.u32 	%r7879, [%rd6+8328];
	ld.shared.u32 	%r7880, [%rd6+8456];
	ld.shared.u32 	%r7887, [%rd5+16648];
	ld.shared.u32 	%r7888, [%rd6+16776];
	ld.shared.u32 	%r7895, [%rd6+16652];
	ld.shared.u32 	%r7896, [%rd6+16780];
	ld.shared.u32 	%r7903, [%rd5+24972];
	ld.shared.u32 	%r7904, [%rd6+25100];
	ld.shared.u32 	%r7911, [%rd6+24976];
	ld.shared.u32 	%r7912, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7850, %r7855, %r7856, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7854, %r7855, %r7856, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7858, %r7863, %r7864, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7862, %r7863, %r7864, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7866, %r7871, %r7872, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7870, %r7871, %r7872, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7874, %r7879, %r7880, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7878, %r7879, %r7880, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7882, %r7887, %r7888, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7886, %r7887, %r7888, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7890, %r7895, %r7896, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7894, %r7895, %r7896, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7898, %r7903, %r7904, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7902, %r7903, %r7904, %r565;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7906, %r7911, %r7912, %r561;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7910, %r7911, %r7912, %r565;
	// end inline asm
	selp.b32 	%r7914, %r7854, %r7850, %p197;
	shfl.sync.bfly.b32	%r142, %r7914, 8, 31, -1;
	selp.b32 	%r7915, %r7862, %r7858, %p197;
	shfl.sync.bfly.b32	%r143, %r7915, 8, 31, -1;
	selp.b32 	%r7916, %r7870, %r7866, %p197;
	shfl.sync.bfly.b32	%r7917, %r7916, 8, 31, -1;
	selp.b32 	%r7918, %r7878, %r7874, %p197;
	shfl.sync.bfly.b32	%r7919, %r7918, 8, 31, -1;
	selp.b32 	%r7920, %r7886, %r7882, %p197;
	shfl.sync.bfly.b32	%r7921, %r7920, 8, 31, -1;
	selp.b32 	%r7922, %r7894, %r7890, %p197;
	shfl.sync.bfly.b32	%r7923, %r7922, 8, 31, -1;
	selp.b32 	%r7924, %r7902, %r7898, %p197;
	shfl.sync.bfly.b32	%r7925, %r7924, 8, 31, -1;
	selp.b32 	%r7926, %r7910, %r7906, %p197;
	shfl.sync.bfly.b32	%r7927, %r7926, 8, 31, -1;
	setp.eq.s32 	%p212, %r7961, 0;
	@%p212 bra 	$L__BB0_83;
// %bb.119:                             // %pass16032
                                        //   in Loop: Header=BB0_80 Depth=1
	selp.b32 	%r7928, %r143, %r7862, %p197;
	selp.b32 	%r7929, %r7858, %r143, %p197;
	selp.b32 	%r7930, %r142, %r7854, %p197;
	selp.b32 	%r7931, %r7850, %r142, %p197;
	mul.lo.s32 	%r7932, %r67, 786432;
	or.b32  	%r7933, %r7932, %r52;
	cvt.u64.u32 	%rd101, %r7933;
	add.s64 	%rd102, %rd101, %rd9;
	mul.hi.s64 	%rd103, %rd102, 3074457345618258603;
	shr.u64 	%rd104, %rd103, 63;
	shr.s64 	%rd105, %rd103, 26;
	add.s64 	%rd106, %rd105, %rd104;
	setp.lt.s64 	%p214, %rd102, 0;
	mul.lo.s64 	%rd107, %rd106, 402653184;
	setp.ne.s64 	%p215, %rd107, %rd102;
	and.pred  	%p216, %p214, %p215;
	selp.s64 	%rd108, -1, 0, %p216;
	add.s64 	%rd109, %rd106, %rd108;
	mul.lo.s64 	%rd110, %rd109, 4611686018024734720;
	add.s64 	%rd111, %rd110, %rd102;
	shl.b64 	%rd112, %rd111, 2;
	add.s64 	%rd113, %rd3, %rd112;
	st.global.v4.u32 	[%rd113], {%r7931, %r7929, %r7930, %r7928};
$L__BB0_83:                             // %L37557
                                        //   in Loop: Header=BB0_80 Depth=1
	or.b32  	%r7934, %r7961, 64;
	setp.gt.u32 	%p217, %r7934, 191;
	@%p217 bra 	$L__BB0_117;
	bra.uni 	$L__BB0_84;
$L__BB0_117:                            // %pass16130
                                        //   in Loop: Header=BB0_80 Depth=1
	or.b32  	%r135, %r67, 1;
	selp.b32 	%r144, %r7866, %r7917, %p197;
	selp.b32 	%r145, %r7917, %r7870, %p197;
	selp.b32 	%r146, %r7874, %r7919, %p197;
	selp.b32 	%r147, %r7919, %r7878, %p197;
	mad.lo.s32 	%r7935, %r135, 786432, %r53;
	cvt.u64.u32 	%rd114, %r7935;
	add.s64 	%rd115, %rd114, %rd9;
	mul.hi.s64 	%rd116, %rd115, 3074457345618258603;
	shr.u64 	%rd117, %rd116, 63;
	shr.s64 	%rd118, %rd116, 26;
	add.s64 	%rd119, %rd118, %rd117;
	setp.lt.s64 	%p218, %rd115, 0;
	mul.lo.s64 	%rd120, %rd119, 402653184;
	setp.ne.s64 	%p219, %rd120, %rd115;
	and.pred  	%p220, %p218, %p219;
	selp.s64 	%rd121, -1, 0, %p220;
	add.s64 	%rd122, %rd119, %rd121;
	mul.lo.s64 	%rd123, %rd122, 4611686018024734720;
	add.s64 	%rd124, %rd123, %rd115;
	shl.b64 	%rd125, %rd124, 2;
	add.s64 	%rd126, %rd3, %rd125;
	st.global.v4.u32 	[%rd126], {%r144, %r146, %r145, %r147};
$L__BB0_84:                             // %L37752
                                        //   in Loop: Header=BB0_80 Depth=1
	or.b32  	%r137, %r67, 3;
	selp.b32 	%r152, %r7898, %r7925, %p197;
	selp.b32 	%r153, %r7925, %r7902, %p197;
	selp.b32 	%r154, %r7906, %r7927, %p197;
	selp.b32 	%r155, %r7927, %r7910, %p197;
	or.b32  	%r7936, %r7961, 128;
	setp.gt.u32 	%p221, %r7936, 191;
	@%p221 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_85;
$L__BB0_118:                            // %pass16228
                                        //   in Loop: Header=BB0_80 Depth=1
	or.b32  	%r136, %r67, 2;
	selp.b32 	%r148, %r7882, %r7921, %p197;
	selp.b32 	%r149, %r7921, %r7886, %p197;
	selp.b32 	%r150, %r7890, %r7923, %p197;
	selp.b32 	%r151, %r7923, %r7894, %p197;
	mad.lo.s32 	%r7937, %r136, 786432, %r53;
	cvt.u64.u32 	%rd127, %r7937;
	add.s64 	%rd128, %rd127, %rd9;
	mul.hi.s64 	%rd129, %rd128, 3074457345618258603;
	shr.u64 	%rd130, %rd129, 63;
	shr.s64 	%rd131, %rd129, 26;
	add.s64 	%rd132, %rd131, %rd130;
	setp.lt.s64 	%p222, %rd128, 0;
	mul.lo.s64 	%rd133, %rd132, 402653184;
	setp.ne.s64 	%p223, %rd133, %rd128;
	and.pred  	%p224, %p222, %p223;
	selp.s64 	%rd134, -1, 0, %p224;
	add.s64 	%rd135, %rd132, %rd134;
	mul.lo.s64 	%rd136, %rd135, 4611686018024734720;
	add.s64 	%rd137, %rd136, %rd128;
	shl.b64 	%rd138, %rd137, 2;
	add.s64 	%rd139, %rd3, %rd138;
	st.global.v4.u32 	[%rd139], {%r148, %r150, %r149, %r151};
	bra.uni 	$L__BB0_85;
$L__BB0_86:                             // %L38153
	st.global.u32 	[%rd4], %r7942;
	ret;
$L__BB0_7:                              // %L156
	mov.u32 	%r7941, 2;
	st.global.u32 	[%rd4], %r7941;
	mov.u64 	%rd153, exception3324;
	cvta.global.u64 	%rd154, %rd153;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd154;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r156;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd41, exception1;
	cvta.global.u64 	%rd42, %rd41;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd42;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r156;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
