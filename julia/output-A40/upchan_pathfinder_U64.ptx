// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func julia_AssertionError_9840
()
.noreturn
{
	trap;
}
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_9851
(
	.param .align 8 .b8 julia_power_by_squaring_9851_param_0[16],
	.param .b64 julia_power_by_squaring_9851_param_1,
	.param .b64 julia_power_by_squaring_9851_param_2
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception2253[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<239>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7833>;
	.reg .f32 	%f<922>;
	.reg .b64 	%rd<112>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r164, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd22, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r165, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r165, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd39, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r166, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r167, %r166, %r4;
	or.b32  	%r168, %r167, %r2;
	mul.wide.u32 	%rd45, %r168, 4;
	add.s64 	%rd4, %rd39, %rd45;
	mov.u32 	%r169, 1;
	st.global.u32 	[%rd4], %r169;
	ld.global.u32 	%r5, [%rd23];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd27, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd27];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd31, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd31];
	sub.s32 	%r170, %r6, %r5;
	and.b32  	%r171, %r170, 255;
	setp.ne.s32 	%p6, %r171, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd35];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 4096;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	not.b32 	%r172, %r7;
	add.s32 	%r173, %r172, %r8;
	and.b32  	%r174, %r173, 3;
	setp.eq.s32 	%p12, %r174, 0;
	@%p12 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L341
	bfe.u32 	%r17, %r4, 1, 1;
	and.b32  	%r18, %r4, 1;
	bfe.u32 	%r20, %r4, 2, 1;
	shr.u32 	%r21, %r4, 4;
	shl.b32 	%r180, %r21, 1;
	shl.b32 	%r181, %r20, 2;
	shl.b32 	%r182, %r18, 3;
	shl.b32 	%r183, %r17, 4;
	or.b32  	%r184, %r182, %r183;
	or.b32  	%r185, %r181, %r184;
	or.b32  	%r186, %r180, %r185;
	bfe.u32 	%r23, %r4, 3, 1;
	or.b32  	%r24, %r23, %r186;
	or.b32  	%r25, %r24, 32;
	mov.f32 	%f185, 0f40000000;
	mov.f32 	%f186, 0f437F0000;
	div.approx.f32 	%f1, %f186, %f185;
	cvt.rn.f32.s32 	%f187, %r24;
	sub.f32 	%f188, %f187, %f1;
	mov.f32 	%f217, 0f42800000;
	div.approx.f32 	%f3, %f188, %f217;
	setp.eq.f32 	%p18, %f3, 0f00000000;
	mov.f32 	%f889, 0f3F800000;
	mov.f32 	%f882, %f889;
	@%p18 bra 	LBB0_10;
// %bb.9:                               // %L552
	sin.approx.f32 	%f218, %f3;
	div.approx.f32 	%f882, %f218, %f3;
LBB0_10:                                // %L555
	cvt.rn.f32.s32 	%f221, %r25;
	sub.f32 	%f222, %f221, %f1;
	div.approx.f32 	%f8, %f222, %f217;
	setp.eq.f32 	%p24, %f8, 0f00000000;
	mov.f32 	%f883, %f889;
	@%p24 bra 	LBB0_12;
// %bb.11:                              // %L572
	sin.approx.f32 	%f252, %f8;
	div.approx.f32 	%f883, %f252, %f8;
LBB0_12:                                // %L575
	or.b32  	%r204, %r24, 64;
	or.b32  	%r27, %r24, 96;
	cvt.rn.f32.s32 	%f256, %r204;
	sub.f32 	%f257, %f256, %f1;
	div.approx.f32 	%f12, %f257, %f217;
	setp.eq.f32 	%p30, %f12, 0f00000000;
	mov.f32 	%f884, %f889;
	@%p30 bra 	LBB0_14;
// %bb.13:                              // %L654
	sin.approx.f32 	%f287, %f12;
	div.approx.f32 	%f884, %f287, %f12;
LBB0_14:                                // %L657
	cvt.rn.f32.s32 	%f290, %r27;
	sub.f32 	%f291, %f290, %f1;
	div.approx.f32 	%f17, %f291, %f217;
	setp.eq.f32 	%p36, %f17, 0f00000000;
	mov.f32 	%f885, %f889;
	@%p36 bra 	LBB0_16;
// %bb.15:                              // %L674
	sin.approx.f32 	%f321, %f17;
	div.approx.f32 	%f885, %f321, %f17;
LBB0_16:                                // %L677
	shl.b32 	%r10, %r4, 2;
	or.b32  	%r222, %r24, 128;
	or.b32  	%r29, %r24, 160;
	cvt.rn.f32.s32 	%f325, %r222;
	sub.f32 	%f326, %f325, %f1;
	div.approx.f32 	%f21, %f326, %f217;
	setp.eq.f32 	%p42, %f21, 0f00000000;
	mov.f32 	%f886, %f889;
	@%p42 bra 	LBB0_18;
// %bb.17:                              // %L756
	sin.approx.f32 	%f356, %f21;
	div.approx.f32 	%f886, %f356, %f21;
LBB0_18:                                // %L759
	and.b32  	%r11, %r10, 32;
	and.b32  	%r14, %r4, 18;
	cvt.rn.f32.s32 	%f359, %r29;
	sub.f32 	%f360, %f359, %f1;
	div.approx.f32 	%f26, %f360, %f217;
	setp.eq.f32 	%p48, %f26, 0f00000000;
	mov.f32 	%f887, %f889;
	@%p48 bra 	LBB0_20;
// %bb.19:                              // %L776
	sin.approx.f32 	%f390, %f26;
	div.approx.f32 	%f887, %f390, %f26;
LBB0_20:                                // %L779
	and.b32  	%r12, %r10, 4;
	shl.b32 	%r175, %r4, 1;
	or.b32  	%r176, %r14, %r11;
	or.b32  	%r240, %r24, 192;
	or.b32  	%r31, %r24, 224;
	cvt.rn.f32.s32 	%f394, %r240;
	sub.f32 	%f395, %f394, %f1;
	div.approx.f32 	%f30, %f395, %f217;
	setp.eq.f32 	%p54, %f30, 0f00000000;
	mov.f32 	%f888, %f889;
	@%p54 bra 	LBB0_22;
// %bb.21:                              // %L858
	sin.approx.f32 	%f425, %f30;
	div.approx.f32 	%f888, %f425, %f30;
LBB0_22:                                // %L861
	and.b32  	%r13, %r175, 8;
	or.b32  	%r177, %r176, %r12;
	cvt.rn.f32.s32 	%f428, %r31;
	sub.f32 	%f429, %f428, %f1;
	div.approx.f32 	%f35, %f429, %f217;
	setp.eq.f32 	%p60, %f35, 0f00000000;
	@%p60 bra 	LBB0_24;
// %bb.23:                              // %L878
	sin.approx.f32 	%f459, %f35;
	div.approx.f32 	%f889, %f459, %f35;
LBB0_24:                                // %L881
	or.b32  	%r178, %r177, %r13;
	mul.lo.s32 	%r33, %r24, 63;
	cvt.rn.f32.s32 	%f462, %r33;
	div.approx.f32 	%f38, %f462, %f217;
	abs.f32 	%f892, %f38;
	setp.lt.f32 	%p61, %f892, 0f40000000;
	@%p61 bra 	LBB0_36;
// %bb.25:
	setp.gtu.f32 	%p62, %f892, 0f4B800000;
	@%p62 bra 	LBB0_32;
	bra.uni 	LBB0_26;
LBB0_32:
	mov.b32 	%r35, %f892;
	and.b32  	%r258, %r35, 8388607;
	or.b32  	%r7791, %r258, 1065353216;
	mov.b32 	%f891, %r7791;
	add.s32 	%r259, %r35, -1073741824;
	and.b32  	%r7792, %r259, -8388608;
	setp.eq.s32 	%p68, %r7792, 0;
	@%p68 bra 	LBB0_35;
// %bb.33:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f473, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f472,%f473;
	// end inline asm
LBB0_34:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r260, %r7792, 192937984;
	add.s32 	%r261, %r260, %r7791;
	mov.b32 	%f474, %r261;
	mul.f32 	%f475, %f472, %f474;
	sub.f32 	%f476, %f474, %f475;
	fma.rn.f32 	%f477, %f476, %f472, %f475;
	sub.f32 	%f478, %f474, %f477;
	fma.rz.f32 	%f479, %f478, %f472, %f477;
	cvt.rzi.f32.f32 	%f480, %f479;
	sub.f32 	%f891, %f474, %f480;
	sub.s32 	%r7792, %r7792, %r260;
	mov.b32 	%r7791, %f891;
	setp.ne.s32 	%p69, %r7792, 0;
	setp.ne.s32 	%p70, %r7791, 0;
	and.pred  	%p71, %p69, %p70;
	@%p71 bra 	LBB0_34;
LBB0_35:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p72, %r35, 2139095039;
	selp.f32 	%f481, 0f7FFFFFFF, 0f4B800000, %p72;
	mul.f32 	%f482, %f891, 0f34000000;
	mul.f32 	%f892, %f481, %f482;
	bra.uni 	LBB0_36;
LBB0_26:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f465, %f892, %f185;
	cvt.rzi.f32.f32 	%f890, %f465;
	fma.rn.f32 	%f41, %f890, 0fC0000000, %f892;
	mov.b32 	%r34, %f41;
	setp.lt.u32 	%p63, %r34, 1073741824;
	@%p63 bra 	LBB0_31;
// %bb.27:
	setp.lt.u32 	%p64, %r34, -2147483647;
	@%p64 bra 	LBB0_29;
// %bb.28:
	add.f32 	%f470, %f890, 0fBF800000;
	setp.lt.f32 	%p67, %f41, 0fC0000000;
	add.f32 	%f471, %f470, 0fBF800000;
	selp.f32 	%f890, %f471, %f470, %p67;
	bra.uni 	LBB0_31;
LBB0_29:
	add.f32 	%f890, %f890, 0f3F800000;
	setp.ltu.f32 	%p65, %f41, 0f40800000;
	@%p65 bra 	LBB0_31;
// %bb.30:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f466, %f890, 0f3F800000;
	fma.rn.f32 	%f468, %f185, 0fC0400000, %f41;
	setp.ge.f32 	%p66, %f468, 0f00000000;
	add.f32 	%f469, %f466, 0f3F800000;
	selp.f32 	%f890, %f469, %f466, %p66;
LBB0_31:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f892, %f890, 0fC0000000, %f892;
LBB0_36:                                // %__internal_fmodf_kernel.exit.i
	shr.u32 	%r179, %r178, 1;
	abs.f32 	%f483, %f892;
	setp.gtu.f32 	%p73, %f483, 0f7F800000;
	@%p73 bra 	LBB0_38;
// %bb.37:
	mov.b32 	%r262, %f38;
	and.b32  	%r263, %r262, -2147483648;
	mov.b32 	%r264, %f892;
	or.b32  	%r265, %r263, %r264;
	mov.b32 	%f892, %r265;
LBB0_38:                                // %__nv_fmodf.exit
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd46, %r179, 4;
	add.s32 	%r274, %r33, 2016;
	cvt.rn.f32.s32 	%f514, %r274;
	div.approx.f32 	%f57, %f514, %f217;
	abs.f32 	%f896, %f57;
	setp.lt.f32 	%p81, %f896, 0f40000000;
	@%p81 bra 	LBB0_50;
// %bb.39:
	setp.gtu.f32 	%p82, %f896, 0f4B800000;
	@%p82 bra 	LBB0_46;
	bra.uni 	LBB0_40;
LBB0_46:
	mov.b32 	%r43, %f896;
	and.b32  	%r275, %r43, 8388607;
	or.b32  	%r7793, %r275, 1065353216;
	mov.b32 	%f895, %r7793;
	add.s32 	%r276, %r43, -1073741824;
	and.b32  	%r7794, %r276, -8388608;
	setp.eq.s32 	%p88, %r7794, 0;
	@%p88 bra 	LBB0_49;
// %bb.47:                              // %__nv_fmaf_rn.exit4.i.i.i1163.preheader
	mov.f32 	%f525, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f524,%f525;
	// end inline asm
LBB0_48:                                // %__nv_fmaf_rn.exit4.i.i.i1163
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r277, %r7794, 192937984;
	add.s32 	%r278, %r277, %r7793;
	mov.b32 	%f526, %r278;
	mul.f32 	%f527, %f524, %f526;
	sub.f32 	%f528, %f526, %f527;
	fma.rn.f32 	%f529, %f528, %f524, %f527;
	sub.f32 	%f530, %f526, %f529;
	fma.rz.f32 	%f531, %f530, %f524, %f529;
	cvt.rzi.f32.f32 	%f532, %f531;
	sub.f32 	%f895, %f526, %f532;
	sub.s32 	%r7794, %r7794, %r277;
	mov.b32 	%r7793, %f895;
	setp.ne.s32 	%p89, %r7794, 0;
	setp.ne.s32 	%p90, %r7793, 0;
	and.pred  	%p91, %p89, %p90;
	@%p91 bra 	LBB0_48;
LBB0_49:                                // %__internal_fmodf_slowpath_mod.exit.i.i1165
	setp.gt.u32 	%p92, %r43, 2139095039;
	selp.f32 	%f533, 0f7FFFFFFF, 0f4B800000, %p92;
	mul.f32 	%f534, %f895, 0f34000000;
	mul.f32 	%f896, %f533, %f534;
	bra.uni 	LBB0_50;
LBB0_40:                                // %__nv_fast_fdividef.exit.i.i.i1135
	div.approx.f32 	%f517, %f896, %f185;
	cvt.rzi.f32.f32 	%f894, %f517;
	fma.rn.f32 	%f60, %f894, 0fC0000000, %f896;
	mov.b32 	%r42, %f60;
	setp.lt.u32 	%p83, %r42, 1073741824;
	@%p83 bra 	LBB0_45;
// %bb.41:
	setp.lt.u32 	%p84, %r42, -2147483647;
	@%p84 bra 	LBB0_43;
// %bb.42:
	add.f32 	%f522, %f894, 0fBF800000;
	setp.lt.f32 	%p87, %f60, 0fC0000000;
	add.f32 	%f523, %f522, 0fBF800000;
	selp.f32 	%f894, %f523, %f522, %p87;
	bra.uni 	LBB0_45;
LBB0_43:
	add.f32 	%f894, %f894, 0f3F800000;
	setp.ltu.f32 	%p85, %f60, 0f40800000;
	@%p85 bra 	LBB0_45;
// %bb.44:                              // %__nv_fmaf_rn.exit.i.i.i1140
	add.f32 	%f518, %f894, 0f3F800000;
	fma.rn.f32 	%f520, %f185, 0fC0400000, %f60;
	setp.ge.f32 	%p86, %f520, 0f00000000;
	add.f32 	%f521, %f518, 0f3F800000;
	selp.f32 	%f894, %f521, %f518, %p86;
LBB0_45:                                // %__internal_fmodf_fastpath_quot.exit.i.i1144
	fma.rn.f32 	%f896, %f894, 0fC0000000, %f896;
LBB0_50:                                // %__internal_fmodf_kernel.exit.i1169
	add.s64 	%rd47, %rd1, %rd46;
	abs.f32 	%f535, %f896;
	setp.gtu.f32 	%p93, %f535, 0f7F800000;
	@%p93 bra 	LBB0_52;
// %bb.51:
	mov.b32 	%r279, %f57;
	and.b32  	%r280, %r279, -2147483648;
	mov.b32 	%r281, %f896;
	or.b32  	%r282, %r280, %r281;
	mov.b32 	%f896, %r282;
LBB0_52:                                // %__nv_fmodf.exit1170
	ld.global.u32 	%r15, [%rd47];
	mov.u64 	%rd48, 2;
	mov.u64 	%rd49, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9851, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd50, [retval0+0];
	} // callseq 2
	setp.ne.s64 	%p101, %rd50, 64;
	@%p101 bra 	LBB0_124;
// %bb.53:                              // %L978
	shr.u32 	%r19, %r4, 2;
	and.b32  	%r297, %r4, 3;
	shl.b32 	%r298, %r297, 1;
	neg.s32 	%r52, %r298;
	mul.lo.s32 	%r53, %r52, %r19;
	cvt.rn.f32.s32 	%f74, %r53;
	mov.f32 	%f568, 0f41000000;
	div.approx.f32 	%f75, %f74, %f568;
	abs.f32 	%f900, %f75;
	setp.lt.f32 	%p102, %f900, 0f40000000;
	@%p102 bra 	LBB0_65;
// %bb.54:
	setp.gtu.f32 	%p103, %f900, 0f4B800000;
	@%p103 bra 	LBB0_61;
	bra.uni 	LBB0_55;
LBB0_61:
	mov.b32 	%r55, %f900;
	and.b32  	%r299, %r55, 8388607;
	or.b32  	%r7795, %r299, 1065353216;
	mov.b32 	%f899, %r7795;
	add.s32 	%r300, %r55, -1073741824;
	and.b32  	%r7796, %r300, -8388608;
	setp.eq.s32 	%p109, %r7796, 0;
	@%p109 bra 	LBB0_64;
// %bb.62:                              // %__nv_fmaf_rn.exit4.i.i.i1209.preheader
	mov.f32 	%f578, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f577,%f578;
	// end inline asm
LBB0_63:                                // %__nv_fmaf_rn.exit4.i.i.i1209
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r301, %r7796, 192937984;
	add.s32 	%r302, %r301, %r7795;
	mov.b32 	%f579, %r302;
	mul.f32 	%f580, %f577, %f579;
	sub.f32 	%f581, %f579, %f580;
	fma.rn.f32 	%f582, %f581, %f577, %f580;
	sub.f32 	%f583, %f579, %f582;
	fma.rz.f32 	%f584, %f583, %f577, %f582;
	cvt.rzi.f32.f32 	%f585, %f584;
	sub.f32 	%f899, %f579, %f585;
	sub.s32 	%r7796, %r7796, %r301;
	mov.b32 	%r7795, %f899;
	setp.ne.s32 	%p110, %r7796, 0;
	setp.ne.s32 	%p111, %r7795, 0;
	and.pred  	%p112, %p110, %p111;
	@%p112 bra 	LBB0_63;
LBB0_64:                                // %__internal_fmodf_slowpath_mod.exit.i.i1211
	setp.gt.u32 	%p113, %r55, 2139095039;
	selp.f32 	%f586, 0f7FFFFFFF, 0f4B800000, %p113;
	mul.f32 	%f587, %f899, 0f34000000;
	mul.f32 	%f900, %f586, %f587;
	bra.uni 	LBB0_65;
LBB0_55:                                // %__nv_fast_fdividef.exit.i.i.i1181
	div.approx.f32 	%f570, %f900, %f185;
	cvt.rzi.f32.f32 	%f898, %f570;
	fma.rn.f32 	%f78, %f898, 0fC0000000, %f900;
	mov.b32 	%r54, %f78;
	setp.lt.u32 	%p104, %r54, 1073741824;
	@%p104 bra 	LBB0_60;
// %bb.56:
	setp.lt.u32 	%p105, %r54, -2147483647;
	@%p105 bra 	LBB0_58;
// %bb.57:
	add.f32 	%f575, %f898, 0fBF800000;
	setp.lt.f32 	%p108, %f78, 0fC0000000;
	add.f32 	%f576, %f575, 0fBF800000;
	selp.f32 	%f898, %f576, %f575, %p108;
	bra.uni 	LBB0_60;
LBB0_58:
	add.f32 	%f898, %f898, 0f3F800000;
	setp.ltu.f32 	%p106, %f78, 0f40800000;
	@%p106 bra 	LBB0_60;
// %bb.59:                              // %__nv_fmaf_rn.exit.i.i.i1186
	add.f32 	%f571, %f898, 0f3F800000;
	fma.rn.f32 	%f573, %f185, 0fC0400000, %f78;
	setp.ge.f32 	%p107, %f573, 0f00000000;
	add.f32 	%f574, %f571, 0f3F800000;
	selp.f32 	%f898, %f574, %f571, %p107;
LBB0_60:                                // %__internal_fmodf_fastpath_quot.exit.i.i1190
	fma.rn.f32 	%f900, %f898, 0fC0000000, %f900;
LBB0_65:                                // %__internal_fmodf_kernel.exit.i1215
	abs.f32 	%f588, %f900;
	setp.gtu.f32 	%p114, %f588, 0f7F800000;
	@%p114 bra 	LBB0_67;
// %bb.66:
	mov.b32 	%r303, %f75;
	and.b32  	%r304, %r303, -2147483648;
	mov.b32 	%r305, %f900;
	or.b32  	%r306, %r304, %r305;
	mov.b32 	%f900, %r306;
LBB0_67:                                // %__nv_fmodf.exit1216
	shl.b32 	%r315, %r19, 3;
	sub.s32 	%r316, %r53, %r315;
	cvt.rn.f32.s32 	%f94, %r316;
	div.approx.f32 	%f95, %f94, %f568;
	abs.f32 	%f904, %f95;
	setp.lt.f32 	%p122, %f904, 0f40000000;
	@%p122 bra 	LBB0_79;
// %bb.68:
	setp.gtu.f32 	%p123, %f904, 0f4B800000;
	@%p123 bra 	LBB0_75;
	bra.uni 	LBB0_69;
LBB0_75:
	mov.b32 	%r63, %f904;
	and.b32  	%r317, %r63, 8388607;
	or.b32  	%r7797, %r317, 1065353216;
	mov.b32 	%f903, %r7797;
	add.s32 	%r318, %r63, -1073741824;
	and.b32  	%r7798, %r318, -8388608;
	setp.eq.s32 	%p129, %r7798, 0;
	@%p129 bra 	LBB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i1255.preheader
	mov.f32 	%f629, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f628,%f629;
	// end inline asm
LBB0_77:                                // %__nv_fmaf_rn.exit4.i.i.i1255
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r319, %r7798, 192937984;
	add.s32 	%r320, %r319, %r7797;
	mov.b32 	%f630, %r320;
	mul.f32 	%f631, %f628, %f630;
	sub.f32 	%f632, %f630, %f631;
	fma.rn.f32 	%f633, %f632, %f628, %f631;
	sub.f32 	%f634, %f630, %f633;
	fma.rz.f32 	%f635, %f634, %f628, %f633;
	cvt.rzi.f32.f32 	%f636, %f635;
	sub.f32 	%f903, %f630, %f636;
	sub.s32 	%r7798, %r7798, %r319;
	mov.b32 	%r7797, %f903;
	setp.ne.s32 	%p130, %r7798, 0;
	setp.ne.s32 	%p131, %r7797, 0;
	and.pred  	%p132, %p130, %p131;
	@%p132 bra 	LBB0_77;
LBB0_78:                                // %__internal_fmodf_slowpath_mod.exit.i.i1257
	setp.gt.u32 	%p133, %r63, 2139095039;
	selp.f32 	%f637, 0f7FFFFFFF, 0f4B800000, %p133;
	mul.f32 	%f638, %f903, 0f34000000;
	mul.f32 	%f904, %f637, %f638;
	bra.uni 	LBB0_79;
LBB0_69:                                // %__nv_fast_fdividef.exit.i.i.i1227
	div.approx.f32 	%f621, %f904, %f185;
	cvt.rzi.f32.f32 	%f902, %f621;
	fma.rn.f32 	%f98, %f902, 0fC0000000, %f904;
	mov.b32 	%r62, %f98;
	setp.lt.u32 	%p124, %r62, 1073741824;
	@%p124 bra 	LBB0_74;
// %bb.70:
	setp.lt.u32 	%p125, %r62, -2147483647;
	@%p125 bra 	LBB0_72;
// %bb.71:
	add.f32 	%f626, %f902, 0fBF800000;
	setp.lt.f32 	%p128, %f98, 0fC0000000;
	add.f32 	%f627, %f626, 0fBF800000;
	selp.f32 	%f902, %f627, %f626, %p128;
	bra.uni 	LBB0_74;
LBB0_72:
	add.f32 	%f902, %f902, 0f3F800000;
	setp.ltu.f32 	%p126, %f98, 0f40800000;
	@%p126 bra 	LBB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i1232
	add.f32 	%f622, %f902, 0f3F800000;
	fma.rn.f32 	%f624, %f185, 0fC0400000, %f98;
	setp.ge.f32 	%p127, %f624, 0f00000000;
	add.f32 	%f625, %f622, 0f3F800000;
	selp.f32 	%f902, %f625, %f622, %p127;
LBB0_74:                                // %__internal_fmodf_fastpath_quot.exit.i.i1236
	fma.rn.f32 	%f904, %f902, 0fC0000000, %f904;
LBB0_79:                                // %__internal_fmodf_kernel.exit.i1261
	abs.f32 	%f639, %f904;
	setp.gtu.f32 	%p134, %f639, 0f7F800000;
	@%p134 bra 	LBB0_81;
// %bb.80:
	mov.b32 	%r321, %f95;
	and.b32  	%r322, %r321, -2147483648;
	mov.b32 	%r323, %f904;
	or.b32  	%r324, %r322, %r323;
	mov.b32 	%f904, %r324;
LBB0_81:                                // %__nv_fmodf.exit1262
	{ // callseq 6, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9851, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd56, [retval0+0];
	} // callseq 6
	setp.ne.s64 	%p142, %rd56, 64;
	@%p142 bra 	LBB0_123;
// %bb.82:                              // %L1116
	{ // callseq 10, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9851, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd62, [retval0+0];
	} // callseq 10
	cvt.rn.f32.s64 	%f672, %rd62;
	div.approx.f32 	%f112, %f74, %f672;
	abs.f32 	%f916, %f112;
	setp.lt.f32 	%p143, %f916, 0f40000000;
	@%p143 bra 	LBB0_132;
// %bb.83:
	setp.gtu.f32 	%p144, %f916, 0f4B800000;
	@%p144 bra 	LBB0_128;
	bra.uni 	LBB0_84;
LBB0_128:
	mov.b32 	%r141, %f916;
	and.b32  	%r345, %r141, 8388607;
	or.b32  	%r7829, %r345, 1065353216;
	mov.b32 	%f915, %r7829;
	add.s32 	%r346, %r141, -1073741824;
	and.b32  	%r7830, %r346, -8388608;
	setp.eq.s32 	%p150, %r7830, 0;
	@%p150 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1393.preheader
	mov.f32 	%f682, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f681,%f682;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i1393
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r347, %r7830, 192937984;
	add.s32 	%r348, %r347, %r7829;
	mov.b32 	%f683, %r348;
	mul.f32 	%f684, %f681, %f683;
	sub.f32 	%f685, %f683, %f684;
	fma.rn.f32 	%f686, %f685, %f681, %f684;
	sub.f32 	%f687, %f683, %f686;
	fma.rz.f32 	%f688, %f687, %f681, %f686;
	cvt.rzi.f32.f32 	%f689, %f688;
	sub.f32 	%f915, %f683, %f689;
	sub.s32 	%r7830, %r7830, %r347;
	mov.b32 	%r7829, %f915;
	setp.ne.s32 	%p151, %r7830, 0;
	setp.ne.s32 	%p152, %r7829, 0;
	and.pred  	%p153, %p151, %p152;
	@%p153 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i1395
	setp.gt.u32 	%p154, %r141, 2139095039;
	selp.f32 	%f690, 0f7FFFFFFF, 0f4B800000, %p154;
	mul.f32 	%f691, %f915, 0f34000000;
	mul.f32 	%f916, %f690, %f691;
	bra.uni 	LBB0_132;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i1365
	div.approx.f32 	%f674, %f916, %f185;
	cvt.rzi.f32.f32 	%f914, %f674;
	fma.rn.f32 	%f151, %f914, 0fC0000000, %f916;
	mov.b32 	%r140, %f151;
	setp.lt.u32 	%p145, %r140, 1073741824;
	@%p145 bra 	LBB0_127;
// %bb.85:
	setp.lt.u32 	%p146, %r140, -2147483647;
	@%p146 bra 	LBB0_125;
// %bb.86:
	add.f32 	%f679, %f914, 0fBF800000;
	setp.lt.f32 	%p149, %f151, 0fC0000000;
	add.f32 	%f680, %f679, 0fBF800000;
	selp.f32 	%f914, %f680, %f679, %p149;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f914, %f914, 0f3F800000;
	setp.ltu.f32 	%p147, %f151, 0f40800000;
	@%p147 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1370
	add.f32 	%f675, %f914, 0f3F800000;
	fma.rn.f32 	%f677, %f185, 0fC0400000, %f151;
	setp.ge.f32 	%p148, %f677, 0f00000000;
	add.f32 	%f678, %f675, 0f3F800000;
	selp.f32 	%f914, %f678, %f675, %p148;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i1374
	fma.rn.f32 	%f916, %f914, 0fC0000000, %f916;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i1399
	abs.f32 	%f692, %f916;
	setp.gtu.f32 	%p155, %f692, 0f7F800000;
	@%p155 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r349, %f112;
	and.b32  	%r350, %r349, -2147483648;
	mov.b32 	%r351, %f916;
	or.b32  	%r352, %r350, %r351;
	mov.b32 	%f916, %r352;
LBB0_134:                               // %__nv_fmodf.exit1400
	{ // callseq 11, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9851, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd66, [retval0+0];
	} // callseq 11
	cvt.rn.f32.s64 	%f723, %rd66;
	div.approx.f32 	%f167, %f94, %f723;
	abs.f32 	%f920, %f167;
	setp.lt.f32 	%p163, %f920, 0f40000000;
	@%p163 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p164, %f920, 0f4B800000;
	@%p164 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r149, %f920;
	and.b32  	%r361, %r149, 8388607;
	or.b32  	%r7831, %r361, 1065353216;
	mov.b32 	%f919, %r7831;
	add.s32 	%r362, %r149, -1073741824;
	and.b32  	%r7832, %r362, -8388608;
	setp.eq.s32 	%p170, %r7832, 0;
	@%p170 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i1439.preheader
	mov.f32 	%f733, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f732,%f733;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i1439
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r363, %r7832, 192937984;
	add.s32 	%r364, %r363, %r7831;
	mov.b32 	%f734, %r364;
	mul.f32 	%f735, %f732, %f734;
	sub.f32 	%f736, %f734, %f735;
	fma.rn.f32 	%f737, %f736, %f732, %f735;
	sub.f32 	%f738, %f734, %f737;
	fma.rz.f32 	%f739, %f738, %f732, %f737;
	cvt.rzi.f32.f32 	%f740, %f739;
	sub.f32 	%f919, %f734, %f740;
	sub.s32 	%r7832, %r7832, %r363;
	mov.b32 	%r7831, %f919;
	setp.ne.s32 	%p171, %r7832, 0;
	setp.ne.s32 	%p172, %r7831, 0;
	and.pred  	%p173, %p171, %p172;
	@%p173 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i1441
	setp.gt.u32 	%p174, %r149, 2139095039;
	selp.f32 	%f741, 0f7FFFFFFF, 0f4B800000, %p174;
	mul.f32 	%f742, %f919, 0f34000000;
	mul.f32 	%f920, %f741, %f742;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i1411
	div.approx.f32 	%f725, %f920, %f185;
	cvt.rzi.f32.f32 	%f918, %f725;
	fma.rn.f32 	%f170, %f918, 0fC0000000, %f920;
	mov.b32 	%r148, %f170;
	setp.lt.u32 	%p165, %r148, 1073741824;
	@%p165 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p166, %r148, -2147483647;
	@%p166 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f730, %f918, 0fBF800000;
	setp.lt.f32 	%p169, %f170, 0fC0000000;
	add.f32 	%f731, %f730, 0fBF800000;
	selp.f32 	%f918, %f731, %f730, %p169;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f918, %f918, 0f3F800000;
	setp.ltu.f32 	%p167, %f170, 0f40800000;
	@%p167 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i1416
	add.f32 	%f726, %f918, 0f3F800000;
	fma.rn.f32 	%f728, %f185, 0fC0400000, %f170;
	setp.ge.f32 	%p168, %f728, 0f00000000;
	add.f32 	%f729, %f726, 0f3F800000;
	selp.f32 	%f918, %f729, %f726, %p168;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i1420
	fma.rn.f32 	%f920, %f918, 0fC0000000, %f920;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i1445
	abs.f32 	%f743, %f920;
	setp.gtu.f32 	%p175, %f743, 0f7F800000;
	@%p175 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r365, %f167;
	and.b32  	%r366, %r365, -2147483648;
	mov.b32 	%r367, %f920;
	or.b32  	%r368, %r366, %r367;
	mov.b32 	%f920, %r368;
LBB0_148:                               // %__nv_fmodf.exit1446
	{ // callseq 12, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd48;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd49;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_9851, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd70, [retval0+0];
	} // callseq 12
	setp.eq.s64 	%p183, %rd70, 64;
	@%p183 bra 	LBB0_87;
	bra.uni 	LBB0_149;
LBB0_87:                                // %L1200
	shr.u32 	%r16, %r4, 1;
	shr.u32 	%r22, %r4, 3;
	and.b32  	%r383, %r22, 2;
	and.b32  	%r384, %r16, 4;
	or.b32  	%r385, %r20, %r383;
	or.b32  	%r74, %r385, %r384;
	mul.lo.s32 	%r75, %r52, %r74;
	cvt.rn.f32.s32 	%f776, %r75;
	div.approx.f32 	%f114, %f776, %f568;
	abs.f32 	%f908, %f114;
	setp.lt.f32 	%p184, %f908, 0f40000000;
	@%p184 bra 	LBB0_99;
// %bb.88:
	setp.gtu.f32 	%p185, %f908, 0f4B800000;
	@%p185 bra 	LBB0_95;
	bra.uni 	LBB0_89;
LBB0_95:
	mov.b32 	%r77, %f908;
	and.b32  	%r386, %r77, 8388607;
	or.b32  	%r7799, %r386, 1065353216;
	mov.b32 	%f907, %r7799;
	add.s32 	%r387, %r77, -1073741824;
	and.b32  	%r7800, %r387, -8388608;
	setp.eq.s32 	%p191, %r7800, 0;
	@%p191 bra 	LBB0_98;
// %bb.96:                              // %__nv_fmaf_rn.exit4.i.i.i1301.preheader
	mov.f32 	%f787, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f786,%f787;
	// end inline asm
LBB0_97:                                // %__nv_fmaf_rn.exit4.i.i.i1301
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r388, %r7800, 192937984;
	add.s32 	%r389, %r388, %r7799;
	mov.b32 	%f788, %r389;
	mul.f32 	%f789, %f786, %f788;
	sub.f32 	%f790, %f788, %f789;
	fma.rn.f32 	%f791, %f790, %f786, %f789;
	sub.f32 	%f792, %f788, %f791;
	fma.rz.f32 	%f793, %f792, %f786, %f791;
	cvt.rzi.f32.f32 	%f794, %f793;
	sub.f32 	%f907, %f788, %f794;
	sub.s32 	%r7800, %r7800, %r388;
	mov.b32 	%r7799, %f907;
	setp.ne.s32 	%p192, %r7800, 0;
	setp.ne.s32 	%p193, %r7799, 0;
	and.pred  	%p194, %p192, %p193;
	@%p194 bra 	LBB0_97;
LBB0_98:                                // %__internal_fmodf_slowpath_mod.exit.i.i1303
	setp.gt.u32 	%p195, %r77, 2139095039;
	selp.f32 	%f795, 0f7FFFFFFF, 0f4B800000, %p195;
	mul.f32 	%f796, %f907, 0f34000000;
	mul.f32 	%f908, %f795, %f796;
	bra.uni 	LBB0_99;
LBB0_89:                                // %__nv_fast_fdividef.exit.i.i.i1273
	div.approx.f32 	%f779, %f908, %f185;
	cvt.rzi.f32.f32 	%f906, %f779;
	fma.rn.f32 	%f117, %f906, 0fC0000000, %f908;
	mov.b32 	%r76, %f117;
	setp.lt.u32 	%p186, %r76, 1073741824;
	@%p186 bra 	LBB0_94;
// %bb.90:
	setp.lt.u32 	%p187, %r76, -2147483647;
	@%p187 bra 	LBB0_92;
// %bb.91:
	add.f32 	%f784, %f906, 0fBF800000;
	setp.lt.f32 	%p190, %f117, 0fC0000000;
	add.f32 	%f785, %f784, 0fBF800000;
	selp.f32 	%f906, %f785, %f784, %p190;
	bra.uni 	LBB0_94;
LBB0_92:
	add.f32 	%f906, %f906, 0f3F800000;
	setp.ltu.f32 	%p188, %f117, 0f40800000;
	@%p188 bra 	LBB0_94;
// %bb.93:                              // %__nv_fmaf_rn.exit.i.i.i1278
	add.f32 	%f780, %f906, 0f3F800000;
	fma.rn.f32 	%f782, %f185, 0fC0400000, %f117;
	setp.ge.f32 	%p189, %f782, 0f00000000;
	add.f32 	%f783, %f780, 0f3F800000;
	selp.f32 	%f906, %f783, %f780, %p189;
LBB0_94:                                // %__internal_fmodf_fastpath_quot.exit.i.i1282
	fma.rn.f32 	%f908, %f906, 0fC0000000, %f908;
LBB0_99:                                // %__internal_fmodf_kernel.exit.i1307
	abs.f32 	%f797, %f908;
	setp.gtu.f32 	%p196, %f797, 0f7F800000;
	@%p196 bra 	LBB0_101;
// %bb.100:
	mov.b32 	%r390, %f114;
	and.b32  	%r391, %r390, -2147483648;
	mov.b32 	%r392, %f908;
	or.b32  	%r393, %r391, %r392;
	mov.b32 	%f908, %r393;
LBB0_101:                               // %__nv_fmodf.exit1308
	shl.b32 	%r402, %r74, 3;
	sub.s32 	%r403, %r75, %r402;
	cvt.rn.f32.s32 	%f828, %r403;
	div.approx.f32 	%f133, %f828, %f568;
	abs.f32 	%f912, %f133;
	setp.lt.f32 	%p204, %f912, 0f40000000;
	@%p204 bra 	LBB0_113;
// %bb.102:
	setp.gtu.f32 	%p205, %f912, 0f4B800000;
	@%p205 bra 	LBB0_109;
	bra.uni 	LBB0_103;
LBB0_109:
	mov.b32 	%r85, %f912;
	and.b32  	%r404, %r85, 8388607;
	or.b32  	%r7801, %r404, 1065353216;
	mov.b32 	%f911, %r7801;
	add.s32 	%r405, %r85, -1073741824;
	and.b32  	%r7802, %r405, -8388608;
	setp.eq.s32 	%p211, %r7802, 0;
	@%p211 bra 	LBB0_112;
// %bb.110:                             // %__nv_fmaf_rn.exit4.i.i.i1347.preheader
	mov.f32 	%f839, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f838,%f839;
	// end inline asm
LBB0_111:                               // %__nv_fmaf_rn.exit4.i.i.i1347
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r406, %r7802, 192937984;
	add.s32 	%r407, %r406, %r7801;
	mov.b32 	%f840, %r407;
	mul.f32 	%f841, %f838, %f840;
	sub.f32 	%f842, %f840, %f841;
	fma.rn.f32 	%f843, %f842, %f838, %f841;
	sub.f32 	%f844, %f840, %f843;
	fma.rz.f32 	%f845, %f844, %f838, %f843;
	cvt.rzi.f32.f32 	%f846, %f845;
	sub.f32 	%f911, %f840, %f846;
	sub.s32 	%r7802, %r7802, %r406;
	mov.b32 	%r7801, %f911;
	setp.ne.s32 	%p212, %r7802, 0;
	setp.ne.s32 	%p213, %r7801, 0;
	and.pred  	%p214, %p212, %p213;
	@%p214 bra 	LBB0_111;
LBB0_112:                               // %__internal_fmodf_slowpath_mod.exit.i.i1349
	setp.gt.u32 	%p215, %r85, 2139095039;
	selp.f32 	%f847, 0f7FFFFFFF, 0f4B800000, %p215;
	mul.f32 	%f848, %f911, 0f34000000;
	mul.f32 	%f912, %f847, %f848;
	bra.uni 	LBB0_113;
LBB0_103:                               // %__nv_fast_fdividef.exit.i.i.i1319
	div.approx.f32 	%f831, %f912, %f185;
	cvt.rzi.f32.f32 	%f910, %f831;
	fma.rn.f32 	%f136, %f910, 0fC0000000, %f912;
	mov.b32 	%r84, %f136;
	setp.lt.u32 	%p206, %r84, 1073741824;
	@%p206 bra 	LBB0_108;
// %bb.104:
	setp.lt.u32 	%p207, %r84, -2147483647;
	@%p207 bra 	LBB0_106;
// %bb.105:
	add.f32 	%f836, %f910, 0fBF800000;
	setp.lt.f32 	%p210, %f136, 0fC0000000;
	add.f32 	%f837, %f836, 0fBF800000;
	selp.f32 	%f910, %f837, %f836, %p210;
	bra.uni 	LBB0_108;
LBB0_106:
	add.f32 	%f910, %f910, 0f3F800000;
	setp.ltu.f32 	%p208, %f136, 0f40800000;
	@%p208 bra 	LBB0_108;
// %bb.107:                             // %__nv_fmaf_rn.exit.i.i.i1324
	add.f32 	%f832, %f910, 0f3F800000;
	fma.rn.f32 	%f834, %f185, 0fC0400000, %f136;
	setp.ge.f32 	%p209, %f834, 0f00000000;
	add.f32 	%f835, %f832, 0f3F800000;
	selp.f32 	%f910, %f835, %f832, %p209;
LBB0_108:                               // %__internal_fmodf_fastpath_quot.exit.i.i1328
	fma.rn.f32 	%f912, %f910, 0fC0000000, %f912;
LBB0_113:                               // %__internal_fmodf_kernel.exit.i1353
	abs.f32 	%f849, %f912;
	setp.gtu.f32 	%p216, %f849, 0f7F800000;
	@%p216 bra 	LBB0_115;
// %bb.114:
	mov.b32 	%r408, %f133;
	and.b32  	%r409, %r408, -2147483648;
	mov.b32 	%r410, %f912;
	or.b32  	%r411, %r409, %r410;
	mov.b32 	%f912, %r411;
LBB0_115:                               // %__nv_fmodf.exit1354
	setp.le.s32 	%p224, %r6, %r5;
	mov.u32 	%r7790, 0;
	@%p224 bra 	LBB0_122;
// %bb.116:                             // %L1370.lr.ph
	mov.f32 	%f189, 0f43808000;
	div.approx.f32 	%f190, %f188, %f189;
	div.approx.f32 	%f224, %f222, %f189;
	div.approx.f32 	%f259, %f257, %f189;
	div.approx.f32 	%f293, %f291, %f189;
	div.approx.f32 	%f328, %f326, %f189;
	div.approx.f32 	%f362, %f360, %f189;
	div.approx.f32 	%f397, %f395, %f189;
	div.approx.f32 	%f431, %f429, %f189;
	abs.f32 	%f191, %f190;
	abs.f32 	%f225, %f224;
	abs.f32 	%f260, %f259;
	abs.f32 	%f294, %f293;
	abs.f32 	%f329, %f328;
	abs.f32 	%f363, %f362;
	abs.f32 	%f398, %f397;
	abs.f32 	%f432, %f431;
	setp.gt.f32 	%p13, %f191, 0f4B800000;
	mul.f32 	%f192, %f190, 0f00000000;
	setp.gt.f32 	%p19, %f225, 0f4B800000;
	mul.f32 	%f226, %f224, 0f00000000;
	setp.gt.f32 	%p25, %f260, 0f4B800000;
	mul.f32 	%f261, %f259, 0f00000000;
	setp.gt.f32 	%p31, %f294, 0f4B800000;
	mul.f32 	%f295, %f293, 0f00000000;
	setp.gt.f32 	%p37, %f329, 0f4B800000;
	mul.f32 	%f330, %f328, 0f00000000;
	setp.gt.f32 	%p43, %f363, 0f4B800000;
	mul.f32 	%f364, %f362, 0f00000000;
	setp.gt.f32 	%p49, %f398, 0f4B800000;
	mul.f32 	%f399, %f397, 0f00000000;
	setp.gt.f32 	%p55, %f432, 0f4B800000;
	mul.f32 	%f433, %f431, 0f00000000;
	selp.f32 	%f193, %f192, %f190, %p13;
	selp.f32 	%f227, %f226, %f224, %p19;
	selp.f32 	%f262, %f261, %f259, %p25;
	selp.f32 	%f296, %f295, %f293, %p31;
	selp.f32 	%f331, %f330, %f328, %p37;
	selp.f32 	%f365, %f364, %f362, %p43;
	selp.f32 	%f400, %f399, %f397, %p49;
	selp.f32 	%f434, %f433, %f431, %p55;
	add.f32 	%f589, %f900, %f900;
	add.f32 	%f640, %f904, %f904;
	add.f32 	%f194, %f193, %f193;
	add.f32 	%f228, %f227, %f227;
	add.f32 	%f263, %f262, %f262;
	add.f32 	%f297, %f296, %f296;
	add.f32 	%f332, %f331, %f331;
	add.f32 	%f366, %f365, %f365;
	add.f32 	%f401, %f400, %f400;
	add.f32 	%f435, %f434, %f434;
	add.f32 	%f484, %f892, %f892;
	add.f32 	%f536, %f896, %f896;
	mov.b32 	%r307, %f589;
	mov.b32 	%r337, %f640;
	add.f32 	%f693, %f916, %f916;
	add.f32 	%f744, %f920, %f920;
	mov.b32 	%r187, %f194;
	mov.b32 	%r194, %f228;
	mov.b32 	%r205, %f263;
	mov.b32 	%r212, %f297;
	mov.b32 	%r223, %f332;
	mov.b32 	%r230, %f366;
	mov.b32 	%r241, %f401;
	mov.b32 	%r248, %f435;
	mov.b32 	%r266, %f484;
	mov.b32 	%r289, %f536;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	mov.b32 	%r353, %f693;
	mov.b32 	%r375, %f744;
	and.b32  	%r188, %r187, -2147483648;
	and.b32  	%r195, %r194, -2147483648;
	and.b32  	%r206, %r205, -2147483648;
	and.b32  	%r213, %r212, -2147483648;
	and.b32  	%r224, %r223, -2147483648;
	and.b32  	%r231, %r230, -2147483648;
	and.b32  	%r242, %r241, -2147483648;
	and.b32  	%r249, %r248, -2147483648;
	and.b32  	%r267, %r266, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	add.f32 	%f798, %f908, %f908;
	or.b32  	%r189, %r188, 1056964608;
	or.b32  	%r196, %r195, 1056964608;
	or.b32  	%r207, %r206, 1056964608;
	or.b32  	%r214, %r213, 1056964608;
	or.b32  	%r225, %r224, 1056964608;
	or.b32  	%r232, %r231, 1056964608;
	or.b32  	%r243, %r242, 1056964608;
	or.b32  	%r250, %r249, 1056964608;
	or.b32  	%r268, %r267, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	mov.b32 	%f590, %r309;
	mov.b32 	%f641, %r339;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	mov.b32 	%r394, %f798;
	mov.b32 	%f195, %r189;
	mov.b32 	%f229, %r196;
	mov.b32 	%f264, %r207;
	mov.b32 	%f298, %r214;
	mov.b32 	%f333, %r225;
	mov.b32 	%f367, %r232;
	mov.b32 	%f402, %r243;
	mov.b32 	%f436, %r250;
	mov.b32 	%f485, %r268;
	mov.b32 	%f537, %r291;
	add.f32 	%f591, %f589, %f590;
	abs.f32 	%f593, %f589;
	add.f32 	%f642, %f640, %f641;
	abs.f32 	%f644, %f640;
	mov.b32 	%f694, %r355;
	mov.b32 	%f745, %r377;
	and.b32  	%r395, %r394, -2147483648;
	add.f32 	%f196, %f194, %f195;
	abs.f32 	%f198, %f194;
	add.f32 	%f230, %f228, %f229;
	abs.f32 	%f232, %f228;
	add.f32 	%f265, %f263, %f264;
	abs.f32 	%f267, %f263;
	add.f32 	%f299, %f297, %f298;
	abs.f32 	%f301, %f297;
	add.f32 	%f334, %f332, %f333;
	abs.f32 	%f336, %f332;
	add.f32 	%f368, %f366, %f367;
	abs.f32 	%f370, %f366;
	add.f32 	%f403, %f401, %f402;
	abs.f32 	%f405, %f401;
	add.f32 	%f437, %f435, %f436;
	abs.f32 	%f439, %f435;
	add.f32 	%f486, %f484, %f485;
	abs.f32 	%f488, %f484;
	add.f32 	%f538, %f536, %f537;
	abs.f32 	%f540, %f536;
	cvt.rzi.f32.f32 	%f592, %f591;
	setp.gt.f32 	%p115, %f593, 0f4B000000;
	cvt.rzi.f32.f32 	%f643, %f642;
	setp.gt.f32 	%p135, %f644, 0f4B000000;
	add.f32 	%f695, %f693, %f694;
	abs.f32 	%f697, %f693;
	add.f32 	%f746, %f744, %f745;
	abs.f32 	%f748, %f744;
	or.b32  	%r396, %r395, 1056964608;
	cvt.rzi.f32.f32 	%f197, %f196;
	setp.gt.f32 	%p14, %f198, 0f4B000000;
	cvt.rzi.f32.f32 	%f231, %f230;
	setp.gt.f32 	%p20, %f232, 0f4B000000;
	cvt.rzi.f32.f32 	%f266, %f265;
	setp.gt.f32 	%p26, %f267, 0f4B000000;
	cvt.rzi.f32.f32 	%f300, %f299;
	setp.gt.f32 	%p32, %f301, 0f4B000000;
	cvt.rzi.f32.f32 	%f335, %f334;
	setp.gt.f32 	%p38, %f336, 0f4B000000;
	cvt.rzi.f32.f32 	%f369, %f368;
	setp.gt.f32 	%p44, %f370, 0f4B000000;
	cvt.rzi.f32.f32 	%f404, %f403;
	setp.gt.f32 	%p50, %f405, 0f4B000000;
	cvt.rzi.f32.f32 	%f438, %f437;
	setp.gt.f32 	%p56, %f439, 0f4B000000;
	cvt.rzi.f32.f32 	%f487, %f486;
	setp.gt.f32 	%p74, %f488, 0f4B000000;
	cvt.rzi.f32.f32 	%f539, %f538;
	setp.gt.f32 	%p94, %f540, 0f4B000000;
	selp.f32 	%f594, %f589, %f592, %p115;
	cvt.rzi.f32.f32 	%f595, %f589;
	setp.lt.f32 	%p116, %f593, 0f3F000000;
	selp.f32 	%f645, %f640, %f643, %p135;
	cvt.rzi.f32.f32 	%f646, %f640;
	setp.lt.f32 	%p136, %f644, 0f3F000000;
	cvt.rzi.f32.f32 	%f696, %f695;
	setp.gt.f32 	%p156, %f697, 0f4B000000;
	cvt.rzi.f32.f32 	%f747, %f746;
	setp.gt.f32 	%p176, %f748, 0f4B000000;
	mov.b32 	%f799, %r396;
	selp.f32 	%f199, %f194, %f197, %p14;
	cvt.rzi.f32.f32 	%f200, %f194;
	setp.lt.f32 	%p15, %f198, 0f3F000000;
	selp.f32 	%f233, %f228, %f231, %p20;
	cvt.rzi.f32.f32 	%f234, %f228;
	setp.lt.f32 	%p21, %f232, 0f3F000000;
	selp.f32 	%f268, %f263, %f266, %p26;
	cvt.rzi.f32.f32 	%f269, %f263;
	setp.lt.f32 	%p27, %f267, 0f3F000000;
	selp.f32 	%f302, %f297, %f300, %p32;
	cvt.rzi.f32.f32 	%f303, %f297;
	setp.lt.f32 	%p33, %f301, 0f3F000000;
	selp.f32 	%f337, %f332, %f335, %p38;
	cvt.rzi.f32.f32 	%f338, %f332;
	setp.lt.f32 	%p39, %f336, 0f3F000000;
	selp.f32 	%f371, %f366, %f369, %p44;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p45, %f370, 0f3F000000;
	selp.f32 	%f406, %f401, %f404, %p50;
	cvt.rzi.f32.f32 	%f407, %f401;
	setp.lt.f32 	%p51, %f405, 0f3F000000;
	selp.f32 	%f440, %f435, %f438, %p56;
	cvt.rzi.f32.f32 	%f441, %f435;
	setp.lt.f32 	%p57, %f439, 0f3F000000;
	selp.f32 	%f489, %f484, %f487, %p74;
	cvt.rzi.f32.f32 	%f490, %f484;
	setp.lt.f32 	%p75, %f488, 0f3F000000;
	selp.f32 	%f541, %f536, %f539, %p94;
	cvt.rzi.f32.f32 	%f542, %f536;
	setp.lt.f32 	%p95, %f540, 0f3F000000;
	selp.f32 	%f596, %f595, %f594, %p116;
	selp.f32 	%f647, %f646, %f645, %p136;
	selp.f32 	%f698, %f693, %f696, %p156;
	cvt.rzi.f32.f32 	%f699, %f693;
	setp.lt.f32 	%p157, %f697, 0f3F000000;
	selp.f32 	%f749, %f744, %f747, %p176;
	cvt.rzi.f32.f32 	%f750, %f744;
	setp.lt.f32 	%p177, %f748, 0f3F000000;
	add.f32 	%f800, %f798, %f799;
	abs.f32 	%f802, %f798;
	selp.f32 	%f201, %f200, %f199, %p15;
	selp.f32 	%f235, %f234, %f233, %p21;
	selp.f32 	%f270, %f269, %f268, %p27;
	selp.f32 	%f304, %f303, %f302, %p33;
	selp.f32 	%f339, %f338, %f337, %p39;
	selp.f32 	%f373, %f372, %f371, %p45;
	selp.f32 	%f408, %f407, %f406, %p51;
	selp.f32 	%f442, %f441, %f440, %p57;
	selp.f32 	%f491, %f490, %f489, %p75;
	selp.f32 	%f543, %f542, %f541, %p95;
	fma.rn.f32 	%f597, %f596, 0fBF000000, %f900;
	fma.rn.f32 	%f648, %f647, 0fBF000000, %f904;
	selp.f32 	%f700, %f699, %f698, %p157;
	selp.f32 	%f751, %f750, %f749, %p177;
	cvt.rzi.f32.f32 	%f801, %f800;
	setp.gt.f32 	%p197, %f802, 0f4B000000;
	fma.rn.f32 	%f202, %f201, 0fBF000000, %f193;
	fma.rn.f32 	%f236, %f235, 0fBF000000, %f227;
	fma.rn.f32 	%f271, %f270, 0fBF000000, %f262;
	fma.rn.f32 	%f305, %f304, 0fBF000000, %f296;
	fma.rn.f32 	%f340, %f339, 0fBF000000, %f331;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f365;
	fma.rn.f32 	%f409, %f408, 0fBF000000, %f400;
	fma.rn.f32 	%f443, %f442, 0fBF000000, %f434;
	fma.rn.f32 	%f492, %f491, 0fBF000000, %f892;
	fma.rn.f32 	%f544, %f543, 0fBF000000, %f896;
	mul.f32 	%f598, %f597, %f597;
	mul.f32 	%f649, %f648, %f648;
	fma.rn.f32 	%f701, %f700, 0fBF000000, %f916;
	fma.rn.f32 	%f752, %f751, 0fBF000000, %f920;
	selp.f32 	%f803, %f798, %f801, %p197;
	cvt.rzi.f32.f32 	%f804, %f798;
	setp.lt.f32 	%p198, %f802, 0f3F000000;
	mul.f32 	%f203, %f202, %f202;
	mul.f32 	%f237, %f236, %f236;
	mul.f32 	%f272, %f271, %f271;
	mul.f32 	%f306, %f305, %f305;
	mul.f32 	%f341, %f340, %f340;
	mul.f32 	%f375, %f374, %f374;
	mul.f32 	%f410, %f409, %f409;
	mul.f32 	%f444, %f443, %f443;
	mul.f32 	%f493, %f492, %f492;
	mul.f32 	%f545, %f544, %f544;
	fma.rn.f32 	%f599, %f598, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f600, %f598, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f650, %f649, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f651, %f649, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f702, %f701, %f701;
	mul.f32 	%f753, %f752, %f752;
	selp.f32 	%f805, %f804, %f803, %p198;
	cvt.rzi.s32.f32 	%r190, %f201;
	fma.rn.f32 	%f204, %f203, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f205, %f203, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r197, %f235;
	fma.rn.f32 	%f238, %f237, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f239, %f237, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r208, %f270;
	fma.rn.f32 	%f273, %f272, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f274, %f272, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r215, %f304;
	fma.rn.f32 	%f307, %f306, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f308, %f306, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r226, %f339;
	fma.rn.f32 	%f342, %f341, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f343, %f341, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r233, %f373;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r244, %f408;
	fma.rn.f32 	%f411, %f410, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f412, %f410, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r251, %f442;
	fma.rn.f32 	%f445, %f444, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f446, %f444, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f494, %f493, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f495, %f493, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f546, %f545, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f547, %f545, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f596;
	fma.rn.f32 	%f601, %f599, %f598, 0fC0A55DF6;
	fma.rn.f32 	%f602, %f600, %f598, 0f4081E0CF;
	fma.rn.f32 	%f603, %f598, %f597, 0f00000000;
	cvt.rzi.s32.f32 	%r340, %f647;
	fma.rn.f32 	%f652, %f650, %f649, 0fC0A55DF6;
	fma.rn.f32 	%f653, %f651, %f649, 0f4081E0CF;
	fma.rn.f32 	%f654, %f649, %f648, 0f00000000;
	fma.rn.f32 	%f703, %f702, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f704, %f702, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f754, %f753, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f755, %f753, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f806, %f805, 0fBF000000, %f908;
	add.s32 	%r191, %r190, 1;
	fma.rn.f32 	%f206, %f204, %f203, 0fC0A55DF6;
	fma.rn.f32 	%f207, %f205, %f203, 0f4081E0CF;
	fma.rn.f32 	%f208, %f203, %f202, 0f00000000;
	add.s32 	%r198, %r197, 1;
	fma.rn.f32 	%f240, %f238, %f237, 0fC0A55DF6;
	fma.rn.f32 	%f241, %f239, %f237, 0f4081E0CF;
	fma.rn.f32 	%f242, %f237, %f236, 0f00000000;
	add.s32 	%r209, %r208, 1;
	fma.rn.f32 	%f275, %f273, %f272, 0fC0A55DF6;
	fma.rn.f32 	%f276, %f274, %f272, 0f4081E0CF;
	fma.rn.f32 	%f277, %f272, %f271, 0f00000000;
	add.s32 	%r216, %r215, 1;
	fma.rn.f32 	%f309, %f307, %f306, 0fC0A55DF6;
	fma.rn.f32 	%f310, %f308, %f306, 0f4081E0CF;
	fma.rn.f32 	%f311, %f306, %f305, 0f00000000;
	add.s32 	%r227, %r226, 1;
	fma.rn.f32 	%f344, %f342, %f341, 0fC0A55DF6;
	fma.rn.f32 	%f345, %f343, %f341, 0f4081E0CF;
	fma.rn.f32 	%f346, %f341, %f340, 0f00000000;
	add.s32 	%r234, %r233, 1;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	add.s32 	%r245, %r244, 1;
	fma.rn.f32 	%f413, %f411, %f410, 0fC0A55DF6;
	fma.rn.f32 	%f414, %f412, %f410, 0f4081E0CF;
	fma.rn.f32 	%f415, %f410, %f409, 0f00000000;
	add.s32 	%r252, %r251, 1;
	fma.rn.f32 	%f447, %f445, %f444, 0fC0A55DF6;
	fma.rn.f32 	%f448, %f446, %f444, 0f4081E0CF;
	fma.rn.f32 	%f449, %f444, %f443, 0f00000000;
	cvt.rzi.s32.f32 	%r269, %f491;
	fma.rn.f32 	%f496, %f494, %f493, 0fC0A55DF6;
	fma.rn.f32 	%f497, %f495, %f493, 0f4081E0CF;
	fma.rn.f32 	%f498, %f493, %f492, 0f00000000;
	cvt.rzi.s32.f32 	%r292, %f543;
	fma.rn.f32 	%f548, %f546, %f545, 0fC0A55DF6;
	fma.rn.f32 	%f549, %f547, %f545, 0f4081E0CF;
	fma.rn.f32 	%f550, %f545, %f544, 0f00000000;
	fma.rn.f32 	%f604, %f602, %f598, 0fC09DE9E6;
	fma.rn.f32 	%f605, %f601, %f603, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f655, %f653, %f649, 0fC09DE9E6;
	fma.rn.f32 	%f656, %f652, %f654, 0f00000000;
	and.b32  	%r341, %r340, 1;
	cvt.rzi.s32.f32 	%r356, %f700;
	fma.rn.f32 	%f705, %f703, %f702, 0fC0A55DF6;
	fma.rn.f32 	%f706, %f704, %f702, 0f4081E0CF;
	fma.rn.f32 	%f707, %f702, %f701, 0f00000000;
	cvt.rzi.s32.f32 	%r378, %f751;
	fma.rn.f32 	%f756, %f754, %f753, 0fC0A55DF6;
	fma.rn.f32 	%f757, %f755, %f753, 0f4081E0CF;
	fma.rn.f32 	%f758, %f753, %f752, 0f00000000;
	mul.f32 	%f807, %f806, %f806;
	fma.rn.f32 	%f209, %f207, %f203, 0fC09DE9E6;
	fma.rn.f32 	%f210, %f206, %f208, 0f00000000;
	and.b32  	%r192, %r191, 1;
	fma.rn.f32 	%f243, %f241, %f237, 0fC09DE9E6;
	fma.rn.f32 	%f244, %f240, %f242, 0f00000000;
	and.b32  	%r199, %r198, 1;
	fma.rn.f32 	%f278, %f276, %f272, 0fC09DE9E6;
	fma.rn.f32 	%f279, %f275, %f277, 0f00000000;
	and.b32  	%r210, %r209, 1;
	fma.rn.f32 	%f312, %f310, %f306, 0fC09DE9E6;
	fma.rn.f32 	%f313, %f309, %f311, 0f00000000;
	and.b32  	%r217, %r216, 1;
	fma.rn.f32 	%f347, %f345, %f341, 0fC09DE9E6;
	fma.rn.f32 	%f348, %f344, %f346, 0f00000000;
	and.b32  	%r228, %r227, 1;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	and.b32  	%r235, %r234, 1;
	fma.rn.f32 	%f416, %f414, %f410, 0fC09DE9E6;
	fma.rn.f32 	%f417, %f413, %f415, 0f00000000;
	and.b32  	%r246, %r245, 1;
	fma.rn.f32 	%f450, %f448, %f444, 0fC09DE9E6;
	fma.rn.f32 	%f451, %f447, %f449, 0f00000000;
	and.b32  	%r253, %r252, 1;
	fma.rn.f32 	%f499, %f497, %f493, 0fC09DE9E6;
	fma.rn.f32 	%f500, %f496, %f498, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f551, %f549, %f545, 0fC09DE9E6;
	fma.rn.f32 	%f552, %f548, %f550, 0f00000000;
	and.b32  	%r293, %r292, 1;
	fma.rn.f32 	%f606, %f604, %f598, 0f3F800000;
	fma.rn.f32 	%f607, %f597, 0f40490FDB, %f605;
	setp.eq.b32 	%p117, %r311, 1;
	fma.rn.f32 	%f657, %f655, %f649, 0f3F800000;
	fma.rn.f32 	%f658, %f648, 0f40490FDB, %f656;
	setp.eq.b32 	%p137, %r341, 1;
	fma.rn.f32 	%f708, %f706, %f702, 0fC09DE9E6;
	fma.rn.f32 	%f709, %f705, %f707, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f759, %f757, %f753, 0fC09DE9E6;
	fma.rn.f32 	%f760, %f756, %f758, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f808, %f807, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f809, %f807, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f211, %f209, %f203, 0f3F800000;
	fma.rn.f32 	%f212, %f202, 0f40490FDB, %f210;
	setp.eq.b32 	%p16, %r192, 1;
	fma.rn.f32 	%f245, %f243, %f237, 0f3F800000;
	fma.rn.f32 	%f246, %f236, 0f40490FDB, %f244;
	setp.eq.b32 	%p22, %r199, 1;
	fma.rn.f32 	%f280, %f278, %f272, 0f3F800000;
	fma.rn.f32 	%f281, %f271, 0f40490FDB, %f279;
	setp.eq.b32 	%p28, %r210, 1;
	fma.rn.f32 	%f314, %f312, %f306, 0f3F800000;
	fma.rn.f32 	%f315, %f305, 0f40490FDB, %f313;
	setp.eq.b32 	%p34, %r217, 1;
	fma.rn.f32 	%f349, %f347, %f341, 0f3F800000;
	fma.rn.f32 	%f350, %f340, 0f40490FDB, %f348;
	setp.eq.b32 	%p40, %r228, 1;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	setp.eq.b32 	%p46, %r235, 1;
	fma.rn.f32 	%f418, %f416, %f410, 0f3F800000;
	fma.rn.f32 	%f419, %f409, 0f40490FDB, %f417;
	setp.eq.b32 	%p52, %r246, 1;
	fma.rn.f32 	%f452, %f450, %f444, 0f3F800000;
	fma.rn.f32 	%f453, %f443, 0f40490FDB, %f451;
	setp.eq.b32 	%p58, %r253, 1;
	fma.rn.f32 	%f501, %f499, %f493, 0f3F800000;
	fma.rn.f32 	%f502, %f492, 0f40490FDB, %f500;
	setp.eq.b32 	%p76, %r270, 1;
	fma.rn.f32 	%f553, %f551, %f545, 0f3F800000;
	fma.rn.f32 	%f554, %f544, 0f40490FDB, %f552;
	setp.eq.b32 	%p96, %r293, 1;
	selp.f32 	%f608, %f606, %f607, %p117;
	and.b32  	%r312, %r310, 2;
	selp.f32 	%f659, %f657, %f658, %p137;
	and.b32  	%r342, %r340, 2;
	fma.rn.f32 	%f710, %f708, %f702, 0f3F800000;
	fma.rn.f32 	%f711, %f701, 0f40490FDB, %f709;
	setp.eq.b32 	%p158, %r357, 1;
	fma.rn.f32 	%f761, %f759, %f753, 0f3F800000;
	fma.rn.f32 	%f762, %f752, 0f40490FDB, %f760;
	setp.eq.b32 	%p178, %r379, 1;
	cvt.rzi.s32.f32 	%r397, %f805;
	fma.rn.f32 	%f810, %f808, %f807, 0fC0A55DF6;
	fma.rn.f32 	%f811, %f809, %f807, 0f4081E0CF;
	fma.rn.f32 	%f812, %f807, %f806, 0f00000000;
	selp.f32 	%f213, %f211, %f212, %p16;
	and.b32  	%r193, %r191, 2;
	mov.f32 	%f214, 0f00000000;
	selp.f32 	%f247, %f245, %f246, %p22;
	and.b32  	%r200, %r198, 2;
	selp.f32 	%f282, %f280, %f281, %p28;
	and.b32  	%r211, %r209, 2;
	selp.f32 	%f316, %f314, %f315, %p34;
	and.b32  	%r218, %r216, 2;
	selp.f32 	%f351, %f349, %f350, %p40;
	and.b32  	%r229, %r227, 2;
	selp.f32 	%f385, %f383, %f384, %p46;
	and.b32  	%r236, %r234, 2;
	selp.f32 	%f420, %f418, %f419, %p52;
	and.b32  	%r247, %r245, 2;
	selp.f32 	%f454, %f452, %f453, %p58;
	and.b32  	%r254, %r252, 2;
	selp.f32 	%f503, %f501, %f502, %p76;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f555, %f553, %f554, %p96;
	and.b32  	%r294, %r292, 2;
	setp.eq.s32 	%p118, %r312, 0;
	neg.f32 	%f610, %f608;
	add.s32 	%r313, %r310, 1;
	cvt.rzi.f32.f32 	%f615, %f900;
	setp.eq.s32 	%p138, %r342, 0;
	neg.f32 	%f661, %f659;
	add.s32 	%r343, %r340, 1;
	cvt.rzi.f32.f32 	%f666, %f904;
	selp.f32 	%f712, %f710, %f711, %p158;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f763, %f761, %f762, %p178;
	and.b32  	%r380, %r378, 2;
	fma.rn.f32 	%f813, %f811, %f807, 0fC09DE9E6;
	fma.rn.f32 	%f814, %f810, %f812, 0f00000000;
	and.b32  	%r398, %r397, 1;
	setp.eq.s32 	%p17, %r193, 0;
	sub.f32 	%f215, %f214, %f213;
	setp.eq.s32 	%p23, %r200, 0;
	sub.f32 	%f249, %f214, %f247;
	setp.eq.s32 	%p29, %r211, 0;
	sub.f32 	%f284, %f214, %f282;
	setp.eq.s32 	%p35, %r218, 0;
	sub.f32 	%f318, %f214, %f316;
	setp.eq.s32 	%p41, %r229, 0;
	sub.f32 	%f353, %f214, %f351;
	setp.eq.s32 	%p47, %r236, 0;
	sub.f32 	%f387, %f214, %f385;
	setp.eq.s32 	%p53, %r247, 0;
	sub.f32 	%f422, %f214, %f420;
	setp.eq.s32 	%p59, %r254, 0;
	sub.f32 	%f456, %f214, %f454;
	setp.eq.s32 	%p77, %r271, 0;
	neg.f32 	%f505, %f503;
	add.s32 	%r272, %r269, 1;
	cvt.rzi.f32.f32 	%f510, %f892;
	setp.eq.s32 	%p97, %r294, 0;
	neg.f32 	%f557, %f555;
	add.s32 	%r295, %r292, 1;
	cvt.rzi.f32.f32 	%f562, %f896;
	selp.f32 	%f609, %f607, %f606, %p117;
	selp.f32 	%f611, %f608, %f610, %p118;
	and.b32  	%r314, %r313, 2;
	setp.eq.f32 	%p120, %f615, %f900;
	mul.f32 	%f616, %f900, 0f00000000;
	selp.f32 	%f660, %f658, %f657, %p137;
	selp.f32 	%f662, %f659, %f661, %p138;
	and.b32  	%r344, %r343, 2;
	setp.eq.f32 	%p140, %f666, %f904;
	mul.f32 	%f667, %f904, 0f00000000;
	setp.eq.s32 	%p159, %r358, 0;
	neg.f32 	%f714, %f712;
	add.s32 	%r359, %r356, 1;
	cvt.rzi.f32.f32 	%f719, %f916;
	setp.eq.s32 	%p179, %r380, 0;
	neg.f32 	%f765, %f763;
	add.s32 	%r381, %r378, 1;
	cvt.rzi.f32.f32 	%f770, %f920;
	fma.rn.f32 	%f815, %f813, %f807, 0f3F800000;
	fma.rn.f32 	%f816, %f806, 0f40490FDB, %f814;
	setp.eq.b32 	%p199, %r398, 1;
	selp.f32 	%f216, %f213, %f215, %p17;
	selp.f32 	%f250, %f247, %f249, %p23;
	selp.f32 	%f285, %f282, %f284, %p29;
	selp.f32 	%f319, %f316, %f318, %p35;
	selp.f32 	%f354, %f351, %f353, %p41;
	selp.f32 	%f388, %f385, %f387, %p47;
	selp.f32 	%f423, %f420, %f422, %p53;
	selp.f32 	%f457, %f454, %f456, %p59;
	selp.f32 	%f504, %f502, %f501, %p76;
	selp.f32 	%f506, %f503, %f505, %p77;
	and.b32  	%r273, %r272, 2;
	setp.eq.f32 	%p79, %f510, %f892;
	mul.f32 	%f511, %f892, 0f00000000;
	selp.f32 	%f556, %f554, %f553, %p96;
	selp.f32 	%f558, %f555, %f557, %p97;
	and.b32  	%r296, %r295, 2;
	setp.eq.f32 	%p99, %f562, %f896;
	mul.f32 	%f563, %f896, 0f00000000;
	setp.eq.s32 	%p119, %r314, 0;
	sub.f32 	%f613, %f214, %f609;
	selp.f32 	%f92, %f616, %f611, %p120;
	abs.f32 	%f617, %f900;
	setp.eq.s32 	%p139, %r344, 0;
	sub.f32 	%f664, %f214, %f660;
	selp.f32 	%f668, %f667, %f662, %p140;
	abs.f32 	%f669, %f904;
	selp.f32 	%f713, %f711, %f710, %p158;
	selp.f32 	%f715, %f712, %f714, %p159;
	and.b32  	%r360, %r359, 2;
	setp.eq.f32 	%p161, %f719, %f916;
	mul.f32 	%f720, %f916, 0f00000000;
	selp.f32 	%f764, %f762, %f761, %p178;
	selp.f32 	%f766, %f763, %f765, %p179;
	and.b32  	%r382, %r381, 2;
	setp.eq.f32 	%p181, %f770, %f920;
	mul.f32 	%f771, %f920, 0f00000000;
	selp.f32 	%f817, %f815, %f816, %p199;
	and.b32  	%r399, %r397, 2;
	mul.f32 	%f2, %f216, %f216;
	mul.f32 	%f7, %f250, %f250;
	mul.f32 	%f11, %f285, %f285;
	mul.f32 	%f16, %f319, %f319;
	mul.f32 	%f20, %f354, %f354;
	mul.f32 	%f25, %f388, %f388;
	mul.f32 	%f29, %f423, %f423;
	mul.f32 	%f34, %f457, %f457;
	setp.eq.s32 	%p78, %r273, 0;
	sub.f32 	%f508, %f214, %f504;
	selp.f32 	%f55, %f511, %f506, %p79;
	abs.f32 	%f512, %f892;
	setp.eq.s32 	%p98, %r296, 0;
	sub.f32 	%f560, %f214, %f556;
	selp.f32 	%f564, %f563, %f558, %p99;
	abs.f32 	%f565, %f896;
	selp.f32 	%f614, %f609, %f613, %p119;
	setp.gt.f32 	%p121, %f617, 0f4B800000;
	add.f32 	%f618, %f92, 0f3F800000;
	selp.f32 	%f665, %f660, %f664, %p139;
	setp.gt.f32 	%p141, %f669, 0f4B800000;
	add.f32 	%f670, %f668, 0f3F800000;
	setp.eq.s32 	%p160, %r360, 0;
	sub.f32 	%f717, %f214, %f713;
	selp.f32 	%f165, %f720, %f715, %p161;
	abs.f32 	%f721, %f916;
	setp.eq.s32 	%p180, %r382, 0;
	sub.f32 	%f768, %f214, %f764;
	selp.f32 	%f772, %f771, %f766, %p181;
	abs.f32 	%f773, %f920;
	setp.eq.s32 	%p200, %r399, 0;
	neg.f32 	%f819, %f817;
	add.s32 	%r400, %r397, 1;
	cvt.rzi.f32.f32 	%f824, %f908;
	mul.f32 	%f220, %f2, 0f3C0AF64E;
	mul.f32 	%f254, %f7, 0f3C0AF64E;
	mul.f32 	%f289, %f11, 0f3C0AF64E;
	mul.f32 	%f323, %f16, 0f3C0AF64E;
	mul.f32 	%f358, %f20, 0f3C0AF64E;
	mul.f32 	%f392, %f25, 0f3C0AF64E;
	mul.f32 	%f427, %f29, 0f3C0AF64E;
	mul.f32 	%f460, %f34, 0f3C0AF64E;
	selp.f32 	%f509, %f504, %f508, %p78;
	setp.gt.f32 	%p80, %f512, 0f4B800000;
	add.f32 	%f513, %f55, 0f3F800000;
	selp.f32 	%f561, %f556, %f560, %p98;
	setp.gt.f32 	%p100, %f565, 0f4B800000;
	add.f32 	%f566, %f564, 0f3F800000;
	selp.f32 	%f93, %f618, %f614, %p121;
	selp.f32 	%f671, %f670, %f665, %p141;
	selp.f32 	%f718, %f713, %f717, %p160;
	setp.gt.f32 	%p162, %f721, 0f4B800000;
	add.f32 	%f722, %f165, 0f3F800000;
	selp.f32 	%f769, %f764, %f768, %p180;
	setp.gt.f32 	%p182, %f773, 0f4B800000;
	add.f32 	%f774, %f772, 0f3F800000;
	selp.f32 	%f818, %f816, %f815, %p199;
	selp.f32 	%f820, %f817, %f819, %p200;
	and.b32  	%r401, %r400, 2;
	setp.eq.f32 	%p202, %f824, %f908;
	mul.f32 	%f825, %f908, 0f00000000;
	mul.f32 	%f6, %f220, %f882;
	mul.f32 	%f255, %f254, %f883;
	mul.f32 	%f15, %f289, %f884;
	mul.f32 	%f324, %f323, %f885;
	mul.f32 	%f24, %f358, %f886;
	mul.f32 	%f393, %f392, %f887;
	mul.f32 	%f33, %f427, %f888;
	mul.f32 	%f461, %f460, %f889;
	selp.f32 	%f56, %f513, %f509, %p80;
	selp.f32 	%f567, %f566, %f561, %p100;
	mov.b32 	%r327, %f671;
	mov.b32 	%r326, %f93;
	mov.b32 	%r333, %f668;
	mov.b32 	%r332, %f92;
	selp.f32 	%f166, %f722, %f718, %p162;
	selp.f32 	%f775, %f774, %f769, %p182;
	setp.eq.s32 	%p201, %r401, 0;
	sub.f32 	%f822, %f214, %f818;
	selp.f32 	%f131, %f825, %f820, %p202;
	abs.f32 	%f826, %f908;
	mov.b32 	%r203, %f255;
	mov.b32 	%r202, %f6;
	mov.b32 	%r221, %f324;
	mov.b32 	%r220, %f15;
	mov.b32 	%r239, %f393;
	mov.b32 	%r238, %f24;
	mov.b32 	%r257, %f461;
	mov.b32 	%r256, %f33;
	mov.b32 	%r285, %f567;
	mov.b32 	%r284, %f56;
	mov.b32 	%r288, %f564;
	mov.b32 	%r287, %f55;
	xor.b32  	%r330, %r333, -2147483648;
	xor.b32  	%r329, %r332, -2147483648;
	mov.b32 	%r371, %f775;
	mov.b32 	%r370, %f166;
	mov.b32 	%r374, %f772;
	mov.b32 	%r373, %f165;
	selp.f32 	%f823, %f818, %f822, %p201;
	setp.gt.f32 	%p203, %f826, 0f4B800000;
	add.f32 	%f827, %f131, 0f3F800000;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	and.b32  	%r9, %r4, 16;
	// begin inline asm
	cvt.rn.f16x2.f32 %r201, %r203, %r202;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r219, %r221, %r220;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r237, %r239, %r238;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r255, %r257, %r256;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	selp.f32 	%f132, %f827, %f823, %p203;
	add.f32 	%f850, %f912, %f912;
	mov.b32 	%r424, %f850;
	and.b32  	%r425, %r424, -2147483648;
	or.b32  	%r426, %r425, 1056964608;
	mov.b32 	%f851, %r426;
	add.f32 	%f852, %f850, %f851;
	cvt.rzi.f32.f32 	%f853, %f852;
	abs.f32 	%f854, %f850;
	setp.gt.f32 	%p217, %f854, 0f4B000000;
	selp.f32 	%f855, %f850, %f853, %p217;
	cvt.rzi.f32.f32 	%f856, %f850;
	setp.lt.f32 	%p218, %f854, 0f3F000000;
	selp.f32 	%f857, %f856, %f855, %p218;
	cvt.rzi.s32.f32 	%r427, %f857;
	fma.rn.f32 	%f858, %f857, 0fBF000000, %f912;
	mul.f32 	%f859, %f858, %f858;
	fma.rn.f32 	%f860, %f859, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f861, %f859, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f862, %f860, %f859, 0fC0A55DF6;
	fma.rn.f32 	%f863, %f861, %f859, 0f4081E0CF;
	fma.rn.f32 	%f864, %f859, %f858, 0f00000000;
	fma.rn.f32 	%f865, %f863, %f859, 0fC09DE9E6;
	fma.rn.f32 	%f866, %f862, %f864, 0f00000000;
	fma.rn.f32 	%f867, %f865, %f859, 0f3F800000;
	fma.rn.f32 	%f868, %f858, 0f40490FDB, %f866;
	and.b32  	%r428, %r427, 1;
	setp.eq.b32 	%p219, %r428, 1;
	selp.f32 	%f869, %f867, %f868, %p219;
	selp.f32 	%f870, %f868, %f867, %p219;
	and.b32  	%r429, %r427, 2;
	setp.eq.s32 	%p220, %r429, 0;
	neg.f32 	%f871, %f869;
	selp.f32 	%f872, %f869, %f871, %p220;
	add.s32 	%r430, %r427, 1;
	and.b32  	%r431, %r430, 2;
	setp.eq.s32 	%p221, %r431, 0;
	sub.f32 	%f874, %f214, %f870;
	selp.f32 	%f875, %f870, %f874, %p221;
	cvt.rzi.f32.f32 	%f876, %f912;
	setp.eq.f32 	%p222, %f876, %f912;
	mul.f32 	%f877, %f912, 0f00000000;
	selp.f32 	%f878, %f877, %f872, %p222;
	abs.f32 	%f879, %f912;
	setp.gt.f32 	%p223, %f879, 0f4B800000;
	add.f32 	%f880, %f878, 0f3F800000;
	selp.f32 	%f881, %f880, %f875, %p223;
	mov.b32 	%r414, %f881;
	mov.b32 	%r413, %f132;
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r414, %r413;
	// end inline asm
	mov.b32 	%r420, %f878;
	xor.b32  	%r417, %r420, -2147483648;
	mov.b32 	%r419, %f131;
	xor.b32  	%r416, %r419, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r415, %r417, %r416;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r418, %r420, %r419;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r421, %r414, %r413;
	// end inline asm
	shl.b32 	%r433, %r5, 12;
	shl.b32 	%r434, %r3, 11;
	and.b32  	%r435, %r434, 2048;
	and.b32  	%r436, %r10, 16;
	and.b32  	%r437, %r10, 12;
	or.b32  	%r438, %r9, %r1;
	or.b32  	%r96, %r438, %r11;
	or.b32  	%r439, %r435, %r436;
	or.b32  	%r440, %r439, %r437;
	or.b32  	%r97, %r440, %r433;
	and.b32  	%r98, %r4, 8;
	shl.b32 	%r441, %r4, 4;
	or.b32  	%r442, %r441, %r98;
	shr.u32 	%r443, %r442, 2;
	and.b32  	%r444, %r443, 14;
	mul.lo.s32 	%r445, %r21, 65;
	and.b32  	%r446, %r1, 1;
	mul.lo.s32 	%r447, %r446, 1040;
	shr.u32 	%r448, %r1, 1;
	bfe.u32 	%r449, %r1, 1, 1;
	mul.lo.s32 	%r450, %r449, 520;
	bfe.u32 	%r451, %r1, 2, 1;
	mul.lo.s32 	%r452, %r451, 260;
	shr.u32 	%r453, %r1, 3;
	mul.lo.s32 	%r454, %r453, 130;
	add.s32 	%r455, %r445, %r436;
	add.s32 	%r456, %r455, %r447;
	add.s32 	%r457, %r456, %r454;
	add.s32 	%r458, %r457, %r450;
	add.s32 	%r459, %r458, %r452;
	add.s32 	%r460, %r459, %r444;
	mul.wide.u32 	%rd74, %r460, 4;
	mov.u64 	%rd75, shmem;
	add.s64 	%rd5, %rd75, %rd74;
	or.b32  	%r461, %r436, %r444;
	add.s32 	%r462, %r445, %r447;
	add.s32 	%r463, %r462, %r454;
	add.s32 	%r464, %r463, %r450;
	add.s32 	%r465, %r464, %r452;
	add.s32 	%r466, %r465, %r461;
	add.s32 	%r467, %r466, 32;
	mul.wide.s32 	%rd76, %r467, 4;
	add.s64 	%rd6, %rd75, %rd76;
	add.s32 	%r468, %r460, 1;
	mul.wide.s32 	%rd77, %r468, 4;
	add.s64 	%rd7, %rd75, %rd77;
	add.s32 	%r469, %r466, 33;
	mul.wide.s32 	%rd78, %r469, 4;
	add.s64 	%rd8, %rd75, %rd78;
	and.b32  	%r470, %r2, 32;
	mul.lo.s32 	%r471, %r17, 65;
	mul.lo.s32 	%r472, %r23, 1040;
	mul.lo.s32 	%r473, %r21, 520;
	mul.lo.s32 	%r474, %r20, 260;
	mul.lo.s32 	%r475, %r18, 130;
	or.b32  	%r476, %r470, %r448;
	add.s32 	%r477, %r476, %r473;
	add.s32 	%r478, %r477, %r475;
	add.s32 	%r479, %r478, %r471;
	add.s32 	%r480, %r479, %r472;
	add.s32 	%r481, %r480, %r474;
	or.b32  	%r482, %r476, 8;
	add.s32 	%r483, %r482, %r473;
	add.s32 	%r484, %r483, %r475;
	add.s32 	%r485, %r484, %r471;
	add.s32 	%r486, %r485, %r472;
	add.s32 	%r487, %r486, %r474;
	or.b32  	%r488, %r476, 16;
	add.s32 	%r489, %r488, %r473;
	add.s32 	%r490, %r489, %r475;
	add.s32 	%r491, %r490, %r471;
	add.s32 	%r492, %r491, %r472;
	add.s32 	%r493, %r492, %r474;
	or.b32  	%r494, %r476, 24;
	add.s32 	%r495, %r494, %r473;
	add.s32 	%r496, %r495, %r475;
	add.s32 	%r497, %r496, %r471;
	add.s32 	%r498, %r497, %r472;
	add.s32 	%r499, %r498, %r474;
	or.b32  	%r500, %r14, %r13;
	or.b32  	%r501, %r500, %r12;
	or.b32  	%r502, %r501, %r11;
	shr.u32 	%r503, %r502, 1;
	mul.lo.s32 	%r504, %r503, 65;
	add.s32 	%r505, %r476, %r504;
	add.s32 	%r506, %r482, %r504;
	add.s32 	%r507, %r488, %r504;
	add.s32 	%r508, %r494, %r504;
	shl.b32 	%r509, %r1, 1;
	or.b32  	%r510, %r21, %r509;
	mul.lo.s32 	%r511, %r510, 65;
	add.s32 	%r512, %r511, %r436;
	add.s32 	%r513, %r512, %r444;
	mul.wide.u32 	%rd79, %r513, 4;
	add.s64 	%rd9, %rd75, %rd79;
	cvt.u64.u32 	%rd80, %r444;
	cvt.u64.u32 	%rd81, %r511;
	cvt.u64.u32 	%rd82, %r436;
	add.s64 	%rd83, %rd82, %rd81;
	add.s64 	%rd84, %rd83, %rd80;
	shl.b64 	%rd85, %rd84, 2;
	add.s64 	%rd10, %rd75, %rd85;
	shl.b32 	%r514, %r7, 18;
	add.s32 	%r515, %r514, -786432;
	shl.b32 	%r516, %r1, 7;
	and.b32  	%r517, %r10, 96;
	or.b32  	%r518, %r517, %r516;
	or.b32  	%r519, %r436, %r434;
	or.b32  	%r520, %r519, %r437;
	or.b32  	%r99, %r520, %r518;
	cvt.s64.s32 	%rd11, %r515;
	mul.wide.u32 	%rd12, %r508, 4;
	mul.wide.u32 	%rd13, %r507, 4;
	mul.wide.u32 	%rd14, %r506, 4;
	mul.wide.u32 	%rd15, %r505, 4;
	mul.wide.u32 	%rd16, %r499, 4;
	mul.wide.u32 	%rd17, %r493, 4;
	mul.wide.u32 	%rd18, %r487, 4;
	mul.wide.u32 	%rd19, %r481, 4;
	setp.eq.s32 	%p225, %r98, 0;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7803, %r7790;
	mov.u32 	%r7828, %r7790;
	mov.u32 	%r7827, %r7790;
	mov.u32 	%r7826, %r7790;
	mov.u32 	%r7825, %r7790;
	mov.u32 	%r7824, %r7790;
	mov.u32 	%r7823, %r7790;
	mov.u32 	%r7822, %r7790;
	mov.u32 	%r7821, %r7790;
	mov.u32 	%r7820, %r7790;
	mov.u32 	%r7819, %r7790;
	mov.u32 	%r7818, %r7790;
	mov.u32 	%r7817, %r7790;
	bra.uni 	LBB0_117;
LBB0_121:                               // %L27926
                                        //   in Loop: Header=BB0_117 Depth=1
	setp.ne.s32 	%p236, %r7803, 130816;
	add.s32 	%r7803, %r7803, 256;
	add.s32 	%r7787, %r7803, %r5;
	setp.gt.s32 	%p237, %r6, %r7787;
	and.pred  	%p238, %p236, %p237;
	@%p238 bra 	LBB0_117;
	bra.uni 	LBB0_122;
LBB0_117:                               // %L1370
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_118 Depth 2
	or.b32  	%r538, %r96, %r7803;
	shl.b32 	%r539, %r538, 12;
	add.s32 	%r540, %r97, %r539;
	shr.s32 	%r541, %r540, 31;
	shr.u32 	%r542, %r541, 3;
	add.s32 	%r543, %r540, %r542;
	shr.s32 	%r544, %r543, 29;
	setp.lt.s32 	%p226, %r540, 0;
	and.b32  	%r545, %r543, -536870912;
	setp.ne.s32 	%p227, %r545, %r540;
	and.pred  	%p228, %p226, %p227;
	selp.u32 	%r546, 1, 0, %p228;
	sub.s32 	%r547, %r546, %r544;
	shl.b32 	%r548, %r547, 29;
	add.s32 	%r549, %r548, %r540;
	mul.wide.s32 	%rd87, %r549, 4;
	add.s64 	%rd88, %rd2, %rd87;
	ld.global.v4.u32 	{%r550, %r551, %r552, %r553}, [%rd88];
	selp.b32 	%r554, %r552, %r550, %p225;
	shfl.sync.bfly.b32	%r555, %r554, 8, 31, -1;
	selp.b32 	%r522, %r550, %r555, %p225;
	selp.b32 	%r523, %r555, %r552, %p225;
	selp.b32 	%r556, %r553, %r551, %p225;
	shfl.sync.bfly.b32	%r557, %r556, 8, 31, -1;
	selp.b32 	%r530, %r551, %r557, %p225;
	selp.b32 	%r531, %r557, %r553, %p225;
	mov.u32 	%r532, 21520;
	// begin inline asm
	prmt.b32 %r521, %r522, %r523, %r532;
	// end inline asm
	mov.u32 	%r536, 30258;
	// begin inline asm
	prmt.b32 %r525, %r522, %r523, %r536;
	// end inline asm
	// begin inline asm
	prmt.b32 %r529, %r530, %r531, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r533, %r530, %r531, %r536;
	// end inline asm
	st.shared.u32 	[%rd5], %r521;
	st.shared.u32 	[%rd6], %r525;
	st.shared.u32 	[%rd7], %r529;
	st.shared.u32 	[%rd8], %r533;
	bar.sync 	0;
	mov.u32 	%r7816, 256;
	mov.u64 	%rd111, %rd75;
LBB0_118:                               // %L4401
                                        //   Parent Loop BB0_117 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd89, %rd111, %rd19;
	ld.shared.u32 	%r7742, [%rd89];
	add.s64 	%rd90, %rd111, %rd18;
	ld.shared.u32 	%r7743, [%rd90];
	add.s64 	%rd91, %rd111, %rd17;
	ld.shared.u32 	%r7744, [%rd91];
	add.s64 	%rd92, %rd111, %rd16;
	ld.shared.u32 	%r7745, [%rd92];
	// begin inline asm
	mov.b32 %r563, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r574, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r562, %r7742, -2004318072;
	mov.u32 	%r561, 983055;
	// begin inline asm
	lop3.b32 %r560, %r561, %r562, %r563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r564, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r565, %r563, %r564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r568, %r560, %r565;
	// end inline asm
	mov.u32 	%r572, 15728880;
	// begin inline asm
	lop3.b32 %r571, %r572, %r562, %r574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r575, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r576, %r574, %r575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r579, %r571, %r576;
	// end inline asm
	shr.u32 	%r584, %r562, 8;
	// begin inline asm
	lop3.b32 %r582, %r561, %r584, %r563, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r587, %r563, %r586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r590, %r582, %r587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r593, %r572, %r584, %r574, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r598, %r574, %r597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r601, %r593, %r598;
	// end inline asm
	// begin inline asm
	mov.b32 %r609, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r620, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r608, %r7743, -2004318072;
	// begin inline asm
	lop3.b32 %r606, %r561, %r608, %r609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r610, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r611, %r609, %r610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r614, %r606, %r611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r617, %r572, %r608, %r620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r621, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r622, %r620, %r621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r625, %r617, %r622;
	// end inline asm
	shr.u32 	%r630, %r608, 8;
	// begin inline asm
	lop3.b32 %r628, %r561, %r630, %r609, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r633, %r609, %r632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r636, %r628, %r633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r639, %r572, %r630, %r620, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r644, %r620, %r643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r647, %r639, %r644;
	// end inline asm
	// begin inline asm
	mov.b32 %r655, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r666, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r654, %r7744, -2004318072;
	// begin inline asm
	lop3.b32 %r652, %r561, %r654, %r655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r656, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r657, %r655, %r656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r660, %r652, %r657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r663, %r572, %r654, %r666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r667, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r668, %r666, %r667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r671, %r663, %r668;
	// end inline asm
	shr.u32 	%r676, %r654, 8;
	// begin inline asm
	lop3.b32 %r674, %r561, %r676, %r655, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r678, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r679, %r655, %r678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r682, %r674, %r679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r685, %r572, %r676, %r666, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r690, %r666, %r689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r693, %r685, %r690;
	// end inline asm
	// begin inline asm
	mov.b32 %r701, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r712, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r700, %r7745, -2004318072;
	// begin inline asm
	lop3.b32 %r698, %r561, %r700, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r703, %r701, %r702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r706, %r698, %r703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r709, %r572, %r700, %r712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r714, %r712, %r713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r717, %r709, %r714;
	// end inline asm
	shr.u32 	%r722, %r700, 8;
	// begin inline asm
	lop3.b32 %r720, %r561, %r722, %r701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r725, %r701, %r724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r728, %r720, %r725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r731, %r572, %r722, %r712, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r735, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r736, %r712, %r735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r739, %r731, %r736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r742, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r744, %r742, %r568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r747, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r749, %r747, %r579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r752, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r754, %r752, %r590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r757, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r759, %r757, %r601;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r762, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r764, %r762, %r614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r767, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r769, %r767, %r625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r772, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r774, %r772, %r636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r777, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r779, %r777, %r647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r782, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r784, %r782, %r660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r787, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r789, %r787, %r671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r792, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r794, %r792, %r682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r797, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r799, %r797, %r693;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r802, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r804, %r802, %r706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r807, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r809, %r807, %r717;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r812, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r814, %r812, %r728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r817, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r819, %r817, %r739;
	// end inline asm
	// begin inline asm
	mov.b32 %r827, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r826, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r824, %r561, %r826, %r827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r828, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r829, %r827, %r828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r832, %r824, %r829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r835, %r572, %r826, %r838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r839, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r840, %r838, %r839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r843, %r835, %r840;
	// end inline asm
	shr.u32 	%r848, %r826, 8;
	// begin inline asm
	lop3.b32 %r846, %r561, %r848, %r827, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r851, %r827, %r850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r854, %r846, %r851;
	// end inline asm
	// begin inline asm
	lop3.b32 %r857, %r572, %r848, %r838, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r862, %r838, %r861;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r865, %r857, %r862;
	// end inline asm
	// begin inline asm
	mov.b32 %r873, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r872, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r870, %r561, %r872, %r873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r874, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r875, %r873, %r874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r878, %r870, %r875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r881, %r572, %r872, %r884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r885, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r886, %r884, %r885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r889, %r881, %r886;
	// end inline asm
	shr.u32 	%r894, %r872, 8;
	// begin inline asm
	lop3.b32 %r892, %r561, %r894, %r873, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r897, %r873, %r896;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r900, %r892, %r897;
	// end inline asm
	// begin inline asm
	lop3.b32 %r903, %r572, %r894, %r884, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r908, %r884, %r907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r911, %r903, %r908;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r918, %r7823, -2004318072;
	// begin inline asm
	lop3.b32 %r916, %r561, %r918, %r919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r920, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r921, %r919, %r920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r924, %r916, %r921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r927, %r572, %r918, %r930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r931, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r932, %r930, %r931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r935, %r927, %r932;
	// end inline asm
	shr.u32 	%r940, %r918, 8;
	// begin inline asm
	lop3.b32 %r938, %r561, %r940, %r919, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r943, %r919, %r942;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r946, %r938, %r943;
	// end inline asm
	// begin inline asm
	lop3.b32 %r949, %r572, %r940, %r930, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r954, %r930, %r953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r957, %r949, %r954;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r964, %r7824, -2004318072;
	// begin inline asm
	lop3.b32 %r962, %r561, %r964, %r965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r966, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r967, %r965, %r966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r970, %r962, %r967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r973, %r572, %r964, %r976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r977, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r978, %r976, %r977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r981, %r973, %r978;
	// end inline asm
	shr.u32 	%r986, %r964, 8;
	// begin inline asm
	lop3.b32 %r984, %r561, %r986, %r965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r989, %r965, %r988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r992, %r984, %r989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r995, %r572, %r986, %r976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1000, %r976, %r999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1003, %r995, %r1000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1006, %r201, %r832, %r744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1010, %r201, %r843, %r749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1014, %r201, %r854, %r754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1018, %r201, %r865, %r759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1022, %r201, %r878, %r764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1026, %r201, %r889, %r769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1030, %r201, %r900, %r774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1034, %r201, %r911, %r779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1038, %r201, %r924, %r784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1042, %r201, %r935, %r789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1046, %r201, %r946, %r794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1050, %r201, %r957, %r799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1054, %r201, %r970, %r804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1058, %r201, %r981, %r809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1062, %r201, %r992, %r814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1066, %r201, %r1003, %r819;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1074, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r1072, %r561, %r1074, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1076, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1077, %r1075, %r1076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1080, %r1072, %r1077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1083, %r572, %r1074, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1087, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1088, %r1086, %r1087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1091, %r1083, %r1088;
	// end inline asm
	shr.u32 	%r1096, %r1074, 8;
	// begin inline asm
	lop3.b32 %r1094, %r561, %r1096, %r1075, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1099, %r1075, %r1098;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1102, %r1094, %r1099;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1105, %r572, %r1096, %r1086, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1110, %r1086, %r1109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1113, %r1105, %r1110;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1120, %r7820, -2004318072;
	// begin inline asm
	lop3.b32 %r1118, %r561, %r1120, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1122, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1123, %r1121, %r1122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1126, %r1118, %r1123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1129, %r572, %r1120, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1133, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1134, %r1132, %r1133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1137, %r1129, %r1134;
	// end inline asm
	shr.u32 	%r1142, %r1120, 8;
	// begin inline asm
	lop3.b32 %r1140, %r561, %r1142, %r1121, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1145, %r1121, %r1144;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1148, %r1140, %r1145;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1151, %r572, %r1142, %r1132, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1156, %r1132, %r1155;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1159, %r1151, %r1156;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1166, %r7825, -2004318072;
	// begin inline asm
	lop3.b32 %r1164, %r561, %r1166, %r1167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1168, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1169, %r1167, %r1168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1172, %r1164, %r1169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1175, %r572, %r1166, %r1178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1179, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1180, %r1178, %r1179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1183, %r1175, %r1180;
	// end inline asm
	shr.u32 	%r1188, %r1166, 8;
	// begin inline asm
	lop3.b32 %r1186, %r561, %r1188, %r1167, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1191, %r1167, %r1190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1194, %r1186, %r1191;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1197, %r572, %r1188, %r1178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1202, %r1178, %r1201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1205, %r1197, %r1202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1212, %r7826, -2004318072;
	// begin inline asm
	lop3.b32 %r1210, %r561, %r1212, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1215, %r1213, %r1214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1218, %r1210, %r1215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1221, %r572, %r1212, %r1224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1226, %r1224, %r1225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1229, %r1221, %r1226;
	// end inline asm
	shr.u32 	%r1234, %r1212, 8;
	// begin inline asm
	lop3.b32 %r1232, %r561, %r1234, %r1213, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1237, %r1213, %r1236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1240, %r1232, %r1237;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1243, %r572, %r1234, %r1224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1248, %r1224, %r1247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1251, %r1243, %r1248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1256, %r1254, %r1080, %r1006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1262, %r1260, %r1091, %r1010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1268, %r1266, %r1102, %r1014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1274, %r1272, %r1113, %r1018;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1278, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1280, %r1278, %r1126, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1286, %r1284, %r1137, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1292, %r1290, %r1148, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1298, %r1296, %r1159, %r1034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1304, %r1302, %r1172, %r1038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1308, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1310, %r1308, %r1183, %r1042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1316, %r1314, %r1194, %r1046;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1322, %r1320, %r1205, %r1050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1328, %r1326, %r1218, %r1054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1334, %r1332, %r1229, %r1058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1338, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1340, %r1338, %r1240, %r1062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1346, %r1344, %r1251, %r1066;
	// end inline asm
	// begin inline asm
	mov.b32 %r1355, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1354, %r7821, -2004318072;
	// begin inline asm
	lop3.b32 %r1352, %r561, %r1354, %r1355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1356, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1357, %r1355, %r1356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1360, %r1352, %r1357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1363, %r572, %r1354, %r1366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1367, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1368, %r1366, %r1367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1371, %r1363, %r1368;
	// end inline asm
	shr.u32 	%r1376, %r1354, 8;
	// begin inline asm
	lop3.b32 %r1374, %r561, %r1376, %r1355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1379, %r1355, %r1378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1382, %r1374, %r1379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1385, %r572, %r1376, %r1366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1390, %r1366, %r1389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1393, %r1385, %r1390;
	// end inline asm
	// begin inline asm
	mov.b32 %r1401, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1400, %r7822, -2004318072;
	// begin inline asm
	lop3.b32 %r1398, %r561, %r1400, %r1401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1402, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1403, %r1401, %r1402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1406, %r1398, %r1403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1409, %r572, %r1400, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1413, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1414, %r1412, %r1413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1417, %r1409, %r1414;
	// end inline asm
	shr.u32 	%r1422, %r1400, 8;
	// begin inline asm
	lop3.b32 %r1420, %r561, %r1422, %r1401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1425, %r1401, %r1424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1428, %r1420, %r1425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1431, %r572, %r1422, %r1412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1436, %r1412, %r1435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1439, %r1431, %r1436;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1446, %r7827, -2004318072;
	// begin inline asm
	lop3.b32 %r1444, %r561, %r1446, %r1447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1448, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1449, %r1447, %r1448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1452, %r1444, %r1449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1455, %r572, %r1446, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1459, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1460, %r1458, %r1459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1463, %r1455, %r1460;
	// end inline asm
	shr.u32 	%r1468, %r1446, 8;
	// begin inline asm
	lop3.b32 %r1466, %r561, %r1468, %r1447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1471, %r1447, %r1470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1474, %r1466, %r1471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1477, %r572, %r1468, %r1458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1482, %r1458, %r1481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1485, %r1477, %r1482;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1492, %r7828, -2004318072;
	// begin inline asm
	lop3.b32 %r1490, %r561, %r1492, %r1493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1494, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1495, %r1493, %r1494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1498, %r1490, %r1495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1501, %r572, %r1492, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1505, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1506, %r1504, %r1505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1509, %r1501, %r1506;
	// end inline asm
	shr.u32 	%r1514, %r1492, 8;
	// begin inline asm
	lop3.b32 %r1512, %r561, %r1514, %r1493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1517, %r1493, %r1516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1520, %r1512, %r1517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1523, %r572, %r1514, %r1504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1528, %r1504, %r1527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1531, %r1523, %r1528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1605, %r237, %r1360, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1602, %r237, %r1371, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1614, %r237, %r1382, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1611, %r237, %r1393, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1623, %r237, %r1406, %r1280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1620, %r237, %r1417, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1632, %r237, %r1428, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1629, %r237, %r1439, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1641, %r237, %r1452, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1638, %r237, %r1463, %r1310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1650, %r237, %r1474, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1647, %r237, %r1485, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1659, %r237, %r1498, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1656, %r237, %r1509, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1668, %r237, %r1520, %r1340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1665, %r237, %r1531, %r1346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1598, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1600, %r1598, %r1602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1603, %r283, %r1605, %r1600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1607, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1609, %r1607, %r1611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1612, %r283, %r1614, %r1609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1616, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1618, %r1616, %r1620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1621, %r283, %r1623, %r1618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1625, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1627, %r1625, %r1629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1630, %r283, %r1632, %r1627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1634, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1636, %r1634, %r1638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1639, %r283, %r1641, %r1636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1643, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1645, %r1643, %r1647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1648, %r283, %r1650, %r1645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1652, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1654, %r1652, %r1656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1657, %r283, %r1659, %r1654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1661, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1663, %r1661, %r1665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1666, %r283, %r1668, %r1663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1670, %r286, %r1605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1673, %r283, %r1602, %r1670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1677, %r286, %r1614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1680, %r283, %r1611, %r1677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1684, %r286, %r1623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1687, %r283, %r1620, %r1684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1691, %r286, %r1632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1694, %r283, %r1629, %r1691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1698, %r286, %r1641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1701, %r283, %r1638, %r1698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1705, %r286, %r1650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r283, %r1647, %r1705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1712, %r286, %r1659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1715, %r283, %r1656, %r1712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1719, %r286, %r1668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r283, %r1665, %r1719;
	// end inline asm
	mov.u32 	%r1734, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1813, %r1810}, {%r325, %r331, %r328, %r334}, {%r1603, %r1673}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1822, %r1819}, {%r325, %r331, %r328, %r334}, {%r1612, %r1680}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1831, %r1828}, {%r325, %r331, %r328, %r334}, {%r1621, %r1687}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1840, %r1837}, {%r325, %r331, %r328, %r334}, {%r1630, %r1694}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1849, %r1846}, {%r325, %r331, %r328, %r334}, {%r1639, %r1701}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1858, %r1855}, {%r325, %r331, %r328, %r334}, {%r1648, %r1708}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1867, %r1864}, {%r325, %r331, %r328, %r334}, {%r1657, %r1715}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1876, %r1873}, {%r325, %r331, %r328, %r334}, {%r1666, %r1722}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1806, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1808, %r1806, %r1810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r369, %r1813, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1815, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1817, %r1815, %r1819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r369, %r1822, %r1817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1824, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1826, %r1824, %r1828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1829, %r369, %r1831, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1833, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1835, %r1833, %r1837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1838, %r369, %r1840, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1842, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1844, %r1842, %r1846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r369, %r1849, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1851, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1853, %r1851, %r1855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r369, %r1858, %r1853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1860, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1862, %r1860, %r1864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1865, %r369, %r1867, %r1862;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1869, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1871, %r1869, %r1873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1874, %r369, %r1876, %r1871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1878, %r372, %r1813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1881, %r369, %r1810, %r1878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1885, %r372, %r1822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r369, %r1819, %r1885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1892, %r372, %r1831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1895, %r369, %r1828, %r1892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1899, %r372, %r1840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1902, %r369, %r1837, %r1899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1906, %r372, %r1849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1909, %r369, %r1846, %r1906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1913, %r372, %r1858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1916, %r369, %r1855, %r1913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1920, %r372, %r1867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r369, %r1864, %r1920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1927, %r372, %r1876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1930, %r369, %r1873, %r1927;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1934, %r1935}, {%r412, %r418, %r415, %r421}, {%r1811, %r1881}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1944, %r1945}, {%r412, %r418, %r415, %r421}, {%r1820, %r1888}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1954, %r1955}, {%r412, %r418, %r415, %r421}, {%r1829, %r1895}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1964, %r1965}, {%r412, %r418, %r415, %r421}, {%r1838, %r1902}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1974, %r1975}, {%r412, %r418, %r415, %r421}, {%r1847, %r1909}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1984, %r1985}, {%r412, %r418, %r415, %r421}, {%r1856, %r1916}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1994, %r1995}, {%r412, %r418, %r415, %r421}, {%r1865, %r1923}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2004, %r2005}, {%r412, %r418, %r415, %r421}, {%r1874, %r1930}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r15, %r1934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2017, %r15, %r1935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2020, %r15, %r1944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2023, %r15, %r1945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2026, %r15, %r1954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2029, %r15, %r1955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2032, %r15, %r1964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2035, %r15, %r1965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2038, %r15, %r1974;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2041, %r15, %r1975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2044, %r15, %r1984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2047, %r15, %r1985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2050, %r15, %r1994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2053, %r15, %r1995;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2056, %r15, %r2004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2059, %r15, %r2005;
	// end inline asm
	// begin inline asm
	mov.b32 %r2062, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2063, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2064, %r2014, %r2062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2067, %r2064, %r2063;
	// end inline asm
	// begin inline asm
	mov.b32 %r2070, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2071, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2072, %r2017, %r2070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2075, %r2072, %r2071;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2080, %r2020, %r2078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2083, %r2080, %r2079;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2088, %r2023, %r2086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2091, %r2088, %r2087;
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2095, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2096, %r2026, %r2094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2099, %r2096, %r2095;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2104, %r2029, %r2102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2107, %r2104, %r2103;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2111, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2112, %r2032, %r2110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2115, %r2112, %r2111;
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2120, %r2035, %r2118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2123, %r2120, %r2119;
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2127, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2128, %r2038, %r2126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2131, %r2128, %r2127;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2136, %r2041, %r2134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2139, %r2136, %r2135;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2144, %r2044, %r2142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2147, %r2144, %r2143;
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2151, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2152, %r2047, %r2150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2155, %r2152, %r2151;
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2160, %r2050, %r2158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2163, %r2160, %r2159;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2168, %r2053, %r2166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2171, %r2168, %r2167;
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2175, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2176, %r2056, %r2174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2179, %r2176, %r2175;
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2184, %r2059, %r2182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2187, %r2184, %r2183;
	// end inline asm
	// begin inline asm
	mov.b32 %r2193, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2193, %r2191;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2195, %r2067, %r2192;
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2199, %r2193, %r2198;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2202, %r2075, %r2199;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2206, %r2193, %r2205;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2209, %r2083, %r2206;
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2213, %r2193, %r2212;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2091, %r2213;
	// end inline asm
	mov.u32 	%r2222, 25152;
	// begin inline asm
	prmt.b32 %r2219, %r2195, %r2209, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2223, %r2202, %r2216, %r2222;
	// end inline asm
	shl.b32 	%r2230, %r2223, 4;
	mov.u32 	%r2228, 252645135;
	// begin inline asm
	lop3.b32 %r2227, %r2228, %r2219, %r2230, 202;
	// end inline asm
	xor.b32  	%r7746, %r2227, -2004318072;
	// begin inline asm
	mov.b32 %r2234, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2233, %r2234, %r2232;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2099, %r2233;
	// end inline asm
	// begin inline asm
	mov.b32 %r2239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2240, %r2234, %r2239;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2243, %r2107, %r2240;
	// end inline asm
	// begin inline asm
	mov.b32 %r2246, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2247, %r2234, %r2246;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2250, %r2115, %r2247;
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2254, %r2234, %r2253;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2257, %r2123, %r2254;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2260, %r2236, %r2250, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2264, %r2243, %r2257, %r2222;
	// end inline asm
	shl.b32 	%r2271, %r2264, 4;
	// begin inline asm
	lop3.b32 %r2268, %r2228, %r2260, %r2271, 202;
	// end inline asm
	xor.b32  	%r7747, %r2268, -2004318072;
	// begin inline asm
	mov.b32 %r2275, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2273, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2274, %r2275, %r2273;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2131, %r2274;
	// end inline asm
	// begin inline asm
	mov.b32 %r2280, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2281, %r2275, %r2280;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2284, %r2139, %r2281;
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2288, %r2275, %r2287;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2291, %r2147, %r2288;
	// end inline asm
	// begin inline asm
	mov.b32 %r2294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2295, %r2275, %r2294;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2298, %r2155, %r2295;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2301, %r2277, %r2291, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2305, %r2284, %r2298, %r2222;
	// end inline asm
	shl.b32 	%r2312, %r2305, 4;
	// begin inline asm
	lop3.b32 %r2309, %r2228, %r2301, %r2312, 202;
	// end inline asm
	xor.b32  	%r7748, %r2309, -2004318072;
	// begin inline asm
	mov.b32 %r2316, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2314, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2315, %r2316, %r2314;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2163, %r2315;
	// end inline asm
	// begin inline asm
	mov.b32 %r2321, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2322, %r2316, %r2321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2325, %r2171, %r2322;
	// end inline asm
	// begin inline asm
	mov.b32 %r2328, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2329, %r2316, %r2328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2332, %r2179, %r2329;
	// end inline asm
	// begin inline asm
	mov.b32 %r2335, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2336, %r2316, %r2335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2339, %r2187, %r2336;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2342, %r2318, %r2332, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2346, %r2325, %r2339, %r2222;
	// end inline asm
	shl.b32 	%r2353, %r2346, 4;
	// begin inline asm
	lop3.b32 %r2350, %r2228, %r2342, %r2353, 202;
	// end inline asm
	xor.b32  	%r7749, %r2350, -2004318072;
	add.s64 	%rd93, %rd111, %rd15;
	st.shared.u32 	[%rd93], %r7746;
	add.s64 	%rd94, %rd111, %rd14;
	st.shared.u32 	[%rd94], %r7747;
	add.s64 	%rd95, %rd111, %rd13;
	st.shared.u32 	[%rd95], %r7748;
	add.s64 	%rd96, %rd111, %rd12;
	st.shared.u32 	[%rd96], %r7749;
	ld.shared.u32 	%r7817, [%rd89];
	ld.shared.u32 	%r7818, [%rd90];
	ld.shared.u32 	%r7823, [%rd91];
	ld.shared.u32 	%r7824, [%rd92];
	// begin inline asm
	mov.b32 %r2359, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2370, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2358, %r7817, -2004318072;
	// begin inline asm
	lop3.b32 %r2356, %r561, %r2358, %r2359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2360, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2361, %r2359, %r2360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2364, %r2356, %r2361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2367, %r572, %r2358, %r2370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2371, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2372, %r2370, %r2371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2375, %r2367, %r2372;
	// end inline asm
	shr.u32 	%r2380, %r2358, 8;
	// begin inline asm
	lop3.b32 %r2378, %r561, %r2380, %r2359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2382, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2383, %r2359, %r2382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2386, %r2378, %r2383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2389, %r572, %r2380, %r2370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2394, %r2370, %r2393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2397, %r2389, %r2394;
	// end inline asm
	// begin inline asm
	mov.b32 %r2405, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2416, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2404, %r7818, -2004318072;
	// begin inline asm
	lop3.b32 %r2402, %r561, %r2404, %r2405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2406, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2407, %r2405, %r2406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2410, %r2402, %r2407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2413, %r572, %r2404, %r2416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2417, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2418, %r2416, %r2417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2421, %r2413, %r2418;
	// end inline asm
	shr.u32 	%r2426, %r2404, 8;
	// begin inline asm
	lop3.b32 %r2424, %r561, %r2426, %r2405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2429, %r2405, %r2428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2432, %r2424, %r2429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2435, %r572, %r2426, %r2416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2440, %r2416, %r2439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2443, %r2435, %r2440;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2450, %r7823, -2004318072;
	// begin inline asm
	lop3.b32 %r2448, %r561, %r2450, %r2451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2452, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2453, %r2451, %r2452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2456, %r2448, %r2453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2459, %r572, %r2450, %r2462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2463, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2464, %r2462, %r2463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2467, %r2459, %r2464;
	// end inline asm
	shr.u32 	%r2472, %r2450, 8;
	// begin inline asm
	lop3.b32 %r2470, %r561, %r2472, %r2451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2475, %r2451, %r2474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2478, %r2470, %r2475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2481, %r572, %r2472, %r2462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2486, %r2462, %r2485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2489, %r2481, %r2486;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2496, %r7824, -2004318072;
	// begin inline asm
	lop3.b32 %r2494, %r561, %r2496, %r2497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2499, %r2497, %r2498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2502, %r2494, %r2499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2505, %r572, %r2496, %r2508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2509, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2510, %r2508, %r2509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2513, %r2505, %r2510;
	// end inline asm
	shr.u32 	%r2518, %r2496, 8;
	// begin inline asm
	lop3.b32 %r2516, %r561, %r2518, %r2497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2521, %r2497, %r2520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2524, %r2516, %r2521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2527, %r572, %r2518, %r2508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2532, %r2508, %r2531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2535, %r2527, %r2532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2538, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2540, %r2538, %r2364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2543, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2545, %r2543, %r2375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2548, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2550, %r2548, %r2386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2553, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2555, %r2553, %r2397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2558, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2560, %r2558, %r2410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2563, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2565, %r2563, %r2421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2568, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2570, %r2568, %r2432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2573, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2575, %r2573, %r2443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2578, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2580, %r2578, %r2456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2583, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2585, %r2583, %r2467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2588, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2590, %r2588, %r2478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2593, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2595, %r2593, %r2489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2598, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2600, %r2598, %r2502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2603, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2605, %r2603, %r2513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2608, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2610, %r2608, %r2524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2613, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2615, %r2613, %r2535;
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2620, %r561, %r1074, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2625, %r2623, %r2624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2628, %r2620, %r2625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2631, %r572, %r1074, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2636, %r2634, %r2635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2639, %r2631, %r2636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2642, %r561, %r1096, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2623, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2653, %r572, %r1096, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2634, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2666, %r561, %r1120, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2671, %r2669, %r2670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2674, %r2666, %r2671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2677, %r572, %r1120, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2681, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2682, %r2680, %r2681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2685, %r2677, %r2682;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2688, %r561, %r1142, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2669, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2699, %r572, %r1142, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2680, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2712, %r561, %r1166, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2717, %r2715, %r2716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2720, %r2712, %r2717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2723, %r572, %r1166, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2728, %r2726, %r2727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2731, %r2723, %r2728;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2734, %r561, %r1188, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2715, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2745, %r572, %r1188, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2726, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2758, %r561, %r1212, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2761, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2769, %r572, %r1212, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2774, %r2772, %r2773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2777, %r2769, %r2774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2780, %r561, %r1234, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2761, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2791, %r572, %r1234, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2772, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2802, %r201, %r2628, %r2540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2806, %r201, %r2639, %r2545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2810, %r201, %r2650, %r2550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2814, %r201, %r2661, %r2555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2818, %r201, %r2674, %r2560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2822, %r201, %r2685, %r2565;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2826, %r201, %r2696, %r2570;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2830, %r201, %r2707, %r2575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2834, %r201, %r2720, %r2580;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2838, %r201, %r2731, %r2585;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2842, %r201, %r2742, %r2590;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2846, %r201, %r2753, %r2595;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2850, %r201, %r2766, %r2600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2854, %r201, %r2777, %r2605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2858, %r201, %r2788, %r2610;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2862, %r201, %r2799, %r2615;
	// end inline asm
	// begin inline asm
	mov.b32 %r2871, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2882, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2868, %r561, %r1354, %r2871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2872, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2873, %r2871, %r2872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2876, %r2868, %r2873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2879, %r572, %r1354, %r2882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2883, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2884, %r2882, %r2883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2887, %r2879, %r2884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2890, %r561, %r1376, %r2871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2894, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2895, %r2871, %r2894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2898, %r2890, %r2895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2901, %r572, %r1376, %r2882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2906, %r2882, %r2905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2909, %r2901, %r2906;
	// end inline asm
	// begin inline asm
	mov.b32 %r2917, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2928, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2914, %r561, %r1400, %r2917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2918, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2919, %r2917, %r2918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2922, %r2914, %r2919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2925, %r572, %r1400, %r2928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2929, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2930, %r2928, %r2929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2933, %r2925, %r2930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2936, %r561, %r1422, %r2917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2940, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2941, %r2917, %r2940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2944, %r2936, %r2941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2947, %r572, %r1422, %r2928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2951, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2952, %r2928, %r2951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2955, %r2947, %r2952;
	// end inline asm
	// begin inline asm
	mov.b32 %r2963, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2974, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2960, %r561, %r1446, %r2963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2964, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2965, %r2963, %r2964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2968, %r2960, %r2965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2971, %r572, %r1446, %r2974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2976, %r2974, %r2975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2979, %r2971, %r2976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2982, %r561, %r1468, %r2963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2987, %r2963, %r2986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2990, %r2982, %r2987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2993, %r572, %r1468, %r2974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2998, %r2974, %r2997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3001, %r2993, %r2998;
	// end inline asm
	// begin inline asm
	mov.b32 %r3009, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3020, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3006, %r561, %r1492, %r3009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3011, %r3009, %r3010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3014, %r3006, %r3011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3017, %r572, %r1492, %r3020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3022, %r3020, %r3021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3025, %r3017, %r3022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3028, %r561, %r1514, %r3009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3033, %r3009, %r3032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3036, %r3028, %r3033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3039, %r572, %r1514, %r3020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3044, %r3020, %r3043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3047, %r3039, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3050, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r3050, %r2876, %r2802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3056, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r3056, %r2887, %r2806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3062, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r3062, %r2898, %r2810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3068, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r3068, %r2909, %r2814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3074, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r3074, %r2922, %r2818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3080, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r3080, %r2933, %r2822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3086, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r3086, %r2944, %r2826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3092, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r3092, %r2955, %r2830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3098, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r3098, %r2968, %r2834;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3104, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r3104, %r2979, %r2838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3110, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3112, %r3110, %r2990, %r2842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3116, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r3116, %r3001, %r2846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3122, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3124, %r3122, %r3014, %r2850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3128, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r3128, %r3025, %r2854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3134, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r3134, %r3036, %r2858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3140, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3142, %r3140, %r3047, %r2862;
	// end inline asm
	// begin inline asm
	mov.b32 %r3151, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3162, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3148, %r561, %r562, %r3151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3152, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3153, %r3151, %r3152;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3156, %r3148, %r3153;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3159, %r572, %r562, %r3162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3163, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3164, %r3162, %r3163;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3167, %r3159, %r3164;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3170, %r561, %r584, %r3151, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3174, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3175, %r3151, %r3174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3178, %r3170, %r3175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3181, %r572, %r584, %r3162, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3185, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3186, %r3162, %r3185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3189, %r3181, %r3186;
	// end inline asm
	// begin inline asm
	mov.b32 %r3197, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3208, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3194, %r561, %r608, %r3197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3198, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3199, %r3197, %r3198;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3202, %r3194, %r3199;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3205, %r572, %r608, %r3208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3209, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3210, %r3208, %r3209;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3213, %r3205, %r3210;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3216, %r561, %r630, %r3197, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3220, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3221, %r3197, %r3220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3224, %r3216, %r3221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3227, %r572, %r630, %r3208, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3231, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3232, %r3208, %r3231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3235, %r3227, %r3232;
	// end inline asm
	// begin inline asm
	mov.b32 %r3243, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3254, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3240, %r561, %r654, %r3243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3244, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3245, %r3243, %r3244;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3248, %r3240, %r3245;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3251, %r572, %r654, %r3254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3256, %r3254, %r3255;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3259, %r3251, %r3256;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3262, %r561, %r676, %r3243, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3266, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3267, %r3243, %r3266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3270, %r3262, %r3267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3273, %r572, %r676, %r3254, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3277, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3278, %r3254, %r3277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3281, %r3273, %r3278;
	// end inline asm
	// begin inline asm
	mov.b32 %r3289, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3300, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3286, %r561, %r700, %r3289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3290, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3291, %r3289, %r3290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3294, %r3286, %r3291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3297, %r572, %r700, %r3300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3301, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3302, %r3300, %r3301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3305, %r3297, %r3302;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3308, %r561, %r722, %r3289, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3312, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3313, %r3289, %r3312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3316, %r3308, %r3313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3319, %r572, %r722, %r3300, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3323, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3324, %r3300, %r3323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3327, %r3319, %r3324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3401, %r237, %r3156, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3398, %r237, %r3167, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3410, %r237, %r3178, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3407, %r237, %r3189, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3419, %r237, %r3202, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3416, %r237, %r3213, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3428, %r237, %r3224, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3425, %r237, %r3235, %r3094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3437, %r237, %r3248, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3434, %r237, %r3259, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r237, %r3270, %r3112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3443, %r237, %r3281, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3455, %r237, %r3294, %r3124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3452, %r237, %r3305, %r3130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r237, %r3316, %r3136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3461, %r237, %r3327, %r3142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3394, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3396, %r3394, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3399, %r283, %r3401, %r3396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3403, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3405, %r3403, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3408, %r283, %r3410, %r3405;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3412, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3414, %r3412, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3417, %r283, %r3419, %r3414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3421, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3423, %r3421, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3426, %r283, %r3428, %r3423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3430, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3432, %r3430, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3435, %r283, %r3437, %r3432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3439, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3441, %r3439, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3444, %r283, %r3446, %r3441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3448, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3450, %r3448, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r283, %r3455, %r3450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3457, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3459, %r3457, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3462, %r283, %r3464, %r3459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r286, %r3401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r283, %r3398, %r3466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r286, %r3410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r283, %r3407, %r3473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3480, %r286, %r3419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3483, %r283, %r3416, %r3480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r286, %r3428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r283, %r3425, %r3487;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3494, %r286, %r3437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3497, %r283, %r3434, %r3494;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3501, %r286, %r3446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r283, %r3443, %r3501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r286, %r3455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r283, %r3452, %r3508;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3515, %r286, %r3464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3518, %r283, %r3461, %r3515;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3609, %r3606}, {%r325, %r331, %r328, %r334}, {%r3399, %r3469}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3618, %r3615}, {%r325, %r331, %r328, %r334}, {%r3408, %r3476}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3627, %r3624}, {%r325, %r331, %r328, %r334}, {%r3417, %r3483}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3636, %r3633}, {%r325, %r331, %r328, %r334}, {%r3426, %r3490}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3645, %r3642}, {%r325, %r331, %r328, %r334}, {%r3435, %r3497}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3654, %r3651}, {%r325, %r331, %r328, %r334}, {%r3444, %r3504}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3663, %r3660}, {%r325, %r331, %r328, %r334}, {%r3453, %r3511}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3672, %r3669}, {%r325, %r331, %r328, %r334}, {%r3462, %r3518}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3602, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3604, %r3602, %r3606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3607, %r369, %r3609, %r3604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3611, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r3611, %r3615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r369, %r3618, %r3613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3620, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3622, %r3620, %r3624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3625, %r369, %r3627, %r3622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3629, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3631, %r3629, %r3633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3634, %r369, %r3636, %r3631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3638, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3640, %r3638, %r3642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3643, %r369, %r3645, %r3640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3647, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3649, %r3647, %r3651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3652, %r369, %r3654, %r3649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3656, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3658, %r3656, %r3660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3661, %r369, %r3663, %r3658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3665, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3667, %r3665, %r3669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3670, %r369, %r3672, %r3667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3674, %r372, %r3609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3677, %r369, %r3606, %r3674;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3681, %r372, %r3618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3684, %r369, %r3615, %r3681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3688, %r372, %r3627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3691, %r369, %r3624, %r3688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3695, %r372, %r3636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3698, %r369, %r3633, %r3695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3702, %r372, %r3645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3705, %r369, %r3642, %r3702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3709, %r372, %r3654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3712, %r369, %r3651, %r3709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3716, %r372, %r3663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3719, %r369, %r3660, %r3716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3723, %r372, %r3672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3726, %r369, %r3669, %r3723;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3730, %r3731}, {%r412, %r418, %r415, %r421}, {%r3607, %r3677}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3740, %r3741}, {%r412, %r418, %r415, %r421}, {%r3616, %r3684}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3750, %r3751}, {%r412, %r418, %r415, %r421}, {%r3625, %r3691}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3760, %r3761}, {%r412, %r418, %r415, %r421}, {%r3634, %r3698}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3770, %r3771}, {%r412, %r418, %r415, %r421}, {%r3643, %r3705}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3780, %r3781}, {%r412, %r418, %r415, %r421}, {%r3652, %r3712}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3790, %r3791}, {%r412, %r418, %r415, %r421}, {%r3661, %r3719}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3800, %r3801}, {%r412, %r418, %r415, %r421}, {%r3670, %r3726}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r15, %r3730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3813, %r15, %r3731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3816, %r15, %r3740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3819, %r15, %r3741;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3822, %r15, %r3750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3825, %r15, %r3751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3828, %r15, %r3760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3831, %r15, %r3761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3834, %r15, %r3770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3837, %r15, %r3771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3840, %r15, %r3780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3843, %r15, %r3781;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3846, %r15, %r3790;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3849, %r15, %r3791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3852, %r15, %r3800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3855, %r15, %r3801;
	// end inline asm
	// begin inline asm
	mov.b32 %r3858, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3859, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3860, %r3810, %r3858;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3863, %r3860, %r3859;
	// end inline asm
	// begin inline asm
	mov.b32 %r3866, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3867, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3868, %r3813, %r3866;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3871, %r3868, %r3867;
	// end inline asm
	// begin inline asm
	mov.b32 %r3874, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3875, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3876, %r3816, %r3874;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3879, %r3876, %r3875;
	// end inline asm
	// begin inline asm
	mov.b32 %r3882, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3883, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3884, %r3819, %r3882;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3887, %r3884, %r3883;
	// end inline asm
	// begin inline asm
	mov.b32 %r3890, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3891, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3892, %r3822, %r3890;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3895, %r3892, %r3891;
	// end inline asm
	// begin inline asm
	mov.b32 %r3898, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3899, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3900, %r3825, %r3898;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3903, %r3900, %r3899;
	// end inline asm
	// begin inline asm
	mov.b32 %r3906, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3907, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3908, %r3828, %r3906;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3911, %r3908, %r3907;
	// end inline asm
	// begin inline asm
	mov.b32 %r3914, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3915, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3916, %r3831, %r3914;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3919, %r3916, %r3915;
	// end inline asm
	// begin inline asm
	mov.b32 %r3922, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3923, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3924, %r3834, %r3922;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3927, %r3924, %r3923;
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3931, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3932, %r3837, %r3930;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3935, %r3932, %r3931;
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3939, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3940, %r3840, %r3938;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3943, %r3940, %r3939;
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3947, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3948, %r3843, %r3946;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3951, %r3948, %r3947;
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3955, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3956, %r3846, %r3954;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3959, %r3956, %r3955;
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3963, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3964, %r3849, %r3962;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3967, %r3964, %r3963;
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3971, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3972, %r3852, %r3970;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3975, %r3972, %r3971;
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3979, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3980, %r3855, %r3978;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3983, %r3980, %r3979;
	// end inline asm
	// begin inline asm
	mov.b32 %r3989, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3988, %r3989, %r3987;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3991, %r3863, %r3988;
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3995, %r3989, %r3994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3998, %r3871, %r3995;
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4002, %r3989, %r4001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4005, %r3879, %r4002;
	// end inline asm
	// begin inline asm
	mov.b32 %r4008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4009, %r3989, %r4008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4012, %r3887, %r4009;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4015, %r3991, %r4005, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4019, %r3998, %r4012, %r2222;
	// end inline asm
	shl.b32 	%r4026, %r4019, 4;
	// begin inline asm
	lop3.b32 %r4023, %r2228, %r4015, %r4026, 202;
	// end inline asm
	xor.b32  	%r7750, %r4023, -2004318072;
	// begin inline asm
	mov.b32 %r4030, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4028, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4029, %r4030, %r4028;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4032, %r3895, %r4029;
	// end inline asm
	// begin inline asm
	mov.b32 %r4035, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4036, %r4030, %r4035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4039, %r3903, %r4036;
	// end inline asm
	// begin inline asm
	mov.b32 %r4042, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4043, %r4030, %r4042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4046, %r3911, %r4043;
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4050, %r4030, %r4049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4053, %r3919, %r4050;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4056, %r4032, %r4046, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4060, %r4039, %r4053, %r2222;
	// end inline asm
	shl.b32 	%r4067, %r4060, 4;
	// begin inline asm
	lop3.b32 %r4064, %r2228, %r4056, %r4067, 202;
	// end inline asm
	xor.b32  	%r7751, %r4064, -2004318072;
	// begin inline asm
	mov.b32 %r4071, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4070, %r4071, %r4069;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4073, %r3927, %r4070;
	// end inline asm
	// begin inline asm
	mov.b32 %r4076, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4077, %r4071, %r4076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4080, %r3935, %r4077;
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4084, %r4071, %r4083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4087, %r3943, %r4084;
	// end inline asm
	// begin inline asm
	mov.b32 %r4090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4091, %r4071, %r4090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4094, %r3951, %r4091;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4097, %r4073, %r4087, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4101, %r4080, %r4094, %r2222;
	// end inline asm
	shl.b32 	%r4108, %r4101, 4;
	// begin inline asm
	lop3.b32 %r4105, %r2228, %r4097, %r4108, 202;
	// end inline asm
	xor.b32  	%r7752, %r4105, -2004318072;
	// begin inline asm
	mov.b32 %r4112, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4111, %r4112, %r4110;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r3959, %r4111;
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4118, %r4112, %r4117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4121, %r3967, %r4118;
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4125, %r4112, %r4124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4128, %r3975, %r4125;
	// end inline asm
	// begin inline asm
	mov.b32 %r4131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4132, %r4112, %r4131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4135, %r3983, %r4132;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4138, %r4114, %r4128, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4142, %r4121, %r4135, %r2222;
	// end inline asm
	shl.b32 	%r4149, %r4142, 4;
	// begin inline asm
	lop3.b32 %r4146, %r2228, %r4138, %r4149, 202;
	// end inline asm
	xor.b32  	%r7753, %r4146, -2004318072;
	st.shared.u32 	[%rd93], %r7750;
	st.shared.u32 	[%rd94], %r7751;
	st.shared.u32 	[%rd95], %r7752;
	st.shared.u32 	[%rd96], %r7753;
	ld.shared.u32 	%r7819, [%rd89];
	ld.shared.u32 	%r7820, [%rd90];
	ld.shared.u32 	%r7825, [%rd91];
	ld.shared.u32 	%r7826, [%rd92];
	// begin inline asm
	mov.b32 %r4155, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4154, %r7819, -2004318072;
	// begin inline asm
	lop3.b32 %r4152, %r561, %r4154, %r4155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4157, %r4155, %r4156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4160, %r4152, %r4157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4163, %r572, %r4154, %r4166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4168, %r4166, %r4167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4171, %r4163, %r4168;
	// end inline asm
	shr.u32 	%r4176, %r4154, 8;
	// begin inline asm
	lop3.b32 %r4174, %r561, %r4176, %r4155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4179, %r4155, %r4178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4182, %r4174, %r4179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4185, %r572, %r4176, %r4166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4190, %r4166, %r4189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4193, %r4185, %r4190;
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4200, %r7820, -2004318072;
	// begin inline asm
	lop3.b32 %r4198, %r561, %r4200, %r4201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4203, %r4201, %r4202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4206, %r4198, %r4203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4209, %r572, %r4200, %r4212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4214, %r4212, %r4213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4217, %r4209, %r4214;
	// end inline asm
	shr.u32 	%r4222, %r4200, 8;
	// begin inline asm
	lop3.b32 %r4220, %r561, %r4222, %r4201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4225, %r4201, %r4224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4228, %r4220, %r4225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4231, %r572, %r4222, %r4212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4236, %r4212, %r4235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4239, %r4231, %r4236;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4246, %r7825, -2004318072;
	// begin inline asm
	lop3.b32 %r4244, %r561, %r4246, %r4247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4249, %r4247, %r4248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4252, %r4244, %r4249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4255, %r572, %r4246, %r4258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4259, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4260, %r4258, %r4259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4263, %r4255, %r4260;
	// end inline asm
	shr.u32 	%r4268, %r4246, 8;
	// begin inline asm
	lop3.b32 %r4266, %r561, %r4268, %r4247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4271, %r4247, %r4270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4274, %r4266, %r4271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4277, %r572, %r4268, %r4258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4282, %r4258, %r4281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4285, %r4277, %r4282;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4292, %r7826, -2004318072;
	// begin inline asm
	lop3.b32 %r4290, %r561, %r4292, %r4293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4295, %r4293, %r4294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4298, %r4290, %r4295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4301, %r572, %r4292, %r4304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4306, %r4304, %r4305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4309, %r4301, %r4306;
	// end inline asm
	shr.u32 	%r4314, %r4292, 8;
	// begin inline asm
	lop3.b32 %r4312, %r561, %r4314, %r4293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4317, %r4293, %r4316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4320, %r4312, %r4317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4323, %r572, %r4314, %r4304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4328, %r4304, %r4327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4331, %r4323, %r4328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4334, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4336, %r4334, %r4160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4339, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4341, %r4339, %r4171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4344, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4346, %r4344, %r4182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4349, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4351, %r4349, %r4193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4354, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4356, %r4354, %r4206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4359, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4361, %r4359, %r4217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4364, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4366, %r4364, %r4228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4369, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4371, %r4369, %r4239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4374, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4376, %r4374, %r4252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4379, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4381, %r4379, %r4263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4384, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4386, %r4384, %r4274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4389, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4391, %r4389, %r4285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4394, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4396, %r4394, %r4298;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4399, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4401, %r4399, %r4309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4404, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4406, %r4404, %r4320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4409, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4411, %r4409, %r4331;
	// end inline asm
	// begin inline asm
	mov.b32 %r4419, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4430, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4416, %r561, %r1354, %r4419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4420, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4419, %r4420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4424, %r4416, %r4421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4427, %r572, %r1354, %r4430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4431, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4432, %r4430, %r4431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4435, %r4427, %r4432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4438, %r561, %r1376, %r4419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4443, %r4419, %r4442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4446, %r4438, %r4443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4449, %r572, %r1376, %r4430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4454, %r4430, %r4453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4457, %r4449, %r4454;
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4462, %r561, %r1400, %r4465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4466, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4467, %r4465, %r4466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4470, %r4462, %r4467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4473, %r572, %r1400, %r4476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4477, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4478, %r4476, %r4477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4481, %r4473, %r4478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4484, %r561, %r1422, %r4465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4465, %r4488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4492, %r4484, %r4489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4495, %r572, %r1422, %r4476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4476, %r4499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4503, %r4495, %r4500;
	// end inline asm
	// begin inline asm
	mov.b32 %r4511, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4522, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4508, %r561, %r1446, %r4511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4512, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4513, %r4511, %r4512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4516, %r4508, %r4513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4519, %r572, %r1446, %r4522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4523, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4524, %r4522, %r4523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4527, %r4519, %r4524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4530, %r561, %r1468, %r4511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4534, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4511, %r4534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4538, %r4530, %r4535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4541, %r572, %r1468, %r4522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4545, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4522, %r4545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4549, %r4541, %r4546;
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4568, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4554, %r561, %r1492, %r4557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4558, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4559, %r4557, %r4558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4562, %r4554, %r4559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4565, %r572, %r1492, %r4568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4569, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4570, %r4568, %r4569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4573, %r4565, %r4570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4576, %r561, %r1514, %r4557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4581, %r4557, %r4580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4584, %r4576, %r4581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4587, %r572, %r1514, %r4568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4568, %r4591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4595, %r4587, %r4592;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4598, %r201, %r4424, %r4336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4602, %r201, %r4435, %r4341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4606, %r201, %r4446, %r4346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4610, %r201, %r4457, %r4351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4614, %r201, %r4470, %r4356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4618, %r201, %r4481, %r4361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4622, %r201, %r4492, %r4366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4626, %r201, %r4503, %r4371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4630, %r201, %r4516, %r4376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4634, %r201, %r4527, %r4381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4638, %r201, %r4538, %r4386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4642, %r201, %r4549, %r4391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4646, %r201, %r4562, %r4396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4650, %r201, %r4573, %r4401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4654, %r201, %r4584, %r4406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4658, %r201, %r4595, %r4411;
	// end inline asm
	// begin inline asm
	mov.b32 %r4667, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4678, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4664, %r561, %r562, %r4667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4668, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4669, %r4667, %r4668;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4672, %r4664, %r4669;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4675, %r572, %r562, %r4678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4680, %r4678, %r4679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4683, %r4675, %r4680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4686, %r561, %r584, %r4667, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4691, %r4667, %r4690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4694, %r4686, %r4691;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4697, %r572, %r584, %r4678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4702, %r4678, %r4701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4705, %r4697, %r4702;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4710, %r561, %r608, %r4713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4714, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4715, %r4713, %r4714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4718, %r4710, %r4715;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4721, %r572, %r608, %r4724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4725, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4726, %r4724, %r4725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4729, %r4721, %r4726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4732, %r561, %r630, %r4713, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4737, %r4713, %r4736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4740, %r4732, %r4737;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4743, %r572, %r630, %r4724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4748, %r4724, %r4747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4751, %r4743, %r4748;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4756, %r561, %r654, %r4759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4760, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4761, %r4759, %r4760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4764, %r4756, %r4761;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4767, %r572, %r654, %r4770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4771, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4772, %r4770, %r4771;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4775, %r4767, %r4772;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4778, %r561, %r676, %r4759, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4783, %r4759, %r4782;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4786, %r4778, %r4783;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4789, %r572, %r676, %r4770, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4794, %r4770, %r4793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4797, %r4789, %r4794;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4802, %r561, %r700, %r4805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4807, %r4805, %r4806;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4810, %r4802, %r4807;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4813, %r572, %r700, %r4816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4817, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4818, %r4816, %r4817;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4821, %r4813, %r4818;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4824, %r561, %r722, %r4805, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4829, %r4805, %r4828;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4832, %r4824, %r4829;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4835, %r572, %r722, %r4816, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4839, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4840, %r4816, %r4839;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4843, %r4835, %r4840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4846, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4848, %r4846, %r4672, %r4598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4852, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4854, %r4852, %r4683, %r4602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4858, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4860, %r4858, %r4694, %r4606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4864, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4866, %r4864, %r4705, %r4610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4870, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4872, %r4870, %r4718, %r4614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4876, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4878, %r4876, %r4729, %r4618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4882, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4884, %r4882, %r4740, %r4622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4888, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4890, %r4888, %r4751, %r4626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4894, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4896, %r4894, %r4764, %r4630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4900, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4902, %r4900, %r4775, %r4634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4906, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4908, %r4906, %r4786, %r4638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4912, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4914, %r4912, %r4797, %r4642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4918, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4920, %r4918, %r4810, %r4646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4924, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4926, %r4924, %r4821, %r4650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4930, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4932, %r4930, %r4832, %r4654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4936, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4938, %r4936, %r4843, %r4658;
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4944, %r561, %r2358, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4949, %r4947, %r4948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4952, %r4944, %r4949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4955, %r572, %r2358, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4959, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4960, %r4958, %r4959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4963, %r4955, %r4960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4966, %r561, %r2380, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4947, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4977, %r572, %r2380, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4958, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4990, %r561, %r2404, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4995, %r4993, %r4994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4998, %r4990, %r4995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5001, %r572, %r2404, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5005, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5006, %r5004, %r5005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5009, %r5001, %r5006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5012, %r561, %r2426, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r4993, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5023, %r572, %r2426, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5004, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	mov.b32 %r5039, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5050, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5036, %r561, %r2450, %r5039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5041, %r5039, %r5040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5044, %r5036, %r5041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5047, %r572, %r2450, %r5050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5052, %r5050, %r5051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5055, %r5047, %r5052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5058, %r561, %r2472, %r5039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5062, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5063, %r5039, %r5062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5066, %r5058, %r5063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5069, %r572, %r2472, %r5050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5073, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5074, %r5050, %r5073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5077, %r5069, %r5074;
	// end inline asm
	// begin inline asm
	mov.b32 %r5085, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5096, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5082, %r561, %r2496, %r5085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5086, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5087, %r5085, %r5086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5090, %r5082, %r5087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5093, %r572, %r2496, %r5096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5097, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5098, %r5096, %r5097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5101, %r5093, %r5098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5104, %r561, %r2518, %r5085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5108, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5109, %r5085, %r5108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5112, %r5104, %r5109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5115, %r572, %r2518, %r5096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5119, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5120, %r5096, %r5119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5123, %r5115, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5197, %r237, %r4952, %r4848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5194, %r237, %r4963, %r4854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5206, %r237, %r4974, %r4860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5203, %r237, %r4985, %r4866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5215, %r237, %r4998, %r4872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5212, %r237, %r5009, %r4878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5224, %r237, %r5020, %r4884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5221, %r237, %r5031, %r4890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5233, %r237, %r5044, %r4896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5230, %r237, %r5055, %r4902;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5242, %r237, %r5066, %r4908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5239, %r237, %r5077, %r4914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5251, %r237, %r5090, %r4920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5248, %r237, %r5101, %r4926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5260, %r237, %r5112, %r4932;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5257, %r237, %r5123, %r4938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5190, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5192, %r5190, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5195, %r283, %r5197, %r5192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5199, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5201, %r5199, %r5203;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5204, %r283, %r5206, %r5201;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5208, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5210, %r5208, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5213, %r283, %r5215, %r5210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5217, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5219, %r5217, %r5221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5222, %r283, %r5224, %r5219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5226, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5228, %r5226, %r5230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5231, %r283, %r5233, %r5228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5235, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5237, %r5235, %r5239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5240, %r283, %r5242, %r5237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5244, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5246, %r5244, %r5248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5249, %r283, %r5251, %r5246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5253, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5255, %r5253, %r5257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5258, %r283, %r5260, %r5255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5262, %r286, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5265, %r283, %r5194, %r5262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5269, %r286, %r5206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5272, %r283, %r5203, %r5269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5276, %r286, %r5215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5279, %r283, %r5212, %r5276;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5283, %r286, %r5224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5286, %r283, %r5221, %r5283;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5290, %r286, %r5233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5293, %r283, %r5230, %r5290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5297, %r286, %r5242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5300, %r283, %r5239, %r5297;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5304, %r286, %r5251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5307, %r283, %r5248, %r5304;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5311, %r286, %r5260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5314, %r283, %r5257, %r5311;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5405, %r5402}, {%r325, %r331, %r328, %r334}, {%r5195, %r5265}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5414, %r5411}, {%r325, %r331, %r328, %r334}, {%r5204, %r5272}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5423, %r5420}, {%r325, %r331, %r328, %r334}, {%r5213, %r5279}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5432, %r5429}, {%r325, %r331, %r328, %r334}, {%r5222, %r5286}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5441, %r5438}, {%r325, %r331, %r328, %r334}, {%r5231, %r5293}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5450, %r5447}, {%r325, %r331, %r328, %r334}, {%r5240, %r5300}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5459, %r5456}, {%r325, %r331, %r328, %r334}, {%r5249, %r5307}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5468, %r5465}, {%r325, %r331, %r328, %r334}, {%r5258, %r5314}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5398, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5400, %r5398, %r5402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5403, %r369, %r5405, %r5400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5407, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5409, %r5407, %r5411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5412, %r369, %r5414, %r5409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5416, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5418, %r5416, %r5420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5421, %r369, %r5423, %r5418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5425, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5427, %r5425, %r5429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5430, %r369, %r5432, %r5427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5434, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5436, %r5434, %r5438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5439, %r369, %r5441, %r5436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5443, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5445, %r5443, %r5447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5448, %r369, %r5450, %r5445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5452, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5454, %r5452, %r5456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5457, %r369, %r5459, %r5454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5461, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5463, %r5461, %r5465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5466, %r369, %r5468, %r5463;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5470, %r372, %r5405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5473, %r369, %r5402, %r5470;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5477, %r372, %r5414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5480, %r369, %r5411, %r5477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5484, %r372, %r5423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5487, %r369, %r5420, %r5484;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5491, %r372, %r5432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5494, %r369, %r5429, %r5491;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5498, %r372, %r5441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5501, %r369, %r5438, %r5498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5505, %r372, %r5450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5508, %r369, %r5447, %r5505;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5512, %r372, %r5459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5515, %r369, %r5456, %r5512;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5519, %r372, %r5468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5522, %r369, %r5465, %r5519;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5526, %r5527}, {%r412, %r418, %r415, %r421}, {%r5403, %r5473}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5536, %r5537}, {%r412, %r418, %r415, %r421}, {%r5412, %r5480}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5546, %r5547}, {%r412, %r418, %r415, %r421}, {%r5421, %r5487}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5556, %r5557}, {%r412, %r418, %r415, %r421}, {%r5430, %r5494}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5566, %r5567}, {%r412, %r418, %r415, %r421}, {%r5439, %r5501}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5576, %r5577}, {%r412, %r418, %r415, %r421}, {%r5448, %r5508}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5586, %r5587}, {%r412, %r418, %r415, %r421}, {%r5457, %r5515}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5596, %r5597}, {%r412, %r418, %r415, %r421}, {%r5466, %r5522}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r15, %r5526;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5609, %r15, %r5527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5612, %r15, %r5536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5615, %r15, %r5537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5618, %r15, %r5546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5621, %r15, %r5547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5624, %r15, %r5556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5627, %r15, %r5557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5630, %r15, %r5566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5633, %r15, %r5567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5636, %r15, %r5576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5639, %r15, %r5577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5642, %r15, %r5586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5645, %r15, %r5587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5648, %r15, %r5596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5651, %r15, %r5597;
	// end inline asm
	// begin inline asm
	mov.b32 %r5654, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5655, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5656, %r5606, %r5654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5659, %r5656, %r5655;
	// end inline asm
	// begin inline asm
	mov.b32 %r5662, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5663, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5664, %r5609, %r5662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5667, %r5664, %r5663;
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5672, %r5612, %r5670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5675, %r5672, %r5671;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5679, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5680, %r5615, %r5678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5683, %r5680, %r5679;
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5688, %r5618, %r5686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5691, %r5688, %r5687;
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5695, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5696, %r5621, %r5694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5699, %r5696, %r5695;
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5703, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5704, %r5624, %r5702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5707, %r5704, %r5703;
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5712, %r5627, %r5710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5715, %r5712, %r5711;
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5720, %r5630, %r5718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5723, %r5720, %r5719;
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5727, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5728, %r5633, %r5726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5731, %r5728, %r5727;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5736, %r5636, %r5734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5739, %r5736, %r5735;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5743, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5744, %r5639, %r5742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5747, %r5744, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5752, %r5642, %r5750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5755, %r5752, %r5751;
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5759, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5760, %r5645, %r5758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5763, %r5760, %r5759;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5768, %r5648, %r5766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5771, %r5768, %r5767;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5776, %r5651, %r5774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5779, %r5776, %r5775;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5784, %r5785, %r5783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5787, %r5659, %r5784;
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5791, %r5785, %r5790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5794, %r5667, %r5791;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5798, %r5785, %r5797;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5801, %r5675, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5805, %r5785, %r5804;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5808, %r5683, %r5805;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5811, %r5787, %r5801, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5815, %r5794, %r5808, %r2222;
	// end inline asm
	shl.b32 	%r5822, %r5815, 4;
	// begin inline asm
	lop3.b32 %r5819, %r2228, %r5811, %r5822, 202;
	// end inline asm
	xor.b32  	%r7754, %r5819, -2004318072;
	// begin inline asm
	mov.b32 %r5826, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5824, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5825, %r5826, %r5824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5691, %r5825;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5832, %r5826, %r5831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5835, %r5699, %r5832;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5826, %r5838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5842, %r5707, %r5839;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5826, %r5845;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5715, %r5846;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5852, %r5828, %r5842, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5856, %r5835, %r5849, %r2222;
	// end inline asm
	shl.b32 	%r5863, %r5856, 4;
	// begin inline asm
	lop3.b32 %r5860, %r2228, %r5852, %r5863, 202;
	// end inline asm
	xor.b32  	%r7755, %r5860, -2004318072;
	// begin inline asm
	mov.b32 %r5867, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5865, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5866, %r5867, %r5865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5723, %r5866;
	// end inline asm
	// begin inline asm
	mov.b32 %r5872, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5873, %r5867, %r5872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5876, %r5731, %r5873;
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5880, %r5867, %r5879;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5883, %r5739, %r5880;
	// end inline asm
	// begin inline asm
	mov.b32 %r5886, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5887, %r5867, %r5886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5890, %r5747, %r5887;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5893, %r5869, %r5883, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5897, %r5876, %r5890, %r2222;
	// end inline asm
	shl.b32 	%r5904, %r5897, 4;
	// begin inline asm
	lop3.b32 %r5901, %r2228, %r5893, %r5904, 202;
	// end inline asm
	xor.b32  	%r7756, %r5901, -2004318072;
	// begin inline asm
	mov.b32 %r5908, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5907, %r5908, %r5906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5755, %r5907;
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5908, %r5913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5917, %r5763, %r5914;
	// end inline asm
	// begin inline asm
	mov.b32 %r5920, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5921, %r5908, %r5920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5771, %r5921;
	// end inline asm
	// begin inline asm
	mov.b32 %r5927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5928, %r5908, %r5927;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5779, %r5928;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5934, %r5910, %r5924, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5938, %r5917, %r5931, %r2222;
	// end inline asm
	shl.b32 	%r5945, %r5938, 4;
	// begin inline asm
	lop3.b32 %r5942, %r2228, %r5934, %r5945, 202;
	// end inline asm
	xor.b32  	%r7757, %r5942, -2004318072;
	st.shared.u32 	[%rd93], %r7754;
	st.shared.u32 	[%rd94], %r7755;
	st.shared.u32 	[%rd95], %r7756;
	st.shared.u32 	[%rd96], %r7757;
	ld.shared.u32 	%r7821, [%rd89];
	ld.shared.u32 	%r7822, [%rd90];
	ld.shared.u32 	%r7827, [%rd91];
	ld.shared.u32 	%r7828, [%rd92];
	// begin inline asm
	mov.b32 %r5951, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5962, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5950, %r7821, -2004318072;
	// begin inline asm
	lop3.b32 %r5948, %r561, %r5950, %r5951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5952, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5953, %r5951, %r5952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5956, %r5948, %r5953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5959, %r572, %r5950, %r5962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5964, %r5962, %r5963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5967, %r5959, %r5964;
	// end inline asm
	shr.u32 	%r5972, %r5950, 8;
	// begin inline asm
	lop3.b32 %r5970, %r561, %r5972, %r5951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5975, %r5951, %r5974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5978, %r5970, %r5975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r572, %r5972, %r5962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5962, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5996, %r7822, -2004318072;
	// begin inline asm
	lop3.b32 %r5994, %r561, %r5996, %r5997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5999, %r5997, %r5998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6002, %r5994, %r5999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6005, %r572, %r5996, %r6008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6010, %r6008, %r6009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6013, %r6005, %r6010;
	// end inline asm
	shr.u32 	%r6018, %r5996, 8;
	// begin inline asm
	lop3.b32 %r6016, %r561, %r6018, %r5997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6021, %r5997, %r6020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6024, %r6016, %r6021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6027, %r572, %r6018, %r6008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6032, %r6008, %r6031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6035, %r6027, %r6032;
	// end inline asm
	// begin inline asm
	mov.b32 %r6043, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6042, %r7827, -2004318072;
	// begin inline asm
	lop3.b32 %r6040, %r561, %r6042, %r6043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6044, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6045, %r6043, %r6044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6048, %r6040, %r6045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6051, %r572, %r6042, %r6054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6055, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6056, %r6054, %r6055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6059, %r6051, %r6056;
	// end inline asm
	shr.u32 	%r6064, %r6042, 8;
	// begin inline asm
	lop3.b32 %r6062, %r561, %r6064, %r6043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6067, %r6043, %r6066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6070, %r6062, %r6067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6073, %r572, %r6064, %r6054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6078, %r6054, %r6077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6081, %r6073, %r6078;
	// end inline asm
	// begin inline asm
	mov.b32 %r6089, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6100, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6088, %r7828, -2004318072;
	// begin inline asm
	lop3.b32 %r6086, %r561, %r6088, %r6089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6090, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6091, %r6089, %r6090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6094, %r6086, %r6091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6097, %r572, %r6088, %r6100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6101, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6102, %r6100, %r6101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6105, %r6097, %r6102;
	// end inline asm
	shr.u32 	%r6110, %r6088, 8;
	// begin inline asm
	lop3.b32 %r6108, %r561, %r6110, %r6089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6112, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6113, %r6089, %r6112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6116, %r6108, %r6113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6119, %r572, %r6110, %r6100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6123, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6124, %r6100, %r6123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6127, %r6119, %r6124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6132, %r6130, %r5956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6135, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6137, %r6135, %r5967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6142, %r6140, %r5978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6145, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6147, %r6145, %r5989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6150, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6152, %r6150, %r6002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6157, %r6155, %r6013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6162, %r6160, %r6024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6165, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6167, %r6165, %r6035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6172, %r6170, %r6048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6175, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6177, %r6175, %r6059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6180, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6182, %r6180, %r6070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6187, %r6185, %r6081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6192, %r6190, %r6094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6195, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6197, %r6195, %r6105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6202, %r6200, %r6116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6205, %r255;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6207, %r6205, %r6127;
	// end inline asm
	// begin inline asm
	mov.b32 %r6215, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6226, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6212, %r561, %r562, %r6215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6216, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6217, %r6215, %r6216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6220, %r6212, %r6217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6223, %r572, %r562, %r6226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6227, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6228, %r6226, %r6227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6231, %r6223, %r6228;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r561, %r584, %r6215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6215, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r572, %r584, %r6226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6226, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	mov.b32 %r6261, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6272, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6258, %r561, %r608, %r6261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6263, %r6261, %r6262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6266, %r6258, %r6263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6269, %r572, %r608, %r6272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6273, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6274, %r6272, %r6273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6277, %r6269, %r6274;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r561, %r630, %r6261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6261, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r572, %r630, %r6272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6272, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6304, %r561, %r654, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6308, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6309, %r6307, %r6308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6312, %r6304, %r6309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6315, %r572, %r654, %r6318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6319, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6320, %r6318, %r6319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6323, %r6315, %r6320;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r561, %r676, %r6307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6307, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r572, %r676, %r6318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6318, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6350, %r561, %r700, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6354, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6355, %r6353, %r6354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6358, %r6350, %r6355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6361, %r572, %r700, %r6364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6365, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6366, %r6364, %r6365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6369, %r6361, %r6366;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r561, %r722, %r6353, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6353, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r572, %r722, %r6364, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6364, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6394, %r201, %r6220, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6398, %r201, %r6231, %r6137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6402, %r201, %r6242, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6406, %r201, %r6253, %r6147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6410, %r201, %r6266, %r6152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6414, %r201, %r6277, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6418, %r201, %r6288, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6422, %r201, %r6299, %r6167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6426, %r201, %r6312, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6430, %r201, %r6323, %r6177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6434, %r201, %r6334, %r6182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6438, %r201, %r6345, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6442, %r201, %r6358, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6446, %r201, %r6369, %r6197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6450, %r201, %r6380, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6454, %r201, %r6391, %r6207;
	// end inline asm
	// begin inline asm
	mov.b32 %r6463, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6474, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6460, %r561, %r2358, %r6463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6465, %r6463, %r6464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6468, %r6460, %r6465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6471, %r572, %r2358, %r6474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6476, %r6474, %r6475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6479, %r6471, %r6476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r561, %r2380, %r6463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6463, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r572, %r2380, %r6474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6474, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6520, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6506, %r561, %r2404, %r6509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6511, %r6509, %r6510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6514, %r6506, %r6511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6517, %r572, %r2404, %r6520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6521, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6522, %r6520, %r6521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6525, %r6517, %r6522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r561, %r2426, %r6509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6509, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r572, %r2426, %r6520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6520, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6566, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6552, %r561, %r2450, %r6555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6557, %r6555, %r6556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6560, %r6552, %r6557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6563, %r572, %r2450, %r6566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6568, %r6566, %r6567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6571, %r6563, %r6568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r561, %r2472, %r6555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6555, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r572, %r2472, %r6566, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6566, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	mov.b32 %r6601, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6612, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6598, %r561, %r2496, %r6601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6603, %r6601, %r6602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6606, %r6598, %r6603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6609, %r572, %r2496, %r6612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6614, %r6612, %r6613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6617, %r6609, %r6614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6620, %r561, %r2518, %r6601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6625, %r6601, %r6624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6628, %r6620, %r6625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6631, %r572, %r2518, %r6612, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6635, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6636, %r6612, %r6635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6639, %r6631, %r6636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6642, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6644, %r6642, %r6468, %r6394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6648, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6650, %r6648, %r6479, %r6398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6654, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6656, %r6654, %r6490, %r6402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6660, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6662, %r6660, %r6501, %r6406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6666, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6668, %r6666, %r6514, %r6410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6672, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6674, %r6672, %r6525, %r6414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6678, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6680, %r6678, %r6536, %r6418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6684, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6686, %r6684, %r6547, %r6422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6690, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6692, %r6690, %r6560, %r6426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6696, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6698, %r6696, %r6571, %r6430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6702, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6704, %r6702, %r6582, %r6434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6708, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6710, %r6708, %r6593, %r6438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6714, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6716, %r6714, %r6606, %r6442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6720, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6722, %r6720, %r6617, %r6446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6726, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6728, %r6726, %r6628, %r6450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6732, %r219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6734, %r6732, %r6639, %r6454;
	// end inline asm
	// begin inline asm
	mov.b32 %r6743, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6754, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6740, %r561, %r4154, %r6743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6744, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6745, %r6743, %r6744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6748, %r6740, %r6745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6751, %r572, %r4154, %r6754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6755, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6756, %r6754, %r6755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6759, %r6751, %r6756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6762, %r561, %r4176, %r6743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6766, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6767, %r6743, %r6766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6770, %r6762, %r6767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6773, %r572, %r4176, %r6754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6777, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6778, %r6754, %r6777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6781, %r6773, %r6778;
	// end inline asm
	// begin inline asm
	mov.b32 %r6789, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6800, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6786, %r561, %r4200, %r6789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6790, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6791, %r6789, %r6790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6794, %r6786, %r6791;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6797, %r572, %r4200, %r6800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6801, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6802, %r6800, %r6801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6805, %r6797, %r6802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6808, %r561, %r4222, %r6789, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6812, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6813, %r6789, %r6812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6816, %r6808, %r6813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6819, %r572, %r4222, %r6800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6823, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6824, %r6800, %r6823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6827, %r6819, %r6824;
	// end inline asm
	// begin inline asm
	mov.b32 %r6835, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6846, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6832, %r561, %r4246, %r6835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6836, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6837, %r6835, %r6836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6840, %r6832, %r6837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6843, %r572, %r4246, %r6846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6848, %r6846, %r6847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6851, %r6843, %r6848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6854, %r561, %r4268, %r6835, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6858, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6859, %r6835, %r6858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6862, %r6854, %r6859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6865, %r572, %r4268, %r6846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6869, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6870, %r6846, %r6869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6873, %r6865, %r6870;
	// end inline asm
	// begin inline asm
	mov.b32 %r6881, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6892, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6878, %r561, %r4292, %r6881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6882, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6883, %r6881, %r6882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6886, %r6878, %r6883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6889, %r572, %r4292, %r6892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6893, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6894, %r6892, %r6893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6897, %r6889, %r6894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6900, %r561, %r4314, %r6881, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6904, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6905, %r6881, %r6904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6908, %r6900, %r6905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6911, %r572, %r4314, %r6892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6915, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6916, %r6892, %r6915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6919, %r6911, %r6916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6993, %r237, %r6748, %r6644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r237, %r6759, %r6650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r237, %r6770, %r6656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6999, %r237, %r6781, %r6662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r237, %r6794, %r6668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7008, %r237, %r6805, %r6674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7020, %r237, %r6816, %r6680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7017, %r237, %r6827, %r6686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7029, %r237, %r6840, %r6692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7026, %r237, %r6851, %r6698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7038, %r237, %r6862, %r6704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7035, %r237, %r6873, %r6710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7047, %r237, %r6886, %r6716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r237, %r6897, %r6722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7056, %r237, %r6908, %r6728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7053, %r237, %r6919, %r6734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6986, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6988, %r6986, %r6990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6991, %r283, %r6993, %r6988;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6995, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6997, %r6995, %r6999;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7000, %r283, %r7002, %r6997;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7004, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r7004, %r7008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r283, %r7011, %r7006;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7013, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7015, %r7013, %r7017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7018, %r283, %r7020, %r7015;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7022, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7024, %r7022, %r7026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7027, %r283, %r7029, %r7024;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7031, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7033, %r7031, %r7035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7036, %r283, %r7038, %r7033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7040, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7042, %r7040, %r7044;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7045, %r283, %r7047, %r7042;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7049, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7051, %r7049, %r7053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7054, %r283, %r7056, %r7051;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7058, %r286, %r6993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7061, %r283, %r6990, %r7058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7065, %r286, %r7002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7068, %r283, %r6999, %r7065;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7072, %r286, %r7011;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7075, %r283, %r7008, %r7072;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7079, %r286, %r7020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7082, %r283, %r7017, %r7079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7086, %r286, %r7029;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7089, %r283, %r7026, %r7086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7093, %r286, %r7038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7096, %r283, %r7035, %r7093;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7100, %r286, %r7047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7103, %r283, %r7044, %r7100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7107, %r286, %r7056;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7110, %r283, %r7053, %r7107;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7201, %r7198}, {%r325, %r331, %r328, %r334}, {%r6991, %r7061}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7210, %r7207}, {%r325, %r331, %r328, %r334}, {%r7000, %r7068}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7219, %r7216}, {%r325, %r331, %r328, %r334}, {%r7009, %r7075}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7228, %r7225}, {%r325, %r331, %r328, %r334}, {%r7018, %r7082}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7237, %r7234}, {%r325, %r331, %r328, %r334}, {%r7027, %r7089}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7246, %r7243}, {%r325, %r331, %r328, %r334}, {%r7036, %r7096}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7255, %r7252}, {%r325, %r331, %r328, %r334}, {%r7045, %r7103}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7264, %r7261}, {%r325, %r331, %r328, %r334}, {%r7054, %r7110}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7194, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7196, %r7194, %r7198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7199, %r369, %r7201, %r7196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7203, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7205, %r7203, %r7207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7208, %r369, %r7210, %r7205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7212, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7214, %r7212, %r7216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7217, %r369, %r7219, %r7214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7221, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7223, %r7221, %r7225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7226, %r369, %r7228, %r7223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7230, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7232, %r7230, %r7234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7235, %r369, %r7237, %r7232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7239, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7241, %r7239, %r7243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7244, %r369, %r7246, %r7241;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7248, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7250, %r7248, %r7252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7253, %r369, %r7255, %r7250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7257, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r7257, %r7261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r369, %r7264, %r7259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7266, %r372, %r7201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7269, %r369, %r7198, %r7266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7273, %r372, %r7210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7276, %r369, %r7207, %r7273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7280, %r372, %r7219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7283, %r369, %r7216, %r7280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7287, %r372, %r7228;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7290, %r369, %r7225, %r7287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r372, %r7237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r369, %r7234, %r7294;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7301, %r372, %r7246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7304, %r369, %r7243, %r7301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7308, %r372, %r7255;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7311, %r369, %r7252, %r7308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7315, %r372, %r7264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7318, %r369, %r7261, %r7315;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7322, %r7323}, {%r412, %r418, %r415, %r421}, {%r7199, %r7269}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7332, %r7333}, {%r412, %r418, %r415, %r421}, {%r7208, %r7276}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7342, %r7343}, {%r412, %r418, %r415, %r421}, {%r7217, %r7283}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7352, %r7353}, {%r412, %r418, %r415, %r421}, {%r7226, %r7290}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7362, %r7363}, {%r412, %r418, %r415, %r421}, {%r7235, %r7297}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7372, %r7373}, {%r412, %r418, %r415, %r421}, {%r7244, %r7304}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7382, %r7383}, {%r412, %r418, %r415, %r421}, {%r7253, %r7311}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7392, %r7393}, {%r412, %r418, %r415, %r421}, {%r7262, %r7318}, {%r1734, %r1734};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r15, %r7322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7405, %r15, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r15, %r7332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7411, %r15, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7414, %r15, %r7342;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r15, %r7343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7420, %r15, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7423, %r15, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7426, %r15, %r7362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r15, %r7363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7432, %r15, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7435, %r15, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7438, %r15, %r7382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7441, %r15, %r7383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7444, %r15, %r7392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7447, %r15, %r7393;
	// end inline asm
	// begin inline asm
	mov.b32 %r7450, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7451, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7452, %r7402, %r7450;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7455, %r7452, %r7451;
	// end inline asm
	// begin inline asm
	mov.b32 %r7458, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7459, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7460, %r7405, %r7458;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7463, %r7460, %r7459;
	// end inline asm
	// begin inline asm
	mov.b32 %r7466, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7467, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7468, %r7408, %r7466;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7471, %r7468, %r7467;
	// end inline asm
	// begin inline asm
	mov.b32 %r7474, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7475, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7476, %r7411, %r7474;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7479, %r7476, %r7475;
	// end inline asm
	// begin inline asm
	mov.b32 %r7482, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7483, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7484, %r7414, %r7482;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7487, %r7484, %r7483;
	// end inline asm
	// begin inline asm
	mov.b32 %r7490, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7491, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7492, %r7417, %r7490;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7495, %r7492, %r7491;
	// end inline asm
	// begin inline asm
	mov.b32 %r7498, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7499, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7500, %r7420, %r7498;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7503, %r7500, %r7499;
	// end inline asm
	// begin inline asm
	mov.b32 %r7506, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7507, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7508, %r7423, %r7506;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7511, %r7508, %r7507;
	// end inline asm
	// begin inline asm
	mov.b32 %r7514, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7515, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7516, %r7426, %r7514;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7519, %r7516, %r7515;
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7523, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7524, %r7429, %r7522;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7527, %r7524, %r7523;
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7531, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7532, %r7432, %r7530;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7535, %r7532, %r7531;
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7539, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7540, %r7435, %r7538;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7543, %r7540, %r7539;
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7547, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7548, %r7438, %r7546;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7551, %r7548, %r7547;
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7555, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7556, %r7441, %r7554;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7559, %r7556, %r7555;
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7563, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7564, %r7444, %r7562;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7567, %r7564, %r7563;
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7571, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7572, %r7447, %r7570;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7575, %r7572, %r7571;
	// end inline asm
	// begin inline asm
	mov.b32 %r7581, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7580, %r7581, %r7579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7583, %r7455, %r7580;
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7587, %r7581, %r7586;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7590, %r7463, %r7587;
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7594, %r7581, %r7593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7597, %r7471, %r7594;
	// end inline asm
	// begin inline asm
	mov.b32 %r7600, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7601, %r7581, %r7600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7604, %r7479, %r7601;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7607, %r7583, %r7597, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7611, %r7590, %r7604, %r2222;
	// end inline asm
	shl.b32 	%r7618, %r7611, 4;
	// begin inline asm
	lop3.b32 %r7615, %r2228, %r7607, %r7618, 202;
	// end inline asm
	xor.b32  	%r7758, %r7615, -2004318072;
	// begin inline asm
	mov.b32 %r7622, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7620, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7621, %r7622, %r7620;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7624, %r7487, %r7621;
	// end inline asm
	// begin inline asm
	mov.b32 %r7627, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7628, %r7622, %r7627;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7631, %r7495, %r7628;
	// end inline asm
	// begin inline asm
	mov.b32 %r7634, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7635, %r7622, %r7634;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7638, %r7503, %r7635;
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7642, %r7622, %r7641;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7645, %r7511, %r7642;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7648, %r7624, %r7638, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7652, %r7631, %r7645, %r2222;
	// end inline asm
	shl.b32 	%r7659, %r7652, 4;
	// begin inline asm
	lop3.b32 %r7656, %r2228, %r7648, %r7659, 202;
	// end inline asm
	xor.b32  	%r7759, %r7656, -2004318072;
	// begin inline asm
	mov.b32 %r7663, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7661, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7662, %r7663, %r7661;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7519, %r7662;
	// end inline asm
	// begin inline asm
	mov.b32 %r7668, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7669, %r7663, %r7668;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7672, %r7527, %r7669;
	// end inline asm
	// begin inline asm
	mov.b32 %r7675, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7663, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7535, %r7676;
	// end inline asm
	// begin inline asm
	mov.b32 %r7682, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7683, %r7663, %r7682;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7686, %r7543, %r7683;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7689, %r7665, %r7679, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7693, %r7672, %r7686, %r2222;
	// end inline asm
	shl.b32 	%r7700, %r7693, 4;
	// begin inline asm
	lop3.b32 %r7697, %r2228, %r7689, %r7700, 202;
	// end inline asm
	xor.b32  	%r7760, %r7697, -2004318072;
	// begin inline asm
	mov.b32 %r7704, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7704, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7551, %r7703;
	// end inline asm
	// begin inline asm
	mov.b32 %r7709, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7710, %r7704, %r7709;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7713, %r7559, %r7710;
	// end inline asm
	// begin inline asm
	mov.b32 %r7716, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7717, %r7704, %r7716;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7720, %r7567, %r7717;
	// end inline asm
	// begin inline asm
	mov.b32 %r7723, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7704, %r7723;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7727, %r7575, %r7724;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7730, %r7706, %r7720, %r2222;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7734, %r7713, %r7727, %r2222;
	// end inline asm
	shl.b32 	%r7741, %r7734, 4;
	// begin inline asm
	lop3.b32 %r7738, %r2228, %r7730, %r7741, 202;
	// end inline asm
	xor.b32  	%r7761, %r7738, -2004318072;
	st.shared.u32 	[%rd93], %r7758;
	st.shared.u32 	[%rd94], %r7759;
	st.shared.u32 	[%rd95], %r7760;
	st.shared.u32 	[%rd96], %r7761;
	add.s32 	%r7816, %r7816, -64;
	add.s64 	%rd111, %rd111, 8324;
	setp.eq.s32 	%p229, %r7816, 0;
	@%p229 bra 	LBB0_119;
	bra.uni 	LBB0_118;
LBB0_119:                               // %guard_pass10113
                                        //   in Loop: Header=BB0_117 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7767, [%rd9];
	ld.shared.u32 	%r7768, [%rd10+128];
	ld.shared.u32 	%r7775, [%rd10+4];
	ld.shared.u32 	%r7776, [%rd10+132];
	// begin inline asm
	prmt.b32 %r7762, %r7767, %r7768, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7766, %r7767, %r7768, %r536;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7770, %r7775, %r7776, %r532;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7774, %r7775, %r7776, %r536;
	// end inline asm
	selp.b32 	%r7778, %r7766, %r7762, %p225;
	shfl.sync.bfly.b32	%r162, %r7778, 8, 31, -1;
	selp.b32 	%r7779, %r7774, %r7770, %p225;
	shfl.sync.bfly.b32	%r163, %r7779, 8, 31, -1;
	and.b32  	%r7780, %r7803, 256;
	setp.eq.s32 	%p231, %r7780, 0;
	@%p231 bra 	LBB0_121;
// %bb.120:                             // %L27730
                                        //   in Loop: Header=BB0_117 Depth=1
	selp.b32 	%r7781, %r163, %r7774, %p225;
	selp.b32 	%r7782, %r7770, %r163, %p225;
	selp.b32 	%r7783, %r162, %r7766, %p225;
	selp.b32 	%r7784, %r7762, %r162, %p225;
	shl.b32 	%r7785, %r7803, 12;
	or.b32  	%r7786, %r99, %r7785;
	cvt.u64.u32 	%rd97, %r7786;
	add.s64 	%rd98, %rd97, %rd11;
	shr.u64 	%rd99, %rd98, 35;
	add.s64 	%rd100, %rd98, %rd99;
	shr.s64 	%rd101, %rd100, 29;
	setp.lt.s64 	%p233, %rd98, 0;
	and.b64  	%rd102, %rd100, -536870912;
	setp.ne.s64 	%p234, %rd102, %rd98;
	and.pred  	%p235, %p233, %p234;
	selp.u64 	%rd103, 1, 0, %p235;
	sub.s64 	%rd104, %rd103, %rd101;
	shl.b64 	%rd105, %rd104, 29;
	add.s64 	%rd106, %rd105, %rd98;
	shl.b64 	%rd107, %rd106, 2;
	add.s64 	%rd108, %rd3, %rd107;
	st.global.v4.u32 	[%rd108], {%r7784, %r7782, %r7783, %r7781};
	bra.uni 	LBB0_121;
LBB0_122:                               // %L27937
	st.global.u32 	[%rd4], %r7790;
	ret;
LBB0_7:                                 // %L247
	mov.u32 	%r7789, 2;
	st.global.u32 	[%rd4], %r7789;
	mov.u64 	%rd109, exception2253;
	cvta.global.u64 	%rd110, %rd109;
	{ // callseq 16, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd110;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 16
	{ // callseq 17, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 17
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd43, exception1;
	cvta.global.u64 	%rd44, %rd43;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd44;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_124:                               // %L28037
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9840, 
	(
	);
	} // callseq 3
	mov.u64 	%rd52, exception1;
	cvta.global.u64 	%rd53, %rd52;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd53;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_123:                               // %L28034
	{ // callseq 7, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9840, 
	(
	);
	} // callseq 7
	mov.u64 	%rd58, exception1;
	cvta.global.u64 	%rd59, %rd58;
	{ // callseq 8, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd59;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 8
	{ // callseq 9, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 9
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_149:                               // %L28031
	{ // callseq 13, 0
	.reg .b32 temp_param_reg;
	call.uni 
	julia_AssertionError_9840, 
	(
	);
	} // callseq 13
	mov.u64 	%rd72, exception1;
	cvta.global.u64 	%rd73, %rd72;
	{ // callseq 14, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd73;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 14
	{ // callseq 15, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd22;
	st.param.b32 	[param0+8], %r164;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 15
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
