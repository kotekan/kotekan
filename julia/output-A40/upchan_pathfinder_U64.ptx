// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3332[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception13353[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<236>;
	.reg .b16 	%rs<1191>;
	.reg .b32 	%r<8030>;
	.reg .f32 	%f<832>;
	.reg .b64 	%rd<151>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r165, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd40, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r172, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r172, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd41, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r166, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r173, %r4, 9;
	or.b32  	%r174, %r2, %r3;
	or.b32  	%r175, %r174, %r173;
	mul.wide.u32 	%rd47, %r175, 4;
	add.s64 	%rd4, %rd41, %rd47;
	mov.u32 	%r176, 1;
	st.global.u32 	[%rd4], %r176;
	setp.gt.u32 	%p2, %r166, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r167, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r167, %r166;
	setp.gt.s32 	%p4, %r167, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r168, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r177, %r167, %r166;
	and.b32  	%r178, %r177, 255;
	setp.ne.s32 	%p6, %r178, 0;
	setp.gt.u32 	%p7, %r168, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r169, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r169, %r168;
	setp.gt.s32 	%p10, %r169, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	not.b32 	%r179, %r168;
	add.s32 	%r180, %r179, %r169;
	and.b32  	%r181, %r180, 3;
	setp.eq.s32 	%p12, %r181, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r170, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r170, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r171, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r170, %r171;
	setp.lt.s32 	%p15, %r171, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass186
	bfe.u32 	%r113, %r3, 2, 1;
	shr.u32 	%r114, %r3, 4;
	shl.b32 	%r189, %r114, 1;
	shl.b32 	%r190, %r113, 2;
	shl.b32 	%r115, %r3, 3;
	and.b32  	%r191, %r115, 24;
	or.b32  	%r192, %r190, %r191;
	or.b32  	%r193, %r189, %r192;
	bfe.u32 	%r194, %r3, 3, 1;
	or.b32  	%r117, %r194, %r193;
	or.b32  	%r118, %r117, 32;
	mov.f32 	%f145, 0f40000000;
	mov.f32 	%f146, 0f437F0000;
	div.approx.f32 	%f85, %f146, %f145;
	cvt.rn.f32.s32 	%f147, %r117;
	sub.f32 	%f148, %f147, %f85;
	mov.f32 	%f177, 0f42800000;
	div.approx.f32 	%f87, %f148, %f177;
	setp.ne.f32 	%p22, %f87, 0f00000000;
	mov.f32 	%f807, 0f3F800000;
	mov.f32 	%f800, %f807;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L601
	sin.approx.f32 	%f178, %f87;
	div.approx.f32 	%f800, %f178, %f87;
$L__BB0_13:                             // %L604
	cvt.rn.f32.s32 	%f181, %r118;
	sub.f32 	%f182, %f181, %f85;
	div.approx.f32 	%f5, %f182, %f177;
	setp.eq.f32 	%p28, %f5, 0f00000000;
	mov.f32 	%f801, %f807;
	@%p28 bra 	$L__BB0_15;
// %bb.14:                              // %L621
	sin.approx.f32 	%f212, %f5;
	div.approx.f32 	%f801, %f212, %f5;
$L__BB0_15:                             // %L624
	or.b32  	%r212, %r117, 64;
	or.b32  	%r6, %r117, 96;
	cvt.rn.f32.s32 	%f216, %r212;
	sub.f32 	%f217, %f216, %f85;
	div.approx.f32 	%f9, %f217, %f177;
	setp.eq.f32 	%p34, %f9, 0f00000000;
	mov.f32 	%f802, %f807;
	@%p34 bra 	$L__BB0_17;
// %bb.16:                              // %L703
	sin.approx.f32 	%f247, %f9;
	div.approx.f32 	%f802, %f247, %f9;
$L__BB0_17:                             // %L706
	cvt.rn.f32.s32 	%f250, %r6;
	sub.f32 	%f251, %f250, %f85;
	div.approx.f32 	%f14, %f251, %f177;
	setp.eq.f32 	%p40, %f14, 0f00000000;
	mov.f32 	%f803, %f807;
	@%p40 bra 	$L__BB0_19;
// %bb.18:                              // %L723
	sin.approx.f32 	%f281, %f14;
	div.approx.f32 	%f803, %f281, %f14;
$L__BB0_19:                             // %L726
	or.b32  	%r230, %r117, 128;
	or.b32  	%r8, %r117, 160;
	cvt.rn.f32.s32 	%f285, %r230;
	sub.f32 	%f286, %f285, %f85;
	div.approx.f32 	%f18, %f286, %f177;
	setp.eq.f32 	%p46, %f18, 0f00000000;
	mov.f32 	%f804, %f807;
	@%p46 bra 	$L__BB0_21;
// %bb.20:                              // %L805
	sin.approx.f32 	%f316, %f18;
	div.approx.f32 	%f804, %f316, %f18;
$L__BB0_21:                             // %L808
	cvt.rn.f32.s32 	%f319, %r8;
	sub.f32 	%f320, %f319, %f85;
	div.approx.f32 	%f23, %f320, %f177;
	setp.eq.f32 	%p52, %f23, 0f00000000;
	mov.f32 	%f805, %f807;
	@%p52 bra 	$L__BB0_23;
// %bb.22:                              // %L825
	sin.approx.f32 	%f350, %f23;
	div.approx.f32 	%f805, %f350, %f23;
$L__BB0_23:                             // %L828
	or.b32  	%r248, %r117, 192;
	or.b32  	%r10, %r117, 224;
	cvt.rn.f32.s32 	%f354, %r248;
	sub.f32 	%f355, %f354, %f85;
	div.approx.f32 	%f27, %f355, %f177;
	setp.eq.f32 	%p58, %f27, 0f00000000;
	mov.f32 	%f806, %f807;
	@%p58 bra 	$L__BB0_25;
// %bb.24:                              // %L907
	sin.approx.f32 	%f385, %f27;
	div.approx.f32 	%f806, %f385, %f27;
$L__BB0_25:                             // %L910
	shr.u32 	%r112, %r3, 1;
	shr.u32 	%r116, %r3, 3;
	cvt.rn.f32.s32 	%f388, %r10;
	sub.f32 	%f389, %f388, %f85;
	div.approx.f32 	%f32, %f389, %f177;
	setp.eq.f32 	%p64, %f32, 0f00000000;
	@%p64 bra 	$L__BB0_27;
// %bb.26:                              // %L927
	sin.approx.f32 	%f419, %f32;
	div.approx.f32 	%f807, %f419, %f32;
$L__BB0_27:                             // %L930
	and.b32  	%r292, %r3, 3;
	and.b32  	%r293, %r116, 2;
	and.b32  	%r294, %r112, 4;
	or.b32  	%r295, %r113, %r293;
	or.b32  	%r14, %r295, %r294;
	mul.lo.s32 	%r296, %r292, %r14;
	shl.b32 	%r297, %r296, 1;
	neg.s32 	%r298, %r297;
	cvt.rn.f32.s32 	%f35, %r298;
	mov.f32 	%f490, 0f41000000;
	div.approx.f32 	%f36, %f35, %f490;
	abs.f32 	%f830, %f36;
	setp.lt.f32 	%p79, %f830, 0f40000000;
	setp.gtu.f32 	%p234, %f830, 0f4B800000;
	mov.f32 	%f822, %f830;
	@%p79 bra 	$L__BB0_100;
// %bb.28:
	@%p234 bra 	$L__BB0_96;
	bra.uni 	$L__BB0_29;
$L__BB0_96:
	mov.b32 	%r120, %f830;
	and.b32  	%r299, %r120, 8388607;
	or.b32  	%r8024, %r299, 1065353216;
	mov.b32 	%f821, %r8024;
	add.s32 	%r300, %r120, -1073741824;
	and.b32  	%r8025, %r300, -8388608;
	setp.eq.s32 	%p86, %r8025, 0;
	@%p86 bra 	$L__BB0_99;
// %bb.97:                              // %__nv_fmaf_rn.exit4.i.i.i923.preheader
	mov.f32 	%f500, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f499,%f500;
	// end inline asm
$L__BB0_98:                             // %__nv_fmaf_rn.exit4.i.i.i923
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r301, %r8025, 192937984;
	add.s32 	%r302, %r8024, %r301;
	mov.b32 	%f501, %r302;
	mul.f32 	%f502, %f499, %f501;
	sub.f32 	%f503, %f501, %f502;
	fma.rn.f32 	%f504, %f503, %f499, %f502;
	sub.f32 	%f505, %f501, %f504;
	fma.rz.f32 	%f506, %f505, %f499, %f504;
	cvt.rzi.f32.f32 	%f507, %f506;
	sub.f32 	%f821, %f501, %f507;
	sub.s32 	%r8025, %r8025, %r301;
	mov.b32 	%r8024, %f821;
	setp.ne.s32 	%p87, %r8025, 0;
	setp.ne.s32 	%p88, %r8024, 0;
	and.pred  	%p89, %p87, %p88;
	@%p89 bra 	$L__BB0_98;
$L__BB0_99:                             // %__internal_fmodf_slowpath_mod.exit.i.i925
	setp.gt.u32 	%p90, %r120, 2139095039;
	selp.f32 	%f508, 0f7FFFFFFF, 0f4B800000, %p90;
	mul.f32 	%f509, %f821, 0f34000000;
	mul.f32 	%f822, %f508, %f509;
	bra.uni 	$L__BB0_100;
$L__BB0_29:                             // %__nv_fast_fdividef.exit.i.i.i902
	div.approx.f32 	%f492, %f830, %f145;
	cvt.rzi.f32.f32 	%f820, %f492;
	fma.rn.f32 	%f89, %f820, 0fC0000000, %f830;
	mov.b32 	%r119, %f89;
	setp.lt.u32 	%p81, %r119, 1073741824;
	@%p81 bra 	$L__BB0_95;
// %bb.30:
	setp.lt.u32 	%p82, %r119, -2147483647;
	@%p82 bra 	$L__BB0_93;
// %bb.31:
	add.f32 	%f497, %f820, 0fBF800000;
	setp.lt.f32 	%p85, %f89, 0fC0000000;
	add.f32 	%f498, %f497, 0fBF800000;
	selp.f32 	%f820, %f498, %f497, %p85;
	bra.uni 	$L__BB0_95;
$L__BB0_93:
	add.f32 	%f820, %f820, 0f3F800000;
	setp.ltu.f32 	%p83, %f89, 0f40800000;
	@%p83 bra 	$L__BB0_95;
// %bb.94:                              // %__nv_fmaf_rn.exit.i.i.i906
	add.f32 	%f493, %f820, 0f3F800000;
	fma.rn.f32 	%f495, %f145, 0fC0400000, %f89;
	setp.ge.f32 	%p84, %f495, 0f00000000;
	add.f32 	%f496, %f493, 0f3F800000;
	selp.f32 	%f820, %f496, %f493, %p84;
$L__BB0_95:                             // %__internal_fmodf_fastpath_quot.exit.i.i909
	fma.rn.f32 	%f822, %f820, 0fC0000000, %f830;
$L__BB0_100:                            // %__internal_fmodf_kernel.exit.i928
	shl.b32 	%r109, %r3, 1;
	abs.f32 	%f510, %f822;
	setp.gtu.f32 	%p91, %f510, 0f7F800000;
	mov.b32 	%r303, %f36;
	and.b32  	%r127, %r303, -2147483648;
	@%p91 bra 	$L__BB0_102;
// %bb.101:
	mov.b32 	%r304, %f822;
	or.b32  	%r305, %r127, %r304;
	mov.b32 	%f822, %r305;
$L__BB0_102:                            // %__nv_fmodf.exit929
	and.b32  	%r314, %r109, 6;
	mov.u32 	%r315, -8;
	sub.s32 	%r316, %r315, %r314;
	mul.lo.s32 	%r317, %r14, %r316;
	cvt.rn.f32.s32 	%f105, %r317;
	div.approx.f32 	%f106, %f105, %f490;
	abs.f32 	%f818, %f106;
	setp.lt.f32 	%p99, %f818, 0f40000000;
	setp.gtu.f32 	%p235, %f818, 0f4B800000;
	mov.f32 	%f810, %f818;
	@%p99 bra 	$L__BB0_43;
// %bb.32:
	@%p235 bra 	$L__BB0_39;
	bra.uni 	$L__BB0_33;
$L__BB0_39:
	mov.b32 	%r16, %f818;
	and.b32  	%r318, %r16, 8388607;
	or.b32  	%r7991, %r318, 1065353216;
	mov.b32 	%f809, %r7991;
	add.s32 	%r319, %r16, -1073741824;
	and.b32  	%r7992, %r319, -8388608;
	setp.eq.s32 	%p106, %r7992, 0;
	@%p106 bra 	$L__BB0_42;
// %bb.40:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f551, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f550,%f551;
	// end inline asm
$L__BB0_41:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r320, %r7992, 192937984;
	add.s32 	%r321, %r7991, %r320;
	mov.b32 	%f552, %r321;
	mul.f32 	%f553, %f550, %f552;
	sub.f32 	%f554, %f552, %f553;
	fma.rn.f32 	%f555, %f554, %f550, %f553;
	sub.f32 	%f556, %f552, %f555;
	fma.rz.f32 	%f557, %f556, %f550, %f555;
	cvt.rzi.f32.f32 	%f558, %f557;
	sub.f32 	%f809, %f552, %f558;
	sub.s32 	%r7992, %r7992, %r320;
	mov.b32 	%r7991, %f809;
	setp.ne.s32 	%p107, %r7992, 0;
	setp.ne.s32 	%p108, %r7991, 0;
	and.pred  	%p109, %p107, %p108;
	@%p109 bra 	$L__BB0_41;
$L__BB0_42:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p110, %r16, 2139095039;
	selp.f32 	%f559, 0f7FFFFFFF, 0f4B800000, %p110;
	mul.f32 	%f560, %f809, 0f34000000;
	mul.f32 	%f810, %f559, %f560;
	bra.uni 	$L__BB0_43;
$L__BB0_33:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f543, %f818, %f145;
	cvt.rzi.f32.f32 	%f808, %f543;
	fma.rn.f32 	%f39, %f808, 0fC0000000, %f818;
	mov.b32 	%r15, %f39;
	setp.lt.u32 	%p101, %r15, 1073741824;
	@%p101 bra 	$L__BB0_38;
// %bb.34:
	setp.lt.u32 	%p102, %r15, -2147483647;
	@%p102 bra 	$L__BB0_36;
// %bb.35:
	add.f32 	%f548, %f808, 0fBF800000;
	setp.lt.f32 	%p105, %f39, 0fC0000000;
	add.f32 	%f549, %f548, 0fBF800000;
	selp.f32 	%f808, %f549, %f548, %p105;
	bra.uni 	$L__BB0_38;
$L__BB0_36:
	add.f32 	%f808, %f808, 0f3F800000;
	setp.ltu.f32 	%p103, %f39, 0f40800000;
	@%p103 bra 	$L__BB0_38;
// %bb.37:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f544, %f808, 0f3F800000;
	fma.rn.f32 	%f546, %f145, 0fC0400000, %f39;
	setp.ge.f32 	%p104, %f546, 0f00000000;
	add.f32 	%f547, %f544, 0f3F800000;
	selp.f32 	%f808, %f547, %f544, %p104;
$L__BB0_38:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f810, %f808, 0fC0000000, %f818;
$L__BB0_43:                             // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f561, %f810;
	setp.gtu.f32 	%p111, %f561, 0f7F800000;
	mov.b32 	%r322, %f106;
	and.b32  	%r23, %r322, -2147483648;
	@%p111 bra 	$L__BB0_45;
// %bb.44:
	mov.b32 	%r323, %f810;
	or.b32  	%r324, %r23, %r323;
	mov.b32 	%f810, %r324;
$L__BB0_45:                             // %__nv_fmodf.exit
	div.approx.f32 	%f53, %f35, %f177;
	abs.f32 	%f826, %f53;
	setp.lt.f32 	%p119, %f826, 0f40000000;
	@%p119 bra 	$L__BB0_110;
// %bb.46:
	setp.gtu.f32 	%p120, %f826, 0f4B800000;
	@%p120 bra 	$L__BB0_106;
	bra.uni 	$L__BB0_47;
$L__BB0_106:
	mov.b32 	%r129, %f826;
	and.b32  	%r345, %r129, 8388607;
	or.b32  	%r8026, %r345, 1065353216;
	mov.b32 	%f825, %r8026;
	add.s32 	%r346, %r129, -1073741824;
	and.b32  	%r8027, %r346, -8388608;
	setp.eq.s32 	%p126, %r8027, 0;
	@%p126 bra 	$L__BB0_109;
// %bb.107:                             // %__nv_fmaf_rn.exit4.i.i.i954.preheader
	mov.f32 	%f604, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f603,%f604;
	// end inline asm
$L__BB0_108:                            // %__nv_fmaf_rn.exit4.i.i.i954
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r347, %r8027, 192937984;
	add.s32 	%r348, %r8026, %r347;
	mov.b32 	%f605, %r348;
	mul.f32 	%f606, %f603, %f605;
	sub.f32 	%f607, %f605, %f606;
	fma.rn.f32 	%f608, %f607, %f603, %f606;
	sub.f32 	%f609, %f605, %f608;
	fma.rz.f32 	%f610, %f609, %f603, %f608;
	cvt.rzi.f32.f32 	%f611, %f610;
	sub.f32 	%f825, %f605, %f611;
	sub.s32 	%r8027, %r8027, %r347;
	mov.b32 	%r8026, %f825;
	setp.ne.s32 	%p127, %r8027, 0;
	setp.ne.s32 	%p128, %r8026, 0;
	and.pred  	%p129, %p127, %p128;
	@%p129 bra 	$L__BB0_108;
$L__BB0_109:                            // %__internal_fmodf_slowpath_mod.exit.i.i956
	setp.gt.u32 	%p130, %r129, 2139095039;
	selp.f32 	%f612, 0f7FFFFFFF, 0f4B800000, %p130;
	mul.f32 	%f613, %f825, 0f34000000;
	mul.f32 	%f826, %f612, %f613;
	bra.uni 	$L__BB0_110;
$L__BB0_47:                             // %__nv_fast_fdividef.exit.i.i.i933
	div.approx.f32 	%f596, %f826, %f145;
	cvt.rzi.f32.f32 	%f824, %f596;
	fma.rn.f32 	%f109, %f824, 0fC0000000, %f826;
	mov.b32 	%r128, %f109;
	setp.lt.u32 	%p121, %r128, 1073741824;
	@%p121 bra 	$L__BB0_105;
// %bb.48:
	setp.lt.u32 	%p122, %r128, -2147483647;
	@%p122 bra 	$L__BB0_103;
// %bb.49:
	add.f32 	%f601, %f824, 0fBF800000;
	setp.lt.f32 	%p125, %f109, 0fC0000000;
	add.f32 	%f602, %f601, 0fBF800000;
	selp.f32 	%f824, %f602, %f601, %p125;
	bra.uni 	$L__BB0_105;
$L__BB0_103:
	add.f32 	%f824, %f824, 0f3F800000;
	setp.ltu.f32 	%p123, %f109, 0f40800000;
	@%p123 bra 	$L__BB0_105;
// %bb.104:                             // %__nv_fmaf_rn.exit.i.i.i937
	add.f32 	%f597, %f824, 0f3F800000;
	fma.rn.f32 	%f599, %f145, 0fC0400000, %f109;
	setp.ge.f32 	%p124, %f599, 0f00000000;
	add.f32 	%f600, %f597, 0f3F800000;
	selp.f32 	%f824, %f600, %f597, %p124;
$L__BB0_105:                            // %__internal_fmodf_fastpath_quot.exit.i.i940
	fma.rn.f32 	%f826, %f824, 0fC0000000, %f826;
$L__BB0_110:                            // %__internal_fmodf_kernel.exit.i959
	abs.f32 	%f614, %f826;
	setp.gtu.f32 	%p131, %f614, 0f7F800000;
	@%p131 bra 	$L__BB0_112;
// %bb.111:
	mov.b32 	%r349, %f53;
	and.b32  	%r350, %r349, -2147483648;
	mov.b32 	%r351, %f826;
	or.b32  	%r352, %r350, %r351;
	mov.b32 	%f826, %r352;
$L__BB0_112:                            // %__nv_fmodf.exit960
	div.approx.f32 	%f125, %f105, %f177;
	abs.f32 	%f814, %f125;
	setp.lt.f32 	%p139, %f814, 0f40000000;
	@%p139 bra 	$L__BB0_61;
// %bb.50:
	setp.gtu.f32 	%p140, %f814, 0f4B800000;
	@%p140 bra 	$L__BB0_57;
	bra.uni 	$L__BB0_51;
$L__BB0_57:
	mov.b32 	%r29, %f814;
	and.b32  	%r361, %r29, 8388607;
	or.b32  	%r7993, %r361, 1065353216;
	mov.b32 	%f813, %r7993;
	add.s32 	%r362, %r29, -1073741824;
	and.b32  	%r7994, %r362, -8388608;
	setp.eq.s32 	%p146, %r7994, 0;
	@%p146 bra 	$L__BB0_60;
// %bb.58:                              // %__nv_fmaf_rn.exit4.i.i.i861.preheader
	mov.f32 	%f655, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f654,%f655;
	// end inline asm
$L__BB0_59:                             // %__nv_fmaf_rn.exit4.i.i.i861
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r363, %r7994, 192937984;
	add.s32 	%r364, %r7993, %r363;
	mov.b32 	%f656, %r364;
	mul.f32 	%f657, %f654, %f656;
	sub.f32 	%f658, %f656, %f657;
	fma.rn.f32 	%f659, %f658, %f654, %f657;
	sub.f32 	%f660, %f656, %f659;
	fma.rz.f32 	%f661, %f660, %f654, %f659;
	cvt.rzi.f32.f32 	%f662, %f661;
	sub.f32 	%f813, %f656, %f662;
	sub.s32 	%r7994, %r7994, %r363;
	mov.b32 	%r7993, %f813;
	setp.ne.s32 	%p147, %r7994, 0;
	setp.ne.s32 	%p148, %r7993, 0;
	and.pred  	%p149, %p147, %p148;
	@%p149 bra 	$L__BB0_59;
$L__BB0_60:                             // %__internal_fmodf_slowpath_mod.exit.i.i863
	setp.gt.u32 	%p150, %r29, 2139095039;
	selp.f32 	%f663, 0f7FFFFFFF, 0f4B800000, %p150;
	mul.f32 	%f664, %f813, 0f34000000;
	mul.f32 	%f814, %f663, %f664;
	bra.uni 	$L__BB0_61;
$L__BB0_51:                             // %__nv_fast_fdividef.exit.i.i.i840
	div.approx.f32 	%f647, %f814, %f145;
	cvt.rzi.f32.f32 	%f812, %f647;
	fma.rn.f32 	%f56, %f812, 0fC0000000, %f814;
	mov.b32 	%r28, %f56;
	setp.lt.u32 	%p141, %r28, 1073741824;
	@%p141 bra 	$L__BB0_56;
// %bb.52:
	setp.lt.u32 	%p142, %r28, -2147483647;
	@%p142 bra 	$L__BB0_54;
// %bb.53:
	add.f32 	%f652, %f812, 0fBF800000;
	setp.lt.f32 	%p145, %f56, 0fC0000000;
	add.f32 	%f653, %f652, 0fBF800000;
	selp.f32 	%f812, %f653, %f652, %p145;
	bra.uni 	$L__BB0_56;
$L__BB0_54:
	add.f32 	%f812, %f812, 0f3F800000;
	setp.ltu.f32 	%p143, %f56, 0f40800000;
	@%p143 bra 	$L__BB0_56;
// %bb.55:                              // %__nv_fmaf_rn.exit.i.i.i844
	add.f32 	%f648, %f812, 0f3F800000;
	fma.rn.f32 	%f650, %f145, 0fC0400000, %f56;
	setp.ge.f32 	%p144, %f650, 0f00000000;
	add.f32 	%f651, %f648, 0f3F800000;
	selp.f32 	%f812, %f651, %f648, %p144;
$L__BB0_56:                             // %__internal_fmodf_fastpath_quot.exit.i.i847
	fma.rn.f32 	%f814, %f812, 0fC0000000, %f814;
$L__BB0_61:                             // %__internal_fmodf_kernel.exit.i866
	abs.f32 	%f665, %f814;
	setp.gtu.f32 	%p151, %f665, 0f7F800000;
	@%p151 bra 	$L__BB0_63;
// %bb.62:
	mov.b32 	%r365, %f125;
	and.b32  	%r366, %r365, -2147483648;
	mov.b32 	%r367, %f814;
	or.b32  	%r368, %r366, %r367;
	mov.b32 	%f814, %r368;
$L__BB0_63:                             // %__nv_fmodf.exit867
	@%p79 bra 	$L__BB0_120;
// %bb.64:
	@%p234 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_65;
$L__BB0_116:
	mov.b32 	%r137, %f830;
	and.b32  	%r383, %r137, 8388607;
	or.b32  	%r8028, %r383, 1065353216;
	mov.b32 	%f829, %r8028;
	add.s32 	%r384, %r137, -1073741824;
	and.b32  	%r8029, %r384, -8388608;
	setp.eq.s32 	%p166, %r8029, 0;
	@%p166 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i985.preheader
	mov.f32 	%f707, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f706,%f707;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i985
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r385, %r8029, 192937984;
	add.s32 	%r386, %r8028, %r385;
	mov.b32 	%f708, %r386;
	mul.f32 	%f709, %f706, %f708;
	sub.f32 	%f710, %f708, %f709;
	fma.rn.f32 	%f711, %f710, %f706, %f709;
	sub.f32 	%f712, %f708, %f711;
	fma.rz.f32 	%f713, %f712, %f706, %f711;
	cvt.rzi.f32.f32 	%f714, %f713;
	sub.f32 	%f829, %f708, %f714;
	sub.s32 	%r8029, %r8029, %r385;
	mov.b32 	%r8028, %f829;
	setp.ne.s32 	%p167, %r8029, 0;
	setp.ne.s32 	%p168, %r8028, 0;
	and.pred  	%p169, %p167, %p168;
	@%p169 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i987
	setp.gt.u32 	%p170, %r137, 2139095039;
	selp.f32 	%f715, 0f7FFFFFFF, 0f4B800000, %p170;
	mul.f32 	%f716, %f829, 0f34000000;
	mul.f32 	%f830, %f715, %f716;
	bra.uni 	$L__BB0_120;
$L__BB0_65:                             // %__nv_fast_fdividef.exit.i.i.i964
	div.approx.f32 	%f699, %f830, %f145;
	cvt.rzi.f32.f32 	%f828, %f699;
	fma.rn.f32 	%f128, %f828, 0fC0000000, %f830;
	mov.b32 	%r136, %f128;
	setp.lt.u32 	%p161, %r136, 1073741824;
	@%p161 bra 	$L__BB0_115;
// %bb.66:
	setp.lt.u32 	%p162, %r136, -2147483647;
	@%p162 bra 	$L__BB0_113;
// %bb.67:
	add.f32 	%f704, %f828, 0fBF800000;
	setp.lt.f32 	%p165, %f128, 0fC0000000;
	add.f32 	%f705, %f704, 0fBF800000;
	selp.f32 	%f828, %f705, %f704, %p165;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f828, %f828, 0f3F800000;
	setp.ltu.f32 	%p163, %f128, 0f40800000;
	@%p163 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i968
	add.f32 	%f700, %f828, 0f3F800000;
	fma.rn.f32 	%f702, %f145, 0fC0400000, %f128;
	setp.ge.f32 	%p164, %f702, 0f00000000;
	add.f32 	%f703, %f700, 0f3F800000;
	selp.f32 	%f828, %f703, %f700, %p164;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i971
	fma.rn.f32 	%f830, %f828, 0fC0000000, %f830;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i990
	abs.f32 	%f717, %f830;
	setp.gtu.f32 	%p171, %f717, 0f7F800000;
	@%p171 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r387, %f830;
	or.b32  	%r388, %r127, %r387;
	mov.b32 	%f830, %r388;
$L__BB0_122:                            // %__nv_fmodf.exit991
	@%p99 bra 	$L__BB0_79;
// %bb.68:
	@%p235 bra 	$L__BB0_75;
	bra.uni 	$L__BB0_69;
$L__BB0_75:
	mov.b32 	%r39, %f818;
	and.b32  	%r397, %r39, 8388607;
	or.b32  	%r7995, %r397, 1065353216;
	mov.b32 	%f817, %r7995;
	add.s32 	%r398, %r39, -1073741824;
	and.b32  	%r7996, %r398, -8388608;
	setp.eq.s32 	%p186, %r7996, 0;
	@%p186 bra 	$L__BB0_78;
// %bb.76:                              // %__nv_fmaf_rn.exit4.i.i.i892.preheader
	mov.f32 	%f757, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f756,%f757;
	// end inline asm
$L__BB0_77:                             // %__nv_fmaf_rn.exit4.i.i.i892
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r399, %r7996, 192937984;
	add.s32 	%r400, %r7995, %r399;
	mov.b32 	%f758, %r400;
	mul.f32 	%f759, %f756, %f758;
	sub.f32 	%f760, %f758, %f759;
	fma.rn.f32 	%f761, %f760, %f756, %f759;
	sub.f32 	%f762, %f758, %f761;
	fma.rz.f32 	%f763, %f762, %f756, %f761;
	cvt.rzi.f32.f32 	%f764, %f763;
	sub.f32 	%f817, %f758, %f764;
	sub.s32 	%r7996, %r7996, %r399;
	mov.b32 	%r7995, %f817;
	setp.ne.s32 	%p187, %r7996, 0;
	setp.ne.s32 	%p188, %r7995, 0;
	and.pred  	%p189, %p187, %p188;
	@%p189 bra 	$L__BB0_77;
$L__BB0_78:                             // %__internal_fmodf_slowpath_mod.exit.i.i894
	setp.gt.u32 	%p190, %r39, 2139095039;
	selp.f32 	%f765, 0f7FFFFFFF, 0f4B800000, %p190;
	mul.f32 	%f766, %f817, 0f34000000;
	mul.f32 	%f818, %f765, %f766;
	bra.uni 	$L__BB0_79;
$L__BB0_69:                             // %__nv_fast_fdividef.exit.i.i.i871
	div.approx.f32 	%f749, %f818, %f145;
	cvt.rzi.f32.f32 	%f816, %f749;
	fma.rn.f32 	%f71, %f816, 0fC0000000, %f818;
	mov.b32 	%r38, %f71;
	setp.lt.u32 	%p181, %r38, 1073741824;
	@%p181 bra 	$L__BB0_74;
// %bb.70:
	setp.lt.u32 	%p182, %r38, -2147483647;
	@%p182 bra 	$L__BB0_72;
// %bb.71:
	add.f32 	%f754, %f816, 0fBF800000;
	setp.lt.f32 	%p185, %f71, 0fC0000000;
	add.f32 	%f755, %f754, 0fBF800000;
	selp.f32 	%f816, %f755, %f754, %p185;
	bra.uni 	$L__BB0_74;
$L__BB0_72:
	add.f32 	%f816, %f816, 0f3F800000;
	setp.ltu.f32 	%p183, %f71, 0f40800000;
	@%p183 bra 	$L__BB0_74;
// %bb.73:                              // %__nv_fmaf_rn.exit.i.i.i875
	add.f32 	%f750, %f816, 0f3F800000;
	fma.rn.f32 	%f752, %f145, 0fC0400000, %f71;
	setp.ge.f32 	%p184, %f752, 0f00000000;
	add.f32 	%f753, %f750, 0f3F800000;
	selp.f32 	%f816, %f753, %f750, %p184;
$L__BB0_74:                             // %__internal_fmodf_fastpath_quot.exit.i.i878
	fma.rn.f32 	%f818, %f816, 0fC0000000, %f818;
$L__BB0_79:                             // %__internal_fmodf_kernel.exit.i897
	abs.f32 	%f767, %f818;
	setp.gtu.f32 	%p191, %f767, 0f7F800000;
	@%p191 bra 	$L__BB0_81;
// %bb.80:
	mov.b32 	%r401, %f818;
	or.b32  	%r402, %r23, %r401;
	mov.b32 	%f818, %r402;
$L__BB0_81:                             // %__nv_fmodf.exit898
	setp.le.s32 	%p199, %r167, %r166;
	mov.u32 	%r7989, 0;
	@%p199 bra 	$L__BB0_92;
// %bb.82:                              // %L1447.lr.ph
	mov.f32 	%f149, 0f43808000;
	mul.lo.s32 	%r272, %r117, 63;
	div.approx.f32 	%f150, %f148, %f149;
	div.approx.f32 	%f184, %f182, %f149;
	div.approx.f32 	%f219, %f217, %f149;
	div.approx.f32 	%f253, %f251, %f149;
	div.approx.f32 	%f288, %f286, %f149;
	div.approx.f32 	%f322, %f320, %f149;
	div.approx.f32 	%f357, %f355, %f149;
	div.approx.f32 	%f391, %f389, %f149;
	add.s32 	%r282, %r272, 96;
	abs.f32 	%f151, %f150;
	abs.f32 	%f185, %f184;
	abs.f32 	%f220, %f219;
	abs.f32 	%f254, %f253;
	abs.f32 	%f289, %f288;
	abs.f32 	%f323, %f322;
	abs.f32 	%f358, %f357;
	abs.f32 	%f392, %f391;
	and.b32  	%r273, %r272, 127;
	and.b32  	%r283, %r282, 127;
	setp.gt.f32 	%p17, %f151, 0f4B800000;
	mul.f32 	%f152, %f150, 0f00000000;
	setp.gt.f32 	%p23, %f185, 0f4B800000;
	mul.f32 	%f186, %f184, 0f00000000;
	setp.gt.f32 	%p29, %f220, 0f4B800000;
	mul.f32 	%f221, %f219, 0f00000000;
	setp.gt.f32 	%p35, %f254, 0f4B800000;
	mul.f32 	%f255, %f253, 0f00000000;
	setp.gt.f32 	%p41, %f289, 0f4B800000;
	mul.f32 	%f290, %f288, 0f00000000;
	setp.gt.f32 	%p47, %f323, 0f4B800000;
	mul.f32 	%f324, %f322, 0f00000000;
	setp.gt.f32 	%p53, %f358, 0f4B800000;
	mul.f32 	%f359, %f357, 0f00000000;
	setp.gt.f32 	%p59, %f392, 0f4B800000;
	mul.f32 	%f393, %f391, 0f00000000;
	cvt.rn.f32.s32 	%f422, %r273;
	cvt.rn.f32.s32 	%f457, %r283;
	selp.f32 	%f153, %f152, %f150, %p17;
	selp.f32 	%f187, %f186, %f184, %p23;
	selp.f32 	%f222, %f221, %f219, %p29;
	selp.f32 	%f256, %f255, %f253, %p35;
	selp.f32 	%f291, %f290, %f288, %p41;
	selp.f32 	%f325, %f324, %f322, %p47;
	selp.f32 	%f360, %f359, %f357, %p53;
	selp.f32 	%f394, %f393, %f391, %p59;
	div.approx.f32 	%f424, %f422, %f177;
	div.approx.f32 	%f458, %f457, %f177;
	add.f32 	%f154, %f153, %f153;
	add.f32 	%f188, %f187, %f187;
	add.f32 	%f223, %f222, %f222;
	add.f32 	%f257, %f256, %f256;
	add.f32 	%f292, %f291, %f291;
	add.f32 	%f326, %f325, %f325;
	add.f32 	%f361, %f360, %f360;
	add.f32 	%f395, %f394, %f394;
	add.f32 	%f425, %f424, %f424;
	add.f32 	%f459, %f458, %f458;
	add.f32 	%f511, %f822, %f822;
	add.f32 	%f562, %f810, %f810;
	mov.b32 	%r195, %f154;
	mov.b32 	%r202, %f188;
	mov.b32 	%r213, %f223;
	mov.b32 	%r220, %f257;
	mov.b32 	%r231, %f292;
	mov.b32 	%r238, %f326;
	mov.b32 	%r249, %f361;
	mov.b32 	%r256, %f395;
	mov.b32 	%r274, %f425;
	mov.b32 	%r284, %f459;
	mov.b32 	%r306, %f511;
	mov.b32 	%r337, %f562;
	and.b32  	%r196, %r195, -2147483648;
	and.b32  	%r203, %r202, -2147483648;
	and.b32  	%r214, %r213, -2147483648;
	and.b32  	%r221, %r220, -2147483648;
	and.b32  	%r232, %r231, -2147483648;
	and.b32  	%r239, %r238, -2147483648;
	and.b32  	%r250, %r249, -2147483648;
	and.b32  	%r257, %r256, -2147483648;
	and.b32  	%r275, %r274, -2147483648;
	and.b32  	%r285, %r284, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	add.f32 	%f615, %f826, %f826;
	add.f32 	%f666, %f814, %f814;
	or.b32  	%r197, %r196, 1056964608;
	or.b32  	%r204, %r203, 1056964608;
	or.b32  	%r215, %r214, 1056964608;
	or.b32  	%r222, %r221, 1056964608;
	or.b32  	%r233, %r232, 1056964608;
	or.b32  	%r240, %r239, 1056964608;
	or.b32  	%r251, %r250, 1056964608;
	or.b32  	%r258, %r257, 1056964608;
	or.b32  	%r276, %r275, 1056964608;
	or.b32  	%r286, %r285, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	mov.b32 	%r353, %f615;
	mov.b32 	%r375, %f666;
	mov.b32 	%f155, %r197;
	mov.b32 	%f189, %r204;
	mov.b32 	%f224, %r215;
	mov.b32 	%f258, %r222;
	mov.b32 	%f293, %r233;
	mov.b32 	%f327, %r240;
	mov.b32 	%f362, %r251;
	mov.b32 	%f396, %r258;
	mov.b32 	%f426, %r276;
	mov.b32 	%f460, %r286;
	mov.b32 	%f512, %r308;
	mov.b32 	%f563, %r339;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r376, %r375, -2147483648;
	add.f32 	%f718, %f830, %f830;
	add.f32 	%f156, %f154, %f155;
	abs.f32 	%f158, %f154;
	add.f32 	%f190, %f188, %f189;
	abs.f32 	%f192, %f188;
	add.f32 	%f225, %f223, %f224;
	abs.f32 	%f227, %f223;
	add.f32 	%f259, %f257, %f258;
	abs.f32 	%f261, %f257;
	add.f32 	%f294, %f292, %f293;
	abs.f32 	%f296, %f292;
	add.f32 	%f328, %f326, %f327;
	abs.f32 	%f330, %f326;
	add.f32 	%f363, %f361, %f362;
	abs.f32 	%f365, %f361;
	add.f32 	%f397, %f395, %f396;
	abs.f32 	%f399, %f395;
	add.f32 	%f427, %f425, %f426;
	abs.f32 	%f429, %f425;
	add.f32 	%f461, %f459, %f460;
	abs.f32 	%f463, %f459;
	add.f32 	%f513, %f511, %f512;
	abs.f32 	%f515, %f511;
	add.f32 	%f564, %f562, %f563;
	abs.f32 	%f566, %f562;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r377, %r376, 1056964608;
	mov.b32 	%r389, %f718;
	cvt.rzi.f32.f32 	%f157, %f156;
	setp.gt.f32 	%p18, %f158, 0f4B000000;
	cvt.rzi.f32.f32 	%f191, %f190;
	setp.gt.f32 	%p24, %f192, 0f4B000000;
	cvt.rzi.f32.f32 	%f226, %f225;
	setp.gt.f32 	%p30, %f227, 0f4B000000;
	cvt.rzi.f32.f32 	%f260, %f259;
	setp.gt.f32 	%p36, %f261, 0f4B000000;
	cvt.rzi.f32.f32 	%f295, %f294;
	setp.gt.f32 	%p42, %f296, 0f4B000000;
	cvt.rzi.f32.f32 	%f329, %f328;
	setp.gt.f32 	%p48, %f330, 0f4B000000;
	cvt.rzi.f32.f32 	%f364, %f363;
	setp.gt.f32 	%p54, %f365, 0f4B000000;
	cvt.rzi.f32.f32 	%f398, %f397;
	setp.gt.f32 	%p60, %f399, 0f4B000000;
	cvt.rzi.f32.f32 	%f428, %f427;
	setp.gt.f32 	%p65, %f429, 0f4B000000;
	cvt.rzi.f32.f32 	%f462, %f461;
	setp.gt.f32 	%p72, %f463, 0f4B000000;
	cvt.rzi.f32.f32 	%f514, %f513;
	setp.gt.f32 	%p92, %f515, 0f4B000000;
	cvt.rzi.f32.f32 	%f565, %f564;
	setp.gt.f32 	%p112, %f566, 0f4B000000;
	mov.b32 	%f616, %r355;
	mov.b32 	%f667, %r377;
	and.b32  	%r390, %r389, -2147483648;
	selp.f32 	%f159, %f154, %f157, %p18;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p19, %f158, 0f3F000000;
	selp.f32 	%f193, %f188, %f191, %p24;
	cvt.rzi.f32.f32 	%f194, %f188;
	setp.lt.f32 	%p25, %f192, 0f3F000000;
	selp.f32 	%f228, %f223, %f226, %p30;
	cvt.rzi.f32.f32 	%f229, %f223;
	setp.lt.f32 	%p31, %f227, 0f3F000000;
	selp.f32 	%f262, %f257, %f260, %p36;
	cvt.rzi.f32.f32 	%f263, %f257;
	setp.lt.f32 	%p37, %f261, 0f3F000000;
	selp.f32 	%f297, %f292, %f295, %p42;
	cvt.rzi.f32.f32 	%f298, %f292;
	setp.lt.f32 	%p43, %f296, 0f3F000000;
	selp.f32 	%f331, %f326, %f329, %p48;
	cvt.rzi.f32.f32 	%f332, %f326;
	setp.lt.f32 	%p49, %f330, 0f3F000000;
	selp.f32 	%f366, %f361, %f364, %p54;
	cvt.rzi.f32.f32 	%f367, %f361;
	setp.lt.f32 	%p55, %f365, 0f3F000000;
	selp.f32 	%f400, %f395, %f398, %p60;
	cvt.rzi.f32.f32 	%f401, %f395;
	setp.lt.f32 	%p61, %f399, 0f3F000000;
	selp.f32 	%f430, %f425, %f428, %p65;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p66, %f429, 0f3F000000;
	selp.f32 	%f464, %f459, %f462, %p72;
	cvt.rzi.f32.f32 	%f465, %f459;
	setp.lt.f32 	%p73, %f463, 0f3F000000;
	selp.f32 	%f516, %f511, %f514, %p92;
	cvt.rzi.f32.f32 	%f517, %f511;
	setp.lt.f32 	%p93, %f515, 0f3F000000;
	selp.f32 	%f567, %f562, %f565, %p112;
	cvt.rzi.f32.f32 	%f568, %f562;
	setp.lt.f32 	%p113, %f566, 0f3F000000;
	add.f32 	%f617, %f615, %f616;
	abs.f32 	%f619, %f615;
	add.f32 	%f668, %f666, %f667;
	abs.f32 	%f670, %f666;
	or.b32  	%r391, %r390, 1056964608;
	selp.f32 	%f161, %f160, %f159, %p19;
	selp.f32 	%f195, %f194, %f193, %p25;
	selp.f32 	%f230, %f229, %f228, %p31;
	selp.f32 	%f264, %f263, %f262, %p37;
	selp.f32 	%f299, %f298, %f297, %p43;
	selp.f32 	%f333, %f332, %f331, %p49;
	selp.f32 	%f368, %f367, %f366, %p55;
	selp.f32 	%f402, %f401, %f400, %p61;
	selp.f32 	%f432, %f431, %f430, %p66;
	selp.f32 	%f466, %f465, %f464, %p73;
	selp.f32 	%f518, %f517, %f516, %p93;
	selp.f32 	%f569, %f568, %f567, %p113;
	cvt.rzi.f32.f32 	%f618, %f617;
	setp.gt.f32 	%p132, %f619, 0f4B000000;
	cvt.rzi.f32.f32 	%f669, %f668;
	setp.gt.f32 	%p153, %f670, 0f4B000000;
	mov.b32 	%f719, %r391;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f153;
	fma.rn.f32 	%f196, %f195, 0fBF000000, %f187;
	fma.rn.f32 	%f231, %f230, 0fBF000000, %f222;
	fma.rn.f32 	%f265, %f264, 0fBF000000, %f256;
	fma.rn.f32 	%f300, %f299, 0fBF000000, %f291;
	fma.rn.f32 	%f334, %f333, 0fBF000000, %f325;
	fma.rn.f32 	%f369, %f368, 0fBF000000, %f360;
	fma.rn.f32 	%f403, %f402, 0fBF000000, %f394;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f424;
	fma.rn.f32 	%f467, %f466, 0fBF000000, %f458;
	fma.rn.f32 	%f519, %f518, 0fBF000000, %f822;
	fma.rn.f32 	%f570, %f569, 0fBF000000, %f810;
	selp.f32 	%f620, %f615, %f618, %p132;
	cvt.rzi.f32.f32 	%f621, %f615;
	setp.lt.f32 	%p133, %f619, 0f3F000000;
	selp.f32 	%f671, %f666, %f669, %p153;
	cvt.rzi.f32.f32 	%f672, %f666;
	setp.lt.f32 	%p154, %f670, 0f3F000000;
	add.f32 	%f720, %f718, %f719;
	abs.f32 	%f722, %f718;
	mul.f32 	%f163, %f162, %f162;
	mul.f32 	%f197, %f196, %f196;
	mul.f32 	%f232, %f231, %f231;
	mul.f32 	%f266, %f265, %f265;
	mul.f32 	%f301, %f300, %f300;
	mul.f32 	%f335, %f334, %f334;
	mul.f32 	%f370, %f369, %f369;
	mul.f32 	%f404, %f403, %f403;
	mul.f32 	%f434, %f433, %f433;
	mul.f32 	%f468, %f467, %f467;
	mul.f32 	%f520, %f519, %f519;
	mul.f32 	%f571, %f570, %f570;
	selp.f32 	%f622, %f621, %f620, %p133;
	selp.f32 	%f673, %f672, %f671, %p154;
	cvt.rzi.f32.f32 	%f721, %f720;
	setp.gt.f32 	%p173, %f722, 0f4B000000;
	shl.b32 	%r105, %r3, 2;
	cvt.rzi.s32.f32 	%r198, %f161;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r205, %f195;
	fma.rn.f32 	%f198, %f197, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f199, %f197, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r216, %f230;
	fma.rn.f32 	%f233, %f232, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f234, %f232, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r223, %f264;
	fma.rn.f32 	%f267, %f266, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f268, %f266, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r234, %f299;
	fma.rn.f32 	%f302, %f301, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f303, %f301, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r241, %f333;
	fma.rn.f32 	%f336, %f335, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f337, %f335, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r252, %f368;
	fma.rn.f32 	%f371, %f370, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f372, %f370, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r259, %f402;
	fma.rn.f32 	%f405, %f404, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f406, %f404, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f469, %f468, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f470, %f468, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f521, %f520, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f522, %f520, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f572, %f571, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f573, %f571, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f623, %f622, 0fBF000000, %f826;
	fma.rn.f32 	%f674, %f673, 0fBF000000, %f814;
	selp.f32 	%f723, %f718, %f721, %p173;
	cvt.rzi.f32.f32 	%f724, %f718;
	setp.lt.f32 	%p174, %f722, 0f3F000000;
	shl.b32 	%r104, %r4, 6;
	and.b32  	%r106, %r105, 4;
	add.s32 	%r199, %r198, 1;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	add.s32 	%r206, %r205, 1;
	fma.rn.f32 	%f200, %f198, %f197, 0fC0A55DF6;
	fma.rn.f32 	%f201, %f199, %f197, 0f4081E0CF;
	fma.rn.f32 	%f202, %f197, %f196, 0f00000000;
	add.s32 	%r217, %r216, 1;
	fma.rn.f32 	%f235, %f233, %f232, 0fC0A55DF6;
	fma.rn.f32 	%f236, %f234, %f232, 0f4081E0CF;
	fma.rn.f32 	%f237, %f232, %f231, 0f00000000;
	add.s32 	%r224, %r223, 1;
	fma.rn.f32 	%f269, %f267, %f266, 0fC0A55DF6;
	fma.rn.f32 	%f270, %f268, %f266, 0f4081E0CF;
	fma.rn.f32 	%f271, %f266, %f265, 0f00000000;
	add.s32 	%r235, %r234, 1;
	fma.rn.f32 	%f304, %f302, %f301, 0fC0A55DF6;
	fma.rn.f32 	%f305, %f303, %f301, 0f4081E0CF;
	fma.rn.f32 	%f306, %f301, %f300, 0f00000000;
	add.s32 	%r242, %r241, 1;
	fma.rn.f32 	%f338, %f336, %f335, 0fC0A55DF6;
	fma.rn.f32 	%f339, %f337, %f335, 0f4081E0CF;
	fma.rn.f32 	%f340, %f335, %f334, 0f00000000;
	add.s32 	%r253, %r252, 1;
	fma.rn.f32 	%f373, %f371, %f370, 0fC0A55DF6;
	fma.rn.f32 	%f374, %f372, %f370, 0f4081E0CF;
	fma.rn.f32 	%f375, %f370, %f369, 0f00000000;
	add.s32 	%r260, %r259, 1;
	fma.rn.f32 	%f407, %f405, %f404, 0fC0A55DF6;
	fma.rn.f32 	%f408, %f406, %f404, 0f4081E0CF;
	fma.rn.f32 	%f409, %f404, %f403, 0f00000000;
	cvt.rzi.s32.f32 	%r277, %f432;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	cvt.rzi.s32.f32 	%r287, %f466;
	fma.rn.f32 	%f471, %f469, %f468, 0fC0A55DF6;
	fma.rn.f32 	%f472, %f470, %f468, 0f4081E0CF;
	fma.rn.f32 	%f473, %f468, %f467, 0f00000000;
	cvt.rzi.s32.f32 	%r309, %f518;
	fma.rn.f32 	%f523, %f521, %f520, 0fC0A55DF6;
	fma.rn.f32 	%f524, %f522, %f520, 0f4081E0CF;
	fma.rn.f32 	%f525, %f520, %f519, 0f00000000;
	cvt.rzi.s32.f32 	%r340, %f569;
	fma.rn.f32 	%f574, %f572, %f571, 0fC0A55DF6;
	fma.rn.f32 	%f575, %f573, %f571, 0f4081E0CF;
	fma.rn.f32 	%f576, %f571, %f570, 0f00000000;
	mul.f32 	%f624, %f623, %f623;
	mul.f32 	%f675, %f674, %f674;
	selp.f32 	%f725, %f724, %f723, %p174;
	or.b32  	%r182, %r106, %r104;
	and.b32  	%r107, %r3, 16;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	and.b32  	%r200, %r199, 1;
	fma.rn.f32 	%f203, %f201, %f197, 0fC09DE9E6;
	fma.rn.f32 	%f204, %f200, %f202, 0f00000000;
	and.b32  	%r207, %r206, 1;
	fma.rn.f32 	%f238, %f236, %f232, 0fC09DE9E6;
	fma.rn.f32 	%f239, %f235, %f237, 0f00000000;
	and.b32  	%r218, %r217, 1;
	fma.rn.f32 	%f272, %f270, %f266, 0fC09DE9E6;
	fma.rn.f32 	%f273, %f269, %f271, 0f00000000;
	and.b32  	%r225, %r224, 1;
	fma.rn.f32 	%f307, %f305, %f301, 0fC09DE9E6;
	fma.rn.f32 	%f308, %f304, %f306, 0f00000000;
	and.b32  	%r236, %r235, 1;
	fma.rn.f32 	%f341, %f339, %f335, 0fC09DE9E6;
	fma.rn.f32 	%f342, %f338, %f340, 0f00000000;
	and.b32  	%r243, %r242, 1;
	fma.rn.f32 	%f376, %f374, %f370, 0fC09DE9E6;
	fma.rn.f32 	%f377, %f373, %f375, 0f00000000;
	and.b32  	%r254, %r253, 1;
	fma.rn.f32 	%f410, %f408, %f404, 0fC09DE9E6;
	fma.rn.f32 	%f411, %f407, %f409, 0f00000000;
	and.b32  	%r261, %r260, 1;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	and.b32  	%r278, %r277, 1;
	fma.rn.f32 	%f474, %f472, %f468, 0fC09DE9E6;
	fma.rn.f32 	%f475, %f471, %f473, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f526, %f524, %f520, 0fC09DE9E6;
	fma.rn.f32 	%f527, %f523, %f525, 0f00000000;
	and.b32  	%r310, %r309, 1;
	fma.rn.f32 	%f577, %f575, %f571, 0fC09DE9E6;
	fma.rn.f32 	%f578, %f574, %f576, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f625, %f624, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f626, %f624, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f676, %f675, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f677, %f675, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f726, %f725, 0fBF000000, %f830;
	or.b32  	%r183, %r182, %r107;
	and.b32  	%r108, %r105, 32;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	setp.eq.b32 	%p20, %r200, 1;
	fma.rn.f32 	%f205, %f203, %f197, 0f3F800000;
	fma.rn.f32 	%f206, %f196, 0f40490FDB, %f204;
	setp.eq.b32 	%p26, %r207, 1;
	fma.rn.f32 	%f240, %f238, %f232, 0f3F800000;
	fma.rn.f32 	%f241, %f231, 0f40490FDB, %f239;
	setp.eq.b32 	%p32, %r218, 1;
	fma.rn.f32 	%f274, %f272, %f266, 0f3F800000;
	fma.rn.f32 	%f275, %f265, 0f40490FDB, %f273;
	setp.eq.b32 	%p38, %r225, 1;
	fma.rn.f32 	%f309, %f307, %f301, 0f3F800000;
	fma.rn.f32 	%f310, %f300, 0f40490FDB, %f308;
	setp.eq.b32 	%p44, %r236, 1;
	fma.rn.f32 	%f343, %f341, %f335, 0f3F800000;
	fma.rn.f32 	%f344, %f334, 0f40490FDB, %f342;
	setp.eq.b32 	%p50, %r243, 1;
	fma.rn.f32 	%f378, %f376, %f370, 0f3F800000;
	fma.rn.f32 	%f379, %f369, 0f40490FDB, %f377;
	setp.eq.b32 	%p56, %r254, 1;
	fma.rn.f32 	%f412, %f410, %f404, 0f3F800000;
	fma.rn.f32 	%f413, %f403, 0f40490FDB, %f411;
	setp.eq.b32 	%p62, %r261, 1;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	setp.eq.b32 	%p67, %r278, 1;
	fma.rn.f32 	%f476, %f474, %f468, 0f3F800000;
	fma.rn.f32 	%f477, %f467, 0f40490FDB, %f475;
	setp.eq.b32 	%p74, %r288, 1;
	fma.rn.f32 	%f528, %f526, %f520, 0f3F800000;
	fma.rn.f32 	%f529, %f519, 0f40490FDB, %f527;
	setp.eq.b32 	%p94, %r310, 1;
	fma.rn.f32 	%f579, %f577, %f571, 0f3F800000;
	fma.rn.f32 	%f580, %f570, 0f40490FDB, %f578;
	setp.eq.b32 	%p114, %r341, 1;
	cvt.rzi.s32.f32 	%r356, %f622;
	fma.rn.f32 	%f627, %f625, %f624, 0fC0A55DF6;
	fma.rn.f32 	%f628, %f626, %f624, 0f4081E0CF;
	fma.rn.f32 	%f629, %f624, %f623, 0f00000000;
	cvt.rzi.s32.f32 	%r378, %f673;
	fma.rn.f32 	%f678, %f676, %f675, 0fC0A55DF6;
	fma.rn.f32 	%f679, %f677, %f675, 0f4081E0CF;
	fma.rn.f32 	%f680, %f675, %f674, 0f00000000;
	mul.f32 	%f727, %f726, %f726;
	or.b32  	%r184, %r183, %r108;
	and.b32  	%r110, %r109, 8;
	selp.f32 	%f173, %f171, %f172, %p20;
	and.b32  	%r201, %r199, 2;
	mov.f32 	%f174, 0f00000000;
	selp.f32 	%f207, %f205, %f206, %p26;
	and.b32  	%r208, %r206, 2;
	selp.f32 	%f242, %f240, %f241, %p32;
	and.b32  	%r219, %r217, 2;
	selp.f32 	%f276, %f274, %f275, %p38;
	and.b32  	%r226, %r224, 2;
	selp.f32 	%f311, %f309, %f310, %p44;
	and.b32  	%r237, %r235, 2;
	selp.f32 	%f345, %f343, %f344, %p50;
	and.b32  	%r244, %r242, 2;
	selp.f32 	%f380, %f378, %f379, %p56;
	and.b32  	%r255, %r253, 2;
	selp.f32 	%f414, %f412, %f413, %p62;
	and.b32  	%r262, %r260, 2;
	selp.f32 	%f444, %f442, %f443, %p67;
	and.b32  	%r279, %r277, 2;
	selp.f32 	%f478, %f476, %f477, %p74;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f530, %f528, %f529, %p94;
	and.b32  	%r311, %r309, 2;
	selp.f32 	%f581, %f579, %f580, %p114;
	and.b32  	%r342, %r340, 2;
	fma.rn.f32 	%f630, %f628, %f624, 0fC09DE9E6;
	fma.rn.f32 	%f631, %f627, %f629, 0f00000000;
	and.b32  	%r357, %r356, 1;
	fma.rn.f32 	%f681, %f679, %f675, 0fC09DE9E6;
	fma.rn.f32 	%f682, %f678, %f680, 0f00000000;
	and.b32  	%r379, %r378, 1;
	fma.rn.f32 	%f728, %f727, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f729, %f727, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r185, %r184, %r110;
	and.b32  	%r186, %r3, 2;
	setp.eq.s32 	%p21, %r201, 0;
	sub.f32 	%f175, %f174, %f173;
	setp.eq.s32 	%p27, %r208, 0;
	sub.f32 	%f209, %f174, %f207;
	setp.eq.s32 	%p33, %r219, 0;
	sub.f32 	%f244, %f174, %f242;
	setp.eq.s32 	%p39, %r226, 0;
	sub.f32 	%f278, %f174, %f276;
	setp.eq.s32 	%p45, %r237, 0;
	sub.f32 	%f313, %f174, %f311;
	setp.eq.s32 	%p51, %r244, 0;
	sub.f32 	%f347, %f174, %f345;
	setp.eq.s32 	%p57, %r255, 0;
	sub.f32 	%f382, %f174, %f380;
	setp.eq.s32 	%p63, %r262, 0;
	sub.f32 	%f416, %f174, %f414;
	setp.eq.s32 	%p68, %r279, 0;
	neg.f32 	%f446, %f444;
	add.s32 	%r280, %r277, 1;
	cvt.rzi.f32.f32 	%f451, %f424;
	setp.eq.s32 	%p75, %r289, 0;
	neg.f32 	%f480, %f478;
	add.s32 	%r290, %r287, 1;
	cvt.rzi.f32.f32 	%f484, %f458;
	setp.eq.s32 	%p95, %r311, 0;
	neg.f32 	%f532, %f530;
	add.s32 	%r312, %r309, 1;
	cvt.rzi.f32.f32 	%f537, %f822;
	setp.eq.s32 	%p115, %r342, 0;
	neg.f32 	%f583, %f581;
	add.s32 	%r343, %r340, 1;
	cvt.rzi.f32.f32 	%f588, %f810;
	fma.rn.f32 	%f632, %f630, %f624, 0f3F800000;
	fma.rn.f32 	%f633, %f623, 0f40490FDB, %f631;
	setp.eq.b32 	%p134, %r357, 1;
	fma.rn.f32 	%f683, %f681, %f675, 0f3F800000;
	fma.rn.f32 	%f684, %f674, 0f40490FDB, %f682;
	setp.eq.b32 	%p155, %r379, 1;
	cvt.rzi.s32.f32 	%r392, %f725;
	fma.rn.f32 	%f730, %f728, %f727, 0fC0A55DF6;
	fma.rn.f32 	%f731, %f729, %f727, 0f4081E0CF;
	fma.rn.f32 	%f732, %f727, %f726, 0f00000000;
	or.b32  	%r187, %r185, %r186;
	selp.f32 	%f176, %f173, %f175, %p21;
	selp.f32 	%f210, %f207, %f209, %p27;
	selp.f32 	%f245, %f242, %f244, %p33;
	selp.f32 	%f279, %f276, %f278, %p39;
	selp.f32 	%f314, %f311, %f313, %p45;
	selp.f32 	%f348, %f345, %f347, %p51;
	selp.f32 	%f383, %f380, %f382, %p57;
	selp.f32 	%f417, %f414, %f416, %p63;
	selp.f32 	%f445, %f443, %f442, %p67;
	selp.f32 	%f447, %f444, %f446, %p68;
	and.b32  	%r281, %r280, 2;
	setp.eq.f32 	%p70, %f451, %f424;
	mul.f32 	%f452, %f424, 0f00000000;
	selp.f32 	%f479, %f477, %f476, %p74;
	selp.f32 	%f481, %f478, %f480, %p75;
	and.b32  	%r291, %r290, 2;
	setp.eq.f32 	%p77, %f484, %f458;
	mul.f32 	%f485, %f458, 0f00000000;
	selp.f32 	%f531, %f529, %f528, %p94;
	selp.f32 	%f533, %f530, %f532, %p95;
	and.b32  	%r313, %r312, 2;
	setp.eq.f32 	%p97, %f537, %f822;
	mul.f32 	%f538, %f822, 0f00000000;
	selp.f32 	%f582, %f580, %f579, %p114;
	selp.f32 	%f584, %f581, %f583, %p115;
	and.b32  	%r344, %r343, 2;
	setp.eq.f32 	%p117, %f588, %f810;
	mul.f32 	%f589, %f810, 0f00000000;
	selp.f32 	%f634, %f632, %f633, %p134;
	and.b32  	%r358, %r356, 2;
	selp.f32 	%f685, %f683, %f684, %p155;
	and.b32  	%r380, %r378, 2;
	fma.rn.f32 	%f733, %f731, %f727, 0fC09DE9E6;
	fma.rn.f32 	%f734, %f730, %f732, 0f00000000;
	and.b32  	%r393, %r392, 1;
	bfe.u32 	%r188, %r187, 1, 10;
	mul.f32 	%f86, %f176, %f176;
	mul.f32 	%f4, %f210, %f210;
	mul.f32 	%f8, %f245, %f245;
	mul.f32 	%f13, %f279, %f279;
	mul.f32 	%f17, %f314, %f314;
	mul.f32 	%f22, %f348, %f348;
	mul.f32 	%f26, %f383, %f383;
	mul.f32 	%f31, %f417, %f417;
	setp.eq.s32 	%p69, %r281, 0;
	sub.f32 	%f449, %f174, %f445;
	selp.f32 	%f453, %f452, %f447, %p70;
	abs.f32 	%f454, %f424;
	setp.eq.s32 	%p76, %r291, 0;
	sub.f32 	%f482, %f174, %f479;
	selp.f32 	%f486, %f485, %f481, %p77;
	abs.f32 	%f487, %f458;
	setp.eq.s32 	%p96, %r313, 0;
	sub.f32 	%f535, %f174, %f531;
	selp.f32 	%f103, %f538, %f533, %p97;
	abs.f32 	%f539, %f822;
	setp.eq.s32 	%p116, %r344, 0;
	sub.f32 	%f586, %f174, %f582;
	selp.f32 	%f590, %f589, %f584, %p117;
	abs.f32 	%f591, %f810;
	setp.eq.s32 	%p135, %r358, 0;
	neg.f32 	%f636, %f634;
	add.s32 	%r359, %r356, 1;
	cvt.rzi.f32.f32 	%f641, %f826;
	setp.eq.s32 	%p156, %r380, 0;
	neg.f32 	%f687, %f685;
	add.s32 	%r381, %r378, 1;
	cvt.rzi.f32.f32 	%f692, %f814;
	fma.rn.f32 	%f735, %f733, %f727, 0f3F800000;
	fma.rn.f32 	%f736, %f726, 0f40490FDB, %f734;
	setp.eq.b32 	%p175, %r393, 1;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd48, %r188, 4;
	mul.f32 	%f180, %f86, 0f3C0AF64E;
	mul.f32 	%f214, %f4, 0f3C0AF64E;
	mul.f32 	%f249, %f8, 0f3C0AF64E;
	mul.f32 	%f283, %f13, 0f3C0AF64E;
	mul.f32 	%f318, %f17, 0f3C0AF64E;
	mul.f32 	%f352, %f22, 0f3C0AF64E;
	mul.f32 	%f387, %f26, 0f3C0AF64E;
	mul.f32 	%f420, %f31, 0f3C0AF64E;
	selp.f32 	%f450, %f445, %f449, %p69;
	setp.gt.f32 	%p71, %f454, 0f4B800000;
	add.f32 	%f455, %f453, 0f3F800000;
	selp.f32 	%f483, %f479, %f482, %p76;
	setp.gt.f32 	%p78, %f487, 0f4B800000;
	add.f32 	%f488, %f486, 0f3F800000;
	selp.f32 	%f536, %f531, %f535, %p96;
	setp.gt.f32 	%p98, %f539, 0f4B800000;
	add.f32 	%f540, %f103, 0f3F800000;
	selp.f32 	%f587, %f582, %f586, %p116;
	setp.gt.f32 	%p118, %f591, 0f4B800000;
	add.f32 	%f592, %f590, 0f3F800000;
	selp.f32 	%f635, %f633, %f632, %p134;
	selp.f32 	%f637, %f634, %f636, %p135;
	and.b32  	%r360, %r359, 2;
	setp.eq.f32 	%p137, %f641, %f826;
	mul.f32 	%f642, %f826, 0f00000000;
	selp.f32 	%f686, %f684, %f683, %p155;
	selp.f32 	%f688, %f685, %f687, %p156;
	and.b32  	%r382, %r381, 2;
	setp.eq.f32 	%p158, %f692, %f814;
	mul.f32 	%f693, %f814, 0f00000000;
	selp.f32 	%f737, %f735, %f736, %p175;
	and.b32  	%r394, %r392, 2;
	add.s64 	%rd49, %rd1, %rd48;
	mul.f32 	%f3, %f180, %f800;
	mul.f32 	%f215, %f214, %f801;
	mul.f32 	%f12, %f249, %f802;
	mul.f32 	%f284, %f283, %f803;
	mul.f32 	%f21, %f318, %f804;
	mul.f32 	%f353, %f352, %f805;
	mul.f32 	%f30, %f387, %f806;
	mul.f32 	%f421, %f420, %f807;
	selp.f32 	%f456, %f455, %f450, %p71;
	selp.f32 	%f489, %f488, %f483, %p78;
	selp.f32 	%f104, %f540, %f536, %p98;
	selp.f32 	%f593, %f592, %f587, %p118;
	setp.eq.s32 	%p136, %r360, 0;
	sub.f32 	%f639, %f174, %f635;
	selp.f32 	%f123, %f642, %f637, %p137;
	abs.f32 	%f643, %f826;
	setp.eq.s32 	%p157, %r382, 0;
	sub.f32 	%f690, %f174, %f686;
	selp.f32 	%f694, %f693, %f688, %p158;
	abs.f32 	%f695, %f814;
	setp.eq.s32 	%p176, %r394, 0;
	neg.f32 	%f739, %f737;
	add.s32 	%r395, %r392, 1;
	cvt.rzi.f32.f32 	%f744, %f830;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r111, [%rd49];
	mov.b32 	%r211, %f215;
	mov.b32 	%r210, %f3;
	mov.b32 	%r229, %f284;
	mov.b32 	%r228, %f12;
	mov.b32 	%r247, %f353;
	mov.b32 	%r246, %f21;
	mov.b32 	%r265, %f421;
	mov.b32 	%r264, %f30;
	mov.b32 	%r267, %f456;
	mov.b32 	%r268, %f489;
	mov.b32 	%r270, %f453;
	mov.b32 	%r271, %f486;
	mov.b32 	%r327, %f593;
	mov.b32 	%r326, %f104;
	mov.b32 	%r333, %f590;
	mov.b32 	%r332, %f103;
	selp.f32 	%f640, %f635, %f639, %p136;
	setp.gt.f32 	%p138, %f643, 0f4B800000;
	add.f32 	%f644, %f123, 0f3F800000;
	selp.f32 	%f691, %f686, %f690, %p157;
	setp.gt.f32 	%p159, %f695, 0f4B800000;
	add.f32 	%f696, %f694, 0f3F800000;
	selp.f32 	%f738, %f736, %f735, %p175;
	selp.f32 	%f740, %f737, %f739, %p176;
	and.b32  	%r396, %r395, 2;
	setp.eq.f32 	%p178, %f744, %f830;
	mul.f32 	%f745, %f830, 0f00000000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r209, %r211, %r210;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r227, %r229, %r228;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r245, %r247, %r246;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r263, %r265, %r264;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r266, %r268, %r267;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r269, %r271, %r270;
	// end inline asm
	xor.b32  	%r330, %r333, -2147483648;
	xor.b32  	%r329, %r332, -2147483648;
	selp.f32 	%f124, %f644, %f640, %p138;
	selp.f32 	%f697, %f696, %f691, %p159;
	setp.eq.s32 	%p177, %r396, 0;
	sub.f32 	%f742, %f174, %f738;
	selp.f32 	%f142, %f745, %f740, %p178;
	abs.f32 	%f746, %f830;
	// begin inline asm
	cvt.rn.f16x2.f32 %r325, %r327, %r326;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r328, %r330, %r329;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r334, %r327, %r326;
	// end inline asm
	mov.b32 	%r371, %f697;
	mov.b32 	%r370, %f124;
	mov.b32 	%r374, %f694;
	mov.b32 	%r373, %f123;
	selp.f32 	%f743, %f738, %f742, %p177;
	setp.gt.f32 	%p179, %f746, 0f4B800000;
	add.f32 	%f747, %f142, 0f3F800000;
	// begin inline asm
	cvt.rn.f16x2.f32 %r369, %r371, %r370;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	selp.f32 	%f143, %f747, %f743, %p179;
	add.f32 	%f768, %f818, %f818;
	mov.b32 	%r415, %f768;
	and.b32  	%r416, %r415, -2147483648;
	or.b32  	%r417, %r416, 1056964608;
	mov.b32 	%f769, %r417;
	add.f32 	%f770, %f768, %f769;
	cvt.rzi.f32.f32 	%f771, %f770;
	abs.f32 	%f772, %f768;
	setp.gt.f32 	%p192, %f772, 0f4B000000;
	selp.f32 	%f773, %f768, %f771, %p192;
	cvt.rzi.f32.f32 	%f774, %f768;
	setp.lt.f32 	%p193, %f772, 0f3F000000;
	selp.f32 	%f775, %f774, %f773, %p193;
	cvt.rzi.s32.f32 	%r418, %f775;
	fma.rn.f32 	%f776, %f775, 0fBF000000, %f818;
	mul.f32 	%f777, %f776, %f776;
	fma.rn.f32 	%f778, %f777, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f779, %f777, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f780, %f778, %f777, 0fC0A55DF6;
	fma.rn.f32 	%f781, %f779, %f777, 0f4081E0CF;
	fma.rn.f32 	%f782, %f777, %f776, 0f00000000;
	fma.rn.f32 	%f783, %f781, %f777, 0fC09DE9E6;
	fma.rn.f32 	%f784, %f780, %f782, 0f00000000;
	fma.rn.f32 	%f785, %f783, %f777, 0f3F800000;
	fma.rn.f32 	%f786, %f776, 0f40490FDB, %f784;
	and.b32  	%r419, %r418, 1;
	setp.eq.b32 	%p194, %r419, 1;
	selp.f32 	%f787, %f785, %f786, %p194;
	selp.f32 	%f788, %f786, %f785, %p194;
	and.b32  	%r420, %r418, 2;
	setp.eq.s32 	%p195, %r420, 0;
	neg.f32 	%f789, %f787;
	selp.f32 	%f790, %f787, %f789, %p195;
	add.s32 	%r421, %r418, 1;
	and.b32  	%r422, %r421, 2;
	setp.eq.s32 	%p196, %r422, 0;
	sub.f32 	%f792, %f174, %f788;
	selp.f32 	%f793, %f788, %f792, %p196;
	cvt.rzi.f32.f32 	%f794, %f818;
	setp.eq.f32 	%p197, %f794, %f818;
	mul.f32 	%f795, %f818, 0f00000000;
	selp.f32 	%f796, %f795, %f790, %p197;
	abs.f32 	%f797, %f818;
	setp.gt.f32 	%p198, %f797, 0f4B800000;
	add.f32 	%f798, %f796, 0f3F800000;
	selp.f32 	%f799, %f798, %f793, %p198;
	mov.b32 	%r405, %f799;
	mov.b32 	%r404, %f143;
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	mov.b32 	%r411, %f796;
	xor.b32  	%r408, %r411, -2147483648;
	mov.b32 	%r410, %f142;
	xor.b32  	%r407, %r410, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r406, %r408, %r407;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r409, %r411, %r410;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r412, %r405, %r404;
	// end inline asm
	shl.b32 	%r424, %r170, 5;
	and.b32  	%r425, %r105, 12;
	cvt.u16.u32 	%rs1, %r104;
	mul.hi.u16 	%rs2, %rs1, -21845;
	shr.u16 	%rs3, %rs2, 8;
	mul.lo.s16 	%rs4, %rs3, 384;
	sub.s16 	%rs5, %rs1, %rs4;
	shl.b16 	%rs6, %rs5, 5;
	cvt.u32.u16 	%r426, %rs6;
	or.b32  	%r50, %r107, %r1;
	and.b32  	%r51, %r105, 16;
	and.b32  	%r427, %r105, 28;
	or.b32  	%r428, %r427, %r426;
	add.s32 	%r52, %r428, %r424;
	and.b32  	%r53, %r3, 8;
	shl.b32 	%r429, %r3, 4;
	or.b32  	%r430, %r53, %r429;
	shr.u32 	%r431, %r430, 2;
	and.b32  	%r432, %r431, 14;
	or.b32  	%r433, %r432, %r51;
	or.b32  	%r434, %r51, 32;
	or.b32  	%r435, %r434, %r432;
	or.b32  	%r436, %r432, 1;
	or.b32  	%r437, %r436, %r51;
	or.b32  	%r438, %r434, %r436;
	and.b32  	%r55, %r3, 4;
	shr.u32 	%r56, %r1, 1;
	and.b32  	%r57, %r2, 32;
	or.b32  	%r58, %r56, 8;
	and.b32  	%r439, %r3, 18;
	or.b32  	%r440, %r439, %r108;
	or.b32  	%r441, %r440, %r110;
	or.b32  	%r442, %r441, %r106;
	shr.u32 	%r443, %r442, 1;
	mul.lo.s32 	%r444, %r443, 65;
	or.b32  	%r445, %r57, %r56;
	add.s32 	%r446, %r445, %r444;
	or.b32  	%r447, %r57, %r58;
	add.s32 	%r448, %r447, %r444;
	or.b32  	%r449, %r445, 16;
	add.s32 	%r450, %r449, %r444;
	or.b32  	%r451, %r445, 24;
	add.s32 	%r452, %r451, %r444;
	shl.b32 	%r453, %r1, 1;
	or.b32  	%r454, %r114, %r453;
	mul.lo.s32 	%r455, %r454, 65;
	add.s32 	%r456, %r455, %r51;
	add.s32 	%r457, %r456, %r432;
	mul.wide.u32 	%rd50, %r457, 4;
	mov.u64 	%rd51, shmem;
	add.s64 	%rd5, %rd51, %rd50;
	cvt.u64.u32 	%rd52, %r432;
	cvt.u64.u32 	%rd53, %r455;
	cvt.u64.u32 	%rd54, %r51;
	add.s64 	%rd55, %rd54, %rd53;
	add.s64 	%rd56, %rd55, %rd52;
	shl.b64 	%rd57, %rd56, 2;
	add.s64 	%rd6, %rd51, %rd57;
	shl.b32 	%r458, %r168, 16;
	add.s32 	%r459, %r458, -196608;
	shl.b32 	%r460, %r1, 2;
	or.b32  	%r461, %r116, %r460;
	and.b32  	%r462, %r104, 1984;
	or.b32  	%r463, %r461, %r462;
	shl.b32 	%r464, %r463, 5;
	or.b32  	%r59, %r464, %r425;
	cvt.s64.s32 	%rd7, %r459;
	or.b32  	%r60, %r59, %r51;
	and.b32  	%r465, %r1, 1;
	neg.s32 	%r466, %r465;
	and.b32  	%r467, %r466, 1040;
	bfe.s32 	%r468, %r1, 1, 1;
	and.b32  	%r469, %r468, 520;
	bfe.s32 	%r470, %r1, 2, 1;
	and.b32  	%r471, %r470, 260;
	mul.lo.s32 	%r472, %r114, 65;
	shr.u32 	%r473, %r1, 3;
	mul.lo.s32 	%r474, %r473, 130;
	add.s32 	%r475, %r433, %r467;
	add.s32 	%r476, %r475, %r469;
	add.s32 	%r477, %r476, %r471;
	add.s32 	%r478, %r477, %r472;
	add.s32 	%r479, %r478, %r474;
	mul.wide.u32 	%rd58, %r479, 4;
	add.s64 	%rd8, %rd51, %rd58;
	add.s32 	%r480, %r435, %r467;
	add.s32 	%r481, %r480, %r469;
	add.s32 	%r482, %r481, %r471;
	add.s32 	%r483, %r482, %r472;
	add.s32 	%r484, %r483, %r474;
	mul.wide.u32 	%rd59, %r484, 4;
	add.s64 	%rd9, %rd51, %rd59;
	add.s32 	%r485, %r437, %r467;
	add.s32 	%r486, %r485, %r469;
	add.s32 	%r487, %r486, %r471;
	add.s32 	%r488, %r487, %r472;
	add.s32 	%r489, %r488, %r474;
	mul.wide.u32 	%rd60, %r489, 4;
	add.s64 	%rd10, %rd51, %rd60;
	add.s32 	%r490, %r438, %r467;
	add.s32 	%r491, %r490, %r469;
	add.s32 	%r492, %r491, %r471;
	add.s32 	%r493, %r492, %r472;
	add.s32 	%r494, %r493, %r474;
	mul.wide.u32 	%rd61, %r494, 4;
	add.s64 	%rd11, %rd51, %rd61;
	add.s32 	%r495, %r479, 2081;
	mul.wide.u32 	%rd62, %r495, 4;
	add.s64 	%rd12, %rd51, %rd62;
	add.s32 	%r496, %r484, 2081;
	mul.wide.u32 	%rd63, %r496, 4;
	add.s64 	%rd13, %rd51, %rd63;
	add.s32 	%r497, %r489, 2081;
	mul.wide.u32 	%rd64, %r497, 4;
	add.s64 	%rd14, %rd51, %rd64;
	add.s32 	%r498, %r494, 2081;
	mul.wide.u32 	%rd65, %r498, 4;
	add.s64 	%rd15, %rd51, %rd65;
	add.s32 	%r499, %r479, 4162;
	mul.wide.u32 	%rd66, %r499, 4;
	add.s64 	%rd16, %rd51, %rd66;
	add.s32 	%r500, %r484, 4162;
	mul.wide.u32 	%rd67, %r500, 4;
	add.s64 	%rd17, %rd51, %rd67;
	add.s32 	%r501, %r489, 4162;
	mul.wide.u32 	%rd68, %r501, 4;
	add.s64 	%rd18, %rd51, %rd68;
	add.s32 	%r502, %r494, 4162;
	mul.wide.u32 	%rd69, %r502, 4;
	add.s64 	%rd19, %rd51, %rd69;
	add.s32 	%r503, %r479, 6243;
	mul.wide.u32 	%rd70, %r503, 4;
	add.s64 	%rd20, %rd51, %rd70;
	add.s32 	%r504, %r484, 6243;
	mul.wide.u32 	%rd71, %r504, 4;
	add.s64 	%rd21, %rd51, %rd71;
	add.s32 	%r505, %r489, 6243;
	mul.wide.u32 	%rd72, %r505, 4;
	add.s64 	%rd22, %rd51, %rd72;
	add.s32 	%r506, %r494, 6243;
	mul.wide.u32 	%rd73, %r506, 4;
	add.s64 	%rd23, %rd51, %rd73;
	mul.wide.u32 	%rd74, %r452, 4;
	add.s64 	%rd24, %rd51, %rd74;
	mul.wide.u32 	%rd75, %r450, 4;
	add.s64 	%rd25, %rd51, %rd75;
	mul.wide.u32 	%rd76, %r448, 4;
	add.s64 	%rd26, %rd51, %rd76;
	mul.wide.u32 	%rd77, %r446, 4;
	add.s64 	%rd27, %rd51, %rd77;
	setp.eq.s32 	%p200, %r53, 0;
	mov.u16 	%rs1182, 25600;
	mov.u16 	%rs1078, 21504;
	mov.u16 	%rs1190, 18432;
	mov.u32 	%r8011, %r7989;
	mov.u32 	%r8012, %r7989;
	mov.u32 	%r8013, %r7989;
	mov.u32 	%r8014, %r7989;
	mov.u32 	%r8015, %r7989;
	mov.u32 	%r8016, %r7989;
	mov.u32 	%r8017, %r7989;
	mov.u32 	%r8018, %r7989;
	mov.u32 	%r8019, %r7989;
	mov.u32 	%r8020, %r7989;
	mov.u32 	%r8021, %r7989;
	mov.u32 	%r8022, %r7989;
	mov.u32 	%r73, %r7989;
	bra.uni 	$L__BB0_83;
$L__BB0_91:                             // %pass16445
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r7983, %r7990, %r60;
	or.b32  	%r7984, %r7983, 196608;
	cvt.s64.s32 	%rd131, %r7984;
	add.s64 	%rd132, %rd131, %rd7;
	shr.u64 	%rd133, %rd132, 39;
	add.s64 	%rd134, %rd132, %rd133;
	shr.s64 	%rd135, %rd134, 25;
	setp.lt.s64 	%p228, %rd132, 0;
	and.b64  	%rd136, %rd134, -33554432;
	setp.ne.s64 	%p229, %rd136, %rd132;
	and.pred  	%p230, %p228, %p229;
	selp.u64 	%rd137, 1, 0, %p230;
	sub.s64 	%rd138, %rd137, %rd135;
	shl.b64 	%rd139, %rd138, 25;
	add.s64 	%rd140, %rd139, %rd132;
	shl.b64 	%rd141, %rd140, 2;
	add.s64 	%rd142, %rd3, %rd141;
	st.global.v4.u32 	[%rd142], {%r161, %r163, %r162, %r164};
	setp.ne.s32 	%p231, %r73, 32512;
	add.s32 	%r73, %r73, 256;
	add.s32 	%r7985, %r73, %r166;
	setp.lt.s32 	%p232, %r7985, %r167;
	and.pred  	%p233, %p231, %p232;
	@%p233 bra 	$L__BB0_83;
	bra.uni 	$L__BB0_92;
$L__BB0_83:                             // %L1447
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_84 Depth 2
	or.b32  	%r572, %r73, %r105;
	and.b32  	%r573, %r572, 32544;
	or.b32  	%r574, %r50, %r573;
	add.s32 	%r575, %r574, %r166;
	mad.lo.s32 	%r576, %r575, 12288, %r52;
	mul.hi.s32 	%r577, %r576, 715827883;
	shr.u32 	%r578, %r577, 31;
	shr.s32 	%r579, %r577, 26;
	add.s32 	%r580, %r579, %r578;
	setp.lt.s32 	%p201, %r576, 0;
	mul.lo.s32 	%r581, %r580, 402653184;
	setp.ne.s32 	%p202, %r581, %r576;
	and.pred  	%p203, %p201, %p202;
	selp.s32 	%r582, -1, 0, %p203;
	add.s32 	%r583, %r580, %r582;
	mad.lo.s32 	%r584, %r583, -402653184, %r576;
	mul.wide.s32 	%rd78, %r584, 4;
	add.s64 	%rd79, %rd2, %rd78;
	ld.global.v4.u32 	{%r585, %r586, %r587, %r588}, [%rd79];
	or.b32  	%r589, %r574, 64;
	add.s32 	%r590, %r589, %r166;
	mad.lo.s32 	%r591, %r590, 12288, %r52;
	mul.hi.s32 	%r592, %r591, 715827883;
	shr.u32 	%r593, %r592, 31;
	shr.s32 	%r594, %r592, 26;
	add.s32 	%r595, %r594, %r593;
	setp.lt.s32 	%p204, %r591, 0;
	mul.lo.s32 	%r596, %r595, 402653184;
	setp.ne.s32 	%p205, %r596, %r591;
	and.pred  	%p206, %p204, %p205;
	selp.s32 	%r597, -1, 0, %p206;
	add.s32 	%r598, %r595, %r597;
	mad.lo.s32 	%r599, %r598, -402653184, %r591;
	mul.wide.s32 	%rd80, %r599, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r600, %r601, %r602, %r603}, [%rd81];
	or.b32  	%r604, %r574, 128;
	add.s32 	%r605, %r604, %r166;
	mad.lo.s32 	%r606, %r605, 12288, %r52;
	mul.hi.s32 	%r607, %r606, 715827883;
	shr.u32 	%r608, %r607, 31;
	shr.s32 	%r609, %r607, 26;
	add.s32 	%r610, %r609, %r608;
	setp.lt.s32 	%p207, %r606, 0;
	mul.lo.s32 	%r611, %r610, 402653184;
	setp.ne.s32 	%p208, %r611, %r606;
	and.pred  	%p209, %p207, %p208;
	selp.s32 	%r612, -1, 0, %p209;
	add.s32 	%r613, %r610, %r612;
	mad.lo.s32 	%r614, %r613, -402653184, %r606;
	mul.wide.s32 	%rd82, %r614, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r615, %r616, %r617, %r618}, [%rd83];
	or.b32  	%r619, %r574, 192;
	add.s32 	%r620, %r619, %r166;
	mad.lo.s32 	%r621, %r620, 12288, %r52;
	mul.hi.s32 	%r622, %r621, 715827883;
	shr.u32 	%r623, %r622, 31;
	shr.s32 	%r624, %r622, 26;
	add.s32 	%r625, %r624, %r623;
	setp.lt.s32 	%p210, %r621, 0;
	mul.lo.s32 	%r626, %r625, 402653184;
	setp.ne.s32 	%p211, %r626, %r621;
	and.pred  	%p212, %p210, %p211;
	selp.s32 	%r627, -1, 0, %p212;
	add.s32 	%r628, %r625, %r627;
	mad.lo.s32 	%r629, %r628, -402653184, %r621;
	mul.wide.s32 	%rd84, %r629, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r630, %r631, %r632, %r633}, [%rd85];
	selp.b32 	%r634, %r587, %r585, %p200;
	shfl.sync.bfly.b32	%r635, %r634, 8, 31, -1;
	selp.b32 	%r508, %r585, %r635, %p200;
	selp.b32 	%r509, %r635, %r587, %p200;
	selp.b32 	%r636, %r588, %r586, %p200;
	shfl.sync.bfly.b32	%r637, %r636, 8, 31, -1;
	selp.b32 	%r516, %r586, %r637, %p200;
	selp.b32 	%r517, %r637, %r588, %p200;
	selp.b32 	%r638, %r602, %r600, %p200;
	shfl.sync.bfly.b32	%r639, %r638, 8, 31, -1;
	selp.b32 	%r524, %r600, %r639, %p200;
	selp.b32 	%r525, %r639, %r602, %p200;
	selp.b32 	%r640, %r603, %r601, %p200;
	shfl.sync.bfly.b32	%r641, %r640, 8, 31, -1;
	selp.b32 	%r532, %r601, %r641, %p200;
	selp.b32 	%r533, %r641, %r603, %p200;
	selp.b32 	%r642, %r617, %r615, %p200;
	shfl.sync.bfly.b32	%r643, %r642, 8, 31, -1;
	selp.b32 	%r540, %r615, %r643, %p200;
	selp.b32 	%r541, %r643, %r617, %p200;
	selp.b32 	%r644, %r618, %r616, %p200;
	shfl.sync.bfly.b32	%r645, %r644, 8, 31, -1;
	selp.b32 	%r548, %r616, %r645, %p200;
	selp.b32 	%r549, %r645, %r618, %p200;
	selp.b32 	%r646, %r632, %r630, %p200;
	shfl.sync.bfly.b32	%r647, %r646, 8, 31, -1;
	selp.b32 	%r556, %r630, %r647, %p200;
	selp.b32 	%r557, %r647, %r632, %p200;
	selp.b32 	%r648, %r633, %r631, %p200;
	shfl.sync.bfly.b32	%r649, %r648, 8, 31, -1;
	selp.b32 	%r564, %r631, %r649, %p200;
	selp.b32 	%r565, %r649, %r633, %p200;
	mov.u32 	%r566, 21520;
	// begin inline asm
	prmt.b32 %r507, %r508, %r509, %r566;
	// end inline asm
	mov.u32 	%r570, 30258;
	// begin inline asm
	prmt.b32 %r511, %r508, %r509, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r515, %r516, %r517, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r519, %r516, %r517, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r523, %r524, %r525, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r527, %r524, %r525, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r531, %r532, %r533, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r535, %r532, %r533, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r539, %r540, %r541, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r543, %r540, %r541, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r547, %r548, %r549, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r551, %r548, %r549, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r555, %r556, %r557, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r559, %r556, %r557, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r563, %r564, %r565, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r567, %r564, %r565, %r570;
	// end inline asm
	st.shared.u32 	[%rd8], %r507;
	st.shared.u32 	[%rd9], %r511;
	st.shared.u32 	[%rd10], %r515;
	st.shared.u32 	[%rd11], %r519;
	st.shared.u32 	[%rd12], %r523;
	st.shared.u32 	[%rd13], %r527;
	st.shared.u32 	[%rd14], %r531;
	st.shared.u32 	[%rd15], %r535;
	st.shared.u32 	[%rd16], %r539;
	st.shared.u32 	[%rd17], %r543;
	st.shared.u32 	[%rd18], %r547;
	st.shared.u32 	[%rd19], %r551;
	st.shared.u32 	[%rd20], %r555;
	st.shared.u32 	[%rd21], %r559;
	st.shared.u32 	[%rd22], %r563;
	st.shared.u32 	[%rd23], %r567;
	bar.sync 	0;
	or.b32  	%r650, %r73, %r191;
	or.b32  	%r651, %r650, %r55;
	or.b32  	%r74, %r651, %r116;
	shr.u32 	%r8010, %r74, 6;
	mov.u64 	%rd147, %rd27;
	mov.u64 	%rd148, %rd26;
	mov.u64 	%rd149, %rd25;
	mov.u64 	%rd150, %rd24;
	mov.u32 	%r8023, %r7989;
$L__BB0_84:                             // %L11303
                                        //   Parent Loop BB0_83 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7836, %r74, %r8023;
	and.b32  	%r7837, %r7836, 1;
	neg.s32 	%r7838, %r7837;
	and.b32  	%r7839, %r7838, 1040;
	bfe.s32 	%r7840, %r7836, 1, 1;
	and.b32  	%r7841, %r7840, 520;
	bfe.s32 	%r7842, %r7836, 2, 1;
	and.b32  	%r7843, %r7842, 260;
	bfe.s32 	%r7844, %r7836, 4, 1;
	and.b32  	%r7845, %r7844, 65;
	bfe.s32 	%r7846, %r7836, 3, 1;
	and.b32  	%r7847, %r7846, 130;
	and.b32  	%r7848, %r8010, 3;
	mul.lo.s32 	%r7849, %r7848, 2081;
	or.b32  	%r7850, %r7839, %r56;
	or.b32  	%r7851, %r7841, %r57;
	or.b32  	%r7852, %r7851, %r7850;
	add.s32 	%r7853, %r7852, %r7843;
	add.s32 	%r7854, %r7853, %r7845;
	add.s32 	%r7855, %r7854, %r7847;
	add.s32 	%r7856, %r7855, %r7849;
	mul.wide.u32 	%rd86, %r7856, 4;
	add.s64 	%rd88, %rd51, %rd86;
	ld.shared.u32 	%r7857, [%rd88];
	or.b32  	%r7858, %r58, %r7839;
	add.s32 	%r7859, %r7851, %r7858;
	add.s32 	%r7860, %r7859, %r7843;
	add.s32 	%r7861, %r7860, %r7845;
	add.s32 	%r7862, %r7861, %r7847;
	add.s32 	%r7863, %r7862, %r7849;
	mul.wide.u32 	%rd89, %r7863, 4;
	add.s64 	%rd90, %rd51, %rd89;
	ld.shared.u32 	%r7864, [%rd90];
	add.s32 	%r7865, %r7839, 16;
	or.b32  	%r7866, %r7865, %r56;
	or.b32  	%r7867, %r7851, %r7843;
	or.b32  	%r7868, %r7867, %r7845;
	or.b32  	%r7869, %r7868, %r7847;
	add.s32 	%r7870, %r7869, %r7849;
	add.s32 	%r7871, %r7870, %r7866;
	mul.wide.u32 	%rd91, %r7871, 4;
	add.s64 	%rd92, %rd51, %rd91;
	ld.shared.u32 	%r7872, [%rd92];
	or.b32  	%r7873, %r58, %r7865;
	add.s32 	%r7874, %r7870, %r7873;
	mul.wide.u32 	%rd93, %r7874, 4;
	add.s64 	%rd94, %rd51, %rd93;
	ld.shared.u32 	%r7875, [%rd94];
	// begin inline asm
	mov.b32 %r657, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r668, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r656, %r7857, -2004318072;
	mov.u32 	%r655, 983055;
	// begin inline asm
	lop3.b32 %r654, %r655, %r656, %r657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r658, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r659, %r657, %r658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r662, %r654, %r659;
	// end inline asm
	mov.u32 	%r666, 15728880;
	// begin inline asm
	lop3.b32 %r665, %r666, %r656, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r669, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r670, %r668, %r669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r673, %r665, %r670;
	// end inline asm
	shr.u32 	%r678, %r656, 8;
	// begin inline asm
	lop3.b32 %r676, %r655, %r678, %r657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r680, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r681, %r657, %r680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r684, %r676, %r681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r687, %r666, %r678, %r668, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r691, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r692, %r668, %r691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r695, %r687, %r692;
	// end inline asm
	// begin inline asm
	mov.b32 %r703, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r714, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r702, %r7864, -2004318072;
	// begin inline asm
	lop3.b32 %r700, %r655, %r702, %r703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r704, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r705, %r703, %r704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r708, %r700, %r705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r711, %r666, %r702, %r714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r715, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r716, %r714, %r715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r719, %r711, %r716;
	// end inline asm
	shr.u32 	%r724, %r702, 8;
	// begin inline asm
	lop3.b32 %r722, %r655, %r724, %r703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r726, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r727, %r703, %r726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r730, %r722, %r727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r733, %r666, %r724, %r714, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r737, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r738, %r714, %r737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r741, %r733, %r738;
	// end inline asm
	// begin inline asm
	mov.b32 %r749, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r760, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r748, %r7872, -2004318072;
	// begin inline asm
	lop3.b32 %r746, %r655, %r748, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r750, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r751, %r749, %r750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r754, %r746, %r751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r757, %r666, %r748, %r760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r761, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r762, %r760, %r761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r765, %r757, %r762;
	// end inline asm
	shr.u32 	%r770, %r748, 8;
	// begin inline asm
	lop3.b32 %r768, %r655, %r770, %r749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r772, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r773, %r749, %r772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r776, %r768, %r773;
	// end inline asm
	// begin inline asm
	lop3.b32 %r779, %r666, %r770, %r760, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r783, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r784, %r760, %r783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r787, %r779, %r784;
	// end inline asm
	// begin inline asm
	mov.b32 %r795, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r806, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r794, %r7875, -2004318072;
	// begin inline asm
	lop3.b32 %r792, %r655, %r794, %r795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r796, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r797, %r795, %r796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r800, %r792, %r797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r803, %r666, %r794, %r806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r807, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r808, %r806, %r807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r811, %r803, %r808;
	// end inline asm
	shr.u32 	%r816, %r794, 8;
	// begin inline asm
	lop3.b32 %r814, %r655, %r816, %r795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r818, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r819, %r795, %r818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r822, %r814, %r819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r825, %r666, %r816, %r806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r829, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r830, %r806, %r829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r833, %r825, %r830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r836, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r838, %r836, %r662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r841, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r843, %r841, %r673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r846, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r848, %r846, %r684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r851, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r853, %r851, %r695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r856, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r858, %r856, %r708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r861, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r863, %r861, %r719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r866, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r868, %r866, %r730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r871, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r873, %r871, %r741;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r876, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r878, %r876, %r754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r881, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r883, %r881, %r765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r886, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r888, %r886, %r776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r891, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r893, %r891, %r787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r896, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r898, %r896, %r800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r901, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r903, %r901, %r811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r906, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r908, %r906, %r822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r911, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r913, %r911, %r833;
	// end inline asm
	// begin inline asm
	mov.b32 %r921, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r932, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r920, %r8011, -2004318072;
	// begin inline asm
	lop3.b32 %r918, %r655, %r920, %r921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r923, %r921, %r922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r926, %r918, %r923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r929, %r666, %r920, %r932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r933, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r934, %r932, %r933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r937, %r929, %r934;
	// end inline asm
	shr.u32 	%r942, %r920, 8;
	// begin inline asm
	lop3.b32 %r940, %r655, %r942, %r921, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r944, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r945, %r921, %r944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r948, %r940, %r945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r951, %r666, %r942, %r932, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r955, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r956, %r932, %r955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r959, %r951, %r956;
	// end inline asm
	// begin inline asm
	mov.b32 %r967, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r978, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r966, %r8012, -2004318072;
	// begin inline asm
	lop3.b32 %r964, %r655, %r966, %r967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r969, %r967, %r968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r972, %r964, %r969;
	// end inline asm
	// begin inline asm
	lop3.b32 %r975, %r666, %r966, %r978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r979, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r980, %r978, %r979;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r983, %r975, %r980;
	// end inline asm
	shr.u32 	%r988, %r966, 8;
	// begin inline asm
	lop3.b32 %r986, %r655, %r988, %r967, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r990, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r991, %r967, %r990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r994, %r986, %r991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r997, %r666, %r988, %r978, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1001, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1002, %r978, %r1001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1005, %r997, %r1002;
	// end inline asm
	// begin inline asm
	mov.b32 %r1013, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1024, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1012, %r8017, -2004318072;
	// begin inline asm
	lop3.b32 %r1010, %r655, %r1012, %r1013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1015, %r1013, %r1014;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1018, %r1010, %r1015;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1021, %r666, %r1012, %r1024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1025, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1026, %r1024, %r1025;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1029, %r1021, %r1026;
	// end inline asm
	shr.u32 	%r1034, %r1012, 8;
	// begin inline asm
	lop3.b32 %r1032, %r655, %r1034, %r1013, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1036, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1037, %r1013, %r1036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1040, %r1032, %r1037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1043, %r666, %r1034, %r1024, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1047, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1048, %r1024, %r1047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1051, %r1043, %r1048;
	// end inline asm
	// begin inline asm
	mov.b32 %r1059, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1070, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1058, %r8018, -2004318072;
	// begin inline asm
	lop3.b32 %r1056, %r655, %r1058, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1061, %r1059, %r1060;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1064, %r1056, %r1061;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1067, %r666, %r1058, %r1070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1071, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1072, %r1070, %r1071;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1075, %r1067, %r1072;
	// end inline asm
	shr.u32 	%r1080, %r1058, 8;
	// begin inline asm
	lop3.b32 %r1078, %r655, %r1080, %r1059, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1082, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1083, %r1059, %r1082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1086, %r1078, %r1083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1089, %r666, %r1080, %r1070, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1093, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1094, %r1070, %r1093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1097, %r1089, %r1094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1100, %r209, %r926, %r838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1104, %r209, %r937, %r843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1108, %r209, %r948, %r848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1112, %r209, %r959, %r853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1116, %r209, %r972, %r858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1120, %r209, %r983, %r863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1124, %r209, %r994, %r868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1128, %r209, %r1005, %r873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1132, %r209, %r1018, %r878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1136, %r209, %r1029, %r883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1140, %r209, %r1040, %r888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1144, %r209, %r1051, %r893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1148, %r209, %r1064, %r898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1152, %r209, %r1075, %r903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1156, %r209, %r1086, %r908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1160, %r209, %r1097, %r913;
	// end inline asm
	// begin inline asm
	mov.b32 %r1169, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1180, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1168, %r8013, -2004318072;
	// begin inline asm
	lop3.b32 %r1166, %r655, %r1168, %r1169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1171, %r1169, %r1170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1174, %r1166, %r1171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1177, %r666, %r1168, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1181, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1182, %r1180, %r1181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1185, %r1177, %r1182;
	// end inline asm
	shr.u32 	%r1190, %r1168, 8;
	// begin inline asm
	lop3.b32 %r1188, %r655, %r1190, %r1169, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1192, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1193, %r1169, %r1192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1196, %r1188, %r1193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1199, %r666, %r1190, %r1180, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1203, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1204, %r1180, %r1203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1207, %r1199, %r1204;
	// end inline asm
	// begin inline asm
	mov.b32 %r1215, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1226, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1214, %r8014, -2004318072;
	// begin inline asm
	lop3.b32 %r1212, %r655, %r1214, %r1215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1216, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1217, %r1215, %r1216;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1220, %r1212, %r1217;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1223, %r666, %r1214, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1227, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1228, %r1226, %r1227;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1231, %r1223, %r1228;
	// end inline asm
	shr.u32 	%r1236, %r1214, 8;
	// begin inline asm
	lop3.b32 %r1234, %r655, %r1236, %r1215, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1238, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1239, %r1215, %r1238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1242, %r1234, %r1239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1245, %r666, %r1236, %r1226, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1249, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1250, %r1226, %r1249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1253, %r1245, %r1250;
	// end inline asm
	// begin inline asm
	mov.b32 %r1261, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1272, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1260, %r8019, -2004318072;
	// begin inline asm
	lop3.b32 %r1258, %r655, %r1260, %r1261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1262, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1263, %r1261, %r1262;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1266, %r1258, %r1263;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1269, %r666, %r1260, %r1272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1273, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1274, %r1272, %r1273;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1277, %r1269, %r1274;
	// end inline asm
	shr.u32 	%r1282, %r1260, 8;
	// begin inline asm
	lop3.b32 %r1280, %r655, %r1282, %r1261, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1284, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1285, %r1261, %r1284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1288, %r1280, %r1285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1291, %r666, %r1282, %r1272, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1295, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1296, %r1272, %r1295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1299, %r1291, %r1296;
	// end inline asm
	// begin inline asm
	mov.b32 %r1307, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1318, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1306, %r8020, -2004318072;
	// begin inline asm
	lop3.b32 %r1304, %r655, %r1306, %r1307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1308, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1309, %r1307, %r1308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1312, %r1304, %r1309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1315, %r666, %r1306, %r1318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1319, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1320, %r1318, %r1319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1323, %r1315, %r1320;
	// end inline asm
	shr.u32 	%r1328, %r1306, 8;
	// begin inline asm
	lop3.b32 %r1326, %r655, %r1328, %r1307, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1331, %r1307, %r1330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1334, %r1326, %r1331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1337, %r666, %r1328, %r1318, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1342, %r1318, %r1341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1345, %r1337, %r1342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1348, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1350, %r1348, %r1174, %r1100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1356, %r1354, %r1185, %r1104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1360, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1362, %r1360, %r1196, %r1108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1368, %r1366, %r1207, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1372, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1374, %r1372, %r1220, %r1116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1378, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1380, %r1378, %r1231, %r1120;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1384, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1386, %r1384, %r1242, %r1124;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1390, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1392, %r1390, %r1253, %r1128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1396, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1398, %r1396, %r1266, %r1132;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1402, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1404, %r1402, %r1277, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1408, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1410, %r1408, %r1288, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1414, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1416, %r1414, %r1299, %r1144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1420, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1422, %r1420, %r1312, %r1148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1426, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1428, %r1426, %r1323, %r1152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1432, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1434, %r1432, %r1334, %r1156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1438, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1440, %r1438, %r1345, %r1160;
	// end inline asm
	// begin inline asm
	mov.b32 %r1449, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1460, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1448, %r8015, -2004318072;
	// begin inline asm
	lop3.b32 %r1446, %r655, %r1448, %r1449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1451, %r1449, %r1450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1454, %r1446, %r1451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1457, %r666, %r1448, %r1460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1461, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1462, %r1460, %r1461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1465, %r1457, %r1462;
	// end inline asm
	shr.u32 	%r1470, %r1448, 8;
	// begin inline asm
	lop3.b32 %r1468, %r655, %r1470, %r1449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1472, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1473, %r1449, %r1472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1476, %r1468, %r1473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1479, %r666, %r1470, %r1460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1483, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1484, %r1460, %r1483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1487, %r1479, %r1484;
	// end inline asm
	// begin inline asm
	mov.b32 %r1495, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1506, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1494, %r8016, -2004318072;
	// begin inline asm
	lop3.b32 %r1492, %r655, %r1494, %r1495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1497, %r1495, %r1496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1500, %r1492, %r1497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1503, %r666, %r1494, %r1506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1507, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1508, %r1506, %r1507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1511, %r1503, %r1508;
	// end inline asm
	shr.u32 	%r1516, %r1494, 8;
	// begin inline asm
	lop3.b32 %r1514, %r655, %r1516, %r1495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1518, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1519, %r1495, %r1518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1522, %r1514, %r1519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1525, %r666, %r1516, %r1506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1529, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1530, %r1506, %r1529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1533, %r1525, %r1530;
	// end inline asm
	// begin inline asm
	mov.b32 %r1541, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1552, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1540, %r8021, -2004318072;
	// begin inline asm
	lop3.b32 %r1538, %r655, %r1540, %r1541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1543, %r1541, %r1542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1546, %r1538, %r1543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1549, %r666, %r1540, %r1552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1553, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1554, %r1552, %r1553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1557, %r1549, %r1554;
	// end inline asm
	shr.u32 	%r1562, %r1540, 8;
	// begin inline asm
	lop3.b32 %r1560, %r655, %r1562, %r1541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1564, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1565, %r1541, %r1564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1568, %r1560, %r1565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1571, %r666, %r1562, %r1552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1575, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1576, %r1552, %r1575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1579, %r1571, %r1576;
	// end inline asm
	// begin inline asm
	mov.b32 %r1587, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r1598, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r1586, %r8022, -2004318072;
	// begin inline asm
	lop3.b32 %r1584, %r655, %r1586, %r1587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1589, %r1587, %r1588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1592, %r1584, %r1589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1595, %r666, %r1586, %r1598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1599, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1600, %r1598, %r1599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1603, %r1595, %r1600;
	// end inline asm
	shr.u32 	%r1608, %r1586, 8;
	// begin inline asm
	lop3.b32 %r1606, %r655, %r1608, %r1587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1610, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1611, %r1587, %r1610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1614, %r1606, %r1611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1617, %r666, %r1608, %r1598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1621, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1622, %r1598, %r1621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1625, %r1617, %r1622;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1699, %r245, %r1454, %r1350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1696, %r245, %r1465, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r245, %r1476, %r1362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1705, %r245, %r1487, %r1368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r245, %r1500, %r1374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r245, %r1511, %r1380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r245, %r1522, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1723, %r245, %r1533, %r1392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1735, %r245, %r1546, %r1398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r245, %r1557, %r1404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r245, %r1568, %r1410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1741, %r245, %r1579, %r1416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1753, %r245, %r1592, %r1422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r245, %r1603, %r1428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r245, %r1614, %r1434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r245, %r1625, %r1440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1692, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1694, %r1692, %r1696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1697, %r266, %r1699, %r1694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1701, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1703, %r1701, %r1705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1706, %r266, %r1708, %r1703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1710, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1712, %r1710, %r1714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1715, %r266, %r1717, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1719, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1721, %r1719, %r1723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r266, %r1726, %r1721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1728, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1730, %r1728, %r1732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1733, %r266, %r1735, %r1730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1737, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1739, %r1737, %r1741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r266, %r1744, %r1739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1746, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1748, %r1746, %r1750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1751, %r266, %r1753, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1755, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1757, %r1755, %r1759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r266, %r1762, %r1757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1764, %r269, %r1699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r266, %r1696, %r1764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1771, %r269, %r1708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r266, %r1705, %r1771;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1778, %r269, %r1717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1781, %r266, %r1714, %r1778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1785, %r269, %r1726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r266, %r1723, %r1785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1792, %r269, %r1735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r266, %r1732, %r1792;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1799, %r269, %r1744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r266, %r1741, %r1799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1806, %r269, %r1753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1809, %r266, %r1750, %r1806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1813, %r269, %r1762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r266, %r1759, %r1813;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1907, %r1904}, {%r325, %r331, %r328, %r334}, {%r1697, %r1767}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1916, %r1913}, {%r325, %r331, %r328, %r334}, {%r1706, %r1774}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1925, %r1922}, {%r325, %r331, %r328, %r334}, {%r1715, %r1781}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1934, %r1931}, {%r325, %r331, %r328, %r334}, {%r1724, %r1788}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1943, %r1940}, {%r325, %r331, %r328, %r334}, {%r1733, %r1795}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1952, %r1949}, {%r325, %r331, %r328, %r334}, {%r1742, %r1802}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1961, %r1958}, {%r325, %r331, %r328, %r334}, {%r1751, %r1809}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1970, %r1967}, {%r325, %r331, %r328, %r334}, {%r1760, %r1816}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1900, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1902, %r1900, %r1904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1905, %r369, %r1907, %r1902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1909, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1911, %r1909, %r1913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1914, %r369, %r1916, %r1911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1918, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1920, %r1918, %r1922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1923, %r369, %r1925, %r1920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1927, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1929, %r1927, %r1931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1932, %r369, %r1934, %r1929;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1936, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1938, %r1936, %r1940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1941, %r369, %r1943, %r1938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1945, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1947, %r1945, %r1949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1950, %r369, %r1952, %r1947;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1954, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1956, %r1954, %r1958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1959, %r369, %r1961, %r1956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1963, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1965, %r1963, %r1967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1968, %r369, %r1970, %r1965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1972, %r372, %r1907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1975, %r369, %r1904, %r1972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1979, %r372, %r1916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1982, %r369, %r1913, %r1979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1986, %r372, %r1925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1989, %r369, %r1922, %r1986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1993, %r372, %r1934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1996, %r369, %r1931, %r1993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2000, %r372, %r1943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2003, %r369, %r1940, %r2000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2007, %r372, %r1952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2010, %r369, %r1949, %r2007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2014, %r372, %r1961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2017, %r369, %r1958, %r2014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2021, %r372, %r1970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2024, %r369, %r1967, %r2021;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2028, %r2029}, {%r403, %r409, %r406, %r412}, {%r1905, %r1975}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2038, %r2039}, {%r403, %r409, %r406, %r412}, {%r1914, %r1982}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2048, %r2049}, {%r403, %r409, %r406, %r412}, {%r1923, %r1989}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2058, %r2059}, {%r403, %r409, %r406, %r412}, {%r1932, %r1996}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2068, %r2069}, {%r403, %r409, %r406, %r412}, {%r1941, %r2003}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2078, %r2079}, {%r403, %r409, %r406, %r412}, {%r1950, %r2010}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2088, %r2089}, {%r403, %r409, %r406, %r412}, {%r1959, %r2017}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2098, %r2099}, {%r403, %r409, %r406, %r412}, {%r1968, %r2024}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2108, %r111, %r2028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2111, %r111, %r2029;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2114, %r111, %r2038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2117, %r111, %r2039;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2120, %r111, %r2048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2123, %r111, %r2049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2126, %r111, %r2058;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2129, %r111, %r2059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2132, %r111, %r2068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2135, %r111, %r2069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2138, %r111, %r2078;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2141, %r111, %r2079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2144, %r111, %r2088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2147, %r111, %r2089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2150, %r111, %r2098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2153, %r111, %r2099;
	// end inline asm
	mov.u16 	%rs199, -14592;
	// begin inline asm
	mov.b32 %r2156, {%rs199, %rs199};
	// end inline asm
	mov.u16 	%rs201, 18176;
	// begin inline asm
	mov.b32 %r2157, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2158, %r2108, %r2156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2161, %r2158, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2164, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2166, %r2111, %r2164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2169, %r2166, %r2165;
	// end inline asm
	// begin inline asm
	mov.b32 %r2172, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2174, %r2114, %r2172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2177, %r2174, %r2173;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2182, %r2117, %r2180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2185, %r2182, %r2181;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2190, %r2120, %r2188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2193, %r2190, %r2189;
	// end inline asm
	// begin inline asm
	mov.b32 %r2196, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2198, %r2123, %r2196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2201, %r2198, %r2197;
	// end inline asm
	// begin inline asm
	mov.b32 %r2204, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2206, %r2126, %r2204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2209, %r2206, %r2205;
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2214, %r2129, %r2212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2217, %r2214, %r2213;
	// end inline asm
	// begin inline asm
	mov.b32 %r2220, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2222, %r2132, %r2220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2225, %r2222, %r2221;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2229, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2230, %r2135, %r2228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2233, %r2230, %r2229;
	// end inline asm
	// begin inline asm
	mov.b32 %r2236, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2238, %r2138, %r2236;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2241, %r2238, %r2237;
	// end inline asm
	// begin inline asm
	mov.b32 %r2244, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2245, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2246, %r2141, %r2244;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2249, %r2246, %r2245;
	// end inline asm
	// begin inline asm
	mov.b32 %r2252, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2253, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2254, %r2144, %r2252;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2257, %r2254, %r2253;
	// end inline asm
	// begin inline asm
	mov.b32 %r2260, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2261, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2262, %r2147, %r2260;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2265, %r2262, %r2261;
	// end inline asm
	// begin inline asm
	mov.b32 %r2268, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2270, %r2150, %r2268;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2273, %r2270, %r2269;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r2277, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2278, %r2153, %r2276;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2281, %r2278, %r2277;
	// end inline asm
	// begin inline asm
	mov.b32 %r2287, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2285, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2286, %r2287, %r2285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2289, %r2161, %r2286;
	// end inline asm
	// begin inline asm
	mov.b32 %r2292, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2293, %r2287, %r2292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2296, %r2169, %r2293;
	// end inline asm
	// begin inline asm
	mov.b32 %r2299, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2300, %r2287, %r2299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2303, %r2177, %r2300;
	// end inline asm
	// begin inline asm
	mov.b32 %r2306, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2287, %r2306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2310, %r2185, %r2307;
	// end inline asm
	mov.u32 	%r2316, 25152;
	// begin inline asm
	prmt.b32 %r2313, %r2289, %r2303, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2317, %r2296, %r2310, %r2316;
	// end inline asm
	shl.b32 	%r2324, %r2317, 4;
	mov.u32 	%r2322, 252645135;
	// begin inline asm
	lop3.b32 %r2321, %r2322, %r2313, %r2324, 202;
	// end inline asm
	xor.b32  	%r7876, %r2321, -2004318072;
	// begin inline asm
	mov.b32 %r2328, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2326, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2327, %r2328, %r2326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2330, %r2193, %r2327;
	// end inline asm
	// begin inline asm
	mov.b32 %r2333, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2334, %r2328, %r2333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2337, %r2201, %r2334;
	// end inline asm
	// begin inline asm
	mov.b32 %r2340, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2341, %r2328, %r2340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2344, %r2209, %r2341;
	// end inline asm
	// begin inline asm
	mov.b32 %r2347, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2348, %r2328, %r2347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2351, %r2217, %r2348;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2354, %r2330, %r2344, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2358, %r2337, %r2351, %r2316;
	// end inline asm
	shl.b32 	%r2365, %r2358, 4;
	// begin inline asm
	lop3.b32 %r2362, %r2322, %r2354, %r2365, 202;
	// end inline asm
	xor.b32  	%r7877, %r2362, -2004318072;
	// begin inline asm
	mov.b32 %r2369, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2367, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2368, %r2369, %r2367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2371, %r2225, %r2368;
	// end inline asm
	// begin inline asm
	mov.b32 %r2374, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2375, %r2369, %r2374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2378, %r2233, %r2375;
	// end inline asm
	// begin inline asm
	mov.b32 %r2381, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2382, %r2369, %r2381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2385, %r2241, %r2382;
	// end inline asm
	// begin inline asm
	mov.b32 %r2388, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2389, %r2369, %r2388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2392, %r2249, %r2389;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2395, %r2371, %r2385, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2399, %r2378, %r2392, %r2316;
	// end inline asm
	shl.b32 	%r2406, %r2399, 4;
	// begin inline asm
	lop3.b32 %r2403, %r2322, %r2395, %r2406, 202;
	// end inline asm
	xor.b32  	%r7878, %r2403, -2004318072;
	// begin inline asm
	mov.b32 %r2410, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2408, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2409, %r2410, %r2408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2412, %r2257, %r2409;
	// end inline asm
	// begin inline asm
	mov.b32 %r2415, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2416, %r2410, %r2415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2419, %r2265, %r2416;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2410, %r2422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2426, %r2273, %r2423;
	// end inline asm
	// begin inline asm
	mov.b32 %r2429, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2430, %r2410, %r2429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2433, %r2281, %r2430;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2436, %r2412, %r2426, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2440, %r2419, %r2433, %r2316;
	// end inline asm
	shl.b32 	%r2447, %r2440, 4;
	// begin inline asm
	lop3.b32 %r2444, %r2322, %r2436, %r2447, 202;
	// end inline asm
	xor.b32  	%r7879, %r2444, -2004318072;
	st.shared.u32 	[%rd147], %r7876;
	st.shared.u32 	[%rd148], %r7877;
	st.shared.u32 	[%rd149], %r7878;
	st.shared.u32 	[%rd150], %r7879;
	ld.shared.u32 	%r8011, [%rd88];
	ld.shared.u32 	%r8012, [%rd90];
	ld.shared.u32 	%r8017, [%rd92];
	ld.shared.u32 	%r8018, [%rd94];
	// begin inline asm
	mov.b32 %r2453, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2452, %r8011, -2004318072;
	// begin inline asm
	lop3.b32 %r2450, %r655, %r2452, %r2453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2455, %r2453, %r2454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2458, %r2450, %r2455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2461, %r666, %r2452, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2464, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	shr.u32 	%r2474, %r2452, 8;
	// begin inline asm
	lop3.b32 %r2472, %r655, %r2474, %r2453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2476, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2477, %r2453, %r2476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2480, %r2472, %r2477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2483, %r666, %r2474, %r2464, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2487, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2488, %r2464, %r2487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2491, %r2483, %r2488;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2498, %r8012, -2004318072;
	// begin inline asm
	lop3.b32 %r2496, %r655, %r2498, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2499, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2507, %r666, %r2498, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2510, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	shr.u32 	%r2520, %r2498, 8;
	// begin inline asm
	lop3.b32 %r2518, %r655, %r2520, %r2499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2522, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2523, %r2499, %r2522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2526, %r2518, %r2523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2529, %r666, %r2520, %r2510, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2533, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2534, %r2510, %r2533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2537, %r2529, %r2534;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2544, %r8017, -2004318072;
	// begin inline asm
	lop3.b32 %r2542, %r655, %r2544, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2547, %r2545, %r2546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2550, %r2542, %r2547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2553, %r666, %r2544, %r2556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2556, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	shr.u32 	%r2566, %r2544, 8;
	// begin inline asm
	lop3.b32 %r2564, %r655, %r2566, %r2545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2568, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2569, %r2545, %r2568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2572, %r2564, %r2569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2575, %r666, %r2566, %r2556, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2579, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2580, %r2556, %r2579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2583, %r2575, %r2580;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r2590, %r8018, -2004318072;
	// begin inline asm
	lop3.b32 %r2588, %r655, %r2590, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2593, %r2591, %r2592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2596, %r2588, %r2593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2599, %r666, %r2590, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2602, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	shr.u32 	%r2612, %r2590, 8;
	// begin inline asm
	lop3.b32 %r2610, %r655, %r2612, %r2591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2614, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2615, %r2591, %r2614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2618, %r2610, %r2615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2621, %r666, %r2612, %r2602, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2625, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2626, %r2602, %r2625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2629, %r2621, %r2626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2632, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2634, %r2632, %r2458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2637, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2639, %r2637, %r2469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2642, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2644, %r2642, %r2480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2647, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2649, %r2647, %r2491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2652, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2654, %r2652, %r2504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2657, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2659, %r2657, %r2515;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2662, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2664, %r2662, %r2526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2667, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2669, %r2667, %r2537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2672, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2674, %r2672, %r2550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2677, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2679, %r2677, %r2561;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2682, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2684, %r2682, %r2572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2687, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2689, %r2687, %r2583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2692, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2694, %r2692, %r2596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2697, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2699, %r2697, %r2607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2702, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2704, %r2702, %r2618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2707, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2709, %r2707, %r2629;
	// end inline asm
	// begin inline asm
	mov.b32 %r2717, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2714, %r655, %r1168, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2719, %r2717, %r2718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2722, %r2714, %r2719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2725, %r666, %r1168, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2728, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2736, %r655, %r1190, %r2717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2741, %r2717, %r2740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2744, %r2736, %r2741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2747, %r666, %r1190, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2752, %r2728, %r2751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2755, %r2747, %r2752;
	// end inline asm
	// begin inline asm
	mov.b32 %r2763, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2760, %r655, %r1214, %r2763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2764, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2765, %r2763, %r2764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2768, %r2760, %r2765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2771, %r666, %r1214, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2774, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2782, %r655, %r1236, %r2763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2787, %r2763, %r2786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2790, %r2782, %r2787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2793, %r666, %r1236, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2798, %r2774, %r2797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2801, %r2793, %r2798;
	// end inline asm
	// begin inline asm
	mov.b32 %r2809, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2820, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2806, %r655, %r1260, %r2809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2810, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2811, %r2809, %r2810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2814, %r2806, %r2811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2817, %r666, %r1260, %r2820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2821, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2822, %r2820, %r2821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2825, %r2817, %r2822;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2828, %r655, %r1282, %r2809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2832, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2833, %r2809, %r2832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2836, %r2828, %r2833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2839, %r666, %r1282, %r2820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2843, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2844, %r2820, %r2843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2847, %r2839, %r2844;
	// end inline asm
	// begin inline asm
	mov.b32 %r2855, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2866, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2852, %r655, %r1306, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2856, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2857, %r2855, %r2856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2860, %r2852, %r2857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2863, %r666, %r1306, %r2866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2867, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2868, %r2866, %r2867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2871, %r2863, %r2868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2874, %r655, %r1328, %r2855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2878, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2879, %r2855, %r2878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2882, %r2874, %r2879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2885, %r666, %r1328, %r2866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2889, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2890, %r2866, %r2889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2893, %r2885, %r2890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2896, %r209, %r2722, %r2634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2900, %r209, %r2733, %r2639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2904, %r209, %r2744, %r2644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r209, %r2755, %r2649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2912, %r209, %r2768, %r2654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r209, %r2779, %r2659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2920, %r209, %r2790, %r2664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2924, %r209, %r2801, %r2669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r209, %r2814, %r2674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2932, %r209, %r2825, %r2679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2936, %r209, %r2836, %r2684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2940, %r209, %r2847, %r2689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r209, %r2860, %r2694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r209, %r2871, %r2699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r209, %r2882, %r2704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r209, %r2893, %r2709;
	// end inline asm
	// begin inline asm
	mov.b32 %r2965, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r2976, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2962, %r655, %r1448, %r2965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2966, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2967, %r2965, %r2966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2970, %r2962, %r2967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2973, %r666, %r1448, %r2976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2977, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2978, %r2976, %r2977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2981, %r2973, %r2978;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2984, %r655, %r1470, %r2965, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2988, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2989, %r2965, %r2988;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2992, %r2984, %r2989;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2995, %r666, %r1470, %r2976, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2999, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3000, %r2976, %r2999;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3003, %r2995, %r3000;
	// end inline asm
	// begin inline asm
	mov.b32 %r3011, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3022, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3008, %r655, %r1494, %r3011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3012, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3013, %r3011, %r3012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3016, %r3008, %r3013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3019, %r666, %r1494, %r3022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3023, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3024, %r3022, %r3023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3027, %r3019, %r3024;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3030, %r655, %r1516, %r3011, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3034, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3035, %r3011, %r3034;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3038, %r3030, %r3035;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3041, %r666, %r1516, %r3022, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3045, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3046, %r3022, %r3045;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3049, %r3041, %r3046;
	// end inline asm
	// begin inline asm
	mov.b32 %r3057, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3068, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3054, %r655, %r1540, %r3057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3058, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3059, %r3057, %r3058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3062, %r3054, %r3059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3065, %r666, %r1540, %r3068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3069, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3070, %r3068, %r3069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3073, %r3065, %r3070;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3076, %r655, %r1562, %r3057, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3080, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3081, %r3057, %r3080;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3084, %r3076, %r3081;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3087, %r666, %r1562, %r3068, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3091, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3092, %r3068, %r3091;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3095, %r3087, %r3092;
	// end inline asm
	// begin inline asm
	mov.b32 %r3103, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3114, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3100, %r655, %r1586, %r3103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3104, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3105, %r3103, %r3104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3108, %r3100, %r3105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3111, %r666, %r1586, %r3114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3115, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3116, %r3114, %r3115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3119, %r3111, %r3116;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3122, %r655, %r1608, %r3103, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3126, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3127, %r3103, %r3126;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3130, %r3122, %r3127;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3133, %r666, %r1608, %r3114, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3137, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3138, %r3114, %r3137;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3141, %r3133, %r3138;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3144, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r3144, %r2970, %r2896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3150, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3152, %r3150, %r2981, %r2900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3156, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r3156, %r2992, %r2904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3162, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r3162, %r3003, %r2908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3168, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3170, %r3168, %r3016, %r2912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3174, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3176, %r3174, %r3027, %r2916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3180, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3182, %r3180, %r3038, %r2920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3186, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r3186, %r3049, %r2924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3192, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3194, %r3192, %r3062, %r2928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3198, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r3198, %r3073, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3204, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3206, %r3204, %r3084, %r2936;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3210, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3212, %r3210, %r3095, %r2940;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3216, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3218, %r3216, %r3108, %r2944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3222, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3224, %r3222, %r3119, %r2948;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3228, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3230, %r3228, %r3130, %r2952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3234, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3236, %r3234, %r3141, %r2956;
	// end inline asm
	// begin inline asm
	mov.b32 %r3245, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3256, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3242, %r655, %r656, %r3245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3246, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3247, %r3245, %r3246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3250, %r3242, %r3247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3253, %r666, %r656, %r3256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3257, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3258, %r3256, %r3257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3261, %r3253, %r3258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3264, %r655, %r678, %r3245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3268, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3269, %r3245, %r3268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3272, %r3264, %r3269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3275, %r666, %r678, %r3256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3279, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3280, %r3256, %r3279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3283, %r3275, %r3280;
	// end inline asm
	// begin inline asm
	mov.b32 %r3291, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3302, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3288, %r655, %r702, %r3291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3292, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3293, %r3291, %r3292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3296, %r3288, %r3293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3299, %r666, %r702, %r3302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3303, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3304, %r3302, %r3303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3307, %r3299, %r3304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3310, %r655, %r724, %r3291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3314, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3315, %r3291, %r3314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3318, %r3310, %r3315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3321, %r666, %r724, %r3302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3325, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3326, %r3302, %r3325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3329, %r3321, %r3326;
	// end inline asm
	// begin inline asm
	mov.b32 %r3337, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3348, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3334, %r655, %r748, %r3337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3338, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3339, %r3337, %r3338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3342, %r3334, %r3339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3345, %r666, %r748, %r3348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3349, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3350, %r3348, %r3349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3353, %r3345, %r3350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3356, %r655, %r770, %r3337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3360, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3361, %r3337, %r3360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3364, %r3356, %r3361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3367, %r666, %r770, %r3348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3371, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3372, %r3348, %r3371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3375, %r3367, %r3372;
	// end inline asm
	// begin inline asm
	mov.b32 %r3383, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r3394, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3380, %r655, %r794, %r3383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3384, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3385, %r3383, %r3384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3388, %r3380, %r3385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3391, %r666, %r794, %r3394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3395, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3396, %r3394, %r3395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3399, %r3391, %r3396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3402, %r655, %r816, %r3383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3406, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3407, %r3383, %r3406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3410, %r3402, %r3407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3413, %r666, %r816, %r3394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3417, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3418, %r3394, %r3417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3421, %r3413, %r3418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r245, %r3250, %r3146;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r245, %r3261, %r3152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3504, %r245, %r3272, %r3158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3501, %r245, %r3283, %r3164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r245, %r3296, %r3170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r245, %r3307, %r3176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3522, %r245, %r3318, %r3182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3519, %r245, %r3329, %r3188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r245, %r3342, %r3194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3528, %r245, %r3353, %r3200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3540, %r245, %r3364, %r3206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r245, %r3375, %r3212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3549, %r245, %r3388, %r3218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r245, %r3399, %r3224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3558, %r245, %r3410, %r3230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r245, %r3421, %r3236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3488, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3490, %r3488, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3493, %r266, %r3495, %r3490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3497, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3499, %r3497, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r266, %r3504, %r3499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3506, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3508, %r3506, %r3510;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3511, %r266, %r3513, %r3508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3515, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r3515, %r3519;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r266, %r3522, %r3517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3524, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3526, %r3524, %r3528;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3529, %r266, %r3531, %r3526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3533, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3535, %r3533, %r3537;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r266, %r3540, %r3535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3542, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3544, %r3542, %r3546;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3547, %r266, %r3549, %r3544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3551, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3553, %r3551, %r3555;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3556, %r266, %r3558, %r3553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3560, %r269, %r3495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3563, %r266, %r3492, %r3560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3567, %r269, %r3504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3570, %r266, %r3501, %r3567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3574, %r269, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3577, %r266, %r3510, %r3574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3581, %r269, %r3522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3584, %r266, %r3519, %r3581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3588, %r269, %r3531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3591, %r266, %r3528, %r3588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3595, %r269, %r3540;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3598, %r266, %r3537, %r3595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3602, %r269, %r3549;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3605, %r266, %r3546, %r3602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3609, %r269, %r3558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3612, %r266, %r3555, %r3609;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3703, %r3700}, {%r325, %r331, %r328, %r334}, {%r3493, %r3563}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3712, %r3709}, {%r325, %r331, %r328, %r334}, {%r3502, %r3570}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3721, %r3718}, {%r325, %r331, %r328, %r334}, {%r3511, %r3577}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3730, %r3727}, {%r325, %r331, %r328, %r334}, {%r3520, %r3584}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3739, %r3736}, {%r325, %r331, %r328, %r334}, {%r3529, %r3591}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3748, %r3745}, {%r325, %r331, %r328, %r334}, {%r3538, %r3598}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3757, %r3754}, {%r325, %r331, %r328, %r334}, {%r3547, %r3605}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3766, %r3763}, {%r325, %r331, %r328, %r334}, {%r3556, %r3612}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3696, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3698, %r3696, %r3700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3701, %r369, %r3703, %r3698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3705, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3707, %r3705, %r3709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3710, %r369, %r3712, %r3707;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3714, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3716, %r3714, %r3718;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3719, %r369, %r3721, %r3716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3723, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3725, %r3723, %r3727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3728, %r369, %r3730, %r3725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3732, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3734, %r3732, %r3736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3737, %r369, %r3739, %r3734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3741, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3743, %r3741, %r3745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3746, %r369, %r3748, %r3743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3750, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3752, %r3750, %r3754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3755, %r369, %r3757, %r3752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3759, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3761, %r3759, %r3763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3764, %r369, %r3766, %r3761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3768, %r372, %r3703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3771, %r369, %r3700, %r3768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3775, %r372, %r3712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3778, %r369, %r3709, %r3775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3782, %r372, %r3721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3785, %r369, %r3718, %r3782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3789, %r372, %r3730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3792, %r369, %r3727, %r3789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3796, %r372, %r3739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3799, %r369, %r3736, %r3796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3803, %r372, %r3748;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3806, %r369, %r3745, %r3803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3810, %r372, %r3757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3813, %r369, %r3754, %r3810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3817, %r372, %r3766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3820, %r369, %r3763, %r3817;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3824, %r3825}, {%r403, %r409, %r406, %r412}, {%r3701, %r3771}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3834, %r3835}, {%r403, %r409, %r406, %r412}, {%r3710, %r3778}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3844, %r3845}, {%r403, %r409, %r406, %r412}, {%r3719, %r3785}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3854, %r3855}, {%r403, %r409, %r406, %r412}, {%r3728, %r3792}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3864, %r3865}, {%r403, %r409, %r406, %r412}, {%r3737, %r3799}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3875}, {%r403, %r409, %r406, %r412}, {%r3746, %r3806}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3884, %r3885}, {%r403, %r409, %r406, %r412}, {%r3755, %r3813}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3894, %r3895}, {%r403, %r409, %r406, %r412}, {%r3764, %r3820}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3904, %r111, %r3824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3907, %r111, %r3825;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3910, %r111, %r3834;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3913, %r111, %r3835;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3916, %r111, %r3844;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3919, %r111, %r3845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3922, %r111, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3925, %r111, %r3855;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3928, %r111, %r3864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3931, %r111, %r3865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3934, %r111, %r3874;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3937, %r111, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3940, %r111, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3943, %r111, %r3885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3946, %r111, %r3894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3949, %r111, %r3895;
	// end inline asm
	// begin inline asm
	mov.b32 %r3952, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3954, %r3904, %r3952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3957, %r3954, %r3953;
	// end inline asm
	// begin inline asm
	mov.b32 %r3960, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3962, %r3907, %r3960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3965, %r3962, %r3961;
	// end inline asm
	// begin inline asm
	mov.b32 %r3968, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3970, %r3910, %r3968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3973, %r3970, %r3969;
	// end inline asm
	// begin inline asm
	mov.b32 %r3976, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3978, %r3913, %r3976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3981, %r3978, %r3977;
	// end inline asm
	// begin inline asm
	mov.b32 %r3984, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3986, %r3916, %r3984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3989, %r3986, %r3985;
	// end inline asm
	// begin inline asm
	mov.b32 %r3992, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3994, %r3919, %r3992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3997, %r3994, %r3993;
	// end inline asm
	// begin inline asm
	mov.b32 %r4000, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4002, %r3922, %r4000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4005, %r4002, %r4001;
	// end inline asm
	// begin inline asm
	mov.b32 %r4008, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4009, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4010, %r3925, %r4008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4013, %r4010, %r4009;
	// end inline asm
	// begin inline asm
	mov.b32 %r4016, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4018, %r3928, %r4016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4021, %r4018, %r4017;
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4025, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4026, %r3931, %r4024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4029, %r4026, %r4025;
	// end inline asm
	// begin inline asm
	mov.b32 %r4032, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4033, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4034, %r3934, %r4032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4037, %r4034, %r4033;
	// end inline asm
	// begin inline asm
	mov.b32 %r4040, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4041, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4042, %r3937, %r4040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4045, %r4042, %r4041;
	// end inline asm
	// begin inline asm
	mov.b32 %r4048, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4049, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4050, %r3940, %r4048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4053, %r4050, %r4049;
	// end inline asm
	// begin inline asm
	mov.b32 %r4056, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4057, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4058, %r3943, %r4056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4061, %r4058, %r4057;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4066, %r3946, %r4064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4069, %r4066, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4074, %r3949, %r4072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4077, %r4074, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4083, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4082, %r4083, %r4081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4085, %r3957, %r4082;
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4089, %r4083, %r4088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4092, %r3965, %r4089;
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4096, %r4083, %r4095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4099, %r3973, %r4096;
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r4083, %r4102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4106, %r3981, %r4103;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4109, %r4085, %r4099, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4113, %r4092, %r4106, %r2316;
	// end inline asm
	shl.b32 	%r4120, %r4113, 4;
	// begin inline asm
	lop3.b32 %r4117, %r2322, %r4109, %r4120, 202;
	// end inline asm
	xor.b32  	%r7880, %r4117, -2004318072;
	// begin inline asm
	mov.b32 %r4124, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4122, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4123, %r4124, %r4122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4126, %r3989, %r4123;
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4130, %r4124, %r4129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4133, %r3997, %r4130;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4137, %r4124, %r4136;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4140, %r4005, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4144, %r4124, %r4143;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4147, %r4013, %r4144;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4150, %r4126, %r4140, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4154, %r4133, %r4147, %r2316;
	// end inline asm
	shl.b32 	%r4161, %r4154, 4;
	// begin inline asm
	lop3.b32 %r4158, %r2322, %r4150, %r4161, 202;
	// end inline asm
	xor.b32  	%r7881, %r4158, -2004318072;
	// begin inline asm
	mov.b32 %r4165, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4163, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4164, %r4165, %r4163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4167, %r4021, %r4164;
	// end inline asm
	// begin inline asm
	mov.b32 %r4170, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4171, %r4165, %r4170;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4174, %r4029, %r4171;
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4178, %r4165, %r4177;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4181, %r4037, %r4178;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4185, %r4165, %r4184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4188, %r4045, %r4185;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4191, %r4167, %r4181, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4195, %r4174, %r4188, %r2316;
	// end inline asm
	shl.b32 	%r4202, %r4195, 4;
	// begin inline asm
	lop3.b32 %r4199, %r2322, %r4191, %r4202, 202;
	// end inline asm
	xor.b32  	%r7882, %r4199, -2004318072;
	// begin inline asm
	mov.b32 %r4206, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4205, %r4206, %r4204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4208, %r4053, %r4205;
	// end inline asm
	// begin inline asm
	mov.b32 %r4211, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4212, %r4206, %r4211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4215, %r4061, %r4212;
	// end inline asm
	// begin inline asm
	mov.b32 %r4218, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4219, %r4206, %r4218;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4222, %r4069, %r4219;
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4226, %r4206, %r4225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4229, %r4077, %r4226;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4232, %r4208, %r4222, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4236, %r4215, %r4229, %r2316;
	// end inline asm
	shl.b32 	%r4243, %r4236, 4;
	// begin inline asm
	lop3.b32 %r4240, %r2322, %r4232, %r4243, 202;
	// end inline asm
	xor.b32  	%r7883, %r4240, -2004318072;
	st.shared.u32 	[%rd147], %r7880;
	st.shared.u32 	[%rd148], %r7881;
	st.shared.u32 	[%rd149], %r7882;
	st.shared.u32 	[%rd150], %r7883;
	ld.shared.u32 	%r8013, [%rd88];
	ld.shared.u32 	%r8014, [%rd90];
	ld.shared.u32 	%r8019, [%rd92];
	ld.shared.u32 	%r8020, [%rd94];
	// begin inline asm
	mov.b32 %r4249, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4248, %r8013, -2004318072;
	// begin inline asm
	lop3.b32 %r4246, %r655, %r4248, %r4249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4250, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4251, %r4249, %r4250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4254, %r4246, %r4251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4257, %r666, %r4248, %r4260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4262, %r4260, %r4261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4265, %r4257, %r4262;
	// end inline asm
	shr.u32 	%r4270, %r4248, 8;
	// begin inline asm
	lop3.b32 %r4268, %r655, %r4270, %r4249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4273, %r4249, %r4272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4276, %r4268, %r4273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4279, %r666, %r4270, %r4260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4283, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4284, %r4260, %r4283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4287, %r4279, %r4284;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4294, %r8014, -2004318072;
	// begin inline asm
	lop3.b32 %r4292, %r655, %r4294, %r4295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4297, %r4295, %r4296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4300, %r4292, %r4297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4303, %r666, %r4294, %r4306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4307, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4308, %r4306, %r4307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4311, %r4303, %r4308;
	// end inline asm
	shr.u32 	%r4316, %r4294, 8;
	// begin inline asm
	lop3.b32 %r4314, %r655, %r4316, %r4295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4318, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4319, %r4295, %r4318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4322, %r4314, %r4319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4325, %r666, %r4316, %r4306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4306, %r4329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4333, %r4325, %r4330;
	// end inline asm
	// begin inline asm
	mov.b32 %r4341, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4340, %r8019, -2004318072;
	// begin inline asm
	lop3.b32 %r4338, %r655, %r4340, %r4341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4341, %r4342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4346, %r4338, %r4343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4349, %r666, %r4340, %r4352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4354, %r4352, %r4353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4357, %r4349, %r4354;
	// end inline asm
	shr.u32 	%r4362, %r4340, 8;
	// begin inline asm
	lop3.b32 %r4360, %r655, %r4362, %r4341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4364, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4365, %r4341, %r4364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4368, %r4360, %r4365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4371, %r666, %r4362, %r4352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4375, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4376, %r4352, %r4375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4379, %r4371, %r4376;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4398, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r4386, %r8020, -2004318072;
	// begin inline asm
	lop3.b32 %r4384, %r655, %r4386, %r4387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4388, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4387, %r4388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4392, %r4384, %r4389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4395, %r666, %r4386, %r4398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4398, %r4399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4403, %r4395, %r4400;
	// end inline asm
	shr.u32 	%r4408, %r4386, 8;
	// begin inline asm
	lop3.b32 %r4406, %r655, %r4408, %r4387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4387, %r4410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4414, %r4406, %r4411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4417, %r666, %r4408, %r4398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4421, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4422, %r4398, %r4421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4425, %r4417, %r4422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4428, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4430, %r4428, %r4254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4433, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4435, %r4433, %r4265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4438, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4440, %r4438, %r4276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4443, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4445, %r4443, %r4287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4448, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4450, %r4448, %r4300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4453, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4455, %r4453, %r4311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4458, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4460, %r4458, %r4322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4463, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4465, %r4463, %r4333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4468, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4470, %r4468, %r4346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4473, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4475, %r4473, %r4357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4478, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4480, %r4478, %r4368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4483, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4485, %r4483, %r4379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4488, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4490, %r4488, %r4392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4493, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4495, %r4493, %r4403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4498, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4500, %r4498, %r4414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4503, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4505, %r4503, %r4425;
	// end inline asm
	// begin inline asm
	mov.b32 %r4513, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4524, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4510, %r655, %r1448, %r4513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4514, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4513, %r4514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4518, %r4510, %r4515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4521, %r666, %r1448, %r4524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4525, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4524, %r4525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4529, %r4521, %r4526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4532, %r655, %r1470, %r4513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4536, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4513, %r4536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4540, %r4532, %r4537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4543, %r666, %r1470, %r4524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4524, %r4547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4551, %r4543, %r4548;
	// end inline asm
	// begin inline asm
	mov.b32 %r4559, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4556, %r655, %r1494, %r4559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4560, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4559, %r4560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4564, %r4556, %r4561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4567, %r666, %r1494, %r4570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4570, %r4571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4575, %r4567, %r4572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4578, %r655, %r1516, %r4559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4582, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4559, %r4582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4586, %r4578, %r4583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4589, %r666, %r1516, %r4570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4593, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4570, %r4593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4597, %r4589, %r4594;
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4616, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4602, %r655, %r1540, %r4605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4606, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4607, %r4605, %r4606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4610, %r4602, %r4607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4613, %r666, %r1540, %r4616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4617, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4618, %r4616, %r4617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4621, %r4613, %r4618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4624, %r655, %r1562, %r4605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4629, %r4605, %r4628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4632, %r4624, %r4629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4635, %r666, %r1562, %r4616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4616, %r4639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4643, %r4635, %r4640;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4662, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4648, %r655, %r1586, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4651, %r4652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4656, %r4648, %r4653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4659, %r666, %r1586, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4662, %r4663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4667, %r4659, %r4664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4670, %r655, %r1608, %r4651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4675, %r4651, %r4674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4678, %r4670, %r4675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4681, %r666, %r1608, %r4662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4662, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4692, %r209, %r4518, %r4430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4696, %r209, %r4529, %r4435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4700, %r209, %r4540, %r4440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4704, %r209, %r4551, %r4445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4708, %r209, %r4564, %r4450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4712, %r209, %r4575, %r4455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4716, %r209, %r4586, %r4460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4720, %r209, %r4597, %r4465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4724, %r209, %r4610, %r4470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4728, %r209, %r4621, %r4475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4732, %r209, %r4632, %r4480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4736, %r209, %r4643, %r4485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4740, %r209, %r4656, %r4490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4744, %r209, %r4667, %r4495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4748, %r209, %r4678, %r4500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4752, %r209, %r4689, %r4505;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4772, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4758, %r655, %r656, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4762, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4763, %r4761, %r4762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4766, %r4758, %r4763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4769, %r666, %r656, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4774, %r4772, %r4773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4777, %r4769, %r4774;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4780, %r655, %r678, %r4761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4785, %r4761, %r4784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4788, %r4780, %r4785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4791, %r666, %r678, %r4772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4795, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4796, %r4772, %r4795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4799, %r4791, %r4796;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4818, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4804, %r655, %r702, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4808, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4809, %r4807, %r4808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4812, %r4804, %r4809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4815, %r666, %r702, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4820, %r4818, %r4819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4823, %r4815, %r4820;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4826, %r655, %r724, %r4807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4831, %r4807, %r4830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4834, %r4826, %r4831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4837, %r666, %r724, %r4818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4841, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4842, %r4818, %r4841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4845, %r4837, %r4842;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4864, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4850, %r655, %r748, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4854, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4855, %r4853, %r4854;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4858, %r4850, %r4855;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4861, %r666, %r748, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4866, %r4864, %r4865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4869, %r4861, %r4866;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4872, %r655, %r770, %r4853, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4877, %r4853, %r4876;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4880, %r4872, %r4877;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4883, %r666, %r770, %r4864, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4887, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4888, %r4864, %r4887;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4891, %r4883, %r4888;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r4910, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4896, %r655, %r794, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4900, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4901, %r4899, %r4900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4904, %r4896, %r4901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4907, %r666, %r794, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4912, %r4910, %r4911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4915, %r4907, %r4912;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4918, %r655, %r816, %r4899, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4923, %r4899, %r4922;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4926, %r4918, %r4923;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4929, %r666, %r816, %r4910, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4933, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4934, %r4910, %r4933;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4937, %r4929, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4940, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4942, %r4940, %r4766, %r4692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4946, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4948, %r4946, %r4777, %r4696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4952, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4954, %r4952, %r4788, %r4700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4958, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4960, %r4958, %r4799, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4964, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4966, %r4964, %r4812, %r4708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4970, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4972, %r4970, %r4823, %r4712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4976, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4978, %r4976, %r4834, %r4716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4982, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4984, %r4982, %r4845, %r4720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4988, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4990, %r4988, %r4858, %r4724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4994, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4996, %r4994, %r4869, %r4728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5000, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5002, %r5000, %r4880, %r4732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5006, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5008, %r5006, %r4891, %r4736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5012, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5014, %r5012, %r4904, %r4740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5018, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5020, %r5018, %r4915, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5024, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5026, %r5024, %r4926, %r4748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5032, %r5030, %r4937, %r4752;
	// end inline asm
	// begin inline asm
	mov.b32 %r5041, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5052, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5038, %r655, %r2452, %r5041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5042, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5043, %r5041, %r5042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5046, %r5038, %r5043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5049, %r666, %r2452, %r5052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5053, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5054, %r5052, %r5053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5057, %r5049, %r5054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5060, %r655, %r2474, %r5041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5064, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5065, %r5041, %r5064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5068, %r5060, %r5065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5071, %r666, %r2474, %r5052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5075, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5076, %r5052, %r5075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5079, %r5071, %r5076;
	// end inline asm
	// begin inline asm
	mov.b32 %r5087, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5098, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5084, %r655, %r2498, %r5087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5088, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5089, %r5087, %r5088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5092, %r5084, %r5089;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5095, %r666, %r2498, %r5098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5099, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5100, %r5098, %r5099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5103, %r5095, %r5100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5106, %r655, %r2520, %r5087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5110, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5111, %r5087, %r5110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5114, %r5106, %r5111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5117, %r666, %r2520, %r5098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5121, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5122, %r5098, %r5121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5125, %r5117, %r5122;
	// end inline asm
	// begin inline asm
	mov.b32 %r5133, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5144, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5130, %r655, %r2544, %r5133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5134, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5135, %r5133, %r5134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5138, %r5130, %r5135;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5141, %r666, %r2544, %r5144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5145, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5146, %r5144, %r5145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5149, %r5141, %r5146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5152, %r655, %r2566, %r5133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5156, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5157, %r5133, %r5156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5160, %r5152, %r5157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5163, %r666, %r2566, %r5144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5167, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5168, %r5144, %r5167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5171, %r5163, %r5168;
	// end inline asm
	// begin inline asm
	mov.b32 %r5179, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5190, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5176, %r655, %r2590, %r5179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5180, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5181, %r5179, %r5180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5184, %r5176, %r5181;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5187, %r666, %r2590, %r5190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5192, %r5190, %r5191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5195, %r5187, %r5192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5198, %r655, %r2612, %r5179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5202, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5203, %r5179, %r5202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5206, %r5198, %r5203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5209, %r666, %r2612, %r5190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5213, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5214, %r5190, %r5213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5217, %r5209, %r5214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5291, %r245, %r5046, %r4942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5288, %r245, %r5057, %r4948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5300, %r245, %r5068, %r4954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5297, %r245, %r5079, %r4960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5309, %r245, %r5092, %r4966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5306, %r245, %r5103, %r4972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5318, %r245, %r5114, %r4978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5315, %r245, %r5125, %r4984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5327, %r245, %r5138, %r4990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5324, %r245, %r5149, %r4996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5336, %r245, %r5160, %r5002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5333, %r245, %r5171, %r5008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5345, %r245, %r5184, %r5014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5342, %r245, %r5195, %r5020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5354, %r245, %r5206, %r5026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5351, %r245, %r5217, %r5032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5284, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5286, %r5284, %r5288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5289, %r266, %r5291, %r5286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5293, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5295, %r5293, %r5297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5298, %r266, %r5300, %r5295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5302, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5304, %r5302, %r5306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5307, %r266, %r5309, %r5304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5311, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5313, %r5311, %r5315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5316, %r266, %r5318, %r5313;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5320, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5322, %r5320, %r5324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5325, %r266, %r5327, %r5322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5329, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5331, %r5329, %r5333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5334, %r266, %r5336, %r5331;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5338, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5340, %r5338, %r5342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5343, %r266, %r5345, %r5340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5347, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5349, %r5347, %r5351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5352, %r266, %r5354, %r5349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5356, %r269, %r5291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5359, %r266, %r5288, %r5356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5363, %r269, %r5300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5366, %r266, %r5297, %r5363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5370, %r269, %r5309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5373, %r266, %r5306, %r5370;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5377, %r269, %r5318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5380, %r266, %r5315, %r5377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5384, %r269, %r5327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5387, %r266, %r5324, %r5384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5391, %r269, %r5336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5394, %r266, %r5333, %r5391;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5398, %r269, %r5345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5401, %r266, %r5342, %r5398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5405, %r269, %r5354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5408, %r266, %r5351, %r5405;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5499, %r5496}, {%r325, %r331, %r328, %r334}, {%r5289, %r5359}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5508, %r5505}, {%r325, %r331, %r328, %r334}, {%r5298, %r5366}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5517, %r5514}, {%r325, %r331, %r328, %r334}, {%r5307, %r5373}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5526, %r5523}, {%r325, %r331, %r328, %r334}, {%r5316, %r5380}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5535, %r5532}, {%r325, %r331, %r328, %r334}, {%r5325, %r5387}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5544, %r5541}, {%r325, %r331, %r328, %r334}, {%r5334, %r5394}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5553, %r5550}, {%r325, %r331, %r328, %r334}, {%r5343, %r5401}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5562, %r5559}, {%r325, %r331, %r328, %r334}, {%r5352, %r5408}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5492, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5494, %r5492, %r5496;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5497, %r369, %r5499, %r5494;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5501, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5503, %r5501, %r5505;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5506, %r369, %r5508, %r5503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5510, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5512, %r5510, %r5514;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5515, %r369, %r5517, %r5512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5519, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5521, %r5519, %r5523;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r369, %r5526, %r5521;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5528, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5530, %r5528, %r5532;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5533, %r369, %r5535, %r5530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5537, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5539, %r5537, %r5541;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5542, %r369, %r5544, %r5539;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5546, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5548, %r5546, %r5550;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5551, %r369, %r5553, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5555, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5557, %r5555, %r5559;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r369, %r5562, %r5557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5564, %r372, %r5499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5567, %r369, %r5496, %r5564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5571, %r372, %r5508;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r369, %r5505, %r5571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5578, %r372, %r5517;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5581, %r369, %r5514, %r5578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5585, %r372, %r5526;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r369, %r5523, %r5585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5592, %r372, %r5535;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r369, %r5532, %r5592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5599, %r372, %r5544;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r369, %r5541, %r5599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5606, %r372, %r5553;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5609, %r369, %r5550, %r5606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5613, %r372, %r5562;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r369, %r5559, %r5613;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5620, %r5621}, {%r403, %r409, %r406, %r412}, {%r5497, %r5567}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5630, %r5631}, {%r403, %r409, %r406, %r412}, {%r5506, %r5574}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5640, %r5641}, {%r403, %r409, %r406, %r412}, {%r5515, %r5581}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5650, %r5651}, {%r403, %r409, %r406, %r412}, {%r5524, %r5588}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5660, %r5661}, {%r403, %r409, %r406, %r412}, {%r5533, %r5595}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5670, %r5671}, {%r403, %r409, %r406, %r412}, {%r5542, %r5602}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5680, %r5681}, {%r403, %r409, %r406, %r412}, {%r5551, %r5609}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5690, %r5691}, {%r403, %r409, %r406, %r412}, {%r5560, %r5616}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5700, %r111, %r5620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5703, %r111, %r5621;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5706, %r111, %r5630;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5709, %r111, %r5631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5712, %r111, %r5640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5715, %r111, %r5641;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5718, %r111, %r5650;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5721, %r111, %r5651;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5724, %r111, %r5660;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5727, %r111, %r5661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5730, %r111, %r5670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5733, %r111, %r5671;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5736, %r111, %r5680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5739, %r111, %r5681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5742, %r111, %r5690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5745, %r111, %r5691;
	// end inline asm
	// begin inline asm
	mov.b32 %r5748, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5750, %r5700, %r5748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5753, %r5750, %r5749;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5758, %r5703, %r5756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5761, %r5758, %r5757;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5766, %r5706, %r5764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5769, %r5766, %r5765;
	// end inline asm
	// begin inline asm
	mov.b32 %r5772, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5774, %r5709, %r5772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5777, %r5774, %r5773;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5782, %r5712, %r5780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5785, %r5782, %r5781;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5790, %r5715, %r5788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5793, %r5790, %r5789;
	// end inline asm
	// begin inline asm
	mov.b32 %r5796, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5798, %r5718, %r5796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5801, %r5798, %r5797;
	// end inline asm
	// begin inline asm
	mov.b32 %r5804, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5805, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5806, %r5721, %r5804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5809, %r5806, %r5805;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5814, %r5724, %r5812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5817, %r5814, %r5813;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5822, %r5727, %r5820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5825, %r5822, %r5821;
	// end inline asm
	// begin inline asm
	mov.b32 %r5828, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5829, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5830, %r5730, %r5828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5833, %r5830, %r5829;
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5838, %r5733, %r5836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5841, %r5838, %r5837;
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5846, %r5736, %r5844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5849, %r5846, %r5845;
	// end inline asm
	// begin inline asm
	mov.b32 %r5852, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5853, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5854, %r5739, %r5852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5857, %r5854, %r5853;
	// end inline asm
	// begin inline asm
	mov.b32 %r5860, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5862, %r5742, %r5860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5865, %r5862, %r5861;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5870, %r5745, %r5868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5873, %r5870, %r5869;
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5878, %r5879, %r5877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5753, %r5878;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5879, %r5884;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5888, %r5761, %r5885;
	// end inline asm
	// begin inline asm
	mov.b32 %r5891, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5879, %r5891;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5769, %r5892;
	// end inline asm
	// begin inline asm
	mov.b32 %r5898, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5879, %r5898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5777, %r5899;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5905, %r5881, %r5895, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5909, %r5888, %r5902, %r2316;
	// end inline asm
	shl.b32 	%r5916, %r5909, 4;
	// begin inline asm
	lop3.b32 %r5913, %r2322, %r5905, %r5916, 202;
	// end inline asm
	xor.b32  	%r7884, %r5913, -2004318072;
	// begin inline asm
	mov.b32 %r5920, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5918, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5919, %r5920, %r5918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5922, %r5785, %r5919;
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5926, %r5920, %r5925;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5929, %r5793, %r5926;
	// end inline asm
	// begin inline asm
	mov.b32 %r5932, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5920, %r5932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5936, %r5801, %r5933;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5920, %r5939;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5943, %r5809, %r5940;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5946, %r5922, %r5936, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5950, %r5929, %r5943, %r2316;
	// end inline asm
	shl.b32 	%r5957, %r5950, 4;
	// begin inline asm
	lop3.b32 %r5954, %r2322, %r5946, %r5957, 202;
	// end inline asm
	xor.b32  	%r7885, %r5954, -2004318072;
	// begin inline asm
	mov.b32 %r5961, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5961, %r5959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5963, %r5817, %r5960;
	// end inline asm
	// begin inline asm
	mov.b32 %r5966, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5967, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5825, %r5967;
	// end inline asm
	// begin inline asm
	mov.b32 %r5973, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5974, %r5961, %r5973;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5833, %r5974;
	// end inline asm
	// begin inline asm
	mov.b32 %r5980, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5981, %r5961, %r5980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5841, %r5981;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5987, %r5963, %r5977, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5991, %r5970, %r5984, %r2316;
	// end inline asm
	shl.b32 	%r5998, %r5991, 4;
	// begin inline asm
	lop3.b32 %r5995, %r2322, %r5987, %r5998, 202;
	// end inline asm
	xor.b32  	%r7886, %r5995, -2004318072;
	// begin inline asm
	mov.b32 %r6002, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r6002, %r6000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6004, %r5849, %r6001;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6008, %r6002, %r6007;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6011, %r5857, %r6008;
	// end inline asm
	// begin inline asm
	mov.b32 %r6014, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6015, %r6002, %r6014;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6018, %r5865, %r6015;
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6022, %r6002, %r6021;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6025, %r5873, %r6022;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6028, %r6004, %r6018, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r6032, %r6011, %r6025, %r2316;
	// end inline asm
	shl.b32 	%r6039, %r6032, 4;
	// begin inline asm
	lop3.b32 %r6036, %r2322, %r6028, %r6039, 202;
	// end inline asm
	xor.b32  	%r7887, %r6036, -2004318072;
	st.shared.u32 	[%rd147], %r7884;
	st.shared.u32 	[%rd148], %r7885;
	st.shared.u32 	[%rd149], %r7886;
	st.shared.u32 	[%rd150], %r7887;
	ld.shared.u32 	%r8015, [%rd88];
	ld.shared.u32 	%r8016, [%rd90];
	ld.shared.u32 	%r8021, [%rd92];
	ld.shared.u32 	%r8022, [%rd94];
	// begin inline asm
	mov.b32 %r6045, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6056, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6044, %r8015, -2004318072;
	// begin inline asm
	lop3.b32 %r6042, %r655, %r6044, %r6045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6046, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6047, %r6045, %r6046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6050, %r6042, %r6047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6053, %r666, %r6044, %r6056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6057, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6058, %r6056, %r6057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6061, %r6053, %r6058;
	// end inline asm
	shr.u32 	%r6066, %r6044, 8;
	// begin inline asm
	lop3.b32 %r6064, %r655, %r6066, %r6045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6068, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6069, %r6045, %r6068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6072, %r6064, %r6069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6075, %r666, %r6066, %r6056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6079, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6080, %r6056, %r6079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6083, %r6075, %r6080;
	// end inline asm
	// begin inline asm
	mov.b32 %r6091, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6102, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6090, %r8016, -2004318072;
	// begin inline asm
	lop3.b32 %r6088, %r655, %r6090, %r6091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6092, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6093, %r6091, %r6092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6096, %r6088, %r6093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6099, %r666, %r6090, %r6102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6103, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6104, %r6102, %r6103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6107, %r6099, %r6104;
	// end inline asm
	shr.u32 	%r6112, %r6090, 8;
	// begin inline asm
	lop3.b32 %r6110, %r655, %r6112, %r6091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6114, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6115, %r6091, %r6114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6118, %r6110, %r6115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6121, %r666, %r6112, %r6102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6125, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6126, %r6102, %r6125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6129, %r6121, %r6126;
	// end inline asm
	// begin inline asm
	mov.b32 %r6137, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6148, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6136, %r8021, -2004318072;
	// begin inline asm
	lop3.b32 %r6134, %r655, %r6136, %r6137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6138, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6139, %r6137, %r6138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6142, %r6134, %r6139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6145, %r666, %r6136, %r6148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6149, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6150, %r6148, %r6149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6153, %r6145, %r6150;
	// end inline asm
	shr.u32 	%r6158, %r6136, 8;
	// begin inline asm
	lop3.b32 %r6156, %r655, %r6158, %r6137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6160, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6161, %r6137, %r6160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6164, %r6156, %r6161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6167, %r666, %r6158, %r6148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6171, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6172, %r6148, %r6171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6175, %r6167, %r6172;
	// end inline asm
	// begin inline asm
	mov.b32 %r6183, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6194, {%rs1078, %rs1078};
	// end inline asm
	xor.b32  	%r6182, %r8022, -2004318072;
	// begin inline asm
	lop3.b32 %r6180, %r655, %r6182, %r6183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6184, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6185, %r6183, %r6184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6188, %r6180, %r6185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6191, %r666, %r6182, %r6194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6195, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6196, %r6194, %r6195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6199, %r6191, %r6196;
	// end inline asm
	shr.u32 	%r6204, %r6182, 8;
	// begin inline asm
	lop3.b32 %r6202, %r655, %r6204, %r6183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6206, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6207, %r6183, %r6206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6210, %r6202, %r6207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6213, %r666, %r6204, %r6194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6217, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6218, %r6194, %r6217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6221, %r6213, %r6218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6226, %r6224, %r6050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6229, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6231, %r6229, %r6061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6234, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6236, %r6234, %r6072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6239, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6241, %r6239, %r6083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6244, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6246, %r6244, %r6096;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6249, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6251, %r6249, %r6107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6254, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6256, %r6254, %r6118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6259, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6261, %r6259, %r6129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6264, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6266, %r6264, %r6142;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6269, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6271, %r6269, %r6153;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6274, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6276, %r6274, %r6164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6279, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6281, %r6279, %r6175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6284, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6286, %r6284, %r6188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6289, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6291, %r6289, %r6199;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6294, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6296, %r6294, %r6210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6299, %r263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6301, %r6299, %r6221;
	// end inline asm
	// begin inline asm
	mov.b32 %r6309, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6320, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6306, %r655, %r656, %r6309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6310, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6311, %r6309, %r6310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6314, %r6306, %r6311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6317, %r666, %r656, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6321, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6322, %r6320, %r6321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6325, %r6317, %r6322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6328, %r655, %r678, %r6309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6332, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6333, %r6309, %r6332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6336, %r6328, %r6333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6339, %r666, %r678, %r6320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6343, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6344, %r6320, %r6343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6347, %r6339, %r6344;
	// end inline asm
	// begin inline asm
	mov.b32 %r6355, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6366, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6352, %r655, %r702, %r6355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6356, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6357, %r6355, %r6356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6360, %r6352, %r6357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6363, %r666, %r702, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6367, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6368, %r6366, %r6367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6371, %r6363, %r6368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6374, %r655, %r724, %r6355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6378, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6379, %r6355, %r6378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6382, %r6374, %r6379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6385, %r666, %r724, %r6366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6389, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6390, %r6366, %r6389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6393, %r6385, %r6390;
	// end inline asm
	// begin inline asm
	mov.b32 %r6401, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6412, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6398, %r655, %r748, %r6401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6402, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6403, %r6401, %r6402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6406, %r6398, %r6403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6409, %r666, %r748, %r6412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6413, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6414, %r6412, %r6413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6417, %r6409, %r6414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6420, %r655, %r770, %r6401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6424, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6425, %r6401, %r6424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6428, %r6420, %r6425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6431, %r666, %r770, %r6412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6435, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6436, %r6412, %r6435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6439, %r6431, %r6436;
	// end inline asm
	// begin inline asm
	mov.b32 %r6447, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6458, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6444, %r655, %r794, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6448, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6449, %r6447, %r6448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6452, %r6444, %r6449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6455, %r666, %r794, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6459, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6460, %r6458, %r6459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6463, %r6455, %r6460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6466, %r655, %r816, %r6447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6470, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6471, %r6447, %r6470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6474, %r6466, %r6471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6477, %r666, %r816, %r6458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6481, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6482, %r6458, %r6481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6485, %r6477, %r6482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6488, %r209, %r6314, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6492, %r209, %r6325, %r6231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6496, %r209, %r6336, %r6236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6500, %r209, %r6347, %r6241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6504, %r209, %r6360, %r6246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6508, %r209, %r6371, %r6251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6512, %r209, %r6382, %r6256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6516, %r209, %r6393, %r6261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6520, %r209, %r6406, %r6266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6524, %r209, %r6417, %r6271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6528, %r209, %r6428, %r6276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6532, %r209, %r6439, %r6281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6536, %r209, %r6452, %r6286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6540, %r209, %r6463, %r6291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6544, %r209, %r6474, %r6296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6548, %r209, %r6485, %r6301;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6568, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6554, %r655, %r2452, %r6557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6558, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6559, %r6557, %r6558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6562, %r6554, %r6559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6565, %r666, %r2452, %r6568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6569, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6570, %r6568, %r6569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6573, %r6565, %r6570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6576, %r655, %r2474, %r6557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6580, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6581, %r6557, %r6580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6584, %r6576, %r6581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6587, %r666, %r2474, %r6568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6592, %r6568, %r6591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6595, %r6587, %r6592;
	// end inline asm
	// begin inline asm
	mov.b32 %r6603, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6614, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6600, %r655, %r2498, %r6603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6604, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6605, %r6603, %r6604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6608, %r6600, %r6605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6611, %r666, %r2498, %r6614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6615, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6616, %r6614, %r6615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6619, %r6611, %r6616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6622, %r655, %r2520, %r6603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6626, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6627, %r6603, %r6626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6630, %r6622, %r6627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6633, %r666, %r2520, %r6614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6637, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6638, %r6614, %r6637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6641, %r6633, %r6638;
	// end inline asm
	// begin inline asm
	mov.b32 %r6649, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6660, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6646, %r655, %r2544, %r6649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6650, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6651, %r6649, %r6650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6654, %r6646, %r6651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6657, %r666, %r2544, %r6660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6661, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6662, %r6660, %r6661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6665, %r6657, %r6662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6668, %r655, %r2566, %r6649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6672, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6673, %r6649, %r6672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6676, %r6668, %r6673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6679, %r666, %r2566, %r6660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6683, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6684, %r6660, %r6683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6687, %r6679, %r6684;
	// end inline asm
	// begin inline asm
	mov.b32 %r6695, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6706, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6692, %r655, %r2590, %r6695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6696, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6697, %r6695, %r6696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6700, %r6692, %r6697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6703, %r666, %r2590, %r6706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6707, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6708, %r6706, %r6707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6711, %r6703, %r6708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6714, %r655, %r2612, %r6695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6718, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6719, %r6695, %r6718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6722, %r6714, %r6719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6725, %r666, %r2612, %r6706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6729, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6730, %r6706, %r6729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6733, %r6725, %r6730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6736, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6738, %r6736, %r6562, %r6488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6742, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r6742, %r6573, %r6492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6748, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r6748, %r6584, %r6496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6754, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6756, %r6754, %r6595, %r6500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6760, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r6760, %r6608, %r6504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6766, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r6766, %r6619, %r6508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6772, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6774, %r6772, %r6630, %r6512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6778, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r6778, %r6641, %r6516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6784, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r6784, %r6654, %r6520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6790, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6792, %r6790, %r6665, %r6524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6796, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r6796, %r6676, %r6528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6802, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r6802, %r6687, %r6532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6808, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6810, %r6808, %r6700, %r6536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6814, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r6814, %r6711, %r6540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6820, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r6820, %r6722, %r6544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6826, %r227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6828, %r6826, %r6733, %r6548;
	// end inline asm
	// begin inline asm
	mov.b32 %r6837, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6848, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6834, %r655, %r4248, %r6837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6838, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6839, %r6837, %r6838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6842, %r6834, %r6839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6845, %r666, %r4248, %r6848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6849, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6850, %r6848, %r6849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6853, %r6845, %r6850;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6856, %r655, %r4270, %r6837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6860, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6861, %r6837, %r6860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6864, %r6856, %r6861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6867, %r666, %r4270, %r6848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6871, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6872, %r6848, %r6871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6875, %r6867, %r6872;
	// end inline asm
	// begin inline asm
	mov.b32 %r6883, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6894, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6880, %r655, %r4294, %r6883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6884, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6885, %r6883, %r6884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6888, %r6880, %r6885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6891, %r666, %r4294, %r6894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6895, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6896, %r6894, %r6895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6899, %r6891, %r6896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6902, %r655, %r4316, %r6883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6906, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6907, %r6883, %r6906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6910, %r6902, %r6907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6913, %r666, %r4316, %r6894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6917, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6918, %r6894, %r6917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6921, %r6913, %r6918;
	// end inline asm
	// begin inline asm
	mov.b32 %r6929, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6940, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6926, %r655, %r4340, %r6929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6930, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6931, %r6929, %r6930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6934, %r6926, %r6931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6937, %r666, %r4340, %r6940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6941, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6942, %r6940, %r6941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6945, %r6937, %r6942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6948, %r655, %r4362, %r6929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6952, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6953, %r6929, %r6952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6956, %r6948, %r6953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6959, %r666, %r4362, %r6940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6963, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6964, %r6940, %r6963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6967, %r6959, %r6964;
	// end inline asm
	// begin inline asm
	mov.b32 %r6975, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r6986, {%rs1078, %rs1078};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6972, %r655, %r4386, %r6975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6976, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6977, %r6975, %r6976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6980, %r6972, %r6977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6983, %r666, %r4386, %r6986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6987, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6988, %r6986, %r6987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6991, %r6983, %r6988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6994, %r655, %r4408, %r6975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6998, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6999, %r6975, %r6998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7002, %r6994, %r6999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r7005, %r666, %r4408, %r6986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r7009, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7010, %r6986, %r7009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7013, %r7005, %r7010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7087, %r245, %r6842, %r6738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7084, %r245, %r6853, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7096, %r245, %r6864, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7093, %r245, %r6875, %r6756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7105, %r245, %r6888, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7102, %r245, %r6899, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7114, %r245, %r6910, %r6774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7111, %r245, %r6921, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7123, %r245, %r6934, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7120, %r245, %r6945, %r6792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7132, %r245, %r6956, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7129, %r245, %r6967, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7141, %r245, %r6980, %r6810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7138, %r245, %r6991, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7150, %r245, %r7002, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7147, %r245, %r7013, %r6828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7080, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7082, %r7080, %r7084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7085, %r266, %r7087, %r7082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7089, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7091, %r7089, %r7093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7094, %r266, %r7096, %r7091;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7098, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7100, %r7098, %r7102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7103, %r266, %r7105, %r7100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7107, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7109, %r7107, %r7111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7112, %r266, %r7114, %r7109;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7116, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7118, %r7116, %r7120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7121, %r266, %r7123, %r7118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7125, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7127, %r7125, %r7129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7130, %r266, %r7132, %r7127;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7134, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7136, %r7134, %r7138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7139, %r266, %r7141, %r7136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7143, %r269;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7145, %r7143, %r7147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7148, %r266, %r7150, %r7145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7152, %r269, %r7087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7155, %r266, %r7084, %r7152;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7159, %r269, %r7096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7162, %r266, %r7093, %r7159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7166, %r269, %r7105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7169, %r266, %r7102, %r7166;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r269, %r7114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r266, %r7111, %r7173;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7180, %r269, %r7123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7183, %r266, %r7120, %r7180;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7187, %r269, %r7132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7190, %r266, %r7129, %r7187;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7194, %r269, %r7141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7197, %r266, %r7138, %r7194;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7201, %r269, %r7150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7204, %r266, %r7147, %r7201;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7295, %r7292}, {%r325, %r331, %r328, %r334}, {%r7085, %r7155}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7304, %r7301}, {%r325, %r331, %r328, %r334}, {%r7094, %r7162}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7313, %r7310}, {%r325, %r331, %r328, %r334}, {%r7103, %r7169}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7322, %r7319}, {%r325, %r331, %r328, %r334}, {%r7112, %r7176}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7331, %r7328}, {%r325, %r331, %r328, %r334}, {%r7121, %r7183}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7340, %r7337}, {%r325, %r331, %r328, %r334}, {%r7130, %r7190}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7349, %r7346}, {%r325, %r331, %r328, %r334}, {%r7139, %r7197}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7358, %r7355}, {%r325, %r331, %r328, %r334}, {%r7148, %r7204}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7288, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7290, %r7288, %r7292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7293, %r369, %r7295, %r7290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7297, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7299, %r7297, %r7301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7302, %r369, %r7304, %r7299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7306, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7308, %r7306, %r7310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7311, %r369, %r7313, %r7308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7315, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r7315, %r7319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r369, %r7322, %r7317;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7324, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r7324, %r7328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r369, %r7331, %r7326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7333, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7335, %r7333, %r7337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7338, %r369, %r7340, %r7335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7342, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r7342, %r7346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r369, %r7349, %r7344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7351, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7353, %r7351, %r7355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7356, %r369, %r7358, %r7353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7360, %r372, %r7295;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7363, %r369, %r7292, %r7360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7367, %r372, %r7304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7370, %r369, %r7301, %r7367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7374, %r372, %r7313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7377, %r369, %r7310, %r7374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7381, %r372, %r7322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7384, %r369, %r7319, %r7381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7388, %r372, %r7331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7391, %r369, %r7328, %r7388;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7395, %r372, %r7340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7398, %r369, %r7337, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7402, %r372, %r7349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7405, %r369, %r7346, %r7402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7409, %r372, %r7358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7412, %r369, %r7355, %r7409;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7416, %r7417}, {%r403, %r409, %r406, %r412}, {%r7293, %r7363}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7426, %r7427}, {%r403, %r409, %r406, %r412}, {%r7302, %r7370}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7436, %r7437}, {%r403, %r409, %r406, %r412}, {%r7311, %r7377}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7446, %r7447}, {%r403, %r409, %r406, %r412}, {%r7320, %r7384}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7456, %r7457}, {%r403, %r409, %r406, %r412}, {%r7329, %r7391}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7466, %r7467}, {%r403, %r409, %r406, %r412}, {%r7338, %r7398}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7476, %r7477}, {%r403, %r409, %r406, %r412}, {%r7347, %r7405}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7486, %r7487}, {%r403, %r409, %r406, %r412}, {%r7356, %r7412}, {%r7989, %r7989};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7496, %r111, %r7416;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7499, %r111, %r7417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7502, %r111, %r7426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7505, %r111, %r7427;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7508, %r111, %r7436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7511, %r111, %r7437;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7514, %r111, %r7446;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7517, %r111, %r7447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7520, %r111, %r7456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7523, %r111, %r7457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7526, %r111, %r7466;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7529, %r111, %r7467;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7532, %r111, %r7476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7535, %r111, %r7477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7538, %r111, %r7486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7541, %r111, %r7487;
	// end inline asm
	// begin inline asm
	mov.b32 %r7544, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7546, %r7496, %r7544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7549, %r7546, %r7545;
	// end inline asm
	// begin inline asm
	mov.b32 %r7552, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7554, %r7499, %r7552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7557, %r7554, %r7553;
	// end inline asm
	// begin inline asm
	mov.b32 %r7560, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7562, %r7502, %r7560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7565, %r7562, %r7561;
	// end inline asm
	// begin inline asm
	mov.b32 %r7568, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7570, %r7505, %r7568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7573, %r7570, %r7569;
	// end inline asm
	// begin inline asm
	mov.b32 %r7576, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7578, %r7508, %r7576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7581, %r7578, %r7577;
	// end inline asm
	// begin inline asm
	mov.b32 %r7584, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7586, %r7511, %r7584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7589, %r7586, %r7585;
	// end inline asm
	// begin inline asm
	mov.b32 %r7592, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7594, %r7514, %r7592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7597, %r7594, %r7593;
	// end inline asm
	// begin inline asm
	mov.b32 %r7600, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7601, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7602, %r7517, %r7600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7605, %r7602, %r7601;
	// end inline asm
	// begin inline asm
	mov.b32 %r7608, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7610, %r7520, %r7608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7613, %r7610, %r7609;
	// end inline asm
	// begin inline asm
	mov.b32 %r7616, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7617, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7618, %r7523, %r7616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7621, %r7618, %r7617;
	// end inline asm
	// begin inline asm
	mov.b32 %r7624, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7625, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7626, %r7526, %r7624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7629, %r7626, %r7625;
	// end inline asm
	// begin inline asm
	mov.b32 %r7632, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7633, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7634, %r7529, %r7632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7637, %r7634, %r7633;
	// end inline asm
	// begin inline asm
	mov.b32 %r7640, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7641, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7642, %r7532, %r7640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7645, %r7642, %r7641;
	// end inline asm
	// begin inline asm
	mov.b32 %r7648, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7649, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7650, %r7535, %r7648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7653, %r7650, %r7649;
	// end inline asm
	// begin inline asm
	mov.b32 %r7656, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7658, %r7538, %r7656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7661, %r7658, %r7657;
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs199, %rs199};
	// end inline asm
	// begin inline asm
	mov.b32 %r7665, {%rs201, %rs201};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7666, %r7541, %r7664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7669, %r7666, %r7665;
	// end inline asm
	// begin inline asm
	mov.b32 %r7675, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7673, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7674, %r7675, %r7673;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7677, %r7549, %r7674;
	// end inline asm
	// begin inline asm
	mov.b32 %r7680, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7681, %r7675, %r7680;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7684, %r7557, %r7681;
	// end inline asm
	// begin inline asm
	mov.b32 %r7687, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7675, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7565, %r7688;
	// end inline asm
	// begin inline asm
	mov.b32 %r7694, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7675, %r7694;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7698, %r7573, %r7695;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7701, %r7677, %r7691, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7705, %r7684, %r7698, %r2316;
	// end inline asm
	shl.b32 	%r7712, %r7705, 4;
	// begin inline asm
	lop3.b32 %r7709, %r2322, %r7701, %r7712, 202;
	// end inline asm
	xor.b32  	%r7888, %r7709, -2004318072;
	// begin inline asm
	mov.b32 %r7716, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7714, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7716, %r7714;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7581, %r7715;
	// end inline asm
	// begin inline asm
	mov.b32 %r7721, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7716, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7589, %r7722;
	// end inline asm
	// begin inline asm
	mov.b32 %r7728, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7729, %r7716, %r7728;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7732, %r7597, %r7729;
	// end inline asm
	// begin inline asm
	mov.b32 %r7735, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7736, %r7716, %r7735;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7739, %r7605, %r7736;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7742, %r7718, %r7732, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7746, %r7725, %r7739, %r2316;
	// end inline asm
	shl.b32 	%r7753, %r7746, 4;
	// begin inline asm
	lop3.b32 %r7750, %r2322, %r7742, %r7753, 202;
	// end inline asm
	xor.b32  	%r7889, %r7750, -2004318072;
	// begin inline asm
	mov.b32 %r7757, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7755, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7756, %r7757, %r7755;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7759, %r7613, %r7756;
	// end inline asm
	// begin inline asm
	mov.b32 %r7762, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7763, %r7757, %r7762;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7766, %r7621, %r7763;
	// end inline asm
	// begin inline asm
	mov.b32 %r7769, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7757, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7629, %r7770;
	// end inline asm
	// begin inline asm
	mov.b32 %r7776, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7777, %r7757, %r7776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7780, %r7637, %r7777;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7783, %r7759, %r7773, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7787, %r7766, %r7780, %r2316;
	// end inline asm
	shl.b32 	%r7794, %r7787, 4;
	// begin inline asm
	lop3.b32 %r7791, %r2322, %r7783, %r7794, 202;
	// end inline asm
	xor.b32  	%r7890, %r7791, -2004318072;
	// begin inline asm
	mov.b32 %r7798, {%rs1182, %rs1182};
	// end inline asm
	// begin inline asm
	mov.b32 %r7796, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7798, %r7796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7800, %r7645, %r7797;
	// end inline asm
	// begin inline asm
	mov.b32 %r7803, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7804, %r7798, %r7803;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7807, %r7653, %r7804;
	// end inline asm
	// begin inline asm
	mov.b32 %r7810, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7811, %r7798, %r7810;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7814, %r7661, %r7811;
	// end inline asm
	// begin inline asm
	mov.b32 %r7817, {%rs1190, %rs1190};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7818, %r7798, %r7817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7821, %r7669, %r7818;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7824, %r7800, %r7814, %r2316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7828, %r7807, %r7821, %r2316;
	// end inline asm
	shl.b32 	%r7835, %r7828, 4;
	// begin inline asm
	lop3.b32 %r7832, %r2322, %r7824, %r7835, 202;
	// end inline asm
	xor.b32  	%r7891, %r7832, -2004318072;
	st.shared.u32 	[%rd147], %r7888;
	st.shared.u32 	[%rd148], %r7889;
	st.shared.u32 	[%rd149], %r7890;
	st.shared.u32 	[%rd150], %r7891;
	add.s32 	%r8023, %r8023, 64;
	add.s64 	%rd150, %rd150, 8324;
	add.s64 	%rd149, %rd149, 8324;
	add.s64 	%rd148, %rd148, 8324;
	add.s64 	%rd147, %rd147, 8324;
	add.s32 	%r8010, %r8010, 1;
	setp.eq.s32 	%p213, %r8023, 256;
	@%p213 bra 	$L__BB0_85;
	bra.uni 	$L__BB0_84;
$L__BB0_85:                             // %guard_exit16938
                                        //   in Loop: Header=BB0_83 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7897, [%rd5];
	ld.shared.u32 	%r7898, [%rd6+128];
	ld.shared.u32 	%r7905, [%rd6+4];
	ld.shared.u32 	%r7906, [%rd6+132];
	ld.shared.u32 	%r7913, [%rd5+8324];
	ld.shared.u32 	%r7914, [%rd6+8452];
	ld.shared.u32 	%r7921, [%rd6+8328];
	ld.shared.u32 	%r7922, [%rd6+8456];
	ld.shared.u32 	%r7929, [%rd5+16648];
	ld.shared.u32 	%r7930, [%rd6+16776];
	ld.shared.u32 	%r7937, [%rd6+16652];
	ld.shared.u32 	%r7938, [%rd6+16780];
	ld.shared.u32 	%r7945, [%rd5+24972];
	ld.shared.u32 	%r7946, [%rd6+25100];
	ld.shared.u32 	%r7953, [%rd6+24976];
	ld.shared.u32 	%r7954, [%rd6+25104];
	// begin inline asm
	prmt.b32 %r7892, %r7897, %r7898, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7896, %r7897, %r7898, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7900, %r7905, %r7906, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7904, %r7905, %r7906, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7908, %r7913, %r7914, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7912, %r7913, %r7914, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7916, %r7921, %r7922, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7920, %r7921, %r7922, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7924, %r7929, %r7930, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7928, %r7929, %r7930, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7932, %r7937, %r7938, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7936, %r7937, %r7938, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7940, %r7945, %r7946, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7944, %r7945, %r7946, %r570;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7948, %r7953, %r7954, %r566;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7952, %r7953, %r7954, %r570;
	// end inline asm
	selp.b32 	%r7956, %r7896, %r7892, %p200;
	shfl.sync.bfly.b32	%r151, %r7956, 8, 31, -1;
	selp.b32 	%r7957, %r7904, %r7900, %p200;
	shfl.sync.bfly.b32	%r152, %r7957, 8, 31, -1;
	selp.b32 	%r7958, %r7912, %r7908, %p200;
	shfl.sync.bfly.b32	%r7959, %r7958, 8, 31, -1;
	selp.b32 	%r7960, %r7920, %r7916, %p200;
	shfl.sync.bfly.b32	%r7961, %r7960, 8, 31, -1;
	selp.b32 	%r7962, %r7928, %r7924, %p200;
	shfl.sync.bfly.b32	%r7963, %r7962, 8, 31, -1;
	selp.b32 	%r7964, %r7936, %r7932, %p200;
	shfl.sync.bfly.b32	%r7965, %r7964, 8, 31, -1;
	selp.b32 	%r7966, %r7944, %r7940, %p200;
	shfl.sync.bfly.b32	%r7967, %r7966, 8, 31, -1;
	selp.b32 	%r7968, %r7952, %r7948, %p200;
	shfl.sync.bfly.b32	%r7969, %r7968, 8, 31, -1;
	and.b32  	%r7970, %r73, 32512;
	setp.eq.s32 	%p215, %r7970, 0;
	shl.b32 	%r7990, %r73, 10;
	@%p215 bra 	$L__BB0_87;
// %bb.86:                              // %pass16151
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r7971, %r152, %r7904, %p200;
	selp.b32 	%r7972, %r7900, %r152, %p200;
	selp.b32 	%r7973, %r151, %r7896, %p200;
	selp.b32 	%r7974, %r7892, %r151, %p200;
	or.b32  	%r7976, %r7990, %r59;
	or.b32  	%r7977, %r7976, %r51;
	cvt.s64.s32 	%rd95, %r7977;
	add.s64 	%rd96, %rd95, %rd7;
	shr.u64 	%rd97, %rd96, 39;
	add.s64 	%rd98, %rd96, %rd97;
	shr.s64 	%rd99, %rd98, 25;
	setp.lt.s64 	%p217, %rd96, 0;
	and.b64  	%rd100, %rd98, -33554432;
	setp.ne.s64 	%p218, %rd100, %rd96;
	and.pred  	%p219, %p217, %p218;
	selp.u64 	%rd101, 1, 0, %p219;
	sub.s64 	%rd102, %rd101, %rd99;
	shl.b64 	%rd103, %rd102, 25;
	add.s64 	%rd104, %rd103, %rd96;
	shl.b64 	%rd105, %rd104, 2;
	add.s64 	%rd106, %rd3, %rd105;
	st.global.v4.u32 	[%rd106], {%r7974, %r7972, %r7973, %r7971};
$L__BB0_87:                             // %pass16164
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r145, %r73, 64;
	setp.lt.u32 	%p220, %r145, 192;
	@%p220 bra 	$L__BB0_89;
// %bb.88:                              // %pass16249
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r153, %r7908, %r7959, %p200;
	selp.b32 	%r154, %r7959, %r7912, %p200;
	selp.b32 	%r155, %r7916, %r7961, %p200;
	selp.b32 	%r156, %r7961, %r7920, %p200;
	shl.b32 	%r7978, %r145, 10;
	or.b32  	%r7979, %r60, %r7978;
	cvt.s64.s32 	%rd107, %r7979;
	add.s64 	%rd108, %rd107, %rd7;
	shr.u64 	%rd109, %rd108, 39;
	add.s64 	%rd110, %rd108, %rd109;
	shr.s64 	%rd111, %rd110, 25;
	setp.lt.s64 	%p221, %rd108, 0;
	and.b64  	%rd112, %rd110, -33554432;
	setp.ne.s64 	%p222, %rd112, %rd108;
	and.pred  	%p223, %p221, %p222;
	selp.u64 	%rd113, 1, 0, %p223;
	sub.s64 	%rd114, %rd113, %rd111;
	shl.b64 	%rd115, %rd114, 25;
	add.s64 	%rd116, %rd115, %rd108;
	shl.b64 	%rd117, %rd116, 2;
	add.s64 	%rd118, %rd3, %rd117;
	st.global.v4.u32 	[%rd118], {%r153, %r155, %r154, %r156};
$L__BB0_89:                             // %pass16262
                                        //   in Loop: Header=BB0_83 Depth=1
	or.b32  	%r146, %r73, 128;
	selp.b32 	%r161, %r7940, %r7967, %p200;
	selp.b32 	%r162, %r7967, %r7944, %p200;
	selp.b32 	%r163, %r7948, %r7969, %p200;
	selp.b32 	%r164, %r7969, %r7952, %p200;
	setp.lt.u32 	%p224, %r146, 192;
	@%p224 bra 	$L__BB0_91;
// %bb.90:                              // %pass16347
                                        //   in Loop: Header=BB0_83 Depth=1
	selp.b32 	%r157, %r7924, %r7963, %p200;
	selp.b32 	%r158, %r7963, %r7928, %p200;
	selp.b32 	%r159, %r7932, %r7965, %p200;
	selp.b32 	%r160, %r7965, %r7936, %p200;
	shl.b32 	%r7980, %r146, 10;
	or.b32  	%r7981, %r60, %r7980;
	cvt.s64.s32 	%rd119, %r7981;
	add.s64 	%rd120, %rd119, %rd7;
	shr.u64 	%rd121, %rd120, 39;
	add.s64 	%rd122, %rd120, %rd121;
	shr.s64 	%rd123, %rd122, 25;
	setp.lt.s64 	%p225, %rd120, 0;
	and.b64  	%rd124, %rd122, -33554432;
	setp.ne.s64 	%p226, %rd124, %rd120;
	and.pred  	%p227, %p225, %p226;
	selp.u64 	%rd125, 1, 0, %p227;
	sub.s64 	%rd126, %rd125, %rd123;
	shl.b64 	%rd127, %rd126, 25;
	add.s64 	%rd128, %rd127, %rd120;
	shl.b64 	%rd129, %rd128, 2;
	add.s64 	%rd130, %rd3, %rd129;
	st.global.v4.u32 	[%rd130], {%r157, %r159, %r158, %r160};
	bra.uni 	$L__BB0_91;
$L__BB0_92:                             // %L38206
	st.global.u32 	[%rd4], %r7989;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r7988, 2;
	st.global.u32 	[%rd4], %r7988;
	mov.u64 	%rd145, exception3332;
	cvta.global.u64 	%rd146, %rd145;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd146;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd40;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7987, 3;
	st.global.u32 	[%rd4], %r7987;
	mov.u64 	%rd143, exception3332;
	cvta.global.u64 	%rd144, %rd143;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd144;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd40;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd45, exception13353;
	cvta.global.u64 	%rd46, %rd45;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd46;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd40;
	st.param.b32 	[param0+8], %r165;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
