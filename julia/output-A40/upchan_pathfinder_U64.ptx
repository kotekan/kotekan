// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception3342[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<182>;
	.reg .b16 	%rs<1185>;
	.reg .b32 	%r<7943>;
	.reg .f32 	%f<721>;
	.reg .b64 	%rd<153>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r112, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd41, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r119, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r119, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd42, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r113, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %tid.x;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r120, %r4, 9;
	or.b32  	%r121, %r2, %r3;
	or.b32  	%r122, %r121, %r120;
	mul.wide.u32 	%rd48, %r122, 4;
	add.s64 	%rd4, %rd42, %rd48;
	mov.u32 	%r123, 1;
	st.global.u32 	[%rd4], %r123;
	setp.gt.u32 	%p2, %r113, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r114, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r114, %r113;
	setp.gt.s32 	%p4, %r114, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r115, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r124, %r114, %r113;
	and.b32  	%r125, %r124, 255;
	setp.ne.s32 	%p6, %r125, 0;
	setp.gt.u32 	%p7, %r115, 511;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r116, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r116, %r115;
	setp.gt.s32 	%p10, %r116, 1023;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	not.b32 	%r126, %r115;
	add.s32 	%r127, %r126, %r116;
	and.b32  	%r128, %r127, 3;
	setp.eq.s32 	%p12, %r128, 0;
	@%p12 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r117, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p13, %r117, 0;
	@%p13 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r118, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p14, %r117, %r118;
	setp.lt.s32 	%p15, %r118, 385;
	and.pred  	%p16, %p14, %p15;
	@%p16 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass186
	bfe.u32 	%r57, %r3, 2, 1;
	shr.u32 	%r58, %r3, 4;
	shl.b32 	%r135, %r58, 1;
	shl.b32 	%r136, %r57, 2;
	shl.b32 	%r59, %r3, 3;
	and.b32  	%r137, %r59, 24;
	or.b32  	%r138, %r136, %r137;
	or.b32  	%r139, %r135, %r138;
	bfe.u32 	%r140, %r3, 3, 1;
	or.b32  	%r61, %r140, %r139;
	shl.b32 	%r62, %r61, 1;
	or.b32  	%r141, %r62, -255;
	cvt.rn.f32.s32 	%f46, %r141;
	mov.f32 	%f47, 0f44000000;
	div.approx.f32 	%f42, %f46, %f47;
	mov.f32 	%f71, 0f00000000;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.neu.f32 	%p22, %f44, 0f00000000;
	mov.f32 	%f720, 0f3F800000;
	mov.f32 	%f713, %f720;
	@%p22 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L598
	add.f32 	%f74, %f44, %f44;
	mov.b32 	%r149, %f74;
	and.b32  	%r150, %r149, -2147483648;
	or.b32  	%r151, %r150, 1056964608;
	mov.b32 	%f75, %r151;
	add.f32 	%f76, %f74, %f75;
	cvt.rzi.f32.f32 	%f77, %f76;
	abs.f32 	%f78, %f74;
	setp.gt.f32 	%p23, %f78, 0f4B000000;
	selp.f32 	%f79, %f74, %f77, %p23;
	cvt.rzi.f32.f32 	%f80, %f74;
	setp.lt.f32 	%p24, %f78, 0f3F000000;
	selp.f32 	%f81, %f80, %f79, %p24;
	cvt.rzi.s32.f32 	%r152, %f81;
	fma.rn.f32 	%f82, %f81, 0fBF000000, %f44;
	mul.f32 	%f83, %f82, %f82;
	fma.rn.f32 	%f84, %f83, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f85, %f83, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f86, %f84, %f83, 0fC0A55DF6;
	fma.rn.f32 	%f87, %f85, %f83, 0f4081E0CF;
	fma.rn.f32 	%f88, %f83, %f82, 0f00000000;
	fma.rn.f32 	%f89, %f87, %f83, 0fC09DE9E6;
	fma.rn.f32 	%f90, %f86, %f88, 0f00000000;
	fma.rn.f32 	%f91, %f89, %f83, 0f3F800000;
	fma.rn.f32 	%f92, %f82, 0f40490FDB, %f90;
	and.b32  	%r153, %r152, 1;
	setp.eq.b32 	%p25, %r153, 1;
	selp.f32 	%f93, %f91, %f92, %p25;
	and.b32  	%r154, %r152, 2;
	setp.eq.s32 	%p26, %r154, 0;
	sub.f32 	%f95, %f71, %f93;
	selp.f32 	%f96, %f93, %f95, %p26;
	cvt.rzi.f32.f32 	%f97, %f44;
	setp.eq.f32 	%p27, %f44, %f97;
	mul.f32 	%f98, %f44, 0f00000000;
	selp.f32 	%f99, %f98, %f96, %p27;
	mul.f32 	%f100, %f42, 0f41490FDB;
	div.approx.f32 	%f713, %f99, %f100;
$L__BB0_13:                             // %L602
	or.b32  	%r155, %r62, -191;
	cvt.rn.f32.s32 	%f104, %r155;
	div.approx.f32 	%f4, %f104, %f47;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p33, %f6, 0f00000000;
	mov.f32 	%f714, %f720;
	@%p33 bra 	$L__BB0_15;
// %bb.14:                              // %L616
	add.f32 	%f132, %f6, %f6;
	mov.b32 	%r163, %f132;
	and.b32  	%r164, %r163, -2147483648;
	or.b32  	%r165, %r164, 1056964608;
	mov.b32 	%f133, %r165;
	add.f32 	%f134, %f132, %f133;
	cvt.rzi.f32.f32 	%f135, %f134;
	abs.f32 	%f136, %f132;
	setp.gt.f32 	%p34, %f136, 0f4B000000;
	selp.f32 	%f137, %f132, %f135, %p34;
	cvt.rzi.f32.f32 	%f138, %f132;
	setp.lt.f32 	%p35, %f136, 0f3F000000;
	selp.f32 	%f139, %f138, %f137, %p35;
	cvt.rzi.s32.f32 	%r166, %f139;
	fma.rn.f32 	%f140, %f139, 0fBF000000, %f6;
	mul.f32 	%f141, %f140, %f140;
	fma.rn.f32 	%f142, %f141, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f143, %f141, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f144, %f142, %f141, 0fC0A55DF6;
	fma.rn.f32 	%f145, %f143, %f141, 0f4081E0CF;
	fma.rn.f32 	%f146, %f141, %f140, 0f00000000;
	fma.rn.f32 	%f147, %f145, %f141, 0fC09DE9E6;
	fma.rn.f32 	%f148, %f144, %f146, 0f00000000;
	fma.rn.f32 	%f149, %f147, %f141, 0f3F800000;
	fma.rn.f32 	%f150, %f140, 0f40490FDB, %f148;
	and.b32  	%r167, %r166, 1;
	setp.eq.b32 	%p36, %r167, 1;
	selp.f32 	%f151, %f149, %f150, %p36;
	and.b32  	%r168, %r166, 2;
	setp.eq.s32 	%p37, %r168, 0;
	sub.f32 	%f153, %f71, %f151;
	selp.f32 	%f154, %f151, %f153, %p37;
	cvt.rzi.f32.f32 	%f155, %f6;
	setp.eq.f32 	%p38, %f6, %f155;
	mul.f32 	%f156, %f6, 0f00000000;
	selp.f32 	%f157, %f156, %f154, %p38;
	mul.f32 	%f158, %f4, 0f41490FDB;
	div.approx.f32 	%f714, %f157, %f158;
$L__BB0_15:                             // %L620
	or.b32  	%r172, %r62, -127;
	cvt.rn.f32.s32 	%f163, %r172;
	div.approx.f32 	%f9, %f163, %f47;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p44, %f11, 0f00000000;
	mov.f32 	%f715, %f720;
	@%p44 bra 	$L__BB0_17;
// %bb.16:                              // %L696
	add.f32 	%f191, %f11, %f11;
	mov.b32 	%r180, %f191;
	and.b32  	%r181, %r180, -2147483648;
	or.b32  	%r182, %r181, 1056964608;
	mov.b32 	%f192, %r182;
	add.f32 	%f193, %f191, %f192;
	cvt.rzi.f32.f32 	%f194, %f193;
	abs.f32 	%f195, %f191;
	setp.gt.f32 	%p45, %f195, 0f4B000000;
	selp.f32 	%f196, %f191, %f194, %p45;
	cvt.rzi.f32.f32 	%f197, %f191;
	setp.lt.f32 	%p46, %f195, 0f3F000000;
	selp.f32 	%f198, %f197, %f196, %p46;
	cvt.rzi.s32.f32 	%r183, %f198;
	fma.rn.f32 	%f199, %f198, 0fBF000000, %f11;
	mul.f32 	%f200, %f199, %f199;
	fma.rn.f32 	%f201, %f200, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f202, %f200, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f203, %f201, %f200, 0fC0A55DF6;
	fma.rn.f32 	%f204, %f202, %f200, 0f4081E0CF;
	fma.rn.f32 	%f205, %f200, %f199, 0f00000000;
	fma.rn.f32 	%f206, %f204, %f200, 0fC09DE9E6;
	fma.rn.f32 	%f207, %f203, %f205, 0f00000000;
	fma.rn.f32 	%f208, %f206, %f200, 0f3F800000;
	fma.rn.f32 	%f209, %f199, 0f40490FDB, %f207;
	and.b32  	%r184, %r183, 1;
	setp.eq.b32 	%p47, %r184, 1;
	selp.f32 	%f210, %f208, %f209, %p47;
	and.b32  	%r185, %r183, 2;
	setp.eq.s32 	%p48, %r185, 0;
	sub.f32 	%f212, %f71, %f210;
	selp.f32 	%f213, %f210, %f212, %p48;
	cvt.rzi.f32.f32 	%f214, %f11;
	setp.eq.f32 	%p49, %f11, %f214;
	mul.f32 	%f215, %f11, 0f00000000;
	selp.f32 	%f216, %f215, %f213, %p49;
	mul.f32 	%f217, %f9, 0f41490FDB;
	div.approx.f32 	%f715, %f216, %f217;
$L__BB0_17:                             // %L700
	or.b32  	%r186, %r62, -63;
	cvt.rn.f32.s32 	%f221, %r186;
	div.approx.f32 	%f15, %f221, %f47;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p55, %f17, 0f00000000;
	mov.f32 	%f716, %f720;
	@%p55 bra 	$L__BB0_19;
// %bb.18:                              // %L714
	add.f32 	%f249, %f17, %f17;
	mov.b32 	%r194, %f249;
	and.b32  	%r195, %r194, -2147483648;
	or.b32  	%r196, %r195, 1056964608;
	mov.b32 	%f250, %r196;
	add.f32 	%f251, %f249, %f250;
	cvt.rzi.f32.f32 	%f252, %f251;
	abs.f32 	%f253, %f249;
	setp.gt.f32 	%p56, %f253, 0f4B000000;
	selp.f32 	%f254, %f249, %f252, %p56;
	cvt.rzi.f32.f32 	%f255, %f249;
	setp.lt.f32 	%p57, %f253, 0f3F000000;
	selp.f32 	%f256, %f255, %f254, %p57;
	cvt.rzi.s32.f32 	%r197, %f256;
	fma.rn.f32 	%f257, %f256, 0fBF000000, %f17;
	mul.f32 	%f258, %f257, %f257;
	fma.rn.f32 	%f259, %f258, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f260, %f258, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f261, %f259, %f258, 0fC0A55DF6;
	fma.rn.f32 	%f262, %f260, %f258, 0f4081E0CF;
	fma.rn.f32 	%f263, %f258, %f257, 0f00000000;
	fma.rn.f32 	%f264, %f262, %f258, 0fC09DE9E6;
	fma.rn.f32 	%f265, %f261, %f263, 0f00000000;
	fma.rn.f32 	%f266, %f264, %f258, 0f3F800000;
	fma.rn.f32 	%f267, %f257, 0f40490FDB, %f265;
	and.b32  	%r198, %r197, 1;
	setp.eq.b32 	%p58, %r198, 1;
	selp.f32 	%f268, %f266, %f267, %p58;
	and.b32  	%r199, %r197, 2;
	setp.eq.s32 	%p59, %r199, 0;
	sub.f32 	%f270, %f71, %f268;
	selp.f32 	%f271, %f268, %f270, %p59;
	cvt.rzi.f32.f32 	%f272, %f17;
	setp.eq.f32 	%p60, %f17, %f272;
	mul.f32 	%f273, %f17, 0f00000000;
	selp.f32 	%f274, %f273, %f271, %p60;
	mul.f32 	%f275, %f15, 0f41490FDB;
	div.approx.f32 	%f716, %f274, %f275;
$L__BB0_19:                             // %L718
	or.b32  	%r203, %r62, 1;
	cvt.rn.f32.s32 	%f280, %r203;
	div.approx.f32 	%f20, %f280, %f47;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p66, %f22, 0f00000000;
	mov.f32 	%f717, %f720;
	@%p66 bra 	$L__BB0_21;
// %bb.20:                              // %L794
	add.f32 	%f308, %f22, %f22;
	mov.b32 	%r211, %f308;
	and.b32  	%r212, %r211, -2147483648;
	or.b32  	%r213, %r212, 1056964608;
	mov.b32 	%f309, %r213;
	add.f32 	%f310, %f308, %f309;
	cvt.rzi.f32.f32 	%f311, %f310;
	abs.f32 	%f312, %f308;
	setp.gt.f32 	%p67, %f312, 0f4B000000;
	selp.f32 	%f313, %f308, %f311, %p67;
	cvt.rzi.f32.f32 	%f314, %f308;
	setp.lt.f32 	%p68, %f312, 0f3F000000;
	selp.f32 	%f315, %f314, %f313, %p68;
	cvt.rzi.s32.f32 	%r214, %f315;
	fma.rn.f32 	%f316, %f315, 0fBF000000, %f22;
	mul.f32 	%f317, %f316, %f316;
	fma.rn.f32 	%f318, %f317, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f319, %f317, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f320, %f318, %f317, 0fC0A55DF6;
	fma.rn.f32 	%f321, %f319, %f317, 0f4081E0CF;
	fma.rn.f32 	%f322, %f317, %f316, 0f00000000;
	fma.rn.f32 	%f323, %f321, %f317, 0fC09DE9E6;
	fma.rn.f32 	%f324, %f320, %f322, 0f00000000;
	fma.rn.f32 	%f325, %f323, %f317, 0f3F800000;
	fma.rn.f32 	%f326, %f316, 0f40490FDB, %f324;
	and.b32  	%r215, %r214, 1;
	setp.eq.b32 	%p69, %r215, 1;
	selp.f32 	%f327, %f325, %f326, %p69;
	and.b32  	%r216, %r214, 2;
	setp.eq.s32 	%p70, %r216, 0;
	sub.f32 	%f329, %f71, %f327;
	selp.f32 	%f330, %f327, %f329, %p70;
	cvt.rzi.f32.f32 	%f331, %f22;
	setp.eq.f32 	%p71, %f22, %f331;
	mul.f32 	%f332, %f22, 0f00000000;
	selp.f32 	%f333, %f332, %f330, %p71;
	mul.f32 	%f334, %f20, 0f41490FDB;
	div.approx.f32 	%f717, %f333, %f334;
$L__BB0_21:                             // %L798
	or.b32  	%r217, %r62, 65;
	cvt.rn.f32.s32 	%f338, %r217;
	div.approx.f32 	%f26, %f338, %f47;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p77, %f28, 0f00000000;
	mov.f32 	%f718, %f720;
	@%p77 bra 	$L__BB0_23;
// %bb.22:                              // %L812
	add.f32 	%f366, %f28, %f28;
	mov.b32 	%r225, %f366;
	and.b32  	%r226, %r225, -2147483648;
	or.b32  	%r227, %r226, 1056964608;
	mov.b32 	%f367, %r227;
	add.f32 	%f368, %f366, %f367;
	cvt.rzi.f32.f32 	%f369, %f368;
	abs.f32 	%f370, %f366;
	setp.gt.f32 	%p78, %f370, 0f4B000000;
	selp.f32 	%f371, %f366, %f369, %p78;
	cvt.rzi.f32.f32 	%f372, %f366;
	setp.lt.f32 	%p79, %f370, 0f3F000000;
	selp.f32 	%f373, %f372, %f371, %p79;
	cvt.rzi.s32.f32 	%r228, %f373;
	fma.rn.f32 	%f374, %f373, 0fBF000000, %f28;
	mul.f32 	%f375, %f374, %f374;
	fma.rn.f32 	%f376, %f375, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f377, %f375, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f378, %f376, %f375, 0fC0A55DF6;
	fma.rn.f32 	%f379, %f377, %f375, 0f4081E0CF;
	fma.rn.f32 	%f380, %f375, %f374, 0f00000000;
	fma.rn.f32 	%f381, %f379, %f375, 0fC09DE9E6;
	fma.rn.f32 	%f382, %f378, %f380, 0f00000000;
	fma.rn.f32 	%f383, %f381, %f375, 0f3F800000;
	fma.rn.f32 	%f384, %f374, 0f40490FDB, %f382;
	and.b32  	%r229, %r228, 1;
	setp.eq.b32 	%p80, %r229, 1;
	selp.f32 	%f385, %f383, %f384, %p80;
	and.b32  	%r230, %r228, 2;
	setp.eq.s32 	%p81, %r230, 0;
	sub.f32 	%f387, %f71, %f385;
	selp.f32 	%f388, %f385, %f387, %p81;
	cvt.rzi.f32.f32 	%f389, %f28;
	setp.eq.f32 	%p82, %f28, %f389;
	mul.f32 	%f390, %f28, 0f00000000;
	selp.f32 	%f391, %f390, %f388, %p82;
	mul.f32 	%f392, %f26, 0f41490FDB;
	div.approx.f32 	%f718, %f391, %f392;
$L__BB0_23:                             // %L816
	or.b32  	%r234, %r62, 129;
	cvt.rn.f32.s32 	%f397, %r234;
	div.approx.f32 	%f31, %f397, %f47;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p88, %f33, 0f00000000;
	mov.f32 	%f719, %f720;
	@%p88 bra 	$L__BB0_25;
// %bb.24:                              // %L892
	add.f32 	%f425, %f33, %f33;
	mov.b32 	%r242, %f425;
	and.b32  	%r243, %r242, -2147483648;
	or.b32  	%r244, %r243, 1056964608;
	mov.b32 	%f426, %r244;
	add.f32 	%f427, %f425, %f426;
	cvt.rzi.f32.f32 	%f428, %f427;
	abs.f32 	%f429, %f425;
	setp.gt.f32 	%p89, %f429, 0f4B000000;
	selp.f32 	%f430, %f425, %f428, %p89;
	cvt.rzi.f32.f32 	%f431, %f425;
	setp.lt.f32 	%p90, %f429, 0f3F000000;
	selp.f32 	%f432, %f431, %f430, %p90;
	cvt.rzi.s32.f32 	%r245, %f432;
	fma.rn.f32 	%f433, %f432, 0fBF000000, %f33;
	mul.f32 	%f434, %f433, %f433;
	fma.rn.f32 	%f435, %f434, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f436, %f434, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f437, %f435, %f434, 0fC0A55DF6;
	fma.rn.f32 	%f438, %f436, %f434, 0f4081E0CF;
	fma.rn.f32 	%f439, %f434, %f433, 0f00000000;
	fma.rn.f32 	%f440, %f438, %f434, 0fC09DE9E6;
	fma.rn.f32 	%f441, %f437, %f439, 0f00000000;
	fma.rn.f32 	%f442, %f440, %f434, 0f3F800000;
	fma.rn.f32 	%f443, %f433, 0f40490FDB, %f441;
	and.b32  	%r246, %r245, 1;
	setp.eq.b32 	%p91, %r246, 1;
	selp.f32 	%f444, %f442, %f443, %p91;
	and.b32  	%r247, %r245, 2;
	setp.eq.s32 	%p92, %r247, 0;
	sub.f32 	%f446, %f71, %f444;
	selp.f32 	%f447, %f444, %f446, %p92;
	cvt.rzi.f32.f32 	%f448, %f33;
	setp.eq.f32 	%p93, %f33, %f448;
	mul.f32 	%f449, %f33, 0f00000000;
	selp.f32 	%f450, %f449, %f447, %p93;
	mul.f32 	%f451, %f31, 0f41490FDB;
	div.approx.f32 	%f719, %f450, %f451;
$L__BB0_25:                             // %L896
	or.b32  	%r248, %r62, 193;
	cvt.rn.f32.s32 	%f455, %r248;
	div.approx.f32 	%f37, %f455, %f47;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p99, %f39, 0f00000000;
	@%p99 bra 	$L__BB0_27;
// %bb.26:                              // %L910
	add.f32 	%f483, %f39, %f39;
	mov.b32 	%r256, %f483;
	and.b32  	%r257, %r256, -2147483648;
	or.b32  	%r258, %r257, 1056964608;
	mov.b32 	%f484, %r258;
	add.f32 	%f485, %f483, %f484;
	cvt.rzi.f32.f32 	%f486, %f485;
	abs.f32 	%f487, %f483;
	setp.gt.f32 	%p100, %f487, 0f4B000000;
	selp.f32 	%f488, %f483, %f486, %p100;
	cvt.rzi.f32.f32 	%f489, %f483;
	setp.lt.f32 	%p101, %f487, 0f3F000000;
	selp.f32 	%f490, %f489, %f488, %p101;
	cvt.rzi.s32.f32 	%r259, %f490;
	fma.rn.f32 	%f491, %f490, 0fBF000000, %f39;
	mul.f32 	%f492, %f491, %f491;
	fma.rn.f32 	%f493, %f492, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f494, %f492, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f495, %f493, %f492, 0fC0A55DF6;
	fma.rn.f32 	%f496, %f494, %f492, 0f4081E0CF;
	fma.rn.f32 	%f497, %f492, %f491, 0f00000000;
	fma.rn.f32 	%f498, %f496, %f492, 0fC09DE9E6;
	fma.rn.f32 	%f499, %f495, %f497, 0f00000000;
	fma.rn.f32 	%f500, %f498, %f492, 0f3F800000;
	fma.rn.f32 	%f501, %f491, 0f40490FDB, %f499;
	and.b32  	%r260, %r259, 1;
	setp.eq.b32 	%p102, %r260, 1;
	selp.f32 	%f502, %f500, %f501, %p102;
	and.b32  	%r261, %r259, 2;
	setp.eq.s32 	%p103, %r261, 0;
	sub.f32 	%f504, %f71, %f502;
	selp.f32 	%f505, %f502, %f504, %p103;
	cvt.rzi.f32.f32 	%f506, %f39;
	setp.eq.f32 	%p104, %f39, %f506;
	mul.f32 	%f507, %f39, 0f00000000;
	selp.f32 	%f508, %f507, %f505, %p104;
	mul.f32 	%f509, %f37, 0f41490FDB;
	div.approx.f32 	%f720, %f508, %f509;
$L__BB0_27:                             // %L914
	setp.le.s32 	%p147, %r114, %r113;
	mov.u32 	%r7914, 0;
	@%p147 bra 	$L__BB0_38;
// %bb.28:                              // %L1437.lr.ph
	abs.f32 	%f48, %f42;
	abs.f32 	%f106, %f4;
	abs.f32 	%f165, %f9;
	abs.f32 	%f223, %f15;
	abs.f32 	%f282, %f20;
	abs.f32 	%f340, %f26;
	setp.gt.f32 	%p17, %f48, 0f4B800000;
	mul.f32 	%f49, %f42, 0f00000000;
	setp.gt.f32 	%p28, %f106, 0f4B800000;
	mul.f32 	%f107, %f4, 0f00000000;
	setp.gt.f32 	%p39, %f165, 0f4B800000;
	mul.f32 	%f166, %f9, 0f00000000;
	setp.gt.f32 	%p50, %f223, 0f4B800000;
	mul.f32 	%f224, %f15, 0f00000000;
	setp.gt.f32 	%p61, %f282, 0f4B800000;
	mul.f32 	%f283, %f20, 0f00000000;
	setp.gt.f32 	%p72, %f340, 0f4B800000;
	mul.f32 	%f341, %f26, 0f00000000;
	abs.f32 	%f399, %f31;
	selp.f32 	%f50, %f49, %f42, %p17;
	selp.f32 	%f108, %f107, %f4, %p28;
	selp.f32 	%f167, %f166, %f9, %p39;
	selp.f32 	%f225, %f224, %f15, %p50;
	selp.f32 	%f284, %f283, %f20, %p61;
	selp.f32 	%f342, %f341, %f26, %p72;
	setp.gt.f32 	%p83, %f399, 0f4B800000;
	mul.f32 	%f400, %f31, 0f00000000;
	add.f32 	%f51, %f50, %f50;
	add.f32 	%f109, %f108, %f108;
	add.f32 	%f168, %f167, %f167;
	add.f32 	%f226, %f225, %f225;
	add.f32 	%f285, %f284, %f284;
	add.f32 	%f343, %f342, %f342;
	selp.f32 	%f401, %f400, %f31, %p83;
	abs.f32 	%f457, %f37;
	mov.b32 	%r142, %f51;
	mov.b32 	%r156, %f109;
	mov.b32 	%r173, %f168;
	mov.b32 	%r187, %f226;
	mov.b32 	%r204, %f285;
	mov.b32 	%r218, %f343;
	add.f32 	%f402, %f401, %f401;
	setp.gt.f32 	%p94, %f457, 0f4B800000;
	mul.f32 	%f458, %f37, 0f00000000;
	and.b32  	%r143, %r142, -2147483648;
	and.b32  	%r157, %r156, -2147483648;
	and.b32  	%r174, %r173, -2147483648;
	and.b32  	%r188, %r187, -2147483648;
	and.b32  	%r205, %r204, -2147483648;
	and.b32  	%r219, %r218, -2147483648;
	mov.b32 	%r235, %f402;
	selp.f32 	%f459, %f458, %f37, %p94;
	or.b32  	%r144, %r143, 1056964608;
	or.b32  	%r158, %r157, 1056964608;
	or.b32  	%r175, %r174, 1056964608;
	or.b32  	%r189, %r188, 1056964608;
	or.b32  	%r206, %r205, 1056964608;
	or.b32  	%r220, %r219, 1056964608;
	and.b32  	%r236, %r235, -2147483648;
	add.f32 	%f460, %f459, %f459;
	mov.b32 	%f52, %r144;
	mov.b32 	%f110, %r158;
	mov.b32 	%f169, %r175;
	mov.b32 	%f227, %r189;
	mov.b32 	%f286, %r206;
	mov.b32 	%f344, %r220;
	or.b32  	%r237, %r236, 1056964608;
	mov.b32 	%r249, %f460;
	add.f32 	%f53, %f51, %f52;
	abs.f32 	%f55, %f51;
	add.f32 	%f111, %f109, %f110;
	abs.f32 	%f113, %f109;
	add.f32 	%f170, %f168, %f169;
	abs.f32 	%f172, %f168;
	add.f32 	%f228, %f226, %f227;
	abs.f32 	%f230, %f226;
	add.f32 	%f287, %f285, %f286;
	abs.f32 	%f289, %f285;
	add.f32 	%f345, %f343, %f344;
	abs.f32 	%f347, %f343;
	mov.b32 	%f403, %r237;
	and.b32  	%r250, %r249, -2147483648;
	cvt.rzi.f32.f32 	%f54, %f53;
	setp.gt.f32 	%p18, %f55, 0f4B000000;
	cvt.rzi.f32.f32 	%f112, %f111;
	setp.gt.f32 	%p29, %f113, 0f4B000000;
	cvt.rzi.f32.f32 	%f171, %f170;
	setp.gt.f32 	%p40, %f172, 0f4B000000;
	cvt.rzi.f32.f32 	%f229, %f228;
	setp.gt.f32 	%p51, %f230, 0f4B000000;
	cvt.rzi.f32.f32 	%f288, %f287;
	setp.gt.f32 	%p62, %f289, 0f4B000000;
	cvt.rzi.f32.f32 	%f346, %f345;
	setp.gt.f32 	%p73, %f347, 0f4B000000;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	or.b32  	%r251, %r250, 1056964608;
	selp.f32 	%f56, %f51, %f54, %p18;
	cvt.rzi.f32.f32 	%f57, %f51;
	setp.lt.f32 	%p19, %f55, 0f3F000000;
	selp.f32 	%f114, %f109, %f112, %p29;
	cvt.rzi.f32.f32 	%f115, %f109;
	setp.lt.f32 	%p30, %f113, 0f3F000000;
	selp.f32 	%f173, %f168, %f171, %p40;
	cvt.rzi.f32.f32 	%f174, %f168;
	setp.lt.f32 	%p41, %f172, 0f3F000000;
	selp.f32 	%f231, %f226, %f229, %p51;
	cvt.rzi.f32.f32 	%f232, %f226;
	setp.lt.f32 	%p52, %f230, 0f3F000000;
	selp.f32 	%f290, %f285, %f288, %p62;
	cvt.rzi.f32.f32 	%f291, %f285;
	setp.lt.f32 	%p63, %f289, 0f3F000000;
	selp.f32 	%f348, %f343, %f346, %p73;
	cvt.rzi.f32.f32 	%f349, %f343;
	setp.lt.f32 	%p74, %f347, 0f3F000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p84, %f406, 0f4B000000;
	mov.b32 	%f461, %r251;
	selp.f32 	%f58, %f57, %f56, %p19;
	selp.f32 	%f116, %f115, %f114, %p30;
	selp.f32 	%f175, %f174, %f173, %p41;
	selp.f32 	%f233, %f232, %f231, %p52;
	selp.f32 	%f292, %f291, %f290, %p63;
	selp.f32 	%f350, %f349, %f348, %p74;
	selp.f32 	%f407, %f402, %f405, %p84;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p85, %f406, 0f3F000000;
	add.f32 	%f462, %f460, %f461;
	abs.f32 	%f464, %f460;
	fma.rn.f32 	%f59, %f58, 0fBF000000, %f50;
	fma.rn.f32 	%f117, %f116, 0fBF000000, %f108;
	fma.rn.f32 	%f176, %f175, 0fBF000000, %f167;
	fma.rn.f32 	%f234, %f233, 0fBF000000, %f225;
	fma.rn.f32 	%f293, %f292, 0fBF000000, %f284;
	fma.rn.f32 	%f351, %f350, 0fBF000000, %f342;
	selp.f32 	%f409, %f408, %f407, %p85;
	cvt.rzi.f32.f32 	%f463, %f462;
	setp.gt.f32 	%p95, %f464, 0f4B000000;
	mul.f32 	%f60, %f59, %f59;
	mul.f32 	%f118, %f117, %f117;
	mul.f32 	%f177, %f176, %f176;
	mul.f32 	%f235, %f234, %f234;
	mul.f32 	%f294, %f293, %f293;
	mul.f32 	%f352, %f351, %f351;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	selp.f32 	%f465, %f460, %f463, %p95;
	cvt.rzi.f32.f32 	%f466, %f460;
	setp.lt.f32 	%p96, %f464, 0f3F000000;
	cvt.rzi.s32.f32 	%r145, %f58;
	fma.rn.f32 	%f61, %f60, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f62, %f60, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r159, %f116;
	fma.rn.f32 	%f119, %f118, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f120, %f118, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r176, %f175;
	fma.rn.f32 	%f178, %f177, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f179, %f177, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r190, %f233;
	fma.rn.f32 	%f236, %f235, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f237, %f235, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r207, %f292;
	fma.rn.f32 	%f295, %f294, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f296, %f294, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r221, %f350;
	fma.rn.f32 	%f353, %f352, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f354, %f352, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f411, %f410, %f410;
	selp.f32 	%f467, %f466, %f465, %p96;
	and.b32  	%r47, %r3, 16;
	shl.b32 	%r48, %r4, 6;
	shl.b32 	%r49, %r3, 1;
	add.s32 	%r146, %r145, 1;
	fma.rn.f32 	%f63, %f61, %f60, 0fC0A55DF6;
	fma.rn.f32 	%f64, %f62, %f60, 0f4081E0CF;
	fma.rn.f32 	%f65, %f60, %f59, 0f00000000;
	add.s32 	%r160, %r159, 1;
	fma.rn.f32 	%f121, %f119, %f118, 0fC0A55DF6;
	fma.rn.f32 	%f122, %f120, %f118, 0f4081E0CF;
	fma.rn.f32 	%f123, %f118, %f117, 0f00000000;
	add.s32 	%r177, %r176, 1;
	fma.rn.f32 	%f180, %f178, %f177, 0fC0A55DF6;
	fma.rn.f32 	%f181, %f179, %f177, 0f4081E0CF;
	fma.rn.f32 	%f182, %f177, %f176, 0f00000000;
	add.s32 	%r191, %r190, 1;
	fma.rn.f32 	%f238, %f236, %f235, 0fC0A55DF6;
	fma.rn.f32 	%f239, %f237, %f235, 0f4081E0CF;
	fma.rn.f32 	%f240, %f235, %f234, 0f00000000;
	add.s32 	%r208, %r207, 1;
	fma.rn.f32 	%f297, %f295, %f294, 0fC0A55DF6;
	fma.rn.f32 	%f298, %f296, %f294, 0f4081E0CF;
	fma.rn.f32 	%f299, %f294, %f293, 0f00000000;
	add.s32 	%r222, %r221, 1;
	fma.rn.f32 	%f355, %f353, %f352, 0fC0A55DF6;
	fma.rn.f32 	%f356, %f354, %f352, 0f4081E0CF;
	fma.rn.f32 	%f357, %f352, %f351, 0f00000000;
	cvt.rzi.s32.f32 	%r238, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f468, %f467, 0fBF000000, %f459;
	or.b32  	%r129, %r47, %r48;
	and.b32  	%r50, %r49, 8;
	shl.b32 	%r51, %r3, 2;
	fma.rn.f32 	%f66, %f64, %f60, 0fC09DE9E6;
	fma.rn.f32 	%f67, %f63, %f65, 0f00000000;
	and.b32  	%r147, %r146, 1;
	fma.rn.f32 	%f124, %f122, %f118, 0fC09DE9E6;
	fma.rn.f32 	%f125, %f121, %f123, 0f00000000;
	and.b32  	%r161, %r160, 1;
	fma.rn.f32 	%f183, %f181, %f177, 0fC09DE9E6;
	fma.rn.f32 	%f184, %f180, %f182, 0f00000000;
	and.b32  	%r178, %r177, 1;
	fma.rn.f32 	%f241, %f239, %f235, 0fC09DE9E6;
	fma.rn.f32 	%f242, %f238, %f240, 0f00000000;
	and.b32  	%r192, %r191, 1;
	fma.rn.f32 	%f300, %f298, %f294, 0fC09DE9E6;
	fma.rn.f32 	%f301, %f297, %f299, 0f00000000;
	and.b32  	%r209, %r208, 1;
	fma.rn.f32 	%f358, %f356, %f352, 0fC09DE9E6;
	fma.rn.f32 	%f359, %f355, %f357, 0f00000000;
	and.b32  	%r223, %r222, 1;
	add.s32 	%r239, %r238, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	mul.f32 	%f469, %f468, %f468;
	or.b32  	%r130, %r129, %r50;
	and.b32  	%r52, %r51, 32;
	fma.rn.f32 	%f68, %f66, %f60, 0f3F800000;
	fma.rn.f32 	%f69, %f59, 0f40490FDB, %f67;
	setp.eq.b32 	%p20, %r147, 1;
	fma.rn.f32 	%f126, %f124, %f118, 0f3F800000;
	fma.rn.f32 	%f127, %f117, 0f40490FDB, %f125;
	setp.eq.b32 	%p31, %r161, 1;
	fma.rn.f32 	%f185, %f183, %f177, 0f3F800000;
	fma.rn.f32 	%f186, %f176, 0f40490FDB, %f184;
	setp.eq.b32 	%p42, %r178, 1;
	fma.rn.f32 	%f243, %f241, %f235, 0f3F800000;
	fma.rn.f32 	%f244, %f234, 0f40490FDB, %f242;
	setp.eq.b32 	%p53, %r192, 1;
	fma.rn.f32 	%f302, %f300, %f294, 0f3F800000;
	fma.rn.f32 	%f303, %f293, 0f40490FDB, %f301;
	setp.eq.b32 	%p64, %r209, 1;
	fma.rn.f32 	%f360, %f358, %f352, 0f3F800000;
	fma.rn.f32 	%f361, %f351, 0f40490FDB, %f359;
	setp.eq.b32 	%p75, %r223, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r240, %r239, 1;
	cvt.rzi.s32.f32 	%r252, %f467;
	fma.rn.f32 	%f470, %f469, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f471, %f469, 0f3E684E12, 0fBFAAD2E0;
	or.b32  	%r131, %r130, %r52;
	and.b32  	%r53, %r51, 4;
	selp.f32 	%f70, %f68, %f69, %p20;
	and.b32  	%r148, %r146, 2;
	selp.f32 	%f128, %f126, %f127, %p31;
	and.b32  	%r162, %r160, 2;
	selp.f32 	%f187, %f185, %f186, %p42;
	and.b32  	%r179, %r177, 2;
	selp.f32 	%f245, %f243, %f244, %p53;
	and.b32  	%r193, %r191, 2;
	selp.f32 	%f304, %f302, %f303, %p64;
	and.b32  	%r210, %r208, 2;
	selp.f32 	%f362, %f360, %f361, %p75;
	and.b32  	%r224, %r222, 2;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p86, %r240, 1;
	add.s32 	%r253, %r252, 1;
	fma.rn.f32 	%f472, %f470, %f469, 0fC0A55DF6;
	fma.rn.f32 	%f473, %f471, %f469, 0f4081E0CF;
	fma.rn.f32 	%f474, %f469, %f468, 0f00000000;
	or.b32  	%r132, %r131, %r53;
	and.b32  	%r54, %r3, 2;
	setp.eq.s32 	%p21, %r148, 0;
	sub.f32 	%f72, %f71, %f70;
	setp.eq.s32 	%p32, %r162, 0;
	sub.f32 	%f130, %f71, %f128;
	setp.eq.s32 	%p43, %r179, 0;
	sub.f32 	%f189, %f71, %f187;
	setp.eq.s32 	%p54, %r193, 0;
	sub.f32 	%f247, %f71, %f245;
	setp.eq.s32 	%p65, %r210, 0;
	sub.f32 	%f306, %f71, %f304;
	setp.eq.s32 	%p76, %r224, 0;
	sub.f32 	%f364, %f71, %f362;
	selp.f32 	%f421, %f419, %f420, %p86;
	and.b32  	%r241, %r239, 2;
	fma.rn.f32 	%f475, %f473, %f469, 0fC09DE9E6;
	fma.rn.f32 	%f476, %f472, %f474, 0f00000000;
	and.b32  	%r254, %r253, 1;
	or.b32  	%r133, %r132, %r54;
	selp.f32 	%f73, %f70, %f72, %p21;
	selp.f32 	%f131, %f128, %f130, %p32;
	selp.f32 	%f190, %f187, %f189, %p43;
	selp.f32 	%f248, %f245, %f247, %p54;
	selp.f32 	%f307, %f304, %f306, %p65;
	selp.f32 	%f365, %f362, %f364, %p76;
	setp.eq.s32 	%p87, %r241, 0;
	sub.f32 	%f423, %f71, %f421;
	fma.rn.f32 	%f477, %f475, %f469, 0f3F800000;
	fma.rn.f32 	%f478, %f468, 0f40490FDB, %f476;
	setp.eq.b32 	%p97, %r254, 1;
	bfe.u32 	%r134, %r133, 1, 10;
	mul.f32 	%f43, %f73, %f73;
	mul.f32 	%f5, %f131, %f131;
	mul.f32 	%f10, %f190, %f190;
	mul.f32 	%f16, %f248, %f248;
	mul.f32 	%f21, %f307, %f307;
	mul.f32 	%f27, %f365, %f365;
	selp.f32 	%f424, %f421, %f423, %p87;
	selp.f32 	%f479, %f477, %f478, %p97;
	and.b32  	%r255, %r253, 2;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd49, %r134, 4;
	mul.f32 	%f102, %f713, %f43;
	mov.f32 	%f103, 0f42800000;
	mul.f32 	%f160, %f714, %f5;
	mul.f32 	%f219, %f715, %f10;
	mul.f32 	%f277, %f716, %f16;
	mul.f32 	%f336, %f717, %f21;
	mul.f32 	%f394, %f718, %f27;
	mul.f32 	%f32, %f424, %f424;
	setp.eq.s32 	%p98, %r255, 0;
	sub.f32 	%f481, %f71, %f479;
	add.s64 	%rd50, %rd1, %rd49;
	div.approx.f32 	%f3, %f102, %f103;
	div.approx.f32 	%f162, %f160, %f103;
	div.approx.f32 	%f14, %f219, %f103;
	div.approx.f32 	%f279, %f277, %f103;
	div.approx.f32 	%f25, %f336, %f103;
	div.approx.f32 	%f396, %f394, %f103;
	mul.f32 	%f453, %f719, %f32;
	selp.f32 	%f482, %f479, %f481, %p98;
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r55, [%rd50];
	shr.u32 	%r56, %r3, 1;
	shr.u32 	%r60, %r3, 3;
	mov.b32 	%r171, %f162;
	mov.b32 	%r170, %f3;
	mov.b32 	%r202, %f279;
	mov.b32 	%r201, %f14;
	mov.b32 	%r233, %f396;
	mov.b32 	%r232, %f25;
	div.approx.f32 	%f36, %f453, %f103;
	mul.f32 	%f38, %f482, %f482;
	// begin inline asm
	cvt.rn.f16x2.f32 %r169, %r171, %r170;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r200, %r202, %r201;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r231, %r233, %r232;
	// end inline asm
	mul.f32 	%f510, %f720, %f38;
	div.approx.f32 	%f512, %f510, %f103;
	mov.b32 	%r264, %f512;
	mov.b32 	%r263, %f36;
	// begin inline asm
	cvt.rn.f16x2.f32 %r262, %r264, %r263;
	// end inline asm
	mul.lo.s32 	%r301, %r61, 63;
	and.b32  	%r302, %r301, 127;
	cvt.rn.f32.s32 	%f513, %r302;
	div.approx.f32 	%f514, %f513, %f103;
	add.f32 	%f515, %f514, %f514;
	mov.b32 	%r303, %f515;
	and.b32  	%r304, %r303, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	mov.b32 	%f516, %r305;
	add.f32 	%f517, %f515, %f516;
	cvt.rzi.f32.f32 	%f518, %f517;
	abs.f32 	%f519, %f515;
	setp.gt.f32 	%p105, %f519, 0f4B000000;
	selp.f32 	%f520, %f515, %f518, %p105;
	cvt.rzi.f32.f32 	%f521, %f515;
	setp.lt.f32 	%p106, %f519, 0f3F000000;
	selp.f32 	%f522, %f521, %f520, %p106;
	cvt.rzi.s32.f32 	%r306, %f522;
	fma.rn.f32 	%f523, %f522, 0fBF000000, %f514;
	mul.f32 	%f524, %f523, %f523;
	fma.rn.f32 	%f525, %f524, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f526, %f524, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f527, %f525, %f524, 0fC0A55DF6;
	fma.rn.f32 	%f528, %f526, %f524, 0f4081E0CF;
	fma.rn.f32 	%f529, %f524, %f523, 0f00000000;
	fma.rn.f32 	%f530, %f528, %f524, 0fC09DE9E6;
	fma.rn.f32 	%f531, %f527, %f529, 0f00000000;
	fma.rn.f32 	%f532, %f530, %f524, 0f3F800000;
	fma.rn.f32 	%f533, %f523, 0f40490FDB, %f531;
	and.b32  	%r307, %r306, 1;
	setp.eq.b32 	%p107, %r307, 1;
	selp.f32 	%f534, %f532, %f533, %p107;
	selp.f32 	%f535, %f533, %f532, %p107;
	and.b32  	%r308, %r306, 2;
	setp.eq.s32 	%p108, %r308, 0;
	neg.f32 	%f536, %f534;
	selp.f32 	%f537, %f534, %f536, %p108;
	add.s32 	%r309, %r306, 1;
	and.b32  	%r310, %r309, 2;
	setp.eq.s32 	%p109, %r310, 0;
	sub.f32 	%f539, %f71, %f535;
	selp.f32 	%f540, %f535, %f539, %p109;
	cvt.rzi.f32.f32 	%f541, %f514;
	setp.eq.f32 	%p110, %f541, %f514;
	mul.f32 	%f542, %f514, 0f00000000;
	selp.f32 	%f543, %f542, %f537, %p110;
	abs.f32 	%f544, %f514;
	setp.gt.f32 	%p111, %f544, 0f4B800000;
	add.f32 	%f545, %f543, 0f3F800000;
	selp.f32 	%f546, %f545, %f540, %p111;
	add.s32 	%r311, %r301, 96;
	and.b32  	%r312, %r311, 127;
	cvt.rn.f32.s32 	%f547, %r312;
	div.approx.f32 	%f548, %f547, %f103;
	add.f32 	%f549, %f548, %f548;
	mov.b32 	%r313, %f549;
	and.b32  	%r314, %r313, -2147483648;
	or.b32  	%r315, %r314, 1056964608;
	mov.b32 	%f550, %r315;
	add.f32 	%f551, %f549, %f550;
	cvt.rzi.f32.f32 	%f552, %f551;
	abs.f32 	%f553, %f549;
	setp.gt.f32 	%p112, %f553, 0f4B000000;
	selp.f32 	%f554, %f549, %f552, %p112;
	cvt.rzi.f32.f32 	%f555, %f549;
	setp.lt.f32 	%p113, %f553, 0f3F000000;
	selp.f32 	%f556, %f555, %f554, %p113;
	cvt.rzi.s32.f32 	%r316, %f556;
	fma.rn.f32 	%f557, %f556, 0fBF000000, %f548;
	mul.f32 	%f558, %f557, %f557;
	fma.rn.f32 	%f559, %f558, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f560, %f558, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f561, %f559, %f558, 0fC0A55DF6;
	fma.rn.f32 	%f562, %f560, %f558, 0f4081E0CF;
	fma.rn.f32 	%f563, %f558, %f557, 0f00000000;
	fma.rn.f32 	%f564, %f562, %f558, 0fC09DE9E6;
	fma.rn.f32 	%f565, %f561, %f563, 0f00000000;
	fma.rn.f32 	%f566, %f564, %f558, 0f3F800000;
	fma.rn.f32 	%f567, %f557, 0f40490FDB, %f565;
	and.b32  	%r317, %r316, 1;
	setp.eq.b32 	%p114, %r317, 1;
	selp.f32 	%f568, %f566, %f567, %p114;
	selp.f32 	%f569, %f567, %f566, %p114;
	and.b32  	%r318, %r316, 2;
	setp.eq.s32 	%p115, %r318, 0;
	neg.f32 	%f570, %f568;
	selp.f32 	%f571, %f568, %f570, %p115;
	add.s32 	%r319, %r316, 1;
	and.b32  	%r320, %r319, 2;
	setp.eq.s32 	%p116, %r320, 0;
	sub.f32 	%f572, %f71, %f569;
	selp.f32 	%f573, %f569, %f572, %p116;
	cvt.rzi.f32.f32 	%f574, %f548;
	setp.eq.f32 	%p117, %f574, %f548;
	mul.f32 	%f575, %f548, 0f00000000;
	selp.f32 	%f576, %f575, %f571, %p117;
	abs.f32 	%f577, %f548;
	setp.gt.f32 	%p118, %f577, 0f4B800000;
	add.f32 	%f578, %f576, 0f3F800000;
	selp.f32 	%f579, %f578, %f573, %p118;
	mov.b32 	%r266, %f546;
	mov.b32 	%r267, %f579;
	// begin inline asm
	cvt.rn.f16x2.f32 %r265, %r267, %r266;
	// end inline asm
	mov.b32 	%r269, %f543;
	mov.b32 	%r270, %f576;
	// begin inline asm
	cvt.rn.f16x2.f32 %r268, %r270, %r269;
	// end inline asm
	and.b32  	%r321, %r60, 2;
	and.b32  	%r322, %r56, 4;
	or.b32  	%r323, %r57, %r321;
	or.b32  	%r324, %r323, %r322;
	and.b32  	%r325, %r49, 6;
	mul.lo.s32 	%r326, %r324, %r325;
	and.b32  	%r327, %r326, 14;
	cvt.rn.f32.s32 	%f580, %r327;
	mov.f32 	%f581, 0f41000000;
	div.approx.f32 	%f582, %f580, %f581;
	add.f32 	%f583, %f582, %f582;
	mov.b32 	%r328, %f583;
	and.b32  	%r329, %r328, -2147483648;
	or.b32  	%r330, %r329, 1056964608;
	mov.b32 	%f584, %r330;
	add.f32 	%f585, %f583, %f584;
	cvt.rzi.f32.f32 	%f586, %f585;
	abs.f32 	%f587, %f583;
	setp.gt.f32 	%p119, %f587, 0f4B000000;
	selp.f32 	%f588, %f583, %f586, %p119;
	cvt.rzi.f32.f32 	%f589, %f583;
	setp.lt.f32 	%p120, %f587, 0f3F000000;
	selp.f32 	%f590, %f589, %f588, %p120;
	cvt.rzi.s32.f32 	%r331, %f590;
	fma.rn.f32 	%f591, %f590, 0fBF000000, %f582;
	mul.f32 	%f592, %f591, %f591;
	fma.rn.f32 	%f593, %f592, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f594, %f592, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f595, %f593, %f592, 0fC0A55DF6;
	fma.rn.f32 	%f596, %f594, %f592, 0f4081E0CF;
	fma.rn.f32 	%f597, %f592, %f591, 0f00000000;
	fma.rn.f32 	%f598, %f596, %f592, 0fC09DE9E6;
	fma.rn.f32 	%f599, %f595, %f597, 0f00000000;
	fma.rn.f32 	%f600, %f598, %f592, 0f3F800000;
	fma.rn.f32 	%f601, %f591, 0f40490FDB, %f599;
	and.b32  	%r332, %r331, 1;
	setp.eq.b32 	%p121, %r332, 1;
	selp.f32 	%f602, %f600, %f601, %p121;
	selp.f32 	%f603, %f601, %f600, %p121;
	and.b32  	%r333, %r331, 2;
	setp.eq.s32 	%p122, %r333, 0;
	neg.f32 	%f604, %f602;
	selp.f32 	%f605, %f602, %f604, %p122;
	add.s32 	%r334, %r331, 1;
	and.b32  	%r335, %r334, 2;
	setp.eq.s32 	%p123, %r335, 0;
	sub.f32 	%f606, %f71, %f603;
	selp.f32 	%f607, %f603, %f606, %p123;
	cvt.rzi.f32.f32 	%f608, %f582;
	setp.eq.f32 	%p124, %f608, %f582;
	mul.f32 	%f609, %f582, 0f00000000;
	selp.f32 	%f610, %f609, %f605, %p124;
	abs.f32 	%f611, %f582;
	setp.gt.f32 	%p125, %f611, 0f4B800000;
	add.f32 	%f612, %f610, 0f3F800000;
	selp.f32 	%f613, %f612, %f607, %p125;
	or.b32  	%r336, %r49, 8;
	mul.lo.s32 	%r337, %r324, %r336;
	and.b32  	%r338, %r337, 14;
	cvt.rn.f32.s32 	%f614, %r338;
	div.approx.f32 	%f615, %f614, %f581;
	add.f32 	%f616, %f615, %f615;
	mov.b32 	%r339, %f616;
	and.b32  	%r340, %r339, -2147483648;
	or.b32  	%r341, %r340, 1056964608;
	mov.b32 	%f617, %r341;
	add.f32 	%f618, %f616, %f617;
	cvt.rzi.f32.f32 	%f619, %f618;
	abs.f32 	%f620, %f616;
	setp.gt.f32 	%p126, %f620, 0f4B000000;
	selp.f32 	%f621, %f616, %f619, %p126;
	cvt.rzi.f32.f32 	%f622, %f616;
	setp.lt.f32 	%p127, %f620, 0f3F000000;
	selp.f32 	%f623, %f622, %f621, %p127;
	cvt.rzi.s32.f32 	%r342, %f623;
	fma.rn.f32 	%f624, %f623, 0fBF000000, %f615;
	mul.f32 	%f625, %f624, %f624;
	fma.rn.f32 	%f626, %f625, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f627, %f625, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f628, %f626, %f625, 0fC0A55DF6;
	fma.rn.f32 	%f629, %f627, %f625, 0f4081E0CF;
	fma.rn.f32 	%f630, %f625, %f624, 0f00000000;
	fma.rn.f32 	%f631, %f629, %f625, 0fC09DE9E6;
	fma.rn.f32 	%f632, %f628, %f630, 0f00000000;
	fma.rn.f32 	%f633, %f631, %f625, 0f3F800000;
	fma.rn.f32 	%f634, %f624, 0f40490FDB, %f632;
	and.b32  	%r343, %r342, 1;
	setp.eq.b32 	%p128, %r343, 1;
	selp.f32 	%f635, %f633, %f634, %p128;
	selp.f32 	%f636, %f634, %f633, %p128;
	and.b32  	%r344, %r342, 2;
	setp.eq.s32 	%p129, %r344, 0;
	neg.f32 	%f637, %f635;
	selp.f32 	%f638, %f635, %f637, %p129;
	add.s32 	%r345, %r342, 1;
	and.b32  	%r346, %r345, 2;
	setp.eq.s32 	%p130, %r346, 0;
	sub.f32 	%f639, %f71, %f636;
	selp.f32 	%f640, %f636, %f639, %p130;
	cvt.rzi.f32.f32 	%f641, %f615;
	setp.eq.f32 	%p131, %f641, %f615;
	mul.f32 	%f642, %f615, 0f00000000;
	selp.f32 	%f643, %f642, %f638, %p131;
	abs.f32 	%f644, %f615;
	setp.gt.f32 	%p132, %f644, 0f4B800000;
	add.f32 	%f645, %f643, 0f3F800000;
	selp.f32 	%f646, %f645, %f640, %p132;
	mov.b32 	%r272, %f613;
	mov.b32 	%r273, %f646;
	// begin inline asm
	cvt.rn.f16x2.f32 %r271, %r273, %r272;
	// end inline asm
	mov.b32 	%r275, %f610;
	mov.b32 	%r276, %f643;
	// begin inline asm
	cvt.rn.f16x2.f32 %r274, %r276, %r275;
	// end inline asm
	xor.b32  	%r296, %r275, -2147483648;
	xor.b32  	%r297, %r276, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r277, %r297, %r296;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r280, %r273, %r272;
	// end inline asm
	cvt.rn.f32.s32 	%f647, %r326;
	div.approx.f32 	%f648, %f647, %f103;
	add.f32 	%f649, %f648, %f648;
	mov.b32 	%r347, %f649;
	and.b32  	%r348, %r347, -2147483648;
	or.b32  	%r349, %r348, 1056964608;
	mov.b32 	%f650, %r349;
	add.f32 	%f651, %f649, %f650;
	cvt.rzi.f32.f32 	%f652, %f651;
	abs.f32 	%f653, %f649;
	setp.gt.f32 	%p133, %f653, 0f4B000000;
	selp.f32 	%f654, %f649, %f652, %p133;
	cvt.rzi.f32.f32 	%f655, %f649;
	setp.lt.f32 	%p134, %f653, 0f3F000000;
	selp.f32 	%f656, %f655, %f654, %p134;
	cvt.rzi.s32.f32 	%r350, %f656;
	fma.rn.f32 	%f657, %f656, 0fBF000000, %f648;
	mul.f32 	%f658, %f657, %f657;
	fma.rn.f32 	%f659, %f658, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f660, %f658, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f661, %f659, %f658, 0fC0A55DF6;
	fma.rn.f32 	%f662, %f660, %f658, 0f4081E0CF;
	fma.rn.f32 	%f663, %f658, %f657, 0f00000000;
	fma.rn.f32 	%f664, %f662, %f658, 0fC09DE9E6;
	fma.rn.f32 	%f665, %f661, %f663, 0f00000000;
	fma.rn.f32 	%f666, %f664, %f658, 0f3F800000;
	fma.rn.f32 	%f667, %f657, 0f40490FDB, %f665;
	and.b32  	%r351, %r350, 1;
	setp.eq.b32 	%p135, %r351, 1;
	selp.f32 	%f668, %f666, %f667, %p135;
	selp.f32 	%f669, %f667, %f666, %p135;
	and.b32  	%r352, %r350, 2;
	setp.eq.s32 	%p136, %r352, 0;
	neg.f32 	%f670, %f668;
	selp.f32 	%f671, %f668, %f670, %p136;
	add.s32 	%r353, %r350, 1;
	and.b32  	%r354, %r353, 2;
	setp.eq.s32 	%p137, %r354, 0;
	sub.f32 	%f672, %f71, %f669;
	selp.f32 	%f673, %f669, %f672, %p137;
	cvt.rzi.f32.f32 	%f674, %f648;
	setp.eq.f32 	%p138, %f674, %f648;
	mul.f32 	%f675, %f648, 0f00000000;
	selp.f32 	%f676, %f675, %f671, %p138;
	mov.b32 	%r355, %f676;
	abs.f32 	%f677, %f648;
	setp.gt.f32 	%p139, %f677, 0f4B800000;
	add.f32 	%f678, %f676, 0f3F800000;
	selp.f32 	%f679, %f678, %f673, %p139;
	shl.b32 	%r356, %r324, 3;
	add.s32 	%r357, %r326, %r356;
	cvt.rn.f32.s32 	%f680, %r357;
	div.approx.f32 	%f681, %f680, %f103;
	add.f32 	%f682, %f681, %f681;
	mov.b32 	%r358, %f682;
	and.b32  	%r359, %r358, -2147483648;
	or.b32  	%r360, %r359, 1056964608;
	mov.b32 	%f683, %r360;
	add.f32 	%f684, %f682, %f683;
	cvt.rzi.f32.f32 	%f685, %f684;
	abs.f32 	%f686, %f682;
	setp.gt.f32 	%p140, %f686, 0f4B000000;
	selp.f32 	%f687, %f682, %f685, %p140;
	cvt.rzi.f32.f32 	%f688, %f682;
	setp.lt.f32 	%p141, %f686, 0f3F000000;
	selp.f32 	%f689, %f688, %f687, %p141;
	cvt.rzi.s32.f32 	%r361, %f689;
	fma.rn.f32 	%f690, %f689, 0fBF000000, %f681;
	mul.f32 	%f691, %f690, %f690;
	fma.rn.f32 	%f692, %f691, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f693, %f691, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f694, %f692, %f691, 0fC0A55DF6;
	fma.rn.f32 	%f695, %f693, %f691, 0f4081E0CF;
	fma.rn.f32 	%f696, %f691, %f690, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f691, 0fC09DE9E6;
	fma.rn.f32 	%f698, %f694, %f696, 0f00000000;
	fma.rn.f32 	%f699, %f697, %f691, 0f3F800000;
	fma.rn.f32 	%f700, %f690, 0f40490FDB, %f698;
	and.b32  	%r362, %r361, 1;
	setp.eq.b32 	%p142, %r362, 1;
	selp.f32 	%f701, %f699, %f700, %p142;
	selp.f32 	%f702, %f700, %f699, %p142;
	and.b32  	%r363, %r361, 2;
	setp.eq.s32 	%p143, %r363, 0;
	neg.f32 	%f703, %f701;
	selp.f32 	%f704, %f701, %f703, %p143;
	add.s32 	%r364, %r361, 1;
	and.b32  	%r365, %r364, 2;
	setp.eq.s32 	%p144, %r365, 0;
	sub.f32 	%f705, %f71, %f702;
	selp.f32 	%f706, %f702, %f705, %p144;
	cvt.rzi.f32.f32 	%f707, %f681;
	setp.eq.f32 	%p145, %f707, %f681;
	mul.f32 	%f708, %f681, 0f00000000;
	selp.f32 	%f709, %f708, %f704, %p145;
	mov.b32 	%r366, %f709;
	abs.f32 	%f710, %f681;
	setp.gt.f32 	%p146, %f710, 0f4B800000;
	add.f32 	%f711, %f709, 0f3F800000;
	selp.f32 	%f712, %f711, %f706, %p146;
	mov.b32 	%r285, %f712;
	mov.b32 	%r284, %f679;
	// begin inline asm
	cvt.rn.f16x2.f32 %r283, %r285, %r284;
	// end inline asm
	xor.b32  	%r288, %r366, -2147483648;
	xor.b32  	%r287, %r355, -2147483648;
	// begin inline asm
	cvt.rn.f16x2.f32 %r286, %r288, %r287;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r289, %r273, %r272;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r292, %r276, %r275;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r295, %r297, %r296;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r298, %r273, %r272;
	// end inline asm
	or.b32  	%r21, %r47, %r1;
	and.b32  	%r368, %r51, 16;
	add.s32 	%r369, %r4, %r117;
	shl.b32 	%r22, %r369, 5;
	and.b32  	%r23, %r51, 28;
	and.b32  	%r24, %r3, 8;
	shl.b32 	%r370, %r3, 4;
	or.b32  	%r371, %r24, %r370;
	shr.u32 	%r372, %r371, 2;
	and.b32  	%r373, %r372, 14;
	or.b32  	%r374, %r373, %r368;
	or.b32  	%r25, %r60, %r137;
	and.b32  	%r26, %r3, 4;
	shr.u32 	%r27, %r1, 1;
	and.b32  	%r28, %r2, 32;
	or.b32  	%r376, %r27, %r28;
	or.b32  	%r29, %r376, 8;
	or.b32  	%r30, %r376, 24;
	or.b32  	%r377, %r52, %r48;
	or.b32  	%r378, %r377, %r53;
	or.b32  	%r379, %r378, %r47;
	or.b32  	%r380, %r379, %r54;
	or.b32  	%r381, %r380, %r50;
	bfe.u32 	%r382, %r381, 1, 5;
	mul.lo.s32 	%r383, %r382, 65;
	add.s32 	%r384, %r376, %r383;
	add.s32 	%r385, %r29, %r383;
	or.b32  	%r386, %r376, 16;
	add.s32 	%r387, %r386, %r383;
	add.s32 	%r388, %r30, %r383;
	shl.b32 	%r389, %r1, 1;
	or.b32  	%r390, %r389, %r58;
	mul.lo.s32 	%r391, %r390, 65;
	add.s32 	%r392, %r391, %r368;
	add.s32 	%r393, %r392, %r373;
	mul.wide.u32 	%rd51, %r393, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	cvt.u64.u32 	%rd53, %r373;
	cvt.u64.u32 	%rd54, %r391;
	cvt.u64.u32 	%rd55, %r368;
	add.s64 	%rd56, %rd55, %rd54;
	add.s64 	%rd57, %rd56, %rd53;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd6, %rd52, %rd58;
	cvt.u64.u32 	%rd59, %r374;
	add.s64 	%rd60, %rd54, %rd59;
	shl.b64 	%rd61, %rd60, 2;
	add.s64 	%rd7, %rd52, %rd61;
	shl.b32 	%r394, %r115, 16;
	add.s32 	%r395, %r394, -196608;
	shl.b32 	%r396, %r1, 2;
	and.b32  	%r397, %r48, 1984;
	or.b32  	%r398, %r60, %r396;
	or.b32  	%r399, %r398, %r397;
	shl.b32 	%r400, %r399, 5;
	or.b32  	%r31, %r23, %r400;
	cvt.s64.s32 	%rd8, %r395;
	bfe.s32 	%r401, %r1, 1, 1;
	and.b32  	%r402, %r401, 520;
	and.b32  	%r403, %r1, 1;
	neg.s32 	%r404, %r403;
	and.b32  	%r405, %r404, 1040;
	shr.u32 	%r406, %r1, 3;
	bfe.s32 	%r407, %r1, 2, 1;
	and.b32  	%r408, %r407, 260;
	add.s32 	%r409, %r405, %r374;
	add.s32 	%r410, %r409, %r402;
	mad.lo.s32 	%r411, %r406, 130, %r410;
	mad.lo.s32 	%r412, %r58, 65, %r411;
	add.s32 	%r413, %r412, %r408;
	mul.wide.u32 	%rd62, %r413, 4;
	add.s64 	%rd9, %rd52, %rd62;
	add.s32 	%r414, %r413, 32;
	mul.wide.u32 	%rd63, %r414, 4;
	add.s64 	%rd10, %rd52, %rd63;
	add.s32 	%r415, %r413, 1;
	mul.wide.u32 	%rd64, %r415, 4;
	add.s64 	%rd11, %rd52, %rd64;
	add.s32 	%r416, %r413, 33;
	mul.wide.u32 	%rd65, %r416, 4;
	add.s64 	%rd12, %rd52, %rd65;
	add.s32 	%r417, %r413, 2081;
	mul.wide.u32 	%rd66, %r417, 4;
	add.s64 	%rd13, %rd52, %rd66;
	add.s32 	%r418, %r413, 2113;
	mul.wide.u32 	%rd67, %r418, 4;
	add.s64 	%rd14, %rd52, %rd67;
	add.s32 	%r419, %r413, 2082;
	mul.wide.u32 	%rd68, %r419, 4;
	add.s64 	%rd15, %rd52, %rd68;
	add.s32 	%r420, %r413, 2114;
	mul.wide.u32 	%rd69, %r420, 4;
	add.s64 	%rd16, %rd52, %rd69;
	add.s32 	%r421, %r413, 4162;
	mul.wide.u32 	%rd70, %r421, 4;
	add.s64 	%rd17, %rd52, %rd70;
	add.s32 	%r422, %r413, 4194;
	mul.wide.u32 	%rd71, %r422, 4;
	add.s64 	%rd18, %rd52, %rd71;
	add.s32 	%r423, %r413, 4163;
	mul.wide.u32 	%rd72, %r423, 4;
	add.s64 	%rd19, %rd52, %rd72;
	add.s32 	%r424, %r413, 4195;
	mul.wide.u32 	%rd73, %r424, 4;
	add.s64 	%rd20, %rd52, %rd73;
	add.s32 	%r425, %r413, 6243;
	mul.wide.u32 	%rd74, %r425, 4;
	add.s64 	%rd21, %rd52, %rd74;
	add.s32 	%r426, %r413, 6275;
	mul.wide.u32 	%rd75, %r426, 4;
	add.s64 	%rd22, %rd52, %rd75;
	add.s32 	%r427, %r413, 6244;
	mul.wide.u32 	%rd76, %r427, 4;
	add.s64 	%rd23, %rd52, %rd76;
	add.s32 	%r428, %r413, 6276;
	mul.wide.u32 	%rd77, %r428, 4;
	add.s64 	%rd24, %rd52, %rd77;
	mul.wide.u32 	%rd78, %r388, 4;
	add.s64 	%rd25, %rd52, %rd78;
	mul.wide.u32 	%rd79, %r387, 4;
	add.s64 	%rd26, %rd52, %rd79;
	mul.wide.u32 	%rd80, %r385, 4;
	add.s64 	%rd27, %rd52, %rd80;
	mul.wide.u32 	%rd81, %r384, 4;
	add.s64 	%rd28, %rd52, %rd81;
	mov.u16 	%rs1176, 25600;
	mov.u16 	%rs1072, 21504;
	mov.u16 	%rs1184, 18432;
	mov.u16 	%rs1142, -14592;
	mov.u32 	%r7942, %r7914;
	mov.u32 	%r7941, %r7914;
	mov.u32 	%r7940, %r7914;
	mov.u32 	%r7939, %r7914;
	mov.u32 	%r7938, %r7914;
	mov.u32 	%r7937, %r7914;
	mov.u32 	%r7936, %r7914;
	mov.u32 	%r7935, %r7914;
	mov.u32 	%r7934, %r7914;
	mov.u32 	%r7933, %r7914;
	mov.u32 	%r7932, %r7914;
	mov.u32 	%r7931, %r7914;
	mov.u32 	%r44, %r7914;
	bra.uni 	$L__BB0_29;
$L__BB0_37:                             // %pass16487
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r7908, %r7915, %r31;
	or.b32  	%r7909, %r7908, 196608;
	cvt.s64.s32 	%rd133, %r7909;
	add.s64 	%rd134, %rd133, %rd8;
	shr.u64 	%rd135, %rd134, 39;
	add.s64 	%rd136, %rd134, %rd135;
	shr.s64 	%rd137, %rd136, 25;
	setp.lt.s64 	%p176, %rd134, 0;
	and.b64  	%rd138, %rd136, -33554432;
	setp.ne.s64 	%p177, %rd138, %rd134;
	and.pred  	%p178, %p176, %p177;
	selp.u64 	%rd139, 1, 0, %p178;
	sub.s64 	%rd140, %rd139, %rd137;
	shl.b64 	%rd141, %rd140, 25;
	add.s64 	%rd142, %rd141, %rd134;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd3, %rd143;
	st.global.v4.u32 	[%rd144], {%r108, %r110, %r109, %r111};
	setp.ne.s32 	%p179, %r44, 32512;
	add.s32 	%r44, %r44, 256;
	add.s32 	%r7910, %r44, %r113;
	setp.lt.s32 	%p180, %r7910, %r114;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_29;
	bra.uni 	$L__BB0_38;
$L__BB0_29:                             // %L1437
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_30 Depth 2
	setp.eq.s32 	%p148, %r24, 0;
	or.b32  	%r494, %r44, %r51;
	and.b32  	%r495, %r494, 32544;
	or.b32  	%r496, %r21, %r495;
	add.s32 	%r497, %r496, %r113;
	mul.lo.s32 	%r498, %r497, 12288;
	or.b32  	%r499, %r23, %r498;
	add.s32 	%r500, %r499, %r22;
	mul.hi.s32 	%r501, %r500, 715827883;
	shr.u32 	%r502, %r501, 31;
	shr.s32 	%r503, %r501, 26;
	add.s32 	%r504, %r503, %r502;
	setp.lt.s32 	%p149, %r500, 0;
	mul.lo.s32 	%r505, %r504, 402653184;
	setp.ne.s32 	%p150, %r505, %r500;
	and.pred  	%p151, %p149, %p150;
	selp.s32 	%r506, -1, 0, %p151;
	add.s32 	%r507, %r504, %r506;
	mad.lo.s32 	%r508, %r507, -402653184, %r500;
	mul.wide.s32 	%rd82, %r508, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r509, %r510, %r511, %r512}, [%rd83];
	or.b32  	%r513, %r496, 64;
	add.s32 	%r514, %r513, %r113;
	mul.lo.s32 	%r515, %r514, 12288;
	or.b32  	%r516, %r23, %r515;
	add.s32 	%r517, %r516, %r22;
	mul.hi.s32 	%r518, %r517, 715827883;
	shr.u32 	%r519, %r518, 31;
	shr.s32 	%r520, %r518, 26;
	add.s32 	%r521, %r520, %r519;
	setp.lt.s32 	%p152, %r517, 0;
	mul.lo.s32 	%r522, %r521, 402653184;
	setp.ne.s32 	%p153, %r522, %r517;
	and.pred  	%p154, %p152, %p153;
	selp.s32 	%r523, -1, 0, %p154;
	add.s32 	%r524, %r521, %r523;
	mad.lo.s32 	%r525, %r524, -402653184, %r517;
	mul.wide.s32 	%rd84, %r525, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r526, %r527, %r528, %r529}, [%rd85];
	or.b32  	%r530, %r496, 128;
	add.s32 	%r531, %r530, %r113;
	mul.lo.s32 	%r532, %r531, 12288;
	or.b32  	%r533, %r23, %r532;
	add.s32 	%r534, %r533, %r22;
	mul.hi.s32 	%r535, %r534, 715827883;
	shr.u32 	%r536, %r535, 31;
	shr.s32 	%r537, %r535, 26;
	add.s32 	%r538, %r537, %r536;
	setp.lt.s32 	%p155, %r534, 0;
	mul.lo.s32 	%r539, %r538, 402653184;
	setp.ne.s32 	%p156, %r539, %r534;
	and.pred  	%p157, %p155, %p156;
	selp.s32 	%r540, -1, 0, %p157;
	add.s32 	%r541, %r538, %r540;
	mad.lo.s32 	%r542, %r541, -402653184, %r534;
	mul.wide.s32 	%rd86, %r542, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r543, %r544, %r545, %r546}, [%rd87];
	or.b32  	%r547, %r496, 192;
	add.s32 	%r548, %r547, %r113;
	mul.lo.s32 	%r549, %r548, 12288;
	or.b32  	%r550, %r23, %r549;
	add.s32 	%r551, %r550, %r22;
	mul.hi.s32 	%r552, %r551, 715827883;
	shr.u32 	%r553, %r552, 31;
	shr.s32 	%r554, %r552, 26;
	add.s32 	%r555, %r554, %r553;
	setp.lt.s32 	%p158, %r551, 0;
	mul.lo.s32 	%r556, %r555, 402653184;
	setp.ne.s32 	%p159, %r556, %r551;
	and.pred  	%p160, %p158, %p159;
	selp.s32 	%r557, -1, 0, %p160;
	add.s32 	%r558, %r555, %r557;
	mad.lo.s32 	%r559, %r558, -402653184, %r551;
	mul.wide.s32 	%rd88, %r559, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r560, %r561, %r562, %r563}, [%rd89];
	selp.b32 	%r564, %r511, %r509, %p148;
	shfl.sync.bfly.b32	%r565, %r564, 8, 31, -1;
	selp.b32 	%r430, %r509, %r565, %p148;
	selp.b32 	%r431, %r565, %r511, %p148;
	selp.b32 	%r566, %r512, %r510, %p148;
	shfl.sync.bfly.b32	%r567, %r566, 8, 31, -1;
	selp.b32 	%r438, %r510, %r567, %p148;
	selp.b32 	%r439, %r567, %r512, %p148;
	selp.b32 	%r568, %r528, %r526, %p148;
	shfl.sync.bfly.b32	%r569, %r568, 8, 31, -1;
	selp.b32 	%r446, %r526, %r569, %p148;
	selp.b32 	%r447, %r569, %r528, %p148;
	selp.b32 	%r570, %r529, %r527, %p148;
	shfl.sync.bfly.b32	%r571, %r570, 8, 31, -1;
	selp.b32 	%r454, %r527, %r571, %p148;
	selp.b32 	%r455, %r571, %r529, %p148;
	selp.b32 	%r572, %r545, %r543, %p148;
	shfl.sync.bfly.b32	%r573, %r572, 8, 31, -1;
	selp.b32 	%r462, %r543, %r573, %p148;
	selp.b32 	%r463, %r573, %r545, %p148;
	selp.b32 	%r574, %r546, %r544, %p148;
	shfl.sync.bfly.b32	%r575, %r574, 8, 31, -1;
	selp.b32 	%r470, %r544, %r575, %p148;
	selp.b32 	%r471, %r575, %r546, %p148;
	selp.b32 	%r576, %r562, %r560, %p148;
	shfl.sync.bfly.b32	%r577, %r576, 8, 31, -1;
	selp.b32 	%r478, %r560, %r577, %p148;
	selp.b32 	%r479, %r577, %r562, %p148;
	selp.b32 	%r578, %r563, %r561, %p148;
	shfl.sync.bfly.b32	%r579, %r578, 8, 31, -1;
	selp.b32 	%r486, %r561, %r579, %p148;
	selp.b32 	%r487, %r579, %r563, %p148;
	mov.u32 	%r488, 21520;
	// begin inline asm
	prmt.b32 %r429, %r430, %r431, %r488;
	// end inline asm
	mov.u32 	%r492, 30258;
	// begin inline asm
	prmt.b32 %r433, %r430, %r431, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r437, %r438, %r439, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r441, %r438, %r439, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r445, %r446, %r447, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r449, %r446, %r447, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r453, %r454, %r455, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r457, %r454, %r455, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r461, %r462, %r463, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r465, %r462, %r463, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r469, %r470, %r471, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r473, %r470, %r471, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r477, %r478, %r479, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r481, %r478, %r479, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r485, %r486, %r487, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r489, %r486, %r487, %r492;
	// end inline asm
	st.shared.u32 	[%rd9], %r429;
	st.shared.u32 	[%rd10], %r433;
	st.shared.u32 	[%rd11], %r437;
	st.shared.u32 	[%rd12], %r441;
	st.shared.u32 	[%rd13], %r445;
	st.shared.u32 	[%rd14], %r449;
	st.shared.u32 	[%rd15], %r453;
	st.shared.u32 	[%rd16], %r457;
	st.shared.u32 	[%rd17], %r461;
	st.shared.u32 	[%rd18], %r465;
	st.shared.u32 	[%rd19], %r469;
	st.shared.u32 	[%rd20], %r473;
	st.shared.u32 	[%rd21], %r477;
	st.shared.u32 	[%rd22], %r481;
	st.shared.u32 	[%rd23], %r485;
	st.shared.u32 	[%rd24], %r489;
	bar.sync 	0;
	or.b32  	%r580, %r44, %r25;
	or.b32  	%r45, %r580, %r26;
	shr.u32 	%r7929, %r45, 6;
	mov.u64 	%rd149, %rd28;
	mov.u64 	%rd150, %rd27;
	mov.u64 	%rd151, %rd26;
	mov.u64 	%rd152, %rd25;
	mov.u32 	%r7930, %r7914;
$L__BB0_30:                             // %pass5617
                                        //   Parent Loop BB0_29 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r7765, %r45, %r7930;
	bfe.s32 	%r7766, %r7765, 1, 1;
	and.b32  	%r7767, %r7766, 520;
	and.b32  	%r7768, %r7765, 1;
	neg.s32 	%r7769, %r7768;
	and.b32  	%r7770, %r7769, 1040;
	bfe.s32 	%r7771, %r7765, 3, 1;
	and.b32  	%r7772, %r7771, 130;
	bfe.s32 	%r7773, %r7765, 4, 1;
	and.b32  	%r7774, %r7773, 65;
	bfe.s32 	%r7775, %r7765, 2, 1;
	and.b32  	%r7776, %r7775, 260;
	and.b32  	%r7777, %r7929, 3;
	mul.lo.s32 	%r7778, %r7777, 2081;
	or.b32  	%r7779, %r7767, %r7770;
	or.b32  	%r7780, %r7779, %r27;
	or.b32  	%r7781, %r7772, %r28;
	or.b32  	%r7782, %r7781, %r7774;
	or.b32  	%r7783, %r7782, %r7776;
	add.s32 	%r7784, %r7783, %r7778;
	add.s32 	%r7785, %r7784, %r7780;
	mul.wide.u32 	%rd90, %r7785, 4;
	add.s64 	%rd92, %rd52, %rd90;
	ld.shared.u32 	%r7786, [%rd92];
	or.b32  	%r7787, %r29, %r7770;
	add.s32 	%r7788, %r7787, %r7767;
	add.s32 	%r7789, %r7788, %r7772;
	add.s32 	%r7790, %r7789, %r7774;
	add.s32 	%r7791, %r7790, %r7776;
	add.s32 	%r7792, %r7791, %r7778;
	mul.wide.u32 	%rd93, %r7792, 4;
	add.s64 	%rd94, %rd52, %rd93;
	ld.shared.u32 	%r7793, [%rd94];
	ld.shared.u32 	%r7794, [%rd92+64];
	add.s32 	%r7795, %r30, %r7770;
	add.s32 	%r7796, %r7795, %r7767;
	add.s32 	%r7797, %r7796, %r7772;
	add.s32 	%r7798, %r7797, %r7774;
	add.s32 	%r7799, %r7798, %r7776;
	add.s32 	%r7800, %r7799, %r7778;
	mul.wide.u32 	%rd95, %r7800, 4;
	add.s64 	%rd96, %rd52, %rd95;
	ld.shared.u32 	%r7801, [%rd96];
	// begin inline asm
	mov.b32 %r586, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r597, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r585, %r7786, -2004318072;
	mov.u32 	%r584, 983055;
	// begin inline asm
	lop3.b32 %r583, %r584, %r585, %r586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r587, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r588, %r586, %r587;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r591, %r583, %r588;
	// end inline asm
	mov.u32 	%r595, 15728880;
	// begin inline asm
	lop3.b32 %r594, %r595, %r585, %r597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r598, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r599, %r597, %r598;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r602, %r594, %r599;
	// end inline asm
	shr.u32 	%r607, %r585, 8;
	// begin inline asm
	lop3.b32 %r605, %r584, %r607, %r586, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r610, %r586, %r609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r613, %r605, %r610;
	// end inline asm
	// begin inline asm
	lop3.b32 %r616, %r595, %r607, %r597, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r620, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r621, %r597, %r620;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r624, %r616, %r621;
	// end inline asm
	// begin inline asm
	mov.b32 %r632, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r643, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r631, %r7793, -2004318072;
	// begin inline asm
	lop3.b32 %r629, %r584, %r631, %r632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r633, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r634, %r632, %r633;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r637, %r629, %r634;
	// end inline asm
	// begin inline asm
	lop3.b32 %r640, %r595, %r631, %r643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r644, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r645, %r643, %r644;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r648, %r640, %r645;
	// end inline asm
	shr.u32 	%r653, %r631, 8;
	// begin inline asm
	lop3.b32 %r651, %r584, %r653, %r632, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r655, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r656, %r632, %r655;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r659, %r651, %r656;
	// end inline asm
	// begin inline asm
	lop3.b32 %r662, %r595, %r653, %r643, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r666, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r667, %r643, %r666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r670, %r662, %r667;
	// end inline asm
	// begin inline asm
	mov.b32 %r678, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r689, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r677, %r7794, -2004318072;
	// begin inline asm
	lop3.b32 %r675, %r584, %r677, %r678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r679, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r680, %r678, %r679;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r683, %r675, %r680;
	// end inline asm
	// begin inline asm
	lop3.b32 %r686, %r595, %r677, %r689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r690, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r691, %r689, %r690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r694, %r686, %r691;
	// end inline asm
	shr.u32 	%r699, %r677, 8;
	// begin inline asm
	lop3.b32 %r697, %r584, %r699, %r678, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r701, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r702, %r678, %r701;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r705, %r697, %r702;
	// end inline asm
	// begin inline asm
	lop3.b32 %r708, %r595, %r699, %r689, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r712, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r713, %r689, %r712;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r716, %r708, %r713;
	// end inline asm
	// begin inline asm
	mov.b32 %r724, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r735, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r723, %r7801, -2004318072;
	// begin inline asm
	lop3.b32 %r721, %r584, %r723, %r724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r725, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r726, %r724, %r725;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r729, %r721, %r726;
	// end inline asm
	// begin inline asm
	lop3.b32 %r732, %r595, %r723, %r735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r736, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r737, %r735, %r736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r740, %r732, %r737;
	// end inline asm
	shr.u32 	%r745, %r723, 8;
	// begin inline asm
	lop3.b32 %r743, %r584, %r745, %r724, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r747, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r748, %r724, %r747;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r751, %r743, %r748;
	// end inline asm
	// begin inline asm
	lop3.b32 %r754, %r595, %r745, %r735, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r758, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r759, %r735, %r758;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r762, %r754, %r759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r765, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r767, %r765, %r591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r770, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r772, %r770, %r602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r775, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r777, %r775, %r613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r780, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r782, %r780, %r624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r785, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r787, %r785, %r637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r790, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r792, %r790, %r648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r795, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r797, %r795, %r659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r800, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r802, %r800, %r670;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r805, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r807, %r805, %r683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r810, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r812, %r810, %r694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r815, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r817, %r815, %r705;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r820, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r822, %r820, %r716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r825, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r827, %r825, %r729;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r830, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r832, %r830, %r740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r835, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r837, %r835, %r751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r840, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r842, %r840, %r762;
	// end inline asm
	// begin inline asm
	mov.b32 %r850, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r861, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r849, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r847, %r584, %r849, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r852, %r850, %r851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r855, %r847, %r852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r858, %r595, %r849, %r861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r863, %r861, %r862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r866, %r858, %r863;
	// end inline asm
	shr.u32 	%r871, %r849, 8;
	// begin inline asm
	lop3.b32 %r869, %r584, %r871, %r850, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r873, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r874, %r850, %r873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r877, %r869, %r874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r880, %r595, %r871, %r861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r861, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	mov.b32 %r896, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r907, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r895, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r893, %r584, %r895, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r897, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r898, %r896, %r897;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r901, %r893, %r898;
	// end inline asm
	// begin inline asm
	lop3.b32 %r904, %r595, %r895, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r908, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r909, %r907, %r908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r912, %r904, %r909;
	// end inline asm
	shr.u32 	%r917, %r895, 8;
	// begin inline asm
	lop3.b32 %r915, %r584, %r917, %r896, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r919, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r920, %r896, %r919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r923, %r915, %r920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r926, %r595, %r917, %r907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r907, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	mov.b32 %r942, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r953, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r941, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r939, %r584, %r941, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r944, %r942, %r943;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r947, %r939, %r944;
	// end inline asm
	// begin inline asm
	lop3.b32 %r950, %r595, %r941, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r954, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r955, %r953, %r954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r958, %r950, %r955;
	// end inline asm
	shr.u32 	%r963, %r941, 8;
	// begin inline asm
	lop3.b32 %r961, %r584, %r963, %r942, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r965, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r966, %r942, %r965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r969, %r961, %r966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r972, %r595, %r963, %r953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r953, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	mov.b32 %r988, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r999, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r987, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r985, %r584, %r987, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r989, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r990, %r988, %r989;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r993, %r985, %r990;
	// end inline asm
	// begin inline asm
	lop3.b32 %r996, %r595, %r987, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1000, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1001, %r999, %r1000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1004, %r996, %r1001;
	// end inline asm
	shr.u32 	%r1009, %r987, 8;
	// begin inline asm
	lop3.b32 %r1007, %r584, %r1009, %r988, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1011, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1012, %r988, %r1011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1015, %r1007, %r1012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1018, %r595, %r1009, %r999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r999, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1029, %r169, %r855, %r767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1033, %r169, %r866, %r772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1037, %r169, %r877, %r777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1041, %r169, %r888, %r782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1045, %r169, %r901, %r787;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1049, %r169, %r912, %r792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1053, %r169, %r923, %r797;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1057, %r169, %r934, %r802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1061, %r169, %r947, %r807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1065, %r169, %r958, %r812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1069, %r169, %r969, %r817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1073, %r169, %r980, %r822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1077, %r169, %r993, %r827;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1081, %r169, %r1004, %r832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1085, %r169, %r1015, %r837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1089, %r169, %r1026, %r842;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1097, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r1095, %r584, %r1097, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1098, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1106, %r595, %r1097, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1109, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	shr.u32 	%r1119, %r1097, 8;
	// begin inline asm
	lop3.b32 %r1117, %r584, %r1119, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1122, %r1098, %r1121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1125, %r1117, %r1122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1128, %r595, %r1119, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1109, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1143, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r1141, %r584, %r1143, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1144, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1152, %r595, %r1143, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1157, %r1155, %r1156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1160, %r1152, %r1157;
	// end inline asm
	shr.u32 	%r1165, %r1143, 8;
	// begin inline asm
	lop3.b32 %r1163, %r584, %r1165, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1144, %r1167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1171, %r1163, %r1168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1174, %r595, %r1165, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1155, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1189, %r7934, -2004318072;
	// begin inline asm
	lop3.b32 %r1187, %r584, %r1189, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1190, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1198, %r595, %r1189, %r1201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1203, %r1201, %r1202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1206, %r1198, %r1203;
	// end inline asm
	shr.u32 	%r1211, %r1189, 8;
	// begin inline asm
	lop3.b32 %r1209, %r584, %r1211, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1214, %r1190, %r1213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1217, %r1209, %r1214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1220, %r595, %r1211, %r1201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1225, %r1201, %r1224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1228, %r1220, %r1225;
	// end inline asm
	// begin inline asm
	mov.b32 %r1236, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1247, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1235, %r7933, -2004318072;
	// begin inline asm
	lop3.b32 %r1233, %r584, %r1235, %r1236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1237, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1238, %r1236, %r1237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1241, %r1233, %r1238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1244, %r595, %r1235, %r1247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1248, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1249, %r1247, %r1248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1252, %r1244, %r1249;
	// end inline asm
	shr.u32 	%r1257, %r1235, 8;
	// begin inline asm
	lop3.b32 %r1255, %r584, %r1257, %r1236, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1259, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1260, %r1236, %r1259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1263, %r1255, %r1260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1266, %r595, %r1257, %r1247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1270, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1271, %r1247, %r1270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1274, %r1266, %r1271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1279, %r1277, %r1103, %r1029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1283, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1285, %r1283, %r1114, %r1033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1291, %r1289, %r1125, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1297, %r1295, %r1136, %r1041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1303, %r1301, %r1149, %r1045;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1309, %r1307, %r1160, %r1049;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1313, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1315, %r1313, %r1171, %r1053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1321, %r1319, %r1182, %r1057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1327, %r1325, %r1195, %r1061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1333, %r1331, %r1206, %r1065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1339, %r1337, %r1217, %r1069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1343, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1345, %r1343, %r1228, %r1073;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1351, %r1349, %r1241, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1357, %r1355, %r1252, %r1081;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1363, %r1361, %r1263, %r1085;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1367, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1369, %r1367, %r1274, %r1089;
	// end inline asm
	// begin inline asm
	mov.b32 %r1378, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1389, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1377, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r1375, %r584, %r1377, %r1378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1379, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1380, %r1378, %r1379;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1383, %r1375, %r1380;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1386, %r595, %r1377, %r1389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1390, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1391, %r1389, %r1390;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1394, %r1386, %r1391;
	// end inline asm
	shr.u32 	%r1399, %r1377, 8;
	// begin inline asm
	lop3.b32 %r1397, %r584, %r1399, %r1378, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1401, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1402, %r1378, %r1401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1405, %r1397, %r1402;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1408, %r595, %r1399, %r1389, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1413, %r1389, %r1412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1416, %r1408, %r1413;
	// end inline asm
	// begin inline asm
	mov.b32 %r1424, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1435, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1423, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r1421, %r584, %r1423, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1425, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1426, %r1424, %r1425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1429, %r1421, %r1426;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1432, %r595, %r1423, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1436, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1437, %r1435, %r1436;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1440, %r1432, %r1437;
	// end inline asm
	shr.u32 	%r1445, %r1423, 8;
	// begin inline asm
	lop3.b32 %r1443, %r584, %r1445, %r1424, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1447, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1448, %r1424, %r1447;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1451, %r1443, %r1448;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1454, %r595, %r1445, %r1435, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1435, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	mov.b32 %r1470, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1481, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1469, %r7932, -2004318072;
	// begin inline asm
	lop3.b32 %r1467, %r584, %r1469, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1471, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1472, %r1470, %r1471;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1475, %r1467, %r1472;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1478, %r595, %r1469, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1482, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1483, %r1481, %r1482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1486, %r1478, %r1483;
	// end inline asm
	shr.u32 	%r1491, %r1469, 8;
	// begin inline asm
	lop3.b32 %r1489, %r584, %r1491, %r1470, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1493, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1494, %r1470, %r1493;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1497, %r1489, %r1494;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1500, %r595, %r1491, %r1481, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1481, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	mov.b32 %r1516, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r1527, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r1515, %r7931, -2004318072;
	// begin inline asm
	lop3.b32 %r1513, %r584, %r1515, %r1516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1517, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1518, %r1516, %r1517;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1521, %r1513, %r1518;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1524, %r595, %r1515, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1528, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1529, %r1527, %r1528;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1532, %r1524, %r1529;
	// end inline asm
	shr.u32 	%r1537, %r1515, 8;
	// begin inline asm
	lop3.b32 %r1535, %r584, %r1537, %r1516, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1539, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1540, %r1516, %r1539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1543, %r1535, %r1540;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1546, %r595, %r1537, %r1527, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1527, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1628, %r231, %r1383, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1625, %r231, %r1394, %r1285;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1637, %r231, %r1405, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1634, %r231, %r1416, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1646, %r231, %r1429, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1643, %r231, %r1440, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1655, %r231, %r1451, %r1315;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1652, %r231, %r1462, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1664, %r231, %r1475, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1661, %r231, %r1486, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1673, %r231, %r1497, %r1339;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1670, %r231, %r1508, %r1345;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1682, %r231, %r1521, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1679, %r231, %r1532, %r1357;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1691, %r231, %r1543, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1688, %r231, %r1554, %r1369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1621, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1623, %r1621, %r1625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1626, %r265, %r1628, %r1623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1630, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1632, %r1630, %r1634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1635, %r265, %r1637, %r1632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1639, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1641, %r1639, %r1643;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1644, %r265, %r1646, %r1641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1648, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1650, %r1648, %r1652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1653, %r265, %r1655, %r1650;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1657, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1659, %r1657, %r1661;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1662, %r265, %r1664, %r1659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1666, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1668, %r1666, %r1670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1671, %r265, %r1673, %r1668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1675, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1677, %r1675, %r1679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1680, %r265, %r1682, %r1677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1684, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1686, %r1684, %r1688;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1689, %r265, %r1691, %r1686;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1693, %r268, %r1628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1696, %r265, %r1625, %r1693;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1700, %r268, %r1637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1703, %r265, %r1634, %r1700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1707, %r268, %r1646;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r265, %r1643, %r1707;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1714, %r268, %r1655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1717, %r265, %r1652, %r1714;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1721, %r268, %r1664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r265, %r1661, %r1721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1728, %r268, %r1673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1731, %r265, %r1670, %r1728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1735, %r268, %r1682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r265, %r1679, %r1735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1742, %r268, %r1691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1745, %r265, %r1688, %r1742;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1836, %r1833}, {%r271, %r277, %r274, %r280}, {%r1626, %r1696}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1845, %r1842}, {%r271, %r277, %r274, %r280}, {%r1635, %r1703}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1854, %r1851}, {%r271, %r277, %r274, %r280}, {%r1644, %r1710}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1863, %r1860}, {%r271, %r277, %r274, %r280}, {%r1653, %r1717}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1872, %r1869}, {%r271, %r277, %r274, %r280}, {%r1662, %r1724}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1881, %r1878}, {%r271, %r277, %r274, %r280}, {%r1671, %r1731}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1890, %r1887}, {%r271, %r277, %r274, %r280}, {%r1680, %r1738}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1899, %r1896}, {%r271, %r277, %r274, %r280}, {%r1689, %r1745}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1829, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1831, %r1829, %r1833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r283, %r1836, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1838, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1840, %r1838, %r1842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r283, %r1845, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1847, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1849, %r1847, %r1851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r283, %r1854, %r1849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1856, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1858, %r1856, %r1860;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1861, %r283, %r1863, %r1858;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1865, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1867, %r1865, %r1869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1870, %r283, %r1872, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1874, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1876, %r1874, %r1878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r283, %r1881, %r1876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1883, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1885, %r1883, %r1887;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r283, %r1890, %r1885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1892, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1894, %r1892, %r1896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1897, %r283, %r1899, %r1894;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1901, %r286, %r1836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1904, %r283, %r1833, %r1901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1908, %r286, %r1845;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1911, %r283, %r1842, %r1908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1915, %r286, %r1854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1918, %r283, %r1851, %r1915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1922, %r286, %r1863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1925, %r283, %r1860, %r1922;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1929, %r286, %r1872;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1932, %r283, %r1869, %r1929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1936, %r286, %r1881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1939, %r283, %r1878, %r1936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1943, %r286, %r1890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1946, %r283, %r1887, %r1943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1950, %r286, %r1899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1953, %r283, %r1896, %r1950;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1957, %r1958}, {%r289, %r295, %r292, %r298}, {%r1834, %r1904}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1967, %r1968}, {%r289, %r295, %r292, %r298}, {%r1843, %r1911}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1977, %r1978}, {%r289, %r295, %r292, %r298}, {%r1852, %r1918}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1987, %r1988}, {%r289, %r295, %r292, %r298}, {%r1861, %r1925}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r1997, %r1998}, {%r289, %r295, %r292, %r298}, {%r1870, %r1932}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2007, %r2008}, {%r289, %r295, %r292, %r298}, {%r1879, %r1939}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2017, %r2018}, {%r289, %r295, %r292, %r298}, {%r1888, %r1946}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r2027, %r2028}, {%r289, %r295, %r292, %r298}, {%r1897, %r1953}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2037, %r55, %r1957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2040, %r55, %r1958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2043, %r55, %r1967;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2046, %r55, %r1968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2049, %r55, %r1977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2052, %r55, %r1978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2055, %r55, %r1987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2058, %r55, %r1988;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2061, %r55, %r1997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2064, %r55, %r1998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2067, %r55, %r2007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2070, %r55, %r2008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2073, %r55, %r2017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2076, %r55, %r2018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2079, %r55, %r2027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2082, %r55, %r2028;
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs1142, %rs1142};
	// end inline asm
	mov.u16 	%rs195, 18176;
	// begin inline asm
	mov.b32 %r2086, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2087, %r2037, %r2085;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2090, %r2087, %r2086;
	// end inline asm
	// begin inline asm
	mov.b32 %r2093, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2094, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2095, %r2040, %r2093;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2098, %r2095, %r2094;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2103, %r2043, %r2101;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2106, %r2103, %r2102;
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2111, %r2046, %r2109;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2114, %r2111, %r2110;
	// end inline asm
	// begin inline asm
	mov.b32 %r2117, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2118, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2119, %r2049, %r2117;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2122, %r2119, %r2118;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2126, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2127, %r2052, %r2125;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2130, %r2127, %r2126;
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2135, %r2055, %r2133;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2138, %r2135, %r2134;
	// end inline asm
	// begin inline asm
	mov.b32 %r2141, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2143, %r2058, %r2141;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2146, %r2143, %r2142;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2150, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2151, %r2061, %r2149;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2154, %r2151, %r2150;
	// end inline asm
	// begin inline asm
	mov.b32 %r2157, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2159, %r2064, %r2157;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2162, %r2159, %r2158;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2167, %r2067, %r2165;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2170, %r2167, %r2166;
	// end inline asm
	// begin inline asm
	mov.b32 %r2173, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2174, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2175, %r2070, %r2173;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2178, %r2175, %r2174;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2182, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2183, %r2073, %r2181;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2186, %r2183, %r2182;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2190, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2191, %r2076, %r2189;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2194, %r2191, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2197, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2198, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2199, %r2079, %r2197;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2202, %r2199, %r2198;
	// end inline asm
	// begin inline asm
	mov.b32 %r2205, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r2207, %r2082, %r2205;
	// end inline asm
	// begin inline asm
	min.f16x2 %r2210, %r2207, %r2206;
	// end inline asm
	// begin inline asm
	mov.b32 %r2216, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2215, %r2216, %r2214;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2218, %r2090, %r2215;
	// end inline asm
	// begin inline asm
	mov.b32 %r2221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2222, %r2216, %r2221;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2098, %r2222;
	// end inline asm
	// begin inline asm
	mov.b32 %r2228, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2229, %r2216, %r2228;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2232, %r2106, %r2229;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2216, %r2235;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2239, %r2114, %r2236;
	// end inline asm
	mov.u32 	%r2245, 25152;
	// begin inline asm
	prmt.b32 %r2242, %r2218, %r2232, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2246, %r2225, %r2239, %r2245;
	// end inline asm
	shl.b32 	%r2253, %r2246, 4;
	mov.u32 	%r2251, 252645135;
	// begin inline asm
	lop3.b32 %r2250, %r2251, %r2242, %r2253, 202;
	// end inline asm
	xor.b32  	%r7802, %r2250, -2004318072;
	// begin inline asm
	mov.b32 %r2257, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2255, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2256, %r2257, %r2255;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2259, %r2122, %r2256;
	// end inline asm
	// begin inline asm
	mov.b32 %r2262, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2263, %r2257, %r2262;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2266, %r2130, %r2263;
	// end inline asm
	// begin inline asm
	mov.b32 %r2269, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2270, %r2257, %r2269;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2273, %r2138, %r2270;
	// end inline asm
	// begin inline asm
	mov.b32 %r2276, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2277, %r2257, %r2276;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2280, %r2146, %r2277;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2283, %r2259, %r2273, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2287, %r2266, %r2280, %r2245;
	// end inline asm
	shl.b32 	%r2294, %r2287, 4;
	// begin inline asm
	lop3.b32 %r2291, %r2251, %r2283, %r2294, 202;
	// end inline asm
	xor.b32  	%r7803, %r2291, -2004318072;
	// begin inline asm
	mov.b32 %r2298, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2297, %r2298, %r2296;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2300, %r2154, %r2297;
	// end inline asm
	// begin inline asm
	mov.b32 %r2303, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2304, %r2298, %r2303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2307, %r2162, %r2304;
	// end inline asm
	// begin inline asm
	mov.b32 %r2310, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2311, %r2298, %r2310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2314, %r2170, %r2311;
	// end inline asm
	// begin inline asm
	mov.b32 %r2317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2318, %r2298, %r2317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2321, %r2178, %r2318;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2324, %r2300, %r2314, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2328, %r2307, %r2321, %r2245;
	// end inline asm
	shl.b32 	%r2335, %r2328, 4;
	// begin inline asm
	lop3.b32 %r2332, %r2251, %r2324, %r2335, 202;
	// end inline asm
	xor.b32  	%r7804, %r2332, -2004318072;
	// begin inline asm
	mov.b32 %r2339, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2337, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2338, %r2339, %r2337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2341, %r2186, %r2338;
	// end inline asm
	// begin inline asm
	mov.b32 %r2344, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2345, %r2339, %r2344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2348, %r2194, %r2345;
	// end inline asm
	// begin inline asm
	mov.b32 %r2351, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2352, %r2339, %r2351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2355, %r2202, %r2352;
	// end inline asm
	// begin inline asm
	mov.b32 %r2358, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2359, %r2339, %r2358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2362, %r2210, %r2359;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2365, %r2341, %r2355, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r2369, %r2348, %r2362, %r2245;
	// end inline asm
	shl.b32 	%r2376, %r2369, 4;
	// begin inline asm
	lop3.b32 %r2373, %r2251, %r2365, %r2376, 202;
	// end inline asm
	xor.b32  	%r7805, %r2373, -2004318072;
	st.shared.u32 	[%rd149], %r7802;
	st.shared.u32 	[%rd150], %r7803;
	st.shared.u32 	[%rd151], %r7804;
	st.shared.u32 	[%rd152], %r7805;
	ld.shared.u32 	%r7942, [%rd92];
	ld.shared.u32 	%r7941, [%rd94];
	ld.shared.u32 	%r7936, [%rd92+64];
	ld.shared.u32 	%r7935, [%rd96];
	// begin inline asm
	mov.b32 %r2382, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2393, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2381, %r7942, -2004318072;
	// begin inline asm
	lop3.b32 %r2379, %r584, %r2381, %r2382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2383, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2384, %r2382, %r2383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2387, %r2379, %r2384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2390, %r595, %r2381, %r2393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2394, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2395, %r2393, %r2394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2398, %r2390, %r2395;
	// end inline asm
	shr.u32 	%r2403, %r2381, 8;
	// begin inline asm
	lop3.b32 %r2401, %r584, %r2403, %r2382, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2405, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2406, %r2382, %r2405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2409, %r2401, %r2406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2412, %r595, %r2403, %r2393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2416, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2417, %r2393, %r2416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2420, %r2412, %r2417;
	// end inline asm
	// begin inline asm
	mov.b32 %r2428, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2439, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2427, %r7941, -2004318072;
	// begin inline asm
	lop3.b32 %r2425, %r584, %r2427, %r2428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2429, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2430, %r2428, %r2429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2433, %r2425, %r2430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2436, %r595, %r2427, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2440, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2441, %r2439, %r2440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2444, %r2436, %r2441;
	// end inline asm
	shr.u32 	%r2449, %r2427, 8;
	// begin inline asm
	lop3.b32 %r2447, %r584, %r2449, %r2428, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2451, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2452, %r2428, %r2451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2455, %r2447, %r2452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2458, %r595, %r2449, %r2439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2462, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2463, %r2439, %r2462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2466, %r2458, %r2463;
	// end inline asm
	// begin inline asm
	mov.b32 %r2474, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2473, %r7936, -2004318072;
	// begin inline asm
	lop3.b32 %r2471, %r584, %r2473, %r2474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2476, %r2474, %r2475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2479, %r2471, %r2476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2482, %r595, %r2473, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2485, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	shr.u32 	%r2495, %r2473, 8;
	// begin inline asm
	lop3.b32 %r2493, %r584, %r2495, %r2474, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2498, %r2474, %r2497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2501, %r2493, %r2498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2504, %r595, %r2495, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2485, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	// begin inline asm
	mov.b32 %r2520, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r2519, %r7935, -2004318072;
	// begin inline asm
	lop3.b32 %r2517, %r584, %r2519, %r2520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2522, %r2520, %r2521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2525, %r2517, %r2522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2528, %r595, %r2519, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2533, %r2531, %r2532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2536, %r2528, %r2533;
	// end inline asm
	shr.u32 	%r2541, %r2519, 8;
	// begin inline asm
	lop3.b32 %r2539, %r584, %r2541, %r2520, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2544, %r2520, %r2543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2547, %r2539, %r2544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2550, %r595, %r2541, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2555, %r2531, %r2554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2558, %r2550, %r2555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2561, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2563, %r2561, %r2387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2566, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2568, %r2566, %r2398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2571, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2573, %r2571, %r2409;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2576, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2578, %r2576, %r2420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2581, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2583, %r2581, %r2433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2586, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2588, %r2586, %r2444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2591, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2593, %r2591, %r2455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2596, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2598, %r2596, %r2466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2601, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2603, %r2601, %r2479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2606, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2608, %r2606, %r2490;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2611, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2613, %r2611, %r2501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2616, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2618, %r2616, %r2512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2621, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2623, %r2621, %r2525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2626, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2628, %r2626, %r2536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2631, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2633, %r2631, %r2547;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2636, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2638, %r2636, %r2558;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2643, %r584, %r1097, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2648, %r2646, %r2647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2651, %r2643, %r2648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2654, %r595, %r1097, %r2657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2659, %r2657, %r2658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2662, %r2654, %r2659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2665, %r584, %r1119, %r2646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2670, %r2646, %r2669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2673, %r2665, %r2670;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2676, %r595, %r1119, %r2657, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2681, %r2657, %r2680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2684, %r2676, %r2681;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2689, %r584, %r1143, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2694, %r2692, %r2693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2697, %r2689, %r2694;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2700, %r595, %r1143, %r2703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2704, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2705, %r2703, %r2704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2708, %r2700, %r2705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2711, %r584, %r1165, %r2692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2716, %r2692, %r2715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2719, %r2711, %r2716;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2722, %r595, %r1165, %r2703, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2727, %r2703, %r2726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2730, %r2722, %r2727;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2735, %r584, %r1189, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2740, %r2738, %r2739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2743, %r2735, %r2740;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2746, %r595, %r1189, %r2749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2750, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2751, %r2749, %r2750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2754, %r2746, %r2751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2757, %r584, %r1211, %r2738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2762, %r2738, %r2761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2765, %r2757, %r2762;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2768, %r595, %r1211, %r2749, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2773, %r2749, %r2772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2776, %r2768, %r2773;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2781, %r584, %r1235, %r2784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2785, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2786, %r2784, %r2785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2789, %r2781, %r2786;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2792, %r595, %r1235, %r2795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2796, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2797, %r2795, %r2796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2800, %r2792, %r2797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2803, %r584, %r1257, %r2784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2807, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2808, %r2784, %r2807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2811, %r2803, %r2808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2814, %r595, %r1257, %r2795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2818, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2819, %r2795, %r2818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2822, %r2814, %r2819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2825, %r169, %r2651, %r2563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2829, %r169, %r2662, %r2568;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2833, %r169, %r2673, %r2573;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2837, %r169, %r2684, %r2578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2841, %r169, %r2697, %r2583;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2845, %r169, %r2708, %r2588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2849, %r169, %r2719, %r2593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2853, %r169, %r2730, %r2598;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2857, %r169, %r2743, %r2603;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2861, %r169, %r2754, %r2608;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2865, %r169, %r2765, %r2613;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2869, %r169, %r2776, %r2618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2873, %r169, %r2789, %r2623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2877, %r169, %r2800, %r2628;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2881, %r169, %r2811, %r2633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2885, %r169, %r2822, %r2638;
	// end inline asm
	// begin inline asm
	mov.b32 %r2894, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2905, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2891, %r584, %r1377, %r2894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2896, %r2894, %r2895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2899, %r2891, %r2896;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2902, %r595, %r1377, %r2905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2906, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2907, %r2905, %r2906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2910, %r2902, %r2907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2913, %r584, %r1399, %r2894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2917, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2918, %r2894, %r2917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2921, %r2913, %r2918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2924, %r595, %r1399, %r2905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2928, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2929, %r2905, %r2928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2932, %r2924, %r2929;
	// end inline asm
	// begin inline asm
	mov.b32 %r2940, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2951, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2937, %r584, %r1423, %r2940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2941, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2942, %r2940, %r2941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2945, %r2937, %r2942;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2948, %r595, %r1423, %r2951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2952, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2953, %r2951, %r2952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2956, %r2948, %r2953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2959, %r584, %r1445, %r2940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2963, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2964, %r2940, %r2963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2967, %r2959, %r2964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2970, %r595, %r1445, %r2951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2974, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2975, %r2951, %r2974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2978, %r2970, %r2975;
	// end inline asm
	// begin inline asm
	mov.b32 %r2986, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r2997, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r2983, %r584, %r1469, %r2986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2987, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2988, %r2986, %r2987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2991, %r2983, %r2988;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2994, %r595, %r1469, %r2997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2998, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2999, %r2997, %r2998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3002, %r2994, %r2999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3005, %r584, %r1491, %r2986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3009, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3010, %r2986, %r3009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3013, %r3005, %r3010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3016, %r595, %r1491, %r2997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3020, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3021, %r2997, %r3020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3024, %r3016, %r3021;
	// end inline asm
	// begin inline asm
	mov.b32 %r3032, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3043, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3029, %r584, %r1515, %r3032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3033, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3034, %r3032, %r3033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3037, %r3029, %r3034;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3040, %r595, %r1515, %r3043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3044, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3045, %r3043, %r3044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3048, %r3040, %r3045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3051, %r584, %r1537, %r3032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3055, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3056, %r3032, %r3055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3059, %r3051, %r3056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3062, %r595, %r1537, %r3043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3066, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3067, %r3043, %r3066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3070, %r3062, %r3067;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3073, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3075, %r3073, %r2899, %r2825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3079, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3081, %r3079, %r2910, %r2829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3085, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r3085, %r2921, %r2833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3091, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r3091, %r2932, %r2837;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3097, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3099, %r3097, %r2945, %r2841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3103, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3105, %r3103, %r2956, %r2845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3109, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r3109, %r2967, %r2849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3115, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3117, %r3115, %r2978, %r2853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3121, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r3121, %r2991, %r2857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3127, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r3127, %r3002, %r2861;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3133, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3135, %r3133, %r3013, %r2865;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3139, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3141, %r3139, %r3024, %r2869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3145, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3147, %r3145, %r3037, %r2873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3151, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r3151, %r3048, %r2877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3157, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3159, %r3157, %r3059, %r2881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3163, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r3163, %r3070, %r2885;
	// end inline asm
	// begin inline asm
	mov.b32 %r3174, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3185, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3171, %r584, %r585, %r3174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3175, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3176, %r3174, %r3175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3179, %r3171, %r3176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3182, %r595, %r585, %r3185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3186, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3187, %r3185, %r3186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3190, %r3182, %r3187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3193, %r584, %r607, %r3174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3197, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3198, %r3174, %r3197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3201, %r3193, %r3198;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3204, %r595, %r607, %r3185, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3208, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3209, %r3185, %r3208;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3212, %r3204, %r3209;
	// end inline asm
	// begin inline asm
	mov.b32 %r3220, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3231, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3217, %r584, %r631, %r3220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3221, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3222, %r3220, %r3221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3225, %r3217, %r3222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3228, %r595, %r631, %r3231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3232, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3233, %r3231, %r3232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3236, %r3228, %r3233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3239, %r584, %r653, %r3220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3243, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3244, %r3220, %r3243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3247, %r3239, %r3244;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3250, %r595, %r653, %r3231, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3254, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3255, %r3231, %r3254;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3258, %r3250, %r3255;
	// end inline asm
	// begin inline asm
	mov.b32 %r3266, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3277, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3263, %r584, %r677, %r3266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3267, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3268, %r3266, %r3267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3271, %r3263, %r3268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3274, %r595, %r677, %r3277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3278, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3279, %r3277, %r3278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3282, %r3274, %r3279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3285, %r584, %r699, %r3266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3289, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3290, %r3266, %r3289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3293, %r3285, %r3290;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3296, %r595, %r699, %r3277, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3300, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3301, %r3277, %r3300;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3304, %r3296, %r3301;
	// end inline asm
	// begin inline asm
	mov.b32 %r3312, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r3323, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r3309, %r584, %r723, %r3312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3313, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3314, %r3312, %r3313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3317, %r3309, %r3314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3320, %r595, %r723, %r3323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3324, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3325, %r3323, %r3324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3328, %r3320, %r3325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3331, %r584, %r745, %r3312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3335, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3336, %r3312, %r3335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3339, %r3331, %r3336;
	// end inline asm
	// begin inline asm
	lop3.b32 %r3342, %r595, %r745, %r3323, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r3346, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3347, %r3323, %r3346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3350, %r3342, %r3347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3424, %r231, %r3179, %r3075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3421, %r231, %r3190, %r3081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r231, %r3201, %r3087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3430, %r231, %r3212, %r3093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r231, %r3225, %r3099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r231, %r3236, %r3105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r231, %r3247, %r3111;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3448, %r231, %r3258, %r3117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r231, %r3271, %r3123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r231, %r3282, %r3129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r231, %r3293, %r3135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3466, %r231, %r3304, %r3141;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r231, %r3317, %r3147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r231, %r3328, %r3153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r231, %r3339, %r3159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3484, %r231, %r3350, %r3165;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3417, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3419, %r3417, %r3421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3422, %r265, %r3424, %r3419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3426, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3428, %r3426, %r3430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3431, %r265, %r3433, %r3428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3435, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3437, %r3435, %r3439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3440, %r265, %r3442, %r3437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3444, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3446, %r3444, %r3448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3449, %r265, %r3451, %r3446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3453, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3455, %r3453, %r3457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3458, %r265, %r3460, %r3455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3462, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3464, %r3462, %r3466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3467, %r265, %r3469, %r3464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3471, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3473, %r3471, %r3475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3476, %r265, %r3478, %r3473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3480, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3482, %r3480, %r3484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r265, %r3487, %r3482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r268, %r3424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r265, %r3421, %r3489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r268, %r3433;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r265, %r3430, %r3496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r268, %r3442;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r265, %r3439, %r3503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3510, %r268, %r3451;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r265, %r3448, %r3510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r268, %r3460;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r265, %r3457, %r3517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r268, %r3469;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r265, %r3466, %r3524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r268, %r3478;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r265, %r3475, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r268, %r3487;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r265, %r3484, %r3538;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3632, %r3629}, {%r271, %r277, %r274, %r280}, {%r3422, %r3492}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3641, %r3638}, {%r271, %r277, %r274, %r280}, {%r3431, %r3499}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3650, %r3647}, {%r271, %r277, %r274, %r280}, {%r3440, %r3506}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3659, %r3656}, {%r271, %r277, %r274, %r280}, {%r3449, %r3513}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3668, %r3665}, {%r271, %r277, %r274, %r280}, {%r3458, %r3520}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3677, %r3674}, {%r271, %r277, %r274, %r280}, {%r3467, %r3527}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3686, %r3683}, {%r271, %r277, %r274, %r280}, {%r3476, %r3534}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3695, %r3692}, {%r271, %r277, %r274, %r280}, {%r3485, %r3541}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3625, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3627, %r3625, %r3629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3630, %r283, %r3632, %r3627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3634, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3636, %r3634, %r3638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3639, %r283, %r3641, %r3636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3643, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3645, %r3643, %r3647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3648, %r283, %r3650, %r3645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3652, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3654, %r3652, %r3656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3657, %r283, %r3659, %r3654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3661, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3663, %r3661, %r3665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3666, %r283, %r3668, %r3663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3670, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3672, %r3670, %r3674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3675, %r283, %r3677, %r3672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3679, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3681, %r3679, %r3683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3684, %r283, %r3686, %r3681;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3688, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3690, %r3688, %r3692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3693, %r283, %r3695, %r3690;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3697, %r286, %r3632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3700, %r283, %r3629, %r3697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3704, %r286, %r3641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3707, %r283, %r3638, %r3704;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3711, %r286, %r3650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3714, %r283, %r3647, %r3711;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3718, %r286, %r3659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3721, %r283, %r3656, %r3718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3725, %r286, %r3668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3728, %r283, %r3665, %r3725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3732, %r286, %r3677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3735, %r283, %r3674, %r3732;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3739, %r286, %r3686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3742, %r283, %r3683, %r3739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3746, %r286, %r3695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3749, %r283, %r3692, %r3746;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3753, %r3754}, {%r289, %r295, %r292, %r298}, {%r3630, %r3700}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3763, %r3764}, {%r289, %r295, %r292, %r298}, {%r3639, %r3707}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3773, %r3774}, {%r289, %r295, %r292, %r298}, {%r3648, %r3714}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3783, %r3784}, {%r289, %r295, %r292, %r298}, {%r3657, %r3721}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3793, %r3794}, {%r289, %r295, %r292, %r298}, {%r3666, %r3728}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3803, %r3804}, {%r289, %r295, %r292, %r298}, {%r3675, %r3735}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3813, %r3814}, {%r289, %r295, %r292, %r298}, {%r3684, %r3742}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3823, %r3824}, {%r289, %r295, %r292, %r298}, {%r3693, %r3749}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3833, %r55, %r3753;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3836, %r55, %r3754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3839, %r55, %r3763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3842, %r55, %r3764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3845, %r55, %r3773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3848, %r55, %r3774;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3851, %r55, %r3783;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3854, %r55, %r3784;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3857, %r55, %r3793;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3860, %r55, %r3794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3863, %r55, %r3803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3866, %r55, %r3804;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3869, %r55, %r3813;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3872, %r55, %r3814;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3875, %r55, %r3823;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3878, %r55, %r3824;
	// end inline asm
	// begin inline asm
	mov.b32 %r3881, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3882, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3883, %r3833, %r3881;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3886, %r3883, %r3882;
	// end inline asm
	// begin inline asm
	mov.b32 %r3889, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3890, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3891, %r3836, %r3889;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3894, %r3891, %r3890;
	// end inline asm
	// begin inline asm
	mov.b32 %r3897, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3898, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3899, %r3839, %r3897;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3902, %r3899, %r3898;
	// end inline asm
	// begin inline asm
	mov.b32 %r3905, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3906, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3907, %r3842, %r3905;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3910, %r3907, %r3906;
	// end inline asm
	// begin inline asm
	mov.b32 %r3913, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3914, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3915, %r3845, %r3913;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3918, %r3915, %r3914;
	// end inline asm
	// begin inline asm
	mov.b32 %r3921, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3922, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3923, %r3848, %r3921;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3926, %r3923, %r3922;
	// end inline asm
	// begin inline asm
	mov.b32 %r3929, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3930, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3931, %r3851, %r3929;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3934, %r3931, %r3930;
	// end inline asm
	// begin inline asm
	mov.b32 %r3937, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3938, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3939, %r3854, %r3937;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3942, %r3939, %r3938;
	// end inline asm
	// begin inline asm
	mov.b32 %r3945, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3946, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3947, %r3857, %r3945;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3950, %r3947, %r3946;
	// end inline asm
	// begin inline asm
	mov.b32 %r3953, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3954, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3955, %r3860, %r3953;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3958, %r3955, %r3954;
	// end inline asm
	// begin inline asm
	mov.b32 %r3961, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3962, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3963, %r3863, %r3961;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3966, %r3963, %r3962;
	// end inline asm
	// begin inline asm
	mov.b32 %r3969, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3970, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3971, %r3866, %r3969;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3974, %r3971, %r3970;
	// end inline asm
	// begin inline asm
	mov.b32 %r3977, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3978, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3979, %r3869, %r3977;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3982, %r3979, %r3978;
	// end inline asm
	// begin inline asm
	mov.b32 %r3985, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3986, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3987, %r3872, %r3985;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3990, %r3987, %r3986;
	// end inline asm
	// begin inline asm
	mov.b32 %r3993, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r3994, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r3995, %r3875, %r3993;
	// end inline asm
	// begin inline asm
	min.f16x2 %r3998, %r3995, %r3994;
	// end inline asm
	// begin inline asm
	mov.b32 %r4001, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r4002, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4003, %r3878, %r4001;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4006, %r4003, %r4002;
	// end inline asm
	// begin inline asm
	mov.b32 %r4012, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4010, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4011, %r4012, %r4010;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4014, %r3886, %r4011;
	// end inline asm
	// begin inline asm
	mov.b32 %r4017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4018, %r4012, %r4017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4021, %r3894, %r4018;
	// end inline asm
	// begin inline asm
	mov.b32 %r4024, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4025, %r4012, %r4024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4028, %r3902, %r4025;
	// end inline asm
	// begin inline asm
	mov.b32 %r4031, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4032, %r4012, %r4031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4035, %r3910, %r4032;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4038, %r4014, %r4028, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4042, %r4021, %r4035, %r2245;
	// end inline asm
	shl.b32 	%r4049, %r4042, 4;
	// begin inline asm
	lop3.b32 %r4046, %r2251, %r4038, %r4049, 202;
	// end inline asm
	xor.b32  	%r7806, %r4046, -2004318072;
	// begin inline asm
	mov.b32 %r4053, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4051, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4052, %r4053, %r4051;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4055, %r3918, %r4052;
	// end inline asm
	// begin inline asm
	mov.b32 %r4058, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4059, %r4053, %r4058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4062, %r3926, %r4059;
	// end inline asm
	// begin inline asm
	mov.b32 %r4065, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4066, %r4053, %r4065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4069, %r3934, %r4066;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4073, %r4053, %r4072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4076, %r3942, %r4073;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4079, %r4055, %r4069, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4083, %r4062, %r4076, %r2245;
	// end inline asm
	shl.b32 	%r4090, %r4083, 4;
	// begin inline asm
	lop3.b32 %r4087, %r2251, %r4079, %r4090, 202;
	// end inline asm
	xor.b32  	%r7807, %r4087, -2004318072;
	// begin inline asm
	mov.b32 %r4094, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4093, %r4094, %r4092;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4096, %r3950, %r4093;
	// end inline asm
	// begin inline asm
	mov.b32 %r4099, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4100, %r4094, %r4099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4103, %r3958, %r4100;
	// end inline asm
	// begin inline asm
	mov.b32 %r4106, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4107, %r4094, %r4106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4110, %r3966, %r4107;
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4114, %r4094, %r4113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4117, %r3974, %r4114;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4120, %r4096, %r4110, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4124, %r4103, %r4117, %r2245;
	// end inline asm
	shl.b32 	%r4131, %r4124, 4;
	// begin inline asm
	lop3.b32 %r4128, %r2251, %r4120, %r4131, 202;
	// end inline asm
	xor.b32  	%r7808, %r4128, -2004318072;
	// begin inline asm
	mov.b32 %r4135, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4134, %r4135, %r4133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4137, %r3982, %r4134;
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4141, %r4135, %r4140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4144, %r3990, %r4141;
	// end inline asm
	// begin inline asm
	mov.b32 %r4147, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4148, %r4135, %r4147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4151, %r3998, %r4148;
	// end inline asm
	// begin inline asm
	mov.b32 %r4154, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4155, %r4135, %r4154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4158, %r4006, %r4155;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4161, %r4137, %r4151, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4165, %r4144, %r4158, %r2245;
	// end inline asm
	shl.b32 	%r4172, %r4165, 4;
	// begin inline asm
	lop3.b32 %r4169, %r2251, %r4161, %r4172, 202;
	// end inline asm
	xor.b32  	%r7809, %r4169, -2004318072;
	st.shared.u32 	[%rd149], %r7806;
	st.shared.u32 	[%rd150], %r7807;
	st.shared.u32 	[%rd151], %r7808;
	st.shared.u32 	[%rd152], %r7809;
	ld.shared.u32 	%r7940, [%rd92];
	ld.shared.u32 	%r7939, [%rd94];
	ld.shared.u32 	%r7934, [%rd92+64];
	ld.shared.u32 	%r7933, [%rd96];
	// begin inline asm
	mov.b32 %r4178, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4177, %r7940, -2004318072;
	// begin inline asm
	lop3.b32 %r4175, %r584, %r4177, %r4178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4179, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4180, %r4178, %r4179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4183, %r4175, %r4180;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4186, %r595, %r4177, %r4189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4191, %r4189, %r4190;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4194, %r4186, %r4191;
	// end inline asm
	shr.u32 	%r4199, %r4177, 8;
	// begin inline asm
	lop3.b32 %r4197, %r584, %r4199, %r4178, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4202, %r4178, %r4201;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4205, %r4197, %r4202;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4208, %r595, %r4199, %r4189, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4213, %r4189, %r4212;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4216, %r4208, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4235, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4223, %r7939, -2004318072;
	// begin inline asm
	lop3.b32 %r4221, %r584, %r4223, %r4224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4226, %r4224, %r4225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4229, %r4221, %r4226;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4232, %r595, %r4223, %r4235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4237, %r4235, %r4236;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4240, %r4232, %r4237;
	// end inline asm
	shr.u32 	%r4245, %r4223, 8;
	// begin inline asm
	lop3.b32 %r4243, %r584, %r4245, %r4224, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4248, %r4224, %r4247;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4251, %r4243, %r4248;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4254, %r595, %r4245, %r4235, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4258, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4259, %r4235, %r4258;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4262, %r4254, %r4259;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4269, %r7934, -2004318072;
	// begin inline asm
	lop3.b32 %r4267, %r584, %r4269, %r4270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4272, %r4270, %r4271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4275, %r4267, %r4272;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4278, %r595, %r4269, %r4281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4282, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4283, %r4281, %r4282;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4286, %r4278, %r4283;
	// end inline asm
	shr.u32 	%r4291, %r4269, 8;
	// begin inline asm
	lop3.b32 %r4289, %r584, %r4291, %r4270, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4293, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4294, %r4270, %r4293;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4297, %r4289, %r4294;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4300, %r595, %r4291, %r4281, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4305, %r4281, %r4304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4308, %r4300, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4316, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r4315, %r7933, -2004318072;
	// begin inline asm
	lop3.b32 %r4313, %r584, %r4315, %r4316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4318, %r4316, %r4317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4321, %r4313, %r4318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4324, %r595, %r4315, %r4327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4327, %r4328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4332, %r4324, %r4329;
	// end inline asm
	shr.u32 	%r4337, %r4315, 8;
	// begin inline asm
	lop3.b32 %r4335, %r584, %r4337, %r4316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4339, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4340, %r4316, %r4339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4343, %r4335, %r4340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4346, %r595, %r4337, %r4327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4350, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4351, %r4327, %r4350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4354, %r4346, %r4351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4357, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4359, %r4357, %r4183;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4362, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4364, %r4362, %r4194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4367, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4369, %r4367, %r4205;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4372, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4374, %r4372, %r4216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4377, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4379, %r4377, %r4229;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4382, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4384, %r4382, %r4240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4387, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4389, %r4387, %r4251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4392, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4394, %r4392, %r4262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4397, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4399, %r4397, %r4275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4402, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4404, %r4402, %r4286;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4407, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4409, %r4407, %r4297;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4412, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4414, %r4412, %r4308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4417, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4419, %r4417, %r4321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4422, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4424, %r4422, %r4332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4427, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4429, %r4427, %r4343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4432, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4434, %r4432, %r4354;
	// end inline asm
	// begin inline asm
	mov.b32 %r4442, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4453, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4439, %r584, %r1377, %r4442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4443, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4442, %r4443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4447, %r4439, %r4444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4450, %r595, %r1377, %r4453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4454, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4453, %r4454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4458, %r4450, %r4455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4461, %r584, %r1399, %r4442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4442, %r4465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4469, %r4461, %r4466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4472, %r595, %r1399, %r4453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4476, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4477, %r4453, %r4476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4480, %r4472, %r4477;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4485, %r584, %r1423, %r4488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4488, %r4489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4493, %r4485, %r4490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4496, %r595, %r1423, %r4499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4500, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4501, %r4499, %r4500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4504, %r4496, %r4501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4507, %r584, %r1445, %r4488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4511, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4488, %r4511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4515, %r4507, %r4512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4518, %r595, %r1445, %r4499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4522, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4499, %r4522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4526, %r4518, %r4523;
	// end inline asm
	// begin inline asm
	mov.b32 %r4534, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4545, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4531, %r584, %r1469, %r4534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4535, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4536, %r4534, %r4535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4539, %r4531, %r4536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4542, %r595, %r1469, %r4545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4546, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4547, %r4545, %r4546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4550, %r4542, %r4547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4553, %r584, %r1491, %r4534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4534, %r4557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4561, %r4553, %r4558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4564, %r595, %r1491, %r4545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4568, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4569, %r4545, %r4568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4572, %r4564, %r4569;
	// end inline asm
	// begin inline asm
	mov.b32 %r4580, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4591, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4577, %r584, %r1515, %r4580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4580, %r4581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4585, %r4577, %r4582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4588, %r595, %r1515, %r4591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4592, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4593, %r4591, %r4592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4596, %r4588, %r4593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4599, %r584, %r1537, %r4580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4603, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4604, %r4580, %r4603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4607, %r4599, %r4604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4610, %r595, %r1537, %r4591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4614, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4591, %r4614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4618, %r4610, %r4615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4621, %r169, %r4447, %r4359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4625, %r169, %r4458, %r4364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4629, %r169, %r4469, %r4369;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4633, %r169, %r4480, %r4374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4637, %r169, %r4493, %r4379;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4641, %r169, %r4504, %r4384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4645, %r169, %r4515, %r4389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4649, %r169, %r4526, %r4394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4653, %r169, %r4539, %r4399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4657, %r169, %r4550, %r4404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4661, %r169, %r4561, %r4409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4665, %r169, %r4572, %r4414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4669, %r169, %r4585, %r4419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4673, %r169, %r4596, %r4424;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4677, %r169, %r4607, %r4429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4681, %r169, %r4618, %r4434;
	// end inline asm
	// begin inline asm
	mov.b32 %r4690, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4701, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4687, %r584, %r585, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4692, %r4690, %r4691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4695, %r4687, %r4692;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4698, %r595, %r585, %r4701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4702, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4703, %r4701, %r4702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4706, %r4698, %r4703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4709, %r584, %r607, %r4690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4713, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4714, %r4690, %r4713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4717, %r4709, %r4714;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4720, %r595, %r607, %r4701, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4724, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4725, %r4701, %r4724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4728, %r4720, %r4725;
	// end inline asm
	// begin inline asm
	mov.b32 %r4736, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4747, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4733, %r584, %r631, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4737, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4738, %r4736, %r4737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4741, %r4733, %r4738;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4744, %r595, %r631, %r4747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4748, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4749, %r4747, %r4748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4752, %r4744, %r4749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4755, %r584, %r653, %r4736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4759, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4760, %r4736, %r4759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4763, %r4755, %r4760;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4766, %r595, %r653, %r4747, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4770, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4771, %r4747, %r4770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4774, %r4766, %r4771;
	// end inline asm
	// begin inline asm
	mov.b32 %r4782, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4793, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4779, %r584, %r677, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4783, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4784, %r4782, %r4783;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4787, %r4779, %r4784;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4790, %r595, %r677, %r4793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4794, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4795, %r4793, %r4794;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4798, %r4790, %r4795;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4801, %r584, %r699, %r4782, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4805, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4806, %r4782, %r4805;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4809, %r4801, %r4806;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4812, %r595, %r699, %r4793, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4816, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4817, %r4793, %r4816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4820, %r4812, %r4817;
	// end inline asm
	// begin inline asm
	mov.b32 %r4828, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4839, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4825, %r584, %r723, %r4828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4829, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4830, %r4828, %r4829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4833, %r4825, %r4830;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4836, %r595, %r723, %r4839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4840, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4841, %r4839, %r4840;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4844, %r4836, %r4841;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4847, %r584, %r745, %r4828, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4851, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4852, %r4828, %r4851;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4855, %r4847, %r4852;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4858, %r595, %r745, %r4839, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4862, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4863, %r4839, %r4862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4866, %r4858, %r4863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4869, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4871, %r4869, %r4695, %r4621;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4875, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4877, %r4875, %r4706, %r4625;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4881, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4883, %r4881, %r4717, %r4629;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4887, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4889, %r4887, %r4728, %r4633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4893, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4895, %r4893, %r4741, %r4637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4899, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4901, %r4899, %r4752, %r4641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4905, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4907, %r4905, %r4763, %r4645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4911, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4913, %r4911, %r4774, %r4649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4917, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4919, %r4917, %r4787, %r4653;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4923, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4925, %r4923, %r4798, %r4657;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4929, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4931, %r4929, %r4809, %r4661;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4935, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4937, %r4935, %r4820, %r4665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4941, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4943, %r4941, %r4833, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4947, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4949, %r4947, %r4844, %r4673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4953, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4955, %r4953, %r4855, %r4677;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4959, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r4961, %r4959, %r4866, %r4681;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r4967, %r584, %r2381, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4972, %r4970, %r4971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4975, %r4967, %r4972;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4978, %r595, %r2381, %r4981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4982, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4983, %r4981, %r4982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4986, %r4978, %r4983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4989, %r584, %r2403, %r4970, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4994, %r4970, %r4993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4997, %r4989, %r4994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5000, %r595, %r2403, %r4981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5005, %r4981, %r5004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5008, %r5000, %r5005;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5013, %r584, %r2427, %r5016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5017, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5018, %r5016, %r5017;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5021, %r5013, %r5018;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5024, %r595, %r2427, %r5027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5028, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5029, %r5027, %r5028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5032, %r5024, %r5029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5035, %r584, %r2449, %r5016, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5039, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5040, %r5016, %r5039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5043, %r5035, %r5040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5046, %r595, %r2449, %r5027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5050, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5051, %r5027, %r5050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5054, %r5046, %r5051;
	// end inline asm
	// begin inline asm
	mov.b32 %r5062, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5073, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5059, %r584, %r2473, %r5062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5063, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5064, %r5062, %r5063;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5067, %r5059, %r5064;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5070, %r595, %r2473, %r5073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5074, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5075, %r5073, %r5074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5078, %r5070, %r5075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5081, %r584, %r2495, %r5062, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5085, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5086, %r5062, %r5085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5089, %r5081, %r5086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5092, %r595, %r2495, %r5073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5096, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5097, %r5073, %r5096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5100, %r5092, %r5097;
	// end inline asm
	// begin inline asm
	mov.b32 %r5108, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5119, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5105, %r584, %r2519, %r5108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5109, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5110, %r5108, %r5109;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5113, %r5105, %r5110;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5116, %r595, %r2519, %r5119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5120, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5121, %r5119, %r5120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5124, %r5116, %r5121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5127, %r584, %r2541, %r5108, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5131, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5132, %r5108, %r5131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5135, %r5127, %r5132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5138, %r595, %r2541, %r5119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5142, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5143, %r5119, %r5142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5146, %r5138, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5220, %r231, %r4975, %r4871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5217, %r231, %r4986, %r4877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5229, %r231, %r4997, %r4883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5226, %r231, %r5008, %r4889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5238, %r231, %r5021, %r4895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5235, %r231, %r5032, %r4901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5247, %r231, %r5043, %r4907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5244, %r231, %r5054, %r4913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5256, %r231, %r5067, %r4919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5253, %r231, %r5078, %r4925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5265, %r231, %r5089, %r4931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5262, %r231, %r5100, %r4937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5274, %r231, %r5113, %r4943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5271, %r231, %r5124, %r4949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5283, %r231, %r5135, %r4955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5280, %r231, %r5146, %r4961;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5213, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5215, %r5213, %r5217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5218, %r265, %r5220, %r5215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5222, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5224, %r5222, %r5226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5227, %r265, %r5229, %r5224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5231, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5233, %r5231, %r5235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5236, %r265, %r5238, %r5233;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5240, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5242, %r5240, %r5244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5245, %r265, %r5247, %r5242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5249, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5251, %r5249, %r5253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5254, %r265, %r5256, %r5251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5258, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5260, %r5258, %r5262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5263, %r265, %r5265, %r5260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5267, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5269, %r5267, %r5271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5272, %r265, %r5274, %r5269;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5276, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5278, %r5276, %r5280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5281, %r265, %r5283, %r5278;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5285, %r268, %r5220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5288, %r265, %r5217, %r5285;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5292, %r268, %r5229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5295, %r265, %r5226, %r5292;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5299, %r268, %r5238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5302, %r265, %r5235, %r5299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5306, %r268, %r5247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5309, %r265, %r5244, %r5306;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5313, %r268, %r5256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5316, %r265, %r5253, %r5313;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5320, %r268, %r5265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5323, %r265, %r5262, %r5320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5327, %r268, %r5274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5330, %r265, %r5271, %r5327;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5334, %r268, %r5283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5337, %r265, %r5280, %r5334;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5428, %r5425}, {%r271, %r277, %r274, %r280}, {%r5218, %r5288}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5437, %r5434}, {%r271, %r277, %r274, %r280}, {%r5227, %r5295}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5446, %r5443}, {%r271, %r277, %r274, %r280}, {%r5236, %r5302}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5455, %r5452}, {%r271, %r277, %r274, %r280}, {%r5245, %r5309}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5464, %r5461}, {%r271, %r277, %r274, %r280}, {%r5254, %r5316}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5473, %r5470}, {%r271, %r277, %r274, %r280}, {%r5263, %r5323}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5482, %r5479}, {%r271, %r277, %r274, %r280}, {%r5272, %r5330}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5491, %r5488}, {%r271, %r277, %r274, %r280}, {%r5281, %r5337}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5421, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5423, %r5421, %r5425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5426, %r283, %r5428, %r5423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5430, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5432, %r5430, %r5434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5435, %r283, %r5437, %r5432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5439, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5441, %r5439, %r5443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5444, %r283, %r5446, %r5441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5448, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5450, %r5448, %r5452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5453, %r283, %r5455, %r5450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5457, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5459, %r5457, %r5461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5462, %r283, %r5464, %r5459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5466, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5468, %r5466, %r5470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5471, %r283, %r5473, %r5468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5475, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5477, %r5475, %r5479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5480, %r283, %r5482, %r5477;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5484, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5486, %r5484, %r5488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5489, %r283, %r5491, %r5486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5493, %r286, %r5428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5496, %r283, %r5425, %r5493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5500, %r286, %r5437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5503, %r283, %r5434, %r5500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5507, %r286, %r5446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5510, %r283, %r5443, %r5507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5514, %r286, %r5455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5517, %r283, %r5452, %r5514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5521, %r286, %r5464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r283, %r5461, %r5521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5528, %r286, %r5473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5531, %r283, %r5470, %r5528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5535, %r286, %r5482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r283, %r5479, %r5535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5542, %r286, %r5491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5545, %r283, %r5488, %r5542;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5549, %r5550}, {%r289, %r295, %r292, %r298}, {%r5426, %r5496}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5559, %r5560}, {%r289, %r295, %r292, %r298}, {%r5435, %r5503}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5569, %r5570}, {%r289, %r295, %r292, %r298}, {%r5444, %r5510}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5579, %r5580}, {%r289, %r295, %r292, %r298}, {%r5453, %r5517}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5589, %r5590}, {%r289, %r295, %r292, %r298}, {%r5462, %r5524}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5599, %r5600}, {%r289, %r295, %r292, %r298}, {%r5471, %r5531}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5609, %r5610}, {%r289, %r295, %r292, %r298}, {%r5480, %r5538}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r5619, %r5620}, {%r289, %r295, %r292, %r298}, {%r5489, %r5545}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5629, %r55, %r5549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5632, %r55, %r5550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5635, %r55, %r5559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5638, %r55, %r5560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5641, %r55, %r5569;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5644, %r55, %r5570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5647, %r55, %r5579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5650, %r55, %r5580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5653, %r55, %r5589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5656, %r55, %r5590;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5659, %r55, %r5599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5662, %r55, %r5600;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5665, %r55, %r5609;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5668, %r55, %r5610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5671, %r55, %r5619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5674, %r55, %r5620;
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5679, %r5629, %r5677;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5682, %r5679, %r5678;
	// end inline asm
	// begin inline asm
	mov.b32 %r5685, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5686, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5687, %r5632, %r5685;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5690, %r5687, %r5686;
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5694, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5695, %r5635, %r5693;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5698, %r5695, %r5694;
	// end inline asm
	// begin inline asm
	mov.b32 %r5701, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5702, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5703, %r5638, %r5701;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5706, %r5703, %r5702;
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5711, %r5641, %r5709;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5714, %r5711, %r5710;
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5718, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5719, %r5644, %r5717;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5722, %r5719, %r5718;
	// end inline asm
	// begin inline asm
	mov.b32 %r5725, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5726, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5727, %r5647, %r5725;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5730, %r5727, %r5726;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5735, %r5650, %r5733;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5738, %r5735, %r5734;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5743, %r5653, %r5741;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5746, %r5743, %r5742;
	// end inline asm
	// begin inline asm
	mov.b32 %r5749, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5750, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5751, %r5656, %r5749;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5754, %r5751, %r5750;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5758, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5759, %r5659, %r5757;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5762, %r5759, %r5758;
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5767, %r5662, %r5765;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5770, %r5767, %r5766;
	// end inline asm
	// begin inline asm
	mov.b32 %r5773, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5775, %r5665, %r5773;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5778, %r5775, %r5774;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5782, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5783, %r5668, %r5781;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5786, %r5783, %r5782;
	// end inline asm
	// begin inline asm
	mov.b32 %r5789, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5791, %r5671, %r5789;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5794, %r5791, %r5790;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r5799, %r5674, %r5797;
	// end inline asm
	// begin inline asm
	min.f16x2 %r5802, %r5799, %r5798;
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5806, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5807, %r5808, %r5806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5810, %r5682, %r5807;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5808, %r5813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5690, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5808, %r5820;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5698, %r5821;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5808, %r5827;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5831, %r5706, %r5828;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5834, %r5810, %r5824, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5838, %r5817, %r5831, %r2245;
	// end inline asm
	shl.b32 	%r5845, %r5838, 4;
	// begin inline asm
	lop3.b32 %r5842, %r2251, %r5834, %r5845, 202;
	// end inline asm
	xor.b32  	%r7810, %r5842, -2004318072;
	// begin inline asm
	mov.b32 %r5849, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5849, %r5847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5851, %r5714, %r5848;
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5855, %r5849, %r5854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5858, %r5722, %r5855;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5862, %r5849, %r5861;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5865, %r5730, %r5862;
	// end inline asm
	// begin inline asm
	mov.b32 %r5868, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5869, %r5849, %r5868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5872, %r5738, %r5869;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5875, %r5851, %r5865, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5879, %r5858, %r5872, %r2245;
	// end inline asm
	shl.b32 	%r5886, %r5879, 4;
	// begin inline asm
	lop3.b32 %r5883, %r2251, %r5875, %r5886, 202;
	// end inline asm
	xor.b32  	%r7811, %r5883, -2004318072;
	// begin inline asm
	mov.b32 %r5890, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5888, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5889, %r5890, %r5888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5746, %r5889;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5890, %r5895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5899, %r5754, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5890, %r5902;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5762, %r5903;
	// end inline asm
	// begin inline asm
	mov.b32 %r5909, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5910, %r5890, %r5909;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5770, %r5910;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5916, %r5892, %r5906, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5920, %r5899, %r5913, %r2245;
	// end inline asm
	shl.b32 	%r5927, %r5920, 4;
	// begin inline asm
	lop3.b32 %r5924, %r2251, %r5916, %r5927, 202;
	// end inline asm
	xor.b32  	%r7812, %r5924, -2004318072;
	// begin inline asm
	mov.b32 %r5931, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5930, %r5931, %r5929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5933, %r5778, %r5930;
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5931, %r5936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5786, %r5937;
	// end inline asm
	// begin inline asm
	mov.b32 %r5943, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5944, %r5931, %r5943;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5947, %r5794, %r5944;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5931, %r5950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5954, %r5802, %r5951;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5957, %r5933, %r5947, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r5961, %r5940, %r5954, %r2245;
	// end inline asm
	shl.b32 	%r5968, %r5961, 4;
	// begin inline asm
	lop3.b32 %r5965, %r2251, %r5957, %r5968, 202;
	// end inline asm
	xor.b32  	%r7813, %r5965, -2004318072;
	st.shared.u32 	[%rd149], %r7810;
	st.shared.u32 	[%rd150], %r7811;
	st.shared.u32 	[%rd151], %r7812;
	st.shared.u32 	[%rd152], %r7813;
	ld.shared.u32 	%r7938, [%rd92];
	ld.shared.u32 	%r7937, [%rd94];
	ld.shared.u32 	%r7932, [%rd92+64];
	ld.shared.u32 	%r7931, [%rd96];
	// begin inline asm
	mov.b32 %r5974, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r5973, %r7938, -2004318072;
	// begin inline asm
	lop3.b32 %r5971, %r584, %r5973, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5974, %r5975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5979, %r5971, %r5976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5982, %r595, %r5973, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5987, %r5985, %r5986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5990, %r5982, %r5987;
	// end inline asm
	shr.u32 	%r5995, %r5973, 8;
	// begin inline asm
	lop3.b32 %r5993, %r584, %r5995, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5974, %r5997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6001, %r5993, %r5998;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6004, %r595, %r5995, %r5985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6008, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6009, %r5985, %r6008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6012, %r6004, %r6009;
	// end inline asm
	// begin inline asm
	mov.b32 %r6020, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6019, %r7937, -2004318072;
	// begin inline asm
	lop3.b32 %r6017, %r584, %r6019, %r6020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6021, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6022, %r6020, %r6021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6025, %r6017, %r6022;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6028, %r595, %r6019, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6032, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6033, %r6031, %r6032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6036, %r6028, %r6033;
	// end inline asm
	shr.u32 	%r6041, %r6019, 8;
	// begin inline asm
	lop3.b32 %r6039, %r584, %r6041, %r6020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6043, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6044, %r6020, %r6043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6047, %r6039, %r6044;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6050, %r595, %r6041, %r6031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6054, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6055, %r6031, %r6054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6058, %r6050, %r6055;
	// end inline asm
	// begin inline asm
	mov.b32 %r6066, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6077, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6065, %r7932, -2004318072;
	// begin inline asm
	lop3.b32 %r6063, %r584, %r6065, %r6066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6067, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6068, %r6066, %r6067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6071, %r6063, %r6068;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6074, %r595, %r6065, %r6077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6078, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6079, %r6077, %r6078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6082, %r6074, %r6079;
	// end inline asm
	shr.u32 	%r6087, %r6065, 8;
	// begin inline asm
	lop3.b32 %r6085, %r584, %r6087, %r6066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6089, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6090, %r6066, %r6089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6093, %r6085, %r6090;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6096, %r595, %r6087, %r6077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6100, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6101, %r6077, %r6100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6104, %r6096, %r6101;
	// end inline asm
	// begin inline asm
	mov.b32 %r6112, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6123, {%rs1072, %rs1072};
	// end inline asm
	xor.b32  	%r6111, %r7931, -2004318072;
	// begin inline asm
	lop3.b32 %r6109, %r584, %r6111, %r6112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6113, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6114, %r6112, %r6113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6117, %r6109, %r6114;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6120, %r595, %r6111, %r6123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6124, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6125, %r6123, %r6124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6128, %r6120, %r6125;
	// end inline asm
	shr.u32 	%r6133, %r6111, 8;
	// begin inline asm
	lop3.b32 %r6131, %r584, %r6133, %r6112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6135, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6136, %r6112, %r6135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6139, %r6131, %r6136;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6142, %r595, %r6133, %r6123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6146, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6147, %r6123, %r6146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6150, %r6142, %r6147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6153, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6155, %r6153, %r5979;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6160, %r6158, %r5990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6163, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6165, %r6163, %r6001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6168, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6170, %r6168, %r6012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6175, %r6173, %r6025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6180, %r6178, %r6036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6183, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6185, %r6183, %r6047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6190, %r6188, %r6058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6193, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6195, %r6193, %r6071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6198, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6200, %r6198, %r6082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6205, %r6203, %r6093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6210, %r6208, %r6104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6213, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6215, %r6213, %r6117;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6220, %r6218, %r6128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6223, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6225, %r6223, %r6139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6228, %r262;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6230, %r6228, %r6150;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6235, %r584, %r585, %r6238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6239, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6240, %r6238, %r6239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6243, %r6235, %r6240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6246, %r595, %r585, %r6249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6250, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6251, %r6249, %r6250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6254, %r6246, %r6251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6257, %r584, %r607, %r6238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6261, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6262, %r6238, %r6261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6265, %r6257, %r6262;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6268, %r595, %r607, %r6249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6272, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6273, %r6249, %r6272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6276, %r6268, %r6273;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6281, %r584, %r631, %r6284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6285, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6286, %r6284, %r6285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6289, %r6281, %r6286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6292, %r595, %r631, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6296, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6297, %r6295, %r6296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6300, %r6292, %r6297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6303, %r584, %r653, %r6284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6307, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6308, %r6284, %r6307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6311, %r6303, %r6308;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6314, %r595, %r653, %r6295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6318, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6319, %r6295, %r6318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6322, %r6314, %r6319;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6327, %r584, %r677, %r6330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6331, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6332, %r6330, %r6331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6335, %r6327, %r6332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6338, %r595, %r677, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6342, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6343, %r6341, %r6342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6346, %r6338, %r6343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6349, %r584, %r699, %r6330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6353, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6354, %r6330, %r6353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6357, %r6349, %r6354;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6360, %r595, %r699, %r6341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6364, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6365, %r6341, %r6364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6368, %r6360, %r6365;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6373, %r584, %r723, %r6376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6377, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6378, %r6376, %r6377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6381, %r6373, %r6378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6384, %r595, %r723, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6388, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6389, %r6387, %r6388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6392, %r6384, %r6389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6395, %r584, %r745, %r6376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6399, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6400, %r6376, %r6399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6403, %r6395, %r6400;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6406, %r595, %r745, %r6387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6410, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6411, %r6387, %r6410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6414, %r6406, %r6411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6417, %r169, %r6243, %r6155;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6421, %r169, %r6254, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6425, %r169, %r6265, %r6165;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6429, %r169, %r6276, %r6170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6433, %r169, %r6289, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6437, %r169, %r6300, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6441, %r169, %r6311, %r6185;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6445, %r169, %r6322, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6449, %r169, %r6335, %r6195;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6453, %r169, %r6346, %r6200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6457, %r169, %r6357, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6461, %r169, %r6368, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6465, %r169, %r6381, %r6215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6469, %r169, %r6392, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6473, %r169, %r6403, %r6225;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6477, %r169, %r6414, %r6230;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6483, %r584, %r2381, %r6486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6487, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6488, %r6486, %r6487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6491, %r6483, %r6488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6494, %r595, %r2381, %r6497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6499, %r6497, %r6498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6502, %r6494, %r6499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6505, %r584, %r2403, %r6486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6510, %r6486, %r6509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6513, %r6505, %r6510;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6516, %r595, %r2403, %r6497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6520, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6521, %r6497, %r6520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6524, %r6516, %r6521;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6529, %r584, %r2427, %r6532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6533, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6534, %r6532, %r6533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6537, %r6529, %r6534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6540, %r595, %r2427, %r6543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6545, %r6543, %r6544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6548, %r6540, %r6545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6551, %r584, %r2449, %r6532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6556, %r6532, %r6555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6559, %r6551, %r6556;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6562, %r595, %r2449, %r6543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6566, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6567, %r6543, %r6566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6570, %r6562, %r6567;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6575, %r584, %r2473, %r6578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6579, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6580, %r6578, %r6579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6583, %r6575, %r6580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6586, %r595, %r2473, %r6589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6591, %r6589, %r6590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6594, %r6586, %r6591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6597, %r584, %r2495, %r6578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6601, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6602, %r6578, %r6601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6605, %r6597, %r6602;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6608, %r595, %r2495, %r6589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6612, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6613, %r6589, %r6612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6616, %r6608, %r6613;
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6635, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6621, %r584, %r2519, %r6624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6625, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6626, %r6624, %r6625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6629, %r6621, %r6626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6632, %r595, %r2519, %r6635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6636, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6637, %r6635, %r6636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6640, %r6632, %r6637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6643, %r584, %r2541, %r6624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6647, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6648, %r6624, %r6647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6651, %r6643, %r6648;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6654, %r595, %r2541, %r6635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6658, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6659, %r6635, %r6658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6662, %r6654, %r6659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6665, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6667, %r6665, %r6491, %r6417;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6671, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6673, %r6671, %r6502, %r6421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6677, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6679, %r6677, %r6513, %r6425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6683, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6685, %r6683, %r6524, %r6429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6689, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6691, %r6689, %r6537, %r6433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6695, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6697, %r6695, %r6548, %r6437;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6701, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6703, %r6701, %r6559, %r6441;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6707, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6709, %r6707, %r6570, %r6445;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6713, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r6713, %r6583, %r6449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6719, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6721, %r6719, %r6594, %r6453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6725, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6727, %r6725, %r6605, %r6457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6731, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r6731, %r6616, %r6461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6739, %r6737, %r6629, %r6465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6743, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6745, %r6743, %r6640, %r6469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6749, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r6749, %r6651, %r6473;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6757, %r6755, %r6662, %r6477;
	// end inline asm
	// begin inline asm
	mov.b32 %r6766, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6777, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6763, %r584, %r4177, %r6766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6767, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6768, %r6766, %r6767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6771, %r6763, %r6768;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6774, %r595, %r4177, %r6777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6778, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6779, %r6777, %r6778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6782, %r6774, %r6779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6785, %r584, %r4199, %r6766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6789, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6790, %r6766, %r6789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6793, %r6785, %r6790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6796, %r595, %r4199, %r6777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6800, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6801, %r6777, %r6800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6804, %r6796, %r6801;
	// end inline asm
	// begin inline asm
	mov.b32 %r6812, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6823, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6809, %r584, %r4223, %r6812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6813, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6814, %r6812, %r6813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6817, %r6809, %r6814;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6820, %r595, %r4223, %r6823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6824, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6825, %r6823, %r6824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6828, %r6820, %r6825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6831, %r584, %r4245, %r6812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6835, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6836, %r6812, %r6835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6839, %r6831, %r6836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6842, %r595, %r4245, %r6823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6846, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6847, %r6823, %r6846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6850, %r6842, %r6847;
	// end inline asm
	// begin inline asm
	mov.b32 %r6858, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6869, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6855, %r584, %r4269, %r6858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6859, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6860, %r6858, %r6859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6863, %r6855, %r6860;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6866, %r595, %r4269, %r6869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6870, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6871, %r6869, %r6870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6874, %r6866, %r6871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6877, %r584, %r4291, %r6858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6881, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6882, %r6858, %r6881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6885, %r6877, %r6882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6888, %r595, %r4291, %r6869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6892, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6893, %r6869, %r6892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6896, %r6888, %r6893;
	// end inline asm
	// begin inline asm
	mov.b32 %r6904, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r6915, {%rs1072, %rs1072};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6901, %r584, %r4315, %r6904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6905, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6906, %r6904, %r6905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6909, %r6901, %r6906;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6912, %r595, %r4315, %r6915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6916, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6917, %r6915, %r6916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6920, %r6912, %r6917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6923, %r584, %r4337, %r6904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6927, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6928, %r6904, %r6927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6931, %r6923, %r6928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6934, %r595, %r4337, %r6915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6938, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6939, %r6915, %r6938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6942, %r6934, %r6939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r231, %r6771, %r6667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7013, %r231, %r6782, %r6673;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7025, %r231, %r6793, %r6679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7022, %r231, %r6804, %r6685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7034, %r231, %r6817, %r6691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7031, %r231, %r6828, %r6697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7043, %r231, %r6839, %r6703;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7040, %r231, %r6850, %r6709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7052, %r231, %r6863, %r6715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7049, %r231, %r6874, %r6721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7061, %r231, %r6885, %r6727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7058, %r231, %r6896, %r6733;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7070, %r231, %r6909, %r6739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7067, %r231, %r6920, %r6745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7079, %r231, %r6931, %r6751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7076, %r231, %r6942, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7009, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7011, %r7009, %r7013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7014, %r265, %r7016, %r7011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7018, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7020, %r7018, %r7022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r265, %r7025, %r7020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7027, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7029, %r7027, %r7031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7032, %r265, %r7034, %r7029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7036, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7038, %r7036, %r7040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7041, %r265, %r7043, %r7038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7045, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7047, %r7045, %r7049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7050, %r265, %r7052, %r7047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7054, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7056, %r7054, %r7058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7059, %r265, %r7061, %r7056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7063, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7065, %r7063, %r7067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7068, %r265, %r7070, %r7065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7072, %r268;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7074, %r7072, %r7076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7077, %r265, %r7079, %r7074;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7081, %r268, %r7016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7084, %r265, %r7013, %r7081;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7088, %r268, %r7025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7091, %r265, %r7022, %r7088;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7095, %r268, %r7034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7098, %r265, %r7031, %r7095;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7102, %r268, %r7043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7105, %r265, %r7040, %r7102;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7109, %r268, %r7052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7112, %r265, %r7049, %r7109;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7116, %r268, %r7061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7119, %r265, %r7058, %r7116;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7123, %r268, %r7070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7126, %r265, %r7067, %r7123;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7130, %r268, %r7079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7133, %r265, %r7076, %r7130;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7224, %r7221}, {%r271, %r277, %r274, %r280}, {%r7014, %r7084}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7233, %r7230}, {%r271, %r277, %r274, %r280}, {%r7023, %r7091}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7242, %r7239}, {%r271, %r277, %r274, %r280}, {%r7032, %r7098}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7251, %r7248}, {%r271, %r277, %r274, %r280}, {%r7041, %r7105}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7260, %r7257}, {%r271, %r277, %r274, %r280}, {%r7050, %r7112}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7269, %r7266}, {%r271, %r277, %r274, %r280}, {%r7059, %r7119}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7278, %r7275}, {%r271, %r277, %r274, %r280}, {%r7068, %r7126}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7287, %r7284}, {%r271, %r277, %r274, %r280}, {%r7077, %r7133}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7217, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7219, %r7217, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7222, %r283, %r7224, %r7219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7226, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7228, %r7226, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7231, %r283, %r7233, %r7228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7235, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7237, %r7235, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7240, %r283, %r7242, %r7237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7244, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7246, %r7244, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7249, %r283, %r7251, %r7246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7253, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7255, %r7253, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7258, %r283, %r7260, %r7255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7262, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7264, %r7262, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7267, %r283, %r7269, %r7264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7271, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7273, %r7271, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7276, %r283, %r7278, %r7273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7280, %r286;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r7280, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r283, %r7287, %r7282;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7289, %r286, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7292, %r283, %r7221, %r7289;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7296, %r286, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7299, %r283, %r7230, %r7296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r286, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r283, %r7239, %r7303;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7310, %r286, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7313, %r283, %r7248, %r7310;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7317, %r286, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7320, %r283, %r7257, %r7317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7324, %r286, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7327, %r283, %r7266, %r7324;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7331, %r286, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7334, %r283, %r7275, %r7331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7338, %r286, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7341, %r283, %r7284, %r7338;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7345, %r7346}, {%r289, %r295, %r292, %r298}, {%r7222, %r7292}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7355, %r7356}, {%r289, %r295, %r292, %r298}, {%r7231, %r7299}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7365, %r7366}, {%r289, %r295, %r292, %r298}, {%r7240, %r7306}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7375, %r7376}, {%r289, %r295, %r292, %r298}, {%r7249, %r7313}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7385, %r7386}, {%r289, %r295, %r292, %r298}, {%r7258, %r7320}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7395, %r7396}, {%r289, %r295, %r292, %r298}, {%r7267, %r7327}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7405, %r7406}, {%r289, %r295, %r292, %r298}, {%r7276, %r7334}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7415, %r7416}, {%r289, %r295, %r292, %r298}, {%r7285, %r7341}, {%r7914, %r7914};
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7425, %r55, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7428, %r55, %r7346;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7431, %r55, %r7355;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7434, %r55, %r7356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7437, %r55, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7440, %r55, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7443, %r55, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7446, %r55, %r7376;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7449, %r55, %r7385;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7452, %r55, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7455, %r55, %r7395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7458, %r55, %r7396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7461, %r55, %r7405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7464, %r55, %r7406;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7467, %r55, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7470, %r55, %r7416;
	// end inline asm
	// begin inline asm
	mov.b32 %r7473, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7474, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7475, %r7425, %r7473;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7478, %r7475, %r7474;
	// end inline asm
	// begin inline asm
	mov.b32 %r7481, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7482, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7483, %r7428, %r7481;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7486, %r7483, %r7482;
	// end inline asm
	// begin inline asm
	mov.b32 %r7489, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7490, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7491, %r7431, %r7489;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7494, %r7491, %r7490;
	// end inline asm
	// begin inline asm
	mov.b32 %r7497, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7498, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7499, %r7434, %r7497;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7502, %r7499, %r7498;
	// end inline asm
	// begin inline asm
	mov.b32 %r7505, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7506, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7507, %r7437, %r7505;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7510, %r7507, %r7506;
	// end inline asm
	// begin inline asm
	mov.b32 %r7513, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7514, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7515, %r7440, %r7513;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7518, %r7515, %r7514;
	// end inline asm
	// begin inline asm
	mov.b32 %r7521, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7522, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7523, %r7443, %r7521;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7526, %r7523, %r7522;
	// end inline asm
	// begin inline asm
	mov.b32 %r7529, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7530, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7531, %r7446, %r7529;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7534, %r7531, %r7530;
	// end inline asm
	// begin inline asm
	mov.b32 %r7537, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7538, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7539, %r7449, %r7537;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7542, %r7539, %r7538;
	// end inline asm
	// begin inline asm
	mov.b32 %r7545, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7546, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7547, %r7452, %r7545;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7550, %r7547, %r7546;
	// end inline asm
	// begin inline asm
	mov.b32 %r7553, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7554, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7555, %r7455, %r7553;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7558, %r7555, %r7554;
	// end inline asm
	// begin inline asm
	mov.b32 %r7561, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7562, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7563, %r7458, %r7561;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7566, %r7563, %r7562;
	// end inline asm
	// begin inline asm
	mov.b32 %r7569, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7570, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7571, %r7461, %r7569;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7574, %r7571, %r7570;
	// end inline asm
	// begin inline asm
	mov.b32 %r7577, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7578, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7579, %r7464, %r7577;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7582, %r7579, %r7578;
	// end inline asm
	// begin inline asm
	mov.b32 %r7585, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7586, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7587, %r7467, %r7585;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7590, %r7587, %r7586;
	// end inline asm
	// begin inline asm
	mov.b32 %r7593, {%rs1142, %rs1142};
	// end inline asm
	// begin inline asm
	mov.b32 %r7594, {%rs195, %rs195};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7595, %r7470, %r7593;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7598, %r7595, %r7594;
	// end inline asm
	// begin inline asm
	mov.b32 %r7604, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7602, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7603, %r7604, %r7602;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7606, %r7478, %r7603;
	// end inline asm
	// begin inline asm
	mov.b32 %r7609, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7610, %r7604, %r7609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7613, %r7486, %r7610;
	// end inline asm
	// begin inline asm
	mov.b32 %r7616, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7617, %r7604, %r7616;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7620, %r7494, %r7617;
	// end inline asm
	// begin inline asm
	mov.b32 %r7623, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7624, %r7604, %r7623;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7627, %r7502, %r7624;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7630, %r7606, %r7620, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7634, %r7613, %r7627, %r2245;
	// end inline asm
	shl.b32 	%r7641, %r7634, 4;
	// begin inline asm
	lop3.b32 %r7638, %r2251, %r7630, %r7641, 202;
	// end inline asm
	xor.b32  	%r7814, %r7638, -2004318072;
	// begin inline asm
	mov.b32 %r7645, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7643, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7644, %r7645, %r7643;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7647, %r7510, %r7644;
	// end inline asm
	// begin inline asm
	mov.b32 %r7650, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7651, %r7645, %r7650;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7654, %r7518, %r7651;
	// end inline asm
	// begin inline asm
	mov.b32 %r7657, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7645, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7526, %r7658;
	// end inline asm
	// begin inline asm
	mov.b32 %r7664, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7665, %r7645, %r7664;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7668, %r7534, %r7665;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7671, %r7647, %r7661, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7675, %r7654, %r7668, %r2245;
	// end inline asm
	shl.b32 	%r7682, %r7675, 4;
	// begin inline asm
	lop3.b32 %r7679, %r2251, %r7671, %r7682, 202;
	// end inline asm
	xor.b32  	%r7815, %r7679, -2004318072;
	// begin inline asm
	mov.b32 %r7686, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7684, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7542, %r7685;
	// end inline asm
	// begin inline asm
	mov.b32 %r7691, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7692, %r7686, %r7691;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7695, %r7550, %r7692;
	// end inline asm
	// begin inline asm
	mov.b32 %r7698, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7699, %r7686, %r7698;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7702, %r7558, %r7699;
	// end inline asm
	// begin inline asm
	mov.b32 %r7705, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7686, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7566, %r7706;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7712, %r7688, %r7702, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7716, %r7695, %r7709, %r2245;
	// end inline asm
	shl.b32 	%r7723, %r7716, 4;
	// begin inline asm
	lop3.b32 %r7720, %r2251, %r7712, %r7723, 202;
	// end inline asm
	xor.b32  	%r7816, %r7720, -2004318072;
	// begin inline asm
	mov.b32 %r7727, {%rs1176, %rs1176};
	// end inline asm
	// begin inline asm
	mov.b32 %r7725, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7726, %r7727, %r7725;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7729, %r7574, %r7726;
	// end inline asm
	// begin inline asm
	mov.b32 %r7732, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7727, %r7732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7736, %r7582, %r7733;
	// end inline asm
	// begin inline asm
	mov.b32 %r7739, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7727, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7590, %r7740;
	// end inline asm
	// begin inline asm
	mov.b32 %r7746, {%rs1184, %rs1184};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7747, %r7727, %r7746;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7750, %r7598, %r7747;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7753, %r7729, %r7743, %r2245;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7757, %r7736, %r7750, %r2245;
	// end inline asm
	shl.b32 	%r7764, %r7757, 4;
	// begin inline asm
	lop3.b32 %r7761, %r2251, %r7753, %r7764, 202;
	// end inline asm
	xor.b32  	%r7817, %r7761, -2004318072;
	st.shared.u32 	[%rd149], %r7814;
	st.shared.u32 	[%rd150], %r7815;
	st.shared.u32 	[%rd151], %r7816;
	st.shared.u32 	[%rd152], %r7817;
	add.s32 	%r7930, %r7930, 64;
	add.s64 	%rd152, %rd152, 8324;
	add.s64 	%rd151, %rd151, 8324;
	add.s64 	%rd150, %rd150, 8324;
	add.s64 	%rd149, %rd149, 8324;
	add.s32 	%r7929, %r7929, 1;
	setp.eq.s32 	%p161, %r7930, 256;
	@%p161 bra 	$L__BB0_31;
	bra.uni 	$L__BB0_30;
$L__BB0_31:                             // %guard_exit16980
                                        //   in Loop: Header=BB0_29 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r7823, [%rd5];
	ld.shared.u32 	%r7824, [%rd6+128];
	ld.shared.u32 	%r7831, [%rd7+4];
	ld.shared.u32 	%r7832, [%rd7+132];
	ld.shared.u32 	%r7839, [%rd5+8324];
	ld.shared.u32 	%r7840, [%rd6+8452];
	ld.shared.u32 	%r7847, [%rd7+8328];
	ld.shared.u32 	%r7848, [%rd7+8456];
	ld.shared.u32 	%r7855, [%rd5+16648];
	ld.shared.u32 	%r7856, [%rd6+16776];
	ld.shared.u32 	%r7863, [%rd7+16652];
	ld.shared.u32 	%r7864, [%rd7+16780];
	ld.shared.u32 	%r7871, [%rd5+24972];
	ld.shared.u32 	%r7872, [%rd6+25100];
	ld.shared.u32 	%r7879, [%rd7+24976];
	ld.shared.u32 	%r7880, [%rd7+25104];
	// begin inline asm
	prmt.b32 %r7818, %r7823, %r7824, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7822, %r7823, %r7824, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7826, %r7831, %r7832, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7830, %r7831, %r7832, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7834, %r7839, %r7840, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7838, %r7839, %r7840, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7842, %r7847, %r7848, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7846, %r7847, %r7848, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7850, %r7855, %r7856, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7854, %r7855, %r7856, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7858, %r7863, %r7864, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7862, %r7863, %r7864, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7866, %r7871, %r7872, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7870, %r7871, %r7872, %r492;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7874, %r7879, %r7880, %r488;
	// end inline asm
	// begin inline asm
	prmt.b32 %r7878, %r7879, %r7880, %r492;
	// end inline asm
	selp.b32 	%r7882, %r7822, %r7818, %p148;
	shfl.sync.bfly.b32	%r98, %r7882, 8, 31, -1;
	selp.b32 	%r7883, %r7830, %r7826, %p148;
	shfl.sync.bfly.b32	%r99, %r7883, 8, 31, -1;
	selp.b32 	%r7884, %r7838, %r7834, %p148;
	shfl.sync.bfly.b32	%r7885, %r7884, 8, 31, -1;
	selp.b32 	%r7886, %r7846, %r7842, %p148;
	shfl.sync.bfly.b32	%r7887, %r7886, 8, 31, -1;
	selp.b32 	%r7888, %r7854, %r7850, %p148;
	shfl.sync.bfly.b32	%r7889, %r7888, 8, 31, -1;
	selp.b32 	%r7890, %r7862, %r7858, %p148;
	shfl.sync.bfly.b32	%r7891, %r7890, 8, 31, -1;
	selp.b32 	%r7892, %r7870, %r7866, %p148;
	shfl.sync.bfly.b32	%r7893, %r7892, 8, 31, -1;
	selp.b32 	%r7894, %r7878, %r7874, %p148;
	shfl.sync.bfly.b32	%r7895, %r7894, 8, 31, -1;
	and.b32  	%r7896, %r44, 32512;
	setp.eq.s32 	%p163, %r7896, 0;
	shl.b32 	%r7915, %r44, 10;
	@%p163 bra 	$L__BB0_33;
// %bb.32:                              // %pass16193
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r7897, %r99, %r7830, %p148;
	selp.b32 	%r7898, %r7826, %r99, %p148;
	selp.b32 	%r7899, %r98, %r7822, %p148;
	selp.b32 	%r7900, %r7818, %r98, %p148;
	or.b32  	%r7902, %r31, %r7915;
	cvt.s64.s32 	%rd97, %r7902;
	add.s64 	%rd98, %rd97, %rd8;
	shr.u64 	%rd99, %rd98, 39;
	add.s64 	%rd100, %rd98, %rd99;
	shr.s64 	%rd101, %rd100, 25;
	setp.lt.s64 	%p165, %rd98, 0;
	and.b64  	%rd102, %rd100, -33554432;
	setp.ne.s64 	%p166, %rd102, %rd98;
	and.pred  	%p167, %p165, %p166;
	selp.u64 	%rd103, 1, 0, %p167;
	sub.s64 	%rd104, %rd103, %rd101;
	shl.b64 	%rd105, %rd104, 25;
	add.s64 	%rd106, %rd105, %rd98;
	shl.b64 	%rd107, %rd106, 2;
	add.s64 	%rd108, %rd3, %rd107;
	st.global.v4.u32 	[%rd108], {%r7900, %r7898, %r7899, %r7897};
$L__BB0_33:                             // %pass16206
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r92, %r44, 64;
	setp.lt.u32 	%p168, %r92, 192;
	@%p168 bra 	$L__BB0_35;
// %bb.34:                              // %pass16291
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r100, %r7834, %r7885, %p148;
	selp.b32 	%r101, %r7885, %r7838, %p148;
	selp.b32 	%r102, %r7842, %r7887, %p148;
	selp.b32 	%r103, %r7887, %r7846, %p148;
	shl.b32 	%r7903, %r92, 10;
	or.b32  	%r7904, %r31, %r7903;
	cvt.s64.s32 	%rd109, %r7904;
	add.s64 	%rd110, %rd109, %rd8;
	shr.u64 	%rd111, %rd110, 39;
	add.s64 	%rd112, %rd110, %rd111;
	shr.s64 	%rd113, %rd112, 25;
	setp.lt.s64 	%p169, %rd110, 0;
	and.b64  	%rd114, %rd112, -33554432;
	setp.ne.s64 	%p170, %rd114, %rd110;
	and.pred  	%p171, %p169, %p170;
	selp.u64 	%rd115, 1, 0, %p171;
	sub.s64 	%rd116, %rd115, %rd113;
	shl.b64 	%rd117, %rd116, 25;
	add.s64 	%rd118, %rd117, %rd110;
	shl.b64 	%rd119, %rd118, 2;
	add.s64 	%rd120, %rd3, %rd119;
	st.global.v4.u32 	[%rd120], {%r100, %r102, %r101, %r103};
$L__BB0_35:                             // %pass16304
                                        //   in Loop: Header=BB0_29 Depth=1
	or.b32  	%r93, %r44, 128;
	selp.b32 	%r108, %r7866, %r7893, %p148;
	selp.b32 	%r109, %r7893, %r7870, %p148;
	selp.b32 	%r110, %r7874, %r7895, %p148;
	selp.b32 	%r111, %r7895, %r7878, %p148;
	setp.lt.u32 	%p172, %r93, 192;
	@%p172 bra 	$L__BB0_37;
// %bb.36:                              // %pass16389
                                        //   in Loop: Header=BB0_29 Depth=1
	selp.b32 	%r104, %r7850, %r7889, %p148;
	selp.b32 	%r105, %r7889, %r7854, %p148;
	selp.b32 	%r106, %r7858, %r7891, %p148;
	selp.b32 	%r107, %r7891, %r7862, %p148;
	shl.b32 	%r7905, %r93, 10;
	or.b32  	%r7906, %r31, %r7905;
	cvt.s64.s32 	%rd121, %r7906;
	add.s64 	%rd122, %rd121, %rd8;
	shr.u64 	%rd123, %rd122, 39;
	add.s64 	%rd124, %rd122, %rd123;
	shr.s64 	%rd125, %rd124, 25;
	setp.lt.s64 	%p173, %rd122, 0;
	and.b64  	%rd126, %rd124, -33554432;
	setp.ne.s64 	%p174, %rd126, %rd122;
	and.pred  	%p175, %p173, %p174;
	selp.u64 	%rd127, 1, 0, %p175;
	sub.s64 	%rd128, %rd127, %rd125;
	shl.b64 	%rd129, %rd128, 25;
	add.s64 	%rd130, %rd129, %rd122;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd3, %rd131;
	st.global.v4.u32 	[%rd132], {%r104, %r106, %r105, %r107};
	bra.uni 	$L__BB0_37;
$L__BB0_38:                             // %L38286
	st.global.u32 	[%rd4], %r7914;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r7913, 2;
	st.global.u32 	[%rd4], %r7913;
	mov.u64 	%rd147, exception3342;
	cvta.global.u64 	%rd148, %rd147;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd148;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd41;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r7912, 3;
	st.global.u32 	[%rd4], %r7912;
	mov.u64 	%rd145, exception3342;
	cvta.global.u64 	%rd146, %rd145;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd146;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd41;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd46, exception1;
	cvta.global.u64 	%rd47, %rd46;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd47;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd41;
	st.param.b32 	[param0+8], %r112;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
