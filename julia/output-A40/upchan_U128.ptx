// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5102[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<329>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16257>;
	.reg .f32 	%f<1394>;
	.reg .b64 	%rd<127>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r239, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r240, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r240, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd53, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd37, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	shl.b32 	%r241, %r2, 9;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r242, %r241, %r1;
	or.b32  	%r243, %r242, %r4;
	mul.wide.u32 	%rd59, %r243, 4;
	add.s64 	%rd4, %rd53, %rd59;
	mov.u32 	%r244, 1;
	st.global.u32 	[%rd4], %r244;
	ld.global.u32 	%r5, [%rd37];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	LBB0_7;
// %bb.3:                               // %L205
	ld.param.u64 	%rd41, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd41];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 262144;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	LBB0_7;
// %bb.4:                               // %L215
	ld.param.u64 	%rd45, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd45];
	sub.s32 	%r245, %r6, %r5;
	and.b32  	%r246, %r245, 255;
	setp.ne.s32 	%p6, %r246, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	LBB0_7;
// %bb.5:                               // %L221
	ld.param.u64 	%rd49, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd49];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 2048;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	LBB0_7;
// %bb.6:                               // %L231
	sub.s32 	%r247, %r8, %r7;
	and.b32  	%r248, %r247, 1;
	setp.eq.b32 	%p12, %r248, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	LBB0_8;
	bra.uni 	LBB0_7;
LBB0_8:                                 // %L355
	bfe.u32 	%r16, %r1, 1, 1;
	and.b32  	%r17, %r1, 1;
	bfe.u32 	%r19, %r1, 2, 1;
	shr.u32 	%r20, %r1, 4;
	shl.b32 	%r256, %r20, 2;
	shl.b32 	%r257, %r19, 3;
	shl.b32 	%r258, %r17, 4;
	shl.b32 	%r259, %r16, 5;
	or.b32  	%r260, %r258, %r259;
	or.b32  	%r261, %r257, %r260;
	or.b32  	%r262, %r256, %r261;
	bfe.u32 	%r22, %r1, 3, 1;
	shl.b32 	%r263, %r22, 1;
	or.b32  	%r23, %r263, %r262;
	or.b32  	%r24, %r23, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r23;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p20, %f3, 0f00000000;
	mov.f32 	%f1353, 0f3F800000;
	mov.f32 	%f1338, %f1353;
	@%p20 bra 	LBB0_10;
// %bb.9:                               // %L691
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1338, %f288, %f3;
LBB0_10:                                // %L694
	cvt.rn.f32.s32 	%f291, %r24;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p26, %f8, 0f00000000;
	mov.f32 	%f1339, %f1353;
	@%p26 bra 	LBB0_12;
// %bb.11:                              // %L711
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1339, %f322, %f8;
LBB0_12:                                // %L714
	or.b32  	%r281, %r23, 1;
	or.b32  	%r26, %r23, 65;
	cvt.rn.f32.s32 	%f326, %r281;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p32, %f12, 0f00000000;
	mov.f32 	%f1340, %f1353;
	@%p32 bra 	LBB0_14;
// %bb.13:                              // %L793
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1340, %f357, %f12;
LBB0_14:                                // %L796
	cvt.rn.f32.s32 	%f360, %r26;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p38, %f17, 0f00000000;
	mov.f32 	%f1341, %f1353;
	@%p38 bra 	LBB0_16;
// %bb.15:                              // %L813
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1341, %f391, %f17;
LBB0_16:                                // %L816
	or.b32  	%r299, %r23, 128;
	or.b32  	%r28, %r23, 192;
	cvt.rn.f32.s32 	%f395, %r299;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p44, %f21, 0f00000000;
	mov.f32 	%f1342, %f1353;
	@%p44 bra 	LBB0_18;
// %bb.17:                              // %L895
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1342, %f426, %f21;
LBB0_18:                                // %L898
	cvt.rn.f32.s32 	%f429, %r28;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p50, %f26, 0f00000000;
	mov.f32 	%f1343, %f1353;
	@%p50 bra 	LBB0_20;
// %bb.19:                              // %L915
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1343, %f460, %f26;
LBB0_20:                                // %L918
	or.b32  	%r317, %r23, 129;
	or.b32  	%r30, %r23, 193;
	cvt.rn.f32.s32 	%f464, %r317;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p56, %f30, 0f00000000;
	mov.f32 	%f1344, %f1353;
	@%p56 bra 	LBB0_22;
// %bb.21:                              // %L997
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1344, %f495, %f30;
LBB0_22:                                // %L1000
	cvt.rn.f32.s32 	%f498, %r30;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p62, %f35, 0f00000000;
	mov.f32 	%f1345, %f1353;
	@%p62 bra 	LBB0_24;
// %bb.23:                              // %L1017
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1345, %f529, %f35;
LBB0_24:                                // %L1020
	or.b32  	%r335, %r23, 256;
	or.b32  	%r32, %r23, 320;
	cvt.rn.f32.s32 	%f533, %r335;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p68, %f39, 0f00000000;
	mov.f32 	%f1346, %f1353;
	@%p68 bra 	LBB0_26;
// %bb.25:                              // %L1099
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1346, %f564, %f39;
LBB0_26:                                // %L1102
	cvt.rn.f32.s32 	%f567, %r32;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p74, %f44, 0f00000000;
	mov.f32 	%f1347, %f1353;
	@%p74 bra 	LBB0_28;
// %bb.27:                              // %L1119
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1347, %f598, %f44;
LBB0_28:                                // %L1122
	or.b32  	%r353, %r23, 257;
	or.b32  	%r34, %r23, 321;
	cvt.rn.f32.s32 	%f602, %r353;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p80, %f48, 0f00000000;
	mov.f32 	%f1348, %f1353;
	@%p80 bra 	LBB0_30;
// %bb.29:                              // %L1201
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1348, %f633, %f48;
LBB0_30:                                // %L1204
	cvt.rn.f32.s32 	%f636, %r34;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p86, %f53, 0f00000000;
	mov.f32 	%f1349, %f1353;
	@%p86 bra 	LBB0_32;
// %bb.31:                              // %L1221
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1349, %f667, %f53;
LBB0_32:                                // %L1224
	or.b32  	%r371, %r23, 384;
	or.b32  	%r36, %r23, 448;
	cvt.rn.f32.s32 	%f671, %r371;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p92, %f57, 0f00000000;
	mov.f32 	%f1350, %f1353;
	@%p92 bra 	LBB0_34;
// %bb.33:                              // %L1303
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1350, %f702, %f57;
LBB0_34:                                // %L1306
	cvt.rn.f32.s32 	%f705, %r36;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p98, %f62, 0f00000000;
	mov.f32 	%f1351, %f1353;
	@%p98 bra 	LBB0_36;
// %bb.35:                              // %L1323
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1351, %f736, %f62;
LBB0_36:                                // %L1326
	or.b32  	%r389, %r23, 385;
	or.b32  	%r38, %r23, 449;
	cvt.rn.f32.s32 	%f740, %r389;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p104, %f66, 0f00000000;
	mov.f32 	%f1352, %f1353;
	@%p104 bra 	LBB0_38;
// %bb.37:                              // %L1405
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1352, %f771, %f66;
LBB0_38:                                // %L1408
	cvt.rn.f32.s32 	%f774, %r38;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p110, %f71, 0f00000000;
	@%p110 bra 	LBB0_40;
// %bb.39:                              // %L1425
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1353, %f805, %f71;
LBB0_40:                                // %L1428
	mul.lo.s32 	%r40, %r23, 127;
	cvt.rn.f32.s32 	%f808, %r40;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1356, %f74;
	setp.lt.f32 	%p111, %f1356, 0f40000000;
	@%p111 bra 	LBB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1356, 0f4B800000;
	@%p112 bra 	LBB0_48;
	bra.uni 	LBB0_42;
LBB0_48:
	mov.b32 	%r42, %f1356;
	and.b32  	%r407, %r42, 8388607;
	or.b32  	%r16187, %r407, 1065353216;
	mov.b32 	%f1355, %r16187;
	add.s32 	%r408, %r42, -1073741824;
	and.b32  	%r16188, %r408, -8388608;
	setp.eq.s32 	%p118, %r16188, 0;
	@%p118 bra 	LBB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_50:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r409, %r16188, 192937984;
	add.s32 	%r410, %r409, %r16187;
	mov.b32 	%f820, %r410;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1355, %f820, %f826;
	sub.s32 	%r16188, %r16188, %r409;
	mov.b32 	%r16187, %f1355;
	setp.ne.s32 	%p119, %r16188, 0;
	setp.ne.s32 	%p120, %r16187, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	LBB0_50;
LBB0_51:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r42, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f828, %f1355, 0f34000000;
	mul.f32 	%f1356, %f827, %f828;
	bra.uni 	LBB0_52;
LBB0_42:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1356, %f255;
	cvt.rzi.f32.f32 	%f1354, %f811;
	fma.rn.f32 	%f77, %f1354, 0fC0000000, %f1356;
	mov.b32 	%r41, %f77;
	setp.lt.u32 	%p113, %r41, 1073741824;
	@%p113 bra 	LBB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r41, -2147483647;
	@%p114 bra 	LBB0_45;
// %bb.44:
	add.f32 	%f816, %f1354, 0fBF800000;
	setp.lt.f32 	%p117, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1354, %f817, %f816, %p117;
	bra.uni 	LBB0_47;
LBB0_45:
	add.f32 	%f1354, %f1354, 0f3F800000;
	setp.ltu.f32 	%p115, %f77, 0f40800000;
	@%p115 bra 	LBB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1354, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p116, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1354, %f815, %f812, %p116;
LBB0_47:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1356, %f1354, 0fC0000000, %f1356;
LBB0_52:                                // %__internal_fmodf_kernel.exit.i
	abs.f32 	%f829, %f1356;
	setp.gtu.f32 	%p123, %f829, 0f7F800000;
	@%p123 bra 	LBB0_54;
// %bb.53:
	mov.b32 	%r411, %f74;
	and.b32  	%r412, %r411, -2147483648;
	mov.b32 	%r413, %f1356;
	or.b32  	%r414, %r412, %r413;
	mov.b32 	%f1356, %r414;
LBB0_54:                                // %__nv_fmodf.exit
	add.s32 	%r423, %r40, 8128;
	cvt.rn.f32.s32 	%f860, %r423;
	div.approx.f32 	%f93, %f860, %f287;
	abs.f32 	%f1360, %f93;
	setp.lt.f32 	%p131, %f1360, 0f40000000;
	@%p131 bra 	LBB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1360, 0f4B800000;
	@%p132 bra 	LBB0_62;
	bra.uni 	LBB0_56;
LBB0_62:
	mov.b32 	%r50, %f1360;
	and.b32  	%r424, %r50, 8388607;
	or.b32  	%r16189, %r424, 1065353216;
	mov.b32 	%f1359, %r16189;
	add.s32 	%r425, %r50, -1073741824;
	and.b32  	%r16190, %r425, -8388608;
	setp.eq.s32 	%p138, %r16190, 0;
	@%p138 bra 	LBB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i2256.preheader
	mov.f32 	%f871, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f870,%f871;
	// end inline asm
LBB0_64:                                // %__nv_fmaf_rn.exit4.i.i.i2256
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r426, %r16190, 192937984;
	add.s32 	%r427, %r426, %r16189;
	mov.b32 	%f872, %r427;
	mul.f32 	%f873, %f870, %f872;
	sub.f32 	%f874, %f872, %f873;
	fma.rn.f32 	%f875, %f874, %f870, %f873;
	sub.f32 	%f876, %f872, %f875;
	fma.rz.f32 	%f877, %f876, %f870, %f875;
	cvt.rzi.f32.f32 	%f878, %f877;
	sub.f32 	%f1359, %f872, %f878;
	sub.s32 	%r16190, %r16190, %r426;
	mov.b32 	%r16189, %f1359;
	setp.ne.s32 	%p139, %r16190, 0;
	setp.ne.s32 	%p140, %r16189, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	LBB0_64;
LBB0_65:                                // %__internal_fmodf_slowpath_mod.exit.i.i2258
	setp.gt.u32 	%p142, %r50, 2139095039;
	selp.f32 	%f879, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f880, %f1359, 0f34000000;
	mul.f32 	%f1360, %f879, %f880;
	bra.uni 	LBB0_66;
LBB0_56:                                // %__nv_fast_fdividef.exit.i.i.i2228
	div.approx.f32 	%f863, %f1360, %f255;
	cvt.rzi.f32.f32 	%f1358, %f863;
	fma.rn.f32 	%f96, %f1358, 0fC0000000, %f1360;
	mov.b32 	%r49, %f96;
	setp.lt.u32 	%p133, %r49, 1073741824;
	@%p133 bra 	LBB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r49, -2147483647;
	@%p134 bra 	LBB0_59;
// %bb.58:
	add.f32 	%f868, %f1358, 0fBF800000;
	setp.lt.f32 	%p137, %f96, 0fC0000000;
	add.f32 	%f869, %f868, 0fBF800000;
	selp.f32 	%f1358, %f869, %f868, %p137;
	bra.uni 	LBB0_61;
LBB0_59:
	add.f32 	%f1358, %f1358, 0f3F800000;
	setp.ltu.f32 	%p135, %f96, 0f40800000;
	@%p135 bra 	LBB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i2233
	add.f32 	%f864, %f1358, 0f3F800000;
	fma.rn.f32 	%f866, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p136, %f866, 0f00000000;
	add.f32 	%f867, %f864, 0f3F800000;
	selp.f32 	%f1358, %f867, %f864, %p136;
LBB0_61:                                // %__internal_fmodf_fastpath_quot.exit.i.i2237
	fma.rn.f32 	%f1360, %f1358, 0fC0000000, %f1360;
LBB0_66:                                // %__internal_fmodf_kernel.exit.i2262
	shr.u32 	%r18, %r1, 2;
	abs.f32 	%f881, %f1360;
	setp.gtu.f32 	%p143, %f881, 0f7F800000;
	@%p143 bra 	LBB0_68;
// %bb.67:
	mov.b32 	%r428, %f93;
	and.b32  	%r429, %r428, -2147483648;
	mov.b32 	%r430, %f1360;
	or.b32  	%r431, %r429, %r430;
	mov.b32 	%f1360, %r431;
LBB0_68:                                // %__nv_fmodf.exit2263
	and.b32  	%r452, %r1, 3;
	mul.lo.s32 	%r453, %r452, %r18;
	shl.b32 	%r454, %r453, 1;
	neg.s32 	%r61, %r454;
	cvt.rn.f32.s32 	%f914, %r61;
	mov.f32 	%f915, 0f41000000;
	div.approx.f32 	%f110, %f914, %f915;
	abs.f32 	%f1364, %f110;
	setp.lt.f32 	%p151, %f1364, 0f40000000;
	@%p151 bra 	LBB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1364, 0f4B800000;
	@%p152 bra 	LBB0_76;
	bra.uni 	LBB0_70;
LBB0_76:
	mov.b32 	%r63, %f1364;
	and.b32  	%r455, %r63, 8388607;
	or.b32  	%r16191, %r455, 1065353216;
	mov.b32 	%f1363, %r16191;
	add.s32 	%r456, %r63, -1073741824;
	and.b32  	%r16192, %r456, -8388608;
	setp.eq.s32 	%p158, %r16192, 0;
	@%p158 bra 	LBB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i2302.preheader
	mov.f32 	%f925, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f924,%f925;
	// end inline asm
LBB0_78:                                // %__nv_fmaf_rn.exit4.i.i.i2302
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r457, %r16192, 192937984;
	add.s32 	%r458, %r457, %r16191;
	mov.b32 	%f926, %r458;
	mul.f32 	%f927, %f924, %f926;
	sub.f32 	%f928, %f926, %f927;
	fma.rn.f32 	%f929, %f928, %f924, %f927;
	sub.f32 	%f930, %f926, %f929;
	fma.rz.f32 	%f931, %f930, %f924, %f929;
	cvt.rzi.f32.f32 	%f932, %f931;
	sub.f32 	%f1363, %f926, %f932;
	sub.s32 	%r16192, %r16192, %r457;
	mov.b32 	%r16191, %f1363;
	setp.ne.s32 	%p159, %r16192, 0;
	setp.ne.s32 	%p160, %r16191, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	LBB0_78;
LBB0_79:                                // %__internal_fmodf_slowpath_mod.exit.i.i2304
	setp.gt.u32 	%p162, %r63, 2139095039;
	selp.f32 	%f933, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f934, %f1363, 0f34000000;
	mul.f32 	%f1364, %f933, %f934;
	bra.uni 	LBB0_80;
LBB0_70:                                // %__nv_fast_fdividef.exit.i.i.i2274
	div.approx.f32 	%f917, %f1364, %f255;
	cvt.rzi.f32.f32 	%f1362, %f917;
	fma.rn.f32 	%f113, %f1362, 0fC0000000, %f1364;
	mov.b32 	%r62, %f113;
	setp.lt.u32 	%p153, %r62, 1073741824;
	@%p153 bra 	LBB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r62, -2147483647;
	@%p154 bra 	LBB0_73;
// %bb.72:
	add.f32 	%f922, %f1362, 0fBF800000;
	setp.lt.f32 	%p157, %f113, 0fC0000000;
	add.f32 	%f923, %f922, 0fBF800000;
	selp.f32 	%f1362, %f923, %f922, %p157;
	bra.uni 	LBB0_75;
LBB0_73:
	add.f32 	%f1362, %f1362, 0f3F800000;
	setp.ltu.f32 	%p155, %f113, 0f40800000;
	@%p155 bra 	LBB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i2279
	add.f32 	%f918, %f1362, 0f3F800000;
	fma.rn.f32 	%f920, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p156, %f920, 0f00000000;
	add.f32 	%f921, %f918, 0f3F800000;
	selp.f32 	%f1362, %f921, %f918, %p156;
LBB0_75:                                // %__internal_fmodf_fastpath_quot.exit.i.i2283
	fma.rn.f32 	%f1364, %f1362, 0fC0000000, %f1364;
LBB0_80:                                // %__internal_fmodf_kernel.exit.i2308
	abs.f32 	%f935, %f1364;
	setp.gtu.f32 	%p163, %f935, 0f7F800000;
	@%p163 bra 	LBB0_82;
// %bb.81:
	mov.b32 	%r459, %f110;
	and.b32  	%r460, %r459, -2147483648;
	mov.b32 	%r461, %f1364;
	or.b32  	%r462, %r460, %r461;
	mov.b32 	%f1364, %r462;
LBB0_82:                                // %__nv_fmodf.exit2309
	shl.b32 	%r70, %r18, 3;
	sub.s32 	%r471, %r61, %r70;
	cvt.rn.f32.s32 	%f966, %r471;
	div.approx.f32 	%f129, %f966, %f915;
	abs.f32 	%f1368, %f129;
	setp.lt.f32 	%p171, %f1368, 0f40000000;
	@%p171 bra 	LBB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1368, 0f4B800000;
	@%p172 bra 	LBB0_90;
	bra.uni 	LBB0_84;
LBB0_90:
	mov.b32 	%r72, %f1368;
	and.b32  	%r472, %r72, 8388607;
	or.b32  	%r16193, %r472, 1065353216;
	mov.b32 	%f1367, %r16193;
	add.s32 	%r473, %r72, -1073741824;
	and.b32  	%r16194, %r473, -8388608;
	setp.eq.s32 	%p178, %r16194, 0;
	@%p178 bra 	LBB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i2348.preheader
	mov.f32 	%f977, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f976,%f977;
	// end inline asm
LBB0_92:                                // %__nv_fmaf_rn.exit4.i.i.i2348
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r474, %r16194, 192937984;
	add.s32 	%r475, %r474, %r16193;
	mov.b32 	%f978, %r475;
	mul.f32 	%f979, %f976, %f978;
	sub.f32 	%f980, %f978, %f979;
	fma.rn.f32 	%f981, %f980, %f976, %f979;
	sub.f32 	%f982, %f978, %f981;
	fma.rz.f32 	%f983, %f982, %f976, %f981;
	cvt.rzi.f32.f32 	%f984, %f983;
	sub.f32 	%f1367, %f978, %f984;
	sub.s32 	%r16194, %r16194, %r474;
	mov.b32 	%r16193, %f1367;
	setp.ne.s32 	%p179, %r16194, 0;
	setp.ne.s32 	%p180, %r16193, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	LBB0_92;
LBB0_93:                                // %__internal_fmodf_slowpath_mod.exit.i.i2350
	setp.gt.u32 	%p182, %r72, 2139095039;
	selp.f32 	%f985, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f986, %f1367, 0f34000000;
	mul.f32 	%f1368, %f985, %f986;
	bra.uni 	LBB0_94;
LBB0_84:                                // %__nv_fast_fdividef.exit.i.i.i2320
	div.approx.f32 	%f969, %f1368, %f255;
	cvt.rzi.f32.f32 	%f1366, %f969;
	fma.rn.f32 	%f132, %f1366, 0fC0000000, %f1368;
	mov.b32 	%r71, %f132;
	setp.lt.u32 	%p173, %r71, 1073741824;
	@%p173 bra 	LBB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r71, -2147483647;
	@%p174 bra 	LBB0_87;
// %bb.86:
	add.f32 	%f974, %f1366, 0fBF800000;
	setp.lt.f32 	%p177, %f132, 0fC0000000;
	add.f32 	%f975, %f974, 0fBF800000;
	selp.f32 	%f1366, %f975, %f974, %p177;
	bra.uni 	LBB0_89;
LBB0_87:
	add.f32 	%f1366, %f1366, 0f3F800000;
	setp.ltu.f32 	%p175, %f132, 0f40800000;
	@%p175 bra 	LBB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i2325
	add.f32 	%f970, %f1366, 0f3F800000;
	fma.rn.f32 	%f972, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p176, %f972, 0f00000000;
	add.f32 	%f973, %f970, 0f3F800000;
	selp.f32 	%f1366, %f973, %f970, %p176;
LBB0_89:                                // %__internal_fmodf_fastpath_quot.exit.i.i2329
	fma.rn.f32 	%f1368, %f1366, 0fC0000000, %f1368;
LBB0_94:                                // %__internal_fmodf_kernel.exit.i2354
	shl.b32 	%r11, %r1, 1;
	abs.f32 	%f987, %f1368;
	setp.gtu.f32 	%p183, %f987, 0f7F800000;
	@%p183 bra 	LBB0_96;
// %bb.95:
	mov.b32 	%r476, %f129;
	and.b32  	%r477, %r476, -2147483648;
	mov.b32 	%r478, %f1368;
	or.b32  	%r479, %r477, %r478;
	mov.b32 	%f1368, %r479;
LBB0_96:                                // %__nv_fmodf.exit2355
	and.b32  	%r500, %r11, 6;
	shl.b32 	%r501, %r500, 1;
	neg.s32 	%r83, %r501;
	mul.lo.s32 	%r84, %r83, %r18;
	cvt.rn.f32.s32 	%f1020, %r84;
	div.approx.f32 	%f146, %f1020, %f287;
	abs.f32 	%f1372, %f146;
	setp.lt.f32 	%p191, %f1372, 0f40000000;
	@%p191 bra 	LBB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1372, 0f4B800000;
	@%p192 bra 	LBB0_104;
	bra.uni 	LBB0_98;
LBB0_104:
	mov.b32 	%r86, %f1372;
	and.b32  	%r502, %r86, 8388607;
	or.b32  	%r16195, %r502, 1065353216;
	mov.b32 	%f1371, %r16195;
	add.s32 	%r503, %r86, -1073741824;
	and.b32  	%r16196, %r503, -8388608;
	setp.eq.s32 	%p198, %r16196, 0;
	@%p198 bra 	LBB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i2394.preheader
	mov.f32 	%f1031, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1030,%f1031;
	// end inline asm
LBB0_106:                               // %__nv_fmaf_rn.exit4.i.i.i2394
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r504, %r16196, 192937984;
	add.s32 	%r505, %r504, %r16195;
	mov.b32 	%f1032, %r505;
	mul.f32 	%f1033, %f1030, %f1032;
	sub.f32 	%f1034, %f1032, %f1033;
	fma.rn.f32 	%f1035, %f1034, %f1030, %f1033;
	sub.f32 	%f1036, %f1032, %f1035;
	fma.rz.f32 	%f1037, %f1036, %f1030, %f1035;
	cvt.rzi.f32.f32 	%f1038, %f1037;
	sub.f32 	%f1371, %f1032, %f1038;
	sub.s32 	%r16196, %r16196, %r504;
	mov.b32 	%r16195, %f1371;
	setp.ne.s32 	%p199, %r16196, 0;
	setp.ne.s32 	%p200, %r16195, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	LBB0_106;
LBB0_107:                               // %__internal_fmodf_slowpath_mod.exit.i.i2396
	setp.gt.u32 	%p202, %r86, 2139095039;
	selp.f32 	%f1039, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1040, %f1371, 0f34000000;
	mul.f32 	%f1372, %f1039, %f1040;
	bra.uni 	LBB0_108;
LBB0_98:                                // %__nv_fast_fdividef.exit.i.i.i2366
	div.approx.f32 	%f1023, %f1372, %f255;
	cvt.rzi.f32.f32 	%f1370, %f1023;
	fma.rn.f32 	%f149, %f1370, 0fC0000000, %f1372;
	mov.b32 	%r85, %f149;
	setp.lt.u32 	%p193, %r85, 1073741824;
	@%p193 bra 	LBB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r85, -2147483647;
	@%p194 bra 	LBB0_101;
// %bb.100:
	add.f32 	%f1028, %f1370, 0fBF800000;
	setp.lt.f32 	%p197, %f149, 0fC0000000;
	add.f32 	%f1029, %f1028, 0fBF800000;
	selp.f32 	%f1370, %f1029, %f1028, %p197;
	bra.uni 	LBB0_103;
LBB0_101:
	add.f32 	%f1370, %f1370, 0f3F800000;
	setp.ltu.f32 	%p195, %f149, 0f40800000;
	@%p195 bra 	LBB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i2371
	add.f32 	%f1024, %f1370, 0f3F800000;
	fma.rn.f32 	%f1026, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p196, %f1026, 0f00000000;
	add.f32 	%f1027, %f1024, 0f3F800000;
	selp.f32 	%f1370, %f1027, %f1024, %p196;
LBB0_103:                               // %__internal_fmodf_fastpath_quot.exit.i.i2375
	fma.rn.f32 	%f1372, %f1370, 0fC0000000, %f1372;
LBB0_108:                               // %__internal_fmodf_kernel.exit.i2400
	abs.f32 	%f1041, %f1372;
	setp.gtu.f32 	%p203, %f1041, 0f7F800000;
	@%p203 bra 	LBB0_110;
// %bb.109:
	mov.b32 	%r506, %f146;
	and.b32  	%r507, %r506, -2147483648;
	mov.b32 	%r508, %f1372;
	or.b32  	%r509, %r507, %r508;
	mov.b32 	%f1372, %r509;
LBB0_110:                               // %__nv_fmodf.exit2401
	sub.s32 	%r518, %r84, %r70;
	cvt.rn.f32.s32 	%f1072, %r518;
	div.approx.f32 	%f165, %f1072, %f287;
	abs.f32 	%f1376, %f165;
	setp.lt.f32 	%p211, %f1376, 0f40000000;
	@%p211 bra 	LBB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1376, 0f4B800000;
	@%p212 bra 	LBB0_118;
	bra.uni 	LBB0_112;
LBB0_118:
	mov.b32 	%r94, %f1376;
	and.b32  	%r519, %r94, 8388607;
	or.b32  	%r16197, %r519, 1065353216;
	mov.b32 	%f1375, %r16197;
	add.s32 	%r520, %r94, -1073741824;
	and.b32  	%r16198, %r520, -8388608;
	setp.eq.s32 	%p218, %r16198, 0;
	@%p218 bra 	LBB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i2440.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
LBB0_120:                               // %__nv_fmaf_rn.exit4.i.i.i2440
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r521, %r16198, 192937984;
	add.s32 	%r522, %r521, %r16197;
	mov.b32 	%f1084, %r522;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1375, %f1084, %f1090;
	sub.s32 	%r16198, %r16198, %r521;
	mov.b32 	%r16197, %f1375;
	setp.ne.s32 	%p219, %r16198, 0;
	setp.ne.s32 	%p220, %r16197, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	LBB0_120;
LBB0_121:                               // %__internal_fmodf_slowpath_mod.exit.i.i2442
	setp.gt.u32 	%p222, %r94, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1375, 0f34000000;
	mul.f32 	%f1376, %f1091, %f1092;
	bra.uni 	LBB0_122;
LBB0_112:                               // %__nv_fast_fdividef.exit.i.i.i2412
	div.approx.f32 	%f1075, %f1376, %f255;
	cvt.rzi.f32.f32 	%f1374, %f1075;
	fma.rn.f32 	%f168, %f1374, 0fC0000000, %f1376;
	mov.b32 	%r93, %f168;
	setp.lt.u32 	%p213, %r93, 1073741824;
	@%p213 bra 	LBB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r93, -2147483647;
	@%p214 bra 	LBB0_115;
// %bb.114:
	add.f32 	%f1080, %f1374, 0fBF800000;
	setp.lt.f32 	%p217, %f168, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1374, %f1081, %f1080, %p217;
	bra.uni 	LBB0_117;
LBB0_115:
	add.f32 	%f1374, %f1374, 0f3F800000;
	setp.ltu.f32 	%p215, %f168, 0f40800000;
	@%p215 bra 	LBB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i2417
	add.f32 	%f1076, %f1374, 0f3F800000;
	fma.rn.f32 	%f1078, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1374, %f1079, %f1076, %p216;
LBB0_117:                               // %__internal_fmodf_fastpath_quot.exit.i.i2421
	fma.rn.f32 	%f1376, %f1374, 0fC0000000, %f1376;
LBB0_122:                               // %__internal_fmodf_kernel.exit.i2446
	shr.u32 	%r15, %r1, 1;
	shr.u32 	%r21, %r1, 3;
	abs.f32 	%f1093, %f1376;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	LBB0_124;
// %bb.123:
	mov.b32 	%r523, %f165;
	and.b32  	%r524, %r523, -2147483648;
	mov.b32 	%r525, %f1376;
	or.b32  	%r526, %r524, %r525;
	mov.b32 	%f1376, %r526;
LBB0_124:                               // %__nv_fmodf.exit2447
	and.b32  	%r541, %r21, 2;
	and.b32  	%r542, %r15, 4;
	or.b32  	%r543, %r19, %r541;
	or.b32  	%r103, %r543, %r542;
	mul.lo.s32 	%r104, %r83, %r103;
	cvt.rn.f32.s32 	%f1126, %r104;
	mov.f32 	%f1127, 0f41800000;
	div.approx.f32 	%f182, %f1126, %f1127;
	abs.f32 	%f1380, %f182;
	setp.lt.f32 	%p231, %f1380, 0f40000000;
	@%p231 bra 	LBB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1380, 0f4B800000;
	@%p232 bra 	LBB0_132;
	bra.uni 	LBB0_126;
LBB0_132:
	mov.b32 	%r106, %f1380;
	and.b32  	%r544, %r106, 8388607;
	or.b32  	%r16199, %r544, 1065353216;
	mov.b32 	%f1379, %r16199;
	add.s32 	%r545, %r106, -1073741824;
	and.b32  	%r16200, %r545, -8388608;
	setp.eq.s32 	%p238, %r16200, 0;
	@%p238 bra 	LBB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i2486.preheader
	mov.f32 	%f1137, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1136,%f1137;
	// end inline asm
LBB0_134:                               // %__nv_fmaf_rn.exit4.i.i.i2486
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r546, %r16200, 192937984;
	add.s32 	%r547, %r546, %r16199;
	mov.b32 	%f1138, %r547;
	mul.f32 	%f1139, %f1136, %f1138;
	sub.f32 	%f1140, %f1138, %f1139;
	fma.rn.f32 	%f1141, %f1140, %f1136, %f1139;
	sub.f32 	%f1142, %f1138, %f1141;
	fma.rz.f32 	%f1143, %f1142, %f1136, %f1141;
	cvt.rzi.f32.f32 	%f1144, %f1143;
	sub.f32 	%f1379, %f1138, %f1144;
	sub.s32 	%r16200, %r16200, %r546;
	mov.b32 	%r16199, %f1379;
	setp.ne.s32 	%p239, %r16200, 0;
	setp.ne.s32 	%p240, %r16199, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	LBB0_134;
LBB0_135:                               // %__internal_fmodf_slowpath_mod.exit.i.i2488
	setp.gt.u32 	%p242, %r106, 2139095039;
	selp.f32 	%f1145, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1146, %f1379, 0f34000000;
	mul.f32 	%f1380, %f1145, %f1146;
	bra.uni 	LBB0_136;
LBB0_126:                               // %__nv_fast_fdividef.exit.i.i.i2458
	div.approx.f32 	%f1129, %f1380, %f255;
	cvt.rzi.f32.f32 	%f1378, %f1129;
	fma.rn.f32 	%f185, %f1378, 0fC0000000, %f1380;
	mov.b32 	%r105, %f185;
	setp.lt.u32 	%p233, %r105, 1073741824;
	@%p233 bra 	LBB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r105, -2147483647;
	@%p234 bra 	LBB0_129;
// %bb.128:
	add.f32 	%f1134, %f1378, 0fBF800000;
	setp.lt.f32 	%p237, %f185, 0fC0000000;
	add.f32 	%f1135, %f1134, 0fBF800000;
	selp.f32 	%f1378, %f1135, %f1134, %p237;
	bra.uni 	LBB0_131;
LBB0_129:
	add.f32 	%f1378, %f1378, 0f3F800000;
	setp.ltu.f32 	%p235, %f185, 0f40800000;
	@%p235 bra 	LBB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i2463
	add.f32 	%f1130, %f1378, 0f3F800000;
	fma.rn.f32 	%f1132, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p236, %f1132, 0f00000000;
	add.f32 	%f1133, %f1130, 0f3F800000;
	selp.f32 	%f1378, %f1133, %f1130, %p236;
LBB0_131:                               // %__internal_fmodf_fastpath_quot.exit.i.i2467
	fma.rn.f32 	%f1380, %f1378, 0fC0000000, %f1380;
LBB0_136:                               // %__internal_fmodf_kernel.exit.i2492
	abs.f32 	%f1147, %f1380;
	setp.gtu.f32 	%p243, %f1147, 0f7F800000;
	@%p243 bra 	LBB0_138;
// %bb.137:
	mov.b32 	%r548, %f182;
	and.b32  	%r549, %r548, -2147483648;
	mov.b32 	%r550, %f1380;
	or.b32  	%r551, %r549, %r550;
	mov.b32 	%f1380, %r551;
LBB0_138:                               // %__nv_fmodf.exit2493
	shl.b32 	%r560, %r103, 3;
	sub.s32 	%r561, %r104, %r560;
	cvt.rn.f32.s32 	%f1178, %r561;
	div.approx.f32 	%f201, %f1178, %f1127;
	abs.f32 	%f1384, %f201;
	setp.lt.f32 	%p251, %f1384, 0f40000000;
	@%p251 bra 	LBB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1384, 0f4B800000;
	@%p252 bra 	LBB0_146;
	bra.uni 	LBB0_140;
LBB0_146:
	mov.b32 	%r114, %f1384;
	and.b32  	%r562, %r114, 8388607;
	or.b32  	%r16201, %r562, 1065353216;
	mov.b32 	%f1383, %r16201;
	add.s32 	%r563, %r114, -1073741824;
	and.b32  	%r16202, %r563, -8388608;
	setp.eq.s32 	%p258, %r16202, 0;
	@%p258 bra 	LBB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i2532.preheader
	mov.f32 	%f1189, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1188,%f1189;
	// end inline asm
LBB0_148:                               // %__nv_fmaf_rn.exit4.i.i.i2532
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r564, %r16202, 192937984;
	add.s32 	%r565, %r564, %r16201;
	mov.b32 	%f1190, %r565;
	mul.f32 	%f1191, %f1188, %f1190;
	sub.f32 	%f1192, %f1190, %f1191;
	fma.rn.f32 	%f1193, %f1192, %f1188, %f1191;
	sub.f32 	%f1194, %f1190, %f1193;
	fma.rz.f32 	%f1195, %f1194, %f1188, %f1193;
	cvt.rzi.f32.f32 	%f1196, %f1195;
	sub.f32 	%f1383, %f1190, %f1196;
	sub.s32 	%r16202, %r16202, %r564;
	mov.b32 	%r16201, %f1383;
	setp.ne.s32 	%p259, %r16202, 0;
	setp.ne.s32 	%p260, %r16201, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	LBB0_148;
LBB0_149:                               // %__internal_fmodf_slowpath_mod.exit.i.i2534
	setp.gt.u32 	%p262, %r114, 2139095039;
	selp.f32 	%f1197, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1198, %f1383, 0f34000000;
	mul.f32 	%f1384, %f1197, %f1198;
	bra.uni 	LBB0_150;
LBB0_140:                               // %__nv_fast_fdividef.exit.i.i.i2504
	div.approx.f32 	%f1181, %f1384, %f255;
	cvt.rzi.f32.f32 	%f1382, %f1181;
	fma.rn.f32 	%f204, %f1382, 0fC0000000, %f1384;
	mov.b32 	%r113, %f204;
	setp.lt.u32 	%p253, %r113, 1073741824;
	@%p253 bra 	LBB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r113, -2147483647;
	@%p254 bra 	LBB0_143;
// %bb.142:
	add.f32 	%f1186, %f1382, 0fBF800000;
	setp.lt.f32 	%p257, %f204, 0fC0000000;
	add.f32 	%f1187, %f1186, 0fBF800000;
	selp.f32 	%f1382, %f1187, %f1186, %p257;
	bra.uni 	LBB0_145;
LBB0_143:
	add.f32 	%f1382, %f1382, 0f3F800000;
	setp.ltu.f32 	%p255, %f204, 0f40800000;
	@%p255 bra 	LBB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i2509
	add.f32 	%f1182, %f1382, 0f3F800000;
	fma.rn.f32 	%f1184, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p256, %f1184, 0f00000000;
	add.f32 	%f1185, %f1182, 0f3F800000;
	selp.f32 	%f1382, %f1185, %f1182, %p256;
LBB0_145:                               // %__internal_fmodf_fastpath_quot.exit.i.i2513
	fma.rn.f32 	%f1384, %f1382, 0fC0000000, %f1384;
LBB0_150:                               // %__internal_fmodf_kernel.exit.i2538
	and.b32  	%r10, %r1, 16;
	abs.f32 	%f1199, %f1384;
	setp.gtu.f32 	%p263, %f1199, 0f7F800000;
	@%p263 bra 	LBB0_152;
// %bb.151:
	mov.b32 	%r566, %f201;
	and.b32  	%r567, %r566, -2147483648;
	mov.b32 	%r568, %f1384;
	or.b32  	%r569, %r567, %r568;
	mov.b32 	%f1384, %r569;
LBB0_152:                               // %__nv_fmodf.exit2539
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r591, %r257, %r10;
	neg.s32 	%r592, %r591;
	mad.lo.s32 	%r593, %r22, -32, %r592;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r594, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r595, %rs21;
	sub.s32 	%r596, %r593, %r595;
	shl.b32 	%r597, %r596, 1;
	cvt.rn.f32.s32 	%f1232, %r597;
	div.approx.f32 	%f218, %f1232, %f287;
	abs.f32 	%f1388, %f218;
	setp.lt.f32 	%p271, %f1388, 0f40000000;
	@%p271 bra 	LBB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1388, 0f4B800000;
	@%p272 bra 	LBB0_160;
	bra.uni 	LBB0_154;
LBB0_160:
	mov.b32 	%r127, %f1388;
	and.b32  	%r598, %r127, 8388607;
	or.b32  	%r16203, %r598, 1065353216;
	mov.b32 	%f1387, %r16203;
	add.s32 	%r599, %r127, -1073741824;
	and.b32  	%r16204, %r599, -8388608;
	setp.eq.s32 	%p278, %r16204, 0;
	@%p278 bra 	LBB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i2578.preheader
	mov.f32 	%f1243, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1242,%f1243;
	// end inline asm
LBB0_162:                               // %__nv_fmaf_rn.exit4.i.i.i2578
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r600, %r16204, 192937984;
	add.s32 	%r601, %r600, %r16203;
	mov.b32 	%f1244, %r601;
	mul.f32 	%f1245, %f1242, %f1244;
	sub.f32 	%f1246, %f1244, %f1245;
	fma.rn.f32 	%f1247, %f1246, %f1242, %f1245;
	sub.f32 	%f1248, %f1244, %f1247;
	fma.rz.f32 	%f1249, %f1248, %f1242, %f1247;
	cvt.rzi.f32.f32 	%f1250, %f1249;
	sub.f32 	%f1387, %f1244, %f1250;
	sub.s32 	%r16204, %r16204, %r600;
	mov.b32 	%r16203, %f1387;
	setp.ne.s32 	%p279, %r16204, 0;
	setp.ne.s32 	%p280, %r16203, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	LBB0_162;
LBB0_163:                               // %__internal_fmodf_slowpath_mod.exit.i.i2580
	setp.gt.u32 	%p282, %r127, 2139095039;
	selp.f32 	%f1251, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1252, %f1387, 0f34000000;
	mul.f32 	%f1388, %f1251, %f1252;
	bra.uni 	LBB0_164;
LBB0_154:                               // %__nv_fast_fdividef.exit.i.i.i2550
	div.approx.f32 	%f1235, %f1388, %f255;
	cvt.rzi.f32.f32 	%f1386, %f1235;
	fma.rn.f32 	%f221, %f1386, 0fC0000000, %f1388;
	mov.b32 	%r126, %f221;
	setp.lt.u32 	%p273, %r126, 1073741824;
	@%p273 bra 	LBB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r126, -2147483647;
	@%p274 bra 	LBB0_157;
// %bb.156:
	add.f32 	%f1240, %f1386, 0fBF800000;
	setp.lt.f32 	%p277, %f221, 0fC0000000;
	add.f32 	%f1241, %f1240, 0fBF800000;
	selp.f32 	%f1386, %f1241, %f1240, %p277;
	bra.uni 	LBB0_159;
LBB0_157:
	add.f32 	%f1386, %f1386, 0f3F800000;
	setp.ltu.f32 	%p275, %f221, 0f40800000;
	@%p275 bra 	LBB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i2555
	add.f32 	%f1236, %f1386, 0f3F800000;
	fma.rn.f32 	%f1238, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p276, %f1238, 0f00000000;
	add.f32 	%f1239, %f1236, 0f3F800000;
	selp.f32 	%f1386, %f1239, %f1236, %p276;
LBB0_159:                               // %__internal_fmodf_fastpath_quot.exit.i.i2559
	fma.rn.f32 	%f1388, %f1386, 0fC0000000, %f1388;
LBB0_164:                               // %__internal_fmodf_kernel.exit.i2584
	sub.s32 	%r125, %r593, %r594;
	abs.f32 	%f1253, %f1388;
	setp.gtu.f32 	%p283, %f1253, 0f7F800000;
	@%p283 bra 	LBB0_166;
// %bb.165:
	mov.b32 	%r602, %f218;
	and.b32  	%r603, %r602, -2147483648;
	mov.b32 	%r604, %f1388;
	or.b32  	%r605, %r603, %r604;
	mov.b32 	%f1388, %r605;
LBB0_166:                               // %__nv_fmodf.exit2585
	shl.b32 	%r614, %r125, 1;
	cvt.rn.f32.s32 	%f1284, %r614;
	div.approx.f32 	%f237, %f1284, %f287;
	abs.f32 	%f1392, %f237;
	setp.lt.f32 	%p291, %f1392, 0f40000000;
	@%p291 bra 	LBB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1392, 0f4B800000;
	@%p292 bra 	LBB0_174;
	bra.uni 	LBB0_168;
LBB0_174:
	mov.b32 	%r135, %f1392;
	and.b32  	%r615, %r135, 8388607;
	or.b32  	%r16205, %r615, 1065353216;
	mov.b32 	%f1391, %r16205;
	add.s32 	%r616, %r135, -1073741824;
	and.b32  	%r16206, %r616, -8388608;
	setp.eq.s32 	%p298, %r16206, 0;
	@%p298 bra 	LBB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i2624.preheader
	mov.f32 	%f1295, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1294,%f1295;
	// end inline asm
LBB0_176:                               // %__nv_fmaf_rn.exit4.i.i.i2624
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r617, %r16206, 192937984;
	add.s32 	%r618, %r617, %r16205;
	mov.b32 	%f1296, %r618;
	mul.f32 	%f1297, %f1294, %f1296;
	sub.f32 	%f1298, %f1296, %f1297;
	fma.rn.f32 	%f1299, %f1298, %f1294, %f1297;
	sub.f32 	%f1300, %f1296, %f1299;
	fma.rz.f32 	%f1301, %f1300, %f1294, %f1299;
	cvt.rzi.f32.f32 	%f1302, %f1301;
	sub.f32 	%f1391, %f1296, %f1302;
	sub.s32 	%r16206, %r16206, %r617;
	mov.b32 	%r16205, %f1391;
	setp.ne.s32 	%p299, %r16206, 0;
	setp.ne.s32 	%p300, %r16205, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	LBB0_176;
LBB0_177:                               // %__internal_fmodf_slowpath_mod.exit.i.i2626
	setp.gt.u32 	%p302, %r135, 2139095039;
	selp.f32 	%f1303, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1304, %f1391, 0f34000000;
	mul.f32 	%f1392, %f1303, %f1304;
	bra.uni 	LBB0_178;
LBB0_168:                               // %__nv_fast_fdividef.exit.i.i.i2596
	div.approx.f32 	%f1287, %f1392, %f255;
	cvt.rzi.f32.f32 	%f1390, %f1287;
	fma.rn.f32 	%f240, %f1390, 0fC0000000, %f1392;
	mov.b32 	%r134, %f240;
	setp.lt.u32 	%p293, %r134, 1073741824;
	@%p293 bra 	LBB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r134, -2147483647;
	@%p294 bra 	LBB0_171;
// %bb.170:
	add.f32 	%f1292, %f1390, 0fBF800000;
	setp.lt.f32 	%p297, %f240, 0fC0000000;
	add.f32 	%f1293, %f1292, 0fBF800000;
	selp.f32 	%f1390, %f1293, %f1292, %p297;
	bra.uni 	LBB0_173;
LBB0_171:
	add.f32 	%f1390, %f1390, 0f3F800000;
	setp.ltu.f32 	%p295, %f240, 0f40800000;
	@%p295 bra 	LBB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i2601
	add.f32 	%f1288, %f1390, 0f3F800000;
	fma.rn.f32 	%f1290, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p296, %f1290, 0f00000000;
	add.f32 	%f1291, %f1288, 0f3F800000;
	selp.f32 	%f1390, %f1291, %f1288, %p296;
LBB0_173:                               // %__internal_fmodf_fastpath_quot.exit.i.i2605
	fma.rn.f32 	%f1392, %f1390, 0fC0000000, %f1392;
LBB0_178:                               // %__internal_fmodf_kernel.exit.i2630
	abs.f32 	%f1305, %f1392;
	setp.gtu.f32 	%p303, %f1305, 0f7F800000;
	@%p303 bra 	LBB0_180;
// %bb.179:
	mov.b32 	%r619, %f237;
	and.b32  	%r620, %r619, -2147483648;
	mov.b32 	%r621, %f1392;
	or.b32  	%r622, %r620, %r621;
	mov.b32 	%f1392, %r622;
LBB0_180:                               // %__nv_fmodf.exit2631
	setp.le.s32 	%p311, %r6, %r5;
	mov.u32 	%r16186, 0;
	@%p311 bra 	LBB0_187;
// %bb.181:                             // %L2190.lr.ph
	mov.f32 	%f259, 0f44004000;
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f639, %f637, %f259;
	div.approx.f32 	%f674, %f672, %f259;
	div.approx.f32 	%f708, %f706, %f259;
	div.approx.f32 	%f743, %f741, %f259;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	abs.f32 	%f640, %f639;
	abs.f32 	%f675, %f674;
	abs.f32 	%f709, %f708;
	abs.f32 	%f744, %f743;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p15, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p21, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p27, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p33, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p39, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p45, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p51, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p57, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p63, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p69, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p75, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p81, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	setp.gt.f32 	%p87, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	setp.gt.f32 	%p93, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	setp.gt.f32 	%p99, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	setp.gt.f32 	%p105, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f263, %f262, %f260, %p15;
	selp.f32 	%f297, %f296, %f294, %p21;
	selp.f32 	%f332, %f331, %f329, %p27;
	selp.f32 	%f366, %f365, %f363, %p33;
	selp.f32 	%f401, %f400, %f398, %p39;
	selp.f32 	%f435, %f434, %f432, %p45;
	selp.f32 	%f470, %f469, %f467, %p51;
	selp.f32 	%f504, %f503, %f501, %p57;
	selp.f32 	%f539, %f538, %f536, %p63;
	selp.f32 	%f573, %f572, %f570, %p69;
	selp.f32 	%f608, %f607, %f605, %p75;
	selp.f32 	%f642, %f641, %f639, %p81;
	selp.f32 	%f677, %f676, %f674, %p87;
	selp.f32 	%f711, %f710, %f708, %p93;
	selp.f32 	%f746, %f745, %f743, %p99;
	selp.f32 	%f780, %f779, %f777, %p105;
	add.f32 	%f830, %f1356, %f1356;
	add.f32 	%f882, %f1360, %f1360;
	add.f32 	%f936, %f1364, %f1364;
	add.f32 	%f988, %f1368, %f1368;
	add.f32 	%f1148, %f1380, %f1380;
	add.f32 	%f1200, %f1384, %f1384;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	add.f32 	%f747, %f746, %f746;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r415, %f830;
	mov.b32 	%r444, %f882;
	mov.b32 	%r463, %f936;
	mov.b32 	%r492, %f988;
	add.f32 	%f1042, %f1372, %f1372;
	add.f32 	%f1094, %f1376, %f1376;
	mov.b32 	%r552, %f1148;
	mov.b32 	%r582, %f1200;
	mov.b32 	%r264, %f264;
	mov.b32 	%r271, %f298;
	mov.b32 	%r282, %f333;
	mov.b32 	%r289, %f367;
	mov.b32 	%r300, %f402;
	mov.b32 	%r307, %f436;
	mov.b32 	%r318, %f471;
	mov.b32 	%r325, %f505;
	mov.b32 	%r336, %f540;
	mov.b32 	%r343, %f574;
	mov.b32 	%r354, %f609;
	mov.b32 	%r361, %f643;
	mov.b32 	%r372, %f678;
	mov.b32 	%r379, %f712;
	mov.b32 	%r390, %f747;
	mov.b32 	%r397, %f781;
	and.b32  	%r416, %r415, -2147483648;
	and.b32  	%r445, %r444, -2147483648;
	and.b32  	%r464, %r463, -2147483648;
	and.b32  	%r493, %r492, -2147483648;
	mov.b32 	%r510, %f1042;
	mov.b32 	%r533, %f1094;
	and.b32  	%r553, %r552, -2147483648;
	and.b32  	%r583, %r582, -2147483648;
	add.f32 	%f1254, %f1388, %f1388;
	and.b32  	%r265, %r264, -2147483648;
	and.b32  	%r272, %r271, -2147483648;
	and.b32  	%r283, %r282, -2147483648;
	and.b32  	%r290, %r289, -2147483648;
	and.b32  	%r301, %r300, -2147483648;
	and.b32  	%r308, %r307, -2147483648;
	and.b32  	%r319, %r318, -2147483648;
	and.b32  	%r326, %r325, -2147483648;
	and.b32  	%r337, %r336, -2147483648;
	and.b32  	%r344, %r343, -2147483648;
	and.b32  	%r355, %r354, -2147483648;
	and.b32  	%r362, %r361, -2147483648;
	and.b32  	%r373, %r372, -2147483648;
	and.b32  	%r380, %r379, -2147483648;
	and.b32  	%r391, %r390, -2147483648;
	and.b32  	%r398, %r397, -2147483648;
	or.b32  	%r417, %r416, 1056964608;
	or.b32  	%r446, %r445, 1056964608;
	or.b32  	%r465, %r464, 1056964608;
	or.b32  	%r494, %r493, 1056964608;
	and.b32  	%r511, %r510, -2147483648;
	and.b32  	%r534, %r533, -2147483648;
	or.b32  	%r554, %r553, 1056964608;
	or.b32  	%r584, %r583, 1056964608;
	mov.b32 	%r606, %f1254;
	or.b32  	%r266, %r265, 1056964608;
	or.b32  	%r273, %r272, 1056964608;
	or.b32  	%r284, %r283, 1056964608;
	or.b32  	%r291, %r290, 1056964608;
	or.b32  	%r302, %r301, 1056964608;
	or.b32  	%r309, %r308, 1056964608;
	or.b32  	%r320, %r319, 1056964608;
	or.b32  	%r327, %r326, 1056964608;
	or.b32  	%r338, %r337, 1056964608;
	or.b32  	%r345, %r344, 1056964608;
	or.b32  	%r356, %r355, 1056964608;
	or.b32  	%r363, %r362, 1056964608;
	or.b32  	%r374, %r373, 1056964608;
	or.b32  	%r381, %r380, 1056964608;
	or.b32  	%r392, %r391, 1056964608;
	or.b32  	%r399, %r398, 1056964608;
	mov.b32 	%f831, %r417;
	mov.b32 	%f883, %r446;
	mov.b32 	%f937, %r465;
	mov.b32 	%f989, %r494;
	or.b32  	%r512, %r511, 1056964608;
	or.b32  	%r535, %r534, 1056964608;
	mov.b32 	%f1149, %r554;
	mov.b32 	%f1201, %r584;
	and.b32  	%r607, %r606, -2147483648;
	mov.b32 	%f265, %r266;
	mov.b32 	%f299, %r273;
	mov.b32 	%f334, %r284;
	mov.b32 	%f368, %r291;
	mov.b32 	%f403, %r302;
	mov.b32 	%f437, %r309;
	mov.b32 	%f472, %r320;
	mov.b32 	%f506, %r327;
	mov.b32 	%f541, %r338;
	mov.b32 	%f575, %r345;
	mov.b32 	%f610, %r356;
	mov.b32 	%f644, %r363;
	mov.b32 	%f679, %r374;
	mov.b32 	%f713, %r381;
	mov.b32 	%f748, %r392;
	mov.b32 	%f782, %r399;
	add.f32 	%f832, %f830, %f831;
	abs.f32 	%f834, %f830;
	add.f32 	%f884, %f882, %f883;
	abs.f32 	%f886, %f882;
	add.f32 	%f938, %f936, %f937;
	abs.f32 	%f940, %f936;
	add.f32 	%f990, %f988, %f989;
	abs.f32 	%f992, %f988;
	mov.b32 	%f1043, %r512;
	mov.b32 	%f1095, %r535;
	add.f32 	%f1150, %f1148, %f1149;
	abs.f32 	%f1152, %f1148;
	add.f32 	%f1202, %f1200, %f1201;
	abs.f32 	%f1204, %f1200;
	or.b32  	%r608, %r607, 1056964608;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	cvt.rzi.f32.f32 	%f833, %f832;
	setp.gt.f32 	%p124, %f834, 0f4B000000;
	cvt.rzi.f32.f32 	%f885, %f884;
	setp.gt.f32 	%p144, %f886, 0f4B000000;
	cvt.rzi.f32.f32 	%f939, %f938;
	setp.gt.f32 	%p164, %f940, 0f4B000000;
	cvt.rzi.f32.f32 	%f991, %f990;
	setp.gt.f32 	%p184, %f992, 0f4B000000;
	add.f32 	%f1044, %f1042, %f1043;
	abs.f32 	%f1046, %f1042;
	add.f32 	%f1096, %f1094, %f1095;
	abs.f32 	%f1098, %f1094;
	cvt.rzi.f32.f32 	%f1151, %f1150;
	setp.gt.f32 	%p244, %f1152, 0f4B000000;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	setp.gt.f32 	%p264, %f1204, 0f4B000000;
	mov.b32 	%f1255, %r608;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p16, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p22, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p28, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p34, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p40, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p46, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p52, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p58, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p64, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p70, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p76, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p82, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p88, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p94, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p100, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p106, %f785, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p124;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p125, %f834, 0f3F000000;
	selp.f32 	%f887, %f882, %f885, %p144;
	cvt.rzi.f32.f32 	%f888, %f882;
	setp.lt.f32 	%p145, %f886, 0f3F000000;
	selp.f32 	%f941, %f936, %f939, %p164;
	cvt.rzi.f32.f32 	%f942, %f936;
	setp.lt.f32 	%p165, %f940, 0f3F000000;
	selp.f32 	%f993, %f988, %f991, %p184;
	cvt.rzi.f32.f32 	%f994, %f988;
	setp.lt.f32 	%p185, %f992, 0f3F000000;
	cvt.rzi.f32.f32 	%f1045, %f1044;
	setp.gt.f32 	%p204, %f1046, 0f4B000000;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1153, %f1148, %f1151, %p244;
	cvt.rzi.f32.f32 	%f1154, %f1148;
	setp.lt.f32 	%p245, %f1152, 0f3F000000;
	selp.f32 	%f1205, %f1200, %f1203, %p264;
	cvt.rzi.f32.f32 	%f1206, %f1200;
	setp.lt.f32 	%p265, %f1204, 0f3F000000;
	add.f32 	%f1256, %f1254, %f1255;
	abs.f32 	%f1258, %f1254;
	selp.f32 	%f269, %f264, %f267, %p16;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p17, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p22;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p23, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p28;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p29, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p34;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p35, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p40;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p41, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p46;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p47, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p52;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p53, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p58;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p59, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p64;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p65, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p70;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p71, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p76;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p77, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p82;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p83, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p88;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p89, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p94;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p95, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p100;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p101, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p106;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p107, %f785, 0f3F000000;
	selp.f32 	%f837, %f836, %f835, %p125;
	selp.f32 	%f889, %f888, %f887, %p145;
	selp.f32 	%f943, %f942, %f941, %p165;
	selp.f32 	%f995, %f994, %f993, %p185;
	selp.f32 	%f1047, %f1042, %f1045, %p204;
	cvt.rzi.f32.f32 	%f1048, %f1042;
	setp.lt.f32 	%p205, %f1046, 0f3F000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1155, %f1154, %f1153, %p245;
	selp.f32 	%f1207, %f1206, %f1205, %p265;
	cvt.rzi.f32.f32 	%f1257, %f1256;
	setp.gt.f32 	%p284, %f1258, 0f4B000000;
	selp.f32 	%f271, %f270, %f269, %p17;
	selp.f32 	%f305, %f304, %f303, %p23;
	selp.f32 	%f340, %f339, %f338, %p29;
	selp.f32 	%f374, %f373, %f372, %p35;
	selp.f32 	%f409, %f408, %f407, %p41;
	selp.f32 	%f443, %f442, %f441, %p47;
	selp.f32 	%f478, %f477, %f476, %p53;
	selp.f32 	%f512, %f511, %f510, %p59;
	selp.f32 	%f547, %f546, %f545, %p65;
	selp.f32 	%f581, %f580, %f579, %p71;
	selp.f32 	%f616, %f615, %f614, %p77;
	selp.f32 	%f650, %f649, %f648, %p83;
	selp.f32 	%f685, %f684, %f683, %p89;
	selp.f32 	%f719, %f718, %f717, %p95;
	selp.f32 	%f754, %f753, %f752, %p101;
	selp.f32 	%f788, %f787, %f786, %p107;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1356;
	fma.rn.f32 	%f890, %f889, 0fBF000000, %f1360;
	fma.rn.f32 	%f944, %f943, 0fBF000000, %f1364;
	fma.rn.f32 	%f996, %f995, 0fBF000000, %f1368;
	selp.f32 	%f1049, %f1048, %f1047, %p205;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	fma.rn.f32 	%f1156, %f1155, 0fBF000000, %f1380;
	fma.rn.f32 	%f1208, %f1207, 0fBF000000, %f1384;
	selp.f32 	%f1259, %f1254, %f1257, %p284;
	cvt.rzi.f32.f32 	%f1260, %f1254;
	setp.lt.f32 	%p285, %f1258, 0f3F000000;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f839, %f838, %f838;
	mul.f32 	%f891, %f890, %f890;
	mul.f32 	%f945, %f944, %f944;
	mul.f32 	%f997, %f996, %f996;
	fma.rn.f32 	%f1050, %f1049, 0fBF000000, %f1372;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1376;
	mul.f32 	%f1157, %f1156, %f1156;
	mul.f32 	%f1209, %f1208, %f1208;
	selp.f32 	%f1261, %f1260, %f1259, %p285;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f840, %f839, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f841, %f839, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f892, %f891, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f893, %f891, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f946, %f945, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f947, %f945, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f998, %f997, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f999, %f997, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f1051, %f1050, %f1050;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1158, %f1157, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1159, %f1157, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1209, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1211, %f1209, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1262, %f1261, 0fBF000000, %f1388;
	cvt.rzi.s32.f32 	%r267, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r274, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r285, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r292, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r303, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r310, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r321, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r328, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r339, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r346, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r357, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r364, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r375, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r382, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r393, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r400, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r418, %f837;
	fma.rn.f32 	%f842, %f840, %f839, 0fC0A55DF6;
	fma.rn.f32 	%f843, %f841, %f839, 0f4081E0CF;
	fma.rn.f32 	%f844, %f839, %f838, 0f00000000;
	cvt.rzi.s32.f32 	%r447, %f889;
	fma.rn.f32 	%f894, %f892, %f891, 0fC0A55DF6;
	fma.rn.f32 	%f895, %f893, %f891, 0f4081E0CF;
	fma.rn.f32 	%f896, %f891, %f890, 0f00000000;
	cvt.rzi.s32.f32 	%r466, %f943;
	fma.rn.f32 	%f948, %f946, %f945, 0fC0A55DF6;
	fma.rn.f32 	%f949, %f947, %f945, 0f4081E0CF;
	fma.rn.f32 	%f950, %f945, %f944, 0f00000000;
	cvt.rzi.s32.f32 	%r495, %f995;
	fma.rn.f32 	%f1000, %f998, %f997, 0fC0A55DF6;
	fma.rn.f32 	%f1001, %f999, %f997, 0f4081E0CF;
	fma.rn.f32 	%f1002, %f997, %f996, 0f00000000;
	fma.rn.f32 	%f1052, %f1051, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1053, %f1051, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r555, %f1155;
	fma.rn.f32 	%f1160, %f1158, %f1157, 0fC0A55DF6;
	fma.rn.f32 	%f1161, %f1159, %f1157, 0f4081E0CF;
	fma.rn.f32 	%f1162, %f1157, %f1156, 0f00000000;
	cvt.rzi.s32.f32 	%r585, %f1207;
	fma.rn.f32 	%f1212, %f1210, %f1209, 0fC0A55DF6;
	fma.rn.f32 	%f1213, %f1211, %f1209, 0f4081E0CF;
	fma.rn.f32 	%f1214, %f1209, %f1208, 0f00000000;
	mul.f32 	%f1263, %f1262, %f1262;
	add.s32 	%r268, %r267, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r275, %r274, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r286, %r285, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r293, %r292, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r304, %r303, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r311, %r310, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r322, %r321, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r329, %r328, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r340, %r339, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r347, %r346, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r358, %r357, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r365, %r364, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r376, %r375, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r383, %r382, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r394, %r393, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r401, %r400, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f845, %f843, %f839, 0fC09DE9E6;
	fma.rn.f32 	%f846, %f842, %f844, 0f00000000;
	and.b32  	%r419, %r418, 1;
	fma.rn.f32 	%f897, %f895, %f891, 0fC09DE9E6;
	fma.rn.f32 	%f898, %f894, %f896, 0f00000000;
	and.b32  	%r448, %r447, 1;
	fma.rn.f32 	%f951, %f949, %f945, 0fC09DE9E6;
	fma.rn.f32 	%f952, %f948, %f950, 0f00000000;
	and.b32  	%r467, %r466, 1;
	fma.rn.f32 	%f1003, %f1001, %f997, 0fC09DE9E6;
	fma.rn.f32 	%f1004, %f1000, %f1002, 0f00000000;
	and.b32  	%r496, %r495, 1;
	cvt.rzi.s32.f32 	%r513, %f1049;
	fma.rn.f32 	%f1054, %f1052, %f1051, 0fC0A55DF6;
	fma.rn.f32 	%f1055, %f1053, %f1051, 0f4081E0CF;
	fma.rn.f32 	%f1056, %f1051, %f1050, 0f00000000;
	cvt.rzi.s32.f32 	%r536, %f1101;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1163, %f1161, %f1157, 0fC09DE9E6;
	fma.rn.f32 	%f1164, %f1160, %f1162, 0f00000000;
	and.b32  	%r556, %r555, 1;
	fma.rn.f32 	%f1215, %f1213, %f1209, 0fC09DE9E6;
	fma.rn.f32 	%f1216, %f1212, %f1214, 0f00000000;
	and.b32  	%r586, %r585, 1;
	fma.rn.f32 	%f1264, %f1263, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1265, %f1263, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r269, %r268, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r276, %r275, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r287, %r286, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r305, %r304, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r312, %r311, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r323, %r322, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r330, %r329, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r341, %r340, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r348, %r347, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r359, %r358, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r366, %r365, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r377, %r376, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r384, %r383, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r395, %r394, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r402, %r401, 1;
	fma.rn.f32 	%f847, %f845, %f839, 0f3F800000;
	fma.rn.f32 	%f848, %f838, 0f40490FDB, %f846;
	setp.eq.b32 	%p126, %r419, 1;
	fma.rn.f32 	%f899, %f897, %f891, 0f3F800000;
	fma.rn.f32 	%f900, %f890, 0f40490FDB, %f898;
	setp.eq.b32 	%p146, %r448, 1;
	fma.rn.f32 	%f953, %f951, %f945, 0f3F800000;
	fma.rn.f32 	%f954, %f944, 0f40490FDB, %f952;
	setp.eq.b32 	%p166, %r467, 1;
	fma.rn.f32 	%f1005, %f1003, %f997, 0f3F800000;
	fma.rn.f32 	%f1006, %f996, 0f40490FDB, %f1004;
	setp.eq.b32 	%p186, %r496, 1;
	fma.rn.f32 	%f1057, %f1055, %f1051, 0fC09DE9E6;
	fma.rn.f32 	%f1058, %f1054, %f1056, 0f00000000;
	and.b32  	%r514, %r513, 1;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	and.b32  	%r537, %r536, 1;
	fma.rn.f32 	%f1165, %f1163, %f1157, 0f3F800000;
	fma.rn.f32 	%f1166, %f1156, 0f40490FDB, %f1164;
	setp.eq.b32 	%p246, %r556, 1;
	fma.rn.f32 	%f1217, %f1215, %f1209, 0f3F800000;
	fma.rn.f32 	%f1218, %f1208, 0f40490FDB, %f1216;
	setp.eq.b32 	%p266, %r586, 1;
	cvt.rzi.s32.f32 	%r609, %f1261;
	fma.rn.f32 	%f1266, %f1264, %f1263, 0fC0A55DF6;
	fma.rn.f32 	%f1267, %f1265, %f1263, 0f4081E0CF;
	fma.rn.f32 	%f1268, %f1263, %f1262, 0f00000000;
	shl.b32 	%r9, %r1, 2;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p18, %r269, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p24, %r276, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p30, %r287, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p36, %r294, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p42, %r305, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p48, %r312, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p54, %r323, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p60, %r330, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p66, %r341, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p72, %r348, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p78, %r359, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p84, %r366, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p90, %r377, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p96, %r384, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p102, %r395, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p108, %r402, 1;
	selp.f32 	%f849, %f847, %f848, %p126;
	and.b32  	%r420, %r418, 2;
	selp.f32 	%f901, %f899, %f900, %p146;
	and.b32  	%r449, %r447, 2;
	selp.f32 	%f955, %f953, %f954, %p166;
	and.b32  	%r468, %r466, 2;
	selp.f32 	%f1007, %f1005, %f1006, %p186;
	and.b32  	%r497, %r495, 2;
	fma.rn.f32 	%f1059, %f1057, %f1051, 0f3F800000;
	fma.rn.f32 	%f1060, %f1050, 0f40490FDB, %f1058;
	setp.eq.b32 	%p206, %r514, 1;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	setp.eq.b32 	%p226, %r537, 1;
	selp.f32 	%f1167, %f1165, %f1166, %p246;
	and.b32  	%r557, %r555, 2;
	selp.f32 	%f1219, %f1217, %f1218, %p266;
	and.b32  	%r587, %r585, 2;
	fma.rn.f32 	%f1269, %f1267, %f1263, 0fC09DE9E6;
	fma.rn.f32 	%f1270, %f1266, %f1268, 0f00000000;
	and.b32  	%r610, %r609, 1;
	and.b32  	%r249, %r9, 4;
	and.b32  	%r252, %r1, 18;
	selp.f32 	%f283, %f281, %f282, %p18;
	and.b32  	%r270, %r268, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p24;
	and.b32  	%r277, %r275, 2;
	selp.f32 	%f352, %f350, %f351, %p30;
	and.b32  	%r288, %r286, 2;
	selp.f32 	%f386, %f384, %f385, %p36;
	and.b32  	%r295, %r293, 2;
	selp.f32 	%f421, %f419, %f420, %p42;
	and.b32  	%r306, %r304, 2;
	selp.f32 	%f455, %f453, %f454, %p48;
	and.b32  	%r313, %r311, 2;
	selp.f32 	%f490, %f488, %f489, %p54;
	and.b32  	%r324, %r322, 2;
	selp.f32 	%f524, %f522, %f523, %p60;
	and.b32  	%r331, %r329, 2;
	selp.f32 	%f559, %f557, %f558, %p66;
	and.b32  	%r342, %r340, 2;
	selp.f32 	%f593, %f591, %f592, %p72;
	and.b32  	%r349, %r347, 2;
	selp.f32 	%f628, %f626, %f627, %p78;
	and.b32  	%r360, %r358, 2;
	selp.f32 	%f662, %f660, %f661, %p84;
	and.b32  	%r367, %r365, 2;
	selp.f32 	%f697, %f695, %f696, %p90;
	and.b32  	%r378, %r376, 2;
	selp.f32 	%f731, %f729, %f730, %p96;
	and.b32  	%r385, %r383, 2;
	selp.f32 	%f766, %f764, %f765, %p102;
	and.b32  	%r396, %r394, 2;
	selp.f32 	%f800, %f798, %f799, %p108;
	and.b32  	%r403, %r401, 2;
	setp.eq.s32 	%p127, %r420, 0;
	neg.f32 	%f851, %f849;
	add.s32 	%r421, %r418, 1;
	cvt.rzi.f32.f32 	%f856, %f1356;
	setp.eq.s32 	%p147, %r449, 0;
	neg.f32 	%f903, %f901;
	add.s32 	%r450, %r447, 1;
	cvt.rzi.f32.f32 	%f908, %f1360;
	setp.eq.s32 	%p167, %r468, 0;
	neg.f32 	%f957, %f955;
	add.s32 	%r469, %r466, 1;
	cvt.rzi.f32.f32 	%f962, %f1364;
	setp.eq.s32 	%p187, %r497, 0;
	neg.f32 	%f1009, %f1007;
	add.s32 	%r498, %r495, 1;
	cvt.rzi.f32.f32 	%f1014, %f1368;
	selp.f32 	%f1061, %f1059, %f1060, %p206;
	and.b32  	%r515, %r513, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r538, %r536, 2;
	setp.eq.s32 	%p247, %r557, 0;
	neg.f32 	%f1169, %f1167;
	add.s32 	%r558, %r555, 1;
	cvt.rzi.f32.f32 	%f1174, %f1380;
	setp.eq.s32 	%p267, %r587, 0;
	neg.f32 	%f1221, %f1219;
	add.s32 	%r588, %r585, 1;
	cvt.rzi.f32.f32 	%f1226, %f1384;
	fma.rn.f32 	%f1271, %f1269, %f1263, 0f3F800000;
	fma.rn.f32 	%f1272, %f1262, 0f40490FDB, %f1270;
	setp.eq.b32 	%p286, %r610, 1;
	and.b32  	%r250, %r9, 32;
	or.b32  	%r253, %r252, %r249;
	setp.eq.s32 	%p19, %r270, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p25, %r277, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p31, %r288, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p37, %r295, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p43, %r306, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p49, %r313, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p55, %r324, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p61, %r331, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p67, %r342, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p73, %r349, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p79, %r360, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p85, %r367, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p91, %r378, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p97, %r385, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p103, %r396, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p109, %r403, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f850, %f848, %f847, %p126;
	selp.f32 	%f852, %f849, %f851, %p127;
	and.b32  	%r422, %r421, 2;
	setp.eq.f32 	%p129, %f856, %f1356;
	mul.f32 	%f857, %f1356, 0f00000000;
	selp.f32 	%f902, %f900, %f899, %p146;
	selp.f32 	%f904, %f901, %f903, %p147;
	and.b32  	%r451, %r450, 2;
	setp.eq.f32 	%p149, %f908, %f1360;
	mul.f32 	%f909, %f1360, 0f00000000;
	selp.f32 	%f956, %f954, %f953, %p166;
	selp.f32 	%f958, %f955, %f957, %p167;
	and.b32  	%r470, %r469, 2;
	setp.eq.f32 	%p169, %f962, %f1364;
	mul.f32 	%f963, %f1364, 0f00000000;
	selp.f32 	%f1008, %f1006, %f1005, %p186;
	selp.f32 	%f1010, %f1007, %f1009, %p187;
	and.b32  	%r499, %r498, 2;
	setp.eq.f32 	%p189, %f1014, %f1368;
	mul.f32 	%f1015, %f1368, 0f00000000;
	setp.eq.s32 	%p207, %r515, 0;
	neg.f32 	%f1063, %f1061;
	add.s32 	%r516, %r513, 1;
	cvt.rzi.f32.f32 	%f1068, %f1372;
	setp.eq.s32 	%p227, %r538, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r539, %r536, 1;
	cvt.rzi.f32.f32 	%f1120, %f1376;
	selp.f32 	%f1168, %f1166, %f1165, %p246;
	selp.f32 	%f1170, %f1167, %f1169, %p247;
	and.b32  	%r559, %r558, 2;
	setp.eq.f32 	%p249, %f1174, %f1380;
	mul.f32 	%f1175, %f1380, 0f00000000;
	selp.f32 	%f1220, %f1218, %f1217, %p266;
	selp.f32 	%f1222, %f1219, %f1221, %p267;
	and.b32  	%r589, %r588, 2;
	setp.eq.f32 	%p269, %f1226, %f1384;
	mul.f32 	%f1227, %f1384, 0f00000000;
	selp.f32 	%f1273, %f1271, %f1272, %p286;
	and.b32  	%r611, %r609, 2;
	and.b32  	%r251, %r11, 8;
	or.b32  	%r254, %r253, %r250;
	selp.f32 	%f286, %f283, %f285, %p19;
	selp.f32 	%f320, %f317, %f319, %p25;
	selp.f32 	%f355, %f352, %f354, %p31;
	selp.f32 	%f389, %f386, %f388, %p37;
	selp.f32 	%f424, %f421, %f423, %p43;
	selp.f32 	%f458, %f455, %f457, %p49;
	selp.f32 	%f493, %f490, %f492, %p55;
	selp.f32 	%f527, %f524, %f526, %p61;
	selp.f32 	%f562, %f559, %f561, %p67;
	selp.f32 	%f596, %f593, %f595, %p73;
	selp.f32 	%f631, %f628, %f630, %p79;
	selp.f32 	%f665, %f662, %f664, %p85;
	selp.f32 	%f700, %f697, %f699, %p91;
	selp.f32 	%f734, %f731, %f733, %p97;
	selp.f32 	%f769, %f766, %f768, %p103;
	selp.f32 	%f803, %f800, %f802, %p109;
	setp.eq.s32 	%p128, %r422, 0;
	sub.f32 	%f854, %f284, %f850;
	selp.f32 	%f91, %f857, %f852, %p129;
	abs.f32 	%f858, %f1356;
	setp.eq.s32 	%p148, %r451, 0;
	sub.f32 	%f906, %f284, %f902;
	selp.f32 	%f910, %f909, %f904, %p149;
	abs.f32 	%f911, %f1360;
	setp.eq.s32 	%p168, %r470, 0;
	sub.f32 	%f960, %f284, %f956;
	selp.f32 	%f127, %f963, %f958, %p169;
	abs.f32 	%f964, %f1364;
	setp.eq.s32 	%p188, %r499, 0;
	sub.f32 	%f1012, %f284, %f1008;
	selp.f32 	%f1016, %f1015, %f1010, %p189;
	abs.f32 	%f1017, %f1368;
	selp.f32 	%f1062, %f1060, %f1059, %p206;
	selp.f32 	%f1064, %f1061, %f1063, %p207;
	and.b32  	%r517, %r516, 2;
	setp.eq.f32 	%p209, %f1068, %f1372;
	mul.f32 	%f1069, %f1372, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r540, %r539, 2;
	setp.eq.f32 	%p229, %f1120, %f1376;
	mul.f32 	%f1121, %f1376, 0f00000000;
	setp.eq.s32 	%p248, %r559, 0;
	sub.f32 	%f1172, %f284, %f1168;
	selp.f32 	%f199, %f1175, %f1170, %p249;
	abs.f32 	%f1176, %f1380;
	setp.eq.s32 	%p268, %r589, 0;
	sub.f32 	%f1224, %f284, %f1220;
	selp.f32 	%f1228, %f1227, %f1222, %p269;
	abs.f32 	%f1229, %f1384;
	setp.eq.s32 	%p287, %r611, 0;
	neg.f32 	%f1275, %f1273;
	add.s32 	%r612, %r609, 1;
	cvt.rzi.f32.f32 	%f1280, %f1388;
	or.b32  	%r255, %r254, %r251;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f855, %f850, %f854, %p128;
	setp.gt.f32 	%p130, %f858, 0f4B800000;
	add.f32 	%f859, %f91, 0f3F800000;
	selp.f32 	%f907, %f902, %f906, %p148;
	setp.gt.f32 	%p150, %f911, 0f4B800000;
	add.f32 	%f912, %f910, 0f3F800000;
	selp.f32 	%f961, %f956, %f960, %p168;
	setp.gt.f32 	%p170, %f964, 0f4B800000;
	add.f32 	%f965, %f127, 0f3F800000;
	selp.f32 	%f1013, %f1008, %f1012, %p188;
	setp.gt.f32 	%p190, %f1017, 0f4B800000;
	add.f32 	%f1018, %f1016, 0f3F800000;
	setp.eq.s32 	%p208, %r517, 0;
	sub.f32 	%f1066, %f284, %f1062;
	selp.f32 	%f163, %f1069, %f1064, %p209;
	abs.f32 	%f1070, %f1372;
	setp.eq.s32 	%p228, %r540, 0;
	sub.f32 	%f1118, %f284, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1376;
	selp.f32 	%f1173, %f1168, %f1172, %p248;
	setp.gt.f32 	%p250, %f1176, 0f4B800000;
	add.f32 	%f1177, %f199, 0f3F800000;
	selp.f32 	%f1225, %f1220, %f1224, %p268;
	setp.gt.f32 	%p270, %f1229, 0f4B800000;
	add.f32 	%f1230, %f1228, 0f3F800000;
	selp.f32 	%f1274, %f1272, %f1271, %p286;
	selp.f32 	%f1276, %f1273, %f1275, %p287;
	and.b32  	%r613, %r612, 2;
	setp.eq.f32 	%p289, %f1280, %f1388;
	mul.f32 	%f1281, %f1388, 0f00000000;
	shr.u32 	%r12, %r255, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f859, %f855, %p130;
	selp.f32 	%f913, %f912, %f907, %p150;
	selp.f32 	%f128, %f965, %f961, %p170;
	selp.f32 	%f1019, %f1018, %f1013, %p190;
	selp.f32 	%f1067, %f1062, %f1066, %p208;
	setp.gt.f32 	%p210, %f1070, 0f4B800000;
	add.f32 	%f1071, %f163, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f200, %f1177, %f1173, %p250;
	selp.f32 	%f1231, %f1230, %f1225, %p270;
	setp.eq.s32 	%p288, %r613, 0;
	sub.f32 	%f1278, %f284, %f1274;
	selp.f32 	%f235, %f1281, %f1276, %p289;
	abs.f32 	%f1282, %f1388;
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd60, %r12, 4;
	mul.f32 	%f6, %f290, %f1338;
	mul.f32 	%f325, %f324, %f1339;
	mul.f32 	%f15, %f359, %f1340;
	mul.f32 	%f394, %f393, %f1341;
	mul.f32 	%f24, %f428, %f1342;
	mul.f32 	%f463, %f462, %f1343;
	mul.f32 	%f33, %f497, %f1344;
	mul.f32 	%f532, %f531, %f1345;
	mul.f32 	%f42, %f566, %f1346;
	mul.f32 	%f601, %f600, %f1347;
	mul.f32 	%f51, %f635, %f1348;
	mul.f32 	%f670, %f669, %f1349;
	mul.f32 	%f60, %f704, %f1350;
	mul.f32 	%f739, %f738, %f1351;
	mul.f32 	%f69, %f773, %f1352;
	mul.f32 	%f807, %f806, %f1353;
	mov.b32 	%r434, %f913;
	mov.b32 	%r433, %f92;
	mov.b32 	%r440, %f910;
	mov.b32 	%r439, %f91;
	mov.b32 	%r482, %f1019;
	mov.b32 	%r481, %f128;
	mov.b32 	%r488, %f1016;
	mov.b32 	%r487, %f127;
	selp.f32 	%f164, %f1071, %f1067, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r572, %f1231;
	mov.b32 	%r571, %f200;
	mov.b32 	%r578, %f1228;
	mov.b32 	%r577, %f199;
	selp.f32 	%f1279, %f1274, %f1278, %p288;
	setp.gt.f32 	%p290, %f1282, 0f4B800000;
	add.f32 	%f1283, %f235, 0f3F800000;
	add.s64 	%rd61, %rd1, %rd60;
	mov.b32 	%r280, %f325;
	mov.b32 	%r279, %f6;
	mov.b32 	%r298, %f394;
	mov.b32 	%r297, %f15;
	mov.b32 	%r316, %f463;
	mov.b32 	%r315, %f24;
	mov.b32 	%r334, %f532;
	mov.b32 	%r333, %f33;
	mov.b32 	%r352, %f601;
	mov.b32 	%r351, %f42;
	mov.b32 	%r370, %f670;
	mov.b32 	%r369, %f51;
	mov.b32 	%r388, %f739;
	mov.b32 	%r387, %f60;
	mov.b32 	%r406, %f807;
	mov.b32 	%r405, %f69;
	xor.b32  	%r485, %r488, -2147483648;
	xor.b32  	%r484, %r487, -2147483648;
	mov.b32 	%r529, %f1125;
	mov.b32 	%r528, %f164;
	mov.b32 	%r532, %f1122;
	mov.b32 	%r531, %f163;
	xor.b32  	%r575, %r578, -2147483648;
	xor.b32  	%r574, %r577, -2147483648;
	selp.f32 	%f236, %f1283, %f1279, %p290;
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r13, [%rd61];
	ld.global.u32 	%r14, [%rd61+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r278, %r280, %r279;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r296, %r298, %r297;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r314, %r316, %r315;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r332, %r334, %r333;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r350, %r352, %r351;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r368, %r370, %r369;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r386, %r388, %r387;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r404, %r406, %r405;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r438, %r440, %r439;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r441, %r440, %r439;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r485, %r484;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r486, %r488, %r487;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r489, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r527, %r529, %r528;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r530, %r532, %r531;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r575, %r574;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r576, %r578, %r577;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r579, %r572, %r571;
	// end inline asm
	add.f32 	%f1306, %f1392, %f1392;
	mov.b32 	%r629, %f1306;
	and.b32  	%r630, %r629, -2147483648;
	or.b32  	%r631, %r630, 1056964608;
	mov.b32 	%f1307, %r631;
	add.f32 	%f1308, %f1306, %f1307;
	cvt.rzi.f32.f32 	%f1309, %f1308;
	abs.f32 	%f1310, %f1306;
	setp.gt.f32 	%p304, %f1310, 0f4B000000;
	selp.f32 	%f1311, %f1306, %f1309, %p304;
	cvt.rzi.f32.f32 	%f1312, %f1306;
	setp.lt.f32 	%p305, %f1310, 0f3F000000;
	selp.f32 	%f1313, %f1312, %f1311, %p305;
	cvt.rzi.s32.f32 	%r632, %f1313;
	fma.rn.f32 	%f1314, %f1313, 0fBF000000, %f1392;
	mul.f32 	%f1315, %f1314, %f1314;
	fma.rn.f32 	%f1316, %f1315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1317, %f1315, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1318, %f1316, %f1315, 0fC0A55DF6;
	fma.rn.f32 	%f1319, %f1317, %f1315, 0f4081E0CF;
	fma.rn.f32 	%f1320, %f1315, %f1314, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1315, 0fC09DE9E6;
	fma.rn.f32 	%f1322, %f1318, %f1320, 0f00000000;
	fma.rn.f32 	%f1323, %f1321, %f1315, 0f3F800000;
	fma.rn.f32 	%f1324, %f1314, 0f40490FDB, %f1322;
	and.b32  	%r633, %r632, 1;
	setp.eq.b32 	%p306, %r633, 1;
	selp.f32 	%f1325, %f1323, %f1324, %p306;
	selp.f32 	%f1326, %f1324, %f1323, %p306;
	and.b32  	%r634, %r632, 2;
	setp.eq.s32 	%p307, %r634, 0;
	neg.f32 	%f1327, %f1325;
	selp.f32 	%f1328, %f1325, %f1327, %p307;
	add.s32 	%r635, %r632, 1;
	and.b32  	%r636, %r635, 2;
	setp.eq.s32 	%p308, %r636, 0;
	sub.f32 	%f1330, %f284, %f1326;
	selp.f32 	%f1331, %f1326, %f1330, %p308;
	cvt.rzi.f32.f32 	%f1332, %f1392;
	setp.eq.f32 	%p309, %f1332, %f1392;
	mul.f32 	%f1333, %f1392, 0f00000000;
	selp.f32 	%f1334, %f1333, %f1328, %p309;
	abs.f32 	%f1335, %f1392;
	setp.gt.f32 	%p310, %f1335, 0f4B800000;
	add.f32 	%f1336, %f1334, 0f3F800000;
	selp.f32 	%f1337, %f1336, %f1331, %p310;
	mov.b32 	%r625, %f1337;
	mov.b32 	%r624, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r623, %r625, %r624;
	// end inline asm
	mov.b32 	%r628, %f1334;
	mov.b32 	%r627, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r626, %r628, %r627;
	// end inline asm
	shl.b32 	%r144, %r5, 12;
	and.b32  	%r638, %r9, 28;
	shl.b32 	%r639, %r2, 5;
	and.b32  	%r640, %r639, 96;
	or.b32  	%r641, %r638, %r640;
	and.b32  	%r642, %r639, 128;
	and.b32  	%r643, %r11, 32;
	or.b32  	%r644, %r643, %r3;
	shl.b32 	%r645, %r1, 3;
	and.b32  	%r646, %r645, 64;
	or.b32  	%r145, %r644, %r646;
	or.b32  	%r146, %r641, %r642;
	or.b32  	%r147, %r146, %r144;
	and.b32  	%r148, %r1, 8;
	and.b32  	%r647, %r3, 1;
	shr.u32 	%r648, %r3, 3;
	mul.lo.s32 	%r649, %r648, 260;
	shl.b32 	%r650, %r1, 4;
	or.b32  	%r651, %r650, %r148;
	shr.u32 	%r652, %r651, 2;
	and.b32  	%r653, %r652, 30;
	shr.u32 	%r654, %r3, 1;
	bfe.u32 	%r655, %r3, 1, 1;
	bfe.u32 	%r656, %r3, 2, 1;
	mad.lo.s32 	%r657, %r647, 2080, %r649;
	mad.lo.s32 	%r658, %r20, 65, %r657;
	mad.lo.s32 	%r659, %r655, 1040, %r658;
	mad.lo.s32 	%r660, %r656, 520, %r659;
	add.s32 	%r661, %r660, %r653;
	mul.wide.u32 	%rd62, %r661, 4;
	mov.u64 	%rd63, shmem;
	add.s64 	%rd5, %rd63, %rd62;
	add.s32 	%r662, %r661, 32;
	mul.wide.u32 	%rd64, %r662, 4;
	add.s64 	%rd6, %rd63, %rd64;
	add.s32 	%r663, %r661, 1;
	mul.wide.u32 	%rd65, %r663, 4;
	add.s64 	%rd7, %rd63, %rd65;
	add.s32 	%r664, %r661, 33;
	mul.wide.u32 	%rd66, %r664, 4;
	add.s64 	%rd8, %rd63, %rd66;
	add.s32 	%r665, %r661, 130;
	mul.wide.u32 	%rd67, %r665, 4;
	add.s64 	%rd9, %rd63, %rd67;
	add.s32 	%r666, %r661, 162;
	mul.wide.u32 	%rd68, %r666, 4;
	add.s64 	%rd10, %rd63, %rd68;
	add.s32 	%r667, %r661, 131;
	mul.wide.u32 	%rd69, %r667, 4;
	add.s64 	%rd11, %rd63, %rd69;
	add.s32 	%r668, %r661, 163;
	mul.wide.u32 	%rd70, %r668, 4;
	add.s64 	%rd12, %rd63, %rd70;
	mul.lo.s32 	%r669, %r19, 260;
	mul.lo.s32 	%r670, %r17, 130;
	and.b32  	%r671, %r4, 32;
	mul.lo.s32 	%r672, %r22, 1040;
	mul.lo.s32 	%r673, %r16, 65;
	mul.lo.s32 	%r674, %r20, 520;
	add.s32 	%r675, %r670, %r654;
	add.s32 	%r676, %r675, %r671;
	add.s32 	%r677, %r676, %r674;
	add.s32 	%r678, %r677, %r669;
	add.s32 	%r679, %r678, %r672;
	add.s32 	%r680, %r679, %r673;
	or.b32  	%r681, %r654, 8;
	add.s32 	%r682, %r670, %r681;
	add.s32 	%r683, %r682, %r671;
	add.s32 	%r684, %r683, %r674;
	add.s32 	%r685, %r684, %r669;
	add.s32 	%r686, %r685, %r672;
	add.s32 	%r687, %r686, %r673;
	or.b32  	%r688, %r654, 16;
	add.s32 	%r689, %r670, %r688;
	add.s32 	%r690, %r689, %r671;
	add.s32 	%r691, %r690, %r674;
	add.s32 	%r692, %r691, %r669;
	add.s32 	%r693, %r692, %r672;
	add.s32 	%r694, %r693, %r673;
	or.b32  	%r695, %r654, 24;
	add.s32 	%r696, %r670, %r695;
	add.s32 	%r697, %r696, %r671;
	add.s32 	%r698, %r697, %r674;
	add.s32 	%r699, %r698, %r669;
	add.s32 	%r700, %r699, %r672;
	add.s32 	%r701, %r700, %r673;
	or.b32  	%r702, %r654, 2080;
	add.s32 	%r703, %r702, %r670;
	add.s32 	%r704, %r703, %r671;
	add.s32 	%r705, %r704, %r674;
	add.s32 	%r706, %r705, %r669;
	add.s32 	%r707, %r706, %r672;
	add.s32 	%r708, %r707, %r673;
	or.b32  	%r709, %r654, 2088;
	add.s32 	%r710, %r709, %r670;
	add.s32 	%r711, %r710, %r671;
	add.s32 	%r712, %r711, %r674;
	add.s32 	%r713, %r712, %r669;
	add.s32 	%r714, %r713, %r672;
	add.s32 	%r715, %r714, %r673;
	or.b32  	%r716, %r654, 2096;
	add.s32 	%r717, %r716, %r670;
	add.s32 	%r718, %r717, %r671;
	add.s32 	%r719, %r718, %r674;
	add.s32 	%r720, %r719, %r669;
	add.s32 	%r721, %r720, %r672;
	add.s32 	%r722, %r721, %r673;
	or.b32  	%r723, %r654, 2104;
	add.s32 	%r724, %r723, %r670;
	add.s32 	%r725, %r724, %r671;
	add.s32 	%r726, %r725, %r674;
	add.s32 	%r727, %r726, %r669;
	add.s32 	%r728, %r727, %r672;
	add.s32 	%r729, %r728, %r673;
	mul.lo.s32 	%r730, %r12, 65;
	or.b32  	%r731, %r671, %r654;
	add.s32 	%r732, %r731, %r730;
	or.b32  	%r733, %r671, %r681;
	add.s32 	%r734, %r733, %r730;
	or.b32  	%r735, %r671, %r688;
	add.s32 	%r736, %r735, %r730;
	or.b32  	%r737, %r671, %r695;
	add.s32 	%r738, %r737, %r730;
	shl.b32 	%r739, %r2, 4;
	and.b32  	%r740, %r739, 1920;
	add.s32 	%r741, %r730, 2080;
	add.s32 	%r742, %r731, %r741;
	add.s32 	%r743, %r733, %r741;
	add.s32 	%r744, %r735, %r741;
	add.s32 	%r745, %r737, %r741;
	shl.b32 	%r746, %r3, 1;
	or.b32  	%r747, %r20, %r746;
	mul.lo.s32 	%r748, %r747, 65;
	add.s32 	%r749, %r653, %r748;
	mul.wide.u32 	%rd71, %r749, 4;
	add.s64 	%rd13, %rd63, %rd71;
	cvt.u64.u32 	%rd72, %r653;
	cvt.u64.u32 	%rd73, %r748;
	add.s64 	%rd74, %rd73, %rd72;
	shl.b64 	%rd75, %rd74, 2;
	add.s64 	%rd14, %rd63, %rd75;
	or.b32  	%r750, %r747, 32;
	mul.lo.s32 	%r751, %r750, 65;
	add.s32 	%r752, %r751, %r653;
	mul.wide.u32 	%rd76, %r752, 4;
	add.s64 	%rd15, %rd63, %rd76;
	cvt.u64.u32 	%rd77, %r751;
	add.s64 	%rd78, %rd72, %rd77;
	shl.b64 	%rd79, %rd78, 2;
	add.s64 	%rd16, %rd63, %rd79;
	shl.b32 	%r753, %r7, 19;
	add.s32 	%r754, %r753, -1572864;
	shl.b32 	%r755, %r3, 10;
	cvt.s64.s32 	%rd17, %r754;
	or.b32  	%r756, %r740, %r21;
	shl.b32 	%r757, %r756, 8;
	or.b32  	%r758, %r757, %r755;
	or.b32  	%r149, %r146, %r758;
	or.b32  	%r150, %r149, 16384;
	mul.wide.u32 	%rd18, %r745, 4;
	mul.wide.u32 	%rd19, %r744, 4;
	mul.wide.u32 	%rd20, %r743, 4;
	mul.wide.u32 	%rd21, %r742, 4;
	mul.wide.u32 	%rd22, %r738, 4;
	mul.wide.u32 	%rd23, %r736, 4;
	mul.wide.u32 	%rd24, %r734, 4;
	mul.wide.u32 	%rd25, %r732, 4;
	mul.wide.u32 	%rd26, %r729, 4;
	mul.wide.u32 	%rd27, %r722, 4;
	mul.wide.u32 	%rd28, %r715, 4;
	mul.wide.u32 	%rd29, %r708, 4;
	mul.wide.u32 	%rd30, %r701, 4;
	mul.wide.u32 	%rd31, %r694, 4;
	mul.wide.u32 	%rd32, %r687, 4;
	mul.wide.u32 	%rd33, %r680, 4;
	setp.eq.s32 	%p312, %r148, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16207, %r16186;
	mov.u32 	%r16256, %r16186;
	mov.u32 	%r16255, %r16186;
	mov.u32 	%r16254, %r16186;
	mov.u32 	%r16253, %r16186;
	mov.u32 	%r16252, %r16186;
	mov.u32 	%r16251, %r16186;
	mov.u32 	%r16250, %r16186;
	mov.u32 	%r16249, %r16186;
	mov.u32 	%r16248, %r16186;
	mov.u32 	%r16247, %r16186;
	mov.u32 	%r16246, %r16186;
	mov.u32 	%r16245, %r16186;
	mov.u32 	%r16244, %r16186;
	mov.u32 	%r16243, %r16186;
	mov.u32 	%r16242, %r16186;
	mov.u32 	%r16241, %r16186;
	mov.u32 	%r16240, %r16186;
	mov.u32 	%r16239, %r16186;
	mov.u32 	%r16238, %r16186;
	mov.u32 	%r16237, %r16186;
	mov.u32 	%r16236, %r16186;
	mov.u32 	%r16235, %r16186;
	mov.u32 	%r16234, %r16186;
	mov.u32 	%r16233, %r16186;
	bra.uni 	LBB0_182;
LBB0_186:                               // %L63816
                                        //   in Loop: Header=BB0_182 Depth=1
	setp.ne.s32 	%p326, %r16207, 130816;
	add.s32 	%r16207, %r16207, 256;
	add.s32 	%r16183, %r16207, %r5;
	setp.gt.s32 	%p327, %r6, %r16183;
	and.pred  	%p328, %p326, %p327;
	@%p328 bra 	LBB0_182;
	bra.uni 	LBB0_187;
LBB0_182:                               // %L2190
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	or.b32  	%r792, %r145, %r16207;
	shl.b32 	%r793, %r792, 12;
	add.s32 	%r794, %r147, %r793;
	shr.s32 	%r795, %r794, 31;
	shr.u32 	%r796, %r795, 3;
	add.s32 	%r797, %r794, %r796;
	shr.s32 	%r798, %r797, 29;
	setp.lt.s32 	%p313, %r794, 0;
	and.b32  	%r799, %r797, -536870912;
	setp.ne.s32 	%p314, %r799, %r794;
	and.pred  	%p315, %p313, %p314;
	selp.u32 	%r800, 1, 0, %p315;
	sub.s32 	%r801, %r800, %r798;
	shl.b32 	%r802, %r801, 29;
	add.s32 	%r803, %r802, %r794;
	mul.wide.s32 	%rd81, %r803, 4;
	add.s64 	%rd82, %rd2, %rd81;
	ld.global.v4.u32 	{%r804, %r805, %r806, %r807}, [%rd82];
	or.b32  	%r808, %r146, %r793;
	or.b32  	%r809, %r808, 65536;
	add.s32 	%r810, %r809, %r144;
	shr.s32 	%r811, %r810, 31;
	shr.u32 	%r812, %r811, 3;
	add.s32 	%r813, %r810, %r812;
	shr.s32 	%r814, %r813, 29;
	setp.lt.s32 	%p316, %r810, 0;
	and.b32  	%r815, %r813, -536870912;
	setp.ne.s32 	%p317, %r815, %r810;
	and.pred  	%p318, %p316, %p317;
	selp.u32 	%r816, 1, 0, %p318;
	sub.s32 	%r817, %r816, %r814;
	shl.b32 	%r818, %r817, 29;
	add.s32 	%r819, %r818, %r810;
	mul.wide.s32 	%rd83, %r819, 4;
	add.s64 	%rd84, %rd2, %rd83;
	ld.global.v4.u32 	{%r820, %r821, %r822, %r823}, [%rd84];
	selp.b32 	%r824, %r806, %r804, %p312;
	shfl.sync.bfly.b32	%r825, %r824, 8, 31, -1;
	selp.b32 	%r760, %r804, %r825, %p312;
	selp.b32 	%r761, %r825, %r806, %p312;
	selp.b32 	%r826, %r807, %r805, %p312;
	shfl.sync.bfly.b32	%r827, %r826, 8, 31, -1;
	selp.b32 	%r768, %r805, %r827, %p312;
	selp.b32 	%r769, %r827, %r807, %p312;
	selp.b32 	%r828, %r822, %r820, %p312;
	shfl.sync.bfly.b32	%r829, %r828, 8, 31, -1;
	selp.b32 	%r776, %r820, %r829, %p312;
	selp.b32 	%r777, %r829, %r822, %p312;
	selp.b32 	%r830, %r823, %r821, %p312;
	shfl.sync.bfly.b32	%r831, %r830, 8, 31, -1;
	selp.b32 	%r784, %r821, %r831, %p312;
	selp.b32 	%r785, %r831, %r823, %p312;
	mov.u32 	%r786, 21520;
	// begin inline asm
	prmt.b32 %r759, %r760, %r761, %r786;
	// end inline asm
	mov.u32 	%r790, 30258;
	// begin inline asm
	prmt.b32 %r763, %r760, %r761, %r790;
	// end inline asm
	// begin inline asm
	prmt.b32 %r767, %r768, %r769, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r771, %r768, %r769, %r790;
	// end inline asm
	// begin inline asm
	prmt.b32 %r775, %r776, %r777, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r779, %r776, %r777, %r790;
	// end inline asm
	// begin inline asm
	prmt.b32 %r783, %r784, %r785, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r787, %r784, %r785, %r790;
	// end inline asm
	st.shared.u32 	[%rd5], %r759;
	st.shared.u32 	[%rd6], %r763;
	st.shared.u32 	[%rd7], %r767;
	st.shared.u32 	[%rd8], %r771;
	st.shared.u32 	[%rd9], %r775;
	st.shared.u32 	[%rd10], %r779;
	st.shared.u32 	[%rd11], %r783;
	st.shared.u32 	[%rd12], %r787;
	bar.sync 	0;
	mov.u32 	%r16232, 256;
	mov.u64 	%rd126, %rd63;
LBB0_183:                               // %L9210
                                        //   Parent Loop BB0_182 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd85, %rd126, %rd33;
	ld.shared.u32 	%r16096, [%rd85];
	add.s64 	%rd86, %rd126, %rd32;
	ld.shared.u32 	%r16097, [%rd86];
	add.s64 	%rd87, %rd126, %rd31;
	ld.shared.u32 	%r16098, [%rd87];
	add.s64 	%rd88, %rd126, %rd30;
	ld.shared.u32 	%r16099, [%rd88];
	add.s64 	%rd89, %rd126, %rd29;
	ld.shared.u32 	%r16100, [%rd89];
	add.s64 	%rd90, %rd126, %rd28;
	ld.shared.u32 	%r16101, [%rd90];
	add.s64 	%rd91, %rd126, %rd27;
	ld.shared.u32 	%r16102, [%rd91];
	add.s64 	%rd92, %rd126, %rd26;
	ld.shared.u32 	%r16103, [%rd92];
	// begin inline asm
	mov.b32 %r837, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r836, %r16096, -2004318072;
	mov.u32 	%r835, 983055;
	// begin inline asm
	lop3.b32 %r834, %r835, %r836, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r839, %r837, %r838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r842, %r834, %r839;
	// end inline asm
	mov.u32 	%r846, 15728880;
	// begin inline asm
	lop3.b32 %r845, %r846, %r836, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r850, %r848, %r849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r853, %r845, %r850;
	// end inline asm
	shr.u32 	%r858, %r836, 8;
	// begin inline asm
	lop3.b32 %r856, %r835, %r858, %r837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r861, %r837, %r860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r864, %r856, %r861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r867, %r846, %r858, %r848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r872, %r848, %r871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r875, %r867, %r872;
	// end inline asm
	// begin inline asm
	mov.b32 %r883, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r882, %r16097, -2004318072;
	// begin inline asm
	lop3.b32 %r880, %r835, %r882, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r885, %r883, %r884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r888, %r880, %r885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r891, %r846, %r882, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r896, %r894, %r895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r899, %r891, %r896;
	// end inline asm
	shr.u32 	%r904, %r882, 8;
	// begin inline asm
	lop3.b32 %r902, %r835, %r904, %r883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r907, %r883, %r906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r910, %r902, %r907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r913, %r846, %r904, %r894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r918, %r894, %r917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r921, %r913, %r918;
	// end inline asm
	// begin inline asm
	mov.b32 %r929, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r928, %r16098, -2004318072;
	// begin inline asm
	lop3.b32 %r926, %r835, %r928, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r931, %r929, %r930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r934, %r926, %r931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r937, %r846, %r928, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r942, %r940, %r941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r945, %r937, %r942;
	// end inline asm
	shr.u32 	%r950, %r928, 8;
	// begin inline asm
	lop3.b32 %r948, %r835, %r950, %r929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r953, %r929, %r952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r956, %r948, %r953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r959, %r846, %r950, %r940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r964, %r940, %r963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r967, %r959, %r964;
	// end inline asm
	// begin inline asm
	mov.b32 %r975, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r974, %r16099, -2004318072;
	// begin inline asm
	lop3.b32 %r972, %r835, %r974, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r977, %r975, %r976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r980, %r972, %r977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r983, %r846, %r974, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r988, %r986, %r987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r991, %r983, %r988;
	// end inline asm
	shr.u32 	%r996, %r974, 8;
	// begin inline asm
	lop3.b32 %r994, %r835, %r996, %r975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r999, %r975, %r998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1002, %r994, %r999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1005, %r846, %r996, %r986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1010, %r986, %r1009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1013, %r1005, %r1010;
	// end inline asm
	// begin inline asm
	mov.b32 %r1021, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1020, %r16100, -2004318072;
	// begin inline asm
	lop3.b32 %r1018, %r835, %r1020, %r1021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1023, %r1021, %r1022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1026, %r1018, %r1023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1029, %r846, %r1020, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1034, %r1032, %r1033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1037, %r1029, %r1034;
	// end inline asm
	shr.u32 	%r1042, %r1020, 8;
	// begin inline asm
	lop3.b32 %r1040, %r835, %r1042, %r1021, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1045, %r1021, %r1044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1048, %r1040, %r1045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1051, %r846, %r1042, %r1032, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1056, %r1032, %r1055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1059, %r1051, %r1056;
	// end inline asm
	// begin inline asm
	mov.b32 %r1067, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1066, %r16101, -2004318072;
	// begin inline asm
	lop3.b32 %r1064, %r835, %r1066, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1069, %r1067, %r1068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1072, %r1064, %r1069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1075, %r846, %r1066, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1080, %r1078, %r1079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1083, %r1075, %r1080;
	// end inline asm
	shr.u32 	%r1088, %r1066, 8;
	// begin inline asm
	lop3.b32 %r1086, %r835, %r1088, %r1067, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1091, %r1067, %r1090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1094, %r1086, %r1091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1097, %r846, %r1088, %r1078, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1102, %r1078, %r1101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1105, %r1097, %r1102;
	// end inline asm
	// begin inline asm
	mov.b32 %r1113, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1112, %r16102, -2004318072;
	// begin inline asm
	lop3.b32 %r1110, %r835, %r1112, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1115, %r1113, %r1114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1118, %r1110, %r1115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1121, %r846, %r1112, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1126, %r1124, %r1125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1129, %r1121, %r1126;
	// end inline asm
	shr.u32 	%r1134, %r1112, 8;
	// begin inline asm
	lop3.b32 %r1132, %r835, %r1134, %r1113, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1137, %r1113, %r1136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1140, %r1132, %r1137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1143, %r846, %r1134, %r1124, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1148, %r1124, %r1147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1151, %r1143, %r1148;
	// end inline asm
	// begin inline asm
	mov.b32 %r1159, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1170, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1158, %r16103, -2004318072;
	// begin inline asm
	lop3.b32 %r1156, %r835, %r1158, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1161, %r1159, %r1160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1164, %r1156, %r1161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1167, %r846, %r1158, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1172, %r1170, %r1171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1175, %r1167, %r1172;
	// end inline asm
	shr.u32 	%r1180, %r1158, 8;
	// begin inline asm
	lop3.b32 %r1178, %r835, %r1180, %r1159, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1183, %r1159, %r1182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1186, %r1178, %r1183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1189, %r846, %r1180, %r1170, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1194, %r1170, %r1193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1197, %r1189, %r1194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1200, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1202, %r1200, %r842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1205, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1207, %r1205, %r853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1210, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1212, %r1210, %r864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1215, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1217, %r1215, %r875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1220, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1222, %r1220, %r888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1225, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1227, %r1225, %r899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1230, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1232, %r1230, %r910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1235, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1237, %r1235, %r921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1240, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1242, %r1240, %r934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1245, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1247, %r1245, %r945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1250, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1252, %r1250, %r956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1255, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1257, %r1255, %r967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1260, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1262, %r1260, %r980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1265, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1267, %r1265, %r991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1270, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1272, %r1270, %r1002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1275, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1277, %r1275, %r1013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1280, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1282, %r1280, %r1026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1285, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1287, %r1285, %r1037;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1290, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1292, %r1290, %r1048;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1295, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1297, %r1295, %r1059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1300, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1302, %r1300, %r1072;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1305, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1307, %r1305, %r1083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1310, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1312, %r1310, %r1094;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1315, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1317, %r1315, %r1105;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1320, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1322, %r1320, %r1118;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1325, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1327, %r1325, %r1129;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1330, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1332, %r1330, %r1140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1335, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1337, %r1335, %r1151;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1340, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1342, %r1340, %r1164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1345, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1347, %r1345, %r1175;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1350, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1352, %r1350, %r1186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1355, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1357, %r1355, %r1197;
	// end inline asm
	// begin inline asm
	mov.b32 %r1365, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1364, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r1362, %r835, %r1364, %r1365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1367, %r1365, %r1366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1370, %r1362, %r1367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1373, %r846, %r1364, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1378, %r1376, %r1377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1381, %r1373, %r1378;
	// end inline asm
	shr.u32 	%r1386, %r1364, 8;
	// begin inline asm
	lop3.b32 %r1384, %r835, %r1386, %r1365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1389, %r1365, %r1388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1392, %r1384, %r1389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1395, %r846, %r1386, %r1376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1400, %r1376, %r1399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1403, %r1395, %r1400;
	// end inline asm
	// begin inline asm
	mov.b32 %r1411, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1410, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r1408, %r835, %r1410, %r1411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1413, %r1411, %r1412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1416, %r1408, %r1413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1419, %r846, %r1410, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1424, %r1422, %r1423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1427, %r1419, %r1424;
	// end inline asm
	shr.u32 	%r1432, %r1410, 8;
	// begin inline asm
	lop3.b32 %r1430, %r835, %r1432, %r1411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1435, %r1411, %r1434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1438, %r1430, %r1435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1441, %r846, %r1432, %r1422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1446, %r1422, %r1445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1449, %r1441, %r1446;
	// end inline asm
	// begin inline asm
	mov.b32 %r1457, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1456, %r16235, -2004318072;
	// begin inline asm
	lop3.b32 %r1454, %r835, %r1456, %r1457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1459, %r1457, %r1458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1462, %r1454, %r1459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1465, %r846, %r1456, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1470, %r1468, %r1469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1473, %r1465, %r1470;
	// end inline asm
	shr.u32 	%r1478, %r1456, 8;
	// begin inline asm
	lop3.b32 %r1476, %r835, %r1478, %r1457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1481, %r1457, %r1480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1484, %r1476, %r1481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1487, %r846, %r1478, %r1468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1492, %r1468, %r1491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1495, %r1487, %r1492;
	// end inline asm
	// begin inline asm
	mov.b32 %r1503, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1502, %r16236, -2004318072;
	// begin inline asm
	lop3.b32 %r1500, %r835, %r1502, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1505, %r1503, %r1504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1508, %r1500, %r1505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1511, %r846, %r1502, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1516, %r1514, %r1515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1519, %r1511, %r1516;
	// end inline asm
	shr.u32 	%r1524, %r1502, 8;
	// begin inline asm
	lop3.b32 %r1522, %r835, %r1524, %r1503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1527, %r1503, %r1526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1530, %r1522, %r1527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1533, %r846, %r1524, %r1514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1538, %r1514, %r1537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1541, %r1533, %r1538;
	// end inline asm
	// begin inline asm
	mov.b32 %r1549, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1548, %r16245, -2004318072;
	// begin inline asm
	lop3.b32 %r1546, %r835, %r1548, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1551, %r1549, %r1550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1554, %r1546, %r1551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1557, %r846, %r1548, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1562, %r1560, %r1561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1565, %r1557, %r1562;
	// end inline asm
	shr.u32 	%r1570, %r1548, 8;
	// begin inline asm
	lop3.b32 %r1568, %r835, %r1570, %r1549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1573, %r1549, %r1572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1576, %r1568, %r1573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1579, %r846, %r1570, %r1560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1584, %r1560, %r1583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1587, %r1579, %r1584;
	// end inline asm
	// begin inline asm
	mov.b32 %r1595, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1594, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r1592, %r835, %r1594, %r1595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1597, %r1595, %r1596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1600, %r1592, %r1597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1603, %r846, %r1594, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1608, %r1606, %r1607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1611, %r1603, %r1608;
	// end inline asm
	shr.u32 	%r1616, %r1594, 8;
	// begin inline asm
	lop3.b32 %r1614, %r835, %r1616, %r1595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1619, %r1595, %r1618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1622, %r1614, %r1619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1625, %r846, %r1616, %r1606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1630, %r1606, %r1629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1633, %r1625, %r1630;
	// end inline asm
	// begin inline asm
	mov.b32 %r1641, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1640, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r1638, %r835, %r1640, %r1641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1643, %r1641, %r1642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1646, %r1638, %r1643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1649, %r846, %r1640, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1654, %r1652, %r1653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1657, %r1649, %r1654;
	// end inline asm
	shr.u32 	%r1662, %r1640, 8;
	// begin inline asm
	lop3.b32 %r1660, %r835, %r1662, %r1641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1665, %r1641, %r1664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1668, %r1660, %r1665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1671, %r846, %r1662, %r1652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1676, %r1652, %r1675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1679, %r1671, %r1676;
	// end inline asm
	// begin inline asm
	mov.b32 %r1687, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1698, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1686, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r1684, %r835, %r1686, %r1687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1689, %r1687, %r1688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1692, %r1684, %r1689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1695, %r846, %r1686, %r1698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1700, %r1698, %r1699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1703, %r1695, %r1700;
	// end inline asm
	shr.u32 	%r1708, %r1686, 8;
	// begin inline asm
	lop3.b32 %r1706, %r835, %r1708, %r1687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1711, %r1687, %r1710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1714, %r1706, %r1711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1717, %r846, %r1708, %r1698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1722, %r1698, %r1721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1725, %r1717, %r1722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r278, %r1370, %r1202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r278, %r1381, %r1207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r278, %r1392, %r1212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r278, %r1403, %r1217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r278, %r1416, %r1222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r278, %r1427, %r1227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r278, %r1438, %r1232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r278, %r1449, %r1237;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r278, %r1462, %r1242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r278, %r1473, %r1247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r278, %r1484, %r1252;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r278, %r1495, %r1257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r278, %r1508, %r1262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r278, %r1519, %r1267;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r278, %r1530, %r1272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r278, %r1541, %r1277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r296, %r1554, %r1282;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r296, %r1565, %r1287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r296, %r1576, %r1292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r296, %r1587, %r1297;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r296, %r1600, %r1302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r296, %r1611, %r1307;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r296, %r1622, %r1312;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r296, %r1633, %r1317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r296, %r1646, %r1322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r296, %r1657, %r1327;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r296, %r1668, %r1332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r296, %r1679, %r1337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r296, %r1692, %r1342;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r296, %r1703, %r1347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r296, %r1714, %r1352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r296, %r1725, %r1357;
	// end inline asm
	// begin inline asm
	mov.b32 %r1861, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1872, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1860, %r16237, -2004318072;
	// begin inline asm
	lop3.b32 %r1858, %r835, %r1860, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1863, %r1861, %r1862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1866, %r1858, %r1863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1869, %r846, %r1860, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1874, %r1872, %r1873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1877, %r1869, %r1874;
	// end inline asm
	shr.u32 	%r1882, %r1860, 8;
	// begin inline asm
	lop3.b32 %r1880, %r835, %r1882, %r1861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1885, %r1861, %r1884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1888, %r1880, %r1885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1891, %r846, %r1882, %r1872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1896, %r1872, %r1895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1899, %r1891, %r1896;
	// end inline asm
	// begin inline asm
	mov.b32 %r1907, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1918, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1906, %r16238, -2004318072;
	// begin inline asm
	lop3.b32 %r1904, %r835, %r1906, %r1907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1909, %r1907, %r1908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1912, %r1904, %r1909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1915, %r846, %r1906, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1920, %r1918, %r1919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1923, %r1915, %r1920;
	// end inline asm
	shr.u32 	%r1928, %r1906, 8;
	// begin inline asm
	lop3.b32 %r1926, %r835, %r1928, %r1907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1931, %r1907, %r1930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1934, %r1926, %r1931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1937, %r846, %r1928, %r1918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1942, %r1918, %r1941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1945, %r1937, %r1942;
	// end inline asm
	// begin inline asm
	mov.b32 %r1953, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1964, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1952, %r16239, -2004318072;
	// begin inline asm
	lop3.b32 %r1950, %r835, %r1952, %r1953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1955, %r1953, %r1954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1958, %r1950, %r1955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1961, %r846, %r1952, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1966, %r1964, %r1965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1969, %r1961, %r1966;
	// end inline asm
	shr.u32 	%r1974, %r1952, 8;
	// begin inline asm
	lop3.b32 %r1972, %r835, %r1974, %r1953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1977, %r1953, %r1976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1980, %r1972, %r1977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1983, %r846, %r1974, %r1964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1988, %r1964, %r1987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1991, %r1983, %r1988;
	// end inline asm
	// begin inline asm
	mov.b32 %r1999, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2010, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1998, %r16240, -2004318072;
	// begin inline asm
	lop3.b32 %r1996, %r835, %r1998, %r1999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2001, %r1999, %r2000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2004, %r1996, %r2001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2007, %r846, %r1998, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2012, %r2010, %r2011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2015, %r2007, %r2012;
	// end inline asm
	shr.u32 	%r2020, %r1998, 8;
	// begin inline asm
	lop3.b32 %r2018, %r835, %r2020, %r1999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2023, %r1999, %r2022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2026, %r2018, %r2023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2029, %r846, %r2020, %r2010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2034, %r2010, %r2033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2037, %r2029, %r2034;
	// end inline asm
	// begin inline asm
	mov.b32 %r2045, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2044, %r16249, -2004318072;
	// begin inline asm
	lop3.b32 %r2042, %r835, %r2044, %r2045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2047, %r2045, %r2046;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2050, %r2042, %r2047;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2053, %r846, %r2044, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2057, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2058, %r2056, %r2057;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2061, %r2053, %r2058;
	// end inline asm
	shr.u32 	%r2066, %r2044, 8;
	// begin inline asm
	lop3.b32 %r2064, %r835, %r2066, %r2045, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2068, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2069, %r2045, %r2068;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2072, %r2064, %r2069;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2075, %r846, %r2066, %r2056, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2080, %r2056, %r2079;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2083, %r2075, %r2080;
	// end inline asm
	// begin inline asm
	mov.b32 %r2091, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2090, %r16250, -2004318072;
	// begin inline asm
	lop3.b32 %r2088, %r835, %r2090, %r2091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2092, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2093, %r2091, %r2092;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2096, %r2088, %r2093;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2099, %r846, %r2090, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2103, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2104, %r2102, %r2103;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2107, %r2099, %r2104;
	// end inline asm
	shr.u32 	%r2112, %r2090, 8;
	// begin inline asm
	lop3.b32 %r2110, %r835, %r2112, %r2091, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2115, %r2091, %r2114;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2118, %r2110, %r2115;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2121, %r846, %r2112, %r2102, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2125, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2126, %r2102, %r2125;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2129, %r2121, %r2126;
	// end inline asm
	// begin inline asm
	mov.b32 %r2137, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2136, %r16251, -2004318072;
	// begin inline asm
	lop3.b32 %r2134, %r835, %r2136, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2139, %r2137, %r2138;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2142, %r2134, %r2139;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2145, %r846, %r2136, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2150, %r2148, %r2149;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2153, %r2145, %r2150;
	// end inline asm
	shr.u32 	%r2158, %r2136, 8;
	// begin inline asm
	lop3.b32 %r2156, %r835, %r2158, %r2137, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2160, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2161, %r2137, %r2160;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2164, %r2156, %r2161;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2167, %r846, %r2158, %r2148, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2171, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2172, %r2148, %r2171;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2175, %r2167, %r2172;
	// end inline asm
	// begin inline asm
	mov.b32 %r2183, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2194, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2182, %r16252, -2004318072;
	// begin inline asm
	lop3.b32 %r2180, %r835, %r2182, %r2183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2185, %r2183, %r2184;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2188, %r2180, %r2185;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2191, %r846, %r2182, %r2194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2196, %r2194, %r2195;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2199, %r2191, %r2196;
	// end inline asm
	shr.u32 	%r2204, %r2182, 8;
	// begin inline asm
	lop3.b32 %r2202, %r835, %r2204, %r2183, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2207, %r2183, %r2206;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2210, %r2202, %r2207;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2213, %r846, %r2204, %r2194, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2217, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2218, %r2194, %r2217;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2221, %r2213, %r2218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r2224, %r1866, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2230, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r2230, %r1877, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2236, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r2236, %r1888, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1899, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1912, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1923, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1934, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1945, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r1958, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r1969, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r1980, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r1991, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r2004, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r2015, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2026, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2037, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2050, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2061, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2072, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2083, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2096, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2107, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2118, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2129, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2142, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2153, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2380, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2382, %r2380, %r2164, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2386, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2388, %r2386, %r2175, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2392, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2394, %r2392, %r2188, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2398, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2400, %r2398, %r2199, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2404, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2406, %r2404, %r2210, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2410, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2412, %r2410, %r2221, %r1852;
	// end inline asm
	// begin inline asm
	mov.b32 %r2421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2420, %r16241, -2004318072;
	// begin inline asm
	lop3.b32 %r2418, %r835, %r2420, %r2421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2423, %r2421, %r2422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2426, %r2418, %r2423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2429, %r846, %r2420, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2434, %r2432, %r2433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2437, %r2429, %r2434;
	// end inline asm
	shr.u32 	%r2442, %r2420, 8;
	// begin inline asm
	lop3.b32 %r2440, %r835, %r2442, %r2421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2445, %r2421, %r2444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2448, %r2440, %r2445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2451, %r846, %r2442, %r2432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2456, %r2432, %r2455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2459, %r2451, %r2456;
	// end inline asm
	// begin inline asm
	mov.b32 %r2467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2466, %r16242, -2004318072;
	// begin inline asm
	lop3.b32 %r2464, %r835, %r2466, %r2467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2469, %r2467, %r2468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2472, %r2464, %r2469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2475, %r846, %r2466, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2480, %r2478, %r2479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2483, %r2475, %r2480;
	// end inline asm
	shr.u32 	%r2488, %r2466, 8;
	// begin inline asm
	lop3.b32 %r2486, %r835, %r2488, %r2467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2491, %r2467, %r2490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2494, %r2486, %r2491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2497, %r846, %r2488, %r2478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2502, %r2478, %r2501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2505, %r2497, %r2502;
	// end inline asm
	// begin inline asm
	mov.b32 %r2513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2524, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2512, %r16243, -2004318072;
	// begin inline asm
	lop3.b32 %r2510, %r835, %r2512, %r2513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2515, %r2513, %r2514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2518, %r2510, %r2515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2521, %r846, %r2512, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2526, %r2524, %r2525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2529, %r2521, %r2526;
	// end inline asm
	shr.u32 	%r2534, %r2512, 8;
	// begin inline asm
	lop3.b32 %r2532, %r835, %r2534, %r2513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2537, %r2513, %r2536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2540, %r2532, %r2537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2543, %r846, %r2534, %r2524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2548, %r2524, %r2547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2551, %r2543, %r2548;
	// end inline asm
	// begin inline asm
	mov.b32 %r2559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2570, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2558, %r16244, -2004318072;
	// begin inline asm
	lop3.b32 %r2556, %r835, %r2558, %r2559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2561, %r2559, %r2560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2564, %r2556, %r2561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2567, %r846, %r2558, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2572, %r2570, %r2571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2575, %r2567, %r2572;
	// end inline asm
	shr.u32 	%r2580, %r2558, 8;
	// begin inline asm
	lop3.b32 %r2578, %r835, %r2580, %r2559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2583, %r2559, %r2582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2586, %r2578, %r2583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2589, %r846, %r2580, %r2570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2594, %r2570, %r2593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2597, %r2589, %r2594;
	// end inline asm
	// begin inline asm
	mov.b32 %r2605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2604, %r16253, -2004318072;
	// begin inline asm
	lop3.b32 %r2602, %r835, %r2604, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2607, %r2605, %r2606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2610, %r2602, %r2607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2613, %r846, %r2604, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2618, %r2616, %r2617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2621, %r2613, %r2618;
	// end inline asm
	shr.u32 	%r2626, %r2604, 8;
	// begin inline asm
	lop3.b32 %r2624, %r835, %r2626, %r2605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2629, %r2605, %r2628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2632, %r2624, %r2629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2635, %r846, %r2626, %r2616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2640, %r2616, %r2639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2643, %r2635, %r2640;
	// end inline asm
	// begin inline asm
	mov.b32 %r2651, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2650, %r16254, -2004318072;
	// begin inline asm
	lop3.b32 %r2648, %r835, %r2650, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2653, %r2651, %r2652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2656, %r2648, %r2653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2659, %r846, %r2650, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2664, %r2662, %r2663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2667, %r2659, %r2664;
	// end inline asm
	shr.u32 	%r2672, %r2650, 8;
	// begin inline asm
	lop3.b32 %r2670, %r835, %r2672, %r2651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2675, %r2651, %r2674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2678, %r2670, %r2675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2681, %r846, %r2672, %r2662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2686, %r2662, %r2685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2689, %r2681, %r2686;
	// end inline asm
	// begin inline asm
	mov.b32 %r2697, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2696, %r16255, -2004318072;
	// begin inline asm
	lop3.b32 %r2694, %r835, %r2696, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2698, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2699, %r2697, %r2698;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2702, %r2694, %r2699;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2705, %r846, %r2696, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2710, %r2708, %r2709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2713, %r2705, %r2710;
	// end inline asm
	shr.u32 	%r2718, %r2696, 8;
	// begin inline asm
	lop3.b32 %r2716, %r835, %r2718, %r2697, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2721, %r2697, %r2720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2724, %r2716, %r2721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2727, %r846, %r2718, %r2708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2732, %r2708, %r2731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2735, %r2727, %r2732;
	// end inline asm
	// begin inline asm
	mov.b32 %r2743, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2754, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2742, %r16256, -2004318072;
	// begin inline asm
	lop3.b32 %r2740, %r835, %r2742, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2744, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2745, %r2743, %r2744;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2748, %r2740, %r2745;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2751, %r846, %r2742, %r2754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2756, %r2754, %r2755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2759, %r2751, %r2756;
	// end inline asm
	shr.u32 	%r2764, %r2742, 8;
	// begin inline asm
	lop3.b32 %r2762, %r835, %r2764, %r2743, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2767, %r2743, %r2766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2770, %r2762, %r2767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2773, %r846, %r2764, %r2754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2778, %r2754, %r2777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2781, %r2773, %r2778;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r350, %r2426, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r350, %r2437, %r2232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r350, %r2448, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r350, %r2459, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r350, %r2472, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r350, %r2483, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r350, %r2494, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r350, %r2505, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r350, %r2518, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r350, %r2529, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r350, %r2540, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r350, %r2551, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r350, %r2564, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r350, %r2575, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r350, %r2586, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r350, %r2597, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r368, %r2610, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r368, %r2621, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r368, %r2632, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r368, %r2643, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r368, %r2656, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r368, %r2667, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r368, %r2678, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r368, %r2689, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r368, %r2702, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r368, %r2713, %r2376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r368, %r2724, %r2382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r368, %r2735, %r2388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3045, %r368, %r2748, %r2394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3042, %r368, %r2759, %r2400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3054, %r368, %r2770, %r2406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r368, %r2781, %r2412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2912, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2914, %r2912, %r2916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r432, %r2919, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2921, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2923, %r2921, %r2925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r432, %r2928, %r2923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2930, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2932, %r2930, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r432, %r2937, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2939, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2941, %r2939, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r432, %r2946, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2948, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2950, %r2948, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r432, %r2955, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2957, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2959, %r2957, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r432, %r2964, %r2959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2966, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2968, %r2966, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r432, %r2973, %r2968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2975, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2977, %r2975, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r432, %r2982, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2984, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2986, %r2984, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r435, %r2991, %r2986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2993, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2995, %r2993, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r435, %r3000, %r2995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3002, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3004, %r3002, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r435, %r3009, %r3004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3011, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3013, %r3011, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r435, %r3018, %r3013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3020, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r3020, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r435, %r3027, %r3022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3031, %r3029, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r435, %r3036, %r3031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3038, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3040, %r3038, %r3042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r435, %r3045, %r3040;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3047, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3049, %r3047, %r3051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r435, %r3054, %r3049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3056, %r438, %r2919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3059, %r432, %r2916, %r3056;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3063, %r438, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3066, %r432, %r2925, %r3063;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3070, %r438, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r432, %r2934, %r3070;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3077, %r438, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r432, %r2943, %r3077;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3084, %r438, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3087, %r432, %r2952, %r3084;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3091, %r438, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3094, %r432, %r2961, %r3091;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3098, %r438, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3101, %r432, %r2970, %r3098;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3105, %r438, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3108, %r432, %r2979, %r3105;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3112, %r441, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r435, %r2988, %r3112;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3119, %r441, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3122, %r435, %r2997, %r3119;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3126, %r441, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3129, %r435, %r3006, %r3126;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3133, %r441, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3136, %r435, %r3015, %r3133;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3140, %r441, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3143, %r435, %r3024, %r3140;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3147, %r441, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3150, %r435, %r3033, %r3147;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3154, %r441, %r3045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3157, %r435, %r3042, %r3154;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3161, %r441, %r3054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3164, %r435, %r3051, %r3161;
	// end inline asm
	mov.u32 	%r3176, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3335, %r3332}, {%r480, %r486, %r483, %r489}, {%r2917, %r3059}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3344, %r3341}, {%r480, %r486, %r483, %r489}, {%r2926, %r3066}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3353, %r3350}, {%r480, %r486, %r483, %r489}, {%r2935, %r3073}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3362, %r3359}, {%r480, %r486, %r483, %r489}, {%r2944, %r3080}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3371, %r3368}, {%r480, %r486, %r483, %r489}, {%r2953, %r3087}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3380, %r3377}, {%r480, %r486, %r483, %r489}, {%r2962, %r3094}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3389, %r3386}, {%r480, %r486, %r483, %r489}, {%r2971, %r3101}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3398, %r3395}, {%r480, %r486, %r483, %r489}, {%r2980, %r3108}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3407, %r3404}, {%r480, %r486, %r483, %r489}, {%r2989, %r3115}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3416, %r3413}, {%r480, %r486, %r483, %r489}, {%r2998, %r3122}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3425, %r3422}, {%r480, %r486, %r483, %r489}, {%r3007, %r3129}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3434, %r3431}, {%r480, %r486, %r483, %r489}, {%r3016, %r3136}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3443, %r3440}, {%r480, %r486, %r483, %r489}, {%r3025, %r3143}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3452, %r3449}, {%r480, %r486, %r483, %r489}, {%r3034, %r3150}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3461, %r3458}, {%r480, %r486, %r483, %r489}, {%r3043, %r3157}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3470, %r3467}, {%r480, %r486, %r483, %r489}, {%r3052, %r3164}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3328, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3330, %r3328, %r3332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3333, %r527, %r3335, %r3330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3337, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3339, %r3337, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3342, %r527, %r3344, %r3339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3346, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3348, %r3346, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3351, %r527, %r3353, %r3348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3355, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3357, %r3355, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3360, %r527, %r3362, %r3357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3364, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3366, %r3364, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3369, %r527, %r3371, %r3366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r527, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r527, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r527, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r527, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r527, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r527, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r527, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3436, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r3436, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r527, %r3443, %r3438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3445, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r3445, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r527, %r3452, %r3447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3454, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3456, %r3454, %r3458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3459, %r527, %r3461, %r3456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3463, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3465, %r3463, %r3467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3468, %r527, %r3470, %r3465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3472, %r530, %r3335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3475, %r527, %r3332, %r3472;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3479, %r530, %r3344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3482, %r527, %r3341, %r3479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3486, %r530, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3489, %r527, %r3350, %r3486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r530, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r527, %r3359, %r3493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3500, %r530, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3503, %r527, %r3368, %r3500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3507, %r530, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3510, %r527, %r3377, %r3507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3514, %r530, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3517, %r527, %r3386, %r3514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3521, %r530, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3524, %r527, %r3395, %r3521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3528, %r530, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3531, %r527, %r3404, %r3528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3535, %r530, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3538, %r527, %r3413, %r3535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3542, %r530, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3545, %r527, %r3422, %r3542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3549, %r530, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3552, %r527, %r3431, %r3549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3556, %r530, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3559, %r527, %r3440, %r3556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3563, %r530, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3566, %r527, %r3449, %r3563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3570, %r530, %r3461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3573, %r527, %r3458, %r3570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3577, %r530, %r3470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3580, %r527, %r3467, %r3577;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3876}, {%r570, %r576, %r573, %r579}, {%r3333, %r3475}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3879, %r3882}, {%r570, %r576, %r573, %r579}, {%r3342, %r3482}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3885, %r3888}, {%r570, %r576, %r573, %r579}, {%r3351, %r3489}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3891, %r3894}, {%r570, %r576, %r573, %r579}, {%r3360, %r3496}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3897, %r3900}, {%r570, %r576, %r573, %r579}, {%r3369, %r3503}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3903, %r3906}, {%r570, %r576, %r573, %r579}, {%r3378, %r3510}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3909, %r3912}, {%r570, %r576, %r573, %r579}, {%r3387, %r3517}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3915, %r3918}, {%r570, %r576, %r573, %r579}, {%r3396, %r3524}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r570, %r576, %r573, %r579}, {%r3405, %r3531}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r570, %r576, %r573, %r579}, {%r3414, %r3538}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r570, %r576, %r573, %r579}, {%r3423, %r3545}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r570, %r576, %r573, %r579}, {%r3432, %r3552}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3898, %r3901}, {%r570, %r576, %r573, %r579}, {%r3441, %r3559}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3904, %r3907}, {%r570, %r576, %r573, %r579}, {%r3450, %r3566}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3910, %r3913}, {%r570, %r576, %r573, %r579}, {%r3459, %r3573}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3916, %r3919}, {%r570, %r576, %r573, %r579}, {%r3468, %r3580}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3884, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3887, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3890, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3893, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3896, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3899, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3902, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3905, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3908, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3911, %r3912, %r3913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3914, %r3915, %r3916;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3917, %r3918, %r3919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3932, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3935, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3938, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3941, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3944, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3947, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3950, %r3903, %r3904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3953, %r3906, %r3907;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3956, %r3909, %r3910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3959, %r3912, %r3913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3962, %r3915, %r3916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3965, %r3918, %r3919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r13, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r13, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r13, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r13, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r13, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r13, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r13, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r13, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r13, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r13, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r13, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r13, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r13, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r13, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r13, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r13, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r14, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r14, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r14, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r14, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r14, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r14, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r14, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r14, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r14, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r14, %r3947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4046, %r14, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4049, %r14, %r3953;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4052, %r14, %r3956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4055, %r14, %r3959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4058, %r14, %r3962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4061, %r14, %r3965;
	// end inline asm
	// begin inline asm
	mov.b32 %r4064, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4066, %r3968, %r4064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4069, %r4066, %r4065;
	// end inline asm
	// begin inline asm
	mov.b32 %r4072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4074, %r3971, %r4072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4077, %r4074, %r4073;
	// end inline asm
	// begin inline asm
	mov.b32 %r4080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4082, %r3974, %r4080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4085, %r4082, %r4081;
	// end inline asm
	// begin inline asm
	mov.b32 %r4088, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4089, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4090, %r3977, %r4088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4093, %r4090, %r4089;
	// end inline asm
	// begin inline asm
	mov.b32 %r4096, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4097, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4098, %r3980, %r4096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4101, %r4098, %r4097;
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4105, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4106, %r3983, %r4104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4109, %r4106, %r4105;
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4113, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4114, %r3986, %r4112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4117, %r4114, %r4113;
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4121, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4122, %r3989, %r4120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4125, %r4122, %r4121;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4129, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r3992, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r3995, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r3998, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r4001, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r4004, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r4007, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r4010, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r4013, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r4016, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r4019, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r4022, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r4025, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r4028, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4031, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4034, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4037, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4040, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4043, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4274, %r4046, %r4272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4277, %r4274, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4282, %r4049, %r4280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4285, %r4282, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4290, %r4052, %r4288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4293, %r4290, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4298, %r4055, %r4296;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4301, %r4298, %r4297;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4306, %r4058, %r4304;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4309, %r4306, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4314, %r4061, %r4312;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4317, %r4314, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4323, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4322, %r4323, %r4321;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4325, %r4069, %r4322;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4329, %r4323, %r4328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4332, %r4077, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4336, %r4323, %r4335;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4339, %r4085, %r4336;
	// end inline asm
	// begin inline asm
	mov.b32 %r4342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4343, %r4323, %r4342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4346, %r4093, %r4343;
	// end inline asm
	mov.u32 	%r4352, 25152;
	// begin inline asm
	prmt.b32 %r4349, %r4325, %r4339, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4353, %r4332, %r4346, %r4352;
	// end inline asm
	shl.b32 	%r4360, %r4353, 4;
	mov.u32 	%r4358, 252645135;
	// begin inline asm
	lop3.b32 %r4357, %r4358, %r4349, %r4360, 202;
	// end inline asm
	xor.b32  	%r16104, %r4357, -2004318072;
	// begin inline asm
	mov.b32 %r4364, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4363, %r4364, %r4362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4366, %r4101, %r4363;
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4364, %r4369;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4373, %r4109, %r4370;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4364, %r4376;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4380, %r4117, %r4377;
	// end inline asm
	// begin inline asm
	mov.b32 %r4383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4384, %r4364, %r4383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4387, %r4125, %r4384;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4390, %r4366, %r4380, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4394, %r4373, %r4387, %r4352;
	// end inline asm
	shl.b32 	%r4401, %r4394, 4;
	// begin inline asm
	lop3.b32 %r4398, %r4358, %r4390, %r4401, 202;
	// end inline asm
	xor.b32  	%r16105, %r4398, -2004318072;
	// begin inline asm
	mov.b32 %r4405, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4403, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4404, %r4405, %r4403;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4133, %r4404;
	// end inline asm
	// begin inline asm
	mov.b32 %r4410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4405, %r4410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4414, %r4141, %r4411;
	// end inline asm
	// begin inline asm
	mov.b32 %r4417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4405, %r4417;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4421, %r4149, %r4418;
	// end inline asm
	// begin inline asm
	mov.b32 %r4424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4425, %r4405, %r4424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4428, %r4157, %r4425;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4431, %r4407, %r4421, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4435, %r4414, %r4428, %r4352;
	// end inline asm
	shl.b32 	%r4442, %r4435, 4;
	// begin inline asm
	lop3.b32 %r4439, %r4358, %r4431, %r4442, 202;
	// end inline asm
	xor.b32  	%r16106, %r4439, -2004318072;
	// begin inline asm
	mov.b32 %r4446, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4446, %r4444;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4165, %r4445;
	// end inline asm
	// begin inline asm
	mov.b32 %r4451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4446, %r4451;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4455, %r4173, %r4452;
	// end inline asm
	// begin inline asm
	mov.b32 %r4458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4446, %r4458;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4462, %r4181, %r4459;
	// end inline asm
	// begin inline asm
	mov.b32 %r4465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4466, %r4446, %r4465;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4469, %r4189, %r4466;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4472, %r4448, %r4462, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4476, %r4455, %r4469, %r4352;
	// end inline asm
	shl.b32 	%r4483, %r4476, 4;
	// begin inline asm
	lop3.b32 %r4480, %r4358, %r4472, %r4483, 202;
	// end inline asm
	xor.b32  	%r16107, %r4480, -2004318072;
	// begin inline asm
	mov.b32 %r4487, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4485, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4487, %r4485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4197, %r4486;
	// end inline asm
	// begin inline asm
	mov.b32 %r4492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4487, %r4492;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4496, %r4205, %r4493;
	// end inline asm
	// begin inline asm
	mov.b32 %r4499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4487, %r4499;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4503, %r4213, %r4500;
	// end inline asm
	// begin inline asm
	mov.b32 %r4506, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4507, %r4487, %r4506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4510, %r4221, %r4507;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4513, %r4489, %r4503, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4517, %r4496, %r4510, %r4352;
	// end inline asm
	shl.b32 	%r4524, %r4517, 4;
	// begin inline asm
	lop3.b32 %r4521, %r4358, %r4513, %r4524, 202;
	// end inline asm
	xor.b32  	%r16108, %r4521, -2004318072;
	// begin inline asm
	mov.b32 %r4528, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4528, %r4526;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4229, %r4527;
	// end inline asm
	// begin inline asm
	mov.b32 %r4533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4528, %r4533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4537, %r4237, %r4534;
	// end inline asm
	// begin inline asm
	mov.b32 %r4540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4528, %r4540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4544, %r4245, %r4541;
	// end inline asm
	// begin inline asm
	mov.b32 %r4547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4548, %r4528, %r4547;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4551, %r4253, %r4548;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4554, %r4530, %r4544, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4558, %r4537, %r4551, %r4352;
	// end inline asm
	shl.b32 	%r4565, %r4558, 4;
	// begin inline asm
	lop3.b32 %r4562, %r4358, %r4554, %r4565, 202;
	// end inline asm
	xor.b32  	%r16109, %r4562, -2004318072;
	// begin inline asm
	mov.b32 %r4569, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4569, %r4567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4261, %r4568;
	// end inline asm
	// begin inline asm
	mov.b32 %r4574, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4569, %r4574;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4578, %r4269, %r4575;
	// end inline asm
	// begin inline asm
	mov.b32 %r4581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4569, %r4581;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4585, %r4277, %r4582;
	// end inline asm
	// begin inline asm
	mov.b32 %r4588, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4589, %r4569, %r4588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4592, %r4285, %r4589;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4595, %r4571, %r4585, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4599, %r4578, %r4592, %r4352;
	// end inline asm
	shl.b32 	%r4606, %r4599, 4;
	// begin inline asm
	lop3.b32 %r4603, %r4358, %r4595, %r4606, 202;
	// end inline asm
	xor.b32  	%r16110, %r4603, -2004318072;
	// begin inline asm
	mov.b32 %r4610, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4610, %r4608;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4293, %r4609;
	// end inline asm
	// begin inline asm
	mov.b32 %r4615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4616, %r4610, %r4615;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4301, %r4616;
	// end inline asm
	// begin inline asm
	mov.b32 %r4622, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4623, %r4610, %r4622;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4626, %r4309, %r4623;
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4610, %r4629;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4633, %r4317, %r4630;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4636, %r4612, %r4626, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4640, %r4619, %r4633, %r4352;
	// end inline asm
	shl.b32 	%r4647, %r4640, 4;
	// begin inline asm
	lop3.b32 %r4644, %r4358, %r4636, %r4647, 202;
	// end inline asm
	xor.b32  	%r16111, %r4644, -2004318072;
	add.s64 	%rd93, %rd126, %rd25;
	st.shared.u32 	[%rd93], %r16104;
	add.s64 	%rd94, %rd126, %rd24;
	st.shared.u32 	[%rd94], %r16105;
	add.s64 	%rd95, %rd126, %rd23;
	st.shared.u32 	[%rd95], %r16106;
	add.s64 	%rd96, %rd126, %rd22;
	st.shared.u32 	[%rd96], %r16107;
	add.s64 	%rd97, %rd126, %rd21;
	st.shared.u32 	[%rd97], %r16108;
	add.s64 	%rd98, %rd126, %rd20;
	st.shared.u32 	[%rd98], %r16109;
	add.s64 	%rd99, %rd126, %rd19;
	st.shared.u32 	[%rd99], %r16110;
	add.s64 	%rd100, %rd126, %rd18;
	st.shared.u32 	[%rd100], %r16111;
	ld.shared.u32 	%r16233, [%rd85];
	ld.shared.u32 	%r16234, [%rd86];
	ld.shared.u32 	%r16235, [%rd87];
	ld.shared.u32 	%r16236, [%rd88];
	ld.shared.u32 	%r16245, [%rd89];
	ld.shared.u32 	%r16246, [%rd90];
	ld.shared.u32 	%r16247, [%rd91];
	ld.shared.u32 	%r16248, [%rd92];
	// begin inline asm
	mov.b32 %r4653, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4664, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4652, %r16233, -2004318072;
	// begin inline asm
	lop3.b32 %r4650, %r835, %r4652, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4655, %r4653, %r4654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4658, %r4650, %r4655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4661, %r846, %r4652, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4666, %r4664, %r4665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4669, %r4661, %r4666;
	// end inline asm
	shr.u32 	%r4674, %r4652, 8;
	// begin inline asm
	lop3.b32 %r4672, %r835, %r4674, %r4653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4677, %r4653, %r4676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4680, %r4672, %r4677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4683, %r846, %r4674, %r4664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4688, %r4664, %r4687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4691, %r4683, %r4688;
	// end inline asm
	// begin inline asm
	mov.b32 %r4699, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4698, %r16234, -2004318072;
	// begin inline asm
	lop3.b32 %r4696, %r835, %r4698, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4701, %r4699, %r4700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4704, %r4696, %r4701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4707, %r846, %r4698, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4712, %r4710, %r4711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4715, %r4707, %r4712;
	// end inline asm
	shr.u32 	%r4720, %r4698, 8;
	// begin inline asm
	lop3.b32 %r4718, %r835, %r4720, %r4699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4723, %r4699, %r4722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4726, %r4718, %r4723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4729, %r846, %r4720, %r4710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4734, %r4710, %r4733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4737, %r4729, %r4734;
	// end inline asm
	// begin inline asm
	mov.b32 %r4745, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4744, %r16235, -2004318072;
	// begin inline asm
	lop3.b32 %r4742, %r835, %r4744, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4747, %r4745, %r4746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4750, %r4742, %r4747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4753, %r846, %r4744, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4758, %r4756, %r4757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4761, %r4753, %r4758;
	// end inline asm
	shr.u32 	%r4766, %r4744, 8;
	// begin inline asm
	lop3.b32 %r4764, %r835, %r4766, %r4745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4769, %r4745, %r4768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4772, %r4764, %r4769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4775, %r846, %r4766, %r4756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4780, %r4756, %r4779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4783, %r4775, %r4780;
	// end inline asm
	// begin inline asm
	mov.b32 %r4791, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4790, %r16236, -2004318072;
	// begin inline asm
	lop3.b32 %r4788, %r835, %r4790, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4793, %r4791, %r4792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4796, %r4788, %r4793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4799, %r846, %r4790, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4804, %r4802, %r4803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4807, %r4799, %r4804;
	// end inline asm
	shr.u32 	%r4812, %r4790, 8;
	// begin inline asm
	lop3.b32 %r4810, %r835, %r4812, %r4791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4815, %r4791, %r4814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4818, %r4810, %r4815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4821, %r846, %r4812, %r4802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4826, %r4802, %r4825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4829, %r4821, %r4826;
	// end inline asm
	// begin inline asm
	mov.b32 %r4837, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4836, %r16245, -2004318072;
	// begin inline asm
	lop3.b32 %r4834, %r835, %r4836, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4839, %r4837, %r4838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4842, %r4834, %r4839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4845, %r846, %r4836, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4850, %r4848, %r4849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4853, %r4845, %r4850;
	// end inline asm
	shr.u32 	%r4858, %r4836, 8;
	// begin inline asm
	lop3.b32 %r4856, %r835, %r4858, %r4837, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4861, %r4837, %r4860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4864, %r4856, %r4861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4867, %r846, %r4858, %r4848, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4872, %r4848, %r4871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4875, %r4867, %r4872;
	// end inline asm
	// begin inline asm
	mov.b32 %r4883, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4882, %r16246, -2004318072;
	// begin inline asm
	lop3.b32 %r4880, %r835, %r4882, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4885, %r4883, %r4884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4888, %r4880, %r4885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4891, %r846, %r4882, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4896, %r4894, %r4895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4899, %r4891, %r4896;
	// end inline asm
	shr.u32 	%r4904, %r4882, 8;
	// begin inline asm
	lop3.b32 %r4902, %r835, %r4904, %r4883, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4907, %r4883, %r4906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4910, %r4902, %r4907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4913, %r846, %r4904, %r4894, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4918, %r4894, %r4917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4921, %r4913, %r4918;
	// end inline asm
	// begin inline asm
	mov.b32 %r4929, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4928, %r16247, -2004318072;
	// begin inline asm
	lop3.b32 %r4926, %r835, %r4928, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4931, %r4929, %r4930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4934, %r4926, %r4931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4937, %r846, %r4928, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4942, %r4940, %r4941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4945, %r4937, %r4942;
	// end inline asm
	shr.u32 	%r4950, %r4928, 8;
	// begin inline asm
	lop3.b32 %r4948, %r835, %r4950, %r4929, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4953, %r4929, %r4952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4956, %r4948, %r4953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4959, %r846, %r4950, %r4940, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4964, %r4940, %r4963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4967, %r4959, %r4964;
	// end inline asm
	// begin inline asm
	mov.b32 %r4975, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4986, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4974, %r16248, -2004318072;
	// begin inline asm
	lop3.b32 %r4972, %r835, %r4974, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4977, %r4975, %r4976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4980, %r4972, %r4977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4983, %r846, %r4974, %r4986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4988, %r4986, %r4987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4991, %r4983, %r4988;
	// end inline asm
	shr.u32 	%r4996, %r4974, 8;
	// begin inline asm
	lop3.b32 %r4994, %r835, %r4996, %r4975, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4999, %r4975, %r4998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5002, %r4994, %r4999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5005, %r846, %r4996, %r4986, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5010, %r4986, %r5009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5013, %r5005, %r5010;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5016, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5018, %r5016, %r4658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5021, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5023, %r5021, %r4669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5026, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5028, %r5026, %r4680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5031, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5033, %r5031, %r4691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5036, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5038, %r5036, %r4704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5041, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5043, %r5041, %r4715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5046, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5048, %r5046, %r4726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5051, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5053, %r5051, %r4737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5056, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5058, %r5056, %r4750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5061, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5063, %r5061, %r4761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5066, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5068, %r5066, %r4772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5071, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5073, %r5071, %r4783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5076, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5078, %r5076, %r4796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5081, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5083, %r5081, %r4807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5086, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5088, %r5086, %r4818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5091, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5093, %r5091, %r4829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5096, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5098, %r5096, %r4842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5101, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5103, %r5101, %r4853;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5106, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5108, %r5106, %r4864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5111, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5113, %r5111, %r4875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5116, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5118, %r5116, %r4888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5121, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5123, %r5121, %r4899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5126, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5128, %r5126, %r4910;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5131, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5133, %r5131, %r4921;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5136, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5138, %r5136, %r4934;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5141, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5143, %r5141, %r4945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5146, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5148, %r5146, %r4956;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5151, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5153, %r5151, %r4967;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5156, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5158, %r5156, %r4980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5161, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5163, %r5161, %r4991;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5166, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5168, %r5166, %r5002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5171, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5173, %r5171, %r5013;
	// end inline asm
	// begin inline asm
	mov.b32 %r5181, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5192, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5178, %r835, %r1860, %r5181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5183, %r5181, %r5182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5186, %r5178, %r5183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5189, %r846, %r1860, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5194, %r5192, %r5193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5197, %r5189, %r5194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5200, %r835, %r1882, %r5181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5205, %r5181, %r5204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5208, %r5200, %r5205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5211, %r846, %r1882, %r5192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5216, %r5192, %r5215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5219, %r5211, %r5216;
	// end inline asm
	// begin inline asm
	mov.b32 %r5227, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5238, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5224, %r835, %r1906, %r5227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5229, %r5227, %r5228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5232, %r5224, %r5229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5235, %r846, %r1906, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5240, %r5238, %r5239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5243, %r5235, %r5240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5246, %r835, %r1928, %r5227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5251, %r5227, %r5250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5254, %r5246, %r5251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5257, %r846, %r1928, %r5238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5262, %r5238, %r5261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5265, %r5257, %r5262;
	// end inline asm
	// begin inline asm
	mov.b32 %r5273, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5284, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5270, %r835, %r1952, %r5273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5275, %r5273, %r5274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5278, %r5270, %r5275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5281, %r846, %r1952, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5286, %r5284, %r5285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5289, %r5281, %r5286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5292, %r835, %r1974, %r5273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5297, %r5273, %r5296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5300, %r5292, %r5297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5303, %r846, %r1974, %r5284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5308, %r5284, %r5307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5311, %r5303, %r5308;
	// end inline asm
	// begin inline asm
	mov.b32 %r5319, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5330, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5316, %r835, %r1998, %r5319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5321, %r5319, %r5320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5324, %r5316, %r5321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5327, %r846, %r1998, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5332, %r5330, %r5331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5335, %r5327, %r5332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5338, %r835, %r2020, %r5319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5343, %r5319, %r5342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5346, %r5338, %r5343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5349, %r846, %r2020, %r5330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5354, %r5330, %r5353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5357, %r5349, %r5354;
	// end inline asm
	// begin inline asm
	mov.b32 %r5365, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5376, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5362, %r835, %r2044, %r5365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5367, %r5365, %r5366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5370, %r5362, %r5367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5373, %r846, %r2044, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5378, %r5376, %r5377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5381, %r5373, %r5378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5384, %r835, %r2066, %r5365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5389, %r5365, %r5388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5392, %r5384, %r5389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5395, %r846, %r2066, %r5376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5400, %r5376, %r5399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5403, %r5395, %r5400;
	// end inline asm
	// begin inline asm
	mov.b32 %r5411, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5422, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5408, %r835, %r2090, %r5411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5413, %r5411, %r5412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5416, %r5408, %r5413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5419, %r846, %r2090, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5424, %r5422, %r5423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5427, %r5419, %r5424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5430, %r835, %r2112, %r5411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5435, %r5411, %r5434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5438, %r5430, %r5435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5441, %r846, %r2112, %r5422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5446, %r5422, %r5445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5449, %r5441, %r5446;
	// end inline asm
	// begin inline asm
	mov.b32 %r5457, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5468, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5454, %r835, %r2136, %r5457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5459, %r5457, %r5458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5462, %r5454, %r5459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5465, %r846, %r2136, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5470, %r5468, %r5469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5473, %r5465, %r5470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5476, %r835, %r2158, %r5457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5481, %r5457, %r5480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5484, %r5476, %r5481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5487, %r846, %r2158, %r5468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5492, %r5468, %r5491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5495, %r5487, %r5492;
	// end inline asm
	// begin inline asm
	mov.b32 %r5503, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5514, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5500, %r835, %r2182, %r5503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5505, %r5503, %r5504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5508, %r5500, %r5505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5511, %r846, %r2182, %r5514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5516, %r5514, %r5515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5519, %r5511, %r5516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5522, %r835, %r2204, %r5503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5527, %r5503, %r5526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5530, %r5522, %r5527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5533, %r846, %r2204, %r5514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5538, %r5514, %r5537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5541, %r5533, %r5538;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r278, %r5186, %r5018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r278, %r5197, %r5023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r278, %r5208, %r5028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r278, %r5219, %r5033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r278, %r5232, %r5038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r278, %r5243, %r5043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r278, %r5254, %r5048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r278, %r5265, %r5053;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r278, %r5278, %r5058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r278, %r5289, %r5063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r278, %r5300, %r5068;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r278, %r5311, %r5073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r278, %r5324, %r5078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r278, %r5335, %r5083;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r278, %r5346, %r5088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r278, %r5357, %r5093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r296, %r5370, %r5098;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r296, %r5381, %r5103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r296, %r5392, %r5108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r296, %r5403, %r5113;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r296, %r5416, %r5118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r296, %r5427, %r5123;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r296, %r5438, %r5128;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r296, %r5449, %r5133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r296, %r5462, %r5138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r296, %r5473, %r5143;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r296, %r5484, %r5148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r296, %r5495, %r5153;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5656, %r296, %r5508, %r5158;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5660, %r296, %r5519, %r5163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5664, %r296, %r5530, %r5168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5668, %r296, %r5541, %r5173;
	// end inline asm
	// begin inline asm
	mov.b32 %r5677, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5674, %r835, %r2420, %r5677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5679, %r5677, %r5678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5682, %r5674, %r5679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5685, %r846, %r2420, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5690, %r5688, %r5689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5693, %r5685, %r5690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5696, %r835, %r2442, %r5677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5701, %r5677, %r5700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5704, %r5696, %r5701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5707, %r846, %r2442, %r5688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5712, %r5688, %r5711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5715, %r5707, %r5712;
	// end inline asm
	// begin inline asm
	mov.b32 %r5723, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5720, %r835, %r2466, %r5723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5725, %r5723, %r5724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5728, %r5720, %r5725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5731, %r846, %r2466, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5736, %r5734, %r5735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5739, %r5731, %r5736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5742, %r835, %r2488, %r5723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5747, %r5723, %r5746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5750, %r5742, %r5747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5753, %r846, %r2488, %r5734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5758, %r5734, %r5757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5761, %r5753, %r5758;
	// end inline asm
	// begin inline asm
	mov.b32 %r5769, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5766, %r835, %r2512, %r5769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5771, %r5769, %r5770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5774, %r5766, %r5771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5777, %r846, %r2512, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5782, %r5780, %r5781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5785, %r5777, %r5782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5788, %r835, %r2534, %r5769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5793, %r5769, %r5792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5796, %r5788, %r5793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5799, %r846, %r2534, %r5780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5804, %r5780, %r5803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5807, %r5799, %r5804;
	// end inline asm
	// begin inline asm
	mov.b32 %r5815, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5812, %r835, %r2558, %r5815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5817, %r5815, %r5816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5820, %r5812, %r5817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5823, %r846, %r2558, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5828, %r5826, %r5827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5831, %r5823, %r5828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5834, %r835, %r2580, %r5815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5839, %r5815, %r5838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5842, %r5834, %r5839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5845, %r846, %r2580, %r5826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5850, %r5826, %r5849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5853, %r5845, %r5850;
	// end inline asm
	// begin inline asm
	mov.b32 %r5861, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5872, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5858, %r835, %r2604, %r5861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5863, %r5861, %r5862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5866, %r5858, %r5863;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5869, %r846, %r2604, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5873, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5874, %r5872, %r5873;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5877, %r5869, %r5874;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5880, %r835, %r2626, %r5861, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5884, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5885, %r5861, %r5884;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5888, %r5880, %r5885;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5891, %r846, %r2626, %r5872, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5896, %r5872, %r5895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5899, %r5891, %r5896;
	// end inline asm
	// begin inline asm
	mov.b32 %r5907, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5918, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5904, %r835, %r2650, %r5907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5908, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5909, %r5907, %r5908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5912, %r5904, %r5909;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5915, %r846, %r2650, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5919, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5920, %r5918, %r5919;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5923, %r5915, %r5920;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5926, %r835, %r2672, %r5907, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5931, %r5907, %r5930;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5934, %r5926, %r5931;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5937, %r846, %r2672, %r5918, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5941, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5942, %r5918, %r5941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5945, %r5937, %r5942;
	// end inline asm
	// begin inline asm
	mov.b32 %r5953, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5950, %r835, %r2696, %r5953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5955, %r5953, %r5954;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5958, %r5950, %r5955;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5961, %r846, %r2696, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5966, %r5964, %r5965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5969, %r5961, %r5966;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5972, %r835, %r2718, %r5953, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5976, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5977, %r5953, %r5976;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5980, %r5972, %r5977;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5983, %r846, %r2718, %r5964, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5987, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5988, %r5964, %r5987;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5991, %r5983, %r5988;
	// end inline asm
	// begin inline asm
	mov.b32 %r5999, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6010, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5996, %r835, %r2742, %r5999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6001, %r5999, %r6000;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6004, %r5996, %r6001;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6007, %r846, %r2742, %r6010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6012, %r6010, %r6011;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6015, %r6007, %r6012;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6018, %r835, %r2764, %r5999, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6023, %r5999, %r6022;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6026, %r6018, %r6023;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6029, %r846, %r2764, %r6010, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6033, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6034, %r6010, %r6033;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6037, %r6029, %r6034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6040, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6042, %r6040, %r5682, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6046, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6048, %r6046, %r5693, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6052, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6054, %r6052, %r5704, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5715, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5728, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5739, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5750, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5761, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5774, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5785, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5796, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5807, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5820, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5831, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5842, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5853, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5866, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5877, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5888, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5899, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5912, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5923, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5934, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5945, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5958, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r5969, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6196, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6198, %r6196, %r5980, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6204, %r6202, %r5991, %r5652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6210, %r6208, %r6004, %r5656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6214, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6216, %r6214, %r6015, %r5660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6220, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6222, %r6220, %r6026, %r5664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6226, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6228, %r6226, %r6037, %r5668;
	// end inline asm
	// begin inline asm
	mov.b32 %r6237, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6234, %r835, %r836, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6239, %r6237, %r6238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6242, %r6234, %r6239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6245, %r846, %r836, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6250, %r6248, %r6249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6253, %r6245, %r6250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6256, %r835, %r858, %r6237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6261, %r6237, %r6260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6264, %r6256, %r6261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6267, %r846, %r858, %r6248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6272, %r6248, %r6271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6275, %r6267, %r6272;
	// end inline asm
	// begin inline asm
	mov.b32 %r6283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6280, %r835, %r882, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6285, %r6283, %r6284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6288, %r6280, %r6285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6291, %r846, %r882, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6296, %r6294, %r6295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6299, %r6291, %r6296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6302, %r835, %r904, %r6283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6307, %r6283, %r6306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6310, %r6302, %r6307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6313, %r846, %r904, %r6294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6318, %r6294, %r6317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6321, %r6313, %r6318;
	// end inline asm
	// begin inline asm
	mov.b32 %r6329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6326, %r835, %r928, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6331, %r6329, %r6330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6334, %r6326, %r6331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6337, %r846, %r928, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6342, %r6340, %r6341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6345, %r6337, %r6342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6348, %r835, %r950, %r6329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6353, %r6329, %r6352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6356, %r6348, %r6353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6359, %r846, %r950, %r6340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6364, %r6340, %r6363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6367, %r6359, %r6364;
	// end inline asm
	// begin inline asm
	mov.b32 %r6375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6372, %r835, %r974, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6377, %r6375, %r6376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6380, %r6372, %r6377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6383, %r846, %r974, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6388, %r6386, %r6387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6391, %r6383, %r6388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6394, %r835, %r996, %r6375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6399, %r6375, %r6398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6402, %r6394, %r6399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6405, %r846, %r996, %r6386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6410, %r6386, %r6409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6413, %r6405, %r6410;
	// end inline asm
	// begin inline asm
	mov.b32 %r6421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6432, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6418, %r835, %r1020, %r6421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6423, %r6421, %r6422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6426, %r6418, %r6423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6429, %r846, %r1020, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6434, %r6432, %r6433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6437, %r6429, %r6434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6440, %r835, %r1042, %r6421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6445, %r6421, %r6444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6448, %r6440, %r6445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6451, %r846, %r1042, %r6432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6456, %r6432, %r6455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6459, %r6451, %r6456;
	// end inline asm
	// begin inline asm
	mov.b32 %r6467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6478, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6464, %r835, %r1066, %r6467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6469, %r6467, %r6468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6472, %r6464, %r6469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6475, %r846, %r1066, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6480, %r6478, %r6479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6483, %r6475, %r6480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6486, %r835, %r1088, %r6467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6491, %r6467, %r6490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6494, %r6486, %r6491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6497, %r846, %r1088, %r6478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6502, %r6478, %r6501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6505, %r6497, %r6502;
	// end inline asm
	// begin inline asm
	mov.b32 %r6513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6524, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6510, %r835, %r1112, %r6513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6515, %r6513, %r6514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6518, %r6510, %r6515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6521, %r846, %r1112, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6526, %r6524, %r6525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6529, %r6521, %r6526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6532, %r835, %r1134, %r6513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6537, %r6513, %r6536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6540, %r6532, %r6537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6543, %r846, %r1134, %r6524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6548, %r6524, %r6547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6551, %r6543, %r6548;
	// end inline asm
	// begin inline asm
	mov.b32 %r6559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6570, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6556, %r835, %r1158, %r6559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6561, %r6559, %r6560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6564, %r6556, %r6561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6567, %r846, %r1158, %r6570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6572, %r6570, %r6571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6575, %r6567, %r6572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6578, %r835, %r1180, %r6559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6583, %r6559, %r6582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6586, %r6578, %r6583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6589, %r846, %r1180, %r6570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6594, %r6570, %r6593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6597, %r6589, %r6594;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r350, %r6242, %r6042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r350, %r6253, %r6048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r350, %r6264, %r6054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r350, %r6275, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r350, %r6288, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r350, %r6299, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r350, %r6310, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r350, %r6321, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r350, %r6334, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r350, %r6345, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r350, %r6356, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r350, %r6367, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r350, %r6380, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r350, %r6391, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r350, %r6402, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r350, %r6413, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r368, %r6426, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r368, %r6437, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r368, %r6448, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r368, %r6459, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r368, %r6472, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r368, %r6483, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r368, %r6494, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r368, %r6505, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r368, %r6518, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r368, %r6529, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r368, %r6540, %r6198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r368, %r6551, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6861, %r368, %r6564, %r6210;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6858, %r368, %r6575, %r6216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6870, %r368, %r6586, %r6222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6867, %r368, %r6597, %r6228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6728, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6730, %r6728, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r432, %r6735, %r6730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6739, %r6737, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r432, %r6744, %r6739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6746, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6748, %r6746, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r432, %r6753, %r6748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6757, %r6755, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r432, %r6762, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6764, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6766, %r6764, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r432, %r6771, %r6766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6775, %r6773, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r432, %r6780, %r6775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6782, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6784, %r6782, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r432, %r6789, %r6784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6793, %r6791, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r432, %r6798, %r6793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6800, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6802, %r6800, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r435, %r6807, %r6802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6811, %r6809, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r435, %r6816, %r6811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6818, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6820, %r6818, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r435, %r6825, %r6820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6827, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6829, %r6827, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r435, %r6834, %r6829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6836, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r6836, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r435, %r6843, %r6838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6845, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6847, %r6845, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r435, %r6852, %r6847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6854, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6856, %r6854, %r6858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r435, %r6861, %r6856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6863, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6865, %r6863, %r6867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r435, %r6870, %r6865;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6872, %r438, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6875, %r432, %r6732, %r6872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6879, %r438, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6882, %r432, %r6741, %r6879;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6886, %r438, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r432, %r6750, %r6886;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6893, %r438, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r432, %r6759, %r6893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6900, %r438, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6903, %r432, %r6768, %r6900;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6907, %r438, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6910, %r432, %r6777, %r6907;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6914, %r438, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6917, %r432, %r6786, %r6914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6921, %r438, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6924, %r432, %r6795, %r6921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6928, %r441, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6931, %r435, %r6804, %r6928;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6935, %r441, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6938, %r435, %r6813, %r6935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6942, %r441, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6945, %r435, %r6822, %r6942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6949, %r441, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6952, %r435, %r6831, %r6949;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6956, %r441, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6959, %r435, %r6840, %r6956;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6963, %r441, %r6852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6966, %r435, %r6849, %r6963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6970, %r441, %r6861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6973, %r435, %r6858, %r6970;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6977, %r441, %r6870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6980, %r435, %r6867, %r6977;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7151, %r7148}, {%r480, %r486, %r483, %r489}, {%r6733, %r6875}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7160, %r7157}, {%r480, %r486, %r483, %r489}, {%r6742, %r6882}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7169, %r7166}, {%r480, %r486, %r483, %r489}, {%r6751, %r6889}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r480, %r486, %r483, %r489}, {%r6760, %r6896}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r480, %r486, %r483, %r489}, {%r6769, %r6903}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r480, %r486, %r483, %r489}, {%r6778, %r6910}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r480, %r486, %r483, %r489}, {%r6787, %r6917}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r480, %r486, %r483, %r489}, {%r6796, %r6924}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r480, %r486, %r483, %r489}, {%r6805, %r6931}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r480, %r486, %r483, %r489}, {%r6814, %r6938}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r480, %r486, %r483, %r489}, {%r6823, %r6945}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r480, %r486, %r483, %r489}, {%r6832, %r6952}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r480, %r486, %r483, %r489}, {%r6841, %r6959}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r480, %r486, %r483, %r489}, {%r6850, %r6966}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7277, %r7274}, {%r480, %r486, %r483, %r489}, {%r6859, %r6973}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7286, %r7283}, {%r480, %r486, %r483, %r489}, {%r6868, %r6980}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7144, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7146, %r7144, %r7148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r527, %r7151, %r7146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7153, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7155, %r7153, %r7157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r527, %r7160, %r7155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7162, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r7162, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r527, %r7169, %r7164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r527, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r527, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r527, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r527, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r527, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r527, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r527, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r527, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r527, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r527, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r527, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7270, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7272, %r7270, %r7274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7275, %r527, %r7277, %r7272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7279, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7281, %r7279, %r7283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7284, %r527, %r7286, %r7281;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7288, %r530, %r7151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7291, %r527, %r7148, %r7288;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7295, %r530, %r7160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7298, %r527, %r7157, %r7295;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7302, %r530, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7305, %r527, %r7166, %r7302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r530, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r527, %r7175, %r7309;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7316, %r530, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7319, %r527, %r7184, %r7316;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7323, %r530, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7326, %r527, %r7193, %r7323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7330, %r530, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7333, %r527, %r7202, %r7330;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7337, %r530, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7340, %r527, %r7211, %r7337;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7344, %r530, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7347, %r527, %r7220, %r7344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7351, %r530, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7354, %r527, %r7229, %r7351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7358, %r530, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7361, %r527, %r7238, %r7358;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7365, %r530, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7368, %r527, %r7247, %r7365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7372, %r530, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7375, %r527, %r7256, %r7372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7379, %r530, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7382, %r527, %r7265, %r7379;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7386, %r530, %r7277;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7389, %r527, %r7274, %r7386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7393, %r530, %r7286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7396, %r527, %r7283, %r7393;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7689, %r7692}, {%r570, %r576, %r573, %r579}, {%r7149, %r7291}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7695, %r7698}, {%r570, %r576, %r573, %r579}, {%r7158, %r7298}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7701, %r7704}, {%r570, %r576, %r573, %r579}, {%r7167, %r7305}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7707, %r7710}, {%r570, %r576, %r573, %r579}, {%r7176, %r7312}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7713, %r7716}, {%r570, %r576, %r573, %r579}, {%r7185, %r7319}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7719, %r7722}, {%r570, %r576, %r573, %r579}, {%r7194, %r7326}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7725, %r7728}, {%r570, %r576, %r573, %r579}, {%r7203, %r7333}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7731, %r7734}, {%r570, %r576, %r573, %r579}, {%r7212, %r7340}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r570, %r576, %r573, %r579}, {%r7221, %r7347}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r570, %r576, %r573, %r579}, {%r7230, %r7354}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r570, %r576, %r573, %r579}, {%r7239, %r7361}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r570, %r576, %r573, %r579}, {%r7248, %r7368}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7714, %r7717}, {%r570, %r576, %r573, %r579}, {%r7257, %r7375}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7720, %r7723}, {%r570, %r576, %r573, %r579}, {%r7266, %r7382}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7726, %r7729}, {%r570, %r576, %r573, %r579}, {%r7275, %r7389}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7732, %r7735}, {%r570, %r576, %r573, %r579}, {%r7284, %r7396}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7718, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7721, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7724, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7727, %r7728, %r7729;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7730, %r7731, %r7732;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7733, %r7734, %r7735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7748, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7751, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7754, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7757, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7760, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7763, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7766, %r7719, %r7720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7769, %r7722, %r7723;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7772, %r7725, %r7726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7775, %r7728, %r7729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7778, %r7731, %r7732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7781, %r7734, %r7735;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r13, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r13, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r13, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r13, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r13, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r13, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r13, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r13, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r13, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r13, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r13, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r13, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r13, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r13, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r13, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r13, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r14, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r14, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r14, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r14, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r14, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r14, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r14, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r14, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r14, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r14, %r7763;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7862, %r14, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7865, %r14, %r7769;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7868, %r14, %r7772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7871, %r14, %r7775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7874, %r14, %r7778;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7877, %r14, %r7781;
	// end inline asm
	// begin inline asm
	mov.b32 %r7880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7882, %r7784, %r7880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7885, %r7882, %r7881;
	// end inline asm
	// begin inline asm
	mov.b32 %r7888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7890, %r7787, %r7888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7893, %r7890, %r7889;
	// end inline asm
	// begin inline asm
	mov.b32 %r7896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7898, %r7790, %r7896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7901, %r7898, %r7897;
	// end inline asm
	// begin inline asm
	mov.b32 %r7904, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7905, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7906, %r7793, %r7904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7909, %r7906, %r7905;
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7913, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7914, %r7796, %r7912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7917, %r7914, %r7913;
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7921, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7922, %r7799, %r7920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7925, %r7922, %r7921;
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7929, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7930, %r7802, %r7928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7933, %r7930, %r7929;
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7937, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7938, %r7805, %r7936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7941, %r7938, %r7937;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7808, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7811, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7814, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7817, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7820, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7823, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7826, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7829, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7832, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7835, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7838, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7841, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7844, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7847, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7850, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7853, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7856, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7859, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8090, %r7862, %r8088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8093, %r8090, %r8089;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8097, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8098, %r7865, %r8096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8101, %r8098, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8106, %r7868, %r8104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8109, %r8106, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8113, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8114, %r7871, %r8112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8117, %r8114, %r8113;
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8122, %r7874, %r8120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8125, %r8122, %r8121;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8129, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8130, %r7877, %r8128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8133, %r8130, %r8129;
	// end inline asm
	// begin inline asm
	mov.b32 %r8139, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8137, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8138, %r8139, %r8137;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8141, %r7885, %r8138;
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8145, %r8139, %r8144;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8148, %r7893, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8152, %r8139, %r8151;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8155, %r7901, %r8152;
	// end inline asm
	// begin inline asm
	mov.b32 %r8158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8159, %r8139, %r8158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8162, %r7909, %r8159;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8165, %r8141, %r8155, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8169, %r8148, %r8162, %r4352;
	// end inline asm
	shl.b32 	%r8176, %r8169, 4;
	// begin inline asm
	lop3.b32 %r8173, %r4358, %r8165, %r8176, 202;
	// end inline asm
	xor.b32  	%r16112, %r8173, -2004318072;
	// begin inline asm
	mov.b32 %r8180, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8179, %r8180, %r8178;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8182, %r7917, %r8179;
	// end inline asm
	// begin inline asm
	mov.b32 %r8185, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r8180, %r8185;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8189, %r7925, %r8186;
	// end inline asm
	// begin inline asm
	mov.b32 %r8192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r8180, %r8192;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8196, %r7933, %r8193;
	// end inline asm
	// begin inline asm
	mov.b32 %r8199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8200, %r8180, %r8199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8203, %r7941, %r8200;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8206, %r8182, %r8196, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8210, %r8189, %r8203, %r4352;
	// end inline asm
	shl.b32 	%r8217, %r8210, 4;
	// begin inline asm
	lop3.b32 %r8214, %r4358, %r8206, %r8217, 202;
	// end inline asm
	xor.b32  	%r16113, %r8214, -2004318072;
	// begin inline asm
	mov.b32 %r8221, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8219, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8220, %r8221, %r8219;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r7949, %r8220;
	// end inline asm
	// begin inline asm
	mov.b32 %r8226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r8221, %r8226;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8230, %r7957, %r8227;
	// end inline asm
	// begin inline asm
	mov.b32 %r8233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r8221, %r8233;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8237, %r7965, %r8234;
	// end inline asm
	// begin inline asm
	mov.b32 %r8240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8241, %r8221, %r8240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8244, %r7973, %r8241;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8247, %r8223, %r8237, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8251, %r8230, %r8244, %r4352;
	// end inline asm
	shl.b32 	%r8258, %r8251, 4;
	// begin inline asm
	lop3.b32 %r8255, %r4358, %r8247, %r8258, 202;
	// end inline asm
	xor.b32  	%r16114, %r8255, -2004318072;
	// begin inline asm
	mov.b32 %r8262, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8261, %r8262, %r8260;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r7981, %r8261;
	// end inline asm
	// begin inline asm
	mov.b32 %r8267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r8262, %r8267;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8271, %r7989, %r8268;
	// end inline asm
	// begin inline asm
	mov.b32 %r8274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r8262, %r8274;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8278, %r7997, %r8275;
	// end inline asm
	// begin inline asm
	mov.b32 %r8281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8282, %r8262, %r8281;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8285, %r8005, %r8282;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8288, %r8264, %r8278, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8292, %r8271, %r8285, %r4352;
	// end inline asm
	shl.b32 	%r8299, %r8292, 4;
	// begin inline asm
	lop3.b32 %r8296, %r4358, %r8288, %r8299, 202;
	// end inline asm
	xor.b32  	%r16115, %r8296, -2004318072;
	// begin inline asm
	mov.b32 %r8303, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8301, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8302, %r8303, %r8301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8013, %r8302;
	// end inline asm
	// begin inline asm
	mov.b32 %r8308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8303, %r8308;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8312, %r8021, %r8309;
	// end inline asm
	// begin inline asm
	mov.b32 %r8315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8303, %r8315;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8319, %r8029, %r8316;
	// end inline asm
	// begin inline asm
	mov.b32 %r8322, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8323, %r8303, %r8322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8326, %r8037, %r8323;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8329, %r8305, %r8319, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8333, %r8312, %r8326, %r4352;
	// end inline asm
	shl.b32 	%r8340, %r8333, 4;
	// begin inline asm
	lop3.b32 %r8337, %r4358, %r8329, %r8340, 202;
	// end inline asm
	xor.b32  	%r16116, %r8337, -2004318072;
	// begin inline asm
	mov.b32 %r8344, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8343, %r8344, %r8342;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8045, %r8343;
	// end inline asm
	// begin inline asm
	mov.b32 %r8349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8344, %r8349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8353, %r8053, %r8350;
	// end inline asm
	// begin inline asm
	mov.b32 %r8356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8344, %r8356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8360, %r8061, %r8357;
	// end inline asm
	// begin inline asm
	mov.b32 %r8363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8364, %r8344, %r8363;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8367, %r8069, %r8364;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8370, %r8346, %r8360, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8374, %r8353, %r8367, %r4352;
	// end inline asm
	shl.b32 	%r8381, %r8374, 4;
	// begin inline asm
	lop3.b32 %r8378, %r4358, %r8370, %r8381, 202;
	// end inline asm
	xor.b32  	%r16117, %r8378, -2004318072;
	// begin inline asm
	mov.b32 %r8385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8384, %r8385, %r8383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8077, %r8384;
	// end inline asm
	// begin inline asm
	mov.b32 %r8390, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8385, %r8390;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8394, %r8085, %r8391;
	// end inline asm
	// begin inline asm
	mov.b32 %r8397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8385, %r8397;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8401, %r8093, %r8398;
	// end inline asm
	// begin inline asm
	mov.b32 %r8404, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8405, %r8385, %r8404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8408, %r8101, %r8405;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8411, %r8387, %r8401, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8415, %r8394, %r8408, %r4352;
	// end inline asm
	shl.b32 	%r8422, %r8415, 4;
	// begin inline asm
	lop3.b32 %r8419, %r4358, %r8411, %r8422, 202;
	// end inline asm
	xor.b32  	%r16118, %r8419, -2004318072;
	// begin inline asm
	mov.b32 %r8426, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8425, %r8426, %r8424;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8428, %r8109, %r8425;
	// end inline asm
	// begin inline asm
	mov.b32 %r8431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8432, %r8426, %r8431;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8117, %r8432;
	// end inline asm
	// begin inline asm
	mov.b32 %r8438, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8439, %r8426, %r8438;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8442, %r8125, %r8439;
	// end inline asm
	// begin inline asm
	mov.b32 %r8445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8426, %r8445;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8449, %r8133, %r8446;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8452, %r8428, %r8442, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8456, %r8435, %r8449, %r4352;
	// end inline asm
	shl.b32 	%r8463, %r8456, 4;
	// begin inline asm
	lop3.b32 %r8460, %r4358, %r8452, %r8463, 202;
	// end inline asm
	xor.b32  	%r16119, %r8460, -2004318072;
	st.shared.u32 	[%rd93], %r16112;
	st.shared.u32 	[%rd94], %r16113;
	st.shared.u32 	[%rd95], %r16114;
	st.shared.u32 	[%rd96], %r16115;
	st.shared.u32 	[%rd97], %r16116;
	st.shared.u32 	[%rd98], %r16117;
	st.shared.u32 	[%rd99], %r16118;
	st.shared.u32 	[%rd100], %r16119;
	ld.shared.u32 	%r16237, [%rd85];
	ld.shared.u32 	%r16238, [%rd86];
	ld.shared.u32 	%r16239, [%rd87];
	ld.shared.u32 	%r16240, [%rd88];
	ld.shared.u32 	%r16249, [%rd89];
	ld.shared.u32 	%r16250, [%rd90];
	ld.shared.u32 	%r16251, [%rd91];
	ld.shared.u32 	%r16252, [%rd92];
	// begin inline asm
	mov.b32 %r8469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8480, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8468, %r16237, -2004318072;
	// begin inline asm
	lop3.b32 %r8466, %r835, %r8468, %r8469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8471, %r8469, %r8470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8474, %r8466, %r8471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8477, %r846, %r8468, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8482, %r8480, %r8481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8485, %r8477, %r8482;
	// end inline asm
	shr.u32 	%r8490, %r8468, 8;
	// begin inline asm
	lop3.b32 %r8488, %r835, %r8490, %r8469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8493, %r8469, %r8492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8496, %r8488, %r8493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8499, %r846, %r8490, %r8480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8504, %r8480, %r8503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8507, %r8499, %r8504;
	// end inline asm
	// begin inline asm
	mov.b32 %r8515, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8526, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8514, %r16238, -2004318072;
	// begin inline asm
	lop3.b32 %r8512, %r835, %r8514, %r8515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8517, %r8515, %r8516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8520, %r8512, %r8517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8523, %r846, %r8514, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8528, %r8526, %r8527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8531, %r8523, %r8528;
	// end inline asm
	shr.u32 	%r8536, %r8514, 8;
	// begin inline asm
	lop3.b32 %r8534, %r835, %r8536, %r8515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8539, %r8515, %r8538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8542, %r8534, %r8539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8545, %r846, %r8536, %r8526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8550, %r8526, %r8549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8553, %r8545, %r8550;
	// end inline asm
	// begin inline asm
	mov.b32 %r8561, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8572, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8560, %r16239, -2004318072;
	// begin inline asm
	lop3.b32 %r8558, %r835, %r8560, %r8561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8563, %r8561, %r8562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8566, %r8558, %r8563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8569, %r846, %r8560, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8574, %r8572, %r8573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8577, %r8569, %r8574;
	// end inline asm
	shr.u32 	%r8582, %r8560, 8;
	// begin inline asm
	lop3.b32 %r8580, %r835, %r8582, %r8561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8585, %r8561, %r8584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8588, %r8580, %r8585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8591, %r846, %r8582, %r8572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8596, %r8572, %r8595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8599, %r8591, %r8596;
	// end inline asm
	// begin inline asm
	mov.b32 %r8607, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8618, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8606, %r16240, -2004318072;
	// begin inline asm
	lop3.b32 %r8604, %r835, %r8606, %r8607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8609, %r8607, %r8608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8612, %r8604, %r8609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8615, %r846, %r8606, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8620, %r8618, %r8619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8623, %r8615, %r8620;
	// end inline asm
	shr.u32 	%r8628, %r8606, 8;
	// begin inline asm
	lop3.b32 %r8626, %r835, %r8628, %r8607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8631, %r8607, %r8630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8634, %r8626, %r8631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8637, %r846, %r8628, %r8618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8642, %r8618, %r8641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8645, %r8637, %r8642;
	// end inline asm
	// begin inline asm
	mov.b32 %r8653, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8664, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8652, %r16249, -2004318072;
	// begin inline asm
	lop3.b32 %r8650, %r835, %r8652, %r8653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8655, %r8653, %r8654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8658, %r8650, %r8655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8661, %r846, %r8652, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8666, %r8664, %r8665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8669, %r8661, %r8666;
	// end inline asm
	shr.u32 	%r8674, %r8652, 8;
	// begin inline asm
	lop3.b32 %r8672, %r835, %r8674, %r8653, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8676, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8677, %r8653, %r8676;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8680, %r8672, %r8677;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8683, %r846, %r8674, %r8664, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8687, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8688, %r8664, %r8687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8691, %r8683, %r8688;
	// end inline asm
	// begin inline asm
	mov.b32 %r8699, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8710, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8698, %r16250, -2004318072;
	// begin inline asm
	lop3.b32 %r8696, %r835, %r8698, %r8699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8701, %r8699, %r8700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8704, %r8696, %r8701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8707, %r846, %r8698, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8712, %r8710, %r8711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8715, %r8707, %r8712;
	// end inline asm
	shr.u32 	%r8720, %r8698, 8;
	// begin inline asm
	lop3.b32 %r8718, %r835, %r8720, %r8699, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8722, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8723, %r8699, %r8722;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8726, %r8718, %r8723;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8729, %r846, %r8720, %r8710, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8734, %r8710, %r8733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8737, %r8729, %r8734;
	// end inline asm
	// begin inline asm
	mov.b32 %r8745, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8756, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8744, %r16251, -2004318072;
	// begin inline asm
	lop3.b32 %r8742, %r835, %r8744, %r8745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8747, %r8745, %r8746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8750, %r8742, %r8747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8753, %r846, %r8744, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8758, %r8756, %r8757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8761, %r8753, %r8758;
	// end inline asm
	shr.u32 	%r8766, %r8744, 8;
	// begin inline asm
	lop3.b32 %r8764, %r835, %r8766, %r8745, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8768, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8769, %r8745, %r8768;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8772, %r8764, %r8769;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8775, %r846, %r8766, %r8756, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8779, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8780, %r8756, %r8779;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8783, %r8775, %r8780;
	// end inline asm
	// begin inline asm
	mov.b32 %r8791, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8802, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8790, %r16252, -2004318072;
	// begin inline asm
	lop3.b32 %r8788, %r835, %r8790, %r8791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8793, %r8791, %r8792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8796, %r8788, %r8793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8799, %r846, %r8790, %r8802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8804, %r8802, %r8803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8807, %r8799, %r8804;
	// end inline asm
	shr.u32 	%r8812, %r8790, 8;
	// begin inline asm
	lop3.b32 %r8810, %r835, %r8812, %r8791, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8815, %r8791, %r8814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8818, %r8810, %r8815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8821, %r846, %r8812, %r8802, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8826, %r8802, %r8825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8829, %r8821, %r8826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8832, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8834, %r8832, %r8474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8837, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8839, %r8837, %r8485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8842, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8844, %r8842, %r8496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8847, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8849, %r8847, %r8507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8852, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8854, %r8852, %r8520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8857, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8859, %r8857, %r8531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8862, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8864, %r8862, %r8542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8867, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8869, %r8867, %r8553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8872, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8874, %r8872, %r8566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8877, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8879, %r8877, %r8577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8882, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8884, %r8882, %r8588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8887, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8889, %r8887, %r8599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8892, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8894, %r8892, %r8612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8897, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8899, %r8897, %r8623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8902, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8904, %r8902, %r8634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8907, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8909, %r8907, %r8645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8912, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8914, %r8912, %r8658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8917, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8919, %r8917, %r8669;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8922, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8924, %r8922, %r8680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8927, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8929, %r8927, %r8691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8932, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8934, %r8932, %r8704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8937, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8939, %r8937, %r8715;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8942, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8944, %r8942, %r8726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8947, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8949, %r8947, %r8737;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8952, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8954, %r8952, %r8750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8957, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8959, %r8957, %r8761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8962, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8964, %r8962, %r8772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8967, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8969, %r8967, %r8783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8972, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8974, %r8972, %r8796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8977, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8979, %r8977, %r8807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8982, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8984, %r8982, %r8818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8987, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8989, %r8987, %r8829;
	// end inline asm
	// begin inline asm
	mov.b32 %r8997, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9008, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8994, %r835, %r2420, %r8997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8999, %r8997, %r8998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9002, %r8994, %r8999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9005, %r846, %r2420, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9010, %r9008, %r9009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9013, %r9005, %r9010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9016, %r835, %r2442, %r8997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9021, %r8997, %r9020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9024, %r9016, %r9021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9027, %r846, %r2442, %r9008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9032, %r9008, %r9031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9035, %r9027, %r9032;
	// end inline asm
	// begin inline asm
	mov.b32 %r9043, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9054, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9040, %r835, %r2466, %r9043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9045, %r9043, %r9044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9048, %r9040, %r9045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9051, %r846, %r2466, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9056, %r9054, %r9055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9059, %r9051, %r9056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9062, %r835, %r2488, %r9043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9067, %r9043, %r9066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9070, %r9062, %r9067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9073, %r846, %r2488, %r9054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9078, %r9054, %r9077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9081, %r9073, %r9078;
	// end inline asm
	// begin inline asm
	mov.b32 %r9089, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9100, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9086, %r835, %r2512, %r9089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9091, %r9089, %r9090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9094, %r9086, %r9091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9097, %r846, %r2512, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9102, %r9100, %r9101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9105, %r9097, %r9102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9108, %r835, %r2534, %r9089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9113, %r9089, %r9112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9116, %r9108, %r9113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9119, %r846, %r2534, %r9100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9124, %r9100, %r9123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9127, %r9119, %r9124;
	// end inline asm
	// begin inline asm
	mov.b32 %r9135, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9146, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9132, %r835, %r2558, %r9135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9137, %r9135, %r9136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9140, %r9132, %r9137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9143, %r846, %r2558, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9148, %r9146, %r9147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9151, %r9143, %r9148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9154, %r835, %r2580, %r9135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9159, %r9135, %r9158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9162, %r9154, %r9159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9165, %r846, %r2580, %r9146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9170, %r9146, %r9169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9173, %r9165, %r9170;
	// end inline asm
	// begin inline asm
	mov.b32 %r9181, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9192, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9178, %r835, %r2604, %r9181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9183, %r9181, %r9182;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9186, %r9178, %r9183;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9189, %r846, %r2604, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9193, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9194, %r9192, %r9193;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9197, %r9189, %r9194;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9200, %r835, %r2626, %r9181, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9205, %r9181, %r9204;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9208, %r9200, %r9205;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9211, %r846, %r2626, %r9192, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9216, %r9192, %r9215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9219, %r9211, %r9216;
	// end inline asm
	// begin inline asm
	mov.b32 %r9227, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9238, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9224, %r835, %r2650, %r9227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9228, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9229, %r9227, %r9228;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9232, %r9224, %r9229;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9235, %r846, %r2650, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9239, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9240, %r9238, %r9239;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9243, %r9235, %r9240;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9246, %r835, %r2672, %r9227, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9251, %r9227, %r9250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9254, %r9246, %r9251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9257, %r846, %r2672, %r9238, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9262, %r9238, %r9261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9265, %r9257, %r9262;
	// end inline asm
	// begin inline asm
	mov.b32 %r9273, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9284, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9270, %r835, %r2696, %r9273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9275, %r9273, %r9274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9278, %r9270, %r9275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9281, %r846, %r2696, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9286, %r9284, %r9285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9289, %r9281, %r9286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9292, %r835, %r2718, %r9273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9297, %r9273, %r9296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9300, %r9292, %r9297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9303, %r846, %r2718, %r9284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9308, %r9284, %r9307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9311, %r9303, %r9308;
	// end inline asm
	// begin inline asm
	mov.b32 %r9319, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9330, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9316, %r835, %r2742, %r9319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9321, %r9319, %r9320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9324, %r9316, %r9321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9327, %r846, %r2742, %r9330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9332, %r9330, %r9331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9335, %r9327, %r9332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9338, %r835, %r2764, %r9319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9343, %r9319, %r9342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9346, %r9338, %r9343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9349, %r846, %r2764, %r9330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9354, %r9330, %r9353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9357, %r9349, %r9354;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9360, %r278, %r9002, %r8834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r278, %r9013, %r8839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r278, %r9024, %r8844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r278, %r9035, %r8849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r278, %r9048, %r8854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r278, %r9059, %r8859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r278, %r9070, %r8864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r278, %r9081, %r8869;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r278, %r9094, %r8874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r278, %r9105, %r8879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r278, %r9116, %r8884;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r278, %r9127, %r8889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r278, %r9140, %r8894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r278, %r9151, %r8899;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r278, %r9162, %r8904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r278, %r9173, %r8909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r296, %r9186, %r8914;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r296, %r9197, %r8919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r296, %r9208, %r8924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r296, %r9219, %r8929;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r296, %r9232, %r8934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r296, %r9243, %r8939;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r296, %r9254, %r8944;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r296, %r9265, %r8949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r296, %r9278, %r8954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r296, %r9289, %r8959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r296, %r9300, %r8964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r296, %r9311, %r8969;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9472, %r296, %r9324, %r8974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9476, %r296, %r9335, %r8979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9480, %r296, %r9346, %r8984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9484, %r296, %r9357, %r8989;
	// end inline asm
	// begin inline asm
	mov.b32 %r9493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9504, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9490, %r835, %r836, %r9493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9495, %r9493, %r9494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9498, %r9490, %r9495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9501, %r846, %r836, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9506, %r9504, %r9505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9509, %r9501, %r9506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9512, %r835, %r858, %r9493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9517, %r9493, %r9516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9520, %r9512, %r9517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9523, %r846, %r858, %r9504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9528, %r9504, %r9527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9531, %r9523, %r9528;
	// end inline asm
	// begin inline asm
	mov.b32 %r9539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9550, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9536, %r835, %r882, %r9539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9541, %r9539, %r9540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9544, %r9536, %r9541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9547, %r846, %r882, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9552, %r9550, %r9551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9555, %r9547, %r9552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9558, %r835, %r904, %r9539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9563, %r9539, %r9562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9566, %r9558, %r9563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9569, %r846, %r904, %r9550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9574, %r9550, %r9573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9577, %r9569, %r9574;
	// end inline asm
	// begin inline asm
	mov.b32 %r9585, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9596, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9582, %r835, %r928, %r9585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9587, %r9585, %r9586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9590, %r9582, %r9587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9593, %r846, %r928, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9598, %r9596, %r9597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9601, %r9593, %r9598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9604, %r835, %r950, %r9585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9609, %r9585, %r9608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9612, %r9604, %r9609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9615, %r846, %r950, %r9596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9620, %r9596, %r9619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9623, %r9615, %r9620;
	// end inline asm
	// begin inline asm
	mov.b32 %r9631, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9642, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9628, %r835, %r974, %r9631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9633, %r9631, %r9632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9636, %r9628, %r9633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9639, %r846, %r974, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9644, %r9642, %r9643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9647, %r9639, %r9644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9650, %r835, %r996, %r9631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9655, %r9631, %r9654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9658, %r9650, %r9655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9661, %r846, %r996, %r9642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9666, %r9642, %r9665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9669, %r9661, %r9666;
	// end inline asm
	// begin inline asm
	mov.b32 %r9677, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9688, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9674, %r835, %r1020, %r9677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9678, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9679, %r9677, %r9678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9682, %r9674, %r9679;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9685, %r846, %r1020, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9689, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9690, %r9688, %r9689;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9693, %r9685, %r9690;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9696, %r835, %r1042, %r9677, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9700, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9701, %r9677, %r9700;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9704, %r9696, %r9701;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9707, %r846, %r1042, %r9688, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9711, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9712, %r9688, %r9711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9715, %r9707, %r9712;
	// end inline asm
	// begin inline asm
	mov.b32 %r9723, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9734, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9720, %r835, %r1066, %r9723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9724, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9725, %r9723, %r9724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9728, %r9720, %r9725;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9731, %r846, %r1066, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9735, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9736, %r9734, %r9735;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9739, %r9731, %r9736;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9742, %r835, %r1088, %r9723, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9746, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9747, %r9723, %r9746;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9750, %r9742, %r9747;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9753, %r846, %r1088, %r9734, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9757, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9758, %r9734, %r9757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9761, %r9753, %r9758;
	// end inline asm
	// begin inline asm
	mov.b32 %r9769, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9780, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9766, %r835, %r1112, %r9769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9770, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9771, %r9769, %r9770;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9774, %r9766, %r9771;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9777, %r846, %r1112, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9782, %r9780, %r9781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9785, %r9777, %r9782;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9788, %r835, %r1134, %r9769, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9792, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9793, %r9769, %r9792;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9796, %r9788, %r9793;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9799, %r846, %r1134, %r9780, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9803, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9804, %r9780, %r9803;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9807, %r9799, %r9804;
	// end inline asm
	// begin inline asm
	mov.b32 %r9815, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9826, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9812, %r835, %r1158, %r9815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9816, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9817, %r9815, %r9816;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9820, %r9812, %r9817;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9823, %r846, %r1158, %r9826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9827, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9828, %r9826, %r9827;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9831, %r9823, %r9828;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9834, %r835, %r1180, %r9815, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9838, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9839, %r9815, %r9838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9842, %r9834, %r9839;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9845, %r846, %r1180, %r9826, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9849, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9850, %r9826, %r9849;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9853, %r9845, %r9850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9856, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9858, %r9856, %r9498, %r9360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9862, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9864, %r9862, %r9509, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9868, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9870, %r9868, %r9520, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9531, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9544, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9555, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9566, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9577, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9590, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9601, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9612, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9623, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9636, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9647, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9658, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9669, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9682, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9693, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9704, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9715, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9728, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9739, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9750, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9761, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9774, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9785, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10012, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10014, %r10012, %r9796, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10018, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10020, %r10018, %r9807, %r9468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10024, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10026, %r10024, %r9820, %r9472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10030, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10032, %r10030, %r9831, %r9476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10036, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10038, %r10036, %r9842, %r9480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10042, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10044, %r10042, %r9853, %r9484;
	// end inline asm
	// begin inline asm
	mov.b32 %r10053, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10064, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10050, %r835, %r4652, %r10053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10055, %r10053, %r10054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10058, %r10050, %r10055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10061, %r846, %r4652, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10066, %r10064, %r10065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10069, %r10061, %r10066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10072, %r835, %r4674, %r10053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10077, %r10053, %r10076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10080, %r10072, %r10077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10083, %r846, %r4674, %r10064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10088, %r10064, %r10087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10091, %r10083, %r10088;
	// end inline asm
	// begin inline asm
	mov.b32 %r10099, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10110, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10096, %r835, %r4698, %r10099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10101, %r10099, %r10100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10104, %r10096, %r10101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10107, %r846, %r4698, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10112, %r10110, %r10111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10115, %r10107, %r10112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10118, %r835, %r4720, %r10099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10123, %r10099, %r10122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10126, %r10118, %r10123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10129, %r846, %r4720, %r10110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10134, %r10110, %r10133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10137, %r10129, %r10134;
	// end inline asm
	// begin inline asm
	mov.b32 %r10145, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10156, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10142, %r835, %r4744, %r10145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10147, %r10145, %r10146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10150, %r10142, %r10147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10153, %r846, %r4744, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10158, %r10156, %r10157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10161, %r10153, %r10158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10164, %r835, %r4766, %r10145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10169, %r10145, %r10168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10172, %r10164, %r10169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10175, %r846, %r4766, %r10156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10180, %r10156, %r10179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10183, %r10175, %r10180;
	// end inline asm
	// begin inline asm
	mov.b32 %r10191, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10202, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10188, %r835, %r4790, %r10191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10193, %r10191, %r10192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10196, %r10188, %r10193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10199, %r846, %r4790, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10204, %r10202, %r10203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10207, %r10199, %r10204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10210, %r835, %r4812, %r10191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10215, %r10191, %r10214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10218, %r10210, %r10215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10221, %r846, %r4812, %r10202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10226, %r10202, %r10225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10229, %r10221, %r10226;
	// end inline asm
	// begin inline asm
	mov.b32 %r10237, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10248, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10234, %r835, %r4836, %r10237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10239, %r10237, %r10238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10242, %r10234, %r10239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10245, %r846, %r4836, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10250, %r10248, %r10249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10253, %r10245, %r10250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10256, %r835, %r4858, %r10237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10261, %r10237, %r10260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10264, %r10256, %r10261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10267, %r846, %r4858, %r10248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10272, %r10248, %r10271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10275, %r10267, %r10272;
	// end inline asm
	// begin inline asm
	mov.b32 %r10283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10294, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10280, %r835, %r4882, %r10283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10285, %r10283, %r10284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10288, %r10280, %r10285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10291, %r846, %r4882, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10296, %r10294, %r10295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10299, %r10291, %r10296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10302, %r835, %r4904, %r10283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10307, %r10283, %r10306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10310, %r10302, %r10307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10313, %r846, %r4904, %r10294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10318, %r10294, %r10317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10321, %r10313, %r10318;
	// end inline asm
	// begin inline asm
	mov.b32 %r10329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10340, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10326, %r835, %r4928, %r10329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10331, %r10329, %r10330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10334, %r10326, %r10331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10337, %r846, %r4928, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10342, %r10340, %r10341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10345, %r10337, %r10342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10348, %r835, %r4950, %r10329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10353, %r10329, %r10352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10356, %r10348, %r10353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10359, %r846, %r4950, %r10340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10364, %r10340, %r10363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10367, %r10359, %r10364;
	// end inline asm
	// begin inline asm
	mov.b32 %r10375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10386, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10372, %r835, %r4974, %r10375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10377, %r10375, %r10376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10380, %r10372, %r10377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10383, %r846, %r4974, %r10386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10388, %r10386, %r10387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10391, %r10383, %r10388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10394, %r835, %r4996, %r10375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10399, %r10375, %r10398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10402, %r10394, %r10399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10405, %r846, %r4996, %r10386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10410, %r10386, %r10409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10413, %r10405, %r10410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r350, %r10058, %r9858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r350, %r10069, %r9864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r350, %r10080, %r9870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r350, %r10091, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r350, %r10104, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r350, %r10115, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r350, %r10126, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r350, %r10137, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r350, %r10150, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r350, %r10161, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r350, %r10172, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r350, %r10183, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r350, %r10196, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r350, %r10207, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r350, %r10218, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r350, %r10229, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r368, %r10242, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r368, %r10253, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r368, %r10264, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r368, %r10275, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r368, %r10288, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r368, %r10299, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r368, %r10310, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r368, %r10321, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r368, %r10334, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r368, %r10345, %r10008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r368, %r10356, %r10014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r368, %r10367, %r10020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10677, %r368, %r10380, %r10026;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10674, %r368, %r10391, %r10032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10686, %r368, %r10402, %r10038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10683, %r368, %r10413, %r10044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10544, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10546, %r10544, %r10548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r432, %r10551, %r10546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10553, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10555, %r10553, %r10557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r432, %r10560, %r10555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10562, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10564, %r10562, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r432, %r10569, %r10564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10571, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10573, %r10571, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r432, %r10578, %r10573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10580, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10582, %r10580, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r432, %r10587, %r10582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10589, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10591, %r10589, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r432, %r10596, %r10591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10598, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10600, %r10598, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r432, %r10605, %r10600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10607, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10609, %r10607, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r432, %r10614, %r10609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10616, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10618, %r10616, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r435, %r10623, %r10618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10625, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10627, %r10625, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r435, %r10632, %r10627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10634, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10636, %r10634, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r435, %r10641, %r10636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10643, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10645, %r10643, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r435, %r10650, %r10645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10652, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r10652, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r435, %r10659, %r10654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10661, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10663, %r10661, %r10665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r435, %r10668, %r10663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10670, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10672, %r10670, %r10674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r435, %r10677, %r10672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10679, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10681, %r10679, %r10683;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r435, %r10686, %r10681;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10688, %r438, %r10551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10691, %r432, %r10548, %r10688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10695, %r438, %r10560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10698, %r432, %r10557, %r10695;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10702, %r438, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r432, %r10566, %r10702;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10709, %r438, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r432, %r10575, %r10709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10716, %r438, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10719, %r432, %r10584, %r10716;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10723, %r438, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10726, %r432, %r10593, %r10723;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10730, %r438, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10733, %r432, %r10602, %r10730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10737, %r438, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10740, %r432, %r10611, %r10737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10744, %r441, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10747, %r435, %r10620, %r10744;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10751, %r441, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10754, %r435, %r10629, %r10751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10758, %r441, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10761, %r435, %r10638, %r10758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10765, %r441, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10768, %r435, %r10647, %r10765;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10772, %r441, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10775, %r435, %r10656, %r10772;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10779, %r441, %r10668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10782, %r435, %r10665, %r10779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10786, %r441, %r10677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10789, %r435, %r10674, %r10786;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10793, %r441, %r10686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10796, %r435, %r10683, %r10793;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10967, %r10964}, {%r480, %r486, %r483, %r489}, {%r10549, %r10691}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10976, %r10973}, {%r480, %r486, %r483, %r489}, {%r10558, %r10698}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10985, %r10982}, {%r480, %r486, %r483, %r489}, {%r10567, %r10705}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10994, %r10991}, {%r480, %r486, %r483, %r489}, {%r10576, %r10712}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11003, %r11000}, {%r480, %r486, %r483, %r489}, {%r10585, %r10719}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11012, %r11009}, {%r480, %r486, %r483, %r489}, {%r10594, %r10726}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11021, %r11018}, {%r480, %r486, %r483, %r489}, {%r10603, %r10733}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11030, %r11027}, {%r480, %r486, %r483, %r489}, {%r10612, %r10740}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11039, %r11036}, {%r480, %r486, %r483, %r489}, {%r10621, %r10747}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11048, %r11045}, {%r480, %r486, %r483, %r489}, {%r10630, %r10754}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11057, %r11054}, {%r480, %r486, %r483, %r489}, {%r10639, %r10761}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11066, %r11063}, {%r480, %r486, %r483, %r489}, {%r10648, %r10768}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11075, %r11072}, {%r480, %r486, %r483, %r489}, {%r10657, %r10775}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11084, %r11081}, {%r480, %r486, %r483, %r489}, {%r10666, %r10782}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11093, %r11090}, {%r480, %r486, %r483, %r489}, {%r10675, %r10789}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11102, %r11099}, {%r480, %r486, %r483, %r489}, {%r10684, %r10796}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10960, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10962, %r10960, %r10964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10965, %r527, %r10967, %r10962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10969, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10971, %r10969, %r10973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10974, %r527, %r10976, %r10971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10978, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10980, %r10978, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10983, %r527, %r10985, %r10980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10987, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10989, %r10987, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10992, %r527, %r10994, %r10989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10996, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10998, %r10996, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11001, %r527, %r11003, %r10998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11005, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11007, %r11005, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11010, %r527, %r11012, %r11007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11014, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11016, %r11014, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11019, %r527, %r11021, %r11016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11023, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11025, %r11023, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11028, %r527, %r11030, %r11025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11032, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11034, %r11032, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11037, %r527, %r11039, %r11034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11041, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11043, %r11041, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11046, %r527, %r11048, %r11043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11050, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11052, %r11050, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11055, %r527, %r11057, %r11052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11059, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11061, %r11059, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11064, %r527, %r11066, %r11061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11068, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r11068, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r527, %r11075, %r11070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11077, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11079, %r11077, %r11081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11082, %r527, %r11084, %r11079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11086, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11088, %r11086, %r11090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11091, %r527, %r11093, %r11088;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11095, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11097, %r11095, %r11099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11100, %r527, %r11102, %r11097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11104, %r530, %r10967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11107, %r527, %r10964, %r11104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11111, %r530, %r10976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11114, %r527, %r10973, %r11111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11118, %r530, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11121, %r527, %r10982, %r11118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11125, %r530, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11128, %r527, %r10991, %r11125;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11132, %r530, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11135, %r527, %r11000, %r11132;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11139, %r530, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11142, %r527, %r11009, %r11139;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11146, %r530, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11149, %r527, %r11018, %r11146;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11153, %r530, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11156, %r527, %r11027, %r11153;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11160, %r530, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11163, %r527, %r11036, %r11160;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11167, %r530, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11170, %r527, %r11045, %r11167;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11174, %r530, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11177, %r527, %r11054, %r11174;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11181, %r530, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11184, %r527, %r11063, %r11181;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11188, %r530, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11191, %r527, %r11072, %r11188;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11195, %r530, %r11084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11198, %r527, %r11081, %r11195;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11202, %r530, %r11093;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11205, %r527, %r11090, %r11202;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11209, %r530, %r11102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11212, %r527, %r11099, %r11209;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11505, %r11508}, {%r570, %r576, %r573, %r579}, {%r10965, %r11107}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11511, %r11514}, {%r570, %r576, %r573, %r579}, {%r10974, %r11114}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11517, %r11520}, {%r570, %r576, %r573, %r579}, {%r10983, %r11121}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11523, %r11526}, {%r570, %r576, %r573, %r579}, {%r10992, %r11128}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11529, %r11532}, {%r570, %r576, %r573, %r579}, {%r11001, %r11135}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11535, %r11538}, {%r570, %r576, %r573, %r579}, {%r11010, %r11142}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11541, %r11544}, {%r570, %r576, %r573, %r579}, {%r11019, %r11149}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11547, %r11550}, {%r570, %r576, %r573, %r579}, {%r11028, %r11156}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r570, %r576, %r573, %r579}, {%r11037, %r11163}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r570, %r576, %r573, %r579}, {%r11046, %r11170}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r570, %r576, %r573, %r579}, {%r11055, %r11177}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r570, %r576, %r573, %r579}, {%r11064, %r11184}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11530, %r11533}, {%r570, %r576, %r573, %r579}, {%r11073, %r11191}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11536, %r11539}, {%r570, %r576, %r573, %r579}, {%r11082, %r11198}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11542, %r11545}, {%r570, %r576, %r573, %r579}, {%r11091, %r11205}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11548, %r11551}, {%r570, %r576, %r573, %r579}, {%r11100, %r11212}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11516, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11519, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11522, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11525, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11528, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11531, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11534, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11537, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11540, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11543, %r11544, %r11545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11546, %r11547, %r11548;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11549, %r11550, %r11551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11564, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11567, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11570, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11573, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11576, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11579, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11582, %r11535, %r11536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11585, %r11538, %r11539;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11588, %r11541, %r11542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11591, %r11544, %r11545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11594, %r11547, %r11548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11597, %r11550, %r11551;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r13, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r13, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r13, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r13, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r13, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r13, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r13, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r13, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r13, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r13, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r13, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r13, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r13, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r13, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r13, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r13, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r14, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r14, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r14, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r14, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r14, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r14, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r14, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r14, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r14, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r14, %r11579;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11678, %r14, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11681, %r14, %r11585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11684, %r14, %r11588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11687, %r14, %r11591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11690, %r14, %r11594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11693, %r14, %r11597;
	// end inline asm
	// begin inline asm
	mov.b32 %r11696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11698, %r11600, %r11696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11701, %r11698, %r11697;
	// end inline asm
	// begin inline asm
	mov.b32 %r11704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11706, %r11603, %r11704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11709, %r11706, %r11705;
	// end inline asm
	// begin inline asm
	mov.b32 %r11712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11714, %r11606, %r11712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11717, %r11714, %r11713;
	// end inline asm
	// begin inline asm
	mov.b32 %r11720, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11721, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11722, %r11609, %r11720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11725, %r11722, %r11721;
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11729, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11730, %r11612, %r11728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11733, %r11730, %r11729;
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11737, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11738, %r11615, %r11736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11741, %r11738, %r11737;
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11745, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11746, %r11618, %r11744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11749, %r11746, %r11745;
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11753, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11754, %r11621, %r11752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11757, %r11754, %r11753;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11624, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11627, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11630, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11633, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11636, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11639, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11642, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11645, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11648, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11651, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11654, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11657, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11660, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11663, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11666, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11669, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11672, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11675, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11906, %r11678, %r11904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11909, %r11906, %r11905;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11913, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11914, %r11681, %r11912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11917, %r11914, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11922, %r11684, %r11920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11925, %r11922, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11929, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11930, %r11687, %r11928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11933, %r11930, %r11929;
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11938, %r11690, %r11936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11941, %r11938, %r11937;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11945, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11946, %r11693, %r11944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11949, %r11946, %r11945;
	// end inline asm
	// begin inline asm
	mov.b32 %r11955, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11953, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11954, %r11955, %r11953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11957, %r11701, %r11954;
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11961, %r11955, %r11960;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11964, %r11709, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11968, %r11955, %r11967;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11971, %r11717, %r11968;
	// end inline asm
	// begin inline asm
	mov.b32 %r11974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11975, %r11955, %r11974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11978, %r11725, %r11975;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11981, %r11957, %r11971, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11985, %r11964, %r11978, %r4352;
	// end inline asm
	shl.b32 	%r11992, %r11985, 4;
	// begin inline asm
	lop3.b32 %r11989, %r4358, %r11981, %r11992, 202;
	// end inline asm
	xor.b32  	%r16120, %r11989, -2004318072;
	// begin inline asm
	mov.b32 %r11996, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11995, %r11996, %r11994;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11998, %r11733, %r11995;
	// end inline asm
	// begin inline asm
	mov.b32 %r12001, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r11996, %r12001;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12005, %r11741, %r12002;
	// end inline asm
	// begin inline asm
	mov.b32 %r12008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11996, %r12008;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12012, %r11749, %r12009;
	// end inline asm
	// begin inline asm
	mov.b32 %r12015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12016, %r11996, %r12015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12019, %r11757, %r12016;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12022, %r11998, %r12012, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12026, %r12005, %r12019, %r4352;
	// end inline asm
	shl.b32 	%r12033, %r12026, 4;
	// begin inline asm
	lop3.b32 %r12030, %r4358, %r12022, %r12033, 202;
	// end inline asm
	xor.b32  	%r16121, %r12030, -2004318072;
	// begin inline asm
	mov.b32 %r12037, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12035, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12036, %r12037, %r12035;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r11765, %r12036;
	// end inline asm
	// begin inline asm
	mov.b32 %r12042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r12037, %r12042;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12046, %r11773, %r12043;
	// end inline asm
	// begin inline asm
	mov.b32 %r12049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r12037, %r12049;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12053, %r11781, %r12050;
	// end inline asm
	// begin inline asm
	mov.b32 %r12056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12057, %r12037, %r12056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12060, %r11789, %r12057;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12063, %r12039, %r12053, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12067, %r12046, %r12060, %r4352;
	// end inline asm
	shl.b32 	%r12074, %r12067, 4;
	// begin inline asm
	lop3.b32 %r12071, %r4358, %r12063, %r12074, 202;
	// end inline asm
	xor.b32  	%r16122, %r12071, -2004318072;
	// begin inline asm
	mov.b32 %r12078, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12077, %r12078, %r12076;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r11797, %r12077;
	// end inline asm
	// begin inline asm
	mov.b32 %r12083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r12078, %r12083;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12087, %r11805, %r12084;
	// end inline asm
	// begin inline asm
	mov.b32 %r12090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r12078, %r12090;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12094, %r11813, %r12091;
	// end inline asm
	// begin inline asm
	mov.b32 %r12097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12098, %r12078, %r12097;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12101, %r11821, %r12098;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12104, %r12080, %r12094, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12108, %r12087, %r12101, %r4352;
	// end inline asm
	shl.b32 	%r12115, %r12108, 4;
	// begin inline asm
	lop3.b32 %r12112, %r4358, %r12104, %r12115, 202;
	// end inline asm
	xor.b32  	%r16123, %r12112, -2004318072;
	// begin inline asm
	mov.b32 %r12119, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12117, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12118, %r12119, %r12117;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r11829, %r12118;
	// end inline asm
	// begin inline asm
	mov.b32 %r12124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r12119, %r12124;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12128, %r11837, %r12125;
	// end inline asm
	// begin inline asm
	mov.b32 %r12131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r12119, %r12131;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12135, %r11845, %r12132;
	// end inline asm
	// begin inline asm
	mov.b32 %r12138, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12139, %r12119, %r12138;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12142, %r11853, %r12139;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12145, %r12121, %r12135, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12149, %r12128, %r12142, %r4352;
	// end inline asm
	shl.b32 	%r12156, %r12149, 4;
	// begin inline asm
	lop3.b32 %r12153, %r4358, %r12145, %r12156, 202;
	// end inline asm
	xor.b32  	%r16124, %r12153, -2004318072;
	// begin inline asm
	mov.b32 %r12160, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12159, %r12160, %r12158;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r11861, %r12159;
	// end inline asm
	// begin inline asm
	mov.b32 %r12165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r12160, %r12165;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12169, %r11869, %r12166;
	// end inline asm
	// begin inline asm
	mov.b32 %r12172, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r12160, %r12172;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12176, %r11877, %r12173;
	// end inline asm
	// begin inline asm
	mov.b32 %r12179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12180, %r12160, %r12179;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12183, %r11885, %r12180;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12186, %r12162, %r12176, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12190, %r12169, %r12183, %r4352;
	// end inline asm
	shl.b32 	%r12197, %r12190, 4;
	// begin inline asm
	lop3.b32 %r12194, %r4358, %r12186, %r12197, 202;
	// end inline asm
	xor.b32  	%r16125, %r12194, -2004318072;
	// begin inline asm
	mov.b32 %r12201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12200, %r12201, %r12199;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r11893, %r12200;
	// end inline asm
	// begin inline asm
	mov.b32 %r12206, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r12201, %r12206;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12210, %r11901, %r12207;
	// end inline asm
	// begin inline asm
	mov.b32 %r12213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r12201, %r12213;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12217, %r11909, %r12214;
	// end inline asm
	// begin inline asm
	mov.b32 %r12220, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12221, %r12201, %r12220;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12224, %r11917, %r12221;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12227, %r12203, %r12217, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12231, %r12210, %r12224, %r4352;
	// end inline asm
	shl.b32 	%r12238, %r12231, 4;
	// begin inline asm
	lop3.b32 %r12235, %r4358, %r12227, %r12238, 202;
	// end inline asm
	xor.b32  	%r16126, %r12235, -2004318072;
	// begin inline asm
	mov.b32 %r12242, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12240, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12241, %r12242, %r12240;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12244, %r11925, %r12241;
	// end inline asm
	// begin inline asm
	mov.b32 %r12247, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12248, %r12242, %r12247;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r11933, %r12248;
	// end inline asm
	// begin inline asm
	mov.b32 %r12254, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12255, %r12242, %r12254;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12258, %r11941, %r12255;
	// end inline asm
	// begin inline asm
	mov.b32 %r12261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r12242, %r12261;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12265, %r11949, %r12262;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12268, %r12244, %r12258, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12272, %r12251, %r12265, %r4352;
	// end inline asm
	shl.b32 	%r12279, %r12272, 4;
	// begin inline asm
	lop3.b32 %r12276, %r4358, %r12268, %r12279, 202;
	// end inline asm
	xor.b32  	%r16127, %r12276, -2004318072;
	st.shared.u32 	[%rd93], %r16120;
	st.shared.u32 	[%rd94], %r16121;
	st.shared.u32 	[%rd95], %r16122;
	st.shared.u32 	[%rd96], %r16123;
	st.shared.u32 	[%rd97], %r16124;
	st.shared.u32 	[%rd98], %r16125;
	st.shared.u32 	[%rd99], %r16126;
	st.shared.u32 	[%rd100], %r16127;
	ld.shared.u32 	%r16241, [%rd85];
	ld.shared.u32 	%r16242, [%rd86];
	ld.shared.u32 	%r16243, [%rd87];
	ld.shared.u32 	%r16244, [%rd88];
	ld.shared.u32 	%r16253, [%rd89];
	ld.shared.u32 	%r16254, [%rd90];
	ld.shared.u32 	%r16255, [%rd91];
	ld.shared.u32 	%r16256, [%rd92];
	// begin inline asm
	mov.b32 %r12285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12296, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12284, %r16241, -2004318072;
	// begin inline asm
	lop3.b32 %r12282, %r835, %r12284, %r12285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12287, %r12285, %r12286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12290, %r12282, %r12287;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12293, %r846, %r12284, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12298, %r12296, %r12297;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12301, %r12293, %r12298;
	// end inline asm
	shr.u32 	%r12306, %r12284, 8;
	// begin inline asm
	lop3.b32 %r12304, %r835, %r12306, %r12285, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12308, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12309, %r12285, %r12308;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12312, %r12304, %r12309;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12315, %r846, %r12306, %r12296, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12319, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12320, %r12296, %r12319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12323, %r12315, %r12320;
	// end inline asm
	// begin inline asm
	mov.b32 %r12331, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12342, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12330, %r16242, -2004318072;
	// begin inline asm
	lop3.b32 %r12328, %r835, %r12330, %r12331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12333, %r12331, %r12332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12336, %r12328, %r12333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12339, %r846, %r12330, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12344, %r12342, %r12343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12347, %r12339, %r12344;
	// end inline asm
	shr.u32 	%r12352, %r12330, 8;
	// begin inline asm
	lop3.b32 %r12350, %r835, %r12352, %r12331, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12355, %r12331, %r12354;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12358, %r12350, %r12355;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12361, %r846, %r12352, %r12342, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12366, %r12342, %r12365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12369, %r12361, %r12366;
	// end inline asm
	// begin inline asm
	mov.b32 %r12377, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12388, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12376, %r16243, -2004318072;
	// begin inline asm
	lop3.b32 %r12374, %r835, %r12376, %r12377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12379, %r12377, %r12378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12382, %r12374, %r12379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12385, %r846, %r12376, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12390, %r12388, %r12389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12393, %r12385, %r12390;
	// end inline asm
	shr.u32 	%r12398, %r12376, 8;
	// begin inline asm
	lop3.b32 %r12396, %r835, %r12398, %r12377, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12401, %r12377, %r12400;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12404, %r12396, %r12401;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12407, %r846, %r12398, %r12388, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12411, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12412, %r12388, %r12411;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12415, %r12407, %r12412;
	// end inline asm
	// begin inline asm
	mov.b32 %r12423, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12434, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12422, %r16244, -2004318072;
	// begin inline asm
	lop3.b32 %r12420, %r835, %r12422, %r12423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12425, %r12423, %r12424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12428, %r12420, %r12425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12431, %r846, %r12422, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12436, %r12434, %r12435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12439, %r12431, %r12436;
	// end inline asm
	shr.u32 	%r12444, %r12422, 8;
	// begin inline asm
	lop3.b32 %r12442, %r835, %r12444, %r12423, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12446, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12447, %r12423, %r12446;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12450, %r12442, %r12447;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12453, %r846, %r12444, %r12434, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12457, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12458, %r12434, %r12457;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12461, %r12453, %r12458;
	// end inline asm
	// begin inline asm
	mov.b32 %r12469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12480, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12468, %r16253, -2004318072;
	// begin inline asm
	lop3.b32 %r12466, %r835, %r12468, %r12469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12471, %r12469, %r12470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12474, %r12466, %r12471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12477, %r846, %r12468, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12482, %r12480, %r12481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12485, %r12477, %r12482;
	// end inline asm
	shr.u32 	%r12490, %r12468, 8;
	// begin inline asm
	lop3.b32 %r12488, %r835, %r12490, %r12469, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12492, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12493, %r12469, %r12492;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12496, %r12488, %r12493;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12499, %r846, %r12490, %r12480, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12503, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12504, %r12480, %r12503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12507, %r12499, %r12504;
	// end inline asm
	// begin inline asm
	mov.b32 %r12515, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12526, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12514, %r16254, -2004318072;
	// begin inline asm
	lop3.b32 %r12512, %r835, %r12514, %r12515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12517, %r12515, %r12516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12520, %r12512, %r12517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12523, %r846, %r12514, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12528, %r12526, %r12527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12531, %r12523, %r12528;
	// end inline asm
	shr.u32 	%r12536, %r12514, 8;
	// begin inline asm
	lop3.b32 %r12534, %r835, %r12536, %r12515, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12539, %r12515, %r12538;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12542, %r12534, %r12539;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12545, %r846, %r12536, %r12526, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12550, %r12526, %r12549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12553, %r12545, %r12550;
	// end inline asm
	// begin inline asm
	mov.b32 %r12561, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12572, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12560, %r16255, -2004318072;
	// begin inline asm
	lop3.b32 %r12558, %r835, %r12560, %r12561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12563, %r12561, %r12562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12566, %r12558, %r12563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12569, %r846, %r12560, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12574, %r12572, %r12573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12577, %r12569, %r12574;
	// end inline asm
	shr.u32 	%r12582, %r12560, 8;
	// begin inline asm
	lop3.b32 %r12580, %r835, %r12582, %r12561, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12584, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12585, %r12561, %r12584;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12588, %r12580, %r12585;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12591, %r846, %r12582, %r12572, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12595, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12596, %r12572, %r12595;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12599, %r12591, %r12596;
	// end inline asm
	// begin inline asm
	mov.b32 %r12607, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12618, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12606, %r16256, -2004318072;
	// begin inline asm
	lop3.b32 %r12604, %r835, %r12606, %r12607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12609, %r12607, %r12608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12612, %r12604, %r12609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12615, %r846, %r12606, %r12618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12620, %r12618, %r12619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12623, %r12615, %r12620;
	// end inline asm
	shr.u32 	%r12628, %r12606, 8;
	// begin inline asm
	lop3.b32 %r12626, %r835, %r12628, %r12607, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12630, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12631, %r12607, %r12630;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12634, %r12626, %r12631;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12637, %r846, %r12628, %r12618, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12641, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12642, %r12618, %r12641;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12645, %r12637, %r12642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12648, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12650, %r12648, %r12290;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12653, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12655, %r12653, %r12301;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12658, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12660, %r12658, %r12312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12663, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12665, %r12663, %r12323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12668, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12670, %r12668, %r12336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12673, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12675, %r12673, %r12347;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12678, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12680, %r12678, %r12358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12683, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12685, %r12683, %r12369;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12688, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12690, %r12688, %r12382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12693, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12695, %r12693, %r12393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12698, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12700, %r12698, %r12404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12703, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12705, %r12703, %r12415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12708, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12710, %r12708, %r12428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12713, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12715, %r12713, %r12439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12718, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12720, %r12718, %r12450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12723, %r386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12725, %r12723, %r12461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12728, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12730, %r12728, %r12474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12733, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12735, %r12733, %r12485;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12738, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12740, %r12738, %r12496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12743, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12745, %r12743, %r12507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12748, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12750, %r12748, %r12520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12753, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12755, %r12753, %r12531;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12758, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12760, %r12758, %r12542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12763, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12765, %r12763, %r12553;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12768, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12770, %r12768, %r12566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12773, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12775, %r12773, %r12577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12778, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12780, %r12778, %r12588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12783, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12785, %r12783, %r12599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12788, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12790, %r12788, %r12612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12793, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12795, %r12793, %r12623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12798, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12800, %r12798, %r12634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12803, %r404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12805, %r12803, %r12645;
	// end inline asm
	// begin inline asm
	mov.b32 %r12813, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12824, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12810, %r835, %r836, %r12813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12815, %r12813, %r12814;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12818, %r12810, %r12815;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12821, %r846, %r836, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12825, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12826, %r12824, %r12825;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12829, %r12821, %r12826;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12832, %r835, %r858, %r12813, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12837, %r12813, %r12836;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12840, %r12832, %r12837;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12843, %r846, %r858, %r12824, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12848, %r12824, %r12847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12851, %r12843, %r12848;
	// end inline asm
	// begin inline asm
	mov.b32 %r12859, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12870, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12856, %r835, %r882, %r12859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12860, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12861, %r12859, %r12860;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12864, %r12856, %r12861;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12867, %r846, %r882, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12871, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12872, %r12870, %r12871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12875, %r12867, %r12872;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12878, %r835, %r904, %r12859, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12883, %r12859, %r12882;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12886, %r12878, %r12883;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12889, %r846, %r904, %r12870, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12894, %r12870, %r12893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12897, %r12889, %r12894;
	// end inline asm
	// begin inline asm
	mov.b32 %r12905, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12916, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12902, %r835, %r928, %r12905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12907, %r12905, %r12906;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12910, %r12902, %r12907;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12913, %r846, %r928, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12918, %r12916, %r12917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12921, %r12913, %r12918;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12924, %r835, %r950, %r12905, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12928, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12929, %r12905, %r12928;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12932, %r12924, %r12929;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12935, %r846, %r950, %r12916, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12940, %r12916, %r12939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12943, %r12935, %r12940;
	// end inline asm
	// begin inline asm
	mov.b32 %r12951, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12962, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12948, %r835, %r974, %r12951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12953, %r12951, %r12952;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12956, %r12948, %r12953;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12959, %r846, %r974, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12964, %r12962, %r12963;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12967, %r12959, %r12964;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12970, %r835, %r996, %r12951, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12975, %r12951, %r12974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12978, %r12970, %r12975;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12981, %r846, %r996, %r12962, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12986, %r12962, %r12985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12989, %r12981, %r12986;
	// end inline asm
	// begin inline asm
	mov.b32 %r12997, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13008, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12994, %r835, %r1020, %r12997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12999, %r12997, %r12998;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13002, %r12994, %r12999;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13005, %r846, %r1020, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13009, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13010, %r13008, %r13009;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13013, %r13005, %r13010;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13016, %r835, %r1042, %r12997, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13021, %r12997, %r13020;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13024, %r13016, %r13021;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13027, %r846, %r1042, %r13008, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13032, %r13008, %r13031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13035, %r13027, %r13032;
	// end inline asm
	// begin inline asm
	mov.b32 %r13043, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13054, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13040, %r835, %r1066, %r13043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13044, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13045, %r13043, %r13044;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13048, %r13040, %r13045;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13051, %r846, %r1066, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13055, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13056, %r13054, %r13055;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13059, %r13051, %r13056;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13062, %r835, %r1088, %r13043, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13067, %r13043, %r13066;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13070, %r13062, %r13067;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13073, %r846, %r1088, %r13054, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13078, %r13054, %r13077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13081, %r13073, %r13078;
	// end inline asm
	// begin inline asm
	mov.b32 %r13089, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13100, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13086, %r835, %r1112, %r13089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13090, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13091, %r13089, %r13090;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13094, %r13086, %r13091;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13097, %r846, %r1112, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13102, %r13100, %r13101;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13105, %r13097, %r13102;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13108, %r835, %r1134, %r13089, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13112, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13113, %r13089, %r13112;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13116, %r13108, %r13113;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13119, %r846, %r1134, %r13100, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13124, %r13100, %r13123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13127, %r13119, %r13124;
	// end inline asm
	// begin inline asm
	mov.b32 %r13135, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13146, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13132, %r835, %r1158, %r13135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13137, %r13135, %r13136;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13140, %r13132, %r13137;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13143, %r846, %r1158, %r13146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13148, %r13146, %r13147;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13151, %r13143, %r13148;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13154, %r835, %r1180, %r13135, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13158, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13159, %r13135, %r13158;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13162, %r13154, %r13159;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13165, %r846, %r1180, %r13146, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13170, %r13146, %r13169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13173, %r13165, %r13170;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13176, %r278, %r12818, %r12650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r278, %r12829, %r12655;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r278, %r12840, %r12660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r278, %r12851, %r12665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r278, %r12864, %r12670;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r278, %r12875, %r12675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r278, %r12886, %r12680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r278, %r12897, %r12685;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r278, %r12910, %r12690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r278, %r12921, %r12695;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r278, %r12932, %r12700;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r278, %r12943, %r12705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r278, %r12956, %r12710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r278, %r12967, %r12715;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r278, %r12978, %r12720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r278, %r12989, %r12725;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r296, %r13002, %r12730;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r296, %r13013, %r12735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r296, %r13024, %r12740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r296, %r13035, %r12745;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r296, %r13048, %r12750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r296, %r13059, %r12755;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r296, %r13070, %r12760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r296, %r13081, %r12765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r296, %r13094, %r12770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r296, %r13105, %r12775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r296, %r13116, %r12780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r296, %r13127, %r12785;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13288, %r296, %r13140, %r12790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13292, %r296, %r13151, %r12795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13296, %r296, %r13162, %r12800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13300, %r296, %r13173, %r12805;
	// end inline asm
	// begin inline asm
	mov.b32 %r13309, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13320, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13306, %r835, %r4652, %r13309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13310, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13311, %r13309, %r13310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13314, %r13306, %r13311;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13317, %r846, %r4652, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13321, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13322, %r13320, %r13321;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13325, %r13317, %r13322;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13328, %r835, %r4674, %r13309, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13333, %r13309, %r13332;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13336, %r13328, %r13333;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13339, %r846, %r4674, %r13320, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13343, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13344, %r13320, %r13343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13347, %r13339, %r13344;
	// end inline asm
	// begin inline asm
	mov.b32 %r13355, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13366, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13352, %r835, %r4698, %r13355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13356, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13357, %r13355, %r13356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13360, %r13352, %r13357;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13363, %r846, %r4698, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13368, %r13366, %r13367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13371, %r13363, %r13368;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13374, %r835, %r4720, %r13355, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13378, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13379, %r13355, %r13378;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13382, %r13374, %r13379;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13385, %r846, %r4720, %r13366, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13389, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13390, %r13366, %r13389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13393, %r13385, %r13390;
	// end inline asm
	// begin inline asm
	mov.b32 %r13401, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13412, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13398, %r835, %r4744, %r13401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13403, %r13401, %r13402;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13406, %r13398, %r13403;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13409, %r846, %r4744, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13414, %r13412, %r13413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13417, %r13409, %r13414;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13420, %r835, %r4766, %r13401, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13424, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13425, %r13401, %r13424;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13428, %r13420, %r13425;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13431, %r846, %r4766, %r13412, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13436, %r13412, %r13435;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13439, %r13431, %r13436;
	// end inline asm
	// begin inline asm
	mov.b32 %r13447, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13458, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13444, %r835, %r4790, %r13447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13449, %r13447, %r13448;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13452, %r13444, %r13449;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13455, %r846, %r4790, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13459, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13460, %r13458, %r13459;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13463, %r13455, %r13460;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13466, %r835, %r4812, %r13447, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13471, %r13447, %r13470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13474, %r13466, %r13471;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13477, %r846, %r4812, %r13458, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13482, %r13458, %r13481;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13485, %r13477, %r13482;
	// end inline asm
	// begin inline asm
	mov.b32 %r13493, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13504, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13490, %r835, %r4836, %r13493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13494, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13495, %r13493, %r13494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13498, %r13490, %r13495;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13501, %r846, %r4836, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13505, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13506, %r13504, %r13505;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13509, %r13501, %r13506;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13512, %r835, %r4858, %r13493, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13517, %r13493, %r13516;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13520, %r13512, %r13517;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13523, %r846, %r4858, %r13504, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13527, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13528, %r13504, %r13527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13531, %r13523, %r13528;
	// end inline asm
	// begin inline asm
	mov.b32 %r13539, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13550, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13536, %r835, %r4882, %r13539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13540, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13541, %r13539, %r13540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13544, %r13536, %r13541;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13547, %r846, %r4882, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13551, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13552, %r13550, %r13551;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13555, %r13547, %r13552;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13558, %r835, %r4904, %r13539, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13562, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13563, %r13539, %r13562;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13566, %r13558, %r13563;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13569, %r846, %r4904, %r13550, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13573, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13574, %r13550, %r13573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13577, %r13569, %r13574;
	// end inline asm
	// begin inline asm
	mov.b32 %r13585, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13596, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13582, %r835, %r4928, %r13585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13587, %r13585, %r13586;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13590, %r13582, %r13587;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13593, %r846, %r4928, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13598, %r13596, %r13597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13601, %r13593, %r13598;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13604, %r835, %r4950, %r13585, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13608, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13609, %r13585, %r13608;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13612, %r13604, %r13609;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13615, %r846, %r4950, %r13596, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13620, %r13596, %r13619;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13623, %r13615, %r13620;
	// end inline asm
	// begin inline asm
	mov.b32 %r13631, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13642, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13628, %r835, %r4974, %r13631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13632, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13633, %r13631, %r13632;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13636, %r13628, %r13633;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13639, %r846, %r4974, %r13642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13643, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13644, %r13642, %r13643;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13647, %r13639, %r13644;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13650, %r835, %r4996, %r13631, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13654, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13655, %r13631, %r13654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13658, %r13650, %r13655;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13661, %r846, %r4996, %r13642, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13665, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13666, %r13642, %r13665;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13669, %r13661, %r13666;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13672, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13674, %r13672, %r13314, %r13176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13678, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13680, %r13678, %r13325, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13684, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13686, %r13684, %r13336, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13347, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13360, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13371, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13382, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13393, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13406, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13417, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13428, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13439, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13452, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13463, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13474, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13485, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13498, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13509, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13520, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13531, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13544, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13555, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13566, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13577, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13590, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13601, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13828, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13830, %r13828, %r13612, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13834, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13836, %r13834, %r13623, %r13284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13840, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13842, %r13840, %r13636, %r13288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13846, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13848, %r13846, %r13647, %r13292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13852, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13854, %r13852, %r13658, %r13296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13858, %r332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13860, %r13858, %r13669, %r13300;
	// end inline asm
	// begin inline asm
	mov.b32 %r13869, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13880, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13866, %r835, %r8468, %r13869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13871, %r13869, %r13870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13874, %r13866, %r13871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13877, %r846, %r8468, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13882, %r13880, %r13881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13885, %r13877, %r13882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13888, %r835, %r8490, %r13869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13893, %r13869, %r13892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13896, %r13888, %r13893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13899, %r846, %r8490, %r13880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13904, %r13880, %r13903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13907, %r13899, %r13904;
	// end inline asm
	// begin inline asm
	mov.b32 %r13915, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13926, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13912, %r835, %r8514, %r13915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13917, %r13915, %r13916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13920, %r13912, %r13917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13923, %r846, %r8514, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13928, %r13926, %r13927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13931, %r13923, %r13928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13934, %r835, %r8536, %r13915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13939, %r13915, %r13938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13942, %r13934, %r13939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13945, %r846, %r8536, %r13926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13950, %r13926, %r13949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13953, %r13945, %r13950;
	// end inline asm
	// begin inline asm
	mov.b32 %r13961, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13972, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13958, %r835, %r8560, %r13961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13963, %r13961, %r13962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13966, %r13958, %r13963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13969, %r846, %r8560, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13974, %r13972, %r13973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13977, %r13969, %r13974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13980, %r835, %r8582, %r13961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13985, %r13961, %r13984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13988, %r13980, %r13985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13991, %r846, %r8582, %r13972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13996, %r13972, %r13995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13999, %r13991, %r13996;
	// end inline asm
	// begin inline asm
	mov.b32 %r14007, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14018, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14004, %r835, %r8606, %r14007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14009, %r14007, %r14008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14012, %r14004, %r14009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14015, %r846, %r8606, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14020, %r14018, %r14019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14023, %r14015, %r14020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14026, %r835, %r8628, %r14007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14031, %r14007, %r14030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14034, %r14026, %r14031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14037, %r846, %r8628, %r14018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14042, %r14018, %r14041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14045, %r14037, %r14042;
	// end inline asm
	// begin inline asm
	mov.b32 %r14053, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14064, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14050, %r835, %r8652, %r14053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14055, %r14053, %r14054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14058, %r14050, %r14055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14061, %r846, %r8652, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14066, %r14064, %r14065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14069, %r14061, %r14066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14072, %r835, %r8674, %r14053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14077, %r14053, %r14076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14080, %r14072, %r14077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14083, %r846, %r8674, %r14064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14088, %r14064, %r14087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14091, %r14083, %r14088;
	// end inline asm
	// begin inline asm
	mov.b32 %r14099, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14110, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14096, %r835, %r8698, %r14099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14101, %r14099, %r14100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14104, %r14096, %r14101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14107, %r846, %r8698, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14112, %r14110, %r14111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14115, %r14107, %r14112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14118, %r835, %r8720, %r14099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14123, %r14099, %r14122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14126, %r14118, %r14123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14129, %r846, %r8720, %r14110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14134, %r14110, %r14133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14137, %r14129, %r14134;
	// end inline asm
	// begin inline asm
	mov.b32 %r14145, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14156, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14142, %r835, %r8744, %r14145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14147, %r14145, %r14146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14150, %r14142, %r14147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14153, %r846, %r8744, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14158, %r14156, %r14157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14161, %r14153, %r14158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14164, %r835, %r8766, %r14145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14169, %r14145, %r14168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14172, %r14164, %r14169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14175, %r846, %r8766, %r14156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14180, %r14156, %r14179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14183, %r14175, %r14180;
	// end inline asm
	// begin inline asm
	mov.b32 %r14191, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14202, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14188, %r835, %r8790, %r14191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14193, %r14191, %r14192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14196, %r14188, %r14193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14199, %r846, %r8790, %r14202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14204, %r14202, %r14203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14207, %r14199, %r14204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14210, %r835, %r8812, %r14191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14215, %r14191, %r14214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14218, %r14210, %r14215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14221, %r846, %r8812, %r14202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14226, %r14202, %r14225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14229, %r14221, %r14226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r350, %r13874, %r13674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r350, %r13885, %r13680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r350, %r13896, %r13686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r350, %r13907, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r350, %r13920, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r350, %r13931, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r350, %r13942, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r350, %r13953, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r350, %r13966, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r350, %r13977, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r350, %r13988, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r350, %r13999, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r350, %r14012, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r350, %r14023, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r350, %r14034, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r350, %r14045, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r368, %r14058, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r368, %r14069, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r368, %r14080, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r368, %r14091, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r368, %r14104, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r368, %r14115, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r368, %r14126, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r368, %r14137, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r368, %r14150, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r368, %r14161, %r13824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r368, %r14172, %r13830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r368, %r14183, %r13836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14493, %r368, %r14196, %r13842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14490, %r368, %r14207, %r13848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14502, %r368, %r14218, %r13854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14499, %r368, %r14229, %r13860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14360, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14362, %r14360, %r14364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r432, %r14367, %r14362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14369, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14371, %r14369, %r14373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r432, %r14376, %r14371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14378, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14380, %r14378, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r432, %r14385, %r14380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14387, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14389, %r14387, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r432, %r14394, %r14389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14396, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14398, %r14396, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r432, %r14403, %r14398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14405, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14407, %r14405, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r432, %r14412, %r14407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14414, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14416, %r14414, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r432, %r14421, %r14416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14423, %r438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14425, %r14423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r432, %r14430, %r14425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14432, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14434, %r14432, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r435, %r14439, %r14434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14441, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14443, %r14441, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r435, %r14448, %r14443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14450, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14452, %r14450, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r435, %r14457, %r14452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14459, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14461, %r14459, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r435, %r14466, %r14461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14468, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r14468, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r435, %r14475, %r14470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14477, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14479, %r14477, %r14481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r435, %r14484, %r14479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14486, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14488, %r14486, %r14490;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r435, %r14493, %r14488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14495, %r441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14497, %r14495, %r14499;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r435, %r14502, %r14497;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14504, %r438, %r14367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14507, %r432, %r14364, %r14504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14511, %r438, %r14376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14514, %r432, %r14373, %r14511;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14518, %r438, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r432, %r14382, %r14518;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14525, %r438, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r432, %r14391, %r14525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14532, %r438, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14535, %r432, %r14400, %r14532;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14539, %r438, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14542, %r432, %r14409, %r14539;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14546, %r438, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14549, %r432, %r14418, %r14546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14553, %r438, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14556, %r432, %r14427, %r14553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14560, %r441, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14563, %r435, %r14436, %r14560;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14567, %r441, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14570, %r435, %r14445, %r14567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14574, %r441, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14577, %r435, %r14454, %r14574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14581, %r441, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14584, %r435, %r14463, %r14581;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14588, %r441, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14591, %r435, %r14472, %r14588;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14595, %r441, %r14484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14598, %r435, %r14481, %r14595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14602, %r441, %r14493;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14605, %r435, %r14490, %r14602;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14609, %r441, %r14502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14612, %r435, %r14499, %r14609;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14783, %r14780}, {%r480, %r486, %r483, %r489}, {%r14365, %r14507}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14792, %r14789}, {%r480, %r486, %r483, %r489}, {%r14374, %r14514}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14801, %r14798}, {%r480, %r486, %r483, %r489}, {%r14383, %r14521}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14810, %r14807}, {%r480, %r486, %r483, %r489}, {%r14392, %r14528}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14819, %r14816}, {%r480, %r486, %r483, %r489}, {%r14401, %r14535}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14828, %r14825}, {%r480, %r486, %r483, %r489}, {%r14410, %r14542}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14837, %r14834}, {%r480, %r486, %r483, %r489}, {%r14419, %r14549}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14846, %r14843}, {%r480, %r486, %r483, %r489}, {%r14428, %r14556}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14855, %r14852}, {%r480, %r486, %r483, %r489}, {%r14437, %r14563}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14864, %r14861}, {%r480, %r486, %r483, %r489}, {%r14446, %r14570}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14873, %r14870}, {%r480, %r486, %r483, %r489}, {%r14455, %r14577}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14882, %r14879}, {%r480, %r486, %r483, %r489}, {%r14464, %r14584}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14891, %r14888}, {%r480, %r486, %r483, %r489}, {%r14473, %r14591}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14900, %r14897}, {%r480, %r486, %r483, %r489}, {%r14482, %r14598}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14909, %r14906}, {%r480, %r486, %r483, %r489}, {%r14491, %r14605}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14918, %r14915}, {%r480, %r486, %r483, %r489}, {%r14500, %r14612}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14776, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14778, %r14776, %r14780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14781, %r527, %r14783, %r14778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14785, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14787, %r14785, %r14789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14790, %r527, %r14792, %r14787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14794, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14796, %r14794, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14799, %r527, %r14801, %r14796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14803, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14805, %r14803, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14808, %r527, %r14810, %r14805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14812, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14814, %r14812, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14817, %r527, %r14819, %r14814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14821, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14823, %r14821, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14826, %r527, %r14828, %r14823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14830, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14832, %r14830, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14835, %r527, %r14837, %r14832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14839, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14841, %r14839, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14844, %r527, %r14846, %r14841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14848, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14850, %r14848, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14853, %r527, %r14855, %r14850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14857, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14859, %r14857, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14862, %r527, %r14864, %r14859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14866, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14868, %r14866, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14871, %r527, %r14873, %r14868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14875, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14877, %r14875, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14880, %r527, %r14882, %r14877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14884, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r14884, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r527, %r14891, %r14886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14893, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14895, %r14893, %r14897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14898, %r527, %r14900, %r14895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14902, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14904, %r14902, %r14906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14907, %r527, %r14909, %r14904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14911, %r530;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14913, %r14911, %r14915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14916, %r527, %r14918, %r14913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14920, %r530, %r14783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14923, %r527, %r14780, %r14920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14927, %r530, %r14792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14930, %r527, %r14789, %r14927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14934, %r530, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14937, %r527, %r14798, %r14934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14941, %r530, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14944, %r527, %r14807, %r14941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14948, %r530, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14951, %r527, %r14816, %r14948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14955, %r530, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14958, %r527, %r14825, %r14955;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14962, %r530, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14965, %r527, %r14834, %r14962;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14969, %r530, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14972, %r527, %r14843, %r14969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14976, %r530, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14979, %r527, %r14852, %r14976;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14983, %r530, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14986, %r527, %r14861, %r14983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14990, %r530, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14993, %r527, %r14870, %r14990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14997, %r530, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15000, %r527, %r14879, %r14997;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15004, %r530, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15007, %r527, %r14888, %r15004;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15011, %r530, %r14900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15014, %r527, %r14897, %r15011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15018, %r530, %r14909;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15021, %r527, %r14906, %r15018;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15025, %r530, %r14918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15028, %r527, %r14915, %r15025;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15321, %r15324}, {%r570, %r576, %r573, %r579}, {%r14781, %r14923}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15327, %r15330}, {%r570, %r576, %r573, %r579}, {%r14790, %r14930}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15333, %r15336}, {%r570, %r576, %r573, %r579}, {%r14799, %r14937}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15339, %r15342}, {%r570, %r576, %r573, %r579}, {%r14808, %r14944}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15345, %r15348}, {%r570, %r576, %r573, %r579}, {%r14817, %r14951}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15351, %r15354}, {%r570, %r576, %r573, %r579}, {%r14826, %r14958}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15357, %r15360}, {%r570, %r576, %r573, %r579}, {%r14835, %r14965}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15363, %r15366}, {%r570, %r576, %r573, %r579}, {%r14844, %r14972}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r570, %r576, %r573, %r579}, {%r14853, %r14979}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r570, %r576, %r573, %r579}, {%r14862, %r14986}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r570, %r576, %r573, %r579}, {%r14871, %r14993}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r570, %r576, %r573, %r579}, {%r14880, %r15000}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15346, %r15349}, {%r570, %r576, %r573, %r579}, {%r14889, %r15007}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15352, %r15355}, {%r570, %r576, %r573, %r579}, {%r14898, %r15014}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15358, %r15361}, {%r570, %r576, %r573, %r579}, {%r14907, %r15021}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15364, %r15367}, {%r570, %r576, %r573, %r579}, {%r14916, %r15028}, {%r3176, %r3176};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15332, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15335, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15338, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15341, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15344, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15347, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15350, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15353, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15356, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15359, %r15360, %r15361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15362, %r15363, %r15364;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15365, %r15366, %r15367;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15380, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15383, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15386, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15389, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15392, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15395, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15398, %r15351, %r15352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15401, %r15354, %r15355;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15404, %r15357, %r15358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15407, %r15360, %r15361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15410, %r15363, %r15364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15413, %r15366, %r15367;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r13, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r13, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r13, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r13, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r13, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r13, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r13, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r13, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r13, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r13, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r13, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r13, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r13, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r13, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r13, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r13, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r14, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r14, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r14, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r14, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r14, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r14, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r14, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r14, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r14, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r14, %r15395;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15494, %r14, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15497, %r14, %r15401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15500, %r14, %r15404;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15503, %r14, %r15407;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15506, %r14, %r15410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15509, %r14, %r15413;
	// end inline asm
	// begin inline asm
	mov.b32 %r15512, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15513, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15514, %r15416, %r15512;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15517, %r15514, %r15513;
	// end inline asm
	// begin inline asm
	mov.b32 %r15520, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15521, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15522, %r15419, %r15520;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15525, %r15522, %r15521;
	// end inline asm
	// begin inline asm
	mov.b32 %r15528, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15529, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15530, %r15422, %r15528;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15533, %r15530, %r15529;
	// end inline asm
	// begin inline asm
	mov.b32 %r15536, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15537, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15538, %r15425, %r15536;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15541, %r15538, %r15537;
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15545, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15546, %r15428, %r15544;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15549, %r15546, %r15545;
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15553, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15554, %r15431, %r15552;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15557, %r15554, %r15553;
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15561, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15562, %r15434, %r15560;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15565, %r15562, %r15561;
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15569, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15570, %r15437, %r15568;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15573, %r15570, %r15569;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15440, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15443, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15446, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15449, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15452, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15455, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15458, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15461, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15464, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15467, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15470, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15473, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15476, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15479, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15482, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15485, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15488, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15491, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15722, %r15494, %r15720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15725, %r15722, %r15721;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15729, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15730, %r15497, %r15728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15733, %r15730, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15738, %r15500, %r15736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15741, %r15738, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15745, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15746, %r15503, %r15744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15749, %r15746, %r15745;
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15754, %r15506, %r15752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15757, %r15754, %r15753;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15761, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15762, %r15509, %r15760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15765, %r15762, %r15761;
	// end inline asm
	// begin inline asm
	mov.b32 %r15771, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15769, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15770, %r15771, %r15769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15773, %r15517, %r15770;
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15777, %r15771, %r15776;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15780, %r15525, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15784, %r15771, %r15783;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15787, %r15533, %r15784;
	// end inline asm
	// begin inline asm
	mov.b32 %r15790, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15791, %r15771, %r15790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15794, %r15541, %r15791;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15797, %r15773, %r15787, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15801, %r15780, %r15794, %r4352;
	// end inline asm
	shl.b32 	%r15808, %r15801, 4;
	// begin inline asm
	lop3.b32 %r15805, %r4358, %r15797, %r15808, 202;
	// end inline asm
	xor.b32  	%r16128, %r15805, -2004318072;
	// begin inline asm
	mov.b32 %r15812, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15811, %r15812, %r15810;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15814, %r15549, %r15811;
	// end inline asm
	// begin inline asm
	mov.b32 %r15817, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15812, %r15817;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15821, %r15557, %r15818;
	// end inline asm
	// begin inline asm
	mov.b32 %r15824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15812, %r15824;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15828, %r15565, %r15825;
	// end inline asm
	// begin inline asm
	mov.b32 %r15831, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15832, %r15812, %r15831;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15835, %r15573, %r15832;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15838, %r15814, %r15828, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15842, %r15821, %r15835, %r4352;
	// end inline asm
	shl.b32 	%r15849, %r15842, 4;
	// begin inline asm
	lop3.b32 %r15846, %r4358, %r15838, %r15849, 202;
	// end inline asm
	xor.b32  	%r16129, %r15846, -2004318072;
	// begin inline asm
	mov.b32 %r15853, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15851, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15852, %r15853, %r15851;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15581, %r15852;
	// end inline asm
	// begin inline asm
	mov.b32 %r15858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15853, %r15858;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15862, %r15589, %r15859;
	// end inline asm
	// begin inline asm
	mov.b32 %r15865, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15853, %r15865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15869, %r15597, %r15866;
	// end inline asm
	// begin inline asm
	mov.b32 %r15872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15873, %r15853, %r15872;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15876, %r15605, %r15873;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15879, %r15855, %r15869, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15883, %r15862, %r15876, %r4352;
	// end inline asm
	shl.b32 	%r15890, %r15883, 4;
	// begin inline asm
	lop3.b32 %r15887, %r4358, %r15879, %r15890, 202;
	// end inline asm
	xor.b32  	%r16130, %r15887, -2004318072;
	// begin inline asm
	mov.b32 %r15894, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15893, %r15894, %r15892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15613, %r15893;
	// end inline asm
	// begin inline asm
	mov.b32 %r15899, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15894, %r15899;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15903, %r15621, %r15900;
	// end inline asm
	// begin inline asm
	mov.b32 %r15906, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15894, %r15906;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15910, %r15629, %r15907;
	// end inline asm
	// begin inline asm
	mov.b32 %r15913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15914, %r15894, %r15913;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15917, %r15637, %r15914;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15920, %r15896, %r15910, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15924, %r15903, %r15917, %r4352;
	// end inline asm
	shl.b32 	%r15931, %r15924, 4;
	// begin inline asm
	lop3.b32 %r15928, %r4358, %r15920, %r15931, 202;
	// end inline asm
	xor.b32  	%r16131, %r15928, -2004318072;
	// begin inline asm
	mov.b32 %r15935, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15933, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15934, %r15935, %r15933;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15645, %r15934;
	// end inline asm
	// begin inline asm
	mov.b32 %r15940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15935, %r15940;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15944, %r15653, %r15941;
	// end inline asm
	// begin inline asm
	mov.b32 %r15947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15935, %r15947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15951, %r15661, %r15948;
	// end inline asm
	// begin inline asm
	mov.b32 %r15954, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15955, %r15935, %r15954;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15958, %r15669, %r15955;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15961, %r15937, %r15951, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15965, %r15944, %r15958, %r4352;
	// end inline asm
	shl.b32 	%r15972, %r15965, 4;
	// begin inline asm
	lop3.b32 %r15969, %r4358, %r15961, %r15972, 202;
	// end inline asm
	xor.b32  	%r16132, %r15969, -2004318072;
	// begin inline asm
	mov.b32 %r15976, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15974, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15975, %r15976, %r15974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15677, %r15975;
	// end inline asm
	// begin inline asm
	mov.b32 %r15981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15976, %r15981;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15985, %r15685, %r15982;
	// end inline asm
	// begin inline asm
	mov.b32 %r15988, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15976, %r15988;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15992, %r15693, %r15989;
	// end inline asm
	// begin inline asm
	mov.b32 %r15995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15996, %r15976, %r15995;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15999, %r15701, %r15996;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16002, %r15978, %r15992, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16006, %r15985, %r15999, %r4352;
	// end inline asm
	shl.b32 	%r16013, %r16006, 4;
	// begin inline asm
	lop3.b32 %r16010, %r4358, %r16002, %r16013, 202;
	// end inline asm
	xor.b32  	%r16133, %r16010, -2004318072;
	// begin inline asm
	mov.b32 %r16017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16016, %r16017, %r16015;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r15709, %r16016;
	// end inline asm
	// begin inline asm
	mov.b32 %r16022, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r16017, %r16022;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16026, %r15717, %r16023;
	// end inline asm
	// begin inline asm
	mov.b32 %r16029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r16017, %r16029;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16033, %r15725, %r16030;
	// end inline asm
	// begin inline asm
	mov.b32 %r16036, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16037, %r16017, %r16036;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16040, %r15733, %r16037;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16043, %r16019, %r16033, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16047, %r16026, %r16040, %r4352;
	// end inline asm
	shl.b32 	%r16054, %r16047, 4;
	// begin inline asm
	lop3.b32 %r16051, %r4358, %r16043, %r16054, 202;
	// end inline asm
	xor.b32  	%r16134, %r16051, -2004318072;
	// begin inline asm
	mov.b32 %r16058, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16057, %r16058, %r16056;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16060, %r15741, %r16057;
	// end inline asm
	// begin inline asm
	mov.b32 %r16063, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16064, %r16058, %r16063;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16067, %r15749, %r16064;
	// end inline asm
	// begin inline asm
	mov.b32 %r16070, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16071, %r16058, %r16070;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16074, %r15757, %r16071;
	// end inline asm
	// begin inline asm
	mov.b32 %r16077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16078, %r16058, %r16077;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16081, %r15765, %r16078;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16084, %r16060, %r16074, %r4352;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16088, %r16067, %r16081, %r4352;
	// end inline asm
	shl.b32 	%r16095, %r16088, 4;
	// begin inline asm
	lop3.b32 %r16092, %r4358, %r16084, %r16095, 202;
	// end inline asm
	xor.b32  	%r16135, %r16092, -2004318072;
	st.shared.u32 	[%rd93], %r16128;
	st.shared.u32 	[%rd94], %r16129;
	st.shared.u32 	[%rd95], %r16130;
	st.shared.u32 	[%rd96], %r16131;
	st.shared.u32 	[%rd97], %r16132;
	st.shared.u32 	[%rd98], %r16133;
	st.shared.u32 	[%rd99], %r16134;
	st.shared.u32 	[%rd100], %r16135;
	add.s32 	%r16232, %r16232, -128;
	add.s64 	%rd126, %rd126, 16644;
	setp.eq.s32 	%p319, %r16232, 0;
	@%p319 bra 	LBB0_184;
	bra.uni 	LBB0_183;
LBB0_184:                               // %guard_pass23015
                                        //   in Loop: Header=BB0_182 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16141, [%rd13];
	ld.shared.u32 	%r16142, [%rd14+128];
	ld.shared.u32 	%r16149, [%rd14+4];
	ld.shared.u32 	%r16150, [%rd14+132];
	ld.shared.u32 	%r16157, [%rd15];
	ld.shared.u32 	%r16158, [%rd16+128];
	ld.shared.u32 	%r16165, [%rd16+4];
	ld.shared.u32 	%r16166, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16136, %r16141, %r16142, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16140, %r16141, %r16142, %r790;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16144, %r16149, %r16150, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16148, %r16149, %r16150, %r790;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16152, %r16157, %r16158, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16156, %r16157, %r16158, %r790;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16160, %r16165, %r16166, %r786;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16164, %r16165, %r16166, %r790;
	// end inline asm
	selp.b32 	%r16168, %r16140, %r16136, %p312;
	shfl.sync.bfly.b32	%r235, %r16168, 8, 31, -1;
	selp.b32 	%r16169, %r16148, %r16144, %p312;
	shfl.sync.bfly.b32	%r236, %r16169, 8, 31, -1;
	selp.b32 	%r16170, %r16156, %r16152, %p312;
	shfl.sync.bfly.b32	%r237, %r16170, 8, 31, -1;
	selp.b32 	%r16171, %r16164, %r16160, %p312;
	shfl.sync.bfly.b32	%r238, %r16171, 8, 31, -1;
	setp.lt.u32 	%p321, %r16207, 384;
	@%p321 bra 	LBB0_186;
// %bb.185:                             // %L63362
                                        //   in Loop: Header=BB0_182 Depth=1
	selp.b32 	%r16172, %r238, %r16164, %p312;
	selp.b32 	%r16173, %r16160, %r238, %p312;
	selp.b32 	%r16174, %r237, %r16156, %p312;
	selp.b32 	%r16175, %r16152, %r237, %p312;
	selp.b32 	%r16176, %r236, %r16148, %p312;
	selp.b32 	%r16177, %r16144, %r236, %p312;
	selp.b32 	%r16178, %r235, %r16140, %p312;
	selp.b32 	%r16179, %r16136, %r235, %p312;
	shl.b32 	%r16180, %r16207, 12;
	or.b32  	%r16181, %r149, %r16180;
	cvt.u64.u32 	%rd101, %r16181;
	add.s64 	%rd102, %rd101, %rd17;
	shr.u64 	%rd103, %rd102, 35;
	add.s64 	%rd104, %rd102, %rd103;
	shr.s64 	%rd105, %rd104, 29;
	setp.lt.s64 	%p323, %rd102, 0;
	and.b64  	%rd106, %rd104, -536870912;
	setp.ne.s64 	%p324, %rd106, %rd102;
	and.pred  	%p325, %p323, %p324;
	selp.u64 	%rd107, 1, 0, %p325;
	sub.s64 	%rd108, %rd107, %rd105;
	shl.b64 	%rd109, %rd108, 29;
	add.s64 	%rd110, %rd109, %rd102;
	shl.b64 	%rd111, %rd110, 2;
	add.s64 	%rd112, %rd3, %rd111;
	st.global.v4.u32 	[%rd112], {%r16179, %r16177, %r16178, %r16176};
	add.s32 	%r16182, %r150, %r16180;
	cvt.s64.s32 	%rd113, %r16182;
	add.s64 	%rd114, %rd113, %rd17;
	shr.u64 	%rd115, %rd114, 35;
	add.s64 	%rd116, %rd114, %rd115;
	shr.u64 	%rd117, %rd116, 29;
	shr.u64 	%rd118, %rd114, 63;
	sub.s64 	%rd119, %rd118, %rd117;
	shl.b64 	%rd120, %rd119, 29;
	add.s64 	%rd121, %rd120, %rd114;
	shl.b64 	%rd122, %rd121, 2;
	add.s64 	%rd123, %rd3, %rd122;
	st.global.v4.u32 	[%rd123], {%r16175, %r16173, %r16174, %r16172};
	bra.uni 	LBB0_186;
LBB0_187:                               // %L63827
	st.global.u32 	[%rd4], %r16186;
	ret;
LBB0_7:                                 // %L262
	mov.u32 	%r16185, 2;
	st.global.u32 	[%rd4], %r16185;
	mov.u64 	%rd124, exception5102;
	cvta.global.u64 	%rd125, %rd124;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd125;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r239;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
LBB0_1:                                 // %L8
	mov.u64 	%rd57, exception1;
	cvta.global.u64 	%rd58, %rd57;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd58;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd36;
	st.param.b32 	[param0+8], %r239;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
