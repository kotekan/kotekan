// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 7.1
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5093[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<309>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16218>;
	.reg .f32 	%f<1404>;
	.reg .b64 	%rd<95>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r235, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd35, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r236, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r236, 66815;
	@%p1 bra 	LBB0_2;
	bra.uni 	LBB0_1;
LBB0_2:                                 // %L10
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.y;
	shl.b32 	%r2, %r1, 5;
	mov.u32 	%r3, %ctaid.x;
	shl.b32 	%r237, %r3, 9;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r238, %r237, %r4;
	or.b32  	%r239, %r238, %r2;
	mul.wide.u32 	%rd46, %r239, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r240, 1;
	st.global.u32 	[%rd4], %r240;
	ld.global.u32 	%r5, [%rd36];
	setp.lt.u32 	%p2, %r5, 65537;
	and.b32  	%r241, %r5, 255;
	setp.eq.s32 	%p3, %r241, 0;
	and.pred  	%p4, %p2, %p3;
	@%p4 bra 	LBB0_4;
	bra.uni 	LBB0_3;
LBB0_4:                                 // %L242
	bfe.u32 	%r13, %r4, 1, 1;
	and.b32  	%r14, %r4, 1;
	bfe.u32 	%r16, %r4, 2, 1;
	shr.u32 	%r17, %r4, 4;
	shl.b32 	%r250, %r17, 2;
	shl.b32 	%r251, %r16, 3;
	shl.b32 	%r252, %r14, 4;
	shl.b32 	%r253, %r13, 5;
	or.b32  	%r254, %r252, %r253;
	or.b32  	%r255, %r251, %r254;
	or.b32  	%r256, %r250, %r255;
	bfe.u32 	%r19, %r4, 3, 1;
	shl.b32 	%r257, %r19, 1;
	or.b32  	%r20, %r257, %r256;
	or.b32  	%r21, %r20, 64;
	mov.f32 	%f255, 0f40000000;
	mov.f32 	%f256, 0f43FF8000;
	div.approx.f32 	%f1, %f256, %f255;
	cvt.rn.f32.s32 	%f257, %r20;
	sub.f32 	%f258, %f257, %f1;
	mov.f32 	%f287, 0f43000000;
	div.approx.f32 	%f3, %f258, %f287;
	setp.eq.f32 	%p10, %f3, 0f00000000;
	mov.f32 	%f1363, 0f3F800000;
	mov.f32 	%f1348, %f1363;
	@%p10 bra 	LBB0_6;
// %bb.5:                               // %L592
	sin.approx.f32 	%f288, %f3;
	div.approx.f32 	%f1348, %f288, %f3;
LBB0_6:                                 // %L595
	cvt.rn.f32.s32 	%f291, %r21;
	sub.f32 	%f292, %f291, %f1;
	div.approx.f32 	%f8, %f292, %f287;
	setp.eq.f32 	%p16, %f8, 0f00000000;
	mov.f32 	%f1349, %f1363;
	@%p16 bra 	LBB0_8;
// %bb.7:                               // %L612
	sin.approx.f32 	%f322, %f8;
	div.approx.f32 	%f1349, %f322, %f8;
LBB0_8:                                 // %L615
	or.b32  	%r275, %r20, 1;
	or.b32  	%r23, %r20, 65;
	cvt.rn.f32.s32 	%f326, %r275;
	sub.f32 	%f327, %f326, %f1;
	div.approx.f32 	%f12, %f327, %f287;
	setp.eq.f32 	%p22, %f12, 0f00000000;
	mov.f32 	%f1350, %f1363;
	@%p22 bra 	LBB0_10;
// %bb.9:                               // %L694
	sin.approx.f32 	%f357, %f12;
	div.approx.f32 	%f1350, %f357, %f12;
LBB0_10:                                // %L697
	cvt.rn.f32.s32 	%f360, %r23;
	sub.f32 	%f361, %f360, %f1;
	div.approx.f32 	%f17, %f361, %f287;
	setp.eq.f32 	%p28, %f17, 0f00000000;
	mov.f32 	%f1351, %f1363;
	@%p28 bra 	LBB0_12;
// %bb.11:                              // %L714
	sin.approx.f32 	%f391, %f17;
	div.approx.f32 	%f1351, %f391, %f17;
LBB0_12:                                // %L717
	or.b32  	%r293, %r20, 128;
	or.b32  	%r25, %r20, 192;
	cvt.rn.f32.s32 	%f395, %r293;
	sub.f32 	%f396, %f395, %f1;
	div.approx.f32 	%f21, %f396, %f287;
	setp.eq.f32 	%p34, %f21, 0f00000000;
	mov.f32 	%f1352, %f1363;
	@%p34 bra 	LBB0_14;
// %bb.13:                              // %L796
	sin.approx.f32 	%f426, %f21;
	div.approx.f32 	%f1352, %f426, %f21;
LBB0_14:                                // %L799
	cvt.rn.f32.s32 	%f429, %r25;
	sub.f32 	%f430, %f429, %f1;
	div.approx.f32 	%f26, %f430, %f287;
	setp.eq.f32 	%p40, %f26, 0f00000000;
	mov.f32 	%f1353, %f1363;
	@%p40 bra 	LBB0_16;
// %bb.15:                              // %L816
	sin.approx.f32 	%f460, %f26;
	div.approx.f32 	%f1353, %f460, %f26;
LBB0_16:                                // %L819
	or.b32  	%r311, %r20, 129;
	or.b32  	%r27, %r20, 193;
	cvt.rn.f32.s32 	%f464, %r311;
	sub.f32 	%f465, %f464, %f1;
	div.approx.f32 	%f30, %f465, %f287;
	setp.eq.f32 	%p46, %f30, 0f00000000;
	mov.f32 	%f1354, %f1363;
	@%p46 bra 	LBB0_18;
// %bb.17:                              // %L898
	sin.approx.f32 	%f495, %f30;
	div.approx.f32 	%f1354, %f495, %f30;
LBB0_18:                                // %L901
	cvt.rn.f32.s32 	%f498, %r27;
	sub.f32 	%f499, %f498, %f1;
	div.approx.f32 	%f35, %f499, %f287;
	setp.eq.f32 	%p52, %f35, 0f00000000;
	mov.f32 	%f1355, %f1363;
	@%p52 bra 	LBB0_20;
// %bb.19:                              // %L918
	sin.approx.f32 	%f529, %f35;
	div.approx.f32 	%f1355, %f529, %f35;
LBB0_20:                                // %L921
	or.b32  	%r329, %r20, 256;
	or.b32  	%r29, %r20, 320;
	cvt.rn.f32.s32 	%f533, %r329;
	sub.f32 	%f534, %f533, %f1;
	div.approx.f32 	%f39, %f534, %f287;
	setp.eq.f32 	%p58, %f39, 0f00000000;
	mov.f32 	%f1356, %f1363;
	@%p58 bra 	LBB0_22;
// %bb.21:                              // %L1000
	sin.approx.f32 	%f564, %f39;
	div.approx.f32 	%f1356, %f564, %f39;
LBB0_22:                                // %L1003
	mov.f32 	%f259, 0f44004000;
	cvt.rn.f32.s32 	%f567, %r29;
	sub.f32 	%f568, %f567, %f1;
	div.approx.f32 	%f44, %f568, %f287;
	setp.eq.f32 	%p64, %f44, 0f00000000;
	mov.f32 	%f1357, %f1363;
	@%p64 bra 	LBB0_24;
// %bb.23:                              // %L1020
	sin.approx.f32 	%f598, %f44;
	div.approx.f32 	%f1357, %f598, %f44;
LBB0_24:                                // %L1023
	div.approx.f32 	%f260, %f258, %f259;
	div.approx.f32 	%f294, %f292, %f259;
	div.approx.f32 	%f329, %f327, %f259;
	div.approx.f32 	%f363, %f361, %f259;
	div.approx.f32 	%f398, %f396, %f259;
	div.approx.f32 	%f432, %f430, %f259;
	div.approx.f32 	%f467, %f465, %f259;
	div.approx.f32 	%f501, %f499, %f259;
	div.approx.f32 	%f536, %f534, %f259;
	div.approx.f32 	%f570, %f568, %f259;
	or.b32  	%r347, %r20, 257;
	or.b32  	%r31, %r20, 321;
	cvt.rn.f32.s32 	%f602, %r347;
	sub.f32 	%f603, %f602, %f1;
	div.approx.f32 	%f605, %f603, %f259;
	div.approx.f32 	%f48, %f603, %f287;
	setp.eq.f32 	%p70, %f48, 0f00000000;
	mov.f32 	%f1358, %f1363;
	@%p70 bra 	LBB0_26;
// %bb.25:                              // %L1102
	sin.approx.f32 	%f633, %f48;
	div.approx.f32 	%f1358, %f633, %f48;
LBB0_26:                                // %L1105
	abs.f32 	%f261, %f260;
	abs.f32 	%f295, %f294;
	abs.f32 	%f330, %f329;
	abs.f32 	%f364, %f363;
	abs.f32 	%f399, %f398;
	abs.f32 	%f433, %f432;
	abs.f32 	%f468, %f467;
	abs.f32 	%f502, %f501;
	abs.f32 	%f537, %f536;
	abs.f32 	%f571, %f570;
	abs.f32 	%f606, %f605;
	cvt.rn.f32.s32 	%f636, %r31;
	sub.f32 	%f637, %f636, %f1;
	div.approx.f32 	%f639, %f637, %f259;
	abs.f32 	%f640, %f639;
	div.approx.f32 	%f53, %f637, %f287;
	setp.eq.f32 	%p76, %f53, 0f00000000;
	mov.f32 	%f1359, %f1363;
	@%p76 bra 	LBB0_28;
// %bb.27:                              // %L1122
	sin.approx.f32 	%f667, %f53;
	div.approx.f32 	%f1359, %f667, %f53;
LBB0_28:                                // %L1125
	setp.gt.f32 	%p5, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p11, %f295, 0f4B800000;
	mul.f32 	%f296, %f294, 0f00000000;
	setp.gt.f32 	%p17, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p23, %f364, 0f4B800000;
	mul.f32 	%f365, %f363, 0f00000000;
	setp.gt.f32 	%p29, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p35, %f433, 0f4B800000;
	mul.f32 	%f434, %f432, 0f00000000;
	setp.gt.f32 	%p41, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	setp.gt.f32 	%p47, %f502, 0f4B800000;
	mul.f32 	%f503, %f501, 0f00000000;
	setp.gt.f32 	%p53, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	setp.gt.f32 	%p59, %f571, 0f4B800000;
	mul.f32 	%f572, %f570, 0f00000000;
	setp.gt.f32 	%p65, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	setp.gt.f32 	%p71, %f640, 0f4B800000;
	mul.f32 	%f641, %f639, 0f00000000;
	or.b32  	%r365, %r20, 384;
	or.b32  	%r33, %r20, 448;
	cvt.rn.f32.s32 	%f671, %r365;
	sub.f32 	%f672, %f671, %f1;
	div.approx.f32 	%f674, %f672, %f259;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p77, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	div.approx.f32 	%f57, %f672, %f287;
	setp.eq.f32 	%p82, %f57, 0f00000000;
	mov.f32 	%f1360, %f1363;
	@%p82 bra 	LBB0_30;
// %bb.29:                              // %L1204
	sin.approx.f32 	%f702, %f57;
	div.approx.f32 	%f1360, %f702, %f57;
LBB0_30:                                // %L1207
	selp.f32 	%f263, %f262, %f260, %p5;
	selp.f32 	%f297, %f296, %f294, %p11;
	selp.f32 	%f332, %f331, %f329, %p17;
	selp.f32 	%f366, %f365, %f363, %p23;
	selp.f32 	%f401, %f400, %f398, %p29;
	selp.f32 	%f435, %f434, %f432, %p35;
	selp.f32 	%f470, %f469, %f467, %p41;
	selp.f32 	%f504, %f503, %f501, %p47;
	selp.f32 	%f539, %f538, %f536, %p53;
	selp.f32 	%f573, %f572, %f570, %p59;
	selp.f32 	%f608, %f607, %f605, %p65;
	selp.f32 	%f642, %f641, %f639, %p71;
	selp.f32 	%f677, %f676, %f674, %p77;
	cvt.rn.f32.s32 	%f705, %r33;
	sub.f32 	%f706, %f705, %f1;
	div.approx.f32 	%f708, %f706, %f259;
	abs.f32 	%f709, %f708;
	setp.gt.f32 	%p83, %f709, 0f4B800000;
	mul.f32 	%f710, %f708, 0f00000000;
	selp.f32 	%f711, %f710, %f708, %p83;
	div.approx.f32 	%f62, %f706, %f287;
	setp.eq.f32 	%p88, %f62, 0f00000000;
	mov.f32 	%f1361, %f1363;
	@%p88 bra 	LBB0_32;
// %bb.31:                              // %L1224
	sin.approx.f32 	%f736, %f62;
	div.approx.f32 	%f1361, %f736, %f62;
LBB0_32:                                // %L1227
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f298, %f297, %f297;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f367, %f366, %f366;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f436, %f435, %f435;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f505, %f504, %f504;
	add.f32 	%f540, %f539, %f539;
	add.f32 	%f574, %f573, %f573;
	add.f32 	%f609, %f608, %f608;
	add.f32 	%f643, %f642, %f642;
	add.f32 	%f678, %f677, %f677;
	add.f32 	%f712, %f711, %f711;
	or.b32  	%r383, %r20, 385;
	or.b32  	%r35, %r20, 449;
	cvt.rn.f32.s32 	%f740, %r383;
	sub.f32 	%f741, %f740, %f1;
	div.approx.f32 	%f743, %f741, %f259;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p89, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p89;
	add.f32 	%f747, %f746, %f746;
	div.approx.f32 	%f66, %f741, %f287;
	setp.eq.f32 	%p94, %f66, 0f00000000;
	mov.f32 	%f1362, %f1363;
	@%p94 bra 	LBB0_34;
// %bb.33:                              // %L1306
	sin.approx.f32 	%f771, %f66;
	div.approx.f32 	%f1362, %f771, %f66;
LBB0_34:                                // %L1309
	mov.b32 	%r258, %f264;
	mov.b32 	%r265, %f298;
	mov.b32 	%r276, %f333;
	mov.b32 	%r283, %f367;
	mov.b32 	%r294, %f402;
	mov.b32 	%r301, %f436;
	mov.b32 	%r312, %f471;
	mov.b32 	%r319, %f505;
	mov.b32 	%r330, %f540;
	mov.b32 	%r337, %f574;
	mov.b32 	%r348, %f609;
	mov.b32 	%r355, %f643;
	mov.b32 	%r366, %f678;
	mov.b32 	%r373, %f712;
	mov.b32 	%r384, %f747;
	cvt.rn.f32.s32 	%f774, %r35;
	sub.f32 	%f775, %f774, %f1;
	div.approx.f32 	%f777, %f775, %f259;
	abs.f32 	%f778, %f777;
	setp.gt.f32 	%p95, %f778, 0f4B800000;
	mul.f32 	%f779, %f777, 0f00000000;
	selp.f32 	%f780, %f779, %f777, %p95;
	add.f32 	%f781, %f780, %f780;
	mov.b32 	%r391, %f781;
	div.approx.f32 	%f71, %f775, %f287;
	setp.eq.f32 	%p100, %f71, 0f00000000;
	@%p100 bra 	LBB0_36;
// %bb.35:                              // %L1326
	sin.approx.f32 	%f805, %f71;
	div.approx.f32 	%f1363, %f805, %f71;
LBB0_36:                                // %L1329
	and.b32  	%r259, %r258, -2147483648;
	and.b32  	%r266, %r265, -2147483648;
	and.b32  	%r277, %r276, -2147483648;
	and.b32  	%r284, %r283, -2147483648;
	and.b32  	%r295, %r294, -2147483648;
	and.b32  	%r302, %r301, -2147483648;
	and.b32  	%r313, %r312, -2147483648;
	and.b32  	%r320, %r319, -2147483648;
	and.b32  	%r331, %r330, -2147483648;
	and.b32  	%r338, %r337, -2147483648;
	and.b32  	%r349, %r348, -2147483648;
	and.b32  	%r356, %r355, -2147483648;
	and.b32  	%r367, %r366, -2147483648;
	and.b32  	%r374, %r373, -2147483648;
	and.b32  	%r385, %r384, -2147483648;
	and.b32  	%r392, %r391, -2147483648;
	mul.lo.s32 	%r37, %r20, 127;
	cvt.rn.f32.s32 	%f808, %r37;
	div.approx.f32 	%f74, %f808, %f287;
	abs.f32 	%f1366, %f74;
	setp.lt.f32 	%p101, %f1366, 0f40000000;
	@%p101 bra 	LBB0_48;
// %bb.37:
	setp.gtu.f32 	%p102, %f1366, 0f4B800000;
	@%p102 bra 	LBB0_44;
	bra.uni 	LBB0_38;
LBB0_44:
	mov.b32 	%r39, %f1366;
	and.b32  	%r401, %r39, 8388607;
	or.b32  	%r16148, %r401, 1065353216;
	mov.b32 	%f1365, %r16148;
	add.s32 	%r402, %r39, -1073741824;
	and.b32  	%r16149, %r402, -8388608;
	setp.eq.s32 	%p108, %r16149, 0;
	@%p108 bra 	LBB0_47;
// %bb.45:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f819, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f818,%f819;
	// end inline asm
LBB0_46:                                // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r403, %r16149, 192937984;
	add.s32 	%r404, %r403, %r16148;
	mov.b32 	%f820, %r404;
	mul.f32 	%f821, %f818, %f820;
	sub.f32 	%f822, %f820, %f821;
	fma.rn.f32 	%f823, %f822, %f818, %f821;
	sub.f32 	%f824, %f820, %f823;
	fma.rz.f32 	%f825, %f824, %f818, %f823;
	cvt.rzi.f32.f32 	%f826, %f825;
	sub.f32 	%f1365, %f820, %f826;
	sub.s32 	%r16149, %r16149, %r403;
	mov.b32 	%r16148, %f1365;
	setp.ne.s32 	%p109, %r16149, 0;
	setp.ne.s32 	%p110, %r16148, 0;
	and.pred  	%p111, %p109, %p110;
	@%p111 bra 	LBB0_46;
LBB0_47:                                // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p112, %r39, 2139095039;
	selp.f32 	%f827, 0f7FFFFFFF, 0f4B800000, %p112;
	mul.f32 	%f828, %f1365, 0f34000000;
	mul.f32 	%f1366, %f827, %f828;
	bra.uni 	LBB0_48;
LBB0_38:                                // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f811, %f1366, %f255;
	cvt.rzi.f32.f32 	%f1364, %f811;
	fma.rn.f32 	%f77, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r38, %f77;
	setp.lt.u32 	%p103, %r38, 1073741824;
	@%p103 bra 	LBB0_43;
// %bb.39:
	setp.lt.u32 	%p104, %r38, -2147483647;
	@%p104 bra 	LBB0_41;
// %bb.40:
	add.f32 	%f816, %f1364, 0fBF800000;
	setp.lt.f32 	%p107, %f77, 0fC0000000;
	add.f32 	%f817, %f816, 0fBF800000;
	selp.f32 	%f1364, %f817, %f816, %p107;
	bra.uni 	LBB0_43;
LBB0_41:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p105, %f77, 0f40800000;
	@%p105 bra 	LBB0_43;
// %bb.42:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f812, %f1364, 0f3F800000;
	fma.rn.f32 	%f814, %f255, 0fC0400000, %f77;
	setp.ge.f32 	%p106, %f814, 0f00000000;
	add.f32 	%f815, %f812, 0f3F800000;
	selp.f32 	%f1364, %f815, %f812, %p106;
LBB0_43:                                // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
LBB0_48:                                // %__internal_fmodf_kernel.exit.i
	or.b32  	%r260, %r259, 1056964608;
	or.b32  	%r267, %r266, 1056964608;
	or.b32  	%r278, %r277, 1056964608;
	or.b32  	%r285, %r284, 1056964608;
	or.b32  	%r296, %r295, 1056964608;
	or.b32  	%r303, %r302, 1056964608;
	or.b32  	%r314, %r313, 1056964608;
	or.b32  	%r321, %r320, 1056964608;
	or.b32  	%r332, %r331, 1056964608;
	or.b32  	%r339, %r338, 1056964608;
	or.b32  	%r350, %r349, 1056964608;
	or.b32  	%r357, %r356, 1056964608;
	or.b32  	%r368, %r367, 1056964608;
	or.b32  	%r375, %r374, 1056964608;
	or.b32  	%r386, %r385, 1056964608;
	or.b32  	%r393, %r392, 1056964608;
	abs.f32 	%f829, %f1366;
	setp.gtu.f32 	%p113, %f829, 0f7F800000;
	@%p113 bra 	LBB0_50;
// %bb.49:
	mov.b32 	%r405, %f74;
	and.b32  	%r406, %r405, -2147483648;
	mov.b32 	%r407, %f1366;
	or.b32  	%r408, %r406, %r407;
	mov.b32 	%f1366, %r408;
LBB0_50:                                // %__nv_fmodf.exit
	mov.b32 	%f265, %r260;
	mov.b32 	%f299, %r267;
	mov.b32 	%f334, %r278;
	mov.b32 	%f368, %r285;
	mov.b32 	%f403, %r296;
	mov.b32 	%f437, %r303;
	mov.b32 	%f472, %r314;
	mov.b32 	%f506, %r321;
	mov.b32 	%f541, %r332;
	mov.b32 	%f575, %r339;
	mov.b32 	%f610, %r350;
	mov.b32 	%f644, %r357;
	mov.b32 	%f679, %r368;
	mov.b32 	%f713, %r375;
	mov.b32 	%f748, %r386;
	mov.b32 	%f782, %r393;
	add.f32 	%f830, %f1366, %f1366;
	mov.b32 	%r409, %f830;
	and.b32  	%r410, %r409, -2147483648;
	or.b32  	%r411, %r410, 1056964608;
	mov.b32 	%f831, %r411;
	add.f32 	%f832, %f830, %f831;
	cvt.rzi.f32.f32 	%f833, %f832;
	abs.f32 	%f834, %f830;
	setp.gt.f32 	%p114, %f834, 0f4B000000;
	selp.f32 	%f835, %f830, %f833, %p114;
	cvt.rzi.f32.f32 	%f836, %f830;
	setp.lt.f32 	%p115, %f834, 0f3F000000;
	add.s32 	%r417, %r37, 8128;
	cvt.rn.f32.s32 	%f861, %r417;
	div.approx.f32 	%f93, %f861, %f287;
	abs.f32 	%f1370, %f93;
	setp.lt.f32 	%p121, %f1370, 0f40000000;
	@%p121 bra 	LBB0_62;
// %bb.51:
	setp.gtu.f32 	%p122, %f1370, 0f4B800000;
	@%p122 bra 	LBB0_58;
	bra.uni 	LBB0_52;
LBB0_58:
	mov.b32 	%r47, %f1370;
	and.b32  	%r418, %r47, 8388607;
	or.b32  	%r16150, %r418, 1065353216;
	mov.b32 	%f1369, %r16150;
	add.s32 	%r419, %r47, -1073741824;
	and.b32  	%r16151, %r419, -8388608;
	setp.eq.s32 	%p128, %r16151, 0;
	@%p128 bra 	LBB0_61;
// %bb.59:                              // %__nv_fmaf_rn.exit4.i.i.i2229.preheader
	mov.f32 	%f872, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f871,%f872;
	// end inline asm
LBB0_60:                                // %__nv_fmaf_rn.exit4.i.i.i2229
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r420, %r16151, 192937984;
	add.s32 	%r421, %r420, %r16150;
	mov.b32 	%f873, %r421;
	mul.f32 	%f874, %f871, %f873;
	sub.f32 	%f875, %f873, %f874;
	fma.rn.f32 	%f876, %f875, %f871, %f874;
	sub.f32 	%f877, %f873, %f876;
	fma.rz.f32 	%f878, %f877, %f871, %f876;
	cvt.rzi.f32.f32 	%f879, %f878;
	sub.f32 	%f1369, %f873, %f879;
	sub.s32 	%r16151, %r16151, %r420;
	mov.b32 	%r16150, %f1369;
	setp.ne.s32 	%p129, %r16151, 0;
	setp.ne.s32 	%p130, %r16150, 0;
	and.pred  	%p131, %p129, %p130;
	@%p131 bra 	LBB0_60;
LBB0_61:                                // %__internal_fmodf_slowpath_mod.exit.i.i2231
	setp.gt.u32 	%p132, %r47, 2139095039;
	selp.f32 	%f880, 0f7FFFFFFF, 0f4B800000, %p132;
	mul.f32 	%f881, %f1369, 0f34000000;
	mul.f32 	%f1370, %f880, %f881;
	bra.uni 	LBB0_62;
LBB0_52:                                // %__nv_fast_fdividef.exit.i.i.i2201
	div.approx.f32 	%f864, %f1370, %f255;
	cvt.rzi.f32.f32 	%f1368, %f864;
	fma.rn.f32 	%f96, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r46, %f96;
	setp.lt.u32 	%p123, %r46, 1073741824;
	@%p123 bra 	LBB0_57;
// %bb.53:
	setp.lt.u32 	%p124, %r46, -2147483647;
	@%p124 bra 	LBB0_55;
// %bb.54:
	add.f32 	%f869, %f1368, 0fBF800000;
	setp.lt.f32 	%p127, %f96, 0fC0000000;
	add.f32 	%f870, %f869, 0fBF800000;
	selp.f32 	%f1368, %f870, %f869, %p127;
	bra.uni 	LBB0_57;
LBB0_55:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p125, %f96, 0f40800000;
	@%p125 bra 	LBB0_57;
// %bb.56:                              // %__nv_fmaf_rn.exit.i.i.i2206
	add.f32 	%f865, %f1368, 0f3F800000;
	fma.rn.f32 	%f867, %f255, 0fC0400000, %f96;
	setp.ge.f32 	%p126, %f867, 0f00000000;
	add.f32 	%f868, %f865, 0f3F800000;
	selp.f32 	%f1368, %f868, %f865, %p126;
LBB0_57:                                // %__internal_fmodf_fastpath_quot.exit.i.i2210
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
LBB0_62:                                // %__internal_fmodf_kernel.exit.i2235
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f300, %f298, %f299;
	abs.f32 	%f302, %f298;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f369, %f367, %f368;
	abs.f32 	%f371, %f367;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f438, %f436, %f437;
	abs.f32 	%f440, %f436;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f507, %f505, %f506;
	abs.f32 	%f509, %f505;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f576, %f574, %f575;
	abs.f32 	%f578, %f574;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f645, %f643, %f644;
	abs.f32 	%f647, %f643;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f714, %f712, %f713;
	abs.f32 	%f716, %f712;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	add.f32 	%f783, %f781, %f782;
	abs.f32 	%f785, %f781;
	selp.f32 	%f837, %f836, %f835, %p115;
	shr.u32 	%r15, %r4, 2;
	abs.f32 	%f882, %f1370;
	setp.gtu.f32 	%p133, %f882, 0f7F800000;
	@%p133 bra 	LBB0_64;
// %bb.63:
	mov.b32 	%r422, %f93;
	and.b32  	%r423, %r422, -2147483648;
	mov.b32 	%r424, %f1370;
	or.b32  	%r425, %r423, %r424;
	mov.b32 	%f1370, %r425;
LBB0_64:                                // %__nv_fmodf.exit2236
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p6, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f301, %f300;
	setp.gt.f32 	%p12, %f302, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p18, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f370, %f369;
	setp.gt.f32 	%p24, %f371, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p30, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f439, %f438;
	setp.gt.f32 	%p36, %f440, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p42, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f508, %f507;
	setp.gt.f32 	%p48, %f509, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p54, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f577, %f576;
	setp.gt.f32 	%p60, %f578, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p66, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f646, %f645;
	setp.gt.f32 	%p72, %f647, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p78, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f715, %f714;
	setp.gt.f32 	%p84, %f716, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p90, %f751, 0f4B000000;
	cvt.rzi.f32.f32 	%f784, %f783;
	setp.gt.f32 	%p96, %f785, 0f4B000000;
	fma.rn.f32 	%f838, %f837, 0fBF000000, %f1366;
	add.f32 	%f883, %f1370, %f1370;
	mov.b32 	%r438, %f883;
	and.b32  	%r439, %r438, -2147483648;
	or.b32  	%r440, %r439, 1056964608;
	mov.b32 	%f884, %r440;
	add.f32 	%f885, %f883, %f884;
	cvt.rzi.f32.f32 	%f886, %f885;
	abs.f32 	%f887, %f883;
	setp.gt.f32 	%p134, %f887, 0f4B000000;
	selp.f32 	%f888, %f883, %f886, %p134;
	cvt.rzi.f32.f32 	%f889, %f883;
	setp.lt.f32 	%p135, %f887, 0f3F000000;
	selp.f32 	%f890, %f889, %f888, %p135;
	fma.rn.f32 	%f891, %f890, 0fBF000000, %f1370;
	and.b32  	%r446, %r4, 3;
	mul.lo.s32 	%r447, %r446, %r15;
	shl.b32 	%r448, %r447, 1;
	neg.s32 	%r58, %r448;
	cvt.rn.f32.s32 	%f916, %r58;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f110, %f916, %f917;
	abs.f32 	%f1374, %f110;
	setp.lt.f32 	%p141, %f1374, 0f40000000;
	@%p141 bra 	LBB0_76;
// %bb.65:
	setp.gtu.f32 	%p142, %f1374, 0f4B800000;
	@%p142 bra 	LBB0_72;
	bra.uni 	LBB0_66;
LBB0_72:
	mov.b32 	%r60, %f1374;
	and.b32  	%r449, %r60, 8388607;
	or.b32  	%r16152, %r449, 1065353216;
	mov.b32 	%f1373, %r16152;
	add.s32 	%r450, %r60, -1073741824;
	and.b32  	%r16153, %r450, -8388608;
	setp.eq.s32 	%p148, %r16153, 0;
	@%p148 bra 	LBB0_75;
// %bb.73:                              // %__nv_fmaf_rn.exit4.i.i.i2275.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
LBB0_74:                                // %__nv_fmaf_rn.exit4.i.i.i2275
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r451, %r16153, 192937984;
	add.s32 	%r452, %r451, %r16152;
	mov.b32 	%f928, %r452;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1373, %f928, %f934;
	sub.s32 	%r16153, %r16153, %r451;
	mov.b32 	%r16152, %f1373;
	setp.ne.s32 	%p149, %r16153, 0;
	setp.ne.s32 	%p150, %r16152, 0;
	and.pred  	%p151, %p149, %p150;
	@%p151 bra 	LBB0_74;
LBB0_75:                                // %__internal_fmodf_slowpath_mod.exit.i.i2277
	setp.gt.u32 	%p152, %r60, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p152;
	mul.f32 	%f936, %f1373, 0f34000000;
	mul.f32 	%f1374, %f935, %f936;
	bra.uni 	LBB0_76;
LBB0_66:                                // %__nv_fast_fdividef.exit.i.i.i2247
	div.approx.f32 	%f919, %f1374, %f255;
	cvt.rzi.f32.f32 	%f1372, %f919;
	fma.rn.f32 	%f113, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r59, %f113;
	setp.lt.u32 	%p143, %r59, 1073741824;
	@%p143 bra 	LBB0_71;
// %bb.67:
	setp.lt.u32 	%p144, %r59, -2147483647;
	@%p144 bra 	LBB0_69;
// %bb.68:
	add.f32 	%f924, %f1372, 0fBF800000;
	setp.lt.f32 	%p147, %f113, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1372, %f925, %f924, %p147;
	bra.uni 	LBB0_71;
LBB0_69:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p145, %f113, 0f40800000;
	@%p145 bra 	LBB0_71;
// %bb.70:                              // %__nv_fmaf_rn.exit.i.i.i2252
	add.f32 	%f920, %f1372, 0f3F800000;
	fma.rn.f32 	%f922, %f255, 0fC0400000, %f113;
	setp.ge.f32 	%p146, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1372, %f923, %f920, %p146;
LBB0_71:                                // %__internal_fmodf_fastpath_quot.exit.i.i2256
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
LBB0_76:                                // %__internal_fmodf_kernel.exit.i2281
	selp.f32 	%f269, %f264, %f267, %p6;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p7, %f268, 0f3F000000;
	selp.f32 	%f303, %f298, %f301, %p12;
	cvt.rzi.f32.f32 	%f304, %f298;
	setp.lt.f32 	%p13, %f302, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p18;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p19, %f337, 0f3F000000;
	selp.f32 	%f372, %f367, %f370, %p24;
	cvt.rzi.f32.f32 	%f373, %f367;
	setp.lt.f32 	%p25, %f371, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p30;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p31, %f406, 0f3F000000;
	selp.f32 	%f441, %f436, %f439, %p36;
	cvt.rzi.f32.f32 	%f442, %f436;
	setp.lt.f32 	%p37, %f440, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p42;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p43, %f475, 0f3F000000;
	selp.f32 	%f510, %f505, %f508, %p48;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p49, %f509, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p54;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p55, %f544, 0f3F000000;
	selp.f32 	%f579, %f574, %f577, %p60;
	cvt.rzi.f32.f32 	%f580, %f574;
	setp.lt.f32 	%p61, %f578, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p66;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p67, %f613, 0f3F000000;
	selp.f32 	%f648, %f643, %f646, %p72;
	cvt.rzi.f32.f32 	%f649, %f643;
	setp.lt.f32 	%p73, %f647, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p78;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p79, %f682, 0f3F000000;
	selp.f32 	%f717, %f712, %f715, %p84;
	cvt.rzi.f32.f32 	%f718, %f712;
	setp.lt.f32 	%p85, %f716, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p90;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p91, %f751, 0f3F000000;
	selp.f32 	%f786, %f781, %f784, %p96;
	cvt.rzi.f32.f32 	%f787, %f781;
	setp.lt.f32 	%p97, %f785, 0f3F000000;
	mul.f32 	%f839, %f838, 0f34222169;
	mul.f32 	%f892, %f891, 0f34222169;
	abs.f32 	%f937, %f1374;
	setp.gtu.f32 	%p153, %f937, 0f7F800000;
	@%p153 bra 	LBB0_78;
// %bb.77:
	mov.b32 	%r453, %f110;
	and.b32  	%r454, %r453, -2147483648;
	mov.b32 	%r455, %f1374;
	or.b32  	%r456, %r454, %r455;
	mov.b32 	%f1374, %r456;
LBB0_78:                                // %__nv_fmodf.exit2282
	selp.f32 	%f271, %f270, %f269, %p7;
	selp.f32 	%f305, %f304, %f303, %p13;
	selp.f32 	%f340, %f339, %f338, %p19;
	selp.f32 	%f374, %f373, %f372, %p25;
	selp.f32 	%f409, %f408, %f407, %p31;
	selp.f32 	%f443, %f442, %f441, %p37;
	selp.f32 	%f478, %f477, %f476, %p43;
	selp.f32 	%f512, %f511, %f510, %p49;
	selp.f32 	%f547, %f546, %f545, %p55;
	selp.f32 	%f581, %f580, %f579, %p61;
	selp.f32 	%f616, %f615, %f614, %p67;
	selp.f32 	%f650, %f649, %f648, %p73;
	selp.f32 	%f685, %f684, %f683, %p79;
	selp.f32 	%f719, %f718, %f717, %p85;
	selp.f32 	%f754, %f753, %f752, %p91;
	selp.f32 	%f788, %f787, %f786, %p97;
	fma.rn.f32 	%f840, %f838, 0f40490FDA, %f839;
	fma.rn.f32 	%f893, %f891, 0f40490FDA, %f892;
	add.f32 	%f938, %f1374, %f1374;
	mov.b32 	%r457, %f938;
	and.b32  	%r458, %r457, -2147483648;
	or.b32  	%r459, %r458, 1056964608;
	mov.b32 	%f939, %r459;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p154, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p154;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p155, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p155;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1374;
	mul.f32 	%f947, %f946, 0f34222169;
	fma.rn.f32 	%f948, %f946, 0f40490FDA, %f947;
	shl.b32 	%r67, %r15, 3;
	sub.s32 	%r465, %r58, %r67;
	cvt.rn.f32.s32 	%f969, %r465;
	div.approx.f32 	%f129, %f969, %f917;
	abs.f32 	%f1378, %f129;
	setp.lt.f32 	%p161, %f1378, 0f40000000;
	@%p161 bra 	LBB0_90;
// %bb.79:
	setp.gtu.f32 	%p162, %f1378, 0f4B800000;
	@%p162 bra 	LBB0_86;
	bra.uni 	LBB0_80;
LBB0_86:
	mov.b32 	%r69, %f1378;
	and.b32  	%r466, %r69, 8388607;
	or.b32  	%r16154, %r466, 1065353216;
	mov.b32 	%f1377, %r16154;
	add.s32 	%r467, %r69, -1073741824;
	and.b32  	%r16155, %r467, -8388608;
	setp.eq.s32 	%p168, %r16155, 0;
	@%p168 bra 	LBB0_89;
// %bb.87:                              // %__nv_fmaf_rn.exit4.i.i.i2321.preheader
	mov.f32 	%f980, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f979,%f980;
	// end inline asm
LBB0_88:                                // %__nv_fmaf_rn.exit4.i.i.i2321
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r468, %r16155, 192937984;
	add.s32 	%r469, %r468, %r16154;
	mov.b32 	%f981, %r469;
	mul.f32 	%f982, %f979, %f981;
	sub.f32 	%f983, %f981, %f982;
	fma.rn.f32 	%f984, %f983, %f979, %f982;
	sub.f32 	%f985, %f981, %f984;
	fma.rz.f32 	%f986, %f985, %f979, %f984;
	cvt.rzi.f32.f32 	%f987, %f986;
	sub.f32 	%f1377, %f981, %f987;
	sub.s32 	%r16155, %r16155, %r468;
	mov.b32 	%r16154, %f1377;
	setp.ne.s32 	%p169, %r16155, 0;
	setp.ne.s32 	%p170, %r16154, 0;
	and.pred  	%p171, %p169, %p170;
	@%p171 bra 	LBB0_88;
LBB0_89:                                // %__internal_fmodf_slowpath_mod.exit.i.i2323
	setp.gt.u32 	%p172, %r69, 2139095039;
	selp.f32 	%f988, 0f7FFFFFFF, 0f4B800000, %p172;
	mul.f32 	%f989, %f1377, 0f34000000;
	mul.f32 	%f1378, %f988, %f989;
	bra.uni 	LBB0_90;
LBB0_80:                                // %__nv_fast_fdividef.exit.i.i.i2293
	div.approx.f32 	%f972, %f1378, %f255;
	cvt.rzi.f32.f32 	%f1376, %f972;
	fma.rn.f32 	%f132, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r68, %f132;
	setp.lt.u32 	%p163, %r68, 1073741824;
	@%p163 bra 	LBB0_85;
// %bb.81:
	setp.lt.u32 	%p164, %r68, -2147483647;
	@%p164 bra 	LBB0_83;
// %bb.82:
	add.f32 	%f977, %f1376, 0fBF800000;
	setp.lt.f32 	%p167, %f132, 0fC0000000;
	add.f32 	%f978, %f977, 0fBF800000;
	selp.f32 	%f1376, %f978, %f977, %p167;
	bra.uni 	LBB0_85;
LBB0_83:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p165, %f132, 0f40800000;
	@%p165 bra 	LBB0_85;
// %bb.84:                              // %__nv_fmaf_rn.exit.i.i.i2298
	add.f32 	%f973, %f1376, 0f3F800000;
	fma.rn.f32 	%f975, %f255, 0fC0400000, %f132;
	setp.ge.f32 	%p166, %f975, 0f00000000;
	add.f32 	%f976, %f973, 0f3F800000;
	selp.f32 	%f1376, %f976, %f973, %p166;
LBB0_85:                                // %__internal_fmodf_fastpath_quot.exit.i.i2302
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
LBB0_90:                                // %__internal_fmodf_kernel.exit.i2327
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f306, %f305, 0fBF000000, %f297;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f375, %f374, 0fBF000000, %f366;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f444, %f443, 0fBF000000, %f435;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f504;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f582, %f581, 0fBF000000, %f573;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f651, %f650, 0fBF000000, %f642;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f720, %f719, 0fBF000000, %f711;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	fma.rn.f32 	%f789, %f788, 0fBF000000, %f780;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f894, %f893, %f893;
	mul.f32 	%f949, %f948, %f948;
	shl.b32 	%r6, %r4, 1;
	abs.f32 	%f990, %f1378;
	setp.gtu.f32 	%p173, %f990, 0f7F800000;
	@%p173 bra 	LBB0_92;
// %bb.91:
	mov.b32 	%r470, %f129;
	and.b32  	%r471, %r470, -2147483648;
	mov.b32 	%r472, %f1378;
	or.b32  	%r473, %r471, %r472;
	mov.b32 	%f1378, %r473;
LBB0_92:                                // %__nv_fmodf.exit2328
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f307, %f306, %f306;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f376, %f375, %f375;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f445, %f444, %f444;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f514, %f513, %f513;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f583, %f582, %f582;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f652, %f651, %f651;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f721, %f720, %f720;
	mul.f32 	%f756, %f755, %f755;
	mul.f32 	%f790, %f789, %f789;
	fma.rn.f32 	%f842, %f841, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f895, %f894, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f950, %f949, 0f37CBAC00, 0fBAB607ED;
	add.f32 	%f991, %f1378, %f1378;
	mov.b32 	%r486, %f991;
	and.b32  	%r487, %r486, -2147483648;
	or.b32  	%r488, %r487, 1056964608;
	mov.b32 	%f992, %r488;
	add.f32 	%f993, %f991, %f992;
	cvt.rzi.f32.f32 	%f994, %f993;
	abs.f32 	%f995, %f991;
	setp.gt.f32 	%p174, %f995, 0f4B000000;
	selp.f32 	%f996, %f991, %f994, %p174;
	cvt.rzi.f32.f32 	%f997, %f991;
	setp.lt.f32 	%p175, %f995, 0f3F000000;
	selp.f32 	%f998, %f997, %f996, %p175;
	fma.rn.f32 	%f999, %f998, 0fBF000000, %f1378;
	mul.f32 	%f1000, %f999, 0f34222169;
	fma.rn.f32 	%f1001, %f999, 0f40490FDA, %f1000;
	mul.f32 	%f1002, %f1001, %f1001;
	fma.rn.f32 	%f1003, %f1002, 0f37CBAC00, 0fBAB607ED;
	and.b32  	%r494, %r6, 6;
	shl.b32 	%r495, %r494, 1;
	neg.s32 	%r80, %r495;
	mul.lo.s32 	%r81, %r80, %r15;
	cvt.rn.f32.s32 	%f1024, %r81;
	div.approx.f32 	%f146, %f1024, %f287;
	abs.f32 	%f1382, %f146;
	setp.lt.f32 	%p181, %f1382, 0f40000000;
	@%p181 bra 	LBB0_104;
// %bb.93:
	setp.gtu.f32 	%p182, %f1382, 0f4B800000;
	@%p182 bra 	LBB0_100;
	bra.uni 	LBB0_94;
LBB0_100:
	mov.b32 	%r83, %f1382;
	and.b32  	%r496, %r83, 8388607;
	or.b32  	%r16156, %r496, 1065353216;
	mov.b32 	%f1381, %r16156;
	add.s32 	%r497, %r83, -1073741824;
	and.b32  	%r16157, %r497, -8388608;
	setp.eq.s32 	%p188, %r16157, 0;
	@%p188 bra 	LBB0_103;
// %bb.101:                             // %__nv_fmaf_rn.exit4.i.i.i2367.preheader
	mov.f32 	%f1035, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1034,%f1035;
	// end inline asm
LBB0_102:                               // %__nv_fmaf_rn.exit4.i.i.i2367
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r498, %r16157, 192937984;
	add.s32 	%r499, %r498, %r16156;
	mov.b32 	%f1036, %r499;
	mul.f32 	%f1037, %f1034, %f1036;
	sub.f32 	%f1038, %f1036, %f1037;
	fma.rn.f32 	%f1039, %f1038, %f1034, %f1037;
	sub.f32 	%f1040, %f1036, %f1039;
	fma.rz.f32 	%f1041, %f1040, %f1034, %f1039;
	cvt.rzi.f32.f32 	%f1042, %f1041;
	sub.f32 	%f1381, %f1036, %f1042;
	sub.s32 	%r16157, %r16157, %r498;
	mov.b32 	%r16156, %f1381;
	setp.ne.s32 	%p189, %r16157, 0;
	setp.ne.s32 	%p190, %r16156, 0;
	and.pred  	%p191, %p189, %p190;
	@%p191 bra 	LBB0_102;
LBB0_103:                               // %__internal_fmodf_slowpath_mod.exit.i.i2369
	setp.gt.u32 	%p192, %r83, 2139095039;
	selp.f32 	%f1043, 0f7FFFFFFF, 0f4B800000, %p192;
	mul.f32 	%f1044, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1043, %f1044;
	bra.uni 	LBB0_104;
LBB0_94:                                // %__nv_fast_fdividef.exit.i.i.i2339
	div.approx.f32 	%f1027, %f1382, %f255;
	cvt.rzi.f32.f32 	%f1380, %f1027;
	fma.rn.f32 	%f149, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r82, %f149;
	setp.lt.u32 	%p183, %r82, 1073741824;
	@%p183 bra 	LBB0_99;
// %bb.95:
	setp.lt.u32 	%p184, %r82, -2147483647;
	@%p184 bra 	LBB0_97;
// %bb.96:
	add.f32 	%f1032, %f1380, 0fBF800000;
	setp.lt.f32 	%p187, %f149, 0fC0000000;
	add.f32 	%f1033, %f1032, 0fBF800000;
	selp.f32 	%f1380, %f1033, %f1032, %p187;
	bra.uni 	LBB0_99;
LBB0_97:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p185, %f149, 0f40800000;
	@%p185 bra 	LBB0_99;
// %bb.98:                              // %__nv_fmaf_rn.exit.i.i.i2344
	add.f32 	%f1028, %f1380, 0f3F800000;
	fma.rn.f32 	%f1030, %f255, 0fC0400000, %f149;
	setp.ge.f32 	%p186, %f1030, 0f00000000;
	add.f32 	%f1031, %f1028, 0f3F800000;
	selp.f32 	%f1380, %f1031, %f1028, %p186;
LBB0_99:                                // %__internal_fmodf_fastpath_quot.exit.i.i2348
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
LBB0_104:                               // %__internal_fmodf_kernel.exit.i2373
	cvt.rzi.s32.f32 	%r261, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r268, %f305;
	fma.rn.f32 	%f308, %f307, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f309, %f307, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r279, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r286, %f374;
	fma.rn.f32 	%f377, %f376, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f378, %f376, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r297, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r304, %f443;
	fma.rn.f32 	%f446, %f445, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f447, %f445, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r315, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r322, %f512;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r333, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r340, %f581;
	fma.rn.f32 	%f584, %f583, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f585, %f583, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r351, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r358, %f650;
	fma.rn.f32 	%f653, %f652, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f654, %f652, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r369, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r376, %f719;
	fma.rn.f32 	%f722, %f721, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f723, %f721, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r387, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r394, %f788;
	fma.rn.f32 	%f791, %f790, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f792, %f790, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r412, %f837;
	fma.rn.f32 	%f843, %f842, %f841, 0f3D2AAABB;
	fma.rn.f32 	%f847, %f841, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r441, %f890;
	fma.rn.f32 	%f896, %f895, %f894, 0f3D2AAABB;
	fma.rn.f32 	%f900, %f894, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r460, %f945;
	fma.rn.f32 	%f951, %f950, %f949, 0f3D2AAABB;
	fma.rn.f32 	%f955, %f949, 0fB94D4153, 0f3C0885E4;
	cvt.rzi.s32.f32 	%r489, %f998;
	fma.rn.f32 	%f1004, %f1003, %f1002, 0f3D2AAABB;
	fma.rn.f32 	%f1008, %f1002, 0fB94D4153, 0f3C0885E4;
	abs.f32 	%f1045, %f1382;
	setp.gtu.f32 	%p193, %f1045, 0f7F800000;
	@%p193 bra 	LBB0_106;
// %bb.105:
	mov.b32 	%r500, %f146;
	and.b32  	%r501, %r500, -2147483648;
	mov.b32 	%r502, %f1382;
	or.b32  	%r503, %r501, %r502;
	mov.b32 	%f1382, %r503;
LBB0_106:                               // %__nv_fmodf.exit2374
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r269, %r268, 1;
	fma.rn.f32 	%f310, %f308, %f307, 0fC0A55DF6;
	fma.rn.f32 	%f311, %f309, %f307, 0f4081E0CF;
	fma.rn.f32 	%f312, %f307, %f306, 0f00000000;
	add.s32 	%r280, %r279, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r287, %r286, 1;
	fma.rn.f32 	%f379, %f377, %f376, 0fC0A55DF6;
	fma.rn.f32 	%f380, %f378, %f376, 0f4081E0CF;
	fma.rn.f32 	%f381, %f376, %f375, 0f00000000;
	add.s32 	%r298, %r297, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r305, %r304, 1;
	fma.rn.f32 	%f448, %f446, %f445, 0fC0A55DF6;
	fma.rn.f32 	%f449, %f447, %f445, 0f4081E0CF;
	fma.rn.f32 	%f450, %f445, %f444, 0f00000000;
	add.s32 	%r316, %r315, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r323, %r322, 1;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	add.s32 	%r334, %r333, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r341, %r340, 1;
	fma.rn.f32 	%f586, %f584, %f583, 0fC0A55DF6;
	fma.rn.f32 	%f587, %f585, %f583, 0f4081E0CF;
	fma.rn.f32 	%f588, %f583, %f582, 0f00000000;
	add.s32 	%r352, %r351, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r359, %r358, 1;
	fma.rn.f32 	%f655, %f653, %f652, 0fC0A55DF6;
	fma.rn.f32 	%f656, %f654, %f652, 0f4081E0CF;
	fma.rn.f32 	%f657, %f652, %f651, 0f00000000;
	add.s32 	%r370, %r369, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r377, %r376, 1;
	fma.rn.f32 	%f724, %f722, %f721, 0fC0A55DF6;
	fma.rn.f32 	%f725, %f723, %f721, 0f4081E0CF;
	fma.rn.f32 	%f726, %f721, %f720, 0f00000000;
	add.s32 	%r388, %r387, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	add.s32 	%r395, %r394, 1;
	fma.rn.f32 	%f793, %f791, %f790, 0fC0A55DF6;
	fma.rn.f32 	%f794, %f792, %f790, 0f4081E0CF;
	fma.rn.f32 	%f795, %f790, %f789, 0f00000000;
	fma.rn.f32 	%f844, %f843, %f841, 0fBEFFFFFF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	fma.rn.f32 	%f848, %f847, %f841, 0fBE2AAAA8;
	and.b32  	%r413, %r412, 1;
	fma.rn.f32 	%f897, %f896, %f894, 0fBEFFFFFF;
	fma.rn.f32 	%f899, %f894, %f893, 0f00000000;
	fma.rn.f32 	%f901, %f900, %f894, 0fBE2AAAA8;
	and.b32  	%r442, %r441, 1;
	fma.rn.f32 	%f952, %f951, %f949, 0fBEFFFFFF;
	fma.rn.f32 	%f954, %f949, %f948, 0f00000000;
	fma.rn.f32 	%f956, %f955, %f949, 0fBE2AAAA8;
	and.b32  	%r461, %r460, 1;
	fma.rn.f32 	%f1005, %f1004, %f1002, 0fBEFFFFFF;
	fma.rn.f32 	%f1007, %f1002, %f1001, 0f00000000;
	fma.rn.f32 	%f1009, %f1008, %f1002, 0fBE2AAAA8;
	and.b32  	%r490, %r489, 1;
	add.f32 	%f1046, %f1382, %f1382;
	mov.b32 	%r504, %f1046;
	and.b32  	%r505, %r504, -2147483648;
	or.b32  	%r506, %r505, 1056964608;
	mov.b32 	%f1047, %r506;
	add.f32 	%f1048, %f1046, %f1047;
	cvt.rzi.f32.f32 	%f1049, %f1048;
	abs.f32 	%f1050, %f1046;
	setp.gt.f32 	%p194, %f1050, 0f4B000000;
	selp.f32 	%f1051, %f1046, %f1049, %p194;
	cvt.rzi.f32.f32 	%f1052, %f1046;
	setp.lt.f32 	%p195, %f1050, 0f3F000000;
	selp.f32 	%f1053, %f1052, %f1051, %p195;
	cvt.rzi.s32.f32 	%r507, %f1053;
	fma.rn.f32 	%f1054, %f1053, 0fBF000000, %f1382;
	mul.f32 	%f1055, %f1054, 0f34222169;
	fma.rn.f32 	%f1056, %f1054, 0f40490FDA, %f1055;
	mul.f32 	%f1057, %f1056, %f1056;
	fma.rn.f32 	%f1058, %f1057, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1059, %f1058, %f1057, 0f3D2AAABB;
	fma.rn.f32 	%f1063, %f1057, 0fB94D4153, 0f3C0885E4;
	sub.s32 	%r512, %r81, %r67;
	cvt.rn.f32.s32 	%f1077, %r512;
	div.approx.f32 	%f165, %f1077, %f287;
	abs.f32 	%f1386, %f165;
	setp.lt.f32 	%p201, %f1386, 0f40000000;
	@%p201 bra 	LBB0_118;
// %bb.107:
	setp.gtu.f32 	%p202, %f1386, 0f4B800000;
	@%p202 bra 	LBB0_114;
	bra.uni 	LBB0_108;
LBB0_114:
	mov.b32 	%r91, %f1386;
	and.b32  	%r513, %r91, 8388607;
	or.b32  	%r16158, %r513, 1065353216;
	mov.b32 	%f1385, %r16158;
	add.s32 	%r514, %r91, -1073741824;
	and.b32  	%r16159, %r514, -8388608;
	setp.eq.s32 	%p208, %r16159, 0;
	@%p208 bra 	LBB0_117;
// %bb.115:                             // %__nv_fmaf_rn.exit4.i.i.i2413.preheader
	mov.f32 	%f1088, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1087,%f1088;
	// end inline asm
LBB0_116:                               // %__nv_fmaf_rn.exit4.i.i.i2413
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r515, %r16159, 192937984;
	add.s32 	%r516, %r515, %r16158;
	mov.b32 	%f1089, %r516;
	mul.f32 	%f1090, %f1087, %f1089;
	sub.f32 	%f1091, %f1089, %f1090;
	fma.rn.f32 	%f1092, %f1091, %f1087, %f1090;
	sub.f32 	%f1093, %f1089, %f1092;
	fma.rz.f32 	%f1094, %f1093, %f1087, %f1092;
	cvt.rzi.f32.f32 	%f1095, %f1094;
	sub.f32 	%f1385, %f1089, %f1095;
	sub.s32 	%r16159, %r16159, %r515;
	mov.b32 	%r16158, %f1385;
	setp.ne.s32 	%p209, %r16159, 0;
	setp.ne.s32 	%p210, %r16158, 0;
	and.pred  	%p211, %p209, %p210;
	@%p211 bra 	LBB0_116;
LBB0_117:                               // %__internal_fmodf_slowpath_mod.exit.i.i2415
	setp.gt.u32 	%p212, %r91, 2139095039;
	selp.f32 	%f1096, 0f7FFFFFFF, 0f4B800000, %p212;
	mul.f32 	%f1097, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1096, %f1097;
	bra.uni 	LBB0_118;
LBB0_108:                               // %__nv_fast_fdividef.exit.i.i.i2385
	div.approx.f32 	%f1080, %f1386, %f255;
	cvt.rzi.f32.f32 	%f1384, %f1080;
	fma.rn.f32 	%f168, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r90, %f168;
	setp.lt.u32 	%p203, %r90, 1073741824;
	@%p203 bra 	LBB0_113;
// %bb.109:
	setp.lt.u32 	%p204, %r90, -2147483647;
	@%p204 bra 	LBB0_111;
// %bb.110:
	add.f32 	%f1085, %f1384, 0fBF800000;
	setp.lt.f32 	%p207, %f168, 0fC0000000;
	add.f32 	%f1086, %f1085, 0fBF800000;
	selp.f32 	%f1384, %f1086, %f1085, %p207;
	bra.uni 	LBB0_113;
LBB0_111:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p205, %f168, 0f40800000;
	@%p205 bra 	LBB0_113;
// %bb.112:                             // %__nv_fmaf_rn.exit.i.i.i2390
	add.f32 	%f1081, %f1384, 0f3F800000;
	fma.rn.f32 	%f1083, %f255, 0fC0400000, %f168;
	setp.ge.f32 	%p206, %f1083, 0f00000000;
	add.f32 	%f1084, %f1081, 0f3F800000;
	selp.f32 	%f1384, %f1084, %f1081, %p206;
LBB0_113:                               // %__internal_fmodf_fastpath_quot.exit.i.i2394
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
LBB0_118:                               // %__internal_fmodf_kernel.exit.i2419
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f313, %f311, %f307, 0fC09DE9E6;
	fma.rn.f32 	%f314, %f310, %f312, 0f00000000;
	and.b32  	%r270, %r269, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r281, %r280, 1;
	fma.rn.f32 	%f382, %f380, %f376, 0fC09DE9E6;
	fma.rn.f32 	%f383, %f379, %f381, 0f00000000;
	and.b32  	%r288, %r287, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r299, %r298, 1;
	fma.rn.f32 	%f451, %f449, %f445, 0fC09DE9E6;
	fma.rn.f32 	%f452, %f448, %f450, 0f00000000;
	and.b32  	%r306, %r305, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r317, %r316, 1;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	and.b32  	%r324, %r323, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r335, %r334, 1;
	fma.rn.f32 	%f589, %f587, %f583, 0fC09DE9E6;
	fma.rn.f32 	%f590, %f586, %f588, 0f00000000;
	and.b32  	%r342, %r341, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r353, %r352, 1;
	fma.rn.f32 	%f658, %f656, %f652, 0fC09DE9E6;
	fma.rn.f32 	%f659, %f655, %f657, 0f00000000;
	and.b32  	%r360, %r359, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r371, %r370, 1;
	fma.rn.f32 	%f727, %f725, %f721, 0fC09DE9E6;
	fma.rn.f32 	%f728, %f724, %f726, 0f00000000;
	and.b32  	%r378, %r377, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r389, %r388, 1;
	fma.rn.f32 	%f796, %f794, %f790, 0fC09DE9E6;
	fma.rn.f32 	%f797, %f793, %f795, 0f00000000;
	and.b32  	%r396, %r395, 1;
	fma.rn.f32 	%f845, %f844, %f841, 0f3F800000;
	fma.rn.f32 	%f849, %f848, %f846, %f840;
	setp.eq.b32 	%p116, %r413, 1;
	fma.rn.f32 	%f898, %f897, %f894, 0f3F800000;
	fma.rn.f32 	%f902, %f901, %f899, %f893;
	setp.eq.b32 	%p136, %r442, 1;
	fma.rn.f32 	%f953, %f952, %f949, 0f3F800000;
	fma.rn.f32 	%f957, %f956, %f954, %f948;
	setp.eq.b32 	%p156, %r461, 1;
	fma.rn.f32 	%f1006, %f1005, %f1002, 0f3F800000;
	fma.rn.f32 	%f1010, %f1009, %f1007, %f1001;
	setp.eq.b32 	%p176, %r490, 1;
	fma.rn.f32 	%f1060, %f1059, %f1057, 0fBEFFFFFF;
	fma.rn.f32 	%f1062, %f1057, %f1056, 0f00000000;
	fma.rn.f32 	%f1064, %f1063, %f1057, 0fBE2AAAA8;
	and.b32  	%r508, %r507, 1;
	shr.u32 	%r12, %r4, 1;
	shr.u32 	%r18, %r4, 3;
	abs.f32 	%f1098, %f1386;
	setp.gtu.f32 	%p213, %f1098, 0f7F800000;
	@%p213 bra 	LBB0_120;
// %bb.119:
	mov.b32 	%r517, %f165;
	and.b32  	%r518, %r517, -2147483648;
	mov.b32 	%r519, %f1386;
	or.b32  	%r520, %r518, %r519;
	mov.b32 	%f1386, %r520;
LBB0_120:                               // %__nv_fmodf.exit2420
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p8, %r263, 1;
	fma.rn.f32 	%f315, %f313, %f307, 0f3F800000;
	fma.rn.f32 	%f316, %f306, 0f40490FDB, %f314;
	setp.eq.b32 	%p14, %r270, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p20, %r281, 1;
	fma.rn.f32 	%f384, %f382, %f376, 0f3F800000;
	fma.rn.f32 	%f385, %f375, 0f40490FDB, %f383;
	setp.eq.b32 	%p26, %r288, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p32, %r299, 1;
	fma.rn.f32 	%f453, %f451, %f445, 0f3F800000;
	fma.rn.f32 	%f454, %f444, 0f40490FDB, %f452;
	setp.eq.b32 	%p38, %r306, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p44, %r317, 1;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	setp.eq.b32 	%p50, %r324, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p56, %r335, 1;
	fma.rn.f32 	%f591, %f589, %f583, 0f3F800000;
	fma.rn.f32 	%f592, %f582, 0f40490FDB, %f590;
	setp.eq.b32 	%p62, %r342, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p68, %r353, 1;
	fma.rn.f32 	%f660, %f658, %f652, 0f3F800000;
	fma.rn.f32 	%f661, %f651, 0f40490FDB, %f659;
	setp.eq.b32 	%p74, %r360, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p80, %r371, 1;
	fma.rn.f32 	%f729, %f727, %f721, 0f3F800000;
	fma.rn.f32 	%f730, %f720, 0f40490FDB, %f728;
	setp.eq.b32 	%p86, %r378, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p92, %r389, 1;
	fma.rn.f32 	%f798, %f796, %f790, 0f3F800000;
	fma.rn.f32 	%f799, %f789, 0f40490FDB, %f797;
	setp.eq.b32 	%p98, %r396, 1;
	selp.f32 	%f850, %f845, %f849, %p116;
	and.b32  	%r414, %r412, 2;
	selp.f32 	%f903, %f898, %f902, %p136;
	and.b32  	%r443, %r441, 2;
	selp.f32 	%f958, %f953, %f957, %p156;
	and.b32  	%r462, %r460, 2;
	selp.f32 	%f1011, %f1006, %f1010, %p176;
	and.b32  	%r491, %r489, 2;
	fma.rn.f32 	%f1061, %f1060, %f1057, 0f3F800000;
	fma.rn.f32 	%f1065, %f1064, %f1062, %f1056;
	setp.eq.b32 	%p196, %r508, 1;
	add.f32 	%f1099, %f1386, %f1386;
	mov.b32 	%r527, %f1099;
	and.b32  	%r528, %r527, -2147483648;
	or.b32  	%r529, %r528, 1056964608;
	mov.b32 	%f1100, %r529;
	add.f32 	%f1101, %f1099, %f1100;
	cvt.rzi.f32.f32 	%f1102, %f1101;
	abs.f32 	%f1103, %f1099;
	setp.gt.f32 	%p214, %f1103, 0f4B000000;
	selp.f32 	%f1104, %f1099, %f1102, %p214;
	cvt.rzi.f32.f32 	%f1105, %f1099;
	setp.lt.f32 	%p215, %f1103, 0f3F000000;
	selp.f32 	%f1106, %f1105, %f1104, %p215;
	cvt.rzi.s32.f32 	%r530, %f1106;
	fma.rn.f32 	%f1107, %f1106, 0fBF000000, %f1386;
	mul.f32 	%f1108, %f1107, 0f34222169;
	fma.rn.f32 	%f1109, %f1107, 0f40490FDA, %f1108;
	mul.f32 	%f1110, %f1109, %f1109;
	fma.rn.f32 	%f1111, %f1110, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1112, %f1111, %f1110, 0f3D2AAABB;
	fma.rn.f32 	%f1113, %f1112, %f1110, 0fBEFFFFFF;
	fma.rn.f32 	%f1114, %f1113, %f1110, 0f3F800000;
	fma.rn.f32 	%f1115, %f1110, %f1109, 0f00000000;
	fma.rn.f32 	%f1116, %f1110, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1117, %f1116, %f1110, 0fBE2AAAA8;
	fma.rn.f32 	%f1118, %f1117, %f1115, %f1109;
	and.b32  	%r531, %r530, 1;
	setp.eq.b32 	%p216, %r531, 1;
	and.b32  	%r535, %r18, 2;
	and.b32  	%r536, %r12, 4;
	or.b32  	%r537, %r16, %r535;
	or.b32  	%r100, %r537, %r536;
	mul.lo.s32 	%r101, %r80, %r100;
	cvt.rn.f32.s32 	%f1132, %r101;
	mov.f32 	%f1133, 0f41800000;
	div.approx.f32 	%f182, %f1132, %f1133;
	abs.f32 	%f1390, %f182;
	setp.lt.f32 	%p221, %f1390, 0f40000000;
	@%p221 bra 	LBB0_132;
// %bb.121:
	setp.gtu.f32 	%p222, %f1390, 0f4B800000;
	@%p222 bra 	LBB0_128;
	bra.uni 	LBB0_122;
LBB0_128:
	mov.b32 	%r103, %f1390;
	and.b32  	%r538, %r103, 8388607;
	or.b32  	%r16160, %r538, 1065353216;
	mov.b32 	%f1389, %r16160;
	add.s32 	%r539, %r103, -1073741824;
	and.b32  	%r16161, %r539, -8388608;
	setp.eq.s32 	%p228, %r16161, 0;
	@%p228 bra 	LBB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i2459.preheader
	mov.f32 	%f1143, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1142,%f1143;
	// end inline asm
LBB0_130:                               // %__nv_fmaf_rn.exit4.i.i.i2459
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r540, %r16161, 192937984;
	add.s32 	%r541, %r540, %r16160;
	mov.b32 	%f1144, %r541;
	mul.f32 	%f1145, %f1142, %f1144;
	sub.f32 	%f1146, %f1144, %f1145;
	fma.rn.f32 	%f1147, %f1146, %f1142, %f1145;
	sub.f32 	%f1148, %f1144, %f1147;
	fma.rz.f32 	%f1149, %f1148, %f1142, %f1147;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	sub.f32 	%f1389, %f1144, %f1150;
	sub.s32 	%r16161, %r16161, %r540;
	mov.b32 	%r16160, %f1389;
	setp.ne.s32 	%p229, %r16161, 0;
	setp.ne.s32 	%p230, %r16160, 0;
	and.pred  	%p231, %p229, %p230;
	@%p231 bra 	LBB0_130;
LBB0_131:                               // %__internal_fmodf_slowpath_mod.exit.i.i2461
	setp.gt.u32 	%p232, %r103, 2139095039;
	selp.f32 	%f1151, 0f7FFFFFFF, 0f4B800000, %p232;
	mul.f32 	%f1152, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1151, %f1152;
	bra.uni 	LBB0_132;
LBB0_122:                               // %__nv_fast_fdividef.exit.i.i.i2431
	div.approx.f32 	%f1135, %f1390, %f255;
	cvt.rzi.f32.f32 	%f1388, %f1135;
	fma.rn.f32 	%f185, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r102, %f185;
	setp.lt.u32 	%p223, %r102, 1073741824;
	@%p223 bra 	LBB0_127;
// %bb.123:
	setp.lt.u32 	%p224, %r102, -2147483647;
	@%p224 bra 	LBB0_125;
// %bb.124:
	add.f32 	%f1140, %f1388, 0fBF800000;
	setp.lt.f32 	%p227, %f185, 0fC0000000;
	add.f32 	%f1141, %f1140, 0fBF800000;
	selp.f32 	%f1388, %f1141, %f1140, %p227;
	bra.uni 	LBB0_127;
LBB0_125:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p225, %f185, 0f40800000;
	@%p225 bra 	LBB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i2436
	add.f32 	%f1136, %f1388, 0f3F800000;
	fma.rn.f32 	%f1138, %f255, 0fC0400000, %f185;
	setp.ge.f32 	%p226, %f1138, 0f00000000;
	add.f32 	%f1139, %f1136, 0f3F800000;
	selp.f32 	%f1388, %f1139, %f1136, %p226;
LBB0_127:                               // %__internal_fmodf_fastpath_quot.exit.i.i2440
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
LBB0_132:                               // %__internal_fmodf_kernel.exit.i2465
	and.b32  	%r243, %r6, 8;
	shl.b32 	%r7, %r4, 2;
	and.b32  	%r246, %r4, 18;
	selp.f32 	%f283, %f281, %f282, %p8;
	and.b32  	%r264, %r262, 2;
	mov.f32 	%f284, 0f00000000;
	selp.f32 	%f317, %f315, %f316, %p14;
	and.b32  	%r271, %r269, 2;
	selp.f32 	%f352, %f350, %f351, %p20;
	and.b32  	%r282, %r280, 2;
	selp.f32 	%f386, %f384, %f385, %p26;
	and.b32  	%r289, %r287, 2;
	selp.f32 	%f421, %f419, %f420, %p32;
	and.b32  	%r300, %r298, 2;
	selp.f32 	%f455, %f453, %f454, %p38;
	and.b32  	%r307, %r305, 2;
	selp.f32 	%f490, %f488, %f489, %p44;
	and.b32  	%r318, %r316, 2;
	selp.f32 	%f524, %f522, %f523, %p50;
	and.b32  	%r325, %r323, 2;
	selp.f32 	%f559, %f557, %f558, %p56;
	and.b32  	%r336, %r334, 2;
	selp.f32 	%f593, %f591, %f592, %p62;
	and.b32  	%r343, %r341, 2;
	selp.f32 	%f628, %f626, %f627, %p68;
	and.b32  	%r354, %r352, 2;
	selp.f32 	%f662, %f660, %f661, %p74;
	and.b32  	%r361, %r359, 2;
	selp.f32 	%f697, %f695, %f696, %p80;
	and.b32  	%r372, %r370, 2;
	selp.f32 	%f731, %f729, %f730, %p86;
	and.b32  	%r379, %r377, 2;
	selp.f32 	%f766, %f764, %f765, %p92;
	and.b32  	%r390, %r388, 2;
	selp.f32 	%f800, %f798, %f799, %p98;
	and.b32  	%r397, %r395, 2;
	setp.eq.s32 	%p117, %r414, 0;
	neg.f32 	%f852, %f850;
	add.s32 	%r415, %r412, 1;
	cvt.rzi.f32.f32 	%f857, %f1366;
	setp.eq.s32 	%p137, %r443, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r444, %r441, 1;
	cvt.rzi.f32.f32 	%f910, %f1370;
	setp.eq.s32 	%p157, %r462, 0;
	neg.f32 	%f960, %f958;
	add.s32 	%r463, %r460, 1;
	cvt.rzi.f32.f32 	%f965, %f1374;
	setp.eq.s32 	%p177, %r491, 0;
	neg.f32 	%f1013, %f1011;
	add.s32 	%r492, %r489, 1;
	cvt.rzi.f32.f32 	%f1018, %f1378;
	selp.f32 	%f1066, %f1061, %f1065, %p196;
	and.b32  	%r509, %r507, 2;
	selp.f32 	%f1119, %f1114, %f1118, %p216;
	and.b32  	%r532, %r530, 2;
	abs.f32 	%f1153, %f1390;
	setp.gtu.f32 	%p233, %f1153, 0f7F800000;
	@%p233 bra 	LBB0_134;
// %bb.133:
	mov.b32 	%r542, %f182;
	and.b32  	%r543, %r542, -2147483648;
	mov.b32 	%r544, %f1390;
	or.b32  	%r545, %r543, %r544;
	mov.b32 	%f1390, %r545;
LBB0_134:                               // %__nv_fmodf.exit2466
	and.b32  	%r244, %r7, 4;
	or.b32  	%r247, %r246, %r243;
	setp.eq.s32 	%p9, %r264, 0;
	sub.f32 	%f285, %f284, %f283;
	setp.eq.s32 	%p15, %r271, 0;
	sub.f32 	%f319, %f284, %f317;
	setp.eq.s32 	%p21, %r282, 0;
	sub.f32 	%f354, %f284, %f352;
	setp.eq.s32 	%p27, %r289, 0;
	sub.f32 	%f388, %f284, %f386;
	setp.eq.s32 	%p33, %r300, 0;
	sub.f32 	%f423, %f284, %f421;
	setp.eq.s32 	%p39, %r307, 0;
	sub.f32 	%f457, %f284, %f455;
	setp.eq.s32 	%p45, %r318, 0;
	sub.f32 	%f492, %f284, %f490;
	setp.eq.s32 	%p51, %r325, 0;
	sub.f32 	%f526, %f284, %f524;
	setp.eq.s32 	%p57, %r336, 0;
	sub.f32 	%f561, %f284, %f559;
	setp.eq.s32 	%p63, %r343, 0;
	sub.f32 	%f595, %f284, %f593;
	setp.eq.s32 	%p69, %r354, 0;
	sub.f32 	%f630, %f284, %f628;
	setp.eq.s32 	%p75, %r361, 0;
	sub.f32 	%f664, %f284, %f662;
	setp.eq.s32 	%p81, %r372, 0;
	sub.f32 	%f699, %f284, %f697;
	setp.eq.s32 	%p87, %r379, 0;
	sub.f32 	%f733, %f284, %f731;
	setp.eq.s32 	%p93, %r390, 0;
	sub.f32 	%f768, %f284, %f766;
	setp.eq.s32 	%p99, %r397, 0;
	sub.f32 	%f802, %f284, %f800;
	selp.f32 	%f851, %f849, %f845, %p116;
	selp.f32 	%f853, %f850, %f852, %p117;
	and.b32  	%r416, %r415, 2;
	setp.eq.f32 	%p119, %f857, %f1366;
	mul.f32 	%f858, %f1366, 0f00000000;
	selp.f32 	%f904, %f902, %f898, %p136;
	selp.f32 	%f906, %f903, %f905, %p137;
	and.b32  	%r445, %r444, 2;
	setp.eq.f32 	%p139, %f910, %f1370;
	mul.f32 	%f911, %f1370, 0f00000000;
	selp.f32 	%f959, %f957, %f953, %p156;
	selp.f32 	%f961, %f958, %f960, %p157;
	and.b32  	%r464, %r463, 2;
	setp.eq.f32 	%p159, %f965, %f1374;
	mul.f32 	%f966, %f1374, 0f00000000;
	selp.f32 	%f1012, %f1010, %f1006, %p176;
	selp.f32 	%f1014, %f1011, %f1013, %p177;
	and.b32  	%r493, %r492, 2;
	setp.eq.f32 	%p179, %f1018, %f1378;
	mul.f32 	%f1019, %f1378, 0f00000000;
	setp.eq.s32 	%p197, %r509, 0;
	neg.f32 	%f1068, %f1066;
	add.s32 	%r510, %r507, 1;
	cvt.rzi.f32.f32 	%f1073, %f1382;
	setp.eq.s32 	%p217, %r532, 0;
	neg.f32 	%f1121, %f1119;
	add.s32 	%r533, %r530, 1;
	cvt.rzi.f32.f32 	%f1126, %f1386;
	add.f32 	%f1154, %f1390, %f1390;
	mov.b32 	%r546, %f1154;
	and.b32  	%r547, %r546, -2147483648;
	or.b32  	%r548, %r547, 1056964608;
	mov.b32 	%f1155, %r548;
	add.f32 	%f1156, %f1154, %f1155;
	cvt.rzi.f32.f32 	%f1157, %f1156;
	abs.f32 	%f1158, %f1154;
	setp.gt.f32 	%p234, %f1158, 0f4B000000;
	selp.f32 	%f1159, %f1154, %f1157, %p234;
	cvt.rzi.f32.f32 	%f1160, %f1154;
	setp.lt.f32 	%p235, %f1158, 0f3F000000;
	selp.f32 	%f1161, %f1160, %f1159, %p235;
	cvt.rzi.s32.f32 	%r549, %f1161;
	fma.rn.f32 	%f1162, %f1161, 0fBF000000, %f1390;
	mul.f32 	%f1163, %f1162, 0f34222169;
	fma.rn.f32 	%f1164, %f1162, 0f40490FDA, %f1163;
	mul.f32 	%f1165, %f1164, %f1164;
	fma.rn.f32 	%f1166, %f1165, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1167, %f1166, %f1165, 0f3D2AAABB;
	fma.rn.f32 	%f1168, %f1167, %f1165, 0fBEFFFFFF;
	fma.rn.f32 	%f1169, %f1168, %f1165, 0f3F800000;
	fma.rn.f32 	%f1170, %f1165, %f1164, 0f00000000;
	fma.rn.f32 	%f1171, %f1165, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1172, %f1171, %f1165, 0fBE2AAAA8;
	fma.rn.f32 	%f1173, %f1172, %f1170, %f1164;
	and.b32  	%r550, %r549, 1;
	setp.eq.b32 	%p236, %r550, 1;
	selp.f32 	%f1174, %f1169, %f1173, %p236;
	selp.f32 	%f1175, %f1173, %f1169, %p236;
	and.b32  	%r551, %r549, 2;
	setp.eq.s32 	%p237, %r551, 0;
	neg.f32 	%f1176, %f1174;
	selp.f32 	%f1177, %f1174, %f1176, %p237;
	add.s32 	%r552, %r549, 1;
	and.b32  	%r553, %r552, 2;
	cvt.rzi.f32.f32 	%f1181, %f1390;
	setp.eq.f32 	%p239, %f1181, %f1390;
	mul.f32 	%f1182, %f1390, 0f00000000;
	shl.b32 	%r554, %r100, 3;
	sub.s32 	%r555, %r101, %r554;
	cvt.rn.f32.s32 	%f1185, %r555;
	div.approx.f32 	%f201, %f1185, %f1133;
	abs.f32 	%f1394, %f201;
	setp.lt.f32 	%p241, %f1394, 0f40000000;
	@%p241 bra 	LBB0_146;
// %bb.135:
	setp.gtu.f32 	%p242, %f1394, 0f4B800000;
	@%p242 bra 	LBB0_142;
	bra.uni 	LBB0_136;
LBB0_142:
	mov.b32 	%r111, %f1394;
	and.b32  	%r556, %r111, 8388607;
	or.b32  	%r16162, %r556, 1065353216;
	mov.b32 	%f1393, %r16162;
	add.s32 	%r557, %r111, -1073741824;
	and.b32  	%r16163, %r557, -8388608;
	setp.eq.s32 	%p248, %r16163, 0;
	@%p248 bra 	LBB0_145;
// %bb.143:                             // %__nv_fmaf_rn.exit4.i.i.i2505.preheader
	mov.f32 	%f1196, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1195,%f1196;
	// end inline asm
LBB0_144:                               // %__nv_fmaf_rn.exit4.i.i.i2505
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r558, %r16163, 192937984;
	add.s32 	%r559, %r558, %r16162;
	mov.b32 	%f1197, %r559;
	mul.f32 	%f1198, %f1195, %f1197;
	sub.f32 	%f1199, %f1197, %f1198;
	fma.rn.f32 	%f1200, %f1199, %f1195, %f1198;
	sub.f32 	%f1201, %f1197, %f1200;
	fma.rz.f32 	%f1202, %f1201, %f1195, %f1200;
	cvt.rzi.f32.f32 	%f1203, %f1202;
	sub.f32 	%f1393, %f1197, %f1203;
	sub.s32 	%r16163, %r16163, %r558;
	mov.b32 	%r16162, %f1393;
	setp.ne.s32 	%p249, %r16163, 0;
	setp.ne.s32 	%p250, %r16162, 0;
	and.pred  	%p251, %p249, %p250;
	@%p251 bra 	LBB0_144;
LBB0_145:                               // %__internal_fmodf_slowpath_mod.exit.i.i2507
	setp.gt.u32 	%p252, %r111, 2139095039;
	selp.f32 	%f1204, 0f7FFFFFFF, 0f4B800000, %p252;
	mul.f32 	%f1205, %f1393, 0f34000000;
	mul.f32 	%f1394, %f1204, %f1205;
	bra.uni 	LBB0_146;
LBB0_136:                               // %__nv_fast_fdividef.exit.i.i.i2477
	div.approx.f32 	%f1188, %f1394, %f255;
	cvt.rzi.f32.f32 	%f1392, %f1188;
	fma.rn.f32 	%f204, %f1392, 0fC0000000, %f1394;
	mov.b32 	%r110, %f204;
	setp.lt.u32 	%p243, %r110, 1073741824;
	@%p243 bra 	LBB0_141;
// %bb.137:
	setp.lt.u32 	%p244, %r110, -2147483647;
	@%p244 bra 	LBB0_139;
// %bb.138:
	add.f32 	%f1193, %f1392, 0fBF800000;
	setp.lt.f32 	%p247, %f204, 0fC0000000;
	add.f32 	%f1194, %f1193, 0fBF800000;
	selp.f32 	%f1392, %f1194, %f1193, %p247;
	bra.uni 	LBB0_141;
LBB0_139:
	add.f32 	%f1392, %f1392, 0f3F800000;
	setp.ltu.f32 	%p245, %f204, 0f40800000;
	@%p245 bra 	LBB0_141;
// %bb.140:                             // %__nv_fmaf_rn.exit.i.i.i2482
	add.f32 	%f1189, %f1392, 0f3F800000;
	fma.rn.f32 	%f1191, %f255, 0fC0400000, %f204;
	setp.ge.f32 	%p246, %f1191, 0f00000000;
	add.f32 	%f1192, %f1189, 0f3F800000;
	selp.f32 	%f1392, %f1192, %f1189, %p246;
LBB0_141:                               // %__internal_fmodf_fastpath_quot.exit.i.i2486
	fma.rn.f32 	%f1394, %f1392, 0fC0000000, %f1394;
LBB0_146:                               // %__internal_fmodf_kernel.exit.i2511
	and.b32  	%r245, %r7, 32;
	or.b32  	%r248, %r247, %r244;
	selp.f32 	%f286, %f283, %f285, %p9;
	selp.f32 	%f320, %f317, %f319, %p15;
	selp.f32 	%f355, %f352, %f354, %p21;
	selp.f32 	%f389, %f386, %f388, %p27;
	selp.f32 	%f424, %f421, %f423, %p33;
	selp.f32 	%f458, %f455, %f457, %p39;
	selp.f32 	%f493, %f490, %f492, %p45;
	selp.f32 	%f527, %f524, %f526, %p51;
	selp.f32 	%f562, %f559, %f561, %p57;
	selp.f32 	%f596, %f593, %f595, %p63;
	selp.f32 	%f631, %f628, %f630, %p69;
	selp.f32 	%f665, %f662, %f664, %p75;
	selp.f32 	%f700, %f697, %f699, %p81;
	selp.f32 	%f734, %f731, %f733, %p87;
	selp.f32 	%f769, %f766, %f768, %p93;
	selp.f32 	%f803, %f800, %f802, %p99;
	setp.eq.s32 	%p118, %r416, 0;
	sub.f32 	%f855, %f284, %f851;
	selp.f32 	%f91, %f858, %f853, %p119;
	abs.f32 	%f859, %f1366;
	setp.eq.s32 	%p138, %r445, 0;
	sub.f32 	%f908, %f284, %f904;
	selp.f32 	%f912, %f911, %f906, %p139;
	abs.f32 	%f913, %f1370;
	setp.eq.s32 	%p158, %r464, 0;
	sub.f32 	%f963, %f284, %f959;
	selp.f32 	%f127, %f966, %f961, %p159;
	abs.f32 	%f967, %f1374;
	setp.eq.s32 	%p178, %r493, 0;
	sub.f32 	%f1016, %f284, %f1012;
	selp.f32 	%f1020, %f1019, %f1014, %p179;
	abs.f32 	%f1021, %f1378;
	selp.f32 	%f1067, %f1065, %f1061, %p196;
	selp.f32 	%f1069, %f1066, %f1068, %p197;
	and.b32  	%r511, %r510, 2;
	setp.eq.f32 	%p199, %f1073, %f1382;
	mul.f32 	%f1074, %f1382, 0f00000000;
	selp.f32 	%f1120, %f1118, %f1114, %p216;
	selp.f32 	%f1122, %f1119, %f1121, %p217;
	and.b32  	%r534, %r533, 2;
	setp.eq.f32 	%p219, %f1126, %f1386;
	mul.f32 	%f1127, %f1386, 0f00000000;
	setp.eq.s32 	%p238, %r553, 0;
	sub.f32 	%f1179, %f284, %f1175;
	selp.f32 	%f199, %f1182, %f1177, %p239;
	abs.f32 	%f1183, %f1390;
	and.b32  	%r8, %r4, 16;
	abs.f32 	%f1206, %f1394;
	setp.gtu.f32 	%p253, %f1206, 0f7F800000;
	@%p253 bra 	LBB0_148;
// %bb.147:
	mov.b32 	%r560, %f201;
	and.b32  	%r561, %r560, -2147483648;
	mov.b32 	%r562, %f1394;
	or.b32  	%r563, %r561, %r562;
	mov.b32 	%f1394, %r563;
LBB0_148:                               // %__nv_fmodf.exit2512
	or.b32  	%r249, %r248, %r245;
	mul.f32 	%f2, %f286, %f286;
	mul.f32 	%f7, %f320, %f320;
	mul.f32 	%f11, %f355, %f355;
	mul.f32 	%f16, %f389, %f389;
	mul.f32 	%f20, %f424, %f424;
	mul.f32 	%f25, %f458, %f458;
	mul.f32 	%f29, %f493, %f493;
	mul.f32 	%f34, %f527, %f527;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f596, %f596;
	mul.f32 	%f47, %f631, %f631;
	mul.f32 	%f52, %f665, %f665;
	mul.f32 	%f56, %f700, %f700;
	mul.f32 	%f61, %f734, %f734;
	mul.f32 	%f65, %f769, %f769;
	mul.f32 	%f70, %f803, %f803;
	selp.f32 	%f856, %f851, %f855, %p118;
	setp.gt.f32 	%p120, %f859, 0f4B800000;
	add.f32 	%f860, %f91, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p138;
	setp.gt.f32 	%p140, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f964, %f959, %f963, %p158;
	setp.gt.f32 	%p160, %f967, 0f4B800000;
	add.f32 	%f968, %f127, 0f3F800000;
	selp.f32 	%f1017, %f1012, %f1016, %p178;
	setp.gt.f32 	%p180, %f1021, 0f4B800000;
	add.f32 	%f1022, %f1020, 0f3F800000;
	setp.eq.s32 	%p198, %r511, 0;
	sub.f32 	%f1071, %f284, %f1067;
	selp.f32 	%f163, %f1074, %f1069, %p199;
	abs.f32 	%f1075, %f1382;
	setp.eq.s32 	%p218, %r534, 0;
	sub.f32 	%f1124, %f284, %f1120;
	selp.f32 	%f1128, %f1127, %f1122, %p219;
	abs.f32 	%f1129, %f1386;
	selp.f32 	%f1180, %f1175, %f1179, %p238;
	setp.gt.f32 	%p240, %f1183, 0f4B800000;
	add.f32 	%f1184, %f199, 0f3F800000;
	add.f32 	%f1207, %f1394, %f1394;
	mov.b32 	%r576, %f1207;
	and.b32  	%r577, %r576, -2147483648;
	or.b32  	%r578, %r577, 1056964608;
	mov.b32 	%f1208, %r578;
	add.f32 	%f1209, %f1207, %f1208;
	cvt.rzi.f32.f32 	%f1210, %f1209;
	abs.f32 	%f1211, %f1207;
	setp.gt.f32 	%p254, %f1211, 0f4B000000;
	selp.f32 	%f1212, %f1207, %f1210, %p254;
	cvt.rzi.f32.f32 	%f1213, %f1207;
	setp.lt.f32 	%p255, %f1211, 0f3F000000;
	selp.f32 	%f1214, %f1213, %f1212, %p255;
	cvt.rzi.s32.f32 	%r579, %f1214;
	fma.rn.f32 	%f1215, %f1214, 0fBF000000, %f1394;
	mul.f32 	%f1216, %f1215, 0f34222169;
	fma.rn.f32 	%f1217, %f1215, 0f40490FDA, %f1216;
	mul.f32 	%f1218, %f1217, %f1217;
	fma.rn.f32 	%f1219, %f1218, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1220, %f1219, %f1218, 0f3D2AAABB;
	fma.rn.f32 	%f1221, %f1220, %f1218, 0fBEFFFFFF;
	fma.rn.f32 	%f1222, %f1221, %f1218, 0f3F800000;
	fma.rn.f32 	%f1223, %f1218, %f1217, 0f00000000;
	fma.rn.f32 	%f1224, %f1218, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1225, %f1224, %f1218, 0fBE2AAAA8;
	fma.rn.f32 	%f1226, %f1225, %f1223, %f1217;
	and.b32  	%r580, %r579, 1;
	setp.eq.b32 	%p256, %r580, 1;
	selp.f32 	%f1227, %f1222, %f1226, %p256;
	selp.f32 	%f1228, %f1226, %f1222, %p256;
	and.b32  	%r581, %r579, 2;
	setp.eq.s32 	%p257, %r581, 0;
	neg.f32 	%f1229, %f1227;
	selp.f32 	%f1230, %f1227, %f1229, %p257;
	add.s32 	%r582, %r579, 1;
	and.b32  	%r583, %r582, 2;
	setp.eq.s32 	%p258, %r583, 0;
	sub.f32 	%f1232, %f284, %f1228;
	selp.f32 	%f1233, %f1228, %f1232, %p258;
	cvt.rzi.f32.f32 	%f1234, %f1394;
	setp.eq.f32 	%p259, %f1234, %f1394;
	mul.f32 	%f1235, %f1394, 0f00000000;
	selp.f32 	%f1236, %f1235, %f1230, %p259;
	abs.f32 	%f1237, %f1394;
	setp.gt.f32 	%p260, %f1237, 0f4B800000;
	add.f32 	%f1238, %f1236, 0f3F800000;
	cvt.u16.u32 	%rs1, %r4;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	add.s32 	%r585, %r251, %r8;
	neg.s32 	%r586, %r585;
	mad.lo.s32 	%r587, %r19, -32, %r586;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r588, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r589, %rs21;
	sub.s32 	%r590, %r587, %r589;
	shl.b32 	%r591, %r590, 1;
	cvt.rn.f32.s32 	%f1240, %r591;
	div.approx.f32 	%f218, %f1240, %f287;
	abs.f32 	%f1398, %f218;
	setp.lt.f32 	%p261, %f1398, 0f40000000;
	@%p261 bra 	LBB0_160;
// %bb.149:
	setp.gtu.f32 	%p262, %f1398, 0f4B800000;
	@%p262 bra 	LBB0_156;
	bra.uni 	LBB0_150;
LBB0_156:
	mov.b32 	%r124, %f1398;
	and.b32  	%r592, %r124, 8388607;
	or.b32  	%r16164, %r592, 1065353216;
	mov.b32 	%f1397, %r16164;
	add.s32 	%r593, %r124, -1073741824;
	and.b32  	%r16165, %r593, -8388608;
	setp.eq.s32 	%p268, %r16165, 0;
	@%p268 bra 	LBB0_159;
// %bb.157:                             // %__nv_fmaf_rn.exit4.i.i.i2551.preheader
	mov.f32 	%f1251, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1250,%f1251;
	// end inline asm
LBB0_158:                               // %__nv_fmaf_rn.exit4.i.i.i2551
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16165, 192937984;
	add.s32 	%r595, %r594, %r16164;
	mov.b32 	%f1252, %r595;
	mul.f32 	%f1253, %f1250, %f1252;
	sub.f32 	%f1254, %f1252, %f1253;
	fma.rn.f32 	%f1255, %f1254, %f1250, %f1253;
	sub.f32 	%f1256, %f1252, %f1255;
	fma.rz.f32 	%f1257, %f1256, %f1250, %f1255;
	cvt.rzi.f32.f32 	%f1258, %f1257;
	sub.f32 	%f1397, %f1252, %f1258;
	sub.s32 	%r16165, %r16165, %r594;
	mov.b32 	%r16164, %f1397;
	setp.ne.s32 	%p269, %r16165, 0;
	setp.ne.s32 	%p270, %r16164, 0;
	and.pred  	%p271, %p269, %p270;
	@%p271 bra 	LBB0_158;
LBB0_159:                               // %__internal_fmodf_slowpath_mod.exit.i.i2553
	setp.gt.u32 	%p272, %r124, 2139095039;
	selp.f32 	%f1259, 0f7FFFFFFF, 0f4B800000, %p272;
	mul.f32 	%f1260, %f1397, 0f34000000;
	mul.f32 	%f1398, %f1259, %f1260;
	bra.uni 	LBB0_160;
LBB0_150:                               // %__nv_fast_fdividef.exit.i.i.i2523
	div.approx.f32 	%f1243, %f1398, %f255;
	cvt.rzi.f32.f32 	%f1396, %f1243;
	fma.rn.f32 	%f221, %f1396, 0fC0000000, %f1398;
	mov.b32 	%r123, %f221;
	setp.lt.u32 	%p263, %r123, 1073741824;
	@%p263 bra 	LBB0_155;
// %bb.151:
	setp.lt.u32 	%p264, %r123, -2147483647;
	@%p264 bra 	LBB0_153;
// %bb.152:
	add.f32 	%f1248, %f1396, 0fBF800000;
	setp.lt.f32 	%p267, %f221, 0fC0000000;
	add.f32 	%f1249, %f1248, 0fBF800000;
	selp.f32 	%f1396, %f1249, %f1248, %p267;
	bra.uni 	LBB0_155;
LBB0_153:
	add.f32 	%f1396, %f1396, 0f3F800000;
	setp.ltu.f32 	%p265, %f221, 0f40800000;
	@%p265 bra 	LBB0_155;
// %bb.154:                             // %__nv_fmaf_rn.exit.i.i.i2528
	add.f32 	%f1244, %f1396, 0f3F800000;
	fma.rn.f32 	%f1246, %f255, 0fC0400000, %f221;
	setp.ge.f32 	%p266, %f1246, 0f00000000;
	add.f32 	%f1247, %f1244, 0f3F800000;
	selp.f32 	%f1396, %f1247, %f1244, %p266;
LBB0_155:                               // %__internal_fmodf_fastpath_quot.exit.i.i2532
	fma.rn.f32 	%f1398, %f1396, 0fC0000000, %f1398;
LBB0_160:                               // %__internal_fmodf_kernel.exit.i2557
	shr.u32 	%r9, %r249, 1;
	mul.f32 	%f290, %f2, 0f3B8B2FF9;
	mul.f32 	%f324, %f7, 0f3B8B2FF9;
	mul.f32 	%f359, %f11, 0f3B8B2FF9;
	mul.f32 	%f393, %f16, 0f3B8B2FF9;
	mul.f32 	%f428, %f20, 0f3B8B2FF9;
	mul.f32 	%f462, %f25, 0f3B8B2FF9;
	mul.f32 	%f497, %f29, 0f3B8B2FF9;
	mul.f32 	%f531, %f34, 0f3B8B2FF9;
	mul.f32 	%f566, %f38, 0f3B8B2FF9;
	mul.f32 	%f600, %f43, 0f3B8B2FF9;
	mul.f32 	%f635, %f47, 0f3B8B2FF9;
	mul.f32 	%f669, %f52, 0f3B8B2FF9;
	mul.f32 	%f704, %f56, 0f3B8B2FF9;
	mul.f32 	%f738, %f61, 0f3B8B2FF9;
	mul.f32 	%f773, %f65, 0f3B8B2FF9;
	mul.f32 	%f806, %f70, 0f3B8B2FF9;
	selp.f32 	%f92, %f860, %f856, %p120;
	selp.f32 	%f915, %f914, %f909, %p140;
	selp.f32 	%f128, %f968, %f964, %p160;
	selp.f32 	%f1023, %f1022, %f1017, %p180;
	selp.f32 	%f1072, %f1067, %f1071, %p198;
	setp.gt.f32 	%p200, %f1075, 0f4B800000;
	add.f32 	%f1076, %f163, 0f3F800000;
	selp.f32 	%f1125, %f1120, %f1124, %p218;
	setp.gt.f32 	%p220, %f1129, 0f4B800000;
	add.f32 	%f1130, %f1128, 0f3F800000;
	selp.f32 	%f200, %f1184, %f1180, %p240;
	selp.f32 	%f1239, %f1238, %f1233, %p260;
	sub.s32 	%r122, %r587, %r588;
	abs.f32 	%f1261, %f1398;
	setp.gtu.f32 	%p273, %f1261, 0f7F800000;
	@%p273 bra 	LBB0_162;
// %bb.161:
	mov.b32 	%r596, %f218;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1398;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1398, %r599;
LBB0_162:                               // %__nv_fmodf.exit2558
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	mul.wide.u32 	%rd49, %r9, 4;
	mul.f32 	%f6, %f290, %f1348;
	mul.f32 	%f325, %f324, %f1349;
	mul.f32 	%f15, %f359, %f1350;
	mul.f32 	%f394, %f393, %f1351;
	mul.f32 	%f24, %f428, %f1352;
	mul.f32 	%f463, %f462, %f1353;
	mul.f32 	%f33, %f497, %f1354;
	mul.f32 	%f532, %f531, %f1355;
	mul.f32 	%f42, %f566, %f1356;
	mul.f32 	%f601, %f600, %f1357;
	mul.f32 	%f51, %f635, %f1358;
	mul.f32 	%f670, %f669, %f1359;
	mul.f32 	%f60, %f704, %f1360;
	mul.f32 	%f739, %f738, %f1361;
	mul.f32 	%f69, %f773, %f1362;
	mul.f32 	%f807, %f806, %f1363;
	mov.b32 	%r428, %f915;
	mov.b32 	%r427, %f92;
	mov.b32 	%r434, %f912;
	mov.b32 	%r433, %f91;
	mov.b32 	%r476, %f1023;
	mov.b32 	%r475, %f128;
	mov.b32 	%r482, %f1020;
	mov.b32 	%r481, %f127;
	selp.f32 	%f164, %f1076, %f1072, %p200;
	selp.f32 	%f1131, %f1130, %f1125, %p220;
	mov.b32 	%r566, %f1239;
	mov.b32 	%r565, %f200;
	mov.b32 	%r572, %f1236;
	mov.b32 	%r571, %f199;
	add.f32 	%f1262, %f1398, %f1398;
	mov.b32 	%r600, %f1262;
	and.b32  	%r601, %r600, -2147483648;
	or.b32  	%r602, %r601, 1056964608;
	mov.b32 	%f1263, %r602;
	add.f32 	%f1264, %f1262, %f1263;
	cvt.rzi.f32.f32 	%f1265, %f1264;
	abs.f32 	%f1266, %f1262;
	setp.gt.f32 	%p274, %f1266, 0f4B000000;
	selp.f32 	%f1267, %f1262, %f1265, %p274;
	cvt.rzi.f32.f32 	%f1268, %f1262;
	setp.lt.f32 	%p275, %f1266, 0f3F000000;
	selp.f32 	%f1269, %f1268, %f1267, %p275;
	cvt.rzi.s32.f32 	%r603, %f1269;
	fma.rn.f32 	%f1270, %f1269, 0fBF000000, %f1398;
	mul.f32 	%f1271, %f1270, 0f34222169;
	fma.rn.f32 	%f1272, %f1270, 0f40490FDA, %f1271;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1275, %f1274, %f1273, 0f3D2AAABB;
	fma.rn.f32 	%f1276, %f1275, %f1273, 0fBEFFFFFF;
	fma.rn.f32 	%f1277, %f1276, %f1273, 0f3F800000;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1273, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1280, %f1279, %f1273, 0fBE2AAAA8;
	fma.rn.f32 	%f1281, %f1280, %f1278, %f1272;
	and.b32  	%r604, %r603, 1;
	setp.eq.b32 	%p276, %r604, 1;
	selp.f32 	%f1282, %f1277, %f1281, %p276;
	selp.f32 	%f1283, %f1281, %f1277, %p276;
	and.b32  	%r605, %r603, 2;
	setp.eq.s32 	%p277, %r605, 0;
	neg.f32 	%f1284, %f1282;
	selp.f32 	%f1285, %f1282, %f1284, %p277;
	add.s32 	%r606, %r603, 1;
	and.b32  	%r607, %r606, 2;
	setp.eq.s32 	%p278, %r607, 0;
	sub.f32 	%f1287, %f284, %f1283;
	selp.f32 	%f1288, %f1283, %f1287, %p278;
	cvt.rzi.f32.f32 	%f1289, %f1398;
	setp.eq.f32 	%p279, %f1289, %f1398;
	mul.f32 	%f1290, %f1398, 0f00000000;
	selp.f32 	%f235, %f1290, %f1285, %p279;
	abs.f32 	%f1291, %f1398;
	setp.gt.f32 	%p280, %f1291, 0f4B800000;
	add.f32 	%f1292, %f235, 0f3F800000;
	shl.b32 	%r608, %r122, 1;
	cvt.rn.f32.s32 	%f1293, %r608;
	div.approx.f32 	%f237, %f1293, %f287;
	abs.f32 	%f1402, %f237;
	setp.lt.f32 	%p281, %f1402, 0f40000000;
	@%p281 bra 	LBB0_174;
// %bb.163:
	setp.gtu.f32 	%p282, %f1402, 0f4B800000;
	@%p282 bra 	LBB0_170;
	bra.uni 	LBB0_164;
LBB0_170:
	mov.b32 	%r132, %f1402;
	and.b32  	%r609, %r132, 8388607;
	or.b32  	%r16166, %r609, 1065353216;
	mov.b32 	%f1401, %r16166;
	add.s32 	%r610, %r132, -1073741824;
	and.b32  	%r16167, %r610, -8388608;
	setp.eq.s32 	%p288, %r16167, 0;
	@%p288 bra 	LBB0_173;
// %bb.171:                             // %__nv_fmaf_rn.exit4.i.i.i2597.preheader
	mov.f32 	%f1304, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1303,%f1304;
	// end inline asm
LBB0_172:                               // %__nv_fmaf_rn.exit4.i.i.i2597
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r611, %r16167, 192937984;
	add.s32 	%r612, %r611, %r16166;
	mov.b32 	%f1305, %r612;
	mul.f32 	%f1306, %f1303, %f1305;
	sub.f32 	%f1307, %f1305, %f1306;
	fma.rn.f32 	%f1308, %f1307, %f1303, %f1306;
	sub.f32 	%f1309, %f1305, %f1308;
	fma.rz.f32 	%f1310, %f1309, %f1303, %f1308;
	cvt.rzi.f32.f32 	%f1311, %f1310;
	sub.f32 	%f1401, %f1305, %f1311;
	sub.s32 	%r16167, %r16167, %r611;
	mov.b32 	%r16166, %f1401;
	setp.ne.s32 	%p289, %r16167, 0;
	setp.ne.s32 	%p290, %r16166, 0;
	and.pred  	%p291, %p289, %p290;
	@%p291 bra 	LBB0_172;
LBB0_173:                               // %__internal_fmodf_slowpath_mod.exit.i.i2599
	setp.gt.u32 	%p292, %r132, 2139095039;
	selp.f32 	%f1312, 0f7FFFFFFF, 0f4B800000, %p292;
	mul.f32 	%f1313, %f1401, 0f34000000;
	mul.f32 	%f1402, %f1312, %f1313;
	bra.uni 	LBB0_174;
LBB0_164:                               // %__nv_fast_fdividef.exit.i.i.i2569
	div.approx.f32 	%f1296, %f1402, %f255;
	cvt.rzi.f32.f32 	%f1400, %f1296;
	fma.rn.f32 	%f240, %f1400, 0fC0000000, %f1402;
	mov.b32 	%r131, %f240;
	setp.lt.u32 	%p283, %r131, 1073741824;
	@%p283 bra 	LBB0_169;
// %bb.165:
	setp.lt.u32 	%p284, %r131, -2147483647;
	@%p284 bra 	LBB0_167;
// %bb.166:
	add.f32 	%f1301, %f1400, 0fBF800000;
	setp.lt.f32 	%p287, %f240, 0fC0000000;
	add.f32 	%f1302, %f1301, 0fBF800000;
	selp.f32 	%f1400, %f1302, %f1301, %p287;
	bra.uni 	LBB0_169;
LBB0_167:
	add.f32 	%f1400, %f1400, 0f3F800000;
	setp.ltu.f32 	%p285, %f240, 0f40800000;
	@%p285 bra 	LBB0_169;
// %bb.168:                             // %__nv_fmaf_rn.exit.i.i.i2574
	add.f32 	%f1297, %f1400, 0f3F800000;
	fma.rn.f32 	%f1299, %f255, 0fC0400000, %f240;
	setp.ge.f32 	%p286, %f1299, 0f00000000;
	add.f32 	%f1300, %f1297, 0f3F800000;
	selp.f32 	%f1400, %f1300, %f1297, %p286;
LBB0_169:                               // %__internal_fmodf_fastpath_quot.exit.i.i2578
	fma.rn.f32 	%f1402, %f1400, 0fC0000000, %f1402;
LBB0_174:                               // %__internal_fmodf_kernel.exit.i2603
	add.s64 	%rd50, %rd1, %rd49;
	mov.b32 	%r274, %f325;
	mov.b32 	%r273, %f6;
	mov.b32 	%r292, %f394;
	mov.b32 	%r291, %f15;
	mov.b32 	%r310, %f463;
	mov.b32 	%r309, %f24;
	mov.b32 	%r328, %f532;
	mov.b32 	%r327, %f33;
	mov.b32 	%r346, %f601;
	mov.b32 	%r345, %f42;
	mov.b32 	%r364, %f670;
	mov.b32 	%r363, %f51;
	mov.b32 	%r382, %f739;
	mov.b32 	%r381, %f60;
	mov.b32 	%r400, %f807;
	mov.b32 	%r399, %f69;
	xor.b32  	%r479, %r482, -2147483648;
	xor.b32  	%r478, %r481, -2147483648;
	mov.b32 	%r523, %f1131;
	mov.b32 	%r522, %f164;
	mov.b32 	%r526, %f1128;
	mov.b32 	%r525, %f163;
	xor.b32  	%r569, %r572, -2147483648;
	xor.b32  	%r568, %r571, -2147483648;
	selp.f32 	%f236, %f1292, %f1288, %p280;
	abs.f32 	%f1314, %f1402;
	setp.gtu.f32 	%p293, %f1314, 0f7F800000;
	@%p293 bra 	LBB0_176;
// %bb.175:
	mov.b32 	%r613, %f237;
	and.b32  	%r614, %r613, -2147483648;
	mov.b32 	%r615, %f1402;
	or.b32  	%r616, %r614, %r615;
	mov.b32 	%f1402, %r616;
LBB0_176:                               // %__nv_fmodf.exit2604
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r10, [%rd50];
	ld.global.u32 	%r11, [%rd50+128];
	// begin inline asm
	cvt.rn.f16x2.f32 %r272, %r274, %r273;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r290, %r292, %r291;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r308, %r310, %r309;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r326, %r328, %r327;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r344, %r346, %r345;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r362, %r364, %r363;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r380, %r382, %r381;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r398, %r400, %r399;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r426, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r429, %r428, %r427;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r432, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r435, %r434, %r433;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r482, %r481;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r476, %r475;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r521, %r523, %r522;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r524, %r526, %r525;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r564, %r566, %r565;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r567, %r569, %r568;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r570, %r572, %r571;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r573, %r566, %r565;
	// end inline asm
	add.f32 	%f1315, %f1402, %f1402;
	mov.b32 	%r624, %f1315;
	and.b32  	%r625, %r624, -2147483648;
	or.b32  	%r626, %r625, 1056964608;
	mov.b32 	%f1316, %r626;
	add.f32 	%f1317, %f1315, %f1316;
	cvt.rzi.f32.f32 	%f1318, %f1317;
	abs.f32 	%f1319, %f1315;
	setp.gt.f32 	%p294, %f1319, 0f4B000000;
	selp.f32 	%f1320, %f1315, %f1318, %p294;
	cvt.rzi.f32.f32 	%f1321, %f1315;
	setp.lt.f32 	%p295, %f1319, 0f3F000000;
	selp.f32 	%f1322, %f1321, %f1320, %p295;
	cvt.rzi.s32.f32 	%r627, %f1322;
	fma.rn.f32 	%f1323, %f1322, 0fBF000000, %f1402;
	mul.f32 	%f1324, %f1323, 0f34222169;
	fma.rn.f32 	%f1325, %f1323, 0f40490FDA, %f1324;
	mul.f32 	%f1326, %f1325, %f1325;
	fma.rn.f32 	%f1327, %f1326, 0f37CBAC00, 0fBAB607ED;
	fma.rn.f32 	%f1328, %f1327, %f1326, 0f3D2AAABB;
	fma.rn.f32 	%f1329, %f1328, %f1326, 0fBEFFFFFF;
	fma.rn.f32 	%f1330, %f1329, %f1326, 0f3F800000;
	fma.rn.f32 	%f1331, %f1326, %f1325, 0f00000000;
	fma.rn.f32 	%f1332, %f1326, 0fB94D4153, 0f3C0885E4;
	fma.rn.f32 	%f1333, %f1332, %f1326, 0fBE2AAAA8;
	fma.rn.f32 	%f1334, %f1333, %f1331, %f1325;
	and.b32  	%r628, %r627, 1;
	setp.eq.b32 	%p296, %r628, 1;
	selp.f32 	%f1335, %f1330, %f1334, %p296;
	selp.f32 	%f1336, %f1334, %f1330, %p296;
	and.b32  	%r629, %r627, 2;
	setp.eq.s32 	%p297, %r629, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p297;
	add.s32 	%r630, %r627, 1;
	and.b32  	%r631, %r630, 2;
	setp.eq.s32 	%p298, %r631, 0;
	sub.f32 	%f1340, %f284, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p298;
	cvt.rzi.f32.f32 	%f1342, %f1402;
	setp.eq.f32 	%p299, %f1342, %f1402;
	mul.f32 	%f1343, %f1402, 0f00000000;
	selp.f32 	%f1344, %f1343, %f1338, %p299;
	abs.f32 	%f1345, %f1402;
	setp.gt.f32 	%p300, %f1345, 0f4B800000;
	add.f32 	%f1346, %f1344, 0f3F800000;
	selp.f32 	%f1347, %f1346, %f1341, %p300;
	mov.b32 	%r619, %f1347;
	mov.b32 	%r618, %f236;
	// begin inline asm
	cvt.rn.f16x2.f32 %r617, %r619, %r618;
	// end inline asm
	mov.b32 	%r622, %f1344;
	mov.b32 	%r621, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r620, %r622, %r621;
	// end inline asm
	shl.b32 	%r632, %r4, 3;
	and.b32  	%r633, %r632, 64;
	and.b32  	%r634, %r6, 32;
	or.b32  	%r635, %r633, %r1;
	or.b32  	%r141, %r635, %r634;
	and.b32  	%r636, %r7, 28;
	shl.b32 	%r637, %r3, 5;
	and.b32  	%r638, %r637, 96;
	or.b32  	%r142, %r638, %r636;
	and.b32  	%r143, %r637, 128;
	and.b32  	%r144, %r4, 8;
	and.b32  	%r639, %r1, 1;
	shr.u32 	%r640, %r1, 3;
	mul.lo.s32 	%r641, %r640, 260;
	shl.b32 	%r642, %r4, 4;
	or.b32  	%r643, %r144, %r642;
	shr.u32 	%r644, %r643, 2;
	and.b32  	%r645, %r644, 30;
	shr.u32 	%r646, %r1, 1;
	bfe.u32 	%r647, %r1, 1, 1;
	bfe.u32 	%r648, %r1, 2, 1;
	mad.lo.s32 	%r649, %r639, 2080, %r641;
	mad.lo.s32 	%r650, %r17, 65, %r649;
	mad.lo.s32 	%r651, %r647, 1040, %r650;
	mad.lo.s32 	%r652, %r648, 520, %r651;
	add.s32 	%r653, %r652, %r645;
	mul.wide.u32 	%rd51, %r653, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	add.s32 	%r654, %r653, 32;
	mul.wide.u32 	%rd53, %r654, 4;
	add.s64 	%rd6, %rd52, %rd53;
	add.s32 	%r655, %r653, 1;
	mul.wide.u32 	%rd54, %r655, 4;
	add.s64 	%rd7, %rd52, %rd54;
	add.s32 	%r656, %r653, 33;
	mul.wide.u32 	%rd55, %r656, 4;
	add.s64 	%rd8, %rd52, %rd55;
	add.s32 	%r657, %r653, 130;
	mul.wide.u32 	%rd56, %r657, 4;
	add.s64 	%rd9, %rd52, %rd56;
	add.s32 	%r658, %r653, 162;
	mul.wide.u32 	%rd57, %r658, 4;
	add.s64 	%rd10, %rd52, %rd57;
	add.s32 	%r659, %r653, 131;
	mul.wide.u32 	%rd58, %r659, 4;
	add.s64 	%rd11, %rd52, %rd58;
	add.s32 	%r660, %r653, 163;
	mul.wide.u32 	%rd59, %r660, 4;
	add.s64 	%rd12, %rd52, %rd59;
	mul.lo.s32 	%r661, %r14, 130;
	and.b32  	%r662, %r2, 32;
	mul.lo.s32 	%r663, %r16, 260;
	mul.lo.s32 	%r664, %r19, 1040;
	mul.lo.s32 	%r665, %r13, 65;
	mul.lo.s32 	%r666, %r17, 520;
	or.b32  	%r667, %r662, %r646;
	add.s32 	%r668, %r667, %r661;
	add.s32 	%r669, %r668, %r666;
	add.s32 	%r670, %r669, %r663;
	add.s32 	%r671, %r670, %r664;
	add.s32 	%r672, %r671, %r665;
	or.b32  	%r673, %r646, 8;
	add.s32 	%r674, %r661, %r662;
	add.s32 	%r675, %r674, %r673;
	add.s32 	%r676, %r675, %r666;
	add.s32 	%r677, %r676, %r663;
	add.s32 	%r678, %r677, %r664;
	add.s32 	%r679, %r678, %r665;
	or.b32  	%r680, %r646, 16;
	add.s32 	%r681, %r674, %r680;
	add.s32 	%r682, %r681, %r666;
	add.s32 	%r683, %r682, %r663;
	add.s32 	%r684, %r683, %r664;
	add.s32 	%r685, %r684, %r665;
	or.b32  	%r686, %r646, 24;
	add.s32 	%r687, %r674, %r686;
	add.s32 	%r688, %r687, %r666;
	add.s32 	%r689, %r688, %r663;
	add.s32 	%r690, %r689, %r664;
	add.s32 	%r691, %r690, %r665;
	or.b32  	%r692, %r646, 2080;
	add.s32 	%r693, %r674, %r692;
	add.s32 	%r694, %r693, %r666;
	add.s32 	%r695, %r694, %r663;
	add.s32 	%r696, %r695, %r664;
	add.s32 	%r697, %r696, %r665;
	add.s32 	%r698, %r674, 2080;
	add.s32 	%r699, %r698, %r673;
	add.s32 	%r700, %r699, %r666;
	add.s32 	%r701, %r700, %r663;
	add.s32 	%r702, %r701, %r664;
	add.s32 	%r703, %r702, %r665;
	add.s32 	%r704, %r698, %r680;
	add.s32 	%r705, %r704, %r666;
	add.s32 	%r706, %r705, %r663;
	add.s32 	%r707, %r706, %r664;
	add.s32 	%r708, %r707, %r665;
	add.s32 	%r709, %r698, %r686;
	add.s32 	%r710, %r709, %r666;
	add.s32 	%r711, %r710, %r663;
	add.s32 	%r712, %r711, %r664;
	add.s32 	%r713, %r712, %r665;
	mul.lo.s32 	%r714, %r9, 65;
	add.s32 	%r715, %r714, %r667;
	or.b32  	%r716, %r673, %r662;
	add.s32 	%r717, %r714, %r716;
	or.b32  	%r718, %r680, %r662;
	add.s32 	%r719, %r714, %r718;
	or.b32  	%r720, %r686, %r662;
	add.s32 	%r721, %r714, %r720;
	shl.b32 	%r722, %r3, 4;
	and.b32  	%r723, %r722, 1920;
	add.s32 	%r724, %r714, 2080;
	add.s32 	%r725, %r724, %r667;
	add.s32 	%r726, %r724, %r716;
	add.s32 	%r727, %r724, %r718;
	add.s32 	%r728, %r724, %r720;
	shl.b32 	%r729, %r1, 1;
	or.b32  	%r730, %r17, %r729;
	mul.lo.s32 	%r731, %r730, 65;
	add.s32 	%r732, %r645, %r731;
	mul.wide.u32 	%rd60, %r732, 4;
	add.s64 	%rd13, %rd52, %rd60;
	cvt.u64.u32 	%rd61, %r645;
	cvt.u64.u32 	%rd62, %r731;
	add.s64 	%rd63, %rd62, %rd61;
	shl.b64 	%rd64, %rd63, 2;
	add.s64 	%rd14, %rd52, %rd64;
	or.b32  	%r733, %r730, 32;
	mul.lo.s32 	%r734, %r733, 65;
	add.s32 	%r735, %r645, %r734;
	mul.wide.u32 	%rd65, %r735, 4;
	add.s64 	%rd15, %rd52, %rd65;
	cvt.u64.u32 	%rd66, %r734;
	add.s64 	%rd67, %rd61, %rd66;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd16, %rd52, %rd68;
	shl.b32 	%r736, %r1, 2;
	or.b32  	%r737, %r18, %r736;
	or.b32  	%r738, %r143, %r142;
	or.b32  	%r739, %r737, %r723;
	shl.b32 	%r740, %r739, 8;
	or.b32  	%r741, %r738, %r740;
	or.b32  	%r145, %r741, -1572864;
	or.b32  	%r146, %r741, -1556480;
	mul.wide.u32 	%rd17, %r728, 4;
	mul.wide.u32 	%rd18, %r727, 4;
	mul.wide.u32 	%rd19, %r726, 4;
	mul.wide.u32 	%rd20, %r725, 4;
	mul.wide.u32 	%rd21, %r721, 4;
	mul.wide.u32 	%rd22, %r719, 4;
	mul.wide.u32 	%rd23, %r717, 4;
	mul.wide.u32 	%rd24, %r715, 4;
	mul.wide.u32 	%rd25, %r713, 4;
	mul.wide.u32 	%rd26, %r708, 4;
	mul.wide.u32 	%rd27, %r703, 4;
	mul.wide.u32 	%rd28, %r697, 4;
	mul.wide.u32 	%rd29, %r691, 4;
	mul.wide.u32 	%rd30, %r685, 4;
	mul.wide.u32 	%rd31, %r679, 4;
	mul.wide.u32 	%rd32, %r672, 4;
	mov.u32 	%r16194, 0;
	setp.eq.s32 	%p301, %r144, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16195, %r16194;
	mov.u32 	%r16196, %r16194;
	mov.u32 	%r16197, %r16194;
	mov.u32 	%r16198, %r16194;
	mov.u32 	%r16199, %r16194;
	mov.u32 	%r16200, %r16194;
	mov.u32 	%r16201, %r16194;
	mov.u32 	%r16202, %r16194;
	mov.u32 	%r16203, %r16194;
	mov.u32 	%r16204, %r16194;
	mov.u32 	%r16205, %r16194;
	mov.u32 	%r16206, %r16194;
	mov.u32 	%r16207, %r16194;
	mov.u32 	%r16208, %r16194;
	mov.u32 	%r16209, %r16194;
	mov.u32 	%r16210, %r16194;
	mov.u32 	%r16211, %r16194;
	mov.u32 	%r16212, %r16194;
	mov.u32 	%r16213, %r16194;
	mov.u32 	%r16214, %r16194;
	mov.u32 	%r16215, %r16194;
	mov.u32 	%r16216, %r16194;
	mov.u32 	%r16217, %r16194;
	mov.u32 	%r16192, %r16194;
	bra.uni 	LBB0_177;
LBB0_181:                               // %L63541
                                        //   in Loop: Header=BB0_177 Depth=1
	add.s32 	%r16192, %r171, 256;
	setp.gt.s32 	%p306, %r5, %r16192;
	setp.ne.s32 	%p307, %r171, 65280;
	and.pred  	%p308, %p307, %p306;
	@%p308 bra 	LBB0_177;
	bra.uni 	LBB0_182;
LBB0_177:                               // %L2061
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_178 Depth 2
	mov.u32 	%r171, %r16192;
	or.b32  	%r775, %r141, %r171;
	shl.b32 	%r776, %r775, 12;
	or.b32  	%r777, %r776, %r142;
	or.b32  	%r778, %r777, %r143;
	mul.wide.s32 	%rd70, %r778, 4;
	add.s64 	%rd71, %rd2, %rd70;
	ld.global.v4.u32 	{%r779, %r780, %r781, %r782}, [%rd71];
	or.b32  	%r783, %r778, 65536;
	mul.wide.s32 	%rd72, %r783, 4;
	add.s64 	%rd73, %rd2, %rd72;
	ld.global.v4.u32 	{%r784, %r785, %r786, %r787}, [%rd73];
	selp.b32 	%r788, %r781, %r779, %p301;
	shfl.sync.bfly.b32	%r789, %r788, 8, 31, -1;
	selp.b32 	%r743, %r779, %r789, %p301;
	selp.b32 	%r744, %r789, %r781, %p301;
	selp.b32 	%r790, %r782, %r780, %p301;
	shfl.sync.bfly.b32	%r791, %r790, 8, 31, -1;
	selp.b32 	%r751, %r780, %r791, %p301;
	selp.b32 	%r752, %r791, %r782, %p301;
	selp.b32 	%r792, %r786, %r784, %p301;
	shfl.sync.bfly.b32	%r793, %r792, 8, 31, -1;
	selp.b32 	%r759, %r784, %r793, %p301;
	selp.b32 	%r760, %r793, %r786, %p301;
	selp.b32 	%r794, %r787, %r785, %p301;
	shfl.sync.bfly.b32	%r795, %r794, 8, 31, -1;
	selp.b32 	%r767, %r785, %r795, %p301;
	selp.b32 	%r768, %r795, %r787, %p301;
	mov.u32 	%r769, 21520;
	// begin inline asm
	prmt.b32 %r742, %r743, %r744, %r769;
	// end inline asm
	mov.u32 	%r773, 30258;
	// begin inline asm
	prmt.b32 %r746, %r743, %r744, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r750, %r751, %r752, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r754, %r751, %r752, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r758, %r759, %r760, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r762, %r759, %r760, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r766, %r767, %r768, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r767, %r768, %r773;
	// end inline asm
	st.shared.u32 	[%rd5], %r742;
	st.shared.u32 	[%rd6], %r746;
	st.shared.u32 	[%rd7], %r750;
	st.shared.u32 	[%rd8], %r754;
	st.shared.u32 	[%rd9], %r758;
	st.shared.u32 	[%rd10], %r762;
	st.shared.u32 	[%rd11], %r766;
	st.shared.u32 	[%rd12], %r770;
	bar.sync 	0;
	mov.u32 	%r16193, 256;
	mov.u64 	%rd94, %rd52;
LBB0_178:                               // %L9059
                                        //   Parent Loop BB0_177 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s64 	%rd74, %rd94, %rd32;
	ld.shared.u32 	%r16060, [%rd74];
	add.s64 	%rd75, %rd94, %rd31;
	ld.shared.u32 	%r16061, [%rd75];
	add.s64 	%rd76, %rd94, %rd30;
	ld.shared.u32 	%r16062, [%rd76];
	add.s64 	%rd77, %rd94, %rd29;
	ld.shared.u32 	%r16063, [%rd77];
	add.s64 	%rd78, %rd94, %rd28;
	ld.shared.u32 	%r16064, [%rd78];
	add.s64 	%rd79, %rd94, %rd27;
	ld.shared.u32 	%r16065, [%rd79];
	add.s64 	%rd80, %rd94, %rd26;
	ld.shared.u32 	%r16066, [%rd80];
	add.s64 	%rd81, %rd94, %rd25;
	ld.shared.u32 	%r16067, [%rd81];
	// begin inline asm
	mov.b32 %r801, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r812, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r800, %r16060, -2004318072;
	mov.u32 	%r799, 983055;
	// begin inline asm
	lop3.b32 %r798, %r799, %r800, %r801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r803, %r801, %r802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r806, %r798, %r803;
	// end inline asm
	mov.u32 	%r810, 15728880;
	// begin inline asm
	lop3.b32 %r809, %r810, %r800, %r812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r814, %r812, %r813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r817, %r809, %r814;
	// end inline asm
	shr.u32 	%r822, %r800, 8;
	// begin inline asm
	lop3.b32 %r820, %r799, %r822, %r801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r825, %r801, %r824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r828, %r820, %r825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r831, %r810, %r822, %r812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r836, %r812, %r835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r839, %r831, %r836;
	// end inline asm
	// begin inline asm
	mov.b32 %r847, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r858, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r846, %r16061, -2004318072;
	// begin inline asm
	lop3.b32 %r844, %r799, %r846, %r847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r849, %r847, %r848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r852, %r844, %r849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r855, %r810, %r846, %r858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r860, %r858, %r859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r863, %r855, %r860;
	// end inline asm
	shr.u32 	%r868, %r846, 8;
	// begin inline asm
	lop3.b32 %r866, %r799, %r868, %r847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r871, %r847, %r870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r874, %r866, %r871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r877, %r810, %r868, %r858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r882, %r858, %r881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r885, %r877, %r882;
	// end inline asm
	// begin inline asm
	mov.b32 %r893, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r904, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r892, %r16062, -2004318072;
	// begin inline asm
	lop3.b32 %r890, %r799, %r892, %r893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r895, %r893, %r894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r898, %r890, %r895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r901, %r810, %r892, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r906, %r904, %r905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r909, %r901, %r906;
	// end inline asm
	shr.u32 	%r914, %r892, 8;
	// begin inline asm
	lop3.b32 %r912, %r799, %r914, %r893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r917, %r893, %r916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r920, %r912, %r917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r923, %r810, %r914, %r904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r928, %r904, %r927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r931, %r923, %r928;
	// end inline asm
	// begin inline asm
	mov.b32 %r939, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r950, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r938, %r16063, -2004318072;
	// begin inline asm
	lop3.b32 %r936, %r799, %r938, %r939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r941, %r939, %r940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r944, %r936, %r941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r947, %r810, %r938, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r952, %r950, %r951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r955, %r947, %r952;
	// end inline asm
	shr.u32 	%r960, %r938, 8;
	// begin inline asm
	lop3.b32 %r958, %r799, %r960, %r939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r963, %r939, %r962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r966, %r958, %r963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r969, %r810, %r960, %r950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r974, %r950, %r973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r977, %r969, %r974;
	// end inline asm
	// begin inline asm
	mov.b32 %r985, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r996, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r984, %r16064, -2004318072;
	// begin inline asm
	lop3.b32 %r982, %r799, %r984, %r985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r987, %r985, %r986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r990, %r982, %r987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r993, %r810, %r984, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r998, %r996, %r997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1001, %r993, %r998;
	// end inline asm
	shr.u32 	%r1006, %r984, 8;
	// begin inline asm
	lop3.b32 %r1004, %r799, %r1006, %r985, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1009, %r985, %r1008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1012, %r1004, %r1009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1015, %r810, %r1006, %r996, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1020, %r996, %r1019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1023, %r1015, %r1020;
	// end inline asm
	// begin inline asm
	mov.b32 %r1031, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1042, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1030, %r16065, -2004318072;
	// begin inline asm
	lop3.b32 %r1028, %r799, %r1030, %r1031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1033, %r1031, %r1032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1036, %r1028, %r1033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1039, %r810, %r1030, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1044, %r1042, %r1043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1047, %r1039, %r1044;
	// end inline asm
	shr.u32 	%r1052, %r1030, 8;
	// begin inline asm
	lop3.b32 %r1050, %r799, %r1052, %r1031, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1055, %r1031, %r1054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1058, %r1050, %r1055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1061, %r810, %r1052, %r1042, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1066, %r1042, %r1065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1069, %r1061, %r1066;
	// end inline asm
	// begin inline asm
	mov.b32 %r1077, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1088, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1076, %r16066, -2004318072;
	// begin inline asm
	lop3.b32 %r1074, %r799, %r1076, %r1077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1079, %r1077, %r1078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1082, %r1074, %r1079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1085, %r810, %r1076, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1090, %r1088, %r1089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1093, %r1085, %r1090;
	// end inline asm
	shr.u32 	%r1098, %r1076, 8;
	// begin inline asm
	lop3.b32 %r1096, %r799, %r1098, %r1077, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1101, %r1077, %r1100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1104, %r1096, %r1101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1107, %r810, %r1098, %r1088, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1112, %r1088, %r1111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1115, %r1107, %r1112;
	// end inline asm
	// begin inline asm
	mov.b32 %r1123, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1134, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1122, %r16067, -2004318072;
	// begin inline asm
	lop3.b32 %r1120, %r799, %r1122, %r1123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1125, %r1123, %r1124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1128, %r1120, %r1125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1131, %r810, %r1122, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1136, %r1134, %r1135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1139, %r1131, %r1136;
	// end inline asm
	shr.u32 	%r1144, %r1122, 8;
	// begin inline asm
	lop3.b32 %r1142, %r799, %r1144, %r1123, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1147, %r1123, %r1146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1150, %r1142, %r1147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1153, %r810, %r1144, %r1134, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1158, %r1134, %r1157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1161, %r1153, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1164, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1166, %r1164, %r806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1169, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1171, %r1169, %r817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1174, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1176, %r1174, %r828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1179, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1181, %r1179, %r839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1184, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1186, %r1184, %r852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1189, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1191, %r1189, %r863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1194, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1196, %r1194, %r874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1199, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1201, %r1199, %r885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1204, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1206, %r1204, %r898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1209, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1211, %r1209, %r909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1214, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1216, %r1214, %r920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1219, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1221, %r1219, %r931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1224, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1226, %r1224, %r944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1229, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1231, %r1229, %r955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1234, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1236, %r1234, %r966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1239, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1241, %r1239, %r977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1244, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1246, %r1244, %r990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1249, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1251, %r1249, %r1001;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1254, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1256, %r1254, %r1012;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1259, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1261, %r1259, %r1023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r1036;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r1047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r1058;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r1069;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r1082;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r1093;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r1104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r1115;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r1128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1139;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1150;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1161;
	// end inline asm
	// begin inline asm
	mov.b32 %r1329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1340, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1328, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r1326, %r799, %r1328, %r1329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1331, %r1329, %r1330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1334, %r1326, %r1331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1337, %r810, %r1328, %r1340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1342, %r1340, %r1341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1345, %r1337, %r1342;
	// end inline asm
	shr.u32 	%r1350, %r1328, 8;
	// begin inline asm
	lop3.b32 %r1348, %r799, %r1350, %r1329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1353, %r1329, %r1352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1356, %r1348, %r1353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1359, %r810, %r1350, %r1340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1364, %r1340, %r1363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1367, %r1359, %r1364;
	// end inline asm
	// begin inline asm
	mov.b32 %r1375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1386, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1374, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1372, %r799, %r1374, %r1375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1377, %r1375, %r1376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1380, %r1372, %r1377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1383, %r810, %r1374, %r1386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1388, %r1386, %r1387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1391, %r1383, %r1388;
	// end inline asm
	shr.u32 	%r1396, %r1374, 8;
	// begin inline asm
	lop3.b32 %r1394, %r799, %r1396, %r1375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1399, %r1375, %r1398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1402, %r1394, %r1399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1405, %r810, %r1396, %r1386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1410, %r1386, %r1409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1413, %r1405, %r1410;
	// end inline asm
	// begin inline asm
	mov.b32 %r1421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1432, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1420, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r1418, %r799, %r1420, %r1421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1423, %r1421, %r1422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1426, %r1418, %r1423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1429, %r810, %r1420, %r1432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1434, %r1432, %r1433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1437, %r1429, %r1434;
	// end inline asm
	shr.u32 	%r1442, %r1420, 8;
	// begin inline asm
	lop3.b32 %r1440, %r799, %r1442, %r1421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1445, %r1421, %r1444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1448, %r1440, %r1445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1451, %r810, %r1442, %r1432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1456, %r1432, %r1455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1459, %r1451, %r1456;
	// end inline asm
	// begin inline asm
	mov.b32 %r1467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1478, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1466, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r1464, %r799, %r1466, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1469, %r1467, %r1468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1472, %r1464, %r1469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1475, %r810, %r1466, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1480, %r1478, %r1479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1483, %r1475, %r1480;
	// end inline asm
	shr.u32 	%r1488, %r1466, 8;
	// begin inline asm
	lop3.b32 %r1486, %r799, %r1488, %r1467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1491, %r1467, %r1490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1494, %r1486, %r1491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1497, %r810, %r1488, %r1478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1502, %r1478, %r1501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1505, %r1497, %r1502;
	// end inline asm
	// begin inline asm
	mov.b32 %r1513, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1524, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1512, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r1510, %r799, %r1512, %r1513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1514, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1515, %r1513, %r1514;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1518, %r1510, %r1515;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1521, %r810, %r1512, %r1524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1526, %r1524, %r1525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1529, %r1521, %r1526;
	// end inline asm
	shr.u32 	%r1534, %r1512, 8;
	// begin inline asm
	lop3.b32 %r1532, %r799, %r1534, %r1513, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1537, %r1513, %r1536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1540, %r1532, %r1537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1543, %r810, %r1534, %r1524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1548, %r1524, %r1547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1551, %r1543, %r1548;
	// end inline asm
	// begin inline asm
	mov.b32 %r1559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1570, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1558, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r1556, %r799, %r1558, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1560, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1561, %r1559, %r1560;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1564, %r1556, %r1561;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1567, %r810, %r1558, %r1570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1572, %r1570, %r1571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1575, %r1567, %r1572;
	// end inline asm
	shr.u32 	%r1580, %r1558, 8;
	// begin inline asm
	lop3.b32 %r1578, %r799, %r1580, %r1559, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1583, %r1559, %r1582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1586, %r1578, %r1583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1589, %r810, %r1580, %r1570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1594, %r1570, %r1593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1597, %r1589, %r1594;
	// end inline asm
	// begin inline asm
	mov.b32 %r1605, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1616, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1604, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r1602, %r799, %r1604, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1606, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1607, %r1605, %r1606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1610, %r1602, %r1607;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1613, %r810, %r1604, %r1616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1618, %r1616, %r1617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1621, %r1613, %r1618;
	// end inline asm
	shr.u32 	%r1626, %r1604, 8;
	// begin inline asm
	lop3.b32 %r1624, %r799, %r1626, %r1605, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1629, %r1605, %r1628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1632, %r1624, %r1629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1635, %r810, %r1626, %r1616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1640, %r1616, %r1639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1643, %r1635, %r1640;
	// end inline asm
	// begin inline asm
	mov.b32 %r1651, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1662, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1650, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r1648, %r799, %r1650, %r1651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1653, %r1651, %r1652;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1656, %r1648, %r1653;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1659, %r810, %r1650, %r1662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1664, %r1662, %r1663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1667, %r1659, %r1664;
	// end inline asm
	shr.u32 	%r1672, %r1650, 8;
	// begin inline asm
	lop3.b32 %r1670, %r799, %r1672, %r1651, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1675, %r1651, %r1674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1678, %r1670, %r1675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1681, %r810, %r1672, %r1662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1686, %r1662, %r1685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1689, %r1681, %r1686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1692, %r272, %r1334, %r1166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1696, %r272, %r1345, %r1171;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1700, %r272, %r1356, %r1176;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1704, %r272, %r1367, %r1181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1708, %r272, %r1380, %r1186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1712, %r272, %r1391, %r1191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1716, %r272, %r1402, %r1196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1720, %r272, %r1413, %r1201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1724, %r272, %r1426, %r1206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1728, %r272, %r1437, %r1211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1732, %r272, %r1448, %r1216;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1736, %r272, %r1459, %r1221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1740, %r272, %r1472, %r1226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1744, %r272, %r1483, %r1231;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1748, %r272, %r1494, %r1236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1752, %r272, %r1505, %r1241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1756, %r290, %r1518, %r1246;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1760, %r290, %r1529, %r1251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1764, %r290, %r1540, %r1256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1768, %r290, %r1551, %r1261;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1772, %r290, %r1564, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1776, %r290, %r1575, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1780, %r290, %r1586, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1784, %r290, %r1597, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1788, %r290, %r1610, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r290, %r1621, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r290, %r1632, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r290, %r1643, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r290, %r1656, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r290, %r1667, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r290, %r1678, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r290, %r1689, %r1321;
	// end inline asm
	// begin inline asm
	mov.b32 %r1825, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1836, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1824, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r1822, %r799, %r1824, %r1825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1827, %r1825, %r1826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1830, %r1822, %r1827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1833, %r810, %r1824, %r1836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1838, %r1836, %r1837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1841, %r1833, %r1838;
	// end inline asm
	shr.u32 	%r1846, %r1824, 8;
	// begin inline asm
	lop3.b32 %r1844, %r799, %r1846, %r1825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1849, %r1825, %r1848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1852, %r1844, %r1849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1855, %r810, %r1846, %r1836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1860, %r1836, %r1859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1863, %r1855, %r1860;
	// end inline asm
	// begin inline asm
	mov.b32 %r1871, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1882, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1870, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1868, %r799, %r1870, %r1871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1873, %r1871, %r1872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1876, %r1868, %r1873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1879, %r810, %r1870, %r1882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1884, %r1882, %r1883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1887, %r1879, %r1884;
	// end inline asm
	shr.u32 	%r1892, %r1870, 8;
	// begin inline asm
	lop3.b32 %r1890, %r799, %r1892, %r1871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1895, %r1871, %r1894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1898, %r1890, %r1895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1901, %r810, %r1892, %r1882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1906, %r1882, %r1905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1909, %r1901, %r1906;
	// end inline asm
	// begin inline asm
	mov.b32 %r1917, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1928, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1916, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r1914, %r799, %r1916, %r1917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1919, %r1917, %r1918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1922, %r1914, %r1919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1925, %r810, %r1916, %r1928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1930, %r1928, %r1929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1933, %r1925, %r1930;
	// end inline asm
	shr.u32 	%r1938, %r1916, 8;
	// begin inline asm
	lop3.b32 %r1936, %r799, %r1938, %r1917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1941, %r1917, %r1940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1944, %r1936, %r1941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1947, %r810, %r1938, %r1928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1952, %r1928, %r1951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1955, %r1947, %r1952;
	// end inline asm
	// begin inline asm
	mov.b32 %r1963, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1974, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1962, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r1960, %r799, %r1962, %r1963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1965, %r1963, %r1964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1968, %r1960, %r1965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1971, %r810, %r1962, %r1974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1976, %r1974, %r1975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1979, %r1971, %r1976;
	// end inline asm
	shr.u32 	%r1984, %r1962, 8;
	// begin inline asm
	lop3.b32 %r1982, %r799, %r1984, %r1963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1987, %r1963, %r1986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1990, %r1982, %r1987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1993, %r810, %r1984, %r1974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1998, %r1974, %r1997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2001, %r1993, %r1998;
	// end inline asm
	// begin inline asm
	mov.b32 %r2009, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2020, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2008, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r2006, %r799, %r2008, %r2009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2010, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2011, %r2009, %r2010;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2014, %r2006, %r2011;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2017, %r810, %r2008, %r2020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2021, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2022, %r2020, %r2021;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2025, %r2017, %r2022;
	// end inline asm
	shr.u32 	%r2030, %r2008, 8;
	// begin inline asm
	lop3.b32 %r2028, %r799, %r2030, %r2009, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2033, %r2009, %r2032;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2036, %r2028, %r2033;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2039, %r810, %r2030, %r2020, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2043, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2044, %r2020, %r2043;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2047, %r2039, %r2044;
	// end inline asm
	// begin inline asm
	mov.b32 %r2055, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2066, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2054, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r2052, %r799, %r2054, %r2055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2056, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2057, %r2055, %r2056;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2060, %r2052, %r2057;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2063, %r810, %r2054, %r2066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2068, %r2066, %r2067;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2071, %r2063, %r2068;
	// end inline asm
	shr.u32 	%r2076, %r2054, 8;
	// begin inline asm
	lop3.b32 %r2074, %r799, %r2076, %r2055, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2078, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2079, %r2055, %r2078;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2082, %r2074, %r2079;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2085, %r810, %r2076, %r2066, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2089, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2090, %r2066, %r2089;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2093, %r2085, %r2090;
	// end inline asm
	// begin inline asm
	mov.b32 %r2101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2112, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2100, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r2098, %r799, %r2100, %r2101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2103, %r2101, %r2102;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2106, %r2098, %r2103;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2109, %r810, %r2100, %r2112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2114, %r2112, %r2113;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2117, %r2109, %r2114;
	// end inline asm
	shr.u32 	%r2122, %r2100, 8;
	// begin inline asm
	lop3.b32 %r2120, %r799, %r2122, %r2101, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2124, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2125, %r2101, %r2124;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2128, %r2120, %r2125;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2131, %r810, %r2122, %r2112, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2135, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2136, %r2112, %r2135;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2139, %r2131, %r2136;
	// end inline asm
	// begin inline asm
	mov.b32 %r2147, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2158, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2146, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r2144, %r799, %r2146, %r2147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2149, %r2147, %r2148;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2152, %r2144, %r2149;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2155, %r810, %r2146, %r2158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2159, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2160, %r2158, %r2159;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2163, %r2155, %r2160;
	// end inline asm
	shr.u32 	%r2168, %r2146, 8;
	// begin inline asm
	lop3.b32 %r2166, %r799, %r2168, %r2147, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2171, %r2147, %r2170;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2174, %r2166, %r2171;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2177, %r810, %r2168, %r2158, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2182, %r2158, %r2181;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2185, %r2177, %r2182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2188, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2190, %r2188, %r1830, %r1692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2194, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2196, %r2194, %r1841, %r1696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2200, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2202, %r2200, %r1852, %r1700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2208, %r2206, %r1863, %r1704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2212, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2214, %r2212, %r1876, %r1708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2218, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r2218, %r1887, %r1712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r2224, %r1898, %r1716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2230, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r2230, %r1909, %r1720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2236, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r2236, %r1922, %r1724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1933, %r1728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1944, %r1732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1955, %r1736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1968, %r1740;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1979, %r1744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r1990, %r1748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r2001, %r1752;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r2014, %r1756;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r2025, %r1760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r2036, %r1764;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r2047, %r1768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2060, %r1772;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2071, %r1776;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2082, %r1780;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2093, %r1784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2106, %r1788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2117, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2128, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2139, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2152, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2163, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2174, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2185, %r1816;
	// end inline asm
	// begin inline asm
	mov.b32 %r2385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2396, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2384, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r2382, %r799, %r2384, %r2385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2387, %r2385, %r2386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2390, %r2382, %r2387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2393, %r810, %r2384, %r2396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2398, %r2396, %r2397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2401, %r2393, %r2398;
	// end inline asm
	shr.u32 	%r2406, %r2384, 8;
	// begin inline asm
	lop3.b32 %r2404, %r799, %r2406, %r2385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2409, %r2385, %r2408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2412, %r2404, %r2409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2415, %r810, %r2406, %r2396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2420, %r2396, %r2419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2423, %r2415, %r2420;
	// end inline asm
	// begin inline asm
	mov.b32 %r2431, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2442, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2430, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r2428, %r799, %r2430, %r2431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2433, %r2431, %r2432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2436, %r2428, %r2433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2439, %r810, %r2430, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2444, %r2442, %r2443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2447, %r2439, %r2444;
	// end inline asm
	shr.u32 	%r2452, %r2430, 8;
	// begin inline asm
	lop3.b32 %r2450, %r799, %r2452, %r2431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2455, %r2431, %r2454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2458, %r2450, %r2455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2461, %r810, %r2452, %r2442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2466, %r2442, %r2465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2469, %r2461, %r2466;
	// end inline asm
	// begin inline asm
	mov.b32 %r2477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2488, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2476, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r2474, %r799, %r2476, %r2477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2479, %r2477, %r2478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2482, %r2474, %r2479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2485, %r810, %r2476, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2490, %r2488, %r2489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2493, %r2485, %r2490;
	// end inline asm
	shr.u32 	%r2498, %r2476, 8;
	// begin inline asm
	lop3.b32 %r2496, %r799, %r2498, %r2477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2501, %r2477, %r2500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2504, %r2496, %r2501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2507, %r810, %r2498, %r2488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2512, %r2488, %r2511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2515, %r2507, %r2512;
	// end inline asm
	// begin inline asm
	mov.b32 %r2523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2534, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2522, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r2520, %r799, %r2522, %r2523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2525, %r2523, %r2524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2528, %r2520, %r2525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2531, %r810, %r2522, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2536, %r2534, %r2535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2539, %r2531, %r2536;
	// end inline asm
	shr.u32 	%r2544, %r2522, 8;
	// begin inline asm
	lop3.b32 %r2542, %r799, %r2544, %r2523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2547, %r2523, %r2546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2550, %r2542, %r2547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2553, %r810, %r2544, %r2534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2558, %r2534, %r2557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2561, %r2553, %r2558;
	// end inline asm
	// begin inline asm
	mov.b32 %r2569, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2580, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2568, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r2566, %r799, %r2568, %r2569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2571, %r2569, %r2570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2574, %r2566, %r2571;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2577, %r810, %r2568, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2582, %r2580, %r2581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2585, %r2577, %r2582;
	// end inline asm
	shr.u32 	%r2590, %r2568, 8;
	// begin inline asm
	lop3.b32 %r2588, %r799, %r2590, %r2569, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2593, %r2569, %r2592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2596, %r2588, %r2593;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2599, %r810, %r2590, %r2580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2604, %r2580, %r2603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2607, %r2599, %r2604;
	// end inline asm
	// begin inline asm
	mov.b32 %r2615, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2626, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2614, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r2612, %r799, %r2614, %r2615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2616, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2617, %r2615, %r2616;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2620, %r2612, %r2617;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2623, %r810, %r2614, %r2626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2628, %r2626, %r2627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2631, %r2623, %r2628;
	// end inline asm
	shr.u32 	%r2636, %r2614, 8;
	// begin inline asm
	lop3.b32 %r2634, %r799, %r2636, %r2615, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2639, %r2615, %r2638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2642, %r2634, %r2639;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2645, %r810, %r2636, %r2626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2650, %r2626, %r2649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2653, %r2645, %r2650;
	// end inline asm
	// begin inline asm
	mov.b32 %r2661, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2672, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2660, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r2658, %r799, %r2660, %r2661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2662, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2663, %r2661, %r2662;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2666, %r2658, %r2663;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2669, %r810, %r2660, %r2672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2674, %r2672, %r2673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2677, %r2669, %r2674;
	// end inline asm
	shr.u32 	%r2682, %r2660, 8;
	// begin inline asm
	lop3.b32 %r2680, %r799, %r2682, %r2661, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2685, %r2661, %r2684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2688, %r2680, %r2685;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2691, %r810, %r2682, %r2672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2696, %r2672, %r2695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2699, %r2691, %r2696;
	// end inline asm
	// begin inline asm
	mov.b32 %r2707, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2718, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2706, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r2704, %r799, %r2706, %r2707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2708, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2709, %r2707, %r2708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2712, %r2704, %r2709;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2715, %r810, %r2706, %r2718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2720, %r2718, %r2719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2723, %r2715, %r2720;
	// end inline asm
	shr.u32 	%r2728, %r2706, 8;
	// begin inline asm
	lop3.b32 %r2726, %r799, %r2728, %r2707, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2731, %r2707, %r2730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2734, %r2726, %r2731;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2737, %r810, %r2728, %r2718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2742, %r2718, %r2741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2745, %r2737, %r2742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2883, %r344, %r2390, %r2190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2880, %r344, %r2401, %r2196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2892, %r344, %r2412, %r2202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2889, %r344, %r2423, %r2208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r344, %r2436, %r2214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r344, %r2447, %r2220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r344, %r2458, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r344, %r2469, %r2232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r344, %r2482, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r344, %r2493, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r344, %r2504, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r344, %r2515, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r344, %r2528, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r344, %r2539, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r344, %r2550, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r344, %r2561, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r362, %r2574, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r362, %r2585, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r362, %r2596, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r362, %r2607, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r362, %r2620, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r362, %r2631, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r362, %r2642, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r362, %r2653, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r362, %r2666, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r362, %r2677, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r362, %r2688, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r362, %r2699, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r362, %r2712, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r362, %r2723, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r362, %r2734, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r362, %r2745, %r2376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2876, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2878, %r2876, %r2880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2881, %r426, %r2883, %r2878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2885, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2887, %r2885, %r2889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2890, %r426, %r2892, %r2887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2894, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2896, %r2894, %r2898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2899, %r426, %r2901, %r2896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2903, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2905, %r2903, %r2907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r426, %r2910, %r2905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2912, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2914, %r2912, %r2916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r426, %r2919, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2921, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2923, %r2921, %r2925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r426, %r2928, %r2923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2930, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2932, %r2930, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r426, %r2937, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2939, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2941, %r2939, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r426, %r2946, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2948, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2950, %r2948, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r429, %r2955, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2957, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2959, %r2957, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r429, %r2964, %r2959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2966, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2968, %r2966, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r429, %r2973, %r2968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2975, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2977, %r2975, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r429, %r2982, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2984, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2986, %r2984, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r429, %r2991, %r2986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2993, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2995, %r2993, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r429, %r3000, %r2995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3002, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3004, %r3002, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r429, %r3009, %r3004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3011, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3013, %r3011, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r429, %r3018, %r3013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3020, %r432, %r2883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3023, %r426, %r2880, %r3020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3027, %r432, %r2892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3030, %r426, %r2889, %r3027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3034, %r432, %r2901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r426, %r2898, %r3034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3041, %r432, %r2910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r426, %r2907, %r3041;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3048, %r432, %r2919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3051, %r426, %r2916, %r3048;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3055, %r432, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r426, %r2925, %r3055;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r432, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r426, %r2934, %r3062;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3069, %r432, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3072, %r426, %r2943, %r3069;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3076, %r435, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r429, %r2952, %r3076;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3083, %r435, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3086, %r429, %r2961, %r3083;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3090, %r435, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3093, %r429, %r2970, %r3090;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3097, %r435, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r429, %r2979, %r3097;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3104, %r435, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r429, %r2988, %r3104;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3111, %r435, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3114, %r429, %r2997, %r3111;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3118, %r435, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3121, %r429, %r3006, %r3118;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3125, %r435, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3128, %r429, %r3015, %r3125;
	// end inline asm
	mov.u32 	%r15155, 0;
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3299, %r3296}, {%r474, %r480, %r477, %r483}, {%r2881, %r3023}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3308, %r3305}, {%r474, %r480, %r477, %r483}, {%r2890, %r3030}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3317, %r3314}, {%r474, %r480, %r477, %r483}, {%r2899, %r3037}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3326, %r3323}, {%r474, %r480, %r477, %r483}, {%r2908, %r3044}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3335, %r3332}, {%r474, %r480, %r477, %r483}, {%r2917, %r3051}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3344, %r3341}, {%r474, %r480, %r477, %r483}, {%r2926, %r3058}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3353, %r3350}, {%r474, %r480, %r477, %r483}, {%r2935, %r3065}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3362, %r3359}, {%r474, %r480, %r477, %r483}, {%r2944, %r3072}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3371, %r3368}, {%r474, %r480, %r477, %r483}, {%r2953, %r3079}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3380, %r3377}, {%r474, %r480, %r477, %r483}, {%r2962, %r3086}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3389, %r3386}, {%r474, %r480, %r477, %r483}, {%r2971, %r3093}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3398, %r3395}, {%r474, %r480, %r477, %r483}, {%r2980, %r3100}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3407, %r3404}, {%r474, %r480, %r477, %r483}, {%r2989, %r3107}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3416, %r3413}, {%r474, %r480, %r477, %r483}, {%r2998, %r3114}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3425, %r3422}, {%r474, %r480, %r477, %r483}, {%r3007, %r3121}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3434, %r3431}, {%r474, %r480, %r477, %r483}, {%r3016, %r3128}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3292, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3294, %r3292, %r3296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3297, %r521, %r3299, %r3294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3301, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3303, %r3301, %r3305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3306, %r521, %r3308, %r3303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3310, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3312, %r3310, %r3314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3315, %r521, %r3317, %r3312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3319, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3321, %r3319, %r3323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3324, %r521, %r3326, %r3321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3328, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3330, %r3328, %r3332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3333, %r521, %r3335, %r3330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3337, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3339, %r3337, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3342, %r521, %r3344, %r3339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3346, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3348, %r3346, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3351, %r521, %r3353, %r3348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3355, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3357, %r3355, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3360, %r521, %r3362, %r3357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3364, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3366, %r3364, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3369, %r521, %r3371, %r3366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r521, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r521, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r521, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r521, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r521, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r521, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r521, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3436, %r524, %r3299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3439, %r521, %r3296, %r3436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3443, %r524, %r3308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3446, %r521, %r3305, %r3443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3450, %r524, %r3317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3453, %r521, %r3314, %r3450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3457, %r524, %r3326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r521, %r3323, %r3457;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3464, %r524, %r3335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3467, %r521, %r3332, %r3464;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3471, %r524, %r3344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3474, %r521, %r3341, %r3471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r524, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r521, %r3350, %r3478;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3485, %r524, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3488, %r521, %r3359, %r3485;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3492, %r524, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3495, %r521, %r3368, %r3492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3499, %r524, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3502, %r521, %r3377, %r3499;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3506, %r524, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3509, %r521, %r3386, %r3506;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3513, %r524, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3516, %r521, %r3395, %r3513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3520, %r524, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r521, %r3404, %r3520;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3527, %r524, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3530, %r521, %r3413, %r3527;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3534, %r524, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3537, %r521, %r3422, %r3534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3541, %r524, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3544, %r521, %r3431, %r3541;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3837, %r3840}, {%r564, %r570, %r567, %r573}, {%r3297, %r3439}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3843, %r3846}, {%r564, %r570, %r567, %r573}, {%r3306, %r3446}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3849, %r3852}, {%r564, %r570, %r567, %r573}, {%r3315, %r3453}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3855, %r3858}, {%r564, %r570, %r567, %r573}, {%r3324, %r3460}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3864}, {%r564, %r570, %r567, %r573}, {%r3333, %r3467}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3870}, {%r564, %r570, %r567, %r573}, {%r3342, %r3474}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3876}, {%r564, %r570, %r567, %r573}, {%r3351, %r3481}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3879, %r3882}, {%r564, %r570, %r567, %r573}, {%r3360, %r3488}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3838, %r3841}, {%r564, %r570, %r567, %r573}, {%r3369, %r3495}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3844, %r3847}, {%r564, %r570, %r567, %r573}, {%r3378, %r3502}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3850, %r3853}, {%r564, %r570, %r567, %r573}, {%r3387, %r3509}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3856, %r3859}, {%r564, %r570, %r567, %r573}, {%r3396, %r3516}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r564, %r570, %r567, %r573}, {%r3405, %r3523}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r564, %r570, %r567, %r573}, {%r3414, %r3530}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r564, %r570, %r567, %r573}, {%r3423, %r3537}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r564, %r570, %r567, %r573}, {%r3432, %r3544}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3836, %r3837, %r3838;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3839, %r3840, %r3841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3842, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3845, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3848, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3851, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3854, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3857, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3860, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3884, %r3837, %r3838;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3887, %r3840, %r3841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3890, %r3843, %r3844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3893, %r3846, %r3847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3896, %r3849, %r3850;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3899, %r3852, %r3853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3902, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3905, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3908, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3932, %r10, %r3836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3935, %r10, %r3839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3938, %r10, %r3842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3941, %r10, %r3845;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3944, %r10, %r3848;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3947, %r10, %r3851;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3950, %r10, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3953, %r10, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3956, %r10, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r10, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r10, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r10, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r10, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r10, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r10, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r10, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r11, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r11, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r11, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r11, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r11, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r11, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r11, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r11, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r11, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r11, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r11, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r11, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r11, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r11, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r11, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r11, %r3929;
	// end inline asm
	// begin inline asm
	mov.b32 %r4028, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4029, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4030, %r3932, %r4028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4033, %r4030, %r4029;
	// end inline asm
	// begin inline asm
	mov.b32 %r4036, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4037, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4038, %r3935, %r4036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4041, %r4038, %r4037;
	// end inline asm
	// begin inline asm
	mov.b32 %r4044, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4045, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4046, %r3938, %r4044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4049, %r4046, %r4045;
	// end inline asm
	// begin inline asm
	mov.b32 %r4052, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4053, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4054, %r3941, %r4052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4057, %r4054, %r4053;
	// end inline asm
	// begin inline asm
	mov.b32 %r4060, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4061, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4062, %r3944, %r4060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4065, %r4062, %r4061;
	// end inline asm
	// begin inline asm
	mov.b32 %r4068, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4069, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4070, %r3947, %r4068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4073, %r4070, %r4069;
	// end inline asm
	// begin inline asm
	mov.b32 %r4076, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4077, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4078, %r3950, %r4076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4081, %r4078, %r4077;
	// end inline asm
	// begin inline asm
	mov.b32 %r4084, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4085, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4086, %r3953, %r4084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4089, %r4086, %r4085;
	// end inline asm
	// begin inline asm
	mov.b32 %r4092, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4093, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4094, %r3956, %r4092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4097, %r4094, %r4093;
	// end inline asm
	// begin inline asm
	mov.b32 %r4100, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4101, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4102, %r3959, %r4100;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4105, %r4102, %r4101;
	// end inline asm
	// begin inline asm
	mov.b32 %r4108, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4109, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4110, %r3962, %r4108;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4113, %r4110, %r4109;
	// end inline asm
	// begin inline asm
	mov.b32 %r4116, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4117, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4118, %r3965, %r4116;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4121, %r4118, %r4117;
	// end inline asm
	// begin inline asm
	mov.b32 %r4124, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4125, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4126, %r3968, %r4124;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4129, %r4126, %r4125;
	// end inline asm
	// begin inline asm
	mov.b32 %r4132, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4133, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4134, %r3971, %r4132;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4137, %r4134, %r4133;
	// end inline asm
	// begin inline asm
	mov.b32 %r4140, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4141, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4142, %r3974, %r4140;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4145, %r4142, %r4141;
	// end inline asm
	// begin inline asm
	mov.b32 %r4148, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4149, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4150, %r3977, %r4148;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4153, %r4150, %r4149;
	// end inline asm
	// begin inline asm
	mov.b32 %r4156, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4157, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4158, %r3980, %r4156;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4161, %r4158, %r4157;
	// end inline asm
	// begin inline asm
	mov.b32 %r4164, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4165, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4166, %r3983, %r4164;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4169, %r4166, %r4165;
	// end inline asm
	// begin inline asm
	mov.b32 %r4172, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4173, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4174, %r3986, %r4172;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4177, %r4174, %r4173;
	// end inline asm
	// begin inline asm
	mov.b32 %r4180, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4181, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4182, %r3989, %r4180;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4185, %r4182, %r4181;
	// end inline asm
	// begin inline asm
	mov.b32 %r4188, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4189, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4190, %r3992, %r4188;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4193, %r4190, %r4189;
	// end inline asm
	// begin inline asm
	mov.b32 %r4196, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4197, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4198, %r3995, %r4196;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4201, %r4198, %r4197;
	// end inline asm
	// begin inline asm
	mov.b32 %r4204, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4205, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4206, %r3998, %r4204;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4209, %r4206, %r4205;
	// end inline asm
	// begin inline asm
	mov.b32 %r4212, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4213, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4214, %r4001, %r4212;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4217, %r4214, %r4213;
	// end inline asm
	// begin inline asm
	mov.b32 %r4220, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4221, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4222, %r4004, %r4220;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4225, %r4222, %r4221;
	// end inline asm
	// begin inline asm
	mov.b32 %r4228, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4229, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4230, %r4007, %r4228;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4233, %r4230, %r4229;
	// end inline asm
	// begin inline asm
	mov.b32 %r4236, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4237, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4238, %r4010, %r4236;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4241, %r4238, %r4237;
	// end inline asm
	// begin inline asm
	mov.b32 %r4244, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4245, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4246, %r4013, %r4244;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4249, %r4246, %r4245;
	// end inline asm
	// begin inline asm
	mov.b32 %r4252, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4253, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4254, %r4016, %r4252;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4257, %r4254, %r4253;
	// end inline asm
	// begin inline asm
	mov.b32 %r4260, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4261, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4262, %r4019, %r4260;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4265, %r4262, %r4261;
	// end inline asm
	// begin inline asm
	mov.b32 %r4268, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4269, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4270, %r4022, %r4268;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4273, %r4270, %r4269;
	// end inline asm
	// begin inline asm
	mov.b32 %r4276, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4277, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4278, %r4025, %r4276;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4281, %r4278, %r4277;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4286, %r4287, %r4285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4289, %r4033, %r4286;
	// end inline asm
	// begin inline asm
	mov.b32 %r4292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4293, %r4287, %r4292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4296, %r4041, %r4293;
	// end inline asm
	// begin inline asm
	mov.b32 %r4299, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4300, %r4287, %r4299;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4303, %r4049, %r4300;
	// end inline asm
	// begin inline asm
	mov.b32 %r4306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4307, %r4287, %r4306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4310, %r4057, %r4307;
	// end inline asm
	mov.u32 	%r4316, 25152;
	// begin inline asm
	prmt.b32 %r4313, %r4289, %r4303, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4317, %r4296, %r4310, %r4316;
	// end inline asm
	shl.b32 	%r4324, %r4317, 4;
	mov.u32 	%r4322, 252645135;
	// begin inline asm
	lop3.b32 %r4321, %r4322, %r4313, %r4324, 202;
	// end inline asm
	xor.b32  	%r16068, %r4321, -2004318072;
	// begin inline asm
	mov.b32 %r4328, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4327, %r4328, %r4326;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4330, %r4065, %r4327;
	// end inline asm
	// begin inline asm
	mov.b32 %r4333, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4334, %r4328, %r4333;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4337, %r4073, %r4334;
	// end inline asm
	// begin inline asm
	mov.b32 %r4340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4341, %r4328, %r4340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4344, %r4081, %r4341;
	// end inline asm
	// begin inline asm
	mov.b32 %r4347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4348, %r4328, %r4347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4351, %r4089, %r4348;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4354, %r4330, %r4344, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4358, %r4337, %r4351, %r4316;
	// end inline asm
	shl.b32 	%r4365, %r4358, 4;
	// begin inline asm
	lop3.b32 %r4362, %r4322, %r4354, %r4365, 202;
	// end inline asm
	xor.b32  	%r16069, %r4362, -2004318072;
	// begin inline asm
	mov.b32 %r4369, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4367, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4368, %r4369, %r4367;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4371, %r4097, %r4368;
	// end inline asm
	// begin inline asm
	mov.b32 %r4374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4375, %r4369, %r4374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4378, %r4105, %r4375;
	// end inline asm
	// begin inline asm
	mov.b32 %r4381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4382, %r4369, %r4381;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4385, %r4113, %r4382;
	// end inline asm
	// begin inline asm
	mov.b32 %r4388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4369, %r4388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4392, %r4121, %r4389;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4395, %r4371, %r4385, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4399, %r4378, %r4392, %r4316;
	// end inline asm
	shl.b32 	%r4406, %r4399, 4;
	// begin inline asm
	lop3.b32 %r4403, %r4322, %r4395, %r4406, 202;
	// end inline asm
	xor.b32  	%r16070, %r4403, -2004318072;
	// begin inline asm
	mov.b32 %r4410, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4409, %r4410, %r4408;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4412, %r4129, %r4409;
	// end inline asm
	// begin inline asm
	mov.b32 %r4415, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4416, %r4410, %r4415;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4419, %r4137, %r4416;
	// end inline asm
	// begin inline asm
	mov.b32 %r4422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4423, %r4410, %r4422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4426, %r4145, %r4423;
	// end inline asm
	// begin inline asm
	mov.b32 %r4429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4410, %r4429;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4433, %r4153, %r4430;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4436, %r4412, %r4426, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4440, %r4419, %r4433, %r4316;
	// end inline asm
	shl.b32 	%r4447, %r4440, 4;
	// begin inline asm
	lop3.b32 %r4444, %r4322, %r4436, %r4447, 202;
	// end inline asm
	xor.b32  	%r16071, %r4444, -2004318072;
	// begin inline asm
	mov.b32 %r4451, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4449, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4450, %r4451, %r4449;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4453, %r4161, %r4450;
	// end inline asm
	// begin inline asm
	mov.b32 %r4456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4457, %r4451, %r4456;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4460, %r4169, %r4457;
	// end inline asm
	// begin inline asm
	mov.b32 %r4463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4464, %r4451, %r4463;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4467, %r4177, %r4464;
	// end inline asm
	// begin inline asm
	mov.b32 %r4470, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4451, %r4470;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4474, %r4185, %r4471;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4477, %r4453, %r4467, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4481, %r4460, %r4474, %r4316;
	// end inline asm
	shl.b32 	%r4488, %r4481, 4;
	// begin inline asm
	lop3.b32 %r4485, %r4322, %r4477, %r4488, 202;
	// end inline asm
	xor.b32  	%r16072, %r4485, -2004318072;
	// begin inline asm
	mov.b32 %r4492, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4491, %r4492, %r4490;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4494, %r4193, %r4491;
	// end inline asm
	// begin inline asm
	mov.b32 %r4497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4498, %r4492, %r4497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4501, %r4201, %r4498;
	// end inline asm
	// begin inline asm
	mov.b32 %r4504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4505, %r4492, %r4504;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4508, %r4209, %r4505;
	// end inline asm
	// begin inline asm
	mov.b32 %r4511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4492, %r4511;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4515, %r4217, %r4512;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4518, %r4494, %r4508, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4522, %r4501, %r4515, %r4316;
	// end inline asm
	shl.b32 	%r4529, %r4522, 4;
	// begin inline asm
	lop3.b32 %r4526, %r4322, %r4518, %r4529, 202;
	// end inline asm
	xor.b32  	%r16073, %r4526, -2004318072;
	// begin inline asm
	mov.b32 %r4533, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4531, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4532, %r4533, %r4531;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4535, %r4225, %r4532;
	// end inline asm
	// begin inline asm
	mov.b32 %r4538, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4539, %r4533, %r4538;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4542, %r4233, %r4539;
	// end inline asm
	// begin inline asm
	mov.b32 %r4545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4546, %r4533, %r4545;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4549, %r4241, %r4546;
	// end inline asm
	// begin inline asm
	mov.b32 %r4552, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4533, %r4552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4556, %r4249, %r4553;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4559, %r4535, %r4549, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4563, %r4542, %r4556, %r4316;
	// end inline asm
	shl.b32 	%r4570, %r4563, 4;
	// begin inline asm
	lop3.b32 %r4567, %r4322, %r4559, %r4570, 202;
	// end inline asm
	xor.b32  	%r16074, %r4567, -2004318072;
	// begin inline asm
	mov.b32 %r4574, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4573, %r4574, %r4572;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4576, %r4257, %r4573;
	// end inline asm
	// begin inline asm
	mov.b32 %r4579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4580, %r4574, %r4579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4583, %r4265, %r4580;
	// end inline asm
	// begin inline asm
	mov.b32 %r4586, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4587, %r4574, %r4586;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4590, %r4273, %r4587;
	// end inline asm
	// begin inline asm
	mov.b32 %r4593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4574, %r4593;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4597, %r4281, %r4594;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4600, %r4576, %r4590, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4604, %r4583, %r4597, %r4316;
	// end inline asm
	shl.b32 	%r4611, %r4604, 4;
	// begin inline asm
	lop3.b32 %r4608, %r4322, %r4600, %r4611, 202;
	// end inline asm
	xor.b32  	%r16075, %r4608, -2004318072;
	add.s64 	%rd82, %rd94, %rd24;
	st.shared.u32 	[%rd82], %r16068;
	add.s64 	%rd83, %rd94, %rd23;
	st.shared.u32 	[%rd83], %r16069;
	add.s64 	%rd84, %rd94, %rd22;
	st.shared.u32 	[%rd84], %r16070;
	add.s64 	%rd85, %rd94, %rd21;
	st.shared.u32 	[%rd85], %r16071;
	add.s64 	%rd86, %rd94, %rd20;
	st.shared.u32 	[%rd86], %r16072;
	add.s64 	%rd87, %rd94, %rd19;
	st.shared.u32 	[%rd87], %r16073;
	add.s64 	%rd88, %rd94, %rd18;
	st.shared.u32 	[%rd88], %r16074;
	add.s64 	%rd89, %rd94, %rd17;
	st.shared.u32 	[%rd89], %r16075;
	ld.shared.u32 	%r16194, [%rd74];
	ld.shared.u32 	%r16195, [%rd75];
	ld.shared.u32 	%r16196, [%rd76];
	ld.shared.u32 	%r16197, [%rd77];
	ld.shared.u32 	%r16206, [%rd78];
	ld.shared.u32 	%r16207, [%rd79];
	ld.shared.u32 	%r16208, [%rd80];
	ld.shared.u32 	%r16209, [%rd81];
	// begin inline asm
	mov.b32 %r4617, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4628, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4616, %r16194, -2004318072;
	// begin inline asm
	lop3.b32 %r4614, %r799, %r4616, %r4617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4619, %r4617, %r4618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4622, %r4614, %r4619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4625, %r810, %r4616, %r4628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4630, %r4628, %r4629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4633, %r4625, %r4630;
	// end inline asm
	shr.u32 	%r4638, %r4616, 8;
	// begin inline asm
	lop3.b32 %r4636, %r799, %r4638, %r4617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4641, %r4617, %r4640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4644, %r4636, %r4641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4647, %r810, %r4638, %r4628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4652, %r4628, %r4651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4655, %r4647, %r4652;
	// end inline asm
	// begin inline asm
	mov.b32 %r4663, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4674, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4662, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r4660, %r799, %r4662, %r4663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4665, %r4663, %r4664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4668, %r4660, %r4665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4671, %r810, %r4662, %r4674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4676, %r4674, %r4675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4679, %r4671, %r4676;
	// end inline asm
	shr.u32 	%r4684, %r4662, 8;
	// begin inline asm
	lop3.b32 %r4682, %r799, %r4684, %r4663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4687, %r4663, %r4686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4690, %r4682, %r4687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4693, %r810, %r4684, %r4674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4698, %r4674, %r4697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4701, %r4693, %r4698;
	// end inline asm
	// begin inline asm
	mov.b32 %r4709, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4720, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4708, %r16196, -2004318072;
	// begin inline asm
	lop3.b32 %r4706, %r799, %r4708, %r4709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4711, %r4709, %r4710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4714, %r4706, %r4711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4717, %r810, %r4708, %r4720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4722, %r4720, %r4721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4725, %r4717, %r4722;
	// end inline asm
	shr.u32 	%r4730, %r4708, 8;
	// begin inline asm
	lop3.b32 %r4728, %r799, %r4730, %r4709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4733, %r4709, %r4732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4736, %r4728, %r4733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4739, %r810, %r4730, %r4720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4744, %r4720, %r4743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4747, %r4739, %r4744;
	// end inline asm
	// begin inline asm
	mov.b32 %r4755, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4766, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4754, %r16197, -2004318072;
	// begin inline asm
	lop3.b32 %r4752, %r799, %r4754, %r4755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4757, %r4755, %r4756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4760, %r4752, %r4757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4763, %r810, %r4754, %r4766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4768, %r4766, %r4767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4771, %r4763, %r4768;
	// end inline asm
	shr.u32 	%r4776, %r4754, 8;
	// begin inline asm
	lop3.b32 %r4774, %r799, %r4776, %r4755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4779, %r4755, %r4778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4782, %r4774, %r4779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4785, %r810, %r4776, %r4766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4790, %r4766, %r4789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4793, %r4785, %r4790;
	// end inline asm
	// begin inline asm
	mov.b32 %r4801, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4812, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4800, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r4798, %r799, %r4800, %r4801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4803, %r4801, %r4802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4806, %r4798, %r4803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4809, %r810, %r4800, %r4812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4814, %r4812, %r4813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4817, %r4809, %r4814;
	// end inline asm
	shr.u32 	%r4822, %r4800, 8;
	// begin inline asm
	lop3.b32 %r4820, %r799, %r4822, %r4801, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4825, %r4801, %r4824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4828, %r4820, %r4825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4831, %r810, %r4822, %r4812, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4836, %r4812, %r4835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4839, %r4831, %r4836;
	// end inline asm
	// begin inline asm
	mov.b32 %r4847, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4858, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4846, %r16207, -2004318072;
	// begin inline asm
	lop3.b32 %r4844, %r799, %r4846, %r4847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4849, %r4847, %r4848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4852, %r4844, %r4849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4855, %r810, %r4846, %r4858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4860, %r4858, %r4859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4863, %r4855, %r4860;
	// end inline asm
	shr.u32 	%r4868, %r4846, 8;
	// begin inline asm
	lop3.b32 %r4866, %r799, %r4868, %r4847, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4871, %r4847, %r4870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4874, %r4866, %r4871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4877, %r810, %r4868, %r4858, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4882, %r4858, %r4881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4885, %r4877, %r4882;
	// end inline asm
	// begin inline asm
	mov.b32 %r4893, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4904, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4892, %r16208, -2004318072;
	// begin inline asm
	lop3.b32 %r4890, %r799, %r4892, %r4893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4895, %r4893, %r4894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4898, %r4890, %r4895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4901, %r810, %r4892, %r4904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4906, %r4904, %r4905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4909, %r4901, %r4906;
	// end inline asm
	shr.u32 	%r4914, %r4892, 8;
	// begin inline asm
	lop3.b32 %r4912, %r799, %r4914, %r4893, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4917, %r4893, %r4916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4920, %r4912, %r4917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4923, %r810, %r4914, %r4904, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4928, %r4904, %r4927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4931, %r4923, %r4928;
	// end inline asm
	// begin inline asm
	mov.b32 %r4939, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4950, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4938, %r16209, -2004318072;
	// begin inline asm
	lop3.b32 %r4936, %r799, %r4938, %r4939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4941, %r4939, %r4940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4944, %r4936, %r4941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4947, %r810, %r4938, %r4950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4952, %r4950, %r4951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4955, %r4947, %r4952;
	// end inline asm
	shr.u32 	%r4960, %r4938, 8;
	// begin inline asm
	lop3.b32 %r4958, %r799, %r4960, %r4939, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4963, %r4939, %r4962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4966, %r4958, %r4963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4969, %r810, %r4960, %r4950, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4974, %r4950, %r4973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4977, %r4969, %r4974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4980, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4982, %r4980, %r4622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4985, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4987, %r4985, %r4633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4990, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4992, %r4990, %r4644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4995, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4997, %r4995, %r4655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5000, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5002, %r5000, %r4668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5005, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5007, %r5005, %r4679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5010, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5012, %r5010, %r4690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5015, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5017, %r5015, %r4701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5020, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5022, %r5020, %r4714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5025, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5027, %r5025, %r4725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5030, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5032, %r5030, %r4736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5035, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5037, %r5035, %r4747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5040, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5042, %r5040, %r4760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5045, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5047, %r5045, %r4771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5050, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5052, %r5050, %r4782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5055, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5057, %r5055, %r4793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5060, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5062, %r5060, %r4806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5065, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5067, %r5065, %r4817;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5070, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5072, %r5070, %r4828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5075, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5077, %r5075, %r4839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4874;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4885;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4898;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4909;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4931;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4955;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4966;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4977;
	// end inline asm
	// begin inline asm
	mov.b32 %r5145, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5156, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5142, %r799, %r1824, %r5145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5147, %r5145, %r5146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5150, %r5142, %r5147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5153, %r810, %r1824, %r5156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5158, %r5156, %r5157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5161, %r5153, %r5158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5164, %r799, %r1846, %r5145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5169, %r5145, %r5168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5172, %r5164, %r5169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5175, %r810, %r1846, %r5156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5180, %r5156, %r5179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5183, %r5175, %r5180;
	// end inline asm
	// begin inline asm
	mov.b32 %r5191, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5202, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5188, %r799, %r1870, %r5191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5193, %r5191, %r5192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5196, %r5188, %r5193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5199, %r810, %r1870, %r5202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5204, %r5202, %r5203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5207, %r5199, %r5204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5210, %r799, %r1892, %r5191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5215, %r5191, %r5214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5218, %r5210, %r5215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5221, %r810, %r1892, %r5202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5226, %r5202, %r5225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5229, %r5221, %r5226;
	// end inline asm
	// begin inline asm
	mov.b32 %r5237, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5248, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5234, %r799, %r1916, %r5237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5239, %r5237, %r5238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5242, %r5234, %r5239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5245, %r810, %r1916, %r5248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5250, %r5248, %r5249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5253, %r5245, %r5250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5256, %r799, %r1938, %r5237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5261, %r5237, %r5260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5264, %r5256, %r5261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5267, %r810, %r1938, %r5248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5272, %r5248, %r5271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5275, %r5267, %r5272;
	// end inline asm
	// begin inline asm
	mov.b32 %r5283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5294, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5280, %r799, %r1962, %r5283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5285, %r5283, %r5284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5288, %r5280, %r5285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5291, %r810, %r1962, %r5294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5296, %r5294, %r5295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5299, %r5291, %r5296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5302, %r799, %r1984, %r5283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5307, %r5283, %r5306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5310, %r5302, %r5307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5313, %r810, %r1984, %r5294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5318, %r5294, %r5317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5321, %r5313, %r5318;
	// end inline asm
	// begin inline asm
	mov.b32 %r5329, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5340, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5326, %r799, %r2008, %r5329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5330, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5331, %r5329, %r5330;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5334, %r5326, %r5331;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5337, %r810, %r2008, %r5340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5342, %r5340, %r5341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5345, %r5337, %r5342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5348, %r799, %r2030, %r5329, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5353, %r5329, %r5352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5356, %r5348, %r5353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5359, %r810, %r2030, %r5340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5364, %r5340, %r5363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5367, %r5359, %r5364;
	// end inline asm
	// begin inline asm
	mov.b32 %r5375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5386, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5372, %r799, %r2054, %r5375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5376, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5377, %r5375, %r5376;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5380, %r5372, %r5377;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5383, %r810, %r2054, %r5386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5388, %r5386, %r5387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5391, %r5383, %r5388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5394, %r799, %r2076, %r5375, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5399, %r5375, %r5398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5402, %r5394, %r5399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5405, %r810, %r2076, %r5386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5410, %r5386, %r5409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5413, %r5405, %r5410;
	// end inline asm
	// begin inline asm
	mov.b32 %r5421, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5432, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5418, %r799, %r2100, %r5421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5422, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5423, %r5421, %r5422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5426, %r5418, %r5423;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5429, %r810, %r2100, %r5432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5434, %r5432, %r5433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5437, %r5429, %r5434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5440, %r799, %r2122, %r5421, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5445, %r5421, %r5444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5448, %r5440, %r5445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5451, %r810, %r2122, %r5432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5456, %r5432, %r5455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5459, %r5451, %r5456;
	// end inline asm
	// begin inline asm
	mov.b32 %r5467, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5478, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5464, %r799, %r2146, %r5467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5469, %r5467, %r5468;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5472, %r5464, %r5469;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5475, %r810, %r2146, %r5478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5480, %r5478, %r5479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5483, %r5475, %r5480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5486, %r799, %r2168, %r5467, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5491, %r5467, %r5490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5494, %r5486, %r5491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5497, %r810, %r2168, %r5478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5502, %r5478, %r5501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5505, %r5497, %r5502;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5508, %r272, %r5150, %r4982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5512, %r272, %r5161, %r4987;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5516, %r272, %r5172, %r4992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5520, %r272, %r5183, %r4997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5524, %r272, %r5196, %r5002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5528, %r272, %r5207, %r5007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5532, %r272, %r5218, %r5012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5536, %r272, %r5229, %r5017;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5540, %r272, %r5242, %r5022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5544, %r272, %r5253, %r5027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5548, %r272, %r5264, %r5032;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5552, %r272, %r5275, %r5037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5556, %r272, %r5288, %r5042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5560, %r272, %r5299, %r5047;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5564, %r272, %r5310, %r5052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5568, %r272, %r5321, %r5057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5572, %r290, %r5334, %r5062;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5576, %r290, %r5345, %r5067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5580, %r290, %r5356, %r5072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5584, %r290, %r5367, %r5077;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5588, %r290, %r5380, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5592, %r290, %r5391, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5596, %r290, %r5402, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5600, %r290, %r5413, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5604, %r290, %r5426, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r290, %r5437, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r290, %r5448, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r290, %r5459, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r290, %r5472, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r290, %r5483, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r290, %r5494, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r290, %r5505, %r5137;
	// end inline asm
	// begin inline asm
	mov.b32 %r5641, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5652, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5638, %r799, %r2384, %r5641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5643, %r5641, %r5642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5646, %r5638, %r5643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5649, %r810, %r2384, %r5652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5654, %r5652, %r5653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5657, %r5649, %r5654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5660, %r799, %r2406, %r5641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5665, %r5641, %r5664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5668, %r5660, %r5665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5671, %r810, %r2406, %r5652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5676, %r5652, %r5675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5679, %r5671, %r5676;
	// end inline asm
	// begin inline asm
	mov.b32 %r5687, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5698, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5684, %r799, %r2430, %r5687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5689, %r5687, %r5688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5692, %r5684, %r5689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5695, %r810, %r2430, %r5698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5700, %r5698, %r5699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5703, %r5695, %r5700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5706, %r799, %r2452, %r5687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5711, %r5687, %r5710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5714, %r5706, %r5711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5717, %r810, %r2452, %r5698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5722, %r5698, %r5721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5725, %r5717, %r5722;
	// end inline asm
	// begin inline asm
	mov.b32 %r5733, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5744, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5730, %r799, %r2476, %r5733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5735, %r5733, %r5734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5738, %r5730, %r5735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5741, %r810, %r2476, %r5744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5746, %r5744, %r5745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5749, %r5741, %r5746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5752, %r799, %r2498, %r5733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5757, %r5733, %r5756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5760, %r5752, %r5757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5763, %r810, %r2498, %r5744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5768, %r5744, %r5767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5771, %r5763, %r5768;
	// end inline asm
	// begin inline asm
	mov.b32 %r5779, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5790, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5776, %r799, %r2522, %r5779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5781, %r5779, %r5780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5784, %r5776, %r5781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5787, %r810, %r2522, %r5790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5792, %r5790, %r5791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5795, %r5787, %r5792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5798, %r799, %r2544, %r5779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5803, %r5779, %r5802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5806, %r5798, %r5803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5809, %r810, %r2544, %r5790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5814, %r5790, %r5813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5817, %r5809, %r5814;
	// end inline asm
	// begin inline asm
	mov.b32 %r5825, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5836, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5822, %r799, %r2568, %r5825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5826, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5827, %r5825, %r5826;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5830, %r5822, %r5827;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5833, %r810, %r2568, %r5836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5837, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5838, %r5836, %r5837;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5841, %r5833, %r5838;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5844, %r799, %r2590, %r5825, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5849, %r5825, %r5848;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5852, %r5844, %r5849;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5855, %r810, %r2590, %r5836, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5859, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5860, %r5836, %r5859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5863, %r5855, %r5860;
	// end inline asm
	// begin inline asm
	mov.b32 %r5871, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5882, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5868, %r799, %r2614, %r5871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5872, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5873, %r5871, %r5872;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5876, %r5868, %r5873;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5879, %r810, %r2614, %r5882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5883, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5884, %r5882, %r5883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5887, %r5879, %r5884;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5890, %r799, %r2636, %r5871, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5894, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5895, %r5871, %r5894;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5898, %r5890, %r5895;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5901, %r810, %r2636, %r5882, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5905, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5906, %r5882, %r5905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5909, %r5901, %r5906;
	// end inline asm
	// begin inline asm
	mov.b32 %r5917, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5928, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5914, %r799, %r2660, %r5917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5919, %r5917, %r5918;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5922, %r5914, %r5919;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5925, %r810, %r2660, %r5928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5930, %r5928, %r5929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5933, %r5925, %r5930;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5936, %r799, %r2682, %r5917, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5940, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5941, %r5917, %r5940;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5944, %r5936, %r5941;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5947, %r810, %r2682, %r5928, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5951, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5952, %r5928, %r5951;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5955, %r5947, %r5952;
	// end inline asm
	// begin inline asm
	mov.b32 %r5963, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5974, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5960, %r799, %r2706, %r5963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5965, %r5963, %r5964;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5968, %r5960, %r5965;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5971, %r810, %r2706, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5975, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5976, %r5974, %r5975;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5979, %r5971, %r5976;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5982, %r799, %r2728, %r5963, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5987, %r5963, %r5986;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5990, %r5982, %r5987;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5993, %r810, %r2728, %r5974, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5998, %r5974, %r5997;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6001, %r5993, %r5998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6004, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6006, %r6004, %r5646, %r5508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6010, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6012, %r6010, %r5657, %r5512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6016, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6018, %r6016, %r5668, %r5516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6022, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6024, %r6022, %r5679, %r5520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6028, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6030, %r6028, %r5692, %r5524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6034, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6036, %r6034, %r5703, %r5528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6040, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6042, %r6040, %r5714, %r5532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6046, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6048, %r6046, %r5725, %r5536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6052, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6054, %r6052, %r5738, %r5540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5749, %r5544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5760, %r5548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5771, %r5552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5784, %r5556;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5795, %r5560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5806, %r5564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5817, %r5568;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5830, %r5572;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5841, %r5576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5852, %r5580;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5863, %r5584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5876, %r5588;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5887, %r5592;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5898, %r5596;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5909, %r5600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5922, %r5604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5933, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5944, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5955, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5968, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5979, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5990, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r6001, %r5632;
	// end inline asm
	// begin inline asm
	mov.b32 %r6201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6212, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6198, %r799, %r800, %r6201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6203, %r6201, %r6202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6206, %r6198, %r6203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6209, %r810, %r800, %r6212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6214, %r6212, %r6213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6217, %r6209, %r6214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6220, %r799, %r822, %r6201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6225, %r6201, %r6224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6228, %r6220, %r6225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6231, %r810, %r822, %r6212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6236, %r6212, %r6235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6239, %r6231, %r6236;
	// end inline asm
	// begin inline asm
	mov.b32 %r6247, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6258, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6244, %r799, %r846, %r6247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6249, %r6247, %r6248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6252, %r6244, %r6249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6255, %r810, %r846, %r6258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6260, %r6258, %r6259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6263, %r6255, %r6260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6266, %r799, %r868, %r6247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6271, %r6247, %r6270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6274, %r6266, %r6271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6277, %r810, %r868, %r6258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6282, %r6258, %r6281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6285, %r6277, %r6282;
	// end inline asm
	// begin inline asm
	mov.b32 %r6293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6304, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6290, %r799, %r892, %r6293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6295, %r6293, %r6294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6298, %r6290, %r6295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6301, %r810, %r892, %r6304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6306, %r6304, %r6305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6309, %r6301, %r6306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6312, %r799, %r914, %r6293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6317, %r6293, %r6316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6320, %r6312, %r6317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6323, %r810, %r914, %r6304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6328, %r6304, %r6327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6331, %r6323, %r6328;
	// end inline asm
	// begin inline asm
	mov.b32 %r6339, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6350, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6336, %r799, %r938, %r6339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6341, %r6339, %r6340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6344, %r6336, %r6341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6347, %r810, %r938, %r6350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6352, %r6350, %r6351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6355, %r6347, %r6352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6358, %r799, %r960, %r6339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6363, %r6339, %r6362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6366, %r6358, %r6363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6369, %r810, %r960, %r6350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6374, %r6350, %r6373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6377, %r6369, %r6374;
	// end inline asm
	// begin inline asm
	mov.b32 %r6385, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6396, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6382, %r799, %r984, %r6385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6387, %r6385, %r6386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6390, %r6382, %r6387;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6393, %r810, %r984, %r6396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6398, %r6396, %r6397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6401, %r6393, %r6398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6404, %r799, %r1006, %r6385, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6409, %r6385, %r6408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6412, %r6404, %r6409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6415, %r810, %r1006, %r6396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6420, %r6396, %r6419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6423, %r6415, %r6420;
	// end inline asm
	// begin inline asm
	mov.b32 %r6431, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6442, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6428, %r799, %r1030, %r6431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6432, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6433, %r6431, %r6432;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6436, %r6428, %r6433;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6439, %r810, %r1030, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6444, %r6442, %r6443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6447, %r6439, %r6444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6450, %r799, %r1052, %r6431, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6455, %r6431, %r6454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6458, %r6450, %r6455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6461, %r810, %r1052, %r6442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6466, %r6442, %r6465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6469, %r6461, %r6466;
	// end inline asm
	// begin inline asm
	mov.b32 %r6477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6488, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6474, %r799, %r1076, %r6477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6478, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6479, %r6477, %r6478;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6482, %r6474, %r6479;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6485, %r810, %r1076, %r6488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6490, %r6488, %r6489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6493, %r6485, %r6490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6496, %r799, %r1098, %r6477, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6501, %r6477, %r6500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6504, %r6496, %r6501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6507, %r810, %r1098, %r6488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6512, %r6488, %r6511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6515, %r6507, %r6512;
	// end inline asm
	// begin inline asm
	mov.b32 %r6523, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6534, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6520, %r799, %r1122, %r6523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6524, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6525, %r6523, %r6524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6528, %r6520, %r6525;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6531, %r810, %r1122, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6536, %r6534, %r6535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6539, %r6531, %r6536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6542, %r799, %r1144, %r6523, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6547, %r6523, %r6546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6550, %r6542, %r6547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6553, %r810, %r1144, %r6534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6558, %r6534, %r6557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6561, %r6553, %r6558;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6699, %r344, %r6206, %r6006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6696, %r344, %r6217, %r6012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6708, %r344, %r6228, %r6018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6705, %r344, %r6239, %r6024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r344, %r6252, %r6030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r344, %r6263, %r6036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r344, %r6274, %r6042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r344, %r6285, %r6048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r344, %r6298, %r6054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r344, %r6309, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r344, %r6320, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r344, %r6331, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r344, %r6344, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r344, %r6355, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r344, %r6366, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r344, %r6377, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r362, %r6390, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r362, %r6401, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r362, %r6412, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r362, %r6423, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r362, %r6436, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r362, %r6447, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r362, %r6458, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r362, %r6469, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r362, %r6482, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r362, %r6493, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r362, %r6504, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r362, %r6515, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r362, %r6528, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r362, %r6539, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r362, %r6550, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r362, %r6561, %r6192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6692, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6694, %r6692, %r6696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6697, %r426, %r6699, %r6694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6701, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6703, %r6701, %r6705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6706, %r426, %r6708, %r6703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6710, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6712, %r6710, %r6714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r426, %r6717, %r6712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6719, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6721, %r6719, %r6723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r426, %r6726, %r6721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6728, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6730, %r6728, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r426, %r6735, %r6730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6739, %r6737, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r426, %r6744, %r6739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6746, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6748, %r6746, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r426, %r6753, %r6748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6757, %r6755, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r426, %r6762, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6764, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6766, %r6764, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r429, %r6771, %r6766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6775, %r6773, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r429, %r6780, %r6775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6782, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6784, %r6782, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r429, %r6789, %r6784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6793, %r6791, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r429, %r6798, %r6793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6800, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6802, %r6800, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r429, %r6807, %r6802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6811, %r6809, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r429, %r6816, %r6811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6818, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6820, %r6818, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r429, %r6825, %r6820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6827, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6829, %r6827, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r429, %r6834, %r6829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6836, %r432, %r6699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6839, %r426, %r6696, %r6836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6843, %r432, %r6708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6846, %r426, %r6705, %r6843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6850, %r432, %r6717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r426, %r6714, %r6850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6857, %r432, %r6726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r426, %r6723, %r6857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6864, %r432, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6867, %r426, %r6732, %r6864;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6871, %r432, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r426, %r6741, %r6871;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r432, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r426, %r6750, %r6878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6885, %r432, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6888, %r426, %r6759, %r6885;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6892, %r435, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6895, %r429, %r6768, %r6892;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6899, %r435, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6902, %r429, %r6777, %r6899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6906, %r435, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6909, %r429, %r6786, %r6906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6913, %r435, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r429, %r6795, %r6913;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6920, %r435, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6923, %r429, %r6804, %r6920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6927, %r435, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6930, %r429, %r6813, %r6927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6934, %r435, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6937, %r429, %r6822, %r6934;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6941, %r435, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6944, %r429, %r6831, %r6941;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7115, %r7112}, {%r474, %r480, %r477, %r483}, {%r6697, %r6839}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7124, %r7121}, {%r474, %r480, %r477, %r483}, {%r6706, %r6846}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7133, %r7130}, {%r474, %r480, %r477, %r483}, {%r6715, %r6853}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7142, %r7139}, {%r474, %r480, %r477, %r483}, {%r6724, %r6860}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7151, %r7148}, {%r474, %r480, %r477, %r483}, {%r6733, %r6867}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7160, %r7157}, {%r474, %r480, %r477, %r483}, {%r6742, %r6874}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7169, %r7166}, {%r474, %r480, %r477, %r483}, {%r6751, %r6881}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r474, %r480, %r477, %r483}, {%r6760, %r6888}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r474, %r480, %r477, %r483}, {%r6769, %r6895}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r474, %r480, %r477, %r483}, {%r6778, %r6902}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r474, %r480, %r477, %r483}, {%r6787, %r6909}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r474, %r480, %r477, %r483}, {%r6796, %r6916}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r474, %r480, %r477, %r483}, {%r6805, %r6923}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r474, %r480, %r477, %r483}, {%r6814, %r6930}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r474, %r480, %r477, %r483}, {%r6823, %r6937}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r474, %r480, %r477, %r483}, {%r6832, %r6944}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7108, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7110, %r7108, %r7112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7113, %r521, %r7115, %r7110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7117, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7119, %r7117, %r7121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7122, %r521, %r7124, %r7119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7126, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7128, %r7126, %r7130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7131, %r521, %r7133, %r7128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7135, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7137, %r7135, %r7139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7140, %r521, %r7142, %r7137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7144, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7146, %r7144, %r7148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r521, %r7151, %r7146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7153, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7155, %r7153, %r7157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r521, %r7160, %r7155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7162, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r7162, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r521, %r7169, %r7164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r521, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r521, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r521, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r521, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r521, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r521, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r521, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r521, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r521, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7252, %r524, %r7115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7255, %r521, %r7112, %r7252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7259, %r524, %r7124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7262, %r521, %r7121, %r7259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7266, %r524, %r7133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7269, %r521, %r7130, %r7266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7273, %r524, %r7142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7276, %r521, %r7139, %r7273;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7280, %r524, %r7151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7283, %r521, %r7148, %r7280;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7287, %r524, %r7160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7290, %r521, %r7157, %r7287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r524, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r521, %r7166, %r7294;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7301, %r524, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7304, %r521, %r7175, %r7301;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7308, %r524, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7311, %r521, %r7184, %r7308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7315, %r524, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7318, %r521, %r7193, %r7315;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7322, %r524, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7325, %r521, %r7202, %r7322;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7329, %r524, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7332, %r521, %r7211, %r7329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7336, %r524, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7339, %r521, %r7220, %r7336;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7343, %r524, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7346, %r521, %r7229, %r7343;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7350, %r524, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7353, %r521, %r7238, %r7350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7357, %r524, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7360, %r521, %r7247, %r7357;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7653, %r7656}, {%r564, %r570, %r567, %r573}, {%r7113, %r7255}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7659, %r7662}, {%r564, %r570, %r567, %r573}, {%r7122, %r7262}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7665, %r7668}, {%r564, %r570, %r567, %r573}, {%r7131, %r7269}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7671, %r7674}, {%r564, %r570, %r567, %r573}, {%r7140, %r7276}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7677, %r7680}, {%r564, %r570, %r567, %r573}, {%r7149, %r7283}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7683, %r7686}, {%r564, %r570, %r567, %r573}, {%r7158, %r7290}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7689, %r7692}, {%r564, %r570, %r567, %r573}, {%r7167, %r7297}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7695, %r7698}, {%r564, %r570, %r567, %r573}, {%r7176, %r7304}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7654, %r7657}, {%r564, %r570, %r567, %r573}, {%r7185, %r7311}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7660, %r7663}, {%r564, %r570, %r567, %r573}, {%r7194, %r7318}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7666, %r7669}, {%r564, %r570, %r567, %r573}, {%r7203, %r7325}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7672, %r7675}, {%r564, %r570, %r567, %r573}, {%r7212, %r7332}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r564, %r570, %r567, %r573}, {%r7221, %r7339}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r564, %r570, %r567, %r573}, {%r7230, %r7346}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r564, %r570, %r567, %r573}, {%r7239, %r7353}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r564, %r570, %r567, %r573}, {%r7248, %r7360}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7652, %r7653, %r7654;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7655, %r7656, %r7657;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7658, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7661, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7664, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7667, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7700, %r7653, %r7654;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7703, %r7656, %r7657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7706, %r7659, %r7660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7709, %r7662, %r7663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7712, %r7665, %r7666;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7715, %r7668, %r7669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7718, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7721, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7724, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7748, %r10, %r7652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7751, %r10, %r7655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7754, %r10, %r7658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7757, %r10, %r7661;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7760, %r10, %r7664;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7763, %r10, %r7667;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7766, %r10, %r7670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7769, %r10, %r7673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7772, %r10, %r7676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r10, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r10, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r10, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r10, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r10, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r10, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r10, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r11, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r11, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r11, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r11, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r11, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r11, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r11, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r11, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r11, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r11, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r11, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r11, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r11, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r11, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r11, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r11, %r7745;
	// end inline asm
	// begin inline asm
	mov.b32 %r7844, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7845, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7846, %r7748, %r7844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7849, %r7846, %r7845;
	// end inline asm
	// begin inline asm
	mov.b32 %r7852, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7853, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7854, %r7751, %r7852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7857, %r7854, %r7853;
	// end inline asm
	// begin inline asm
	mov.b32 %r7860, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7861, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7862, %r7754, %r7860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7865, %r7862, %r7861;
	// end inline asm
	// begin inline asm
	mov.b32 %r7868, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7869, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7870, %r7757, %r7868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7873, %r7870, %r7869;
	// end inline asm
	// begin inline asm
	mov.b32 %r7876, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7877, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7878, %r7760, %r7876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7881, %r7878, %r7877;
	// end inline asm
	// begin inline asm
	mov.b32 %r7884, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7885, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7886, %r7763, %r7884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7889, %r7886, %r7885;
	// end inline asm
	// begin inline asm
	mov.b32 %r7892, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7893, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7894, %r7766, %r7892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7897, %r7894, %r7893;
	// end inline asm
	// begin inline asm
	mov.b32 %r7900, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7901, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7902, %r7769, %r7900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7905, %r7902, %r7901;
	// end inline asm
	// begin inline asm
	mov.b32 %r7908, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7909, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7910, %r7772, %r7908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7913, %r7910, %r7909;
	// end inline asm
	// begin inline asm
	mov.b32 %r7916, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7917, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7918, %r7775, %r7916;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7921, %r7918, %r7917;
	// end inline asm
	// begin inline asm
	mov.b32 %r7924, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7925, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7926, %r7778, %r7924;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7929, %r7926, %r7925;
	// end inline asm
	// begin inline asm
	mov.b32 %r7932, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7933, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7934, %r7781, %r7932;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7937, %r7934, %r7933;
	// end inline asm
	// begin inline asm
	mov.b32 %r7940, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7941, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7942, %r7784, %r7940;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7945, %r7942, %r7941;
	// end inline asm
	// begin inline asm
	mov.b32 %r7948, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7949, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7950, %r7787, %r7948;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7953, %r7950, %r7949;
	// end inline asm
	// begin inline asm
	mov.b32 %r7956, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7957, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7958, %r7790, %r7956;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7961, %r7958, %r7957;
	// end inline asm
	// begin inline asm
	mov.b32 %r7964, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7965, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7966, %r7793, %r7964;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7969, %r7966, %r7965;
	// end inline asm
	// begin inline asm
	mov.b32 %r7972, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7973, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7974, %r7796, %r7972;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7977, %r7974, %r7973;
	// end inline asm
	// begin inline asm
	mov.b32 %r7980, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7981, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7982, %r7799, %r7980;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7985, %r7982, %r7981;
	// end inline asm
	// begin inline asm
	mov.b32 %r7988, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7989, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7990, %r7802, %r7988;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7993, %r7990, %r7989;
	// end inline asm
	// begin inline asm
	mov.b32 %r7996, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7997, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7998, %r7805, %r7996;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8001, %r7998, %r7997;
	// end inline asm
	// begin inline asm
	mov.b32 %r8004, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8005, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8006, %r7808, %r8004;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8009, %r8006, %r8005;
	// end inline asm
	// begin inline asm
	mov.b32 %r8012, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8013, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8014, %r7811, %r8012;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8017, %r8014, %r8013;
	// end inline asm
	// begin inline asm
	mov.b32 %r8020, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8021, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8022, %r7814, %r8020;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8025, %r8022, %r8021;
	// end inline asm
	// begin inline asm
	mov.b32 %r8028, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8029, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8030, %r7817, %r8028;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8033, %r8030, %r8029;
	// end inline asm
	// begin inline asm
	mov.b32 %r8036, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8037, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8038, %r7820, %r8036;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8041, %r8038, %r8037;
	// end inline asm
	// begin inline asm
	mov.b32 %r8044, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8045, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8046, %r7823, %r8044;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8049, %r8046, %r8045;
	// end inline asm
	// begin inline asm
	mov.b32 %r8052, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8053, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8054, %r7826, %r8052;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8057, %r8054, %r8053;
	// end inline asm
	// begin inline asm
	mov.b32 %r8060, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8061, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8062, %r7829, %r8060;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8065, %r8062, %r8061;
	// end inline asm
	// begin inline asm
	mov.b32 %r8068, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8069, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8070, %r7832, %r8068;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8073, %r8070, %r8069;
	// end inline asm
	// begin inline asm
	mov.b32 %r8076, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8077, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8078, %r7835, %r8076;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8081, %r8078, %r8077;
	// end inline asm
	// begin inline asm
	mov.b32 %r8084, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8085, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8086, %r7838, %r8084;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8089, %r8086, %r8085;
	// end inline asm
	// begin inline asm
	mov.b32 %r8092, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8093, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8094, %r7841, %r8092;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8097, %r8094, %r8093;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8102, %r8103, %r8101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8105, %r7849, %r8102;
	// end inline asm
	// begin inline asm
	mov.b32 %r8108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8109, %r8103, %r8108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8112, %r7857, %r8109;
	// end inline asm
	// begin inline asm
	mov.b32 %r8115, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8116, %r8103, %r8115;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8119, %r7865, %r8116;
	// end inline asm
	// begin inline asm
	mov.b32 %r8122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8123, %r8103, %r8122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8126, %r7873, %r8123;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8129, %r8105, %r8119, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8133, %r8112, %r8126, %r4316;
	// end inline asm
	shl.b32 	%r8140, %r8133, 4;
	// begin inline asm
	lop3.b32 %r8137, %r4322, %r8129, %r8140, 202;
	// end inline asm
	xor.b32  	%r16076, %r8137, -2004318072;
	// begin inline asm
	mov.b32 %r8144, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8143, %r8144, %r8142;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8146, %r7881, %r8143;
	// end inline asm
	// begin inline asm
	mov.b32 %r8149, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8150, %r8144, %r8149;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8153, %r7889, %r8150;
	// end inline asm
	// begin inline asm
	mov.b32 %r8156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8157, %r8144, %r8156;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8160, %r7897, %r8157;
	// end inline asm
	// begin inline asm
	mov.b32 %r8163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8164, %r8144, %r8163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8167, %r7905, %r8164;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8170, %r8146, %r8160, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8174, %r8153, %r8167, %r4316;
	// end inline asm
	shl.b32 	%r8181, %r8174, 4;
	// begin inline asm
	lop3.b32 %r8178, %r4322, %r8170, %r8181, 202;
	// end inline asm
	xor.b32  	%r16077, %r8178, -2004318072;
	// begin inline asm
	mov.b32 %r8185, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8183, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8184, %r8185, %r8183;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8187, %r7913, %r8184;
	// end inline asm
	// begin inline asm
	mov.b32 %r8190, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8191, %r8185, %r8190;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8194, %r7921, %r8191;
	// end inline asm
	// begin inline asm
	mov.b32 %r8197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8198, %r8185, %r8197;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8201, %r7929, %r8198;
	// end inline asm
	// begin inline asm
	mov.b32 %r8204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8205, %r8185, %r8204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8208, %r7937, %r8205;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8211, %r8187, %r8201, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8215, %r8194, %r8208, %r4316;
	// end inline asm
	shl.b32 	%r8222, %r8215, 4;
	// begin inline asm
	lop3.b32 %r8219, %r4322, %r8211, %r8222, 202;
	// end inline asm
	xor.b32  	%r16078, %r8219, -2004318072;
	// begin inline asm
	mov.b32 %r8226, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8225, %r8226, %r8224;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8228, %r7945, %r8225;
	// end inline asm
	// begin inline asm
	mov.b32 %r8231, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8232, %r8226, %r8231;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8235, %r7953, %r8232;
	// end inline asm
	// begin inline asm
	mov.b32 %r8238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8239, %r8226, %r8238;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8242, %r7961, %r8239;
	// end inline asm
	// begin inline asm
	mov.b32 %r8245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8246, %r8226, %r8245;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8249, %r7969, %r8246;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8252, %r8228, %r8242, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8256, %r8235, %r8249, %r4316;
	// end inline asm
	shl.b32 	%r8263, %r8256, 4;
	// begin inline asm
	lop3.b32 %r8260, %r4322, %r8252, %r8263, 202;
	// end inline asm
	xor.b32  	%r16079, %r8260, -2004318072;
	// begin inline asm
	mov.b32 %r8267, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8265, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8266, %r8267, %r8265;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8269, %r7977, %r8266;
	// end inline asm
	// begin inline asm
	mov.b32 %r8272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8273, %r8267, %r8272;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8276, %r7985, %r8273;
	// end inline asm
	// begin inline asm
	mov.b32 %r8279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8280, %r8267, %r8279;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8283, %r7993, %r8280;
	// end inline asm
	// begin inline asm
	mov.b32 %r8286, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8287, %r8267, %r8286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8290, %r8001, %r8287;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8293, %r8269, %r8283, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8297, %r8276, %r8290, %r4316;
	// end inline asm
	shl.b32 	%r8304, %r8297, 4;
	// begin inline asm
	lop3.b32 %r8301, %r4322, %r8293, %r8304, 202;
	// end inline asm
	xor.b32  	%r16080, %r8301, -2004318072;
	// begin inline asm
	mov.b32 %r8308, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8307, %r8308, %r8306;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8310, %r8009, %r8307;
	// end inline asm
	// begin inline asm
	mov.b32 %r8313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8314, %r8308, %r8313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8317, %r8017, %r8314;
	// end inline asm
	// begin inline asm
	mov.b32 %r8320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8321, %r8308, %r8320;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8324, %r8025, %r8321;
	// end inline asm
	// begin inline asm
	mov.b32 %r8327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8328, %r8308, %r8327;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8331, %r8033, %r8328;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8334, %r8310, %r8324, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8338, %r8317, %r8331, %r4316;
	// end inline asm
	shl.b32 	%r8345, %r8338, 4;
	// begin inline asm
	lop3.b32 %r8342, %r4322, %r8334, %r8345, 202;
	// end inline asm
	xor.b32  	%r16081, %r8342, -2004318072;
	// begin inline asm
	mov.b32 %r8349, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8347, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8348, %r8349, %r8347;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8351, %r8041, %r8348;
	// end inline asm
	// begin inline asm
	mov.b32 %r8354, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8355, %r8349, %r8354;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8358, %r8049, %r8355;
	// end inline asm
	// begin inline asm
	mov.b32 %r8361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8362, %r8349, %r8361;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8365, %r8057, %r8362;
	// end inline asm
	// begin inline asm
	mov.b32 %r8368, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8369, %r8349, %r8368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8372, %r8065, %r8369;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8375, %r8351, %r8365, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8379, %r8358, %r8372, %r4316;
	// end inline asm
	shl.b32 	%r8386, %r8379, 4;
	// begin inline asm
	lop3.b32 %r8383, %r4322, %r8375, %r8386, 202;
	// end inline asm
	xor.b32  	%r16082, %r8383, -2004318072;
	// begin inline asm
	mov.b32 %r8390, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8389, %r8390, %r8388;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8392, %r8073, %r8389;
	// end inline asm
	// begin inline asm
	mov.b32 %r8395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8396, %r8390, %r8395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8399, %r8081, %r8396;
	// end inline asm
	// begin inline asm
	mov.b32 %r8402, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8403, %r8390, %r8402;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8406, %r8089, %r8403;
	// end inline asm
	// begin inline asm
	mov.b32 %r8409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8410, %r8390, %r8409;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8413, %r8097, %r8410;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8416, %r8392, %r8406, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8420, %r8399, %r8413, %r4316;
	// end inline asm
	shl.b32 	%r8427, %r8420, 4;
	// begin inline asm
	lop3.b32 %r8424, %r4322, %r8416, %r8427, 202;
	// end inline asm
	xor.b32  	%r16083, %r8424, -2004318072;
	st.shared.u32 	[%rd82], %r16076;
	st.shared.u32 	[%rd83], %r16077;
	st.shared.u32 	[%rd84], %r16078;
	st.shared.u32 	[%rd85], %r16079;
	st.shared.u32 	[%rd86], %r16080;
	st.shared.u32 	[%rd87], %r16081;
	st.shared.u32 	[%rd88], %r16082;
	st.shared.u32 	[%rd89], %r16083;
	ld.shared.u32 	%r16198, [%rd74];
	ld.shared.u32 	%r16199, [%rd75];
	ld.shared.u32 	%r16200, [%rd76];
	ld.shared.u32 	%r16201, [%rd77];
	ld.shared.u32 	%r16210, [%rd78];
	ld.shared.u32 	%r16211, [%rd79];
	ld.shared.u32 	%r16212, [%rd80];
	ld.shared.u32 	%r16213, [%rd81];
	// begin inline asm
	mov.b32 %r8433, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8444, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8432, %r16198, -2004318072;
	// begin inline asm
	lop3.b32 %r8430, %r799, %r8432, %r8433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8435, %r8433, %r8434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8438, %r8430, %r8435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8441, %r810, %r8432, %r8444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8446, %r8444, %r8445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8449, %r8441, %r8446;
	// end inline asm
	shr.u32 	%r8454, %r8432, 8;
	// begin inline asm
	lop3.b32 %r8452, %r799, %r8454, %r8433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8457, %r8433, %r8456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8460, %r8452, %r8457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8463, %r810, %r8454, %r8444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8468, %r8444, %r8467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8471, %r8463, %r8468;
	// end inline asm
	// begin inline asm
	mov.b32 %r8479, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8490, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8478, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r8476, %r799, %r8478, %r8479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8481, %r8479, %r8480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8484, %r8476, %r8481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8487, %r810, %r8478, %r8490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8492, %r8490, %r8491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8495, %r8487, %r8492;
	// end inline asm
	shr.u32 	%r8500, %r8478, 8;
	// begin inline asm
	lop3.b32 %r8498, %r799, %r8500, %r8479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8503, %r8479, %r8502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8506, %r8498, %r8503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8509, %r810, %r8500, %r8490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8514, %r8490, %r8513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8517, %r8509, %r8514;
	// end inline asm
	// begin inline asm
	mov.b32 %r8525, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8536, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8524, %r16200, -2004318072;
	// begin inline asm
	lop3.b32 %r8522, %r799, %r8524, %r8525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8527, %r8525, %r8526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8530, %r8522, %r8527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8533, %r810, %r8524, %r8536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8538, %r8536, %r8537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8541, %r8533, %r8538;
	// end inline asm
	shr.u32 	%r8546, %r8524, 8;
	// begin inline asm
	lop3.b32 %r8544, %r799, %r8546, %r8525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8549, %r8525, %r8548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8552, %r8544, %r8549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8555, %r810, %r8546, %r8536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8560, %r8536, %r8559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8563, %r8555, %r8560;
	// end inline asm
	// begin inline asm
	mov.b32 %r8571, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8582, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8570, %r16201, -2004318072;
	// begin inline asm
	lop3.b32 %r8568, %r799, %r8570, %r8571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8573, %r8571, %r8572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8576, %r8568, %r8573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8579, %r810, %r8570, %r8582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8584, %r8582, %r8583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8587, %r8579, %r8584;
	// end inline asm
	shr.u32 	%r8592, %r8570, 8;
	// begin inline asm
	lop3.b32 %r8590, %r799, %r8592, %r8571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8595, %r8571, %r8594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8598, %r8590, %r8595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8601, %r810, %r8592, %r8582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8606, %r8582, %r8605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8609, %r8601, %r8606;
	// end inline asm
	// begin inline asm
	mov.b32 %r8617, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8628, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8616, %r16210, -2004318072;
	// begin inline asm
	lop3.b32 %r8614, %r799, %r8616, %r8617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8619, %r8617, %r8618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8622, %r8614, %r8619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8625, %r810, %r8616, %r8628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8630, %r8628, %r8629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8633, %r8625, %r8630;
	// end inline asm
	shr.u32 	%r8638, %r8616, 8;
	// begin inline asm
	lop3.b32 %r8636, %r799, %r8638, %r8617, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8640, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8641, %r8617, %r8640;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8644, %r8636, %r8641;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8647, %r810, %r8638, %r8628, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8651, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8652, %r8628, %r8651;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8655, %r8647, %r8652;
	// end inline asm
	// begin inline asm
	mov.b32 %r8663, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8674, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8662, %r16211, -2004318072;
	// begin inline asm
	lop3.b32 %r8660, %r799, %r8662, %r8663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8665, %r8663, %r8664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8668, %r8660, %r8665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8671, %r810, %r8662, %r8674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8676, %r8674, %r8675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8679, %r8671, %r8676;
	// end inline asm
	shr.u32 	%r8684, %r8662, 8;
	// begin inline asm
	lop3.b32 %r8682, %r799, %r8684, %r8663, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8687, %r8663, %r8686;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8690, %r8682, %r8687;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8693, %r810, %r8684, %r8674, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8697, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8698, %r8674, %r8697;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8701, %r8693, %r8698;
	// end inline asm
	// begin inline asm
	mov.b32 %r8709, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8720, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8708, %r16212, -2004318072;
	// begin inline asm
	lop3.b32 %r8706, %r799, %r8708, %r8709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8711, %r8709, %r8710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8714, %r8706, %r8711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8717, %r810, %r8708, %r8720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8722, %r8720, %r8721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8725, %r8717, %r8722;
	// end inline asm
	shr.u32 	%r8730, %r8708, 8;
	// begin inline asm
	lop3.b32 %r8728, %r799, %r8730, %r8709, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8732, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8733, %r8709, %r8732;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8736, %r8728, %r8733;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8739, %r810, %r8730, %r8720, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8743, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8744, %r8720, %r8743;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8747, %r8739, %r8744;
	// end inline asm
	// begin inline asm
	mov.b32 %r8755, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8766, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8754, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r8752, %r799, %r8754, %r8755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8757, %r8755, %r8756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8760, %r8752, %r8757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8763, %r810, %r8754, %r8766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8768, %r8766, %r8767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8771, %r8763, %r8768;
	// end inline asm
	shr.u32 	%r8776, %r8754, 8;
	// begin inline asm
	lop3.b32 %r8774, %r799, %r8776, %r8755, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8779, %r8755, %r8778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8782, %r8774, %r8779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8785, %r810, %r8776, %r8766, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8790, %r8766, %r8789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8793, %r8785, %r8790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8796, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8798, %r8796, %r8438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8801, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8803, %r8801, %r8449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8806, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8808, %r8806, %r8460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8811, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8813, %r8811, %r8471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8816, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8818, %r8816, %r8484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8821, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8823, %r8821, %r8495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8826, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8828, %r8826, %r8506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8831, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8833, %r8831, %r8517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8836, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8838, %r8836, %r8530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8841, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8843, %r8841, %r8541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8846, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8848, %r8846, %r8552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8851, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8853, %r8851, %r8563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8856, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8858, %r8856, %r8576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8861, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8863, %r8861, %r8587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8866, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8868, %r8866, %r8598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8871, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8873, %r8871, %r8609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8876, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8878, %r8876, %r8622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8881, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8883, %r8881, %r8633;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8886, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8888, %r8886, %r8644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8891, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8893, %r8891, %r8655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8690;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8701;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8725;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8747;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8793;
	// end inline asm
	// begin inline asm
	mov.b32 %r8961, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8972, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8958, %r799, %r2384, %r8961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8963, %r8961, %r8962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8966, %r8958, %r8963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8969, %r810, %r2384, %r8972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8974, %r8972, %r8973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8977, %r8969, %r8974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8980, %r799, %r2406, %r8961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8985, %r8961, %r8984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8988, %r8980, %r8985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8991, %r810, %r2406, %r8972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8996, %r8972, %r8995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8999, %r8991, %r8996;
	// end inline asm
	// begin inline asm
	mov.b32 %r9007, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9018, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9004, %r799, %r2430, %r9007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9009, %r9007, %r9008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9012, %r9004, %r9009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9015, %r810, %r2430, %r9018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9020, %r9018, %r9019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9023, %r9015, %r9020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9026, %r799, %r2452, %r9007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9031, %r9007, %r9030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9034, %r9026, %r9031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9037, %r810, %r2452, %r9018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9042, %r9018, %r9041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9045, %r9037, %r9042;
	// end inline asm
	// begin inline asm
	mov.b32 %r9053, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9064, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9050, %r799, %r2476, %r9053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9055, %r9053, %r9054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9058, %r9050, %r9055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9061, %r810, %r2476, %r9064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9066, %r9064, %r9065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9069, %r9061, %r9066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9072, %r799, %r2498, %r9053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9077, %r9053, %r9076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9080, %r9072, %r9077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9083, %r810, %r2498, %r9064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9088, %r9064, %r9087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9091, %r9083, %r9088;
	// end inline asm
	// begin inline asm
	mov.b32 %r9099, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9110, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9096, %r799, %r2522, %r9099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9101, %r9099, %r9100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9104, %r9096, %r9101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9107, %r810, %r2522, %r9110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9112, %r9110, %r9111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9115, %r9107, %r9112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9118, %r799, %r2544, %r9099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9123, %r9099, %r9122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9126, %r9118, %r9123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9129, %r810, %r2544, %r9110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9134, %r9110, %r9133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9137, %r9129, %r9134;
	// end inline asm
	// begin inline asm
	mov.b32 %r9145, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9156, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9142, %r799, %r2568, %r9145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9146, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9147, %r9145, %r9146;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9150, %r9142, %r9147;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9153, %r810, %r2568, %r9156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9157, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9158, %r9156, %r9157;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9161, %r9153, %r9158;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9164, %r799, %r2590, %r9145, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9169, %r9145, %r9168;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9172, %r9164, %r9169;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9175, %r810, %r2590, %r9156, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9179, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9180, %r9156, %r9179;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9183, %r9175, %r9180;
	// end inline asm
	// begin inline asm
	mov.b32 %r9191, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9202, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9188, %r799, %r2614, %r9191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9192, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9193, %r9191, %r9192;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9196, %r9188, %r9193;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9199, %r810, %r2614, %r9202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9204, %r9202, %r9203;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9207, %r9199, %r9204;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9210, %r799, %r2636, %r9191, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9214, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9215, %r9191, %r9214;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9218, %r9210, %r9215;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9221, %r810, %r2636, %r9202, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9226, %r9202, %r9225;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9229, %r9221, %r9226;
	// end inline asm
	// begin inline asm
	mov.b32 %r9237, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9248, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9234, %r799, %r2660, %r9237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9238, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9239, %r9237, %r9238;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9242, %r9234, %r9239;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9245, %r810, %r2660, %r9248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9250, %r9248, %r9249;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9253, %r9245, %r9250;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9256, %r799, %r2682, %r9237, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9260, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9261, %r9237, %r9260;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9264, %r9256, %r9261;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9267, %r810, %r2682, %r9248, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9272, %r9248, %r9271;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9275, %r9267, %r9272;
	// end inline asm
	// begin inline asm
	mov.b32 %r9283, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9294, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9280, %r799, %r2706, %r9283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9285, %r9283, %r9284;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9288, %r9280, %r9285;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9291, %r810, %r2706, %r9294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9295, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9296, %r9294, %r9295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9299, %r9291, %r9296;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9302, %r799, %r2728, %r9283, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9306, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9307, %r9283, %r9306;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9310, %r9302, %r9307;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9313, %r810, %r2728, %r9294, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9318, %r9294, %r9317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9321, %r9313, %r9318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9324, %r272, %r8966, %r8798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9328, %r272, %r8977, %r8803;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9332, %r272, %r8988, %r8808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9336, %r272, %r8999, %r8813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9340, %r272, %r9012, %r8818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9344, %r272, %r9023, %r8823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9348, %r272, %r9034, %r8828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9352, %r272, %r9045, %r8833;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9356, %r272, %r9058, %r8838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9360, %r272, %r9069, %r8843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9364, %r272, %r9080, %r8848;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9368, %r272, %r9091, %r8853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9372, %r272, %r9104, %r8858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9376, %r272, %r9115, %r8863;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9380, %r272, %r9126, %r8868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9384, %r272, %r9137, %r8873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9388, %r290, %r9150, %r8878;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9392, %r290, %r9161, %r8883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9396, %r290, %r9172, %r8888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9400, %r290, %r9183, %r8893;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9404, %r290, %r9196, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9408, %r290, %r9207, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9412, %r290, %r9218, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9416, %r290, %r9229, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9420, %r290, %r9242, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r290, %r9253, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r290, %r9264, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r290, %r9275, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r290, %r9288, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r290, %r9299, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r290, %r9310, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r290, %r9321, %r8953;
	// end inline asm
	// begin inline asm
	mov.b32 %r9457, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9468, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9454, %r799, %r800, %r9457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9459, %r9457, %r9458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9462, %r9454, %r9459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9465, %r810, %r800, %r9468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9470, %r9468, %r9469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9473, %r9465, %r9470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9476, %r799, %r822, %r9457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9481, %r9457, %r9480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9484, %r9476, %r9481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9487, %r810, %r822, %r9468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9492, %r9468, %r9491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9495, %r9487, %r9492;
	// end inline asm
	// begin inline asm
	mov.b32 %r9503, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9514, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9500, %r799, %r846, %r9503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9505, %r9503, %r9504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9508, %r9500, %r9505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9511, %r810, %r846, %r9514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9516, %r9514, %r9515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9519, %r9511, %r9516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9522, %r799, %r868, %r9503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9527, %r9503, %r9526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9530, %r9522, %r9527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9533, %r810, %r868, %r9514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9538, %r9514, %r9537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9541, %r9533, %r9538;
	// end inline asm
	// begin inline asm
	mov.b32 %r9549, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9560, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9546, %r799, %r892, %r9549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9551, %r9549, %r9550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9554, %r9546, %r9551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9557, %r810, %r892, %r9560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9562, %r9560, %r9561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9565, %r9557, %r9562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9568, %r799, %r914, %r9549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9573, %r9549, %r9572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9576, %r9568, %r9573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9579, %r810, %r914, %r9560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9584, %r9560, %r9583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9587, %r9579, %r9584;
	// end inline asm
	// begin inline asm
	mov.b32 %r9595, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9606, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9592, %r799, %r938, %r9595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9597, %r9595, %r9596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9600, %r9592, %r9597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9603, %r810, %r938, %r9606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9608, %r9606, %r9607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9611, %r9603, %r9608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9614, %r799, %r960, %r9595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9619, %r9595, %r9618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9622, %r9614, %r9619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9625, %r810, %r960, %r9606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9630, %r9606, %r9629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9633, %r9625, %r9630;
	// end inline asm
	// begin inline asm
	mov.b32 %r9641, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9652, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9638, %r799, %r984, %r9641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9642, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9643, %r9641, %r9642;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9646, %r9638, %r9643;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9649, %r810, %r984, %r9652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9654, %r9652, %r9653;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9657, %r9649, %r9654;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9660, %r799, %r1006, %r9641, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9664, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9665, %r9641, %r9664;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9668, %r9660, %r9665;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9671, %r810, %r1006, %r9652, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9675, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9676, %r9652, %r9675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9679, %r9671, %r9676;
	// end inline asm
	// begin inline asm
	mov.b32 %r9687, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9698, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9684, %r799, %r1030, %r9687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9688, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9689, %r9687, %r9688;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9692, %r9684, %r9689;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9695, %r810, %r1030, %r9698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9699, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9700, %r9698, %r9699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9703, %r9695, %r9700;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9706, %r799, %r1052, %r9687, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9710, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9711, %r9687, %r9710;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9714, %r9706, %r9711;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9717, %r810, %r1052, %r9698, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9721, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9722, %r9698, %r9721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9725, %r9717, %r9722;
	// end inline asm
	// begin inline asm
	mov.b32 %r9733, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9744, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9730, %r799, %r1076, %r9733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9734, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9735, %r9733, %r9734;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9738, %r9730, %r9735;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9741, %r810, %r1076, %r9744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9745, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9746, %r9744, %r9745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9749, %r9741, %r9746;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9752, %r799, %r1098, %r9733, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9756, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9757, %r9733, %r9756;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9760, %r9752, %r9757;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9763, %r810, %r1098, %r9744, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9767, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9768, %r9744, %r9767;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9771, %r9763, %r9768;
	// end inline asm
	// begin inline asm
	mov.b32 %r9779, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9790, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9776, %r799, %r1122, %r9779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9780, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9781, %r9779, %r9780;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9784, %r9776, %r9781;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9787, %r810, %r1122, %r9790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9791, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9792, %r9790, %r9791;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9795, %r9787, %r9792;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9798, %r799, %r1144, %r9779, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9802, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9803, %r9779, %r9802;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9806, %r9798, %r9803;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9809, %r810, %r1144, %r9790, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9813, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9814, %r9790, %r9813;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9817, %r9809, %r9814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9820, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9822, %r9820, %r9462, %r9324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9826, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9828, %r9826, %r9473, %r9328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9832, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9834, %r9832, %r9484, %r9332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9838, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9840, %r9838, %r9495, %r9336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9844, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9846, %r9844, %r9508, %r9340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9850, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9852, %r9850, %r9519, %r9344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9856, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9858, %r9856, %r9530, %r9348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9862, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9864, %r9862, %r9541, %r9352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9868, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9870, %r9868, %r9554, %r9356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9565, %r9360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9576, %r9364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9587, %r9368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9600, %r9372;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9611, %r9376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9622, %r9380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9633, %r9384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9646, %r9388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9657, %r9392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9668, %r9396;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9679, %r9400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9692, %r9404;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9703, %r9408;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9714, %r9412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9725, %r9416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9738, %r9420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9749, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9760, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9771, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9784, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9795, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9806, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9817, %r9448;
	// end inline asm
	// begin inline asm
	mov.b32 %r10017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10028, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10014, %r799, %r4616, %r10017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10019, %r10017, %r10018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10022, %r10014, %r10019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10025, %r810, %r4616, %r10028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10030, %r10028, %r10029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10033, %r10025, %r10030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10036, %r799, %r4638, %r10017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10041, %r10017, %r10040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10044, %r10036, %r10041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10047, %r810, %r4638, %r10028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10052, %r10028, %r10051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10055, %r10047, %r10052;
	// end inline asm
	// begin inline asm
	mov.b32 %r10063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10074, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10060, %r799, %r4662, %r10063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10065, %r10063, %r10064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10068, %r10060, %r10065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10071, %r810, %r4662, %r10074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10076, %r10074, %r10075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10079, %r10071, %r10076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10082, %r799, %r4684, %r10063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10087, %r10063, %r10086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10090, %r10082, %r10087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10093, %r810, %r4684, %r10074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10098, %r10074, %r10097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10101, %r10093, %r10098;
	// end inline asm
	// begin inline asm
	mov.b32 %r10109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10120, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10106, %r799, %r4708, %r10109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10111, %r10109, %r10110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10114, %r10106, %r10111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10117, %r810, %r4708, %r10120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10122, %r10120, %r10121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10125, %r10117, %r10122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10128, %r799, %r4730, %r10109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10133, %r10109, %r10132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10136, %r10128, %r10133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10139, %r810, %r4730, %r10120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10144, %r10120, %r10143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10147, %r10139, %r10144;
	// end inline asm
	// begin inline asm
	mov.b32 %r10155, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10166, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10152, %r799, %r4754, %r10155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10157, %r10155, %r10156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10160, %r10152, %r10157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10163, %r810, %r4754, %r10166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10168, %r10166, %r10167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10171, %r10163, %r10168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10174, %r799, %r4776, %r10155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10179, %r10155, %r10178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10182, %r10174, %r10179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10185, %r810, %r4776, %r10166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10190, %r10166, %r10189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10193, %r10185, %r10190;
	// end inline asm
	// begin inline asm
	mov.b32 %r10201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10212, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10198, %r799, %r4800, %r10201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10203, %r10201, %r10202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10206, %r10198, %r10203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10209, %r810, %r4800, %r10212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10214, %r10212, %r10213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10217, %r10209, %r10214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10220, %r799, %r4822, %r10201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10225, %r10201, %r10224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10228, %r10220, %r10225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10231, %r810, %r4822, %r10212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10236, %r10212, %r10235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10239, %r10231, %r10236;
	// end inline asm
	// begin inline asm
	mov.b32 %r10247, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10258, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10244, %r799, %r4846, %r10247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10249, %r10247, %r10248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10252, %r10244, %r10249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10255, %r810, %r4846, %r10258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10260, %r10258, %r10259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10263, %r10255, %r10260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10266, %r799, %r4868, %r10247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10271, %r10247, %r10270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10274, %r10266, %r10271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10277, %r810, %r4868, %r10258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10282, %r10258, %r10281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10285, %r10277, %r10282;
	// end inline asm
	// begin inline asm
	mov.b32 %r10293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10304, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10290, %r799, %r4892, %r10293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10294, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10295, %r10293, %r10294;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10298, %r10290, %r10295;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10301, %r810, %r4892, %r10304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10306, %r10304, %r10305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10309, %r10301, %r10306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10312, %r799, %r4914, %r10293, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10317, %r10293, %r10316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10320, %r10312, %r10317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10323, %r810, %r4914, %r10304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10328, %r10304, %r10327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10331, %r10323, %r10328;
	// end inline asm
	// begin inline asm
	mov.b32 %r10339, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10350, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10336, %r799, %r4938, %r10339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10340, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10341, %r10339, %r10340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10344, %r10336, %r10341;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10347, %r810, %r4938, %r10350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10352, %r10350, %r10351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10355, %r10347, %r10352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10358, %r799, %r4960, %r10339, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10363, %r10339, %r10362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10366, %r10358, %r10363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10369, %r810, %r4960, %r10350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10374, %r10350, %r10373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10377, %r10369, %r10374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10515, %r344, %r10022, %r9822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10512, %r344, %r10033, %r9828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10524, %r344, %r10044, %r9834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10521, %r344, %r10055, %r9840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10533, %r344, %r10068, %r9846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10530, %r344, %r10079, %r9852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r344, %r10090, %r9858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r344, %r10101, %r9864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r344, %r10114, %r9870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r344, %r10125, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r344, %r10136, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r344, %r10147, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r344, %r10160, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r344, %r10171, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r344, %r10182, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r344, %r10193, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r362, %r10206, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r362, %r10217, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r362, %r10228, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r362, %r10239, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r362, %r10252, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r362, %r10263, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r362, %r10274, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r362, %r10285, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r362, %r10298, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r362, %r10309, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r362, %r10320, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r362, %r10331, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r362, %r10344, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r362, %r10355, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r362, %r10366, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r362, %r10377, %r10008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10508, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10510, %r10508, %r10512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10513, %r426, %r10515, %r10510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10517, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10519, %r10517, %r10521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10522, %r426, %r10524, %r10519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10526, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10528, %r10526, %r10530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10531, %r426, %r10533, %r10528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10535, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10537, %r10535, %r10539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10540, %r426, %r10542, %r10537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10544, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10546, %r10544, %r10548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r426, %r10551, %r10546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10553, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10555, %r10553, %r10557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r426, %r10560, %r10555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10562, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10564, %r10562, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r426, %r10569, %r10564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10571, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10573, %r10571, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r426, %r10578, %r10573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10580, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10582, %r10580, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r429, %r10587, %r10582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10589, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10591, %r10589, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r429, %r10596, %r10591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10598, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10600, %r10598, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r429, %r10605, %r10600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10607, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10609, %r10607, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r429, %r10614, %r10609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10616, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10618, %r10616, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r429, %r10623, %r10618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10625, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10627, %r10625, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r429, %r10632, %r10627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10634, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10636, %r10634, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r429, %r10641, %r10636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10643, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10645, %r10643, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r429, %r10650, %r10645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10652, %r432, %r10515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10655, %r426, %r10512, %r10652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10659, %r432, %r10524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10662, %r426, %r10521, %r10659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10666, %r432, %r10533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r426, %r10530, %r10666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10673, %r432, %r10542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r426, %r10539, %r10673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10680, %r432, %r10551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10683, %r426, %r10548, %r10680;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10687, %r432, %r10560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r426, %r10557, %r10687;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r432, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r426, %r10566, %r10694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10701, %r432, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10704, %r426, %r10575, %r10701;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10708, %r435, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10711, %r429, %r10584, %r10708;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10715, %r435, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10718, %r429, %r10593, %r10715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10722, %r435, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10725, %r429, %r10602, %r10722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10729, %r435, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r429, %r10611, %r10729;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10736, %r435, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10739, %r429, %r10620, %r10736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10743, %r435, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10746, %r429, %r10629, %r10743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10750, %r435, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10753, %r429, %r10638, %r10750;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10757, %r435, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10760, %r429, %r10647, %r10757;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10931, %r10928}, {%r474, %r480, %r477, %r483}, {%r10513, %r10655}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10940, %r10937}, {%r474, %r480, %r477, %r483}, {%r10522, %r10662}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10949, %r10946}, {%r474, %r480, %r477, %r483}, {%r10531, %r10669}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10958, %r10955}, {%r474, %r480, %r477, %r483}, {%r10540, %r10676}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10967, %r10964}, {%r474, %r480, %r477, %r483}, {%r10549, %r10683}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10976, %r10973}, {%r474, %r480, %r477, %r483}, {%r10558, %r10690}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10985, %r10982}, {%r474, %r480, %r477, %r483}, {%r10567, %r10697}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10994, %r10991}, {%r474, %r480, %r477, %r483}, {%r10576, %r10704}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11003, %r11000}, {%r474, %r480, %r477, %r483}, {%r10585, %r10711}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11012, %r11009}, {%r474, %r480, %r477, %r483}, {%r10594, %r10718}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11021, %r11018}, {%r474, %r480, %r477, %r483}, {%r10603, %r10725}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11030, %r11027}, {%r474, %r480, %r477, %r483}, {%r10612, %r10732}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11039, %r11036}, {%r474, %r480, %r477, %r483}, {%r10621, %r10739}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11048, %r11045}, {%r474, %r480, %r477, %r483}, {%r10630, %r10746}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11057, %r11054}, {%r474, %r480, %r477, %r483}, {%r10639, %r10753}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11066, %r11063}, {%r474, %r480, %r477, %r483}, {%r10648, %r10760}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10924, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10926, %r10924, %r10928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10929, %r521, %r10931, %r10926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10933, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10935, %r10933, %r10937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10938, %r521, %r10940, %r10935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10942, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10944, %r10942, %r10946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10947, %r521, %r10949, %r10944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10951, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10953, %r10951, %r10955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10956, %r521, %r10958, %r10953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10960, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10962, %r10960, %r10964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10965, %r521, %r10967, %r10962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10969, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10971, %r10969, %r10973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10974, %r521, %r10976, %r10971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10978, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10980, %r10978, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10983, %r521, %r10985, %r10980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10987, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10989, %r10987, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10992, %r521, %r10994, %r10989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10996, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10998, %r10996, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11001, %r521, %r11003, %r10998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11005, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11007, %r11005, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11010, %r521, %r11012, %r11007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11014, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11016, %r11014, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11019, %r521, %r11021, %r11016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11023, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11025, %r11023, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11028, %r521, %r11030, %r11025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11032, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11034, %r11032, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11037, %r521, %r11039, %r11034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11041, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11043, %r11041, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11046, %r521, %r11048, %r11043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11050, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11052, %r11050, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11055, %r521, %r11057, %r11052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11059, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11061, %r11059, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11064, %r521, %r11066, %r11061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11068, %r524, %r10931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11071, %r521, %r10928, %r11068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11075, %r524, %r10940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11078, %r521, %r10937, %r11075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11082, %r524, %r10949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11085, %r521, %r10946, %r11082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11089, %r524, %r10958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11092, %r521, %r10955, %r11089;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11096, %r524, %r10967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11099, %r521, %r10964, %r11096;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11103, %r524, %r10976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11106, %r521, %r10973, %r11103;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r524, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r521, %r10982, %r11110;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11117, %r524, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11120, %r521, %r10991, %r11117;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11124, %r524, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11127, %r521, %r11000, %r11124;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11131, %r524, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11134, %r521, %r11009, %r11131;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11138, %r524, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11141, %r521, %r11018, %r11138;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11145, %r524, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11148, %r521, %r11027, %r11145;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11152, %r524, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11155, %r521, %r11036, %r11152;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11159, %r524, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11162, %r521, %r11045, %r11159;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11166, %r524, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11169, %r521, %r11054, %r11166;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11173, %r524, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11176, %r521, %r11063, %r11173;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11469, %r11472}, {%r564, %r570, %r567, %r573}, {%r10929, %r11071}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11475, %r11478}, {%r564, %r570, %r567, %r573}, {%r10938, %r11078}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11481, %r11484}, {%r564, %r570, %r567, %r573}, {%r10947, %r11085}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11487, %r11490}, {%r564, %r570, %r567, %r573}, {%r10956, %r11092}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11493, %r11496}, {%r564, %r570, %r567, %r573}, {%r10965, %r11099}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11499, %r11502}, {%r564, %r570, %r567, %r573}, {%r10974, %r11106}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11505, %r11508}, {%r564, %r570, %r567, %r573}, {%r10983, %r11113}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11511, %r11514}, {%r564, %r570, %r567, %r573}, {%r10992, %r11120}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11470, %r11473}, {%r564, %r570, %r567, %r573}, {%r11001, %r11127}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11476, %r11479}, {%r564, %r570, %r567, %r573}, {%r11010, %r11134}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11482, %r11485}, {%r564, %r570, %r567, %r573}, {%r11019, %r11141}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11488, %r11491}, {%r564, %r570, %r567, %r573}, {%r11028, %r11148}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r564, %r570, %r567, %r573}, {%r11037, %r11155}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r564, %r570, %r567, %r573}, {%r11046, %r11162}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r564, %r570, %r567, %r573}, {%r11055, %r11169}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r564, %r570, %r567, %r573}, {%r11064, %r11176}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11468, %r11469, %r11470;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11471, %r11472, %r11473;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11474, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11477, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11480, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11483, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11486, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11489, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11492, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11516, %r11469, %r11470;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11519, %r11472, %r11473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11522, %r11475, %r11476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11525, %r11478, %r11479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11528, %r11481, %r11482;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11531, %r11484, %r11485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11534, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11537, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11540, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11564, %r10, %r11468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11567, %r10, %r11471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11570, %r10, %r11474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11573, %r10, %r11477;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11576, %r10, %r11480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11579, %r10, %r11483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11582, %r10, %r11486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11585, %r10, %r11489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11588, %r10, %r11492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r10, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r10, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r10, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r10, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r10, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r10, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r10, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r11, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r11, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r11, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r11, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r11, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r11, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r11, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r11, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r11, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r11, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r11, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r11, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r11, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r11, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r11, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r11, %r11561;
	// end inline asm
	// begin inline asm
	mov.b32 %r11660, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11661, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11662, %r11564, %r11660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11665, %r11662, %r11661;
	// end inline asm
	// begin inline asm
	mov.b32 %r11668, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11669, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11670, %r11567, %r11668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11673, %r11670, %r11669;
	// end inline asm
	// begin inline asm
	mov.b32 %r11676, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11677, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11678, %r11570, %r11676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11681, %r11678, %r11677;
	// end inline asm
	// begin inline asm
	mov.b32 %r11684, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11685, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11686, %r11573, %r11684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11689, %r11686, %r11685;
	// end inline asm
	// begin inline asm
	mov.b32 %r11692, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11693, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11694, %r11576, %r11692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11697, %r11694, %r11693;
	// end inline asm
	// begin inline asm
	mov.b32 %r11700, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11701, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11702, %r11579, %r11700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11705, %r11702, %r11701;
	// end inline asm
	// begin inline asm
	mov.b32 %r11708, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11709, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11710, %r11582, %r11708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11713, %r11710, %r11709;
	// end inline asm
	// begin inline asm
	mov.b32 %r11716, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11717, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11718, %r11585, %r11716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11721, %r11718, %r11717;
	// end inline asm
	// begin inline asm
	mov.b32 %r11724, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11725, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11726, %r11588, %r11724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11729, %r11726, %r11725;
	// end inline asm
	// begin inline asm
	mov.b32 %r11732, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11733, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11734, %r11591, %r11732;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11737, %r11734, %r11733;
	// end inline asm
	// begin inline asm
	mov.b32 %r11740, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11741, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11742, %r11594, %r11740;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11745, %r11742, %r11741;
	// end inline asm
	// begin inline asm
	mov.b32 %r11748, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11749, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11750, %r11597, %r11748;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11753, %r11750, %r11749;
	// end inline asm
	// begin inline asm
	mov.b32 %r11756, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11757, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11758, %r11600, %r11756;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11761, %r11758, %r11757;
	// end inline asm
	// begin inline asm
	mov.b32 %r11764, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11765, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11766, %r11603, %r11764;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11769, %r11766, %r11765;
	// end inline asm
	// begin inline asm
	mov.b32 %r11772, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11773, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11774, %r11606, %r11772;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11777, %r11774, %r11773;
	// end inline asm
	// begin inline asm
	mov.b32 %r11780, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11781, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11782, %r11609, %r11780;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11785, %r11782, %r11781;
	// end inline asm
	// begin inline asm
	mov.b32 %r11788, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11789, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11790, %r11612, %r11788;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11793, %r11790, %r11789;
	// end inline asm
	// begin inline asm
	mov.b32 %r11796, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11797, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11798, %r11615, %r11796;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11801, %r11798, %r11797;
	// end inline asm
	// begin inline asm
	mov.b32 %r11804, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11805, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11806, %r11618, %r11804;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11809, %r11806, %r11805;
	// end inline asm
	// begin inline asm
	mov.b32 %r11812, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11813, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11814, %r11621, %r11812;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11817, %r11814, %r11813;
	// end inline asm
	// begin inline asm
	mov.b32 %r11820, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11821, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11822, %r11624, %r11820;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11825, %r11822, %r11821;
	// end inline asm
	// begin inline asm
	mov.b32 %r11828, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11829, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11830, %r11627, %r11828;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11833, %r11830, %r11829;
	// end inline asm
	// begin inline asm
	mov.b32 %r11836, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11837, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11838, %r11630, %r11836;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11841, %r11838, %r11837;
	// end inline asm
	// begin inline asm
	mov.b32 %r11844, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11845, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11846, %r11633, %r11844;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11849, %r11846, %r11845;
	// end inline asm
	// begin inline asm
	mov.b32 %r11852, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11853, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11854, %r11636, %r11852;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11857, %r11854, %r11853;
	// end inline asm
	// begin inline asm
	mov.b32 %r11860, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11861, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11862, %r11639, %r11860;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11865, %r11862, %r11861;
	// end inline asm
	// begin inline asm
	mov.b32 %r11868, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11869, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11870, %r11642, %r11868;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11873, %r11870, %r11869;
	// end inline asm
	// begin inline asm
	mov.b32 %r11876, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11877, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11878, %r11645, %r11876;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11881, %r11878, %r11877;
	// end inline asm
	// begin inline asm
	mov.b32 %r11884, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11885, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11886, %r11648, %r11884;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11889, %r11886, %r11885;
	// end inline asm
	// begin inline asm
	mov.b32 %r11892, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11893, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11894, %r11651, %r11892;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11897, %r11894, %r11893;
	// end inline asm
	// begin inline asm
	mov.b32 %r11900, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11901, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11902, %r11654, %r11900;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11905, %r11902, %r11901;
	// end inline asm
	// begin inline asm
	mov.b32 %r11908, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11909, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11910, %r11657, %r11908;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11913, %r11910, %r11909;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11917, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11918, %r11919, %r11917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11921, %r11665, %r11918;
	// end inline asm
	// begin inline asm
	mov.b32 %r11924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11925, %r11919, %r11924;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11928, %r11673, %r11925;
	// end inline asm
	// begin inline asm
	mov.b32 %r11931, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11932, %r11919, %r11931;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11935, %r11681, %r11932;
	// end inline asm
	// begin inline asm
	mov.b32 %r11938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11939, %r11919, %r11938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11942, %r11689, %r11939;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11945, %r11921, %r11935, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11949, %r11928, %r11942, %r4316;
	// end inline asm
	shl.b32 	%r11956, %r11949, 4;
	// begin inline asm
	lop3.b32 %r11953, %r4322, %r11945, %r11956, 202;
	// end inline asm
	xor.b32  	%r16084, %r11953, -2004318072;
	// begin inline asm
	mov.b32 %r11960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11959, %r11960, %r11958;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11962, %r11697, %r11959;
	// end inline asm
	// begin inline asm
	mov.b32 %r11965, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11966, %r11960, %r11965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11969, %r11705, %r11966;
	// end inline asm
	// begin inline asm
	mov.b32 %r11972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11973, %r11960, %r11972;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11976, %r11713, %r11973;
	// end inline asm
	// begin inline asm
	mov.b32 %r11979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11980, %r11960, %r11979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11983, %r11721, %r11980;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11986, %r11962, %r11976, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11990, %r11969, %r11983, %r4316;
	// end inline asm
	shl.b32 	%r11997, %r11990, 4;
	// begin inline asm
	lop3.b32 %r11994, %r4322, %r11986, %r11997, 202;
	// end inline asm
	xor.b32  	%r16085, %r11994, -2004318072;
	// begin inline asm
	mov.b32 %r12001, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11999, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12000, %r12001, %r11999;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12003, %r11729, %r12000;
	// end inline asm
	// begin inline asm
	mov.b32 %r12006, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12007, %r12001, %r12006;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12010, %r11737, %r12007;
	// end inline asm
	// begin inline asm
	mov.b32 %r12013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12014, %r12001, %r12013;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12017, %r11745, %r12014;
	// end inline asm
	// begin inline asm
	mov.b32 %r12020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12021, %r12001, %r12020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12024, %r11753, %r12021;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12027, %r12003, %r12017, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12031, %r12010, %r12024, %r4316;
	// end inline asm
	shl.b32 	%r12038, %r12031, 4;
	// begin inline asm
	lop3.b32 %r12035, %r4322, %r12027, %r12038, 202;
	// end inline asm
	xor.b32  	%r16086, %r12035, -2004318072;
	// begin inline asm
	mov.b32 %r12042, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12041, %r12042, %r12040;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12044, %r11761, %r12041;
	// end inline asm
	// begin inline asm
	mov.b32 %r12047, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12048, %r12042, %r12047;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12051, %r11769, %r12048;
	// end inline asm
	// begin inline asm
	mov.b32 %r12054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12055, %r12042, %r12054;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12058, %r11777, %r12055;
	// end inline asm
	// begin inline asm
	mov.b32 %r12061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12062, %r12042, %r12061;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12065, %r11785, %r12062;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12068, %r12044, %r12058, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12072, %r12051, %r12065, %r4316;
	// end inline asm
	shl.b32 	%r12079, %r12072, 4;
	// begin inline asm
	lop3.b32 %r12076, %r4322, %r12068, %r12079, 202;
	// end inline asm
	xor.b32  	%r16087, %r12076, -2004318072;
	// begin inline asm
	mov.b32 %r12083, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12081, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12082, %r12083, %r12081;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12085, %r11793, %r12082;
	// end inline asm
	// begin inline asm
	mov.b32 %r12088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12089, %r12083, %r12088;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12092, %r11801, %r12089;
	// end inline asm
	// begin inline asm
	mov.b32 %r12095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12096, %r12083, %r12095;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12099, %r11809, %r12096;
	// end inline asm
	// begin inline asm
	mov.b32 %r12102, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12103, %r12083, %r12102;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12106, %r11817, %r12103;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12109, %r12085, %r12099, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12113, %r12092, %r12106, %r4316;
	// end inline asm
	shl.b32 	%r12120, %r12113, 4;
	// begin inline asm
	lop3.b32 %r12117, %r4322, %r12109, %r12120, 202;
	// end inline asm
	xor.b32  	%r16088, %r12117, -2004318072;
	// begin inline asm
	mov.b32 %r12124, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12123, %r12124, %r12122;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12126, %r11825, %r12123;
	// end inline asm
	// begin inline asm
	mov.b32 %r12129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12130, %r12124, %r12129;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12133, %r11833, %r12130;
	// end inline asm
	// begin inline asm
	mov.b32 %r12136, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12137, %r12124, %r12136;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12140, %r11841, %r12137;
	// end inline asm
	// begin inline asm
	mov.b32 %r12143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12144, %r12124, %r12143;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12147, %r11849, %r12144;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12150, %r12126, %r12140, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12154, %r12133, %r12147, %r4316;
	// end inline asm
	shl.b32 	%r12161, %r12154, 4;
	// begin inline asm
	lop3.b32 %r12158, %r4322, %r12150, %r12161, 202;
	// end inline asm
	xor.b32  	%r16089, %r12158, -2004318072;
	// begin inline asm
	mov.b32 %r12165, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12163, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12164, %r12165, %r12163;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12167, %r11857, %r12164;
	// end inline asm
	// begin inline asm
	mov.b32 %r12170, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12171, %r12165, %r12170;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12174, %r11865, %r12171;
	// end inline asm
	// begin inline asm
	mov.b32 %r12177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12178, %r12165, %r12177;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12181, %r11873, %r12178;
	// end inline asm
	// begin inline asm
	mov.b32 %r12184, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12185, %r12165, %r12184;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12188, %r11881, %r12185;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12191, %r12167, %r12181, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12195, %r12174, %r12188, %r4316;
	// end inline asm
	shl.b32 	%r12202, %r12195, 4;
	// begin inline asm
	lop3.b32 %r12199, %r4322, %r12191, %r12202, 202;
	// end inline asm
	xor.b32  	%r16090, %r12199, -2004318072;
	// begin inline asm
	mov.b32 %r12206, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12204, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12205, %r12206, %r12204;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12208, %r11889, %r12205;
	// end inline asm
	// begin inline asm
	mov.b32 %r12211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12212, %r12206, %r12211;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12215, %r11897, %r12212;
	// end inline asm
	// begin inline asm
	mov.b32 %r12218, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12219, %r12206, %r12218;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12222, %r11905, %r12219;
	// end inline asm
	// begin inline asm
	mov.b32 %r12225, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12226, %r12206, %r12225;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12229, %r11913, %r12226;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12232, %r12208, %r12222, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12236, %r12215, %r12229, %r4316;
	// end inline asm
	shl.b32 	%r12243, %r12236, 4;
	// begin inline asm
	lop3.b32 %r12240, %r4322, %r12232, %r12243, 202;
	// end inline asm
	xor.b32  	%r16091, %r12240, -2004318072;
	st.shared.u32 	[%rd82], %r16084;
	st.shared.u32 	[%rd83], %r16085;
	st.shared.u32 	[%rd84], %r16086;
	st.shared.u32 	[%rd85], %r16087;
	st.shared.u32 	[%rd86], %r16088;
	st.shared.u32 	[%rd87], %r16089;
	st.shared.u32 	[%rd88], %r16090;
	st.shared.u32 	[%rd89], %r16091;
	ld.shared.u32 	%r16202, [%rd74];
	ld.shared.u32 	%r16203, [%rd75];
	ld.shared.u32 	%r16204, [%rd76];
	ld.shared.u32 	%r16205, [%rd77];
	ld.shared.u32 	%r16214, [%rd78];
	ld.shared.u32 	%r16215, [%rd79];
	ld.shared.u32 	%r16216, [%rd80];
	ld.shared.u32 	%r16217, [%rd81];
	// begin inline asm
	mov.b32 %r12249, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12260, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12248, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r12246, %r799, %r12248, %r12249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12251, %r12249, %r12250;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12254, %r12246, %r12251;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12257, %r810, %r12248, %r12260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12261, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12262, %r12260, %r12261;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12265, %r12257, %r12262;
	// end inline asm
	shr.u32 	%r12270, %r12248, 8;
	// begin inline asm
	lop3.b32 %r12268, %r799, %r12270, %r12249, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12272, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12273, %r12249, %r12272;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12276, %r12268, %r12273;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12279, %r810, %r12270, %r12260, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12284, %r12260, %r12283;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12287, %r12279, %r12284;
	// end inline asm
	// begin inline asm
	mov.b32 %r12295, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12306, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12294, %r16203, -2004318072;
	// begin inline asm
	lop3.b32 %r12292, %r799, %r12294, %r12295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12297, %r12295, %r12296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12300, %r12292, %r12297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12303, %r810, %r12294, %r12306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12308, %r12306, %r12307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12311, %r12303, %r12308;
	// end inline asm
	shr.u32 	%r12316, %r12294, 8;
	// begin inline asm
	lop3.b32 %r12314, %r799, %r12316, %r12295, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12319, %r12295, %r12318;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12322, %r12314, %r12319;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12325, %r810, %r12316, %r12306, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12329, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12330, %r12306, %r12329;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12333, %r12325, %r12330;
	// end inline asm
	// begin inline asm
	mov.b32 %r12341, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12352, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12340, %r16204, -2004318072;
	// begin inline asm
	lop3.b32 %r12338, %r799, %r12340, %r12341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12343, %r12341, %r12342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12346, %r12338, %r12343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12349, %r810, %r12340, %r12352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12354, %r12352, %r12353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12357, %r12349, %r12354;
	// end inline asm
	shr.u32 	%r12362, %r12340, 8;
	// begin inline asm
	lop3.b32 %r12360, %r799, %r12362, %r12341, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12364, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12365, %r12341, %r12364;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12368, %r12360, %r12365;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12371, %r810, %r12362, %r12352, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12375, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12376, %r12352, %r12375;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12379, %r12371, %r12376;
	// end inline asm
	// begin inline asm
	mov.b32 %r12387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12398, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12386, %r16205, -2004318072;
	// begin inline asm
	lop3.b32 %r12384, %r799, %r12386, %r12387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12389, %r12387, %r12388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12392, %r12384, %r12389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12395, %r810, %r12386, %r12398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12400, %r12398, %r12399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12403, %r12395, %r12400;
	// end inline asm
	shr.u32 	%r12408, %r12386, 8;
	// begin inline asm
	lop3.b32 %r12406, %r799, %r12408, %r12387, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12410, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12411, %r12387, %r12410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12414, %r12406, %r12411;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12417, %r810, %r12408, %r12398, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12422, %r12398, %r12421;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12425, %r12417, %r12422;
	// end inline asm
	// begin inline asm
	mov.b32 %r12433, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12444, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12432, %r16214, -2004318072;
	// begin inline asm
	lop3.b32 %r12430, %r799, %r12432, %r12433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12435, %r12433, %r12434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12438, %r12430, %r12435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12441, %r810, %r12432, %r12444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12446, %r12444, %r12445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12449, %r12441, %r12446;
	// end inline asm
	shr.u32 	%r12454, %r12432, 8;
	// begin inline asm
	lop3.b32 %r12452, %r799, %r12454, %r12433, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12456, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12457, %r12433, %r12456;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12460, %r12452, %r12457;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12463, %r810, %r12454, %r12444, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12468, %r12444, %r12467;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12471, %r12463, %r12468;
	// end inline asm
	// begin inline asm
	mov.b32 %r12479, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12490, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12478, %r16215, -2004318072;
	// begin inline asm
	lop3.b32 %r12476, %r799, %r12478, %r12479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12481, %r12479, %r12480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12484, %r12476, %r12481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12487, %r810, %r12478, %r12490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12492, %r12490, %r12491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12495, %r12487, %r12492;
	// end inline asm
	shr.u32 	%r12500, %r12478, 8;
	// begin inline asm
	lop3.b32 %r12498, %r799, %r12500, %r12479, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12503, %r12479, %r12502;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12506, %r12498, %r12503;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12509, %r810, %r12500, %r12490, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12513, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12514, %r12490, %r12513;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12517, %r12509, %r12514;
	// end inline asm
	// begin inline asm
	mov.b32 %r12525, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12536, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12524, %r16216, -2004318072;
	// begin inline asm
	lop3.b32 %r12522, %r799, %r12524, %r12525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12527, %r12525, %r12526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12530, %r12522, %r12527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12533, %r810, %r12524, %r12536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12538, %r12536, %r12537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12541, %r12533, %r12538;
	// end inline asm
	shr.u32 	%r12546, %r12524, 8;
	// begin inline asm
	lop3.b32 %r12544, %r799, %r12546, %r12525, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12548, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12549, %r12525, %r12548;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12552, %r12544, %r12549;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12555, %r810, %r12546, %r12536, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12559, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12560, %r12536, %r12559;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12563, %r12555, %r12560;
	// end inline asm
	// begin inline asm
	mov.b32 %r12571, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12582, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12570, %r16217, -2004318072;
	// begin inline asm
	lop3.b32 %r12568, %r799, %r12570, %r12571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12573, %r12571, %r12572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12576, %r12568, %r12573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12579, %r810, %r12570, %r12582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12584, %r12582, %r12583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12587, %r12579, %r12584;
	// end inline asm
	shr.u32 	%r12592, %r12570, 8;
	// begin inline asm
	lop3.b32 %r12590, %r799, %r12592, %r12571, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12594, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12595, %r12571, %r12594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12598, %r12590, %r12595;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12601, %r810, %r12592, %r12582, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12606, %r12582, %r12605;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12609, %r12601, %r12606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12612, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12614, %r12612, %r12254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12617, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12619, %r12617, %r12265;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12622, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12624, %r12622, %r12276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12627, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12629, %r12627, %r12287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12632, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12634, %r12632, %r12300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12637, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12639, %r12637, %r12311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12642, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12644, %r12642, %r12322;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12647, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12649, %r12647, %r12333;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12652, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12654, %r12652, %r12346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12657, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12659, %r12657, %r12357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12662, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12664, %r12662, %r12368;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12667, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12669, %r12667, %r12379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12672, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12674, %r12672, %r12392;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12677, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12679, %r12677, %r12403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12682, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12684, %r12682, %r12414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12687, %r380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12689, %r12687, %r12425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12692, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12694, %r12692, %r12438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12697, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12699, %r12697, %r12449;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12702, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12704, %r12702, %r12460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12707, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12709, %r12707, %r12471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12506;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12517;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12541;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12563;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12576;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12609;
	// end inline asm
	// begin inline asm
	mov.b32 %r12777, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12788, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12774, %r799, %r800, %r12777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12778, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12779, %r12777, %r12778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12782, %r12774, %r12779;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12785, %r810, %r800, %r12788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12789, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12790, %r12788, %r12789;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12793, %r12785, %r12790;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12796, %r799, %r822, %r12777, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12801, %r12777, %r12800;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12804, %r12796, %r12801;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12807, %r810, %r822, %r12788, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12811, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12812, %r12788, %r12811;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12815, %r12807, %r12812;
	// end inline asm
	// begin inline asm
	mov.b32 %r12823, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12834, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12820, %r799, %r846, %r12823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12824, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12825, %r12823, %r12824;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12828, %r12820, %r12825;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12831, %r810, %r846, %r12834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12835, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12836, %r12834, %r12835;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12839, %r12831, %r12836;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12842, %r799, %r868, %r12823, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12846, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12847, %r12823, %r12846;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12850, %r12842, %r12847;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12853, %r810, %r868, %r12834, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12857, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12858, %r12834, %r12857;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12861, %r12853, %r12858;
	// end inline asm
	// begin inline asm
	mov.b32 %r12869, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12880, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12866, %r799, %r892, %r12869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12871, %r12869, %r12870;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12874, %r12866, %r12871;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12877, %r810, %r892, %r12880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12882, %r12880, %r12881;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12885, %r12877, %r12882;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12888, %r799, %r914, %r12869, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12892, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12893, %r12869, %r12892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12896, %r12888, %r12893;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12899, %r810, %r914, %r12880, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12904, %r12880, %r12903;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12907, %r12899, %r12904;
	// end inline asm
	// begin inline asm
	mov.b32 %r12915, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12926, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12912, %r799, %r938, %r12915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12916, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12917, %r12915, %r12916;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12920, %r12912, %r12917;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12923, %r810, %r938, %r12926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12927, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12928, %r12926, %r12927;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12931, %r12923, %r12928;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12934, %r799, %r960, %r12915, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12939, %r12915, %r12938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12942, %r12934, %r12939;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12945, %r810, %r960, %r12926, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12949, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12950, %r12926, %r12949;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12953, %r12945, %r12950;
	// end inline asm
	// begin inline asm
	mov.b32 %r12961, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12972, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12958, %r799, %r984, %r12961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12962, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12963, %r12961, %r12962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12966, %r12958, %r12963;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12969, %r810, %r984, %r12972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12973, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12974, %r12972, %r12973;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12977, %r12969, %r12974;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12980, %r799, %r1006, %r12961, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12985, %r12961, %r12984;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12988, %r12980, %r12985;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12991, %r810, %r1006, %r12972, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12995, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12996, %r12972, %r12995;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12999, %r12991, %r12996;
	// end inline asm
	// begin inline asm
	mov.b32 %r13007, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13018, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13004, %r799, %r1030, %r13007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13008, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13009, %r13007, %r13008;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13012, %r13004, %r13009;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13015, %r810, %r1030, %r13018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13020, %r13018, %r13019;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13023, %r13015, %r13020;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13026, %r799, %r1052, %r13007, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13030, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13031, %r13007, %r13030;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13034, %r13026, %r13031;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13037, %r810, %r1052, %r13018, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13042, %r13018, %r13041;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13045, %r13037, %r13042;
	// end inline asm
	// begin inline asm
	mov.b32 %r13053, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13064, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13050, %r799, %r1076, %r13053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13054, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13055, %r13053, %r13054;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13058, %r13050, %r13055;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13061, %r810, %r1076, %r13064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13066, %r13064, %r13065;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13069, %r13061, %r13066;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13072, %r799, %r1098, %r13053, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13076, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13077, %r13053, %r13076;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13080, %r13072, %r13077;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13083, %r810, %r1098, %r13064, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13088, %r13064, %r13087;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13091, %r13083, %r13088;
	// end inline asm
	// begin inline asm
	mov.b32 %r13099, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13110, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13096, %r799, %r1122, %r13099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13101, %r13099, %r13100;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13104, %r13096, %r13101;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13107, %r810, %r1122, %r13110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13111, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13112, %r13110, %r13111;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13115, %r13107, %r13112;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13118, %r799, %r1144, %r13099, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13122, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13123, %r13099, %r13122;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13126, %r13118, %r13123;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13129, %r810, %r1144, %r13110, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13133, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13134, %r13110, %r13133;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13137, %r13129, %r13134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13140, %r272, %r12782, %r12614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13144, %r272, %r12793, %r12619;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13148, %r272, %r12804, %r12624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13152, %r272, %r12815, %r12629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13156, %r272, %r12828, %r12634;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13160, %r272, %r12839, %r12639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13164, %r272, %r12850, %r12644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13168, %r272, %r12861, %r12649;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13172, %r272, %r12874, %r12654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13176, %r272, %r12885, %r12659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13180, %r272, %r12896, %r12664;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13184, %r272, %r12907, %r12669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13188, %r272, %r12920, %r12674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13192, %r272, %r12931, %r12679;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13196, %r272, %r12942, %r12684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13200, %r272, %r12953, %r12689;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13204, %r290, %r12966, %r12694;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13208, %r290, %r12977, %r12699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13212, %r290, %r12988, %r12704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13216, %r290, %r12999, %r12709;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13220, %r290, %r13012, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13224, %r290, %r13023, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13228, %r290, %r13034, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13232, %r290, %r13045, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13236, %r290, %r13058, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r290, %r13069, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r290, %r13080, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r290, %r13091, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r290, %r13104, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r290, %r13115, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r290, %r13126, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r290, %r13137, %r12769;
	// end inline asm
	// begin inline asm
	mov.b32 %r13273, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13284, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13270, %r799, %r4616, %r13273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13274, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13275, %r13273, %r13274;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13278, %r13270, %r13275;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13281, %r810, %r4616, %r13284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13286, %r13284, %r13285;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13289, %r13281, %r13286;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13292, %r799, %r4638, %r13273, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13296, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13297, %r13273, %r13296;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13300, %r13292, %r13297;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13303, %r810, %r4638, %r13284, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13307, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13308, %r13284, %r13307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13311, %r13303, %r13308;
	// end inline asm
	// begin inline asm
	mov.b32 %r13319, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13330, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13316, %r799, %r4662, %r13319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13320, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13321, %r13319, %r13320;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13324, %r13316, %r13321;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13327, %r810, %r4662, %r13330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13332, %r13330, %r13331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13335, %r13327, %r13332;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13338, %r799, %r4684, %r13319, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13342, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13343, %r13319, %r13342;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13346, %r13338, %r13343;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13349, %r810, %r4684, %r13330, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13354, %r13330, %r13353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13357, %r13349, %r13354;
	// end inline asm
	// begin inline asm
	mov.b32 %r13365, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13376, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13362, %r799, %r4708, %r13365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13367, %r13365, %r13366;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13370, %r13362, %r13367;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13373, %r810, %r4708, %r13376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13377, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13378, %r13376, %r13377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13381, %r13373, %r13378;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13384, %r799, %r4730, %r13365, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13388, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13389, %r13365, %r13388;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13392, %r13384, %r13389;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13395, %r810, %r4730, %r13376, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13400, %r13376, %r13399;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13403, %r13395, %r13400;
	// end inline asm
	// begin inline asm
	mov.b32 %r13411, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13422, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13408, %r799, %r4754, %r13411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13412, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13413, %r13411, %r13412;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13416, %r13408, %r13413;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13419, %r810, %r4754, %r13422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13423, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13424, %r13422, %r13423;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13427, %r13419, %r13424;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13430, %r799, %r4776, %r13411, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13435, %r13411, %r13434;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13438, %r13430, %r13435;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13441, %r810, %r4776, %r13422, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13445, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13446, %r13422, %r13445;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13449, %r13441, %r13446;
	// end inline asm
	// begin inline asm
	mov.b32 %r13457, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13468, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13454, %r799, %r4800, %r13457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13458, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13459, %r13457, %r13458;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13462, %r13454, %r13459;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13465, %r810, %r4800, %r13468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13470, %r13468, %r13469;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13473, %r13465, %r13470;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13476, %r799, %r4822, %r13457, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13480, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13481, %r13457, %r13480;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13484, %r13476, %r13481;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13487, %r810, %r4822, %r13468, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13491, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13492, %r13468, %r13491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13495, %r13487, %r13492;
	// end inline asm
	// begin inline asm
	mov.b32 %r13503, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13514, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13500, %r799, %r4846, %r13503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13504, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13505, %r13503, %r13504;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13508, %r13500, %r13505;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13511, %r810, %r4846, %r13514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13516, %r13514, %r13515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13519, %r13511, %r13516;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13522, %r799, %r4868, %r13503, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13526, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13527, %r13503, %r13526;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13530, %r13522, %r13527;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13533, %r810, %r4868, %r13514, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13538, %r13514, %r13537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13541, %r13533, %r13538;
	// end inline asm
	// begin inline asm
	mov.b32 %r13549, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13560, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13546, %r799, %r4892, %r13549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13550, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13551, %r13549, %r13550;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13554, %r13546, %r13551;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13557, %r810, %r4892, %r13560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13561, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13562, %r13560, %r13561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13565, %r13557, %r13562;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13568, %r799, %r4914, %r13549, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13572, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13573, %r13549, %r13572;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13576, %r13568, %r13573;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13579, %r810, %r4914, %r13560, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13583, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13584, %r13560, %r13583;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13587, %r13579, %r13584;
	// end inline asm
	// begin inline asm
	mov.b32 %r13595, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13606, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13592, %r799, %r4938, %r13595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13596, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13597, %r13595, %r13596;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13600, %r13592, %r13597;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13603, %r810, %r4938, %r13606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13607, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13608, %r13606, %r13607;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13611, %r13603, %r13608;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13614, %r799, %r4960, %r13595, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13618, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13619, %r13595, %r13618;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13622, %r13614, %r13619;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13625, %r810, %r4960, %r13606, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13629, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13630, %r13606, %r13629;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13633, %r13625, %r13630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13636, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13638, %r13636, %r13278, %r13140;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13642, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13644, %r13642, %r13289, %r13144;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13648, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13650, %r13648, %r13300, %r13148;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13654, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13656, %r13654, %r13311, %r13152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13660, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13662, %r13660, %r13324, %r13156;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13666, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13668, %r13666, %r13335, %r13160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13672, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13674, %r13672, %r13346, %r13164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13678, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13680, %r13678, %r13357, %r13168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13684, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13686, %r13684, %r13370, %r13172;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13381, %r13176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13392, %r13180;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13403, %r13184;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13416, %r13188;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13427, %r13192;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13438, %r13196;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13449, %r13200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13462, %r13204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13473, %r13208;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13484, %r13212;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13495, %r13216;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13508, %r13220;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13519, %r13224;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13530, %r13228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13541, %r13232;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13554, %r13236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13565, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13576, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13587, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13600, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13611, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13622, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13633, %r13264;
	// end inline asm
	// begin inline asm
	mov.b32 %r13833, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13844, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13830, %r799, %r8432, %r13833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13835, %r13833, %r13834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13838, %r13830, %r13835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13841, %r810, %r8432, %r13844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13846, %r13844, %r13845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13849, %r13841, %r13846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13852, %r799, %r8454, %r13833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13857, %r13833, %r13856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13860, %r13852, %r13857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13863, %r810, %r8454, %r13844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13868, %r13844, %r13867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13871, %r13863, %r13868;
	// end inline asm
	// begin inline asm
	mov.b32 %r13879, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13890, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13876, %r799, %r8478, %r13879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13881, %r13879, %r13880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13884, %r13876, %r13881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13887, %r810, %r8478, %r13890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13892, %r13890, %r13891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13895, %r13887, %r13892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13898, %r799, %r8500, %r13879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13903, %r13879, %r13902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13906, %r13898, %r13903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13909, %r810, %r8500, %r13890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13914, %r13890, %r13913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13917, %r13909, %r13914;
	// end inline asm
	// begin inline asm
	mov.b32 %r13925, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13936, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13922, %r799, %r8524, %r13925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13927, %r13925, %r13926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13930, %r13922, %r13927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13933, %r810, %r8524, %r13936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13938, %r13936, %r13937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13941, %r13933, %r13938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13944, %r799, %r8546, %r13925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13949, %r13925, %r13948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13952, %r13944, %r13949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13955, %r810, %r8546, %r13936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13960, %r13936, %r13959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13963, %r13955, %r13960;
	// end inline asm
	// begin inline asm
	mov.b32 %r13971, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13982, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13968, %r799, %r8570, %r13971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13973, %r13971, %r13972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13976, %r13968, %r13973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13979, %r810, %r8570, %r13982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13984, %r13982, %r13983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13987, %r13979, %r13984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13990, %r799, %r8592, %r13971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13995, %r13971, %r13994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13998, %r13990, %r13995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14001, %r810, %r8592, %r13982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14006, %r13982, %r14005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14009, %r14001, %r14006;
	// end inline asm
	// begin inline asm
	mov.b32 %r14017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14028, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14014, %r799, %r8616, %r14017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14019, %r14017, %r14018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14022, %r14014, %r14019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14025, %r810, %r8616, %r14028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14030, %r14028, %r14029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14033, %r14025, %r14030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14036, %r799, %r8638, %r14017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14041, %r14017, %r14040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14044, %r14036, %r14041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14047, %r810, %r8638, %r14028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14052, %r14028, %r14051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14055, %r14047, %r14052;
	// end inline asm
	// begin inline asm
	mov.b32 %r14063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14074, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14060, %r799, %r8662, %r14063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14065, %r14063, %r14064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14068, %r14060, %r14065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14071, %r810, %r8662, %r14074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14076, %r14074, %r14075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14079, %r14071, %r14076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14082, %r799, %r8684, %r14063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14087, %r14063, %r14086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14090, %r14082, %r14087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14093, %r810, %r8684, %r14074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14098, %r14074, %r14097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14101, %r14093, %r14098;
	// end inline asm
	// begin inline asm
	mov.b32 %r14109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14120, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14106, %r799, %r8708, %r14109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14111, %r14109, %r14110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14114, %r14106, %r14111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14117, %r810, %r8708, %r14120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14122, %r14120, %r14121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14125, %r14117, %r14122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14128, %r799, %r8730, %r14109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14133, %r14109, %r14132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14136, %r14128, %r14133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14139, %r810, %r8730, %r14120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14144, %r14120, %r14143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14147, %r14139, %r14144;
	// end inline asm
	// begin inline asm
	mov.b32 %r14155, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14166, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14152, %r799, %r8754, %r14155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14157, %r14155, %r14156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14160, %r14152, %r14157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14163, %r810, %r8754, %r14166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14168, %r14166, %r14167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14171, %r14163, %r14168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14174, %r799, %r8776, %r14155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14179, %r14155, %r14178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14182, %r14174, %r14179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14185, %r810, %r8776, %r14166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14190, %r14166, %r14189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14193, %r14185, %r14190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14331, %r344, %r13838, %r13638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14328, %r344, %r13849, %r13644;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14340, %r344, %r13860, %r13650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14337, %r344, %r13871, %r13656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14349, %r344, %r13884, %r13662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14346, %r344, %r13895, %r13668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r344, %r13906, %r13674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r344, %r13917, %r13680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r344, %r13930, %r13686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r344, %r13941, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r344, %r13952, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r344, %r13963, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r344, %r13976, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r344, %r13987, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r344, %r13998, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r344, %r14009, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r362, %r14022, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r362, %r14033, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r362, %r14044, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r362, %r14055, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r362, %r14068, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r362, %r14079, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r362, %r14090, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r362, %r14101, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r362, %r14114, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r362, %r14125, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r362, %r14136, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r362, %r14147, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r362, %r14160, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r362, %r14171, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r362, %r14182, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r362, %r14193, %r13824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14324, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14326, %r14324, %r14328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14329, %r426, %r14331, %r14326;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14333, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14335, %r14333, %r14337;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14338, %r426, %r14340, %r14335;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14342, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14344, %r14342, %r14346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14347, %r426, %r14349, %r14344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14351, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14353, %r14351, %r14355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14356, %r426, %r14358, %r14353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14360, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14362, %r14360, %r14364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r426, %r14367, %r14362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14369, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14371, %r14369, %r14373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r426, %r14376, %r14371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14378, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14380, %r14378, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r426, %r14385, %r14380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14387, %r432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14389, %r14387, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r426, %r14394, %r14389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14396, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14398, %r14396, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r429, %r14403, %r14398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14405, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14407, %r14405, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r429, %r14412, %r14407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14414, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14416, %r14414, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r429, %r14421, %r14416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14423, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14425, %r14423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r429, %r14430, %r14425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14432, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14434, %r14432, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r429, %r14439, %r14434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14441, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14443, %r14441, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r429, %r14448, %r14443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14450, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14452, %r14450, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r429, %r14457, %r14452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14459, %r435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14461, %r14459, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r429, %r14466, %r14461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14468, %r432, %r14331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14471, %r426, %r14328, %r14468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14475, %r432, %r14340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14478, %r426, %r14337, %r14475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14482, %r432, %r14349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r426, %r14346, %r14482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14489, %r432, %r14358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r426, %r14355, %r14489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14496, %r432, %r14367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14499, %r426, %r14364, %r14496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14503, %r432, %r14376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r426, %r14373, %r14503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r432, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r426, %r14382, %r14510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14517, %r432, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14520, %r426, %r14391, %r14517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14524, %r435, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14527, %r429, %r14400, %r14524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14531, %r435, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14534, %r429, %r14409, %r14531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14538, %r435, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14541, %r429, %r14418, %r14538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14545, %r435, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r429, %r14427, %r14545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14552, %r435, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14555, %r429, %r14436, %r14552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14559, %r435, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14562, %r429, %r14445, %r14559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14566, %r435, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14569, %r429, %r14454, %r14566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14573, %r435, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14576, %r429, %r14463, %r14573;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14747, %r14744}, {%r474, %r480, %r477, %r483}, {%r14329, %r14471}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14756, %r14753}, {%r474, %r480, %r477, %r483}, {%r14338, %r14478}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14765, %r14762}, {%r474, %r480, %r477, %r483}, {%r14347, %r14485}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14774, %r14771}, {%r474, %r480, %r477, %r483}, {%r14356, %r14492}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14783, %r14780}, {%r474, %r480, %r477, %r483}, {%r14365, %r14499}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14792, %r14789}, {%r474, %r480, %r477, %r483}, {%r14374, %r14506}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14801, %r14798}, {%r474, %r480, %r477, %r483}, {%r14383, %r14513}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14810, %r14807}, {%r474, %r480, %r477, %r483}, {%r14392, %r14520}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14819, %r14816}, {%r474, %r480, %r477, %r483}, {%r14401, %r14527}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14828, %r14825}, {%r474, %r480, %r477, %r483}, {%r14410, %r14534}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14837, %r14834}, {%r474, %r480, %r477, %r483}, {%r14419, %r14541}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14846, %r14843}, {%r474, %r480, %r477, %r483}, {%r14428, %r14548}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14855, %r14852}, {%r474, %r480, %r477, %r483}, {%r14437, %r14555}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14864, %r14861}, {%r474, %r480, %r477, %r483}, {%r14446, %r14562}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14873, %r14870}, {%r474, %r480, %r477, %r483}, {%r14455, %r14569}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14882, %r14879}, {%r474, %r480, %r477, %r483}, {%r14464, %r14576}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14740, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14742, %r14740, %r14744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14745, %r521, %r14747, %r14742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14749, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14751, %r14749, %r14753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14754, %r521, %r14756, %r14751;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14758, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14760, %r14758, %r14762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14763, %r521, %r14765, %r14760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14767, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14769, %r14767, %r14771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14772, %r521, %r14774, %r14769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14776, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14778, %r14776, %r14780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14781, %r521, %r14783, %r14778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14785, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14787, %r14785, %r14789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14790, %r521, %r14792, %r14787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14794, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14796, %r14794, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14799, %r521, %r14801, %r14796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14803, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14805, %r14803, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14808, %r521, %r14810, %r14805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14812, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14814, %r14812, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14817, %r521, %r14819, %r14814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14821, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14823, %r14821, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14826, %r521, %r14828, %r14823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14830, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14832, %r14830, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14835, %r521, %r14837, %r14832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14839, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14841, %r14839, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14844, %r521, %r14846, %r14841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14848, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14850, %r14848, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14853, %r521, %r14855, %r14850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14857, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14859, %r14857, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14862, %r521, %r14864, %r14859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14866, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14868, %r14866, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14871, %r521, %r14873, %r14868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14875, %r524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14877, %r14875, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14880, %r521, %r14882, %r14877;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14884, %r524, %r14747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14887, %r521, %r14744, %r14884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14891, %r524, %r14756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14894, %r521, %r14753, %r14891;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14898, %r524, %r14765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14901, %r521, %r14762, %r14898;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14905, %r524, %r14774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14908, %r521, %r14771, %r14905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14912, %r524, %r14783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14915, %r521, %r14780, %r14912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14919, %r524, %r14792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14922, %r521, %r14789, %r14919;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r524, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r521, %r14798, %r14926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14933, %r524, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14936, %r521, %r14807, %r14933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14940, %r524, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14943, %r521, %r14816, %r14940;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14947, %r524, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14950, %r521, %r14825, %r14947;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14954, %r524, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14957, %r521, %r14834, %r14954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14961, %r524, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14964, %r521, %r14843, %r14961;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14968, %r524, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14971, %r521, %r14852, %r14968;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14975, %r524, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14978, %r521, %r14861, %r14975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14982, %r524, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14985, %r521, %r14870, %r14982;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14989, %r524, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14992, %r521, %r14879, %r14989;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15285, %r15288}, {%r564, %r570, %r567, %r573}, {%r14745, %r14887}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15291, %r15294}, {%r564, %r570, %r567, %r573}, {%r14754, %r14894}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15297, %r15300}, {%r564, %r570, %r567, %r573}, {%r14763, %r14901}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15303, %r15306}, {%r564, %r570, %r567, %r573}, {%r14772, %r14908}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15309, %r15312}, {%r564, %r570, %r567, %r573}, {%r14781, %r14915}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15315, %r15318}, {%r564, %r570, %r567, %r573}, {%r14790, %r14922}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15321, %r15324}, {%r564, %r570, %r567, %r573}, {%r14799, %r14929}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15327, %r15330}, {%r564, %r570, %r567, %r573}, {%r14808, %r14936}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15286, %r15289}, {%r564, %r570, %r567, %r573}, {%r14817, %r14943}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15292, %r15295}, {%r564, %r570, %r567, %r573}, {%r14826, %r14950}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15298, %r15301}, {%r564, %r570, %r567, %r573}, {%r14835, %r14957}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15304, %r15307}, {%r564, %r570, %r567, %r573}, {%r14844, %r14964}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r564, %r570, %r567, %r573}, {%r14853, %r14971}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r564, %r570, %r567, %r573}, {%r14862, %r14978}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r564, %r570, %r567, %r573}, {%r14871, %r14985}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r564, %r570, %r567, %r573}, {%r14880, %r14992}, {%r15155, %r15155};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15284, %r15285, %r15286;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15287, %r15288, %r15289;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15290, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15293, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15296, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15299, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15302, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15305, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15308, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15332, %r15285, %r15286;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15335, %r15288, %r15289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15338, %r15291, %r15292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15341, %r15294, %r15295;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15344, %r15297, %r15298;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15347, %r15300, %r15301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15350, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15353, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15356, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15380, %r10, %r15284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15383, %r10, %r15287;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15386, %r10, %r15290;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15389, %r10, %r15293;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15392, %r10, %r15296;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15395, %r10, %r15299;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15398, %r10, %r15302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15401, %r10, %r15305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15404, %r10, %r15308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r10, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r10, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r10, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r10, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r10, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r10, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r10, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r11, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r11, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r11, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r11, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r11, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r11, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r11, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r11, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r11, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r11, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r11, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r11, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r11, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r11, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r11, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r11, %r15377;
	// end inline asm
	// begin inline asm
	mov.b32 %r15476, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15477, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15478, %r15380, %r15476;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15481, %r15478, %r15477;
	// end inline asm
	// begin inline asm
	mov.b32 %r15484, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15485, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15486, %r15383, %r15484;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15489, %r15486, %r15485;
	// end inline asm
	// begin inline asm
	mov.b32 %r15492, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15493, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15494, %r15386, %r15492;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15497, %r15494, %r15493;
	// end inline asm
	// begin inline asm
	mov.b32 %r15500, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15501, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15502, %r15389, %r15500;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15505, %r15502, %r15501;
	// end inline asm
	// begin inline asm
	mov.b32 %r15508, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15509, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15510, %r15392, %r15508;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15513, %r15510, %r15509;
	// end inline asm
	// begin inline asm
	mov.b32 %r15516, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15517, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15518, %r15395, %r15516;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15521, %r15518, %r15517;
	// end inline asm
	// begin inline asm
	mov.b32 %r15524, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15525, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15526, %r15398, %r15524;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15529, %r15526, %r15525;
	// end inline asm
	// begin inline asm
	mov.b32 %r15532, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15533, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15534, %r15401, %r15532;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15537, %r15534, %r15533;
	// end inline asm
	// begin inline asm
	mov.b32 %r15540, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15541, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15542, %r15404, %r15540;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15545, %r15542, %r15541;
	// end inline asm
	// begin inline asm
	mov.b32 %r15548, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15549, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15550, %r15407, %r15548;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15553, %r15550, %r15549;
	// end inline asm
	// begin inline asm
	mov.b32 %r15556, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15557, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15558, %r15410, %r15556;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15561, %r15558, %r15557;
	// end inline asm
	// begin inline asm
	mov.b32 %r15564, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15565, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15566, %r15413, %r15564;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15569, %r15566, %r15565;
	// end inline asm
	// begin inline asm
	mov.b32 %r15572, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15573, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15574, %r15416, %r15572;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15577, %r15574, %r15573;
	// end inline asm
	// begin inline asm
	mov.b32 %r15580, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15581, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15582, %r15419, %r15580;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15585, %r15582, %r15581;
	// end inline asm
	// begin inline asm
	mov.b32 %r15588, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15589, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15590, %r15422, %r15588;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15593, %r15590, %r15589;
	// end inline asm
	// begin inline asm
	mov.b32 %r15596, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15597, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15598, %r15425, %r15596;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15601, %r15598, %r15597;
	// end inline asm
	// begin inline asm
	mov.b32 %r15604, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15605, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15606, %r15428, %r15604;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15609, %r15606, %r15605;
	// end inline asm
	// begin inline asm
	mov.b32 %r15612, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15613, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15614, %r15431, %r15612;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15617, %r15614, %r15613;
	// end inline asm
	// begin inline asm
	mov.b32 %r15620, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15621, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15622, %r15434, %r15620;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15625, %r15622, %r15621;
	// end inline asm
	// begin inline asm
	mov.b32 %r15628, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15629, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15630, %r15437, %r15628;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15633, %r15630, %r15629;
	// end inline asm
	// begin inline asm
	mov.b32 %r15636, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15637, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15638, %r15440, %r15636;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15641, %r15638, %r15637;
	// end inline asm
	// begin inline asm
	mov.b32 %r15644, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15645, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15646, %r15443, %r15644;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15649, %r15646, %r15645;
	// end inline asm
	// begin inline asm
	mov.b32 %r15652, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15653, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15654, %r15446, %r15652;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15657, %r15654, %r15653;
	// end inline asm
	// begin inline asm
	mov.b32 %r15660, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15661, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15662, %r15449, %r15660;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15665, %r15662, %r15661;
	// end inline asm
	// begin inline asm
	mov.b32 %r15668, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15669, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15670, %r15452, %r15668;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15673, %r15670, %r15669;
	// end inline asm
	// begin inline asm
	mov.b32 %r15676, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15677, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15678, %r15455, %r15676;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15681, %r15678, %r15677;
	// end inline asm
	// begin inline asm
	mov.b32 %r15684, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15685, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15686, %r15458, %r15684;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15689, %r15686, %r15685;
	// end inline asm
	// begin inline asm
	mov.b32 %r15692, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15693, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15694, %r15461, %r15692;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15697, %r15694, %r15693;
	// end inline asm
	// begin inline asm
	mov.b32 %r15700, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15701, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15702, %r15464, %r15700;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15705, %r15702, %r15701;
	// end inline asm
	// begin inline asm
	mov.b32 %r15708, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15709, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15710, %r15467, %r15708;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15713, %r15710, %r15709;
	// end inline asm
	// begin inline asm
	mov.b32 %r15716, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15717, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15718, %r15470, %r15716;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15721, %r15718, %r15717;
	// end inline asm
	// begin inline asm
	mov.b32 %r15724, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15725, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15726, %r15473, %r15724;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15729, %r15726, %r15725;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15733, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15734, %r15735, %r15733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15737, %r15481, %r15734;
	// end inline asm
	// begin inline asm
	mov.b32 %r15740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15741, %r15735, %r15740;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15744, %r15489, %r15741;
	// end inline asm
	// begin inline asm
	mov.b32 %r15747, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15748, %r15735, %r15747;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15751, %r15497, %r15748;
	// end inline asm
	// begin inline asm
	mov.b32 %r15754, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15755, %r15735, %r15754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15758, %r15505, %r15755;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15761, %r15737, %r15751, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15765, %r15744, %r15758, %r4316;
	// end inline asm
	shl.b32 	%r15772, %r15765, 4;
	// begin inline asm
	lop3.b32 %r15769, %r4322, %r15761, %r15772, 202;
	// end inline asm
	xor.b32  	%r16092, %r15769, -2004318072;
	// begin inline asm
	mov.b32 %r15776, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15775, %r15776, %r15774;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15778, %r15513, %r15775;
	// end inline asm
	// begin inline asm
	mov.b32 %r15781, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15782, %r15776, %r15781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15785, %r15521, %r15782;
	// end inline asm
	// begin inline asm
	mov.b32 %r15788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15789, %r15776, %r15788;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15792, %r15529, %r15789;
	// end inline asm
	// begin inline asm
	mov.b32 %r15795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15796, %r15776, %r15795;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15799, %r15537, %r15796;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15802, %r15778, %r15792, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15806, %r15785, %r15799, %r4316;
	// end inline asm
	shl.b32 	%r15813, %r15806, 4;
	// begin inline asm
	lop3.b32 %r15810, %r4322, %r15802, %r15813, 202;
	// end inline asm
	xor.b32  	%r16093, %r15810, -2004318072;
	// begin inline asm
	mov.b32 %r15817, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15815, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15816, %r15817, %r15815;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15819, %r15545, %r15816;
	// end inline asm
	// begin inline asm
	mov.b32 %r15822, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15823, %r15817, %r15822;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15826, %r15553, %r15823;
	// end inline asm
	// begin inline asm
	mov.b32 %r15829, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15830, %r15817, %r15829;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15833, %r15561, %r15830;
	// end inline asm
	// begin inline asm
	mov.b32 %r15836, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15837, %r15817, %r15836;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15840, %r15569, %r15837;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15843, %r15819, %r15833, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15847, %r15826, %r15840, %r4316;
	// end inline asm
	shl.b32 	%r15854, %r15847, 4;
	// begin inline asm
	lop3.b32 %r15851, %r4322, %r15843, %r15854, 202;
	// end inline asm
	xor.b32  	%r16094, %r15851, -2004318072;
	// begin inline asm
	mov.b32 %r15858, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15857, %r15858, %r15856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15860, %r15577, %r15857;
	// end inline asm
	// begin inline asm
	mov.b32 %r15863, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15864, %r15858, %r15863;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15867, %r15585, %r15864;
	// end inline asm
	// begin inline asm
	mov.b32 %r15870, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15871, %r15858, %r15870;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15874, %r15593, %r15871;
	// end inline asm
	// begin inline asm
	mov.b32 %r15877, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15878, %r15858, %r15877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15881, %r15601, %r15878;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15884, %r15860, %r15874, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15888, %r15867, %r15881, %r4316;
	// end inline asm
	shl.b32 	%r15895, %r15888, 4;
	// begin inline asm
	lop3.b32 %r15892, %r4322, %r15884, %r15895, 202;
	// end inline asm
	xor.b32  	%r16095, %r15892, -2004318072;
	// begin inline asm
	mov.b32 %r15899, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15897, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15898, %r15899, %r15897;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15901, %r15609, %r15898;
	// end inline asm
	// begin inline asm
	mov.b32 %r15904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15905, %r15899, %r15904;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15908, %r15617, %r15905;
	// end inline asm
	// begin inline asm
	mov.b32 %r15911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15912, %r15899, %r15911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15915, %r15625, %r15912;
	// end inline asm
	// begin inline asm
	mov.b32 %r15918, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15919, %r15899, %r15918;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15922, %r15633, %r15919;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15925, %r15901, %r15915, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15929, %r15908, %r15922, %r4316;
	// end inline asm
	shl.b32 	%r15936, %r15929, 4;
	// begin inline asm
	lop3.b32 %r15933, %r4322, %r15925, %r15936, 202;
	// end inline asm
	xor.b32  	%r16096, %r15933, -2004318072;
	// begin inline asm
	mov.b32 %r15940, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15938, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15939, %r15940, %r15938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15942, %r15641, %r15939;
	// end inline asm
	// begin inline asm
	mov.b32 %r15945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15946, %r15940, %r15945;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15949, %r15649, %r15946;
	// end inline asm
	// begin inline asm
	mov.b32 %r15952, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15953, %r15940, %r15952;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15956, %r15657, %r15953;
	// end inline asm
	// begin inline asm
	mov.b32 %r15959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15960, %r15940, %r15959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15963, %r15665, %r15960;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15966, %r15942, %r15956, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15970, %r15949, %r15963, %r4316;
	// end inline asm
	shl.b32 	%r15977, %r15970, 4;
	// begin inline asm
	lop3.b32 %r15974, %r4322, %r15966, %r15977, 202;
	// end inline asm
	xor.b32  	%r16097, %r15974, -2004318072;
	// begin inline asm
	mov.b32 %r15981, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15979, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15980, %r15981, %r15979;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15983, %r15673, %r15980;
	// end inline asm
	// begin inline asm
	mov.b32 %r15986, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15987, %r15981, %r15986;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15990, %r15681, %r15987;
	// end inline asm
	// begin inline asm
	mov.b32 %r15993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15994, %r15981, %r15993;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15997, %r15689, %r15994;
	// end inline asm
	// begin inline asm
	mov.b32 %r16000, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16001, %r15981, %r16000;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16004, %r15697, %r16001;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16007, %r15983, %r15997, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16011, %r15990, %r16004, %r4316;
	// end inline asm
	shl.b32 	%r16018, %r16011, 4;
	// begin inline asm
	lop3.b32 %r16015, %r4322, %r16007, %r16018, 202;
	// end inline asm
	xor.b32  	%r16098, %r16015, -2004318072;
	// begin inline asm
	mov.b32 %r16022, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16020, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16021, %r16022, %r16020;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16024, %r15705, %r16021;
	// end inline asm
	// begin inline asm
	mov.b32 %r16027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16028, %r16022, %r16027;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16031, %r15713, %r16028;
	// end inline asm
	// begin inline asm
	mov.b32 %r16034, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16035, %r16022, %r16034;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16038, %r15721, %r16035;
	// end inline asm
	// begin inline asm
	mov.b32 %r16041, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16042, %r16022, %r16041;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16045, %r15729, %r16042;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16048, %r16024, %r16038, %r4316;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16052, %r16031, %r16045, %r4316;
	// end inline asm
	shl.b32 	%r16059, %r16052, 4;
	// begin inline asm
	lop3.b32 %r16056, %r4322, %r16048, %r16059, 202;
	// end inline asm
	xor.b32  	%r16099, %r16056, -2004318072;
	st.shared.u32 	[%rd82], %r16092;
	st.shared.u32 	[%rd83], %r16093;
	st.shared.u32 	[%rd84], %r16094;
	st.shared.u32 	[%rd85], %r16095;
	st.shared.u32 	[%rd86], %r16096;
	st.shared.u32 	[%rd87], %r16097;
	st.shared.u32 	[%rd88], %r16098;
	st.shared.u32 	[%rd89], %r16099;
	add.s32 	%r16193, %r16193, -128;
	add.s64 	%rd94, %rd94, 16644;
	setp.eq.s32 	%p302, %r16193, 0;
	@%p302 bra 	LBB0_179;
	bra.uni 	LBB0_178;
LBB0_179:                               // %guard_pass22980
                                        //   in Loop: Header=BB0_177 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16105, [%rd13];
	ld.shared.u32 	%r16106, [%rd14+128];
	ld.shared.u32 	%r16113, [%rd14+4];
	ld.shared.u32 	%r16114, [%rd14+132];
	ld.shared.u32 	%r16121, [%rd15];
	ld.shared.u32 	%r16122, [%rd16+128];
	ld.shared.u32 	%r16129, [%rd16+4];
	ld.shared.u32 	%r16130, [%rd16+132];
	// begin inline asm
	prmt.b32 %r16100, %r16105, %r16106, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16104, %r16105, %r16106, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16108, %r16113, %r16114, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16112, %r16113, %r16114, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16116, %r16121, %r16122, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16120, %r16121, %r16122, %r773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16124, %r16129, %r16130, %r769;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16128, %r16129, %r16130, %r773;
	// end inline asm
	selp.b32 	%r16132, %r16104, %r16100, %p301;
	shfl.sync.bfly.b32	%r231, %r16132, 8, 31, -1;
	selp.b32 	%r16133, %r16112, %r16108, %p301;
	shfl.sync.bfly.b32	%r232, %r16133, 8, 31, -1;
	selp.b32 	%r16134, %r16120, %r16116, %p301;
	shfl.sync.bfly.b32	%r233, %r16134, 8, 31, -1;
	selp.b32 	%r16135, %r16128, %r16124, %p301;
	shfl.sync.bfly.b32	%r234, %r16135, 8, 31, -1;
	setp.lt.u32 	%p304, %r171, 384;
	@%p304 bra 	LBB0_181;
// %bb.180:                             // %L63134
                                        //   in Loop: Header=BB0_177 Depth=1
	selp.b32 	%r16136, %r234, %r16128, %p301;
	selp.b32 	%r16137, %r16124, %r234, %p301;
	selp.b32 	%r16138, %r233, %r16120, %p301;
	selp.b32 	%r16139, %r16116, %r233, %p301;
	selp.b32 	%r16140, %r232, %r16112, %p301;
	selp.b32 	%r16141, %r16108, %r232, %p301;
	selp.b32 	%r16142, %r231, %r16104, %p301;
	selp.b32 	%r16143, %r16100, %r231, %p301;
	shl.b32 	%r16144, %r171, 12;
	add.s32 	%r16145, %r145, %r16144;
	mul.wide.s32 	%rd90, %r16145, 4;
	add.s64 	%rd91, %rd3, %rd90;
	st.global.v4.u32 	[%rd91], {%r16143, %r16141, %r16142, %r16140};
	add.s32 	%r16146, %r146, %r16144;
	mul.wide.s32 	%rd92, %r16146, 4;
	add.s64 	%rd93, %rd3, %rd92;
	st.global.v4.u32 	[%rd93], {%r16139, %r16137, %r16138, %r16136};
	bra.uni 	LBB0_181;
LBB0_182:                               // %L63556
	st.global.u32 	[%rd4], %r15155;
	ret;
LBB0_1:                                 // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r235;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
LBB0_3:                                 // %L149
	mov.u32 	%r242, 2;
	st.global.u32 	[%rd4], %r242;
	mov.u64 	%rd47, exception5093;
	cvta.global.u64 	%rd48, %rd47;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd48;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd35;
	st.param.b32 	[param0+8], %r235;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	// begin inline asm
	exit;
	// end inline asm
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
