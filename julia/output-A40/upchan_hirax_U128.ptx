// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func  (.param .b64 func_retval0) julia_power_by_squaring_17554
(
	.param .align 8 .b8 julia_power_by_squaring_17554_param_0[16],
	.param .b64 julia_power_by_squaring_17554_param_1,
	.param .b64 julia_power_by_squaring_17554_param_2
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5815[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<305>;
	.reg .b16 	%rs<2396>;
	.reg .b32 	%r<16342>;
	.reg .f32 	%f<1310>;
	.reg .b64 	%rd<123>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r221, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r226, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r226, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u32 	%r222, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r227, %r1, 9;
	mov.u32 	%r2, %tid.x;
	mov.u32 	%r3, %tid.y;
	shl.b32 	%r4, %r3, 5;
	or.b32  	%r228, %r227, %r2;
	or.b32  	%r229, %r228, %r4;
	mul.wide.u32 	%rd30, %r229, 4;
	add.s64 	%rd3, %rd24, %rd30;
	mov.u32 	%r230, 1;
	st.global.u32 	[%rd3], %r230;
	setp.lt.s32 	%p2, %r222, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L115
	ld.param.u32 	%r223, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r223, %r222;
	setp.gt.s32 	%p4, %r223, 65536;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L125
	ld.param.u32 	%r224, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r231, %r223, %r222;
	and.b32  	%r232, %r231, 255;
	setp.ne.s32 	%p6, %r232, 0;
	setp.lt.s32 	%p7, %r224, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L131
	ld.param.u32 	%r225, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r225, %r224;
	setp.gt.s32 	%p10, %r225, 512;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L141
	sub.s32 	%r233, %r225, %r224;
	and.b32  	%r234, %r233, 1;
	setp.eq.b32 	%p12, %r234, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass145
	bfe.u32 	%r137, %r2, 1, 1;
	and.b32  	%r138, %r2, 1;
	bfe.u32 	%r140, %r2, 2, 1;
	shr.u32 	%r141, %r2, 4;
	shl.b32 	%r242, %r141, 2;
	shl.b32 	%r243, %r140, 3;
	shl.b32 	%r244, %r138, 4;
	shl.b32 	%r245, %r137, 5;
	or.b32  	%r246, %r244, %r245;
	or.b32  	%r247, %r243, %r246;
	or.b32  	%r248, %r242, %r247;
	bfe.u32 	%r143, %r2, 3, 1;
	shl.b32 	%r249, %r143, 1;
	or.b32  	%r144, %r249, %r248;
	or.b32  	%r145, %r144, 64;
	mov.f32 	%f221, 0f40000000;
	mov.f32 	%f222, 0f43FF8000;
	div.approx.f32 	%f159, %f222, %f221;
	cvt.rn.f32.s32 	%f223, %r144;
	sub.f32 	%f224, %f223, %f159;
	mov.f32 	%f253, 0f43000000;
	div.approx.f32 	%f161, %f224, %f253;
	setp.ne.f32 	%p20, %f161, 0f00000000;
	mov.f32 	%f1277, 0f3F800000;
	mov.f32 	%f1262, %f1277;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L646
	sin.approx.f32 	%f254, %f161;
	div.approx.f32 	%f1262, %f254, %f161;
$L__BB0_10:                             // %L649
	cvt.rn.f32.s32 	%f257, %r145;
	sub.f32 	%f258, %f257, %f159;
	div.approx.f32 	%f5, %f258, %f253;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1263, %f1277;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L666
	sin.approx.f32 	%f288, %f5;
	div.approx.f32 	%f1263, %f288, %f5;
$L__BB0_12:                             // %L669
	or.b32  	%r267, %r144, 1;
	or.b32  	%r6, %r144, 65;
	cvt.rn.f32.s32 	%f292, %r267;
	sub.f32 	%f293, %f292, %f159;
	div.approx.f32 	%f9, %f293, %f253;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1264, %f1277;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L748
	sin.approx.f32 	%f323, %f9;
	div.approx.f32 	%f1264, %f323, %f9;
$L__BB0_14:                             // %L751
	cvt.rn.f32.s32 	%f326, %r6;
	sub.f32 	%f327, %f326, %f159;
	div.approx.f32 	%f14, %f327, %f253;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1265, %f1277;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L768
	sin.approx.f32 	%f357, %f14;
	div.approx.f32 	%f1265, %f357, %f14;
$L__BB0_16:                             // %L771
	or.b32  	%r285, %r144, 128;
	or.b32  	%r8, %r144, 192;
	cvt.rn.f32.s32 	%f361, %r285;
	sub.f32 	%f362, %f361, %f159;
	div.approx.f32 	%f18, %f362, %f253;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1266, %f1277;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L850
	sin.approx.f32 	%f392, %f18;
	div.approx.f32 	%f1266, %f392, %f18;
$L__BB0_18:                             // %L853
	mov.f32 	%f225, 0f44004000;
	cvt.rn.f32.s32 	%f395, %r8;
	sub.f32 	%f396, %f395, %f159;
	div.approx.f32 	%f23, %f396, %f253;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1267, %f1277;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L870
	sin.approx.f32 	%f426, %f23;
	div.approx.f32 	%f1267, %f426, %f23;
$L__BB0_20:                             // %L873
	div.approx.f32 	%f226, %f224, %f225;
	div.approx.f32 	%f260, %f258, %f225;
	div.approx.f32 	%f295, %f293, %f225;
	div.approx.f32 	%f329, %f327, %f225;
	div.approx.f32 	%f364, %f362, %f225;
	div.approx.f32 	%f398, %f396, %f225;
	or.b32  	%r303, %r144, 129;
	or.b32  	%r10, %r144, 193;
	cvt.rn.f32.s32 	%f430, %r303;
	sub.f32 	%f431, %f430, %f159;
	div.approx.f32 	%f433, %f431, %f225;
	div.approx.f32 	%f27, %f431, %f253;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1268, %f1277;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L952
	sin.approx.f32 	%f461, %f27;
	div.approx.f32 	%f1268, %f461, %f27;
$L__BB0_22:                             // %L955
	abs.f32 	%f227, %f226;
	abs.f32 	%f261, %f260;
	abs.f32 	%f296, %f295;
	abs.f32 	%f330, %f329;
	abs.f32 	%f365, %f364;
	abs.f32 	%f399, %f398;
	abs.f32 	%f434, %f433;
	cvt.rn.f32.s32 	%f464, %r10;
	sub.f32 	%f465, %f464, %f159;
	div.approx.f32 	%f467, %f465, %f225;
	abs.f32 	%f468, %f467;
	div.approx.f32 	%f32, %f465, %f253;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1269, %f1277;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L972
	sin.approx.f32 	%f495, %f32;
	div.approx.f32 	%f1269, %f495, %f32;
$L__BB0_24:                             // %L975
	setp.gt.f32 	%p15, %f227, 0f4B800000;
	mul.f32 	%f228, %f226, 0f00000000;
	setp.gt.f32 	%p21, %f261, 0f4B800000;
	mul.f32 	%f262, %f260, 0f00000000;
	setp.gt.f32 	%p27, %f296, 0f4B800000;
	mul.f32 	%f297, %f295, 0f00000000;
	setp.gt.f32 	%p33, %f330, 0f4B800000;
	mul.f32 	%f331, %f329, 0f00000000;
	setp.gt.f32 	%p39, %f365, 0f4B800000;
	mul.f32 	%f366, %f364, 0f00000000;
	setp.gt.f32 	%p45, %f399, 0f4B800000;
	mul.f32 	%f400, %f398, 0f00000000;
	setp.gt.f32 	%p51, %f434, 0f4B800000;
	mul.f32 	%f435, %f433, 0f00000000;
	setp.gt.f32 	%p57, %f468, 0f4B800000;
	mul.f32 	%f469, %f467, 0f00000000;
	shl.b32 	%r128, %r2, 2;
	or.b32  	%r321, %r144, 256;
	or.b32  	%r12, %r144, 320;
	cvt.rn.f32.s32 	%f499, %r321;
	sub.f32 	%f500, %f499, %f159;
	div.approx.f32 	%f502, %f500, %f225;
	abs.f32 	%f503, %f502;
	setp.gt.f32 	%p63, %f503, 0f4B800000;
	mul.f32 	%f504, %f502, 0f00000000;
	div.approx.f32 	%f36, %f500, %f253;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1270, %f1277;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1054
	sin.approx.f32 	%f530, %f36;
	div.approx.f32 	%f1270, %f530, %f36;
$L__BB0_26:                             // %L1057
	selp.f32 	%f229, %f228, %f226, %p15;
	selp.f32 	%f263, %f262, %f260, %p21;
	selp.f32 	%f298, %f297, %f295, %p27;
	selp.f32 	%f332, %f331, %f329, %p33;
	selp.f32 	%f367, %f366, %f364, %p39;
	selp.f32 	%f401, %f400, %f398, %p45;
	selp.f32 	%f436, %f435, %f433, %p51;
	selp.f32 	%f470, %f469, %f467, %p57;
	selp.f32 	%f505, %f504, %f502, %p63;
	shl.b32 	%r129, %r2, 1;
	and.b32  	%r236, %r2, 18;
	and.b32  	%r237, %r128, 36;
	cvt.rn.f32.s32 	%f533, %r12;
	sub.f32 	%f534, %f533, %f159;
	div.approx.f32 	%f536, %f534, %f225;
	abs.f32 	%f537, %f536;
	setp.gt.f32 	%p69, %f537, 0f4B800000;
	mul.f32 	%f538, %f536, 0f00000000;
	selp.f32 	%f539, %f538, %f536, %p69;
	div.approx.f32 	%f41, %f534, %f253;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1271, %f1277;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1074
	sin.approx.f32 	%f564, %f41;
	div.approx.f32 	%f1271, %f564, %f41;
$L__BB0_28:                             // %L1077
	add.f32 	%f230, %f229, %f229;
	add.f32 	%f264, %f263, %f263;
	add.f32 	%f299, %f298, %f298;
	add.f32 	%f333, %f332, %f332;
	add.f32 	%f368, %f367, %f367;
	add.f32 	%f402, %f401, %f401;
	add.f32 	%f437, %f436, %f436;
	add.f32 	%f471, %f470, %f470;
	add.f32 	%f506, %f505, %f505;
	add.f32 	%f540, %f539, %f539;
	and.b32  	%r130, %r129, 8;
	shl.b32 	%r132, %r1, 5;
	or.b32  	%r238, %r236, %r237;
	or.b32  	%r339, %r144, 257;
	or.b32  	%r14, %r144, 321;
	cvt.rn.f32.s32 	%f568, %r339;
	sub.f32 	%f569, %f568, %f159;
	div.approx.f32 	%f571, %f569, %f225;
	abs.f32 	%f572, %f571;
	setp.gt.f32 	%p75, %f572, 0f4B800000;
	mul.f32 	%f573, %f571, 0f00000000;
	selp.f32 	%f574, %f573, %f571, %p75;
	add.f32 	%f575, %f574, %f574;
	div.approx.f32 	%f45, %f569, %f253;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1272, %f1277;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1156
	sin.approx.f32 	%f599, %f45;
	div.approx.f32 	%f1272, %f599, %f45;
$L__BB0_30:                             // %L1159
	mov.b32 	%r250, %f230;
	mov.b32 	%r257, %f264;
	mov.b32 	%r268, %f299;
	mov.b32 	%r275, %f333;
	mov.b32 	%r286, %f368;
	mov.b32 	%r293, %f402;
	mov.b32 	%r304, %f437;
	mov.b32 	%r311, %f471;
	mov.b32 	%r322, %f506;
	mov.b32 	%r329, %f540;
	mov.b32 	%r340, %f575;
	and.b32  	%r235, %r132, 8064;
	or.b32  	%r133, %r238, %r130;
	cvt.rn.f32.s32 	%f602, %r14;
	sub.f32 	%f603, %f602, %f159;
	div.approx.f32 	%f605, %f603, %f225;
	abs.f32 	%f606, %f605;
	setp.gt.f32 	%p81, %f606, 0f4B800000;
	mul.f32 	%f607, %f605, 0f00000000;
	selp.f32 	%f608, %f607, %f605, %p81;
	add.f32 	%f609, %f608, %f608;
	mov.b32 	%r347, %f609;
	div.approx.f32 	%f50, %f603, %f253;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1273, %f1277;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1176
	sin.approx.f32 	%f633, %f50;
	div.approx.f32 	%f1273, %f633, %f50;
$L__BB0_32:                             // %L1179
	and.b32  	%r251, %r250, -2147483648;
	and.b32  	%r258, %r257, -2147483648;
	and.b32  	%r269, %r268, -2147483648;
	and.b32  	%r276, %r275, -2147483648;
	and.b32  	%r287, %r286, -2147483648;
	and.b32  	%r294, %r293, -2147483648;
	and.b32  	%r305, %r304, -2147483648;
	and.b32  	%r312, %r311, -2147483648;
	and.b32  	%r323, %r322, -2147483648;
	and.b32  	%r330, %r329, -2147483648;
	and.b32  	%r341, %r340, -2147483648;
	and.b32  	%r348, %r347, -2147483648;
	or.b32  	%r239, %r133, %r235;
	or.b32  	%r357, %r144, 384;
	or.b32  	%r16, %r144, 448;
	cvt.rn.f32.s32 	%f637, %r357;
	sub.f32 	%f638, %f637, %f159;
	div.approx.f32 	%f640, %f638, %f225;
	abs.f32 	%f641, %f640;
	setp.gt.f32 	%p87, %f641, 0f4B800000;
	mul.f32 	%f642, %f640, 0f00000000;
	selp.f32 	%f643, %f642, %f640, %p87;
	add.f32 	%f644, %f643, %f643;
	mov.b32 	%r358, %f644;
	and.b32  	%r359, %r358, -2147483648;
	div.approx.f32 	%f54, %f638, %f253;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1274, %f1277;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1258
	sin.approx.f32 	%f668, %f54;
	div.approx.f32 	%f1274, %f668, %f54;
$L__BB0_34:                             // %L1261
	or.b32  	%r252, %r251, 1056964608;
	or.b32  	%r259, %r258, 1056964608;
	or.b32  	%r270, %r269, 1056964608;
	or.b32  	%r277, %r276, 1056964608;
	or.b32  	%r288, %r287, 1056964608;
	or.b32  	%r295, %r294, 1056964608;
	or.b32  	%r306, %r305, 1056964608;
	or.b32  	%r313, %r312, 1056964608;
	or.b32  	%r324, %r323, 1056964608;
	or.b32  	%r331, %r330, 1056964608;
	or.b32  	%r342, %r341, 1056964608;
	or.b32  	%r349, %r348, 1056964608;
	or.b32  	%r360, %r359, 1056964608;
	cvt.u16.u32 	%rs2, %r239;
	cvt.rn.f32.s32 	%f671, %r16;
	sub.f32 	%f672, %f671, %f159;
	div.approx.f32 	%f674, %f672, %f225;
	abs.f32 	%f675, %f674;
	setp.gt.f32 	%p93, %f675, 0f4B800000;
	mul.f32 	%f676, %f674, 0f00000000;
	selp.f32 	%f677, %f676, %f674, %p93;
	add.f32 	%f678, %f677, %f677;
	mov.b32 	%r365, %f678;
	and.b32  	%r366, %r365, -2147483648;
	or.b32  	%r367, %r366, 1056964608;
	div.approx.f32 	%f59, %f672, %f253;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1275, %f1277;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1278
	sin.approx.f32 	%f702, %f59;
	div.approx.f32 	%f1275, %f702, %f59;
$L__BB0_36:                             // %L1281
	mov.b32 	%f231, %r252;
	mov.b32 	%f265, %r259;
	mov.b32 	%f300, %r270;
	mov.b32 	%f334, %r277;
	mov.b32 	%f369, %r288;
	mov.b32 	%f403, %r295;
	mov.b32 	%f438, %r306;
	mov.b32 	%f472, %r313;
	mov.b32 	%f507, %r324;
	mov.b32 	%f541, %r331;
	mov.b32 	%f576, %r342;
	mov.b32 	%f610, %r349;
	mov.b32 	%f645, %r360;
	mov.b32 	%f679, %r367;
	shr.u16 	%rs3, %rs2, 1;
	or.b32  	%r375, %r144, 385;
	or.b32  	%r18, %r144, 449;
	cvt.rn.f32.s32 	%f706, %r375;
	sub.f32 	%f707, %f706, %f159;
	div.approx.f32 	%f709, %f707, %f225;
	abs.f32 	%f710, %f709;
	setp.gt.f32 	%p99, %f710, 0f4B800000;
	mul.f32 	%f711, %f709, 0f00000000;
	selp.f32 	%f712, %f711, %f709, %p99;
	add.f32 	%f713, %f712, %f712;
	mov.b32 	%r376, %f713;
	and.b32  	%r377, %r376, -2147483648;
	or.b32  	%r378, %r377, 1056964608;
	mov.b32 	%f714, %r378;
	div.approx.f32 	%f63, %f707, %f253;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1276, %f1277;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1360
	sin.approx.f32 	%f737, %f63;
	div.approx.f32 	%f1276, %f737, %f63;
$L__BB0_38:                             // %L1363
	add.f32 	%f232, %f230, %f231;
	abs.f32 	%f234, %f230;
	add.f32 	%f266, %f264, %f265;
	abs.f32 	%f268, %f264;
	add.f32 	%f301, %f299, %f300;
	abs.f32 	%f303, %f299;
	add.f32 	%f335, %f333, %f334;
	abs.f32 	%f337, %f333;
	add.f32 	%f370, %f368, %f369;
	abs.f32 	%f372, %f368;
	add.f32 	%f404, %f402, %f403;
	abs.f32 	%f406, %f402;
	add.f32 	%f439, %f437, %f438;
	abs.f32 	%f441, %f437;
	add.f32 	%f473, %f471, %f472;
	abs.f32 	%f475, %f471;
	add.f32 	%f508, %f506, %f507;
	abs.f32 	%f510, %f506;
	add.f32 	%f542, %f540, %f541;
	abs.f32 	%f544, %f540;
	add.f32 	%f577, %f575, %f576;
	abs.f32 	%f579, %f575;
	add.f32 	%f611, %f609, %f610;
	abs.f32 	%f613, %f609;
	add.f32 	%f646, %f644, %f645;
	abs.f32 	%f648, %f644;
	add.f32 	%f680, %f678, %f679;
	abs.f32 	%f682, %f678;
	add.f32 	%f715, %f713, %f714;
	abs.f32 	%f717, %f713;
	or.b16  	%rs1, %rs3, 32;
	shr.u32 	%r136, %r2, 1;
	shr.u32 	%r142, %r2, 3;
	cvt.rn.f32.s32 	%f740, %r18;
	sub.f32 	%f741, %f740, %f159;
	div.approx.f32 	%f743, %f741, %f225;
	abs.f32 	%f744, %f743;
	setp.gt.f32 	%p105, %f744, 0f4B800000;
	mul.f32 	%f745, %f743, 0f00000000;
	selp.f32 	%f746, %f745, %f743, %p105;
	add.f32 	%f747, %f746, %f746;
	mov.b32 	%r383, %f747;
	and.b32  	%r384, %r383, -2147483648;
	or.b32  	%r385, %r384, 1056964608;
	mov.b32 	%f748, %r385;
	add.f32 	%f749, %f747, %f748;
	abs.f32 	%f751, %f747;
	div.approx.f32 	%f68, %f741, %f253;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1380
	sin.approx.f32 	%f771, %f68;
	div.approx.f32 	%f1277, %f771, %f68;
$L__BB0_40:                             // %L1383
	cvt.rzi.f32.f32 	%f233, %f232;
	setp.gt.f32 	%p16, %f234, 0f4B000000;
	cvt.rzi.f32.f32 	%f267, %f266;
	setp.gt.f32 	%p22, %f268, 0f4B000000;
	cvt.rzi.f32.f32 	%f302, %f301;
	setp.gt.f32 	%p28, %f303, 0f4B000000;
	cvt.rzi.f32.f32 	%f336, %f335;
	setp.gt.f32 	%p34, %f337, 0f4B000000;
	cvt.rzi.f32.f32 	%f371, %f370;
	setp.gt.f32 	%p40, %f372, 0f4B000000;
	cvt.rzi.f32.f32 	%f405, %f404;
	setp.gt.f32 	%p46, %f406, 0f4B000000;
	cvt.rzi.f32.f32 	%f440, %f439;
	setp.gt.f32 	%p52, %f441, 0f4B000000;
	cvt.rzi.f32.f32 	%f474, %f473;
	setp.gt.f32 	%p58, %f475, 0f4B000000;
	cvt.rzi.f32.f32 	%f509, %f508;
	setp.gt.f32 	%p64, %f510, 0f4B000000;
	cvt.rzi.f32.f32 	%f543, %f542;
	setp.gt.f32 	%p70, %f544, 0f4B000000;
	cvt.rzi.f32.f32 	%f578, %f577;
	setp.gt.f32 	%p76, %f579, 0f4B000000;
	cvt.rzi.f32.f32 	%f612, %f611;
	setp.gt.f32 	%p82, %f613, 0f4B000000;
	cvt.rzi.f32.f32 	%f647, %f646;
	setp.gt.f32 	%p88, %f648, 0f4B000000;
	cvt.rzi.f32.f32 	%f681, %f680;
	setp.gt.f32 	%p94, %f682, 0f4B000000;
	cvt.rzi.f32.f32 	%f716, %f715;
	setp.gt.f32 	%p100, %f717, 0f4B000000;
	cvt.rzi.f32.f32 	%f750, %f749;
	setp.gt.f32 	%p106, %f751, 0f4B000000;
	and.b16  	%rs4, %rs1, 4095;
	mul.lo.s32 	%r405, %r144, 127;
	and.b32  	%r406, %r405, 255;
	cvt.rn.f32.s32 	%f774, %r406;
	div.approx.f32 	%f776, %f774, %f253;
	add.f32 	%f777, %f776, %f776;
	mov.b32 	%r407, %f777;
	and.b32  	%r408, %r407, -2147483648;
	or.b32  	%r409, %r408, 1056964608;
	mov.b32 	%f778, %r409;
	add.f32 	%f779, %f777, %f778;
	cvt.rzi.f32.f32 	%f780, %f779;
	abs.f32 	%f781, %f777;
	setp.gt.f32 	%p111, %f781, 0f4B000000;
	selp.f32 	%f782, %f777, %f780, %p111;
	cvt.rzi.f32.f32 	%f783, %f777;
	setp.lt.f32 	%p112, %f781, 0f3F000000;
	add.s32 	%r415, %r405, 192;
	and.b32  	%r416, %r415, 255;
	cvt.rn.f32.s32 	%f809, %r416;
	div.approx.f32 	%f810, %f809, %f253;
	add.f32 	%f811, %f810, %f810;
	mov.b32 	%r417, %f811;
	and.b32  	%r418, %r417, -2147483648;
	or.b32  	%r419, %r418, 1056964608;
	mov.b32 	%f812, %r419;
	add.f32 	%f813, %f811, %f812;
	cvt.rzi.f32.f32 	%f814, %f813;
	abs.f32 	%f815, %f811;
	setp.gt.f32 	%p118, %f815, 0f4B000000;
	selp.f32 	%f816, %f811, %f814, %p118;
	cvt.rzi.f32.f32 	%f817, %f811;
	setp.lt.f32 	%p119, %f815, 0f3F000000;
	and.b32  	%r425, %r142, 2;
	and.b32  	%r426, %r136, 4;
	or.b32  	%r427, %r140, %r425;
	or.b32  	%r24, %r427, %r426;
	and.b32  	%r428, %r2, 3;
	mul.lo.s32 	%r429, %r428, %r24;
	shl.b32 	%r430, %r429, 1;
	neg.s32 	%r431, %r430;
	cvt.rn.f32.s32 	%f842, %r431;
	mov.f32 	%f843, 0f41000000;
	div.approx.f32 	%f71, %f842, %f843;
	abs.f32 	%f1300, %f71;
	setp.lt.f32 	%p125, %f1300, 0f40000000;
	@%p125 bra 	$L__BB0_132;
// %bb.41:
	setp.gtu.f32 	%p126, %f1300, 0f4B800000;
	@%p126 bra 	$L__BB0_128;
	bra.uni 	$L__BB0_42;
$L__BB0_128:
	mov.b32 	%r147, %f1300;
	and.b32  	%r432, %r147, 8388607;
	or.b32  	%r16311, %r432, 1065353216;
	mov.b32 	%f1299, %r16311;
	add.s32 	%r433, %r147, -1073741824;
	and.b32  	%r16312, %r433, -8388608;
	setp.eq.s32 	%p132, %r16312, 0;
	@%p132 bra 	$L__BB0_131;
// %bb.129:                             // %__nv_fmaf_rn.exit4.i.i.i1743.preheader
	mov.f32 	%f853, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f852,%f853;
	// end inline asm
$L__BB0_130:                            // %__nv_fmaf_rn.exit4.i.i.i1743
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r434, %r16312, 192937984;
	add.s32 	%r435, %r16311, %r434;
	mov.b32 	%f854, %r435;
	mul.f32 	%f855, %f852, %f854;
	sub.f32 	%f856, %f854, %f855;
	fma.rn.f32 	%f857, %f856, %f852, %f855;
	sub.f32 	%f858, %f854, %f857;
	fma.rz.f32 	%f859, %f858, %f852, %f857;
	cvt.rzi.f32.f32 	%f860, %f859;
	sub.f32 	%f1299, %f854, %f860;
	sub.s32 	%r16312, %r16312, %r434;
	mov.b32 	%r16311, %f1299;
	setp.ne.s32 	%p133, %r16312, 0;
	setp.ne.s32 	%p134, %r16311, 0;
	and.pred  	%p135, %p133, %p134;
	@%p135 bra 	$L__BB0_130;
$L__BB0_131:                            // %__internal_fmodf_slowpath_mod.exit.i.i1745
	setp.gt.u32 	%p136, %r147, 2139095039;
	selp.f32 	%f861, 0f7FFFFFFF, 0f4B800000, %p136;
	mul.f32 	%f862, %f1299, 0f34000000;
	mul.f32 	%f1300, %f861, %f862;
	bra.uni 	$L__BB0_132;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i1722
	div.approx.f32 	%f845, %f1300, %f221;
	cvt.rzi.f32.f32 	%f1298, %f845;
	fma.rn.f32 	%f163, %f1298, 0fC0000000, %f1300;
	mov.b32 	%r146, %f163;
	setp.lt.u32 	%p127, %r146, 1073741824;
	@%p127 bra 	$L__BB0_127;
// %bb.43:
	setp.lt.u32 	%p128, %r146, -2147483647;
	@%p128 bra 	$L__BB0_125;
// %bb.44:
	add.f32 	%f850, %f1298, 0fBF800000;
	setp.lt.f32 	%p131, %f163, 0fC0000000;
	add.f32 	%f851, %f850, 0fBF800000;
	selp.f32 	%f1298, %f851, %f850, %p131;
	bra.uni 	$L__BB0_127;
$L__BB0_125:
	add.f32 	%f1298, %f1298, 0f3F800000;
	setp.ltu.f32 	%p129, %f163, 0f40800000;
	@%p129 bra 	$L__BB0_127;
// %bb.126:                             // %__nv_fmaf_rn.exit.i.i.i1726
	add.f32 	%f846, %f1298, 0f3F800000;
	fma.rn.f32 	%f848, %f221, 0fC0400000, %f163;
	setp.ge.f32 	%p130, %f848, 0f00000000;
	add.f32 	%f849, %f846, 0f3F800000;
	selp.f32 	%f1298, %f849, %f846, %p130;
$L__BB0_127:                            // %__internal_fmodf_fastpath_quot.exit.i.i1729
	fma.rn.f32 	%f1300, %f1298, 0fC0000000, %f1300;
$L__BB0_132:                            // %__internal_fmodf_kernel.exit.i1748
	selp.f32 	%f235, %f230, %f233, %p16;
	cvt.rzi.f32.f32 	%f236, %f230;
	setp.lt.f32 	%p17, %f234, 0f3F000000;
	selp.f32 	%f269, %f264, %f267, %p22;
	cvt.rzi.f32.f32 	%f270, %f264;
	setp.lt.f32 	%p23, %f268, 0f3F000000;
	selp.f32 	%f304, %f299, %f302, %p28;
	cvt.rzi.f32.f32 	%f305, %f299;
	setp.lt.f32 	%p29, %f303, 0f3F000000;
	selp.f32 	%f338, %f333, %f336, %p34;
	cvt.rzi.f32.f32 	%f339, %f333;
	setp.lt.f32 	%p35, %f337, 0f3F000000;
	selp.f32 	%f373, %f368, %f371, %p40;
	cvt.rzi.f32.f32 	%f374, %f368;
	setp.lt.f32 	%p41, %f372, 0f3F000000;
	selp.f32 	%f407, %f402, %f405, %p46;
	cvt.rzi.f32.f32 	%f408, %f402;
	setp.lt.f32 	%p47, %f406, 0f3F000000;
	selp.f32 	%f442, %f437, %f440, %p52;
	cvt.rzi.f32.f32 	%f443, %f437;
	setp.lt.f32 	%p53, %f441, 0f3F000000;
	selp.f32 	%f476, %f471, %f474, %p58;
	cvt.rzi.f32.f32 	%f477, %f471;
	setp.lt.f32 	%p59, %f475, 0f3F000000;
	selp.f32 	%f511, %f506, %f509, %p64;
	cvt.rzi.f32.f32 	%f512, %f506;
	setp.lt.f32 	%p65, %f510, 0f3F000000;
	selp.f32 	%f545, %f540, %f543, %p70;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p71, %f544, 0f3F000000;
	selp.f32 	%f580, %f575, %f578, %p76;
	cvt.rzi.f32.f32 	%f581, %f575;
	setp.lt.f32 	%p77, %f579, 0f3F000000;
	selp.f32 	%f614, %f609, %f612, %p82;
	cvt.rzi.f32.f32 	%f615, %f609;
	setp.lt.f32 	%p83, %f613, 0f3F000000;
	selp.f32 	%f649, %f644, %f647, %p88;
	cvt.rzi.f32.f32 	%f650, %f644;
	setp.lt.f32 	%p89, %f648, 0f3F000000;
	selp.f32 	%f683, %f678, %f681, %p94;
	cvt.rzi.f32.f32 	%f684, %f678;
	setp.lt.f32 	%p95, %f682, 0f3F000000;
	selp.f32 	%f718, %f713, %f716, %p100;
	cvt.rzi.f32.f32 	%f719, %f713;
	setp.lt.f32 	%p101, %f717, 0f3F000000;
	selp.f32 	%f752, %f747, %f750, %p106;
	cvt.rzi.f32.f32 	%f753, %f747;
	setp.lt.f32 	%p107, %f751, 0f3F000000;
	selp.f32 	%f784, %f783, %f782, %p112;
	selp.f32 	%f818, %f817, %f816, %p119;
	shr.u32 	%r240, %r239, 1;
	cvt.u32.u16 	%r241, %rs4;
	abs.f32 	%f863, %f1300;
	setp.gtu.f32 	%p137, %f863, 0f7F800000;
	@%p137 bra 	$L__BB0_134;
// %bb.133:
	mov.b32 	%r436, %f71;
	and.b32  	%r437, %r436, -2147483648;
	mov.b32 	%r438, %f1300;
	or.b32  	%r439, %r437, %r438;
	mov.b32 	%f1300, %r439;
$L__BB0_134:                            // %__nv_fmodf.exit1749
	selp.f32 	%f237, %f236, %f235, %p17;
	selp.f32 	%f271, %f270, %f269, %p23;
	selp.f32 	%f306, %f305, %f304, %p29;
	selp.f32 	%f340, %f339, %f338, %p35;
	selp.f32 	%f375, %f374, %f373, %p41;
	selp.f32 	%f409, %f408, %f407, %p47;
	selp.f32 	%f444, %f443, %f442, %p53;
	selp.f32 	%f478, %f477, %f476, %p59;
	selp.f32 	%f513, %f512, %f511, %p65;
	selp.f32 	%f547, %f546, %f545, %p71;
	selp.f32 	%f582, %f581, %f580, %p77;
	selp.f32 	%f616, %f615, %f614, %p83;
	selp.f32 	%f651, %f650, %f649, %p89;
	selp.f32 	%f685, %f684, %f683, %p95;
	selp.f32 	%f720, %f719, %f718, %p101;
	selp.f32 	%f754, %f753, %f752, %p107;
	fma.rn.f32 	%f785, %f784, 0fBF000000, %f776;
	fma.rn.f32 	%f819, %f818, 0fBF000000, %f810;
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd31, %r240, 4;
	mul.wide.u32 	%rd33, %r241, 4;
	add.f32 	%f864, %f1300, %f1300;
	mov.b32 	%r440, %f864;
	and.b32  	%r441, %r440, -2147483648;
	or.b32  	%r442, %r441, 1056964608;
	mov.b32 	%f865, %r442;
	add.f32 	%f866, %f864, %f865;
	cvt.rzi.f32.f32 	%f867, %f866;
	abs.f32 	%f868, %f864;
	setp.gt.f32 	%p138, %f868, 0f4B000000;
	selp.f32 	%f869, %f864, %f867, %p138;
	cvt.rzi.f32.f32 	%f870, %f864;
	setp.lt.f32 	%p139, %f868, 0f3F000000;
	selp.f32 	%f871, %f870, %f869, %p139;
	fma.rn.f32 	%f872, %f871, 0fBF000000, %f1300;
	and.b32  	%r448, %r129, 6;
	mov.u32 	%r449, -8;
	sub.s32 	%r450, %r449, %r448;
	mul.lo.s32 	%r451, %r24, %r450;
	cvt.rn.f32.s32 	%f894, %r451;
	div.approx.f32 	%f179, %f894, %f843;
	abs.f32 	%f1280, %f179;
	setp.lt.f32 	%p145, %f1280, 0f40000000;
	@%p145 bra 	$L__BB0_56;
// %bb.45:
	setp.gtu.f32 	%p146, %f1280, 0f4B800000;
	@%p146 bra 	$L__BB0_52;
	bra.uni 	$L__BB0_46;
$L__BB0_52:
	mov.b32 	%r26, %f1280;
	and.b32  	%r452, %r26, 8388607;
	or.b32  	%r16276, %r452, 1065353216;
	mov.b32 	%f1279, %r16276;
	add.s32 	%r453, %r26, -1073741824;
	and.b32  	%r16277, %r453, -8388608;
	setp.eq.s32 	%p152, %r16277, 0;
	@%p152 bra 	$L__BB0_55;
// %bb.53:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f905, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f904,%f905;
	// end inline asm
$L__BB0_54:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r454, %r16277, 192937984;
	add.s32 	%r455, %r16276, %r454;
	mov.b32 	%f906, %r455;
	mul.f32 	%f907, %f904, %f906;
	sub.f32 	%f908, %f906, %f907;
	fma.rn.f32 	%f909, %f908, %f904, %f907;
	sub.f32 	%f910, %f906, %f909;
	fma.rz.f32 	%f911, %f910, %f904, %f909;
	cvt.rzi.f32.f32 	%f912, %f911;
	sub.f32 	%f1279, %f906, %f912;
	sub.s32 	%r16277, %r16277, %r454;
	mov.b32 	%r16276, %f1279;
	setp.ne.s32 	%p153, %r16277, 0;
	setp.ne.s32 	%p154, %r16276, 0;
	and.pred  	%p155, %p153, %p154;
	@%p155 bra 	$L__BB0_54;
$L__BB0_55:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p156, %r26, 2139095039;
	selp.f32 	%f913, 0f7FFFFFFF, 0f4B800000, %p156;
	mul.f32 	%f914, %f1279, 0f34000000;
	mul.f32 	%f1280, %f913, %f914;
	bra.uni 	$L__BB0_56;
$L__BB0_46:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f897, %f1280, %f221;
	cvt.rzi.f32.f32 	%f1278, %f897;
	fma.rn.f32 	%f74, %f1278, 0fC0000000, %f1280;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p147, %r25, 1073741824;
	@%p147 bra 	$L__BB0_51;
// %bb.47:
	setp.lt.u32 	%p148, %r25, -2147483647;
	@%p148 bra 	$L__BB0_49;
// %bb.48:
	add.f32 	%f902, %f1278, 0fBF800000;
	setp.lt.f32 	%p151, %f74, 0fC0000000;
	add.f32 	%f903, %f902, 0fBF800000;
	selp.f32 	%f1278, %f903, %f902, %p151;
	bra.uni 	$L__BB0_51;
$L__BB0_49:
	add.f32 	%f1278, %f1278, 0f3F800000;
	setp.ltu.f32 	%p149, %f74, 0f40800000;
	@%p149 bra 	$L__BB0_51;
// %bb.50:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f898, %f1278, 0f3F800000;
	fma.rn.f32 	%f900, %f221, 0fC0400000, %f74;
	setp.ge.f32 	%p150, %f900, 0f00000000;
	add.f32 	%f901, %f898, 0f3F800000;
	selp.f32 	%f1278, %f901, %f898, %p150;
$L__BB0_51:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1280, %f1278, 0fC0000000, %f1280;
$L__BB0_56:                             // %__internal_fmodf_kernel.exit.i
	fma.rn.f32 	%f238, %f237, 0fBF000000, %f229;
	fma.rn.f32 	%f272, %f271, 0fBF000000, %f263;
	fma.rn.f32 	%f307, %f306, 0fBF000000, %f298;
	fma.rn.f32 	%f341, %f340, 0fBF000000, %f332;
	fma.rn.f32 	%f376, %f375, 0fBF000000, %f367;
	fma.rn.f32 	%f410, %f409, 0fBF000000, %f401;
	fma.rn.f32 	%f445, %f444, 0fBF000000, %f436;
	fma.rn.f32 	%f479, %f478, 0fBF000000, %f470;
	fma.rn.f32 	%f514, %f513, 0fBF000000, %f505;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	fma.rn.f32 	%f583, %f582, 0fBF000000, %f574;
	fma.rn.f32 	%f617, %f616, 0fBF000000, %f608;
	fma.rn.f32 	%f652, %f651, 0fBF000000, %f643;
	fma.rn.f32 	%f686, %f685, 0fBF000000, %f677;
	fma.rn.f32 	%f721, %f720, 0fBF000000, %f712;
	fma.rn.f32 	%f755, %f754, 0fBF000000, %f746;
	mul.f32 	%f786, %f785, %f785;
	mul.f32 	%f820, %f819, %f819;
	mul.f32 	%f873, %f872, %f872;
	add.s64 	%rd32, %rd1, %rd31;
	add.s64 	%rd34, %rd1, %rd33;
	abs.f32 	%f915, %f1280;
	setp.gtu.f32 	%p157, %f915, 0f7F800000;
	@%p157 bra 	$L__BB0_58;
// %bb.57:
	mov.b32 	%r456, %f179;
	and.b32  	%r457, %r456, -2147483648;
	mov.b32 	%r458, %f1280;
	or.b32  	%r459, %r457, %r458;
	mov.b32 	%f1280, %r459;
$L__BB0_58:                             // %__nv_fmodf.exit
	mul.f32 	%f239, %f238, %f238;
	mul.f32 	%f273, %f272, %f272;
	mul.f32 	%f308, %f307, %f307;
	mul.f32 	%f342, %f341, %f341;
	mul.f32 	%f377, %f376, %f376;
	mul.f32 	%f411, %f410, %f410;
	mul.f32 	%f446, %f445, %f445;
	mul.f32 	%f480, %f479, %f479;
	mul.f32 	%f515, %f514, %f514;
	mul.f32 	%f549, %f548, %f548;
	mul.f32 	%f584, %f583, %f583;
	mul.f32 	%f618, %f617, %f617;
	mul.f32 	%f653, %f652, %f652;
	mul.f32 	%f687, %f686, %f686;
	mul.f32 	%f722, %f721, %f721;
	mul.f32 	%f756, %f755, %f755;
	fma.rn.f32 	%f787, %f786, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f788, %f786, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f821, %f820, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f822, %f820, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f874, %f873, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f875, %f873, 0f3E684E12, 0fBFAAD2E0;
	ld.global.u32 	%r134, [%rd32];
	ld.global.u32 	%r135, [%rd34];
	add.f32 	%f916, %f1280, %f1280;
	mov.b32 	%r472, %f916;
	and.b32  	%r473, %r472, -2147483648;
	or.b32  	%r474, %r473, 1056964608;
	mov.b32 	%f917, %r474;
	add.f32 	%f918, %f916, %f917;
	cvt.rzi.f32.f32 	%f919, %f918;
	abs.f32 	%f920, %f916;
	setp.gt.f32 	%p158, %f920, 0f4B000000;
	selp.f32 	%f921, %f916, %f919, %p158;
	cvt.rzi.f32.f32 	%f922, %f916;
	setp.lt.f32 	%p159, %f920, 0f3F000000;
	selp.f32 	%f923, %f922, %f921, %p159;
	fma.rn.f32 	%f924, %f923, 0fBF000000, %f1280;
	mul.f32 	%f925, %f924, %f924;
	fma.rn.f32 	%f926, %f925, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f927, %f925, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r480, %r138, 2147483646;
	shl.b32 	%r481, %r137, 2;
	sub.s32 	%r482, %r480, %r481;
	mul.lo.s32 	%r483, %r482, %r24;
	shl.b32 	%r37, %r483, 1;
	mov.u64 	%rd35, 2;
	mov.u64 	%rd36, 6;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r221;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17554, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd37, [retval0+0];
	} // callseq 2
	cvt.rn.f32.s32 	%f88, %r37;
	cvt.rn.f32.s64 	%f948, %rd37;
	div.approx.f32 	%f89, %f88, %f948;
	abs.f32 	%f1304, %f89;
	setp.lt.f32 	%p165, %f1304, 0f40000000;
	@%p165 bra 	$L__BB0_142;
// %bb.59:
	setp.gtu.f32 	%p166, %f1304, 0f4B800000;
	@%p166 bra 	$L__BB0_138;
	bra.uni 	$L__BB0_60;
$L__BB0_138:
	mov.b32 	%r155, %f1304;
	and.b32  	%r484, %r155, 8388607;
	or.b32  	%r16313, %r484, 1065353216;
	mov.b32 	%f1303, %r16313;
	add.s32 	%r485, %r155, -1073741824;
	and.b32  	%r16314, %r485, -8388608;
	setp.eq.s32 	%p172, %r16314, 0;
	@%p172 bra 	$L__BB0_141;
// %bb.139:                             // %__nv_fmaf_rn.exit4.i.i.i1774.preheader
	mov.f32 	%f958, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f957,%f958;
	// end inline asm
$L__BB0_140:                            // %__nv_fmaf_rn.exit4.i.i.i1774
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r486, %r16314, 192937984;
	add.s32 	%r487, %r16313, %r486;
	mov.b32 	%f959, %r487;
	mul.f32 	%f960, %f957, %f959;
	sub.f32 	%f961, %f959, %f960;
	fma.rn.f32 	%f962, %f961, %f957, %f960;
	sub.f32 	%f963, %f959, %f962;
	fma.rz.f32 	%f964, %f963, %f957, %f962;
	cvt.rzi.f32.f32 	%f965, %f964;
	sub.f32 	%f1303, %f959, %f965;
	sub.s32 	%r16314, %r16314, %r486;
	mov.b32 	%r16313, %f1303;
	setp.ne.s32 	%p173, %r16314, 0;
	setp.ne.s32 	%p174, %r16313, 0;
	and.pred  	%p175, %p173, %p174;
	@%p175 bra 	$L__BB0_140;
$L__BB0_141:                            // %__internal_fmodf_slowpath_mod.exit.i.i1776
	setp.gt.u32 	%p176, %r155, 2139095039;
	selp.f32 	%f966, 0f7FFFFFFF, 0f4B800000, %p176;
	mul.f32 	%f967, %f1303, 0f34000000;
	mul.f32 	%f1304, %f966, %f967;
	bra.uni 	$L__BB0_142;
$L__BB0_60:                             // %__nv_fast_fdividef.exit.i.i.i1753
	div.approx.f32 	%f950, %f1304, %f221;
	cvt.rzi.f32.f32 	%f1302, %f950;
	fma.rn.f32 	%f182, %f1302, 0fC0000000, %f1304;
	mov.b32 	%r154, %f182;
	setp.lt.u32 	%p167, %r154, 1073741824;
	@%p167 bra 	$L__BB0_137;
// %bb.61:
	setp.lt.u32 	%p168, %r154, -2147483647;
	@%p168 bra 	$L__BB0_135;
// %bb.62:
	add.f32 	%f955, %f1302, 0fBF800000;
	setp.lt.f32 	%p171, %f182, 0fC0000000;
	add.f32 	%f956, %f955, 0fBF800000;
	selp.f32 	%f1302, %f956, %f955, %p171;
	bra.uni 	$L__BB0_137;
$L__BB0_135:
	add.f32 	%f1302, %f1302, 0f3F800000;
	setp.ltu.f32 	%p169, %f182, 0f40800000;
	@%p169 bra 	$L__BB0_137;
// %bb.136:                             // %__nv_fmaf_rn.exit.i.i.i1757
	add.f32 	%f951, %f1302, 0f3F800000;
	fma.rn.f32 	%f953, %f221, 0fC0400000, %f182;
	setp.ge.f32 	%p170, %f953, 0f00000000;
	add.f32 	%f954, %f951, 0f3F800000;
	selp.f32 	%f1302, %f954, %f951, %p170;
$L__BB0_137:                            // %__internal_fmodf_fastpath_quot.exit.i.i1760
	fma.rn.f32 	%f1304, %f1302, 0fC0000000, %f1304;
$L__BB0_142:                            // %__internal_fmodf_kernel.exit.i1779
	cvt.rzi.s32.f32 	%r253, %f237;
	fma.rn.f32 	%f240, %f239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f241, %f239, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r260, %f271;
	fma.rn.f32 	%f274, %f273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f275, %f273, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r271, %f306;
	fma.rn.f32 	%f309, %f308, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f310, %f308, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r278, %f340;
	fma.rn.f32 	%f343, %f342, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f344, %f342, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r289, %f375;
	fma.rn.f32 	%f378, %f377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f379, %f377, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r296, %f409;
	fma.rn.f32 	%f412, %f411, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f413, %f411, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r307, %f444;
	fma.rn.f32 	%f447, %f446, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f448, %f446, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r314, %f478;
	fma.rn.f32 	%f481, %f480, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f482, %f480, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r325, %f513;
	fma.rn.f32 	%f516, %f515, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f517, %f515, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r332, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r343, %f582;
	fma.rn.f32 	%f585, %f584, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f586, %f584, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r350, %f616;
	fma.rn.f32 	%f619, %f618, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f620, %f618, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r361, %f651;
	fma.rn.f32 	%f654, %f653, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f655, %f653, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r368, %f685;
	fma.rn.f32 	%f688, %f687, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f689, %f687, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r379, %f720;
	fma.rn.f32 	%f723, %f722, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f724, %f722, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r386, %f754;
	fma.rn.f32 	%f757, %f756, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f758, %f756, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f784;
	fma.rn.f32 	%f789, %f787, %f786, 0fC0A55DF6;
	fma.rn.f32 	%f790, %f788, %f786, 0f4081E0CF;
	fma.rn.f32 	%f791, %f786, %f785, 0f00000000;
	cvt.rzi.s32.f32 	%r420, %f818;
	fma.rn.f32 	%f823, %f821, %f820, 0fC0A55DF6;
	fma.rn.f32 	%f824, %f822, %f820, 0f4081E0CF;
	fma.rn.f32 	%f825, %f820, %f819, 0f00000000;
	cvt.rzi.s32.f32 	%r443, %f871;
	fma.rn.f32 	%f876, %f874, %f873, 0fC0A55DF6;
	fma.rn.f32 	%f877, %f875, %f873, 0f4081E0CF;
	fma.rn.f32 	%f878, %f873, %f872, 0f00000000;
	cvt.rzi.s32.f32 	%r475, %f923;
	fma.rn.f32 	%f928, %f926, %f925, 0fC0A55DF6;
	fma.rn.f32 	%f929, %f927, %f925, 0f4081E0CF;
	fma.rn.f32 	%f930, %f925, %f924, 0f00000000;
	abs.f32 	%f968, %f1304;
	setp.gtu.f32 	%p177, %f968, 0f7F800000;
	@%p177 bra 	$L__BB0_144;
// %bb.143:
	mov.b32 	%r488, %f89;
	and.b32  	%r489, %r488, -2147483648;
	mov.b32 	%r490, %f1304;
	or.b32  	%r491, %r489, %r490;
	mov.b32 	%f1304, %r491;
$L__BB0_144:                            // %__nv_fmodf.exit1780
	add.s32 	%r254, %r253, 1;
	fma.rn.f32 	%f242, %f240, %f239, 0fC0A55DF6;
	fma.rn.f32 	%f243, %f241, %f239, 0f4081E0CF;
	fma.rn.f32 	%f244, %f239, %f238, 0f00000000;
	add.s32 	%r261, %r260, 1;
	fma.rn.f32 	%f276, %f274, %f273, 0fC0A55DF6;
	fma.rn.f32 	%f277, %f275, %f273, 0f4081E0CF;
	fma.rn.f32 	%f278, %f273, %f272, 0f00000000;
	add.s32 	%r272, %r271, 1;
	fma.rn.f32 	%f311, %f309, %f308, 0fC0A55DF6;
	fma.rn.f32 	%f312, %f310, %f308, 0f4081E0CF;
	fma.rn.f32 	%f313, %f308, %f307, 0f00000000;
	add.s32 	%r279, %r278, 1;
	fma.rn.f32 	%f345, %f343, %f342, 0fC0A55DF6;
	fma.rn.f32 	%f346, %f344, %f342, 0f4081E0CF;
	fma.rn.f32 	%f347, %f342, %f341, 0f00000000;
	add.s32 	%r290, %r289, 1;
	fma.rn.f32 	%f380, %f378, %f377, 0fC0A55DF6;
	fma.rn.f32 	%f381, %f379, %f377, 0f4081E0CF;
	fma.rn.f32 	%f382, %f377, %f376, 0f00000000;
	add.s32 	%r297, %r296, 1;
	fma.rn.f32 	%f414, %f412, %f411, 0fC0A55DF6;
	fma.rn.f32 	%f415, %f413, %f411, 0f4081E0CF;
	fma.rn.f32 	%f416, %f411, %f410, 0f00000000;
	add.s32 	%r308, %r307, 1;
	fma.rn.f32 	%f449, %f447, %f446, 0fC0A55DF6;
	fma.rn.f32 	%f450, %f448, %f446, 0f4081E0CF;
	fma.rn.f32 	%f451, %f446, %f445, 0f00000000;
	add.s32 	%r315, %r314, 1;
	fma.rn.f32 	%f483, %f481, %f480, 0fC0A55DF6;
	fma.rn.f32 	%f484, %f482, %f480, 0f4081E0CF;
	fma.rn.f32 	%f485, %f480, %f479, 0f00000000;
	add.s32 	%r326, %r325, 1;
	fma.rn.f32 	%f518, %f516, %f515, 0fC0A55DF6;
	fma.rn.f32 	%f519, %f517, %f515, 0f4081E0CF;
	fma.rn.f32 	%f520, %f515, %f514, 0f00000000;
	add.s32 	%r333, %r332, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r344, %r343, 1;
	fma.rn.f32 	%f587, %f585, %f584, 0fC0A55DF6;
	fma.rn.f32 	%f588, %f586, %f584, 0f4081E0CF;
	fma.rn.f32 	%f589, %f584, %f583, 0f00000000;
	add.s32 	%r351, %r350, 1;
	fma.rn.f32 	%f621, %f619, %f618, 0fC0A55DF6;
	fma.rn.f32 	%f622, %f620, %f618, 0f4081E0CF;
	fma.rn.f32 	%f623, %f618, %f617, 0f00000000;
	add.s32 	%r362, %r361, 1;
	fma.rn.f32 	%f656, %f654, %f653, 0fC0A55DF6;
	fma.rn.f32 	%f657, %f655, %f653, 0f4081E0CF;
	fma.rn.f32 	%f658, %f653, %f652, 0f00000000;
	add.s32 	%r369, %r368, 1;
	fma.rn.f32 	%f690, %f688, %f687, 0fC0A55DF6;
	fma.rn.f32 	%f691, %f689, %f687, 0f4081E0CF;
	fma.rn.f32 	%f692, %f687, %f686, 0f00000000;
	add.s32 	%r380, %r379, 1;
	fma.rn.f32 	%f725, %f723, %f722, 0fC0A55DF6;
	fma.rn.f32 	%f726, %f724, %f722, 0f4081E0CF;
	fma.rn.f32 	%f727, %f722, %f721, 0f00000000;
	add.s32 	%r387, %r386, 1;
	fma.rn.f32 	%f759, %f757, %f756, 0fC0A55DF6;
	fma.rn.f32 	%f760, %f758, %f756, 0f4081E0CF;
	fma.rn.f32 	%f761, %f756, %f755, 0f00000000;
	fma.rn.f32 	%f792, %f790, %f786, 0fC09DE9E6;
	fma.rn.f32 	%f793, %f789, %f791, 0f00000000;
	and.b32  	%r411, %r410, 1;
	fma.rn.f32 	%f826, %f824, %f820, 0fC09DE9E6;
	fma.rn.f32 	%f827, %f823, %f825, 0f00000000;
	and.b32  	%r421, %r420, 1;
	fma.rn.f32 	%f879, %f877, %f873, 0fC09DE9E6;
	fma.rn.f32 	%f880, %f876, %f878, 0f00000000;
	and.b32  	%r444, %r443, 1;
	fma.rn.f32 	%f931, %f929, %f925, 0fC09DE9E6;
	fma.rn.f32 	%f932, %f928, %f930, 0f00000000;
	and.b32  	%r476, %r475, 1;
	add.f32 	%f969, %f1304, %f1304;
	mov.b32 	%r492, %f969;
	and.b32  	%r493, %r492, -2147483648;
	or.b32  	%r494, %r493, 1056964608;
	mov.b32 	%f970, %r494;
	add.f32 	%f971, %f969, %f970;
	cvt.rzi.f32.f32 	%f972, %f971;
	abs.f32 	%f973, %f969;
	setp.gt.f32 	%p178, %f973, 0f4B000000;
	selp.f32 	%f974, %f969, %f972, %p178;
	cvt.rzi.f32.f32 	%f975, %f969;
	setp.lt.f32 	%p179, %f973, 0f3F000000;
	selp.f32 	%f976, %f975, %f974, %p179;
	cvt.rzi.s32.f32 	%r495, %f976;
	fma.rn.f32 	%f977, %f976, 0fBF000000, %f1304;
	mul.f32 	%f978, %f977, %f977;
	fma.rn.f32 	%f979, %f978, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f980, %f978, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f981, %f979, %f978, 0fC0A55DF6;
	fma.rn.f32 	%f982, %f980, %f978, 0f4081E0CF;
	fma.rn.f32 	%f983, %f978, %f977, 0f00000000;
	shl.b32 	%r500, %r24, 4;
	sub.s32 	%r501, %r37, %r500;
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r221;
	.param .b64 param1;
	st.param.b64 	[param1+0], %rd35;
	.param .b64 param2;
	st.param.b64 	[param2+0], %rd36;
	.param .b64 retval0;
	call.uni (retval0), 
	julia_power_by_squaring_17554, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b64 	%rd41, [retval0+0];
	} // callseq 3
	cvt.rn.f32.s32 	%f198, %r501;
	cvt.rn.f32.s64 	%f999, %rd41;
	div.approx.f32 	%f199, %f198, %f999;
	abs.f32 	%f1284, %f199;
	setp.lt.f32 	%p185, %f1284, 0f40000000;
	@%p185 bra 	$L__BB0_74;
// %bb.63:
	setp.gtu.f32 	%p186, %f1284, 0f4B800000;
	@%p186 bra 	$L__BB0_70;
	bra.uni 	$L__BB0_64;
$L__BB0_70:
	mov.b32 	%r39, %f1284;
	and.b32  	%r502, %r39, 8388607;
	or.b32  	%r16278, %r502, 1065353216;
	mov.b32 	%f1283, %r16278;
	add.s32 	%r503, %r39, -1073741824;
	and.b32  	%r16279, %r503, -8388608;
	setp.eq.s32 	%p192, %r16279, 0;
	@%p192 bra 	$L__BB0_73;
// %bb.71:                              // %__nv_fmaf_rn.exit4.i.i.i1619.preheader
	mov.f32 	%f1009, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1008,%f1009;
	// end inline asm
$L__BB0_72:                             // %__nv_fmaf_rn.exit4.i.i.i1619
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r504, %r16279, 192937984;
	add.s32 	%r505, %r16278, %r504;
	mov.b32 	%f1010, %r505;
	mul.f32 	%f1011, %f1008, %f1010;
	sub.f32 	%f1012, %f1010, %f1011;
	fma.rn.f32 	%f1013, %f1012, %f1008, %f1011;
	sub.f32 	%f1014, %f1010, %f1013;
	fma.rz.f32 	%f1015, %f1014, %f1008, %f1013;
	cvt.rzi.f32.f32 	%f1016, %f1015;
	sub.f32 	%f1283, %f1010, %f1016;
	sub.s32 	%r16279, %r16279, %r504;
	mov.b32 	%r16278, %f1283;
	setp.ne.s32 	%p193, %r16279, 0;
	setp.ne.s32 	%p194, %r16278, 0;
	and.pred  	%p195, %p193, %p194;
	@%p195 bra 	$L__BB0_72;
$L__BB0_73:                             // %__internal_fmodf_slowpath_mod.exit.i.i1621
	setp.gt.u32 	%p196, %r39, 2139095039;
	selp.f32 	%f1017, 0f7FFFFFFF, 0f4B800000, %p196;
	mul.f32 	%f1018, %f1283, 0f34000000;
	mul.f32 	%f1284, %f1017, %f1018;
	bra.uni 	$L__BB0_74;
$L__BB0_64:                             // %__nv_fast_fdividef.exit.i.i.i1598
	div.approx.f32 	%f1001, %f1284, %f221;
	cvt.rzi.f32.f32 	%f1282, %f1001;
	fma.rn.f32 	%f92, %f1282, 0fC0000000, %f1284;
	mov.b32 	%r38, %f92;
	setp.lt.u32 	%p187, %r38, 1073741824;
	@%p187 bra 	$L__BB0_69;
// %bb.65:
	setp.lt.u32 	%p188, %r38, -2147483647;
	@%p188 bra 	$L__BB0_67;
// %bb.66:
	add.f32 	%f1006, %f1282, 0fBF800000;
	setp.lt.f32 	%p191, %f92, 0fC0000000;
	add.f32 	%f1007, %f1006, 0fBF800000;
	selp.f32 	%f1282, %f1007, %f1006, %p191;
	bra.uni 	$L__BB0_69;
$L__BB0_67:
	add.f32 	%f1282, %f1282, 0f3F800000;
	setp.ltu.f32 	%p189, %f92, 0f40800000;
	@%p189 bra 	$L__BB0_69;
// %bb.68:                              // %__nv_fmaf_rn.exit.i.i.i1602
	add.f32 	%f1002, %f1282, 0f3F800000;
	fma.rn.f32 	%f1004, %f221, 0fC0400000, %f92;
	setp.ge.f32 	%p190, %f1004, 0f00000000;
	add.f32 	%f1005, %f1002, 0f3F800000;
	selp.f32 	%f1282, %f1005, %f1002, %p190;
$L__BB0_69:                             // %__internal_fmodf_fastpath_quot.exit.i.i1605
	fma.rn.f32 	%f1284, %f1282, 0fC0000000, %f1284;
$L__BB0_74:                             // %__internal_fmodf_kernel.exit.i1624
	fma.rn.f32 	%f245, %f243, %f239, 0fC09DE9E6;
	fma.rn.f32 	%f246, %f242, %f244, 0f00000000;
	and.b32  	%r255, %r254, 1;
	fma.rn.f32 	%f279, %f277, %f273, 0fC09DE9E6;
	fma.rn.f32 	%f280, %f276, %f278, 0f00000000;
	and.b32  	%r262, %r261, 1;
	fma.rn.f32 	%f314, %f312, %f308, 0fC09DE9E6;
	fma.rn.f32 	%f315, %f311, %f313, 0f00000000;
	and.b32  	%r273, %r272, 1;
	fma.rn.f32 	%f348, %f346, %f342, 0fC09DE9E6;
	fma.rn.f32 	%f349, %f345, %f347, 0f00000000;
	and.b32  	%r280, %r279, 1;
	fma.rn.f32 	%f383, %f381, %f377, 0fC09DE9E6;
	fma.rn.f32 	%f384, %f380, %f382, 0f00000000;
	and.b32  	%r291, %r290, 1;
	fma.rn.f32 	%f417, %f415, %f411, 0fC09DE9E6;
	fma.rn.f32 	%f418, %f414, %f416, 0f00000000;
	and.b32  	%r298, %r297, 1;
	fma.rn.f32 	%f452, %f450, %f446, 0fC09DE9E6;
	fma.rn.f32 	%f453, %f449, %f451, 0f00000000;
	and.b32  	%r309, %r308, 1;
	fma.rn.f32 	%f486, %f484, %f480, 0fC09DE9E6;
	fma.rn.f32 	%f487, %f483, %f485, 0f00000000;
	and.b32  	%r316, %r315, 1;
	fma.rn.f32 	%f521, %f519, %f515, 0fC09DE9E6;
	fma.rn.f32 	%f522, %f518, %f520, 0f00000000;
	and.b32  	%r327, %r326, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r334, %r333, 1;
	fma.rn.f32 	%f590, %f588, %f584, 0fC09DE9E6;
	fma.rn.f32 	%f591, %f587, %f589, 0f00000000;
	and.b32  	%r345, %r344, 1;
	fma.rn.f32 	%f624, %f622, %f618, 0fC09DE9E6;
	fma.rn.f32 	%f625, %f621, %f623, 0f00000000;
	and.b32  	%r352, %r351, 1;
	fma.rn.f32 	%f659, %f657, %f653, 0fC09DE9E6;
	fma.rn.f32 	%f660, %f656, %f658, 0f00000000;
	and.b32  	%r363, %r362, 1;
	fma.rn.f32 	%f693, %f691, %f687, 0fC09DE9E6;
	fma.rn.f32 	%f694, %f690, %f692, 0f00000000;
	and.b32  	%r370, %r369, 1;
	fma.rn.f32 	%f728, %f726, %f722, 0fC09DE9E6;
	fma.rn.f32 	%f729, %f725, %f727, 0f00000000;
	and.b32  	%r381, %r380, 1;
	fma.rn.f32 	%f762, %f760, %f756, 0fC09DE9E6;
	fma.rn.f32 	%f763, %f759, %f761, 0f00000000;
	and.b32  	%r388, %r387, 1;
	fma.rn.f32 	%f794, %f792, %f786, 0f3F800000;
	fma.rn.f32 	%f795, %f785, 0f40490FDB, %f793;
	setp.eq.b32 	%p113, %r411, 1;
	fma.rn.f32 	%f828, %f826, %f820, 0f3F800000;
	fma.rn.f32 	%f829, %f819, 0f40490FDB, %f827;
	setp.eq.b32 	%p120, %r421, 1;
	fma.rn.f32 	%f881, %f879, %f873, 0f3F800000;
	fma.rn.f32 	%f882, %f872, 0f40490FDB, %f880;
	setp.eq.b32 	%p140, %r444, 1;
	fma.rn.f32 	%f933, %f931, %f925, 0f3F800000;
	fma.rn.f32 	%f934, %f924, 0f40490FDB, %f932;
	setp.eq.b32 	%p160, %r476, 1;
	fma.rn.f32 	%f984, %f982, %f978, 0fC09DE9E6;
	fma.rn.f32 	%f985, %f981, %f983, 0f00000000;
	and.b32  	%r496, %r495, 1;
	abs.f32 	%f1019, %f1284;
	setp.gtu.f32 	%p197, %f1019, 0f7F800000;
	@%p197 bra 	$L__BB0_76;
// %bb.75:
	mov.b32 	%r506, %f199;
	and.b32  	%r507, %r506, -2147483648;
	mov.b32 	%r508, %f1284;
	or.b32  	%r509, %r507, %r508;
	mov.b32 	%f1284, %r509;
$L__BB0_76:                             // %__nv_fmodf.exit1625
	fma.rn.f32 	%f247, %f245, %f239, 0f3F800000;
	fma.rn.f32 	%f248, %f238, 0f40490FDB, %f246;
	setp.eq.b32 	%p18, %r255, 1;
	fma.rn.f32 	%f281, %f279, %f273, 0f3F800000;
	fma.rn.f32 	%f282, %f272, 0f40490FDB, %f280;
	setp.eq.b32 	%p24, %r262, 1;
	fma.rn.f32 	%f316, %f314, %f308, 0f3F800000;
	fma.rn.f32 	%f317, %f307, 0f40490FDB, %f315;
	setp.eq.b32 	%p30, %r273, 1;
	fma.rn.f32 	%f350, %f348, %f342, 0f3F800000;
	fma.rn.f32 	%f351, %f341, 0f40490FDB, %f349;
	setp.eq.b32 	%p36, %r280, 1;
	fma.rn.f32 	%f385, %f383, %f377, 0f3F800000;
	fma.rn.f32 	%f386, %f376, 0f40490FDB, %f384;
	setp.eq.b32 	%p42, %r291, 1;
	fma.rn.f32 	%f419, %f417, %f411, 0f3F800000;
	fma.rn.f32 	%f420, %f410, 0f40490FDB, %f418;
	setp.eq.b32 	%p48, %r298, 1;
	fma.rn.f32 	%f454, %f452, %f446, 0f3F800000;
	fma.rn.f32 	%f455, %f445, 0f40490FDB, %f453;
	setp.eq.b32 	%p54, %r309, 1;
	fma.rn.f32 	%f488, %f486, %f480, 0f3F800000;
	fma.rn.f32 	%f489, %f479, 0f40490FDB, %f487;
	setp.eq.b32 	%p60, %r316, 1;
	fma.rn.f32 	%f523, %f521, %f515, 0f3F800000;
	fma.rn.f32 	%f524, %f514, 0f40490FDB, %f522;
	setp.eq.b32 	%p66, %r327, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p72, %r334, 1;
	fma.rn.f32 	%f592, %f590, %f584, 0f3F800000;
	fma.rn.f32 	%f593, %f583, 0f40490FDB, %f591;
	setp.eq.b32 	%p78, %r345, 1;
	fma.rn.f32 	%f626, %f624, %f618, 0f3F800000;
	fma.rn.f32 	%f627, %f617, 0f40490FDB, %f625;
	setp.eq.b32 	%p84, %r352, 1;
	fma.rn.f32 	%f661, %f659, %f653, 0f3F800000;
	fma.rn.f32 	%f662, %f652, 0f40490FDB, %f660;
	setp.eq.b32 	%p90, %r363, 1;
	fma.rn.f32 	%f695, %f693, %f687, 0f3F800000;
	fma.rn.f32 	%f696, %f686, 0f40490FDB, %f694;
	setp.eq.b32 	%p96, %r370, 1;
	fma.rn.f32 	%f730, %f728, %f722, 0f3F800000;
	fma.rn.f32 	%f731, %f721, 0f40490FDB, %f729;
	setp.eq.b32 	%p102, %r381, 1;
	fma.rn.f32 	%f764, %f762, %f756, 0f3F800000;
	fma.rn.f32 	%f765, %f755, 0f40490FDB, %f763;
	setp.eq.b32 	%p108, %r388, 1;
	selp.f32 	%f796, %f794, %f795, %p113;
	and.b32  	%r412, %r410, 2;
	selp.f32 	%f830, %f828, %f829, %p120;
	and.b32  	%r422, %r420, 2;
	selp.f32 	%f883, %f881, %f882, %p140;
	and.b32  	%r445, %r443, 2;
	selp.f32 	%f935, %f933, %f934, %p160;
	and.b32  	%r477, %r475, 2;
	fma.rn.f32 	%f986, %f984, %f978, 0f3F800000;
	fma.rn.f32 	%f987, %f977, 0f40490FDB, %f985;
	setp.eq.b32 	%p180, %r496, 1;
	add.f32 	%f1020, %f1284, %f1284;
	mov.b32 	%r516, %f1020;
	and.b32  	%r517, %r516, -2147483648;
	or.b32  	%r518, %r517, 1056964608;
	mov.b32 	%f1021, %r518;
	add.f32 	%f1022, %f1020, %f1021;
	cvt.rzi.f32.f32 	%f1023, %f1022;
	abs.f32 	%f1024, %f1020;
	setp.gt.f32 	%p198, %f1024, 0f4B000000;
	selp.f32 	%f1025, %f1020, %f1023, %p198;
	cvt.rzi.f32.f32 	%f1026, %f1020;
	setp.lt.f32 	%p199, %f1024, 0f3F000000;
	selp.f32 	%f1027, %f1026, %f1025, %p199;
	cvt.rzi.s32.f32 	%r519, %f1027;
	fma.rn.f32 	%f1028, %f1027, 0fBF000000, %f1284;
	mul.f32 	%f1029, %f1028, %f1028;
	fma.rn.f32 	%f1030, %f1029, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1031, %f1029, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1032, %f1030, %f1029, 0fC0A55DF6;
	fma.rn.f32 	%f1033, %f1031, %f1029, 0f4081E0CF;
	fma.rn.f32 	%f1034, %f1029, %f1028, 0f00000000;
	fma.rn.f32 	%f1035, %f1033, %f1029, 0fC09DE9E6;
	fma.rn.f32 	%f1036, %f1032, %f1034, 0f00000000;
	fma.rn.f32 	%f1037, %f1035, %f1029, 0f3F800000;
	fma.rn.f32 	%f1038, %f1028, 0f40490FDB, %f1036;
	and.b32  	%r520, %r519, 1;
	setp.eq.b32 	%p200, %r520, 1;
	div.approx.f32 	%f106, %f88, %f843;
	abs.f32 	%f1308, %f106;
	setp.lt.f32 	%p205, %f1308, 0f40000000;
	@%p205 bra 	$L__BB0_152;
// %bb.77:
	setp.gtu.f32 	%p206, %f1308, 0f4B800000;
	@%p206 bra 	$L__BB0_148;
	bra.uni 	$L__BB0_78;
$L__BB0_148:
	mov.b32 	%r163, %f1308;
	and.b32  	%r524, %r163, 8388607;
	or.b32  	%r16315, %r524, 1065353216;
	mov.b32 	%f1307, %r16315;
	add.s32 	%r525, %r163, -1073741824;
	and.b32  	%r16316, %r525, -8388608;
	setp.eq.s32 	%p212, %r16316, 0;
	@%p212 bra 	$L__BB0_151;
// %bb.149:                             // %__nv_fmaf_rn.exit4.i.i.i1805.preheader
	mov.f32 	%f1062, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1061,%f1062;
	// end inline asm
$L__BB0_150:                            // %__nv_fmaf_rn.exit4.i.i.i1805
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r526, %r16316, 192937984;
	add.s32 	%r527, %r16315, %r526;
	mov.b32 	%f1063, %r527;
	mul.f32 	%f1064, %f1061, %f1063;
	sub.f32 	%f1065, %f1063, %f1064;
	fma.rn.f32 	%f1066, %f1065, %f1061, %f1064;
	sub.f32 	%f1067, %f1063, %f1066;
	fma.rz.f32 	%f1068, %f1067, %f1061, %f1066;
	cvt.rzi.f32.f32 	%f1069, %f1068;
	sub.f32 	%f1307, %f1063, %f1069;
	sub.s32 	%r16316, %r16316, %r526;
	mov.b32 	%r16315, %f1307;
	setp.ne.s32 	%p213, %r16316, 0;
	setp.ne.s32 	%p214, %r16315, 0;
	and.pred  	%p215, %p213, %p214;
	@%p215 bra 	$L__BB0_150;
$L__BB0_151:                            // %__internal_fmodf_slowpath_mod.exit.i.i1807
	setp.gt.u32 	%p216, %r163, 2139095039;
	selp.f32 	%f1070, 0f7FFFFFFF, 0f4B800000, %p216;
	mul.f32 	%f1071, %f1307, 0f34000000;
	mul.f32 	%f1308, %f1070, %f1071;
	bra.uni 	$L__BB0_152;
$L__BB0_78:                             // %__nv_fast_fdividef.exit.i.i.i1784
	div.approx.f32 	%f1054, %f1308, %f221;
	cvt.rzi.f32.f32 	%f1306, %f1054;
	fma.rn.f32 	%f202, %f1306, 0fC0000000, %f1308;
	mov.b32 	%r162, %f202;
	setp.lt.u32 	%p207, %r162, 1073741824;
	@%p207 bra 	$L__BB0_147;
// %bb.79:
	setp.lt.u32 	%p208, %r162, -2147483647;
	@%p208 bra 	$L__BB0_145;
// %bb.80:
	add.f32 	%f1059, %f1306, 0fBF800000;
	setp.lt.f32 	%p211, %f202, 0fC0000000;
	add.f32 	%f1060, %f1059, 0fBF800000;
	selp.f32 	%f1306, %f1060, %f1059, %p211;
	bra.uni 	$L__BB0_147;
$L__BB0_145:
	add.f32 	%f1306, %f1306, 0f3F800000;
	setp.ltu.f32 	%p209, %f202, 0f40800000;
	@%p209 bra 	$L__BB0_147;
// %bb.146:                             // %__nv_fmaf_rn.exit.i.i.i1788
	add.f32 	%f1055, %f1306, 0f3F800000;
	fma.rn.f32 	%f1057, %f221, 0fC0400000, %f202;
	setp.ge.f32 	%p210, %f1057, 0f00000000;
	add.f32 	%f1058, %f1055, 0f3F800000;
	selp.f32 	%f1306, %f1058, %f1055, %p210;
$L__BB0_147:                            // %__internal_fmodf_fastpath_quot.exit.i.i1791
	fma.rn.f32 	%f1308, %f1306, 0fC0000000, %f1308;
$L__BB0_152:                            // %__internal_fmodf_kernel.exit.i1810
	selp.f32 	%f249, %f247, %f248, %p18;
	and.b32  	%r256, %r254, 2;
	mov.f32 	%f250, 0f00000000;
	selp.f32 	%f283, %f281, %f282, %p24;
	and.b32  	%r263, %r261, 2;
	selp.f32 	%f318, %f316, %f317, %p30;
	and.b32  	%r274, %r272, 2;
	selp.f32 	%f352, %f350, %f351, %p36;
	and.b32  	%r281, %r279, 2;
	selp.f32 	%f387, %f385, %f386, %p42;
	and.b32  	%r292, %r290, 2;
	selp.f32 	%f421, %f419, %f420, %p48;
	and.b32  	%r299, %r297, 2;
	selp.f32 	%f456, %f454, %f455, %p54;
	and.b32  	%r310, %r308, 2;
	selp.f32 	%f490, %f488, %f489, %p60;
	and.b32  	%r317, %r315, 2;
	selp.f32 	%f525, %f523, %f524, %p66;
	and.b32  	%r328, %r326, 2;
	selp.f32 	%f559, %f557, %f558, %p72;
	and.b32  	%r335, %r333, 2;
	selp.f32 	%f594, %f592, %f593, %p78;
	and.b32  	%r346, %r344, 2;
	selp.f32 	%f628, %f626, %f627, %p84;
	and.b32  	%r353, %r351, 2;
	selp.f32 	%f663, %f661, %f662, %p90;
	and.b32  	%r364, %r362, 2;
	selp.f32 	%f697, %f695, %f696, %p96;
	and.b32  	%r371, %r369, 2;
	selp.f32 	%f732, %f730, %f731, %p102;
	and.b32  	%r382, %r380, 2;
	selp.f32 	%f766, %f764, %f765, %p108;
	and.b32  	%r389, %r387, 2;
	setp.eq.s32 	%p114, %r412, 0;
	neg.f32 	%f798, %f796;
	add.s32 	%r413, %r410, 1;
	cvt.rzi.f32.f32 	%f803, %f776;
	setp.eq.s32 	%p121, %r422, 0;
	neg.f32 	%f832, %f830;
	add.s32 	%r423, %r420, 1;
	cvt.rzi.f32.f32 	%f836, %f810;
	setp.eq.s32 	%p141, %r445, 0;
	neg.f32 	%f885, %f883;
	add.s32 	%r446, %r443, 1;
	cvt.rzi.f32.f32 	%f890, %f1300;
	setp.eq.s32 	%p161, %r477, 0;
	neg.f32 	%f937, %f935;
	add.s32 	%r478, %r475, 1;
	cvt.rzi.f32.f32 	%f942, %f1280;
	selp.f32 	%f988, %f986, %f987, %p180;
	and.b32  	%r497, %r495, 2;
	selp.f32 	%f1039, %f1037, %f1038, %p200;
	and.b32  	%r521, %r519, 2;
	abs.f32 	%f1072, %f1308;
	setp.gtu.f32 	%p217, %f1072, 0f7F800000;
	@%p217 bra 	$L__BB0_154;
// %bb.153:
	mov.b32 	%r528, %f106;
	and.b32  	%r529, %r528, -2147483648;
	mov.b32 	%r530, %f1308;
	or.b32  	%r531, %r529, %r530;
	mov.b32 	%f1308, %r531;
$L__BB0_154:                            // %__nv_fmodf.exit1811
	setp.eq.s32 	%p19, %r256, 0;
	sub.f32 	%f251, %f250, %f249;
	setp.eq.s32 	%p25, %r263, 0;
	sub.f32 	%f285, %f250, %f283;
	setp.eq.s32 	%p31, %r274, 0;
	sub.f32 	%f320, %f250, %f318;
	setp.eq.s32 	%p37, %r281, 0;
	sub.f32 	%f354, %f250, %f352;
	setp.eq.s32 	%p43, %r292, 0;
	sub.f32 	%f389, %f250, %f387;
	setp.eq.s32 	%p49, %r299, 0;
	sub.f32 	%f423, %f250, %f421;
	setp.eq.s32 	%p55, %r310, 0;
	sub.f32 	%f458, %f250, %f456;
	setp.eq.s32 	%p61, %r317, 0;
	sub.f32 	%f492, %f250, %f490;
	setp.eq.s32 	%p67, %r328, 0;
	sub.f32 	%f527, %f250, %f525;
	setp.eq.s32 	%p73, %r335, 0;
	sub.f32 	%f561, %f250, %f559;
	setp.eq.s32 	%p79, %r346, 0;
	sub.f32 	%f596, %f250, %f594;
	setp.eq.s32 	%p85, %r353, 0;
	sub.f32 	%f630, %f250, %f628;
	setp.eq.s32 	%p91, %r364, 0;
	sub.f32 	%f665, %f250, %f663;
	setp.eq.s32 	%p97, %r371, 0;
	sub.f32 	%f699, %f250, %f697;
	setp.eq.s32 	%p103, %r382, 0;
	sub.f32 	%f734, %f250, %f732;
	setp.eq.s32 	%p109, %r389, 0;
	sub.f32 	%f768, %f250, %f766;
	selp.f32 	%f797, %f795, %f794, %p113;
	selp.f32 	%f799, %f796, %f798, %p114;
	and.b32  	%r414, %r413, 2;
	setp.eq.f32 	%p116, %f803, %f776;
	mul.f32 	%f804, %f776, 0f00000000;
	selp.f32 	%f831, %f829, %f828, %p120;
	selp.f32 	%f833, %f830, %f832, %p121;
	and.b32  	%r424, %r423, 2;
	setp.eq.f32 	%p123, %f836, %f810;
	mul.f32 	%f837, %f810, 0f00000000;
	selp.f32 	%f884, %f882, %f881, %p140;
	selp.f32 	%f886, %f883, %f885, %p141;
	and.b32  	%r447, %r446, 2;
	setp.eq.f32 	%p143, %f890, %f1300;
	mul.f32 	%f891, %f1300, 0f00000000;
	selp.f32 	%f936, %f934, %f933, %p160;
	selp.f32 	%f938, %f935, %f937, %p161;
	and.b32  	%r479, %r478, 2;
	setp.eq.f32 	%p163, %f942, %f1280;
	mul.f32 	%f943, %f1280, 0f00000000;
	setp.eq.s32 	%p181, %r497, 0;
	neg.f32 	%f990, %f988;
	add.s32 	%r498, %r495, 1;
	cvt.rzi.f32.f32 	%f995, %f1304;
	setp.eq.s32 	%p201, %r521, 0;
	neg.f32 	%f1041, %f1039;
	add.s32 	%r522, %r519, 1;
	cvt.rzi.f32.f32 	%f1046, %f1284;
	add.f32 	%f1073, %f1308, %f1308;
	mov.b32 	%r532, %f1073;
	and.b32  	%r533, %r532, -2147483648;
	or.b32  	%r534, %r533, 1056964608;
	mov.b32 	%f1074, %r534;
	add.f32 	%f1075, %f1073, %f1074;
	cvt.rzi.f32.f32 	%f1076, %f1075;
	abs.f32 	%f1077, %f1073;
	setp.gt.f32 	%p218, %f1077, 0f4B000000;
	selp.f32 	%f1078, %f1073, %f1076, %p218;
	cvt.rzi.f32.f32 	%f1079, %f1073;
	setp.lt.f32 	%p219, %f1077, 0f3F000000;
	selp.f32 	%f1080, %f1079, %f1078, %p219;
	cvt.rzi.s32.f32 	%r535, %f1080;
	fma.rn.f32 	%f1081, %f1080, 0fBF000000, %f1308;
	mul.f32 	%f1082, %f1081, %f1081;
	fma.rn.f32 	%f1083, %f1082, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1084, %f1082, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1085, %f1083, %f1082, 0fC0A55DF6;
	fma.rn.f32 	%f1086, %f1084, %f1082, 0f4081E0CF;
	fma.rn.f32 	%f1087, %f1082, %f1081, 0f00000000;
	fma.rn.f32 	%f1088, %f1086, %f1082, 0fC09DE9E6;
	fma.rn.f32 	%f1089, %f1085, %f1087, 0f00000000;
	fma.rn.f32 	%f1090, %f1088, %f1082, 0f3F800000;
	fma.rn.f32 	%f1091, %f1081, 0f40490FDB, %f1089;
	and.b32  	%r536, %r535, 1;
	setp.eq.b32 	%p220, %r536, 1;
	selp.f32 	%f1092, %f1090, %f1091, %p220;
	selp.f32 	%f1093, %f1091, %f1090, %p220;
	and.b32  	%r537, %r535, 2;
	setp.eq.s32 	%p221, %r537, 0;
	neg.f32 	%f1094, %f1092;
	selp.f32 	%f1095, %f1092, %f1094, %p221;
	add.s32 	%r538, %r535, 1;
	and.b32  	%r539, %r538, 2;
	cvt.rzi.f32.f32 	%f1099, %f1308;
	setp.eq.f32 	%p223, %f1099, %f1308;
	mul.f32 	%f1100, %f1308, 0f00000000;
	div.approx.f32 	%f218, %f198, %f843;
	abs.f32 	%f1288, %f218;
	setp.lt.f32 	%p225, %f1288, 0f40000000;
	@%p225 bra 	$L__BB0_92;
// %bb.81:
	setp.gtu.f32 	%p226, %f1288, 0f4B800000;
	@%p226 bra 	$L__BB0_88;
	bra.uni 	$L__BB0_82;
$L__BB0_88:
	mov.b32 	%r49, %f1288;
	and.b32  	%r540, %r49, 8388607;
	or.b32  	%r16280, %r540, 1065353216;
	mov.b32 	%f1287, %r16280;
	add.s32 	%r541, %r49, -1073741824;
	and.b32  	%r16281, %r541, -8388608;
	setp.eq.s32 	%p232, %r16281, 0;
	@%p232 bra 	$L__BB0_91;
// %bb.89:                              // %__nv_fmaf_rn.exit4.i.i.i1650.preheader
	mov.f32 	%f1113, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1112,%f1113;
	// end inline asm
$L__BB0_90:                             // %__nv_fmaf_rn.exit4.i.i.i1650
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r542, %r16281, 192937984;
	add.s32 	%r543, %r16280, %r542;
	mov.b32 	%f1114, %r543;
	mul.f32 	%f1115, %f1112, %f1114;
	sub.f32 	%f1116, %f1114, %f1115;
	fma.rn.f32 	%f1117, %f1116, %f1112, %f1115;
	sub.f32 	%f1118, %f1114, %f1117;
	fma.rz.f32 	%f1119, %f1118, %f1112, %f1117;
	cvt.rzi.f32.f32 	%f1120, %f1119;
	sub.f32 	%f1287, %f1114, %f1120;
	sub.s32 	%r16281, %r16281, %r542;
	mov.b32 	%r16280, %f1287;
	setp.ne.s32 	%p233, %r16281, 0;
	setp.ne.s32 	%p234, %r16280, 0;
	and.pred  	%p235, %p233, %p234;
	@%p235 bra 	$L__BB0_90;
$L__BB0_91:                             // %__internal_fmodf_slowpath_mod.exit.i.i1652
	setp.gt.u32 	%p236, %r49, 2139095039;
	selp.f32 	%f1121, 0f7FFFFFFF, 0f4B800000, %p236;
	mul.f32 	%f1122, %f1287, 0f34000000;
	mul.f32 	%f1288, %f1121, %f1122;
	bra.uni 	$L__BB0_92;
$L__BB0_82:                             // %__nv_fast_fdividef.exit.i.i.i1629
	div.approx.f32 	%f1105, %f1288, %f221;
	cvt.rzi.f32.f32 	%f1286, %f1105;
	fma.rn.f32 	%f109, %f1286, 0fC0000000, %f1288;
	mov.b32 	%r48, %f109;
	setp.lt.u32 	%p227, %r48, 1073741824;
	@%p227 bra 	$L__BB0_87;
// %bb.83:
	setp.lt.u32 	%p228, %r48, -2147483647;
	@%p228 bra 	$L__BB0_85;
// %bb.84:
	add.f32 	%f1110, %f1286, 0fBF800000;
	setp.lt.f32 	%p231, %f109, 0fC0000000;
	add.f32 	%f1111, %f1110, 0fBF800000;
	selp.f32 	%f1286, %f1111, %f1110, %p231;
	bra.uni 	$L__BB0_87;
$L__BB0_85:
	add.f32 	%f1286, %f1286, 0f3F800000;
	setp.ltu.f32 	%p229, %f109, 0f40800000;
	@%p229 bra 	$L__BB0_87;
// %bb.86:                              // %__nv_fmaf_rn.exit.i.i.i1633
	add.f32 	%f1106, %f1286, 0f3F800000;
	fma.rn.f32 	%f1108, %f221, 0fC0400000, %f109;
	setp.ge.f32 	%p230, %f1108, 0f00000000;
	add.f32 	%f1109, %f1106, 0f3F800000;
	selp.f32 	%f1286, %f1109, %f1106, %p230;
$L__BB0_87:                             // %__internal_fmodf_fastpath_quot.exit.i.i1636
	fma.rn.f32 	%f1288, %f1286, 0fC0000000, %f1288;
$L__BB0_92:                             // %__internal_fmodf_kernel.exit.i1655
	selp.f32 	%f252, %f249, %f251, %p19;
	selp.f32 	%f286, %f283, %f285, %p25;
	selp.f32 	%f321, %f318, %f320, %p31;
	selp.f32 	%f355, %f352, %f354, %p37;
	selp.f32 	%f390, %f387, %f389, %p43;
	selp.f32 	%f424, %f421, %f423, %p49;
	selp.f32 	%f459, %f456, %f458, %p55;
	selp.f32 	%f493, %f490, %f492, %p61;
	selp.f32 	%f528, %f525, %f527, %p67;
	selp.f32 	%f562, %f559, %f561, %p73;
	selp.f32 	%f597, %f594, %f596, %p79;
	selp.f32 	%f631, %f628, %f630, %p85;
	selp.f32 	%f666, %f663, %f665, %p91;
	selp.f32 	%f700, %f697, %f699, %p97;
	selp.f32 	%f735, %f732, %f734, %p103;
	selp.f32 	%f769, %f766, %f768, %p109;
	setp.eq.s32 	%p115, %r414, 0;
	sub.f32 	%f801, %f250, %f797;
	selp.f32 	%f805, %f804, %f799, %p116;
	abs.f32 	%f806, %f776;
	setp.eq.s32 	%p122, %r424, 0;
	sub.f32 	%f834, %f250, %f831;
	selp.f32 	%f838, %f837, %f833, %p123;
	abs.f32 	%f839, %f810;
	setp.eq.s32 	%p142, %r447, 0;
	sub.f32 	%f888, %f250, %f884;
	selp.f32 	%f177, %f891, %f886, %p143;
	abs.f32 	%f892, %f1300;
	setp.eq.s32 	%p162, %r479, 0;
	sub.f32 	%f940, %f250, %f936;
	selp.f32 	%f944, %f943, %f938, %p163;
	abs.f32 	%f945, %f1280;
	selp.f32 	%f989, %f987, %f986, %p180;
	selp.f32 	%f991, %f988, %f990, %p181;
	and.b32  	%r499, %r498, 2;
	setp.eq.f32 	%p183, %f995, %f1304;
	mul.f32 	%f996, %f1304, 0f00000000;
	selp.f32 	%f1040, %f1038, %f1037, %p200;
	selp.f32 	%f1042, %f1039, %f1041, %p201;
	and.b32  	%r523, %r522, 2;
	setp.eq.f32 	%p203, %f1046, %f1284;
	mul.f32 	%f1047, %f1284, 0f00000000;
	setp.eq.s32 	%p222, %r539, 0;
	sub.f32 	%f1097, %f250, %f1093;
	selp.f32 	%f216, %f1100, %f1095, %p223;
	abs.f32 	%f1101, %f1308;
	and.b32  	%r131, %r2, 16;
	abs.f32 	%f1123, %f1288;
	setp.gtu.f32 	%p237, %f1123, 0f7F800000;
	@%p237 bra 	$L__BB0_94;
// %bb.93:
	mov.b32 	%r544, %f218;
	and.b32  	%r545, %r544, -2147483648;
	mov.b32 	%r546, %f1288;
	or.b32  	%r547, %r545, %r546;
	mov.b32 	%f1288, %r547;
$L__BB0_94:                             // %__nv_fmodf.exit1656
	mul.f32 	%f160, %f252, %f252;
	mul.f32 	%f4, %f286, %f286;
	mul.f32 	%f8, %f321, %f321;
	mul.f32 	%f13, %f355, %f355;
	mul.f32 	%f17, %f390, %f390;
	mul.f32 	%f22, %f424, %f424;
	mul.f32 	%f26, %f459, %f459;
	mul.f32 	%f31, %f493, %f493;
	mul.f32 	%f35, %f528, %f528;
	mul.f32 	%f40, %f562, %f562;
	mul.f32 	%f44, %f597, %f597;
	mul.f32 	%f49, %f631, %f631;
	mul.f32 	%f53, %f666, %f666;
	mul.f32 	%f58, %f700, %f700;
	mul.f32 	%f62, %f735, %f735;
	mul.f32 	%f67, %f769, %f769;
	selp.f32 	%f802, %f797, %f801, %p115;
	setp.gt.f32 	%p117, %f806, 0f4B800000;
	add.f32 	%f807, %f805, 0f3F800000;
	selp.f32 	%f835, %f831, %f834, %p122;
	setp.gt.f32 	%p124, %f839, 0f4B800000;
	add.f32 	%f840, %f838, 0f3F800000;
	selp.f32 	%f889, %f884, %f888, %p142;
	setp.gt.f32 	%p144, %f892, 0f4B800000;
	add.f32 	%f893, %f177, 0f3F800000;
	selp.f32 	%f941, %f936, %f940, %p162;
	setp.gt.f32 	%p164, %f945, 0f4B800000;
	add.f32 	%f946, %f944, 0f3F800000;
	setp.eq.s32 	%p182, %r499, 0;
	sub.f32 	%f993, %f250, %f989;
	selp.f32 	%f196, %f996, %f991, %p183;
	abs.f32 	%f997, %f1304;
	setp.eq.s32 	%p202, %r523, 0;
	sub.f32 	%f1044, %f250, %f1040;
	selp.f32 	%f1048, %f1047, %f1042, %p203;
	abs.f32 	%f1049, %f1284;
	selp.f32 	%f1098, %f1093, %f1097, %p222;
	setp.gt.f32 	%p224, %f1101, 0f4B800000;
	add.f32 	%f1102, %f216, 0f3F800000;
	add.f32 	%f1124, %f1288, %f1288;
	mov.b32 	%r560, %f1124;
	and.b32  	%r561, %r560, -2147483648;
	or.b32  	%r562, %r561, 1056964608;
	mov.b32 	%f1125, %r562;
	add.f32 	%f1126, %f1124, %f1125;
	cvt.rzi.f32.f32 	%f1127, %f1126;
	abs.f32 	%f1128, %f1124;
	setp.gt.f32 	%p238, %f1128, 0f4B000000;
	selp.f32 	%f1129, %f1124, %f1127, %p238;
	cvt.rzi.f32.f32 	%f1130, %f1124;
	setp.lt.f32 	%p239, %f1128, 0f3F000000;
	selp.f32 	%f1131, %f1130, %f1129, %p239;
	cvt.rzi.s32.f32 	%r563, %f1131;
	fma.rn.f32 	%f1132, %f1131, 0fBF000000, %f1288;
	mul.f32 	%f1133, %f1132, %f1132;
	fma.rn.f32 	%f1134, %f1133, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1135, %f1133, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1136, %f1134, %f1133, 0fC0A55DF6;
	fma.rn.f32 	%f1137, %f1135, %f1133, 0f4081E0CF;
	fma.rn.f32 	%f1138, %f1133, %f1132, 0f00000000;
	fma.rn.f32 	%f1139, %f1137, %f1133, 0fC09DE9E6;
	fma.rn.f32 	%f1140, %f1136, %f1138, 0f00000000;
	fma.rn.f32 	%f1141, %f1139, %f1133, 0f3F800000;
	fma.rn.f32 	%f1142, %f1132, 0f40490FDB, %f1140;
	and.b32  	%r564, %r563, 1;
	setp.eq.b32 	%p240, %r564, 1;
	selp.f32 	%f1143, %f1141, %f1142, %p240;
	selp.f32 	%f1144, %f1142, %f1141, %p240;
	and.b32  	%r565, %r563, 2;
	setp.eq.s32 	%p241, %r565, 0;
	neg.f32 	%f1145, %f1143;
	selp.f32 	%f1146, %f1143, %f1145, %p241;
	add.s32 	%r566, %r563, 1;
	and.b32  	%r567, %r566, 2;
	setp.eq.s32 	%p242, %r567, 0;
	sub.f32 	%f1148, %f250, %f1144;
	selp.f32 	%f1149, %f1144, %f1148, %p242;
	cvt.rzi.f32.f32 	%f1150, %f1288;
	setp.eq.f32 	%p243, %f1150, %f1288;
	mul.f32 	%f1151, %f1288, 0f00000000;
	selp.f32 	%f1152, %f1151, %f1146, %p243;
	abs.f32 	%f1153, %f1288;
	setp.gt.f32 	%p244, %f1153, 0f4B800000;
	add.f32 	%f1154, %f1152, 0f3F800000;
	mul.lo.s32 	%r568, %r140, 2147483640;
	cvt.u16.u32 	%rs5, %r2;
	shr.u16 	%rs6, %rs5, 8;
	shl.b16 	%rs7, %rs5, 8;
	or.b16  	%rs8, %rs7, %rs6;
	shl.b16 	%rs9, %rs8, 4;
	shr.u16 	%rs10, %rs8, 4;
	and.b16  	%rs11, %rs10, 3840;
	or.b16  	%rs12, %rs11, %rs9;
	and.b16  	%rs13, %rs12, 13107;
	shl.b16 	%rs14, %rs13, 2;
	shr.u16 	%rs15, %rs12, 2;
	and.b16  	%rs16, %rs15, 13107;
	or.b16  	%rs17, %rs16, %rs14;
	and.b16  	%rs18, %rs17, 20480;
	shl.b16 	%rs19, %rs18, 1;
	shr.u16 	%rs20, %rs17, 1;
	and.b16  	%rs21, %rs20, 16384;
	or.b16  	%rs22, %rs21, %rs19;
	shr.u16 	%rs23, %rs22, 13;
	sub.s32 	%r569, %r568, %r131;
	mad.lo.s32 	%r570, %r143, 2147483616, %r569;
	or.b16  	%rs24, %rs23, 1;
	cvt.u32.u16 	%r571, %rs24;
	and.b16  	%rs25, %rs23, 6;
	cvt.u32.u16 	%r572, %rs25;
	sub.s32 	%r573, %r570, %r572;
	shl.b32 	%r574, %r573, 1;
	cvt.rn.f32.s32 	%f1156, %r574;
	div.approx.f32 	%f123, %f1156, %f253;
	abs.f32 	%f1292, %f123;
	setp.lt.f32 	%p245, %f1292, 0f40000000;
	@%p245 bra 	$L__BB0_106;
// %bb.95:
	setp.gtu.f32 	%p246, %f1292, 0f4B800000;
	@%p246 bra 	$L__BB0_102;
	bra.uni 	$L__BB0_96;
$L__BB0_102:
	mov.b32 	%r62, %f1292;
	and.b32  	%r575, %r62, 8388607;
	or.b32  	%r16282, %r575, 1065353216;
	mov.b32 	%f1291, %r16282;
	add.s32 	%r576, %r62, -1073741824;
	and.b32  	%r16283, %r576, -8388608;
	setp.eq.s32 	%p252, %r16283, 0;
	@%p252 bra 	$L__BB0_105;
// %bb.103:                             // %__nv_fmaf_rn.exit4.i.i.i1681.preheader
	mov.f32 	%f1167, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1166,%f1167;
	// end inline asm
$L__BB0_104:                            // %__nv_fmaf_rn.exit4.i.i.i1681
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r577, %r16283, 192937984;
	add.s32 	%r578, %r16282, %r577;
	mov.b32 	%f1168, %r578;
	mul.f32 	%f1169, %f1166, %f1168;
	sub.f32 	%f1170, %f1168, %f1169;
	fma.rn.f32 	%f1171, %f1170, %f1166, %f1169;
	sub.f32 	%f1172, %f1168, %f1171;
	fma.rz.f32 	%f1173, %f1172, %f1166, %f1171;
	cvt.rzi.f32.f32 	%f1174, %f1173;
	sub.f32 	%f1291, %f1168, %f1174;
	sub.s32 	%r16283, %r16283, %r577;
	mov.b32 	%r16282, %f1291;
	setp.ne.s32 	%p253, %r16283, 0;
	setp.ne.s32 	%p254, %r16282, 0;
	and.pred  	%p255, %p253, %p254;
	@%p255 bra 	$L__BB0_104;
$L__BB0_105:                            // %__internal_fmodf_slowpath_mod.exit.i.i1683
	setp.gt.u32 	%p256, %r62, 2139095039;
	selp.f32 	%f1175, 0f7FFFFFFF, 0f4B800000, %p256;
	mul.f32 	%f1176, %f1291, 0f34000000;
	mul.f32 	%f1292, %f1175, %f1176;
	bra.uni 	$L__BB0_106;
$L__BB0_96:                             // %__nv_fast_fdividef.exit.i.i.i1660
	div.approx.f32 	%f1159, %f1292, %f221;
	cvt.rzi.f32.f32 	%f1290, %f1159;
	fma.rn.f32 	%f126, %f1290, 0fC0000000, %f1292;
	mov.b32 	%r61, %f126;
	setp.lt.u32 	%p247, %r61, 1073741824;
	@%p247 bra 	$L__BB0_101;
// %bb.97:
	setp.lt.u32 	%p248, %r61, -2147483647;
	@%p248 bra 	$L__BB0_99;
// %bb.98:
	add.f32 	%f1164, %f1290, 0fBF800000;
	setp.lt.f32 	%p251, %f126, 0fC0000000;
	add.f32 	%f1165, %f1164, 0fBF800000;
	selp.f32 	%f1290, %f1165, %f1164, %p251;
	bra.uni 	$L__BB0_101;
$L__BB0_99:
	add.f32 	%f1290, %f1290, 0f3F800000;
	setp.ltu.f32 	%p249, %f126, 0f40800000;
	@%p249 bra 	$L__BB0_101;
// %bb.100:                             // %__nv_fmaf_rn.exit.i.i.i1664
	add.f32 	%f1160, %f1290, 0f3F800000;
	fma.rn.f32 	%f1162, %f221, 0fC0400000, %f126;
	setp.ge.f32 	%p250, %f1162, 0f00000000;
	add.f32 	%f1163, %f1160, 0f3F800000;
	selp.f32 	%f1290, %f1163, %f1160, %p250;
$L__BB0_101:                            // %__internal_fmodf_fastpath_quot.exit.i.i1667
	fma.rn.f32 	%f1292, %f1290, 0fC0000000, %f1292;
$L__BB0_106:                            // %__internal_fmodf_kernel.exit.i1686
	mul.f32 	%f256, %f160, 0f3B8B2FF9;
	mul.f32 	%f290, %f4, 0f3B8B2FF9;
	mul.f32 	%f325, %f8, 0f3B8B2FF9;
	mul.f32 	%f359, %f13, 0f3B8B2FF9;
	mul.f32 	%f394, %f17, 0f3B8B2FF9;
	mul.f32 	%f428, %f22, 0f3B8B2FF9;
	mul.f32 	%f463, %f26, 0f3B8B2FF9;
	mul.f32 	%f497, %f31, 0f3B8B2FF9;
	mul.f32 	%f532, %f35, 0f3B8B2FF9;
	mul.f32 	%f566, %f40, 0f3B8B2FF9;
	mul.f32 	%f601, %f44, 0f3B8B2FF9;
	mul.f32 	%f635, %f49, 0f3B8B2FF9;
	mul.f32 	%f670, %f53, 0f3B8B2FF9;
	mul.f32 	%f704, %f58, 0f3B8B2FF9;
	mul.f32 	%f739, %f62, 0f3B8B2FF9;
	mul.f32 	%f772, %f67, 0f3B8B2FF9;
	selp.f32 	%f808, %f807, %f802, %p117;
	selp.f32 	%f841, %f840, %f835, %p124;
	selp.f32 	%f178, %f893, %f889, %p144;
	selp.f32 	%f947, %f946, %f941, %p164;
	selp.f32 	%f994, %f989, %f993, %p182;
	setp.gt.f32 	%p184, %f997, 0f4B800000;
	add.f32 	%f998, %f196, 0f3F800000;
	selp.f32 	%f1045, %f1040, %f1044, %p202;
	setp.gt.f32 	%p204, %f1049, 0f4B800000;
	add.f32 	%f1050, %f1048, 0f3F800000;
	selp.f32 	%f217, %f1102, %f1098, %p224;
	selp.f32 	%f1155, %f1154, %f1149, %p244;
	sub.s32 	%r60, %r570, %r571;
	abs.f32 	%f1177, %f1292;
	setp.gtu.f32 	%p257, %f1177, 0f7F800000;
	@%p257 bra 	$L__BB0_108;
// %bb.107:
	mov.b32 	%r579, %f123;
	and.b32  	%r580, %r579, -2147483648;
	mov.b32 	%r581, %f1292;
	or.b32  	%r582, %r580, %r581;
	mov.b32 	%f1292, %r582;
$L__BB0_108:                            // %__nv_fmodf.exit1687
	mul.f32 	%f3, %f256, %f1262;
	mul.f32 	%f291, %f290, %f1263;
	mul.f32 	%f12, %f325, %f1264;
	mul.f32 	%f360, %f359, %f1265;
	mul.f32 	%f21, %f394, %f1266;
	mul.f32 	%f429, %f428, %f1267;
	mul.f32 	%f30, %f463, %f1268;
	mul.f32 	%f498, %f497, %f1269;
	mul.f32 	%f39, %f532, %f1270;
	mul.f32 	%f567, %f566, %f1271;
	mul.f32 	%f48, %f601, %f1272;
	mul.f32 	%f636, %f635, %f1273;
	mul.f32 	%f57, %f670, %f1274;
	mul.f32 	%f705, %f704, %f1275;
	mul.f32 	%f66, %f739, %f1276;
	mul.f32 	%f773, %f772, %f1277;
	mov.b32 	%r394, %f808;
	mov.b32 	%r395, %f841;
	mov.b32 	%r400, %f805;
	mov.b32 	%r401, %f838;
	mov.b32 	%r462, %f947;
	mov.b32 	%r461, %f178;
	mov.b32 	%r468, %f944;
	mov.b32 	%r467, %f177;
	selp.f32 	%f197, %f998, %f994, %p184;
	selp.f32 	%f1051, %f1050, %f1045, %p204;
	mov.b32 	%r550, %f1155;
	mov.b32 	%r549, %f217;
	mov.b32 	%r556, %f1152;
	mov.b32 	%r555, %f216;
	add.f32 	%f1178, %f1292, %f1292;
	mov.b32 	%r583, %f1178;
	and.b32  	%r584, %r583, -2147483648;
	or.b32  	%r585, %r584, 1056964608;
	mov.b32 	%f1179, %r585;
	add.f32 	%f1180, %f1178, %f1179;
	cvt.rzi.f32.f32 	%f1181, %f1180;
	abs.f32 	%f1182, %f1178;
	setp.gt.f32 	%p258, %f1182, 0f4B000000;
	selp.f32 	%f1183, %f1178, %f1181, %p258;
	cvt.rzi.f32.f32 	%f1184, %f1178;
	setp.lt.f32 	%p259, %f1182, 0f3F000000;
	selp.f32 	%f1185, %f1184, %f1183, %p259;
	cvt.rzi.s32.f32 	%r586, %f1185;
	fma.rn.f32 	%f1186, %f1185, 0fBF000000, %f1292;
	mul.f32 	%f1187, %f1186, %f1186;
	fma.rn.f32 	%f1188, %f1187, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1189, %f1187, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1190, %f1188, %f1187, 0fC0A55DF6;
	fma.rn.f32 	%f1191, %f1189, %f1187, 0f4081E0CF;
	fma.rn.f32 	%f1192, %f1187, %f1186, 0f00000000;
	fma.rn.f32 	%f1193, %f1191, %f1187, 0fC09DE9E6;
	fma.rn.f32 	%f1194, %f1190, %f1192, 0f00000000;
	fma.rn.f32 	%f1195, %f1193, %f1187, 0f3F800000;
	fma.rn.f32 	%f1196, %f1186, 0f40490FDB, %f1194;
	and.b32  	%r587, %r586, 1;
	setp.eq.b32 	%p260, %r587, 1;
	selp.f32 	%f1197, %f1195, %f1196, %p260;
	selp.f32 	%f1198, %f1196, %f1195, %p260;
	and.b32  	%r588, %r586, 2;
	setp.eq.s32 	%p261, %r588, 0;
	neg.f32 	%f1199, %f1197;
	selp.f32 	%f1200, %f1197, %f1199, %p261;
	add.s32 	%r589, %r586, 1;
	and.b32  	%r590, %r589, 2;
	setp.eq.s32 	%p262, %r590, 0;
	sub.f32 	%f1202, %f250, %f1198;
	selp.f32 	%f1203, %f1198, %f1202, %p262;
	cvt.rzi.f32.f32 	%f1204, %f1292;
	setp.eq.f32 	%p263, %f1204, %f1292;
	mul.f32 	%f1205, %f1292, 0f00000000;
	selp.f32 	%f140, %f1205, %f1200, %p263;
	abs.f32 	%f1206, %f1292;
	setp.gt.f32 	%p264, %f1206, 0f4B800000;
	add.f32 	%f1207, %f140, 0f3F800000;
	shl.b32 	%r591, %r60, 1;
	cvt.rn.f32.s32 	%f1208, %r591;
	div.approx.f32 	%f142, %f1208, %f253;
	abs.f32 	%f1296, %f142;
	setp.lt.f32 	%p265, %f1296, 0f40000000;
	@%p265 bra 	$L__BB0_120;
// %bb.109:
	setp.gtu.f32 	%p266, %f1296, 0f4B800000;
	@%p266 bra 	$L__BB0_116;
	bra.uni 	$L__BB0_110;
$L__BB0_116:
	mov.b32 	%r70, %f1296;
	and.b32  	%r592, %r70, 8388607;
	or.b32  	%r16284, %r592, 1065353216;
	mov.b32 	%f1295, %r16284;
	add.s32 	%r593, %r70, -1073741824;
	and.b32  	%r16285, %r593, -8388608;
	setp.eq.s32 	%p272, %r16285, 0;
	@%p272 bra 	$L__BB0_119;
// %bb.117:                             // %__nv_fmaf_rn.exit4.i.i.i1712.preheader
	mov.f32 	%f1219, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1218,%f1219;
	// end inline asm
$L__BB0_118:                            // %__nv_fmaf_rn.exit4.i.i.i1712
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r594, %r16285, 192937984;
	add.s32 	%r595, %r16284, %r594;
	mov.b32 	%f1220, %r595;
	mul.f32 	%f1221, %f1218, %f1220;
	sub.f32 	%f1222, %f1220, %f1221;
	fma.rn.f32 	%f1223, %f1222, %f1218, %f1221;
	sub.f32 	%f1224, %f1220, %f1223;
	fma.rz.f32 	%f1225, %f1224, %f1218, %f1223;
	cvt.rzi.f32.f32 	%f1226, %f1225;
	sub.f32 	%f1295, %f1220, %f1226;
	sub.s32 	%r16285, %r16285, %r594;
	mov.b32 	%r16284, %f1295;
	setp.ne.s32 	%p273, %r16285, 0;
	setp.ne.s32 	%p274, %r16284, 0;
	and.pred  	%p275, %p273, %p274;
	@%p275 bra 	$L__BB0_118;
$L__BB0_119:                            // %__internal_fmodf_slowpath_mod.exit.i.i1714
	setp.gt.u32 	%p276, %r70, 2139095039;
	selp.f32 	%f1227, 0f7FFFFFFF, 0f4B800000, %p276;
	mul.f32 	%f1228, %f1295, 0f34000000;
	mul.f32 	%f1296, %f1227, %f1228;
	bra.uni 	$L__BB0_120;
$L__BB0_110:                            // %__nv_fast_fdividef.exit.i.i.i1691
	div.approx.f32 	%f1211, %f1296, %f221;
	cvt.rzi.f32.f32 	%f1294, %f1211;
	fma.rn.f32 	%f145, %f1294, 0fC0000000, %f1296;
	mov.b32 	%r69, %f145;
	setp.lt.u32 	%p267, %r69, 1073741824;
	@%p267 bra 	$L__BB0_115;
// %bb.111:
	setp.lt.u32 	%p268, %r69, -2147483647;
	@%p268 bra 	$L__BB0_113;
// %bb.112:
	add.f32 	%f1216, %f1294, 0fBF800000;
	setp.lt.f32 	%p271, %f145, 0fC0000000;
	add.f32 	%f1217, %f1216, 0fBF800000;
	selp.f32 	%f1294, %f1217, %f1216, %p271;
	bra.uni 	$L__BB0_115;
$L__BB0_113:
	add.f32 	%f1294, %f1294, 0f3F800000;
	setp.ltu.f32 	%p269, %f145, 0f40800000;
	@%p269 bra 	$L__BB0_115;
// %bb.114:                             // %__nv_fmaf_rn.exit.i.i.i1695
	add.f32 	%f1212, %f1294, 0f3F800000;
	fma.rn.f32 	%f1214, %f221, 0fC0400000, %f145;
	setp.ge.f32 	%p270, %f1214, 0f00000000;
	add.f32 	%f1215, %f1212, 0f3F800000;
	selp.f32 	%f1294, %f1215, %f1212, %p270;
$L__BB0_115:                            // %__internal_fmodf_fastpath_quot.exit.i.i1698
	fma.rn.f32 	%f1296, %f1294, 0fC0000000, %f1296;
$L__BB0_120:                            // %__internal_fmodf_kernel.exit.i1717
	shr.u32 	%r139, %r2, 2;
	mov.b32 	%r266, %f291;
	mov.b32 	%r265, %f3;
	mov.b32 	%r284, %f360;
	mov.b32 	%r283, %f12;
	mov.b32 	%r302, %f429;
	mov.b32 	%r301, %f21;
	mov.b32 	%r320, %f498;
	mov.b32 	%r319, %f30;
	mov.b32 	%r338, %f567;
	mov.b32 	%r337, %f39;
	mov.b32 	%r356, %f636;
	mov.b32 	%r355, %f48;
	mov.b32 	%r374, %f705;
	mov.b32 	%r373, %f57;
	mov.b32 	%r392, %f773;
	mov.b32 	%r391, %f66;
	xor.b32  	%r465, %r468, -2147483648;
	xor.b32  	%r464, %r467, -2147483648;
	mov.b32 	%r512, %f1051;
	mov.b32 	%r511, %f197;
	mov.b32 	%r515, %f1048;
	mov.b32 	%r514, %f196;
	xor.b32  	%r553, %r556, -2147483648;
	xor.b32  	%r552, %r555, -2147483648;
	selp.f32 	%f141, %f1207, %f1203, %p264;
	abs.f32 	%f1229, %f1296;
	setp.gtu.f32 	%p277, %f1229, 0f7F800000;
	@%p277 bra 	$L__BB0_122;
// %bb.121:
	mov.b32 	%r596, %f142;
	and.b32  	%r597, %r596, -2147483648;
	mov.b32 	%r598, %f1296;
	or.b32  	%r599, %r597, %r598;
	mov.b32 	%f1296, %r599;
$L__BB0_122:                            // %__nv_fmodf.exit1718
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	// begin inline asm
	cvt.rn.f16x2.f32 %r264, %r266, %r265;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r282, %r284, %r283;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r300, %r302, %r301;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r318, %r320, %r319;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r336, %r338, %r337;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r354, %r356, %r355;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r372, %r374, %r373;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r390, %r392, %r391;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r393, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r396, %r395, %r394;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r399, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r402, %r401, %r400;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r460, %r462, %r461;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r463, %r465, %r464;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r466, %r468, %r467;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r469, %r462, %r461;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r510, %r512, %r511;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r513, %r515, %r514;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r548, %r550, %r549;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r551, %r553, %r552;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r554, %r556, %r555;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r557, %r550, %r549;
	// end inline asm
	add.f32 	%f1230, %f1296, %f1296;
	mov.b32 	%r607, %f1230;
	and.b32  	%r608, %r607, -2147483648;
	or.b32  	%r609, %r608, 1056964608;
	mov.b32 	%f1231, %r609;
	add.f32 	%f1232, %f1230, %f1231;
	cvt.rzi.f32.f32 	%f1233, %f1232;
	abs.f32 	%f1234, %f1230;
	setp.gt.f32 	%p278, %f1234, 0f4B000000;
	selp.f32 	%f1235, %f1230, %f1233, %p278;
	cvt.rzi.f32.f32 	%f1236, %f1230;
	setp.lt.f32 	%p279, %f1234, 0f3F000000;
	selp.f32 	%f1237, %f1236, %f1235, %p279;
	cvt.rzi.s32.f32 	%r610, %f1237;
	fma.rn.f32 	%f1238, %f1237, 0fBF000000, %f1296;
	mul.f32 	%f1239, %f1238, %f1238;
	fma.rn.f32 	%f1240, %f1239, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1241, %f1239, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1242, %f1240, %f1239, 0fC0A55DF6;
	fma.rn.f32 	%f1243, %f1241, %f1239, 0f4081E0CF;
	fma.rn.f32 	%f1244, %f1239, %f1238, 0f00000000;
	fma.rn.f32 	%f1245, %f1243, %f1239, 0fC09DE9E6;
	fma.rn.f32 	%f1246, %f1242, %f1244, 0f00000000;
	fma.rn.f32 	%f1247, %f1245, %f1239, 0f3F800000;
	fma.rn.f32 	%f1248, %f1238, 0f40490FDB, %f1246;
	and.b32  	%r611, %r610, 1;
	setp.eq.b32 	%p280, %r611, 1;
	selp.f32 	%f1249, %f1247, %f1248, %p280;
	selp.f32 	%f1250, %f1248, %f1247, %p280;
	and.b32  	%r612, %r610, 2;
	setp.eq.s32 	%p281, %r612, 0;
	neg.f32 	%f1251, %f1249;
	selp.f32 	%f1252, %f1249, %f1251, %p281;
	add.s32 	%r613, %r610, 1;
	and.b32  	%r614, %r613, 2;
	setp.eq.s32 	%p282, %r614, 0;
	sub.f32 	%f1254, %f250, %f1250;
	selp.f32 	%f1255, %f1250, %f1254, %p282;
	cvt.rzi.f32.f32 	%f1256, %f1296;
	setp.eq.f32 	%p283, %f1256, %f1296;
	mul.f32 	%f1257, %f1296, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1252, %p283;
	abs.f32 	%f1259, %f1296;
	setp.gt.f32 	%p284, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1261, %f1260, %f1255, %p284;
	mov.b32 	%r602, %f1261;
	mov.b32 	%r601, %f141;
	// begin inline asm
	cvt.rn.f16x2.f32 %r600, %r602, %r601;
	// end inline asm
	mov.b32 	%r605, %f1258;
	mov.b32 	%r604, %f140;
	// begin inline asm
	cvt.rn.f16x2.f32 %r603, %r605, %r604;
	// end inline asm
	shl.b32 	%r615, %r222, 13;
	and.b32  	%r616, %r129, 32;
	or.b32  	%r617, %r616, %r3;
	shl.b32 	%r618, %r2, 3;
	and.b32  	%r619, %r618, 64;
	or.b32  	%r79, %r617, %r619;
	and.b32  	%r620, %r128, 28;
	and.b32  	%r621, %r132, 96;
	or.b32  	%r622, %r620, %r621;
	or.b32  	%r80, %r622, %r615;
	bfe.s32 	%r623, %r2, 3, 1;
	and.b32  	%r81, %r2, 8;
	shl.b32 	%r624, %r2, 4;
	or.b32  	%r625, %r624, %r81;
	shr.u32 	%r626, %r625, 2;
	and.b32  	%r627, %r626, 30;
	and.b32  	%r628, %r624, 48;
	or.b32  	%r82, %r628, %r130;
	and.b32  	%r83, %r139, 6;
	and.b32  	%r629, %r4, 32;
	shr.u32 	%r630, %r3, 1;
	or.b32  	%r84, %r629, %r630;
	or.b32  	%r85, %r84, 8;
	or.b32  	%r86, %r84, 16;
	or.b32  	%r87, %r84, 24;
	shr.u32 	%r631, %r133, 1;
	mul.lo.s32 	%r632, %r631, 65;
	add.s32 	%r88, %r84, %r632;
	add.s32 	%r89, %r85, %r632;
	add.s32 	%r90, %r86, %r632;
	add.s32 	%r91, %r87, %r632;
	and.b16  	%rs26, %rs1, 63;
	mul.lo.s16 	%rs27, %rs26, 65;
	cvt.u32.u16 	%r633, %rs27;
	add.s32 	%r92, %r84, %r633;
	add.s32 	%r93, %r85, %r633;
	add.s32 	%r94, %r86, %r633;
	add.s32 	%r95, %r87, %r633;
	shl.b32 	%r634, %r3, 1;
	or.b32  	%r635, %r634, %r141;
	mul.lo.s32 	%r636, %r635, 65;
	add.s32 	%r637, %r627, %r636;
	mul.wide.u32 	%rd43, %r637, 4;
	mov.u64 	%rd44, shmem;
	add.s64 	%rd4, %rd44, %rd43;
	cvt.u64.u32 	%rd45, %r627;
	cvt.u64.u32 	%rd46, %r636;
	add.s64 	%rd47, %rd46, %rd45;
	shl.b64 	%rd48, %rd47, 2;
	add.s64 	%rd5, %rd44, %rd48;
	or.b32  	%r638, %r635, 32;
	mul.lo.s32 	%r639, %r638, 65;
	add.s32 	%r640, %r639, %r627;
	mul.wide.u32 	%rd49, %r640, 4;
	add.s64 	%rd6, %rd44, %rd49;
	cvt.u64.u32 	%rd50, %r639;
	add.s64 	%rd51, %rd50, %rd45;
	shl.b64 	%rd52, %rd51, 2;
	add.s64 	%rd7, %rd44, %rd52;
	bfe.u32 	%r641, %r624, 5, 1;
	shr.u32 	%r642, %r3, 3;
	mul.lo.s32 	%r643, %r642, 260;
	bfe.s32 	%r644, %r3, 1, 1;
	and.b32  	%r645, %r3, 2;
	setp.eq.s32 	%p285, %r645, 0;
	and.b32  	%r646, %r644, 1040;
	mul.lo.s32 	%r647, %r141, 65;
	and.b32  	%r648, %r3, 1;
	neg.s32 	%r649, %r648;
	and.b32  	%r650, %r649, 2080;
	bfe.s32 	%r651, %r3, 2, 1;
	and.b32  	%r652, %r3, 4;
	setp.eq.s32 	%p286, %r652, 0;
	and.b32  	%r653, %r651, 520;
	or.b32  	%r654, %r650, %r627;
	add.s32 	%r655, %r654, %r643;
	add.s32 	%r656, %r655, %r646;
	add.s32 	%r657, %r656, %r647;
	add.s32 	%r658, %r657, %r653;
	mul.wide.u32 	%rd53, %r658, 4;
	add.s64 	%rd8, %rd44, %rd53;
	selp.b64 	%rd54, 0, 520, %p286;
	cvt.u64.u32 	%rd55, %r647;
	selp.b64 	%rd56, 0, 1040, %p285;
	cvt.u64.u32 	%rd57, %r643;
	cvt.u64.u32 	%rd58, %r654;
	add.s64 	%rd59, %rd58, %rd57;
	add.s64 	%rd60, %rd59, %rd56;
	add.s64 	%rd61, %rd60, %rd55;
	add.s64 	%rd62, %rd61, %rd54;
	shl.b64 	%rd63, %rd62, 2;
	add.s64 	%rd14, %rd44, %rd63;
	cvt.u64.u32 	%rd64, %r655;
	add.s64 	%rd65, %rd64, %rd56;
	add.s64 	%rd66, %rd65, %rd55;
	add.s64 	%rd67, %rd66, %rd54;
	shl.b64 	%rd68, %rd67, 2;
	add.s64 	%rd10, %rd44, %rd68;
	add.s32 	%r659, %r658, 162;
	mul.wide.u32 	%rd69, %r659, 4;
	add.s64 	%rd11, %rd44, %rd69;
	add.s32 	%r660, %r658, 131;
	mul.wide.u32 	%rd70, %r660, 4;
	add.s64 	%rd12, %rd44, %rd70;
	add.s32 	%r661, %r658, 163;
	mul.wide.u32 	%rd71, %r661, 4;
	add.s64 	%rd13, %rd44, %rd71;
	add.s32 	%r662, %r658, 4193;
	mul.wide.u32 	%rd72, %r662, 4;
	add.s64 	%rd15, %rd44, %rd72;
	add.s32 	%r663, %r658, 4162;
	mul.wide.u32 	%rd73, %r663, 4;
	add.s64 	%rd16, %rd44, %rd73;
	add.s32 	%r664, %r658, 4194;
	mul.wide.u32 	%rd74, %r664, 4;
	add.s64 	%rd17, %rd44, %rd74;
	add.s32 	%r665, %r658, 4291;
	mul.wide.u32 	%rd75, %r665, 4;
	add.s64 	%rd18, %rd44, %rd75;
	add.s32 	%r666, %r658, 4323;
	mul.wide.u32 	%rd76, %r666, 4;
	add.s64 	%rd19, %rd44, %rd76;
	add.s32 	%r667, %r658, 4292;
	mul.wide.u32 	%rd77, %r667, 4;
	add.s64 	%rd20, %rd44, %rd77;
	add.s32 	%r668, %r658, 4324;
	mul.wide.u32 	%rd78, %r668, 4;
	add.s64 	%rd21, %rd44, %rd78;
	and.b32  	%r96, %r623, 1040;
	mul.lo.s32 	%r97, %r641, 65;
	setp.lt.u32 	%p287, %r2, 16;
	selp.b32 	%r98, 0, 520, %p287;
	add.s32 	%r99, %r84, 2080;
	add.s32 	%r100, %r84, 2088;
	add.s32 	%r101, %r84, 2096;
	add.s32 	%r102, %r84, 2104;
	add.s32 	%r669, %r640, 4193;
	mul.wide.u32 	%rd79, %r669, 4;
	add.s64 	%rd22, %rd44, %rd79;
	mov.u32 	%r16286, 0;
	setp.eq.s32 	%p289, %r81, 0;
	mov.u16 	%rs2387, 25600;
	mov.u16 	%rs2179, 21504;
	mov.u16 	%rs2395, 18432;
	mov.u32 	%r16287, %r16286;
	mov.u32 	%r16288, %r16286;
	mov.u32 	%r16289, %r16286;
	mov.u32 	%r16290, %r16286;
	mov.u32 	%r16291, %r16286;
	mov.u32 	%r16292, %r16286;
	mov.u32 	%r16293, %r16286;
	mov.u32 	%r16294, %r16286;
	mov.u32 	%r16295, %r16286;
	mov.u32 	%r16296, %r16286;
	mov.u32 	%r16297, %r16286;
	mov.u32 	%r16298, %r16286;
	mov.u32 	%r16299, %r16286;
	mov.u32 	%r16300, %r16286;
	mov.u32 	%r16301, %r16286;
	mov.u32 	%r16302, %r16286;
	mov.u32 	%r16303, %r16286;
	mov.u32 	%r16304, %r16286;
	mov.u32 	%r16305, %r16286;
	mov.u32 	%r16306, %r16286;
	mov.u32 	%r16307, %r16286;
	mov.u32 	%r16308, %r16286;
	mov.u32 	%r16309, %r16286;
	mov.u32 	%r16310, %r16286;
$L__BB0_123:                            // %L2064
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_156 Depth 2
	add.s32 	%r670, %r16310, %r222;
	setp.lt.s32 	%p288, %r670, %r223;
	@%p288 bra 	$L__BB0_155;
	bra.uni 	$L__BB0_124;
$L__BB0_155:                            // %pass757
                                        //   in Loop: Header=BB0_123 Depth=1
	or.b32  	%r737, %r79, %r16310;
	shl.b32 	%r738, %r737, 13;
	add.s32 	%r739, %r80, %r738;
	shr.s32 	%r740, %r739, 31;
	shr.u32 	%r741, %r740, 4;
	add.s32 	%r742, %r739, %r741;
	shr.s32 	%r743, %r742, 28;
	setp.lt.s32 	%p290, %r739, 0;
	and.b32  	%r744, %r742, -268435456;
	setp.ne.s32 	%p291, %r744, %r739;
	and.pred  	%p292, %p290, %p291;
	selp.u32 	%r745, 1, 0, %p292;
	sub.s32 	%r746, %r745, %r743;
	shl.b32 	%r747, %r746, 28;
	add.s32 	%r748, %r747, %r739;
	mul.wide.s32 	%rd80, %r748, 4;
	add.s64 	%rd81, %rd2, %rd80;
	ld.global.v4.u32 	{%r749, %r750, %r751, %r752}, [%rd81];
	or.b32  	%r753, %r738, 131072;
	add.s32 	%r754, %r80, %r753;
	shr.s32 	%r755, %r754, 31;
	shr.u32 	%r756, %r755, 4;
	add.s32 	%r757, %r754, %r756;
	shr.s32 	%r758, %r757, 28;
	setp.lt.s32 	%p293, %r754, 0;
	and.b32  	%r759, %r757, -268435456;
	setp.ne.s32 	%p294, %r759, %r754;
	and.pred  	%p295, %p293, %p294;
	selp.u32 	%r760, 1, 0, %p295;
	sub.s32 	%r761, %r760, %r758;
	shl.b32 	%r762, %r761, 28;
	add.s32 	%r763, %r762, %r754;
	mul.wide.s32 	%rd82, %r763, 4;
	add.s64 	%rd83, %rd2, %rd82;
	ld.global.v4.u32 	{%r764, %r765, %r766, %r767}, [%rd83];
	or.b32  	%r768, %r738, 1048576;
	add.s32 	%r769, %r80, %r768;
	shr.s32 	%r770, %r769, 31;
	shr.u32 	%r771, %r770, 4;
	add.s32 	%r772, %r769, %r771;
	shr.s32 	%r773, %r772, 28;
	setp.lt.s32 	%p296, %r769, 0;
	and.b32  	%r774, %r772, -268435456;
	setp.ne.s32 	%p297, %r774, %r769;
	and.pred  	%p298, %p296, %p297;
	selp.u32 	%r775, 1, 0, %p298;
	sub.s32 	%r776, %r775, %r773;
	shl.b32 	%r777, %r776, 28;
	add.s32 	%r778, %r777, %r769;
	mul.wide.s32 	%rd84, %r778, 4;
	add.s64 	%rd85, %rd2, %rd84;
	ld.global.v4.u32 	{%r779, %r780, %r781, %r782}, [%rd85];
	or.b32  	%r783, %r738, 1179648;
	add.s32 	%r784, %r80, %r783;
	shr.s32 	%r785, %r784, 31;
	shr.u32 	%r786, %r785, 4;
	add.s32 	%r787, %r784, %r786;
	shr.s32 	%r788, %r787, 28;
	setp.lt.s32 	%p299, %r784, 0;
	and.b32  	%r789, %r787, -268435456;
	setp.ne.s32 	%p300, %r789, %r784;
	and.pred  	%p301, %p299, %p300;
	selp.u32 	%r790, 1, 0, %p301;
	sub.s32 	%r791, %r790, %r788;
	shl.b32 	%r792, %r791, 28;
	add.s32 	%r793, %r792, %r784;
	mul.wide.s32 	%rd86, %r793, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r794, %r795, %r796, %r797}, [%rd87];
	selp.b32 	%r798, %r751, %r749, %p289;
	shfl.sync.bfly.b32	%r799, %r798, 8, 31, -1;
	selp.b32 	%r673, %r749, %r799, %p289;
	selp.b32 	%r674, %r799, %r751, %p289;
	selp.b32 	%r800, %r752, %r750, %p289;
	shfl.sync.bfly.b32	%r801, %r800, 8, 31, -1;
	selp.b32 	%r681, %r750, %r801, %p289;
	selp.b32 	%r682, %r801, %r752, %p289;
	selp.b32 	%r802, %r766, %r764, %p289;
	shfl.sync.bfly.b32	%r803, %r802, 8, 31, -1;
	selp.b32 	%r689, %r764, %r803, %p289;
	selp.b32 	%r690, %r803, %r766, %p289;
	selp.b32 	%r804, %r767, %r765, %p289;
	shfl.sync.bfly.b32	%r805, %r804, 8, 31, -1;
	selp.b32 	%r697, %r765, %r805, %p289;
	selp.b32 	%r698, %r805, %r767, %p289;
	selp.b32 	%r806, %r781, %r779, %p289;
	shfl.sync.bfly.b32	%r807, %r806, 8, 31, -1;
	selp.b32 	%r705, %r779, %r807, %p289;
	selp.b32 	%r706, %r807, %r781, %p289;
	selp.b32 	%r808, %r782, %r780, %p289;
	shfl.sync.bfly.b32	%r809, %r808, 8, 31, -1;
	selp.b32 	%r713, %r780, %r809, %p289;
	selp.b32 	%r714, %r809, %r782, %p289;
	selp.b32 	%r810, %r796, %r794, %p289;
	shfl.sync.bfly.b32	%r811, %r810, 8, 31, -1;
	selp.b32 	%r721, %r794, %r811, %p289;
	selp.b32 	%r722, %r811, %r796, %p289;
	selp.b32 	%r812, %r797, %r795, %p289;
	shfl.sync.bfly.b32	%r813, %r812, 8, 31, -1;
	selp.b32 	%r729, %r795, %r813, %p289;
	selp.b32 	%r730, %r813, %r797, %p289;
	mov.u32 	%r16197, 21520;
	// begin inline asm
	prmt.b32 %r672, %r673, %r674, %r16197;
	// end inline asm
	mov.u32 	%r16201, 30258;
	// begin inline asm
	prmt.b32 %r676, %r673, %r674, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r680, %r681, %r682, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r684, %r681, %r682, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r688, %r689, %r690, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r692, %r689, %r690, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r696, %r697, %r698, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r700, %r697, %r698, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r704, %r705, %r706, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r708, %r705, %r706, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r712, %r713, %r714, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r716, %r713, %r714, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r720, %r721, %r722, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r724, %r721, %r722, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r728, %r729, %r730, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r732, %r729, %r730, %r16201;
	// end inline asm
	st.shared.u32 	[%rd8], %r672;
	st.shared.u32 	[%rd14+128], %r676;
	st.shared.u32 	[%rd14+4], %r680;
	st.shared.u32 	[%rd14+132], %r684;
	st.shared.u32 	[%rd10+520], %r688;
	st.shared.u32 	[%rd11], %r692;
	st.shared.u32 	[%rd12], %r696;
	st.shared.u32 	[%rd13], %r700;
	st.shared.u32 	[%rd14+16644], %r704;
	st.shared.u32 	[%rd15], %r708;
	st.shared.u32 	[%rd16], %r712;
	st.shared.u32 	[%rd17], %r716;
	st.shared.u32 	[%rd18], %r720;
	st.shared.u32 	[%rd19], %r724;
	st.shared.u32 	[%rd20], %r728;
	st.shared.u32 	[%rd21], %r732;
	bar.sync 	0;
	or.b32  	%r170, %r82, %r16310;
	mov.u32 	%r3158, 0;
	mov.u32 	%r16317, %r3158;
$L__BB0_156:                            // %pass6353
                                        //   Parent Loop BB0_123 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16078, %r170, %r16317;
	bfe.s32 	%r16079, %r16078, 3, 1;
	and.b32  	%r16080, %r16079, 260;
	bfe.s32 	%r16081, %r16078, 7, 1;
	and.b32  	%r16082, %r16081, 4161;
	bfe.s32 	%r16083, %r16078, 4, 1;
	and.b32  	%r16084, %r16083, 130;
	add.s32 	%r16085, %r84, %r16080;
	add.s32 	%r16086, %r16085, %r16082;
	add.s32 	%r16087, %r16086, %r16084;
	add.s32 	%r16088, %r16087, %r96;
	add.s32 	%r16089, %r16088, %r97;
	add.s32 	%r16090, %r16089, %r98;
	mul.wide.u32 	%rd88, %r16090, 4;
	add.s64 	%rd90, %rd44, %rd88;
	ld.shared.u32 	%r16091, [%rd90];
	add.s32 	%r16092, %r85, %r16080;
	add.s32 	%r16093, %r16092, %r16082;
	add.s32 	%r16094, %r16093, %r16084;
	add.s32 	%r16095, %r16094, %r96;
	add.s32 	%r16096, %r16095, %r97;
	add.s32 	%r16097, %r16096, %r98;
	mul.wide.u32 	%rd91, %r16097, 4;
	add.s64 	%rd92, %rd44, %rd91;
	ld.shared.u32 	%r16098, [%rd92];
	add.s32 	%r16099, %r86, %r16080;
	add.s32 	%r16100, %r16099, %r16082;
	add.s32 	%r16101, %r16100, %r16084;
	add.s32 	%r16102, %r16101, %r96;
	add.s32 	%r16103, %r16102, %r97;
	add.s32 	%r16104, %r16103, %r98;
	mul.wide.u32 	%rd93, %r16104, 4;
	add.s64 	%rd94, %rd44, %rd93;
	ld.shared.u32 	%r16105, [%rd94];
	add.s32 	%r16106, %r87, %r16080;
	add.s32 	%r16107, %r16106, %r16082;
	add.s32 	%r16108, %r16107, %r16084;
	add.s32 	%r16109, %r16108, %r96;
	add.s32 	%r16110, %r16109, %r97;
	add.s32 	%r16111, %r16110, %r98;
	mul.wide.u32 	%rd95, %r16111, 4;
	add.s64 	%rd96, %rd44, %rd95;
	ld.shared.u32 	%r16112, [%rd96];
	add.s32 	%r16113, %r16078, 1;
	or.b32  	%r16114, %r16113, %r83;
	bfe.s32 	%r16115, %r16113, 3, 1;
	and.b32  	%r16116, %r16115, 260;
	bfe.s32 	%r16117, %r16113, 7, 1;
	and.b32  	%r16118, %r16117, 4161;
	bfe.s32 	%r16119, %r16113, 4, 1;
	and.b32  	%r16120, %r16119, 130;
	bfe.s32 	%r16121, %r16114, 1, 1;
	and.b32  	%r16122, %r16121, 1040;
	bfe.s32 	%r16123, %r16114, 2, 1;
	and.b32  	%r16124, %r16123, 520;
	add.s32 	%r16125, %r99, %r16116;
	add.s32 	%r16126, %r16125, %r16118;
	add.s32 	%r16127, %r16126, %r16120;
	add.s32 	%r16128, %r16127, %r16122;
	add.s32 	%r16129, %r16128, %r97;
	add.s32 	%r16130, %r16129, %r16124;
	mul.wide.u32 	%rd97, %r16130, 4;
	add.s64 	%rd98, %rd44, %rd97;
	ld.shared.u32 	%r16131, [%rd98];
	add.s32 	%r16132, %r100, %r16116;
	add.s32 	%r16133, %r16132, %r16118;
	add.s32 	%r16134, %r16133, %r16120;
	add.s32 	%r16135, %r16134, %r16122;
	add.s32 	%r16136, %r16135, %r97;
	add.s32 	%r16137, %r16136, %r16124;
	mul.wide.u32 	%rd99, %r16137, 4;
	add.s64 	%rd100, %rd44, %rd99;
	ld.shared.u32 	%r16138, [%rd100];
	add.s32 	%r16139, %r101, %r16116;
	add.s32 	%r16140, %r16139, %r16118;
	add.s32 	%r16141, %r16140, %r16120;
	add.s32 	%r16142, %r16141, %r16122;
	add.s32 	%r16143, %r16142, %r97;
	add.s32 	%r16144, %r16143, %r16124;
	mul.wide.u32 	%rd101, %r16144, 4;
	add.s64 	%rd102, %rd44, %rd101;
	ld.shared.u32 	%r16145, [%rd102];
	add.s32 	%r16146, %r102, %r16116;
	add.s32 	%r16147, %r16146, %r16118;
	add.s32 	%r16148, %r16147, %r16120;
	add.s32 	%r16149, %r16148, %r16122;
	add.s32 	%r16150, %r16149, %r97;
	add.s32 	%r16151, %r16150, %r16124;
	mul.wide.u32 	%rd103, %r16151, 4;
	add.s64 	%rd104, %rd44, %rd103;
	ld.shared.u32 	%r16152, [%rd104];
	// begin inline asm
	mov.b32 %r819, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r830, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r818, %r16091, -2004318072;
	mov.u32 	%r817, 983055;
	// begin inline asm
	lop3.b32 %r816, %r817, %r818, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r820, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r821, %r819, %r820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r824, %r816, %r821;
	// end inline asm
	mov.u32 	%r828, 15728880;
	// begin inline asm
	lop3.b32 %r827, %r828, %r818, %r830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r832, %r830, %r831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r835, %r827, %r832;
	// end inline asm
	shr.u32 	%r840, %r818, 8;
	// begin inline asm
	lop3.b32 %r838, %r817, %r840, %r819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r843, %r819, %r842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r846, %r838, %r843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r849, %r828, %r840, %r830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r854, %r830, %r853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r857, %r849, %r854;
	// end inline asm
	// begin inline asm
	mov.b32 %r865, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r876, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r864, %r16098, -2004318072;
	// begin inline asm
	lop3.b32 %r862, %r817, %r864, %r865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r866, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r867, %r865, %r866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r870, %r862, %r867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r873, %r828, %r864, %r876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r878, %r876, %r877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r881, %r873, %r878;
	// end inline asm
	shr.u32 	%r886, %r864, 8;
	// begin inline asm
	lop3.b32 %r884, %r817, %r886, %r865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r889, %r865, %r888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r892, %r884, %r889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r895, %r828, %r886, %r876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r900, %r876, %r899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r903, %r895, %r900;
	// end inline asm
	// begin inline asm
	mov.b32 %r911, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r922, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r910, %r16105, -2004318072;
	// begin inline asm
	lop3.b32 %r908, %r817, %r910, %r911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r913, %r911, %r912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r916, %r908, %r913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r919, %r828, %r910, %r922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r924, %r922, %r923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r927, %r919, %r924;
	// end inline asm
	shr.u32 	%r932, %r910, 8;
	// begin inline asm
	lop3.b32 %r930, %r817, %r932, %r911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r935, %r911, %r934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r938, %r930, %r935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r941, %r828, %r932, %r922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r946, %r922, %r945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r949, %r941, %r946;
	// end inline asm
	// begin inline asm
	mov.b32 %r957, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r968, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r956, %r16112, -2004318072;
	// begin inline asm
	lop3.b32 %r954, %r817, %r956, %r957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r959, %r957, %r958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r962, %r954, %r959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r965, %r828, %r956, %r968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r970, %r968, %r969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r973, %r965, %r970;
	// end inline asm
	shr.u32 	%r978, %r956, 8;
	// begin inline asm
	lop3.b32 %r976, %r817, %r978, %r957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r981, %r957, %r980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r984, %r976, %r981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r987, %r828, %r978, %r968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r992, %r968, %r991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r995, %r987, %r992;
	// end inline asm
	// begin inline asm
	mov.b32 %r1003, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1014, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1002, %r16131, -2004318072;
	// begin inline asm
	lop3.b32 %r1000, %r817, %r1002, %r1003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1005, %r1003, %r1004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1008, %r1000, %r1005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1011, %r828, %r1002, %r1014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1016, %r1014, %r1015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1019, %r1011, %r1016;
	// end inline asm
	shr.u32 	%r1024, %r1002, 8;
	// begin inline asm
	lop3.b32 %r1022, %r817, %r1024, %r1003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1027, %r1003, %r1026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1030, %r1022, %r1027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1033, %r828, %r1024, %r1014, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1038, %r1014, %r1037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1041, %r1033, %r1038;
	// end inline asm
	// begin inline asm
	mov.b32 %r1049, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1060, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1048, %r16138, -2004318072;
	// begin inline asm
	lop3.b32 %r1046, %r817, %r1048, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1051, %r1049, %r1050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1054, %r1046, %r1051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1057, %r828, %r1048, %r1060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1061, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1062, %r1060, %r1061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1065, %r1057, %r1062;
	// end inline asm
	shr.u32 	%r1070, %r1048, 8;
	// begin inline asm
	lop3.b32 %r1068, %r817, %r1070, %r1049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1073, %r1049, %r1072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1076, %r1068, %r1073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1079, %r828, %r1070, %r1060, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1084, %r1060, %r1083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1087, %r1079, %r1084;
	// end inline asm
	// begin inline asm
	mov.b32 %r1095, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1106, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1094, %r16145, -2004318072;
	// begin inline asm
	lop3.b32 %r1092, %r817, %r1094, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1097, %r1095, %r1096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1100, %r1092, %r1097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1103, %r828, %r1094, %r1106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1107, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1108, %r1106, %r1107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1111, %r1103, %r1108;
	// end inline asm
	shr.u32 	%r1116, %r1094, 8;
	// begin inline asm
	lop3.b32 %r1114, %r817, %r1116, %r1095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1119, %r1095, %r1118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1122, %r1114, %r1119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1125, %r828, %r1116, %r1106, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1130, %r1106, %r1129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1133, %r1125, %r1130;
	// end inline asm
	// begin inline asm
	mov.b32 %r1141, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1152, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1140, %r16152, -2004318072;
	// begin inline asm
	lop3.b32 %r1138, %r817, %r1140, %r1141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1143, %r1141, %r1142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1146, %r1138, %r1143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1149, %r828, %r1140, %r1152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1153, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1154, %r1152, %r1153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1157, %r1149, %r1154;
	// end inline asm
	shr.u32 	%r1162, %r1140, 8;
	// begin inline asm
	lop3.b32 %r1160, %r817, %r1162, %r1141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1165, %r1141, %r1164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1168, %r1160, %r1165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1171, %r828, %r1162, %r1152, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1176, %r1152, %r1175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1179, %r1171, %r1176;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1182, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1184, %r1182, %r824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1187, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1189, %r1187, %r835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1192, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1194, %r1192, %r846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1197, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1199, %r1197, %r857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1202, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1204, %r1202, %r870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1207, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1209, %r1207, %r881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1212, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1214, %r1212, %r892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1217, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1219, %r1217, %r903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1222, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1224, %r1222, %r916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1227, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1229, %r1227, %r927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1232, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1234, %r1232, %r938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1237, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1239, %r1237, %r949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1242, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1244, %r1242, %r962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1247, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1249, %r1247, %r973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1252, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1254, %r1252, %r984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1257, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1259, %r1257, %r995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1262, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1264, %r1262, %r1008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1267, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1269, %r1267, %r1019;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1272, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1274, %r1272, %r1030;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1277, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1279, %r1277, %r1041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1282, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1284, %r1282, %r1054;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1287, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1289, %r1287, %r1065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1292, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1294, %r1292, %r1076;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1297, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1299, %r1297, %r1087;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1302, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1304, %r1302, %r1100;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1307, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1309, %r1307, %r1111;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1312, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1314, %r1312, %r1122;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1317, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1319, %r1317, %r1133;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1322, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1324, %r1322, %r1146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1327, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1329, %r1327, %r1157;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1332, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1334, %r1332, %r1168;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1337, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1339, %r1337, %r1179;
	// end inline asm
	// begin inline asm
	mov.b32 %r1347, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1358, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1346, %r16286, -2004318072;
	// begin inline asm
	lop3.b32 %r1344, %r817, %r1346, %r1347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1348, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1349, %r1347, %r1348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1352, %r1344, %r1349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1355, %r828, %r1346, %r1358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1359, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1360, %r1358, %r1359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1363, %r1355, %r1360;
	// end inline asm
	shr.u32 	%r1368, %r1346, 8;
	// begin inline asm
	lop3.b32 %r1366, %r817, %r1368, %r1347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1371, %r1347, %r1370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1374, %r1366, %r1371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1377, %r828, %r1368, %r1358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1381, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1382, %r1358, %r1381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1385, %r1377, %r1382;
	// end inline asm
	// begin inline asm
	mov.b32 %r1393, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1404, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1392, %r16287, -2004318072;
	// begin inline asm
	lop3.b32 %r1390, %r817, %r1392, %r1393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1394, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1395, %r1393, %r1394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1398, %r1390, %r1395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1401, %r828, %r1392, %r1404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1405, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1406, %r1404, %r1405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1409, %r1401, %r1406;
	// end inline asm
	shr.u32 	%r1414, %r1392, 8;
	// begin inline asm
	lop3.b32 %r1412, %r817, %r1414, %r1393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1416, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1417, %r1393, %r1416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1420, %r1412, %r1417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1423, %r828, %r1414, %r1404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1427, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1428, %r1404, %r1427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1431, %r1423, %r1428;
	// end inline asm
	// begin inline asm
	mov.b32 %r1439, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1450, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1438, %r16288, -2004318072;
	// begin inline asm
	lop3.b32 %r1436, %r817, %r1438, %r1439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1441, %r1439, %r1440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1444, %r1436, %r1441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1447, %r828, %r1438, %r1450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1451, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1452, %r1450, %r1451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1455, %r1447, %r1452;
	// end inline asm
	shr.u32 	%r1460, %r1438, 8;
	// begin inline asm
	lop3.b32 %r1458, %r817, %r1460, %r1439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1463, %r1439, %r1462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1466, %r1458, %r1463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1469, %r828, %r1460, %r1450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1473, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1474, %r1450, %r1473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1477, %r1469, %r1474;
	// end inline asm
	// begin inline asm
	mov.b32 %r1485, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1496, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1484, %r16289, -2004318072;
	// begin inline asm
	lop3.b32 %r1482, %r817, %r1484, %r1485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1487, %r1485, %r1486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1490, %r1482, %r1487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1493, %r828, %r1484, %r1496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1497, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1498, %r1496, %r1497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1501, %r1493, %r1498;
	// end inline asm
	shr.u32 	%r1506, %r1484, 8;
	// begin inline asm
	lop3.b32 %r1504, %r817, %r1506, %r1485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1509, %r1485, %r1508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1512, %r1504, %r1509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1515, %r828, %r1506, %r1496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1519, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1520, %r1496, %r1519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1523, %r1515, %r1520;
	// end inline asm
	// begin inline asm
	mov.b32 %r1531, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1542, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1530, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r1528, %r817, %r1530, %r1531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1532, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1533, %r1531, %r1532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1536, %r1528, %r1533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1539, %r828, %r1530, %r1542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1543, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1544, %r1542, %r1543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1547, %r1539, %r1544;
	// end inline asm
	shr.u32 	%r1552, %r1530, 8;
	// begin inline asm
	lop3.b32 %r1550, %r817, %r1552, %r1531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1554, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1555, %r1531, %r1554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1558, %r1550, %r1555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1561, %r828, %r1552, %r1542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1565, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1566, %r1542, %r1565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1569, %r1561, %r1566;
	// end inline asm
	// begin inline asm
	mov.b32 %r1577, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1588, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1576, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r1574, %r817, %r1576, %r1577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1578, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1579, %r1577, %r1578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1582, %r1574, %r1579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1585, %r828, %r1576, %r1588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1589, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1590, %r1588, %r1589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1593, %r1585, %r1590;
	// end inline asm
	shr.u32 	%r1598, %r1576, 8;
	// begin inline asm
	lop3.b32 %r1596, %r817, %r1598, %r1577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1600, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1601, %r1577, %r1600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1604, %r1596, %r1601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1607, %r828, %r1598, %r1588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1611, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1612, %r1588, %r1611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1615, %r1607, %r1612;
	// end inline asm
	// begin inline asm
	mov.b32 %r1623, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1634, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1622, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r1620, %r817, %r1622, %r1623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1624, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1625, %r1623, %r1624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1628, %r1620, %r1625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1631, %r828, %r1622, %r1634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1635, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1636, %r1634, %r1635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1639, %r1631, %r1636;
	// end inline asm
	shr.u32 	%r1644, %r1622, 8;
	// begin inline asm
	lop3.b32 %r1642, %r817, %r1644, %r1623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1646, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1647, %r1623, %r1646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1650, %r1642, %r1647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1653, %r828, %r1644, %r1634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1657, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1658, %r1634, %r1657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1661, %r1653, %r1658;
	// end inline asm
	// begin inline asm
	mov.b32 %r1669, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1680, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1668, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r1666, %r817, %r1668, %r1669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1670, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1671, %r1669, %r1670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1674, %r1666, %r1671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1677, %r828, %r1668, %r1680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1681, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1682, %r1680, %r1681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1685, %r1677, %r1682;
	// end inline asm
	shr.u32 	%r1690, %r1668, 8;
	// begin inline asm
	lop3.b32 %r1688, %r817, %r1690, %r1669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1692, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1693, %r1669, %r1692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1696, %r1688, %r1693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1699, %r828, %r1690, %r1680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1703, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1704, %r1680, %r1703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1707, %r1699, %r1704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1710, %r264, %r1352, %r1184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1714, %r264, %r1363, %r1189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1718, %r264, %r1374, %r1194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1722, %r264, %r1385, %r1199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1726, %r264, %r1398, %r1204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1730, %r264, %r1409, %r1209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1734, %r264, %r1420, %r1214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1738, %r264, %r1431, %r1219;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1742, %r264, %r1444, %r1224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1746, %r264, %r1455, %r1229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1750, %r264, %r1466, %r1234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1754, %r264, %r1477, %r1239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1758, %r264, %r1490, %r1244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1762, %r264, %r1501, %r1249;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1766, %r264, %r1512, %r1254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1770, %r264, %r1523, %r1259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1774, %r282, %r1536, %r1264;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1778, %r282, %r1547, %r1269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1782, %r282, %r1558, %r1274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1786, %r282, %r1569, %r1279;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1790, %r282, %r1582, %r1284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1794, %r282, %r1593, %r1289;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1798, %r282, %r1604, %r1294;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1802, %r282, %r1615, %r1299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1806, %r282, %r1628, %r1304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1810, %r282, %r1639, %r1309;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1814, %r282, %r1650, %r1314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1818, %r282, %r1661, %r1319;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1822, %r282, %r1674, %r1324;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1826, %r282, %r1685, %r1329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1830, %r282, %r1696, %r1334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1834, %r282, %r1707, %r1339;
	// end inline asm
	// begin inline asm
	mov.b32 %r1843, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1854, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1842, %r16290, -2004318072;
	// begin inline asm
	lop3.b32 %r1840, %r817, %r1842, %r1843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1844, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1845, %r1843, %r1844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1848, %r1840, %r1845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1851, %r828, %r1842, %r1854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1855, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1856, %r1854, %r1855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1859, %r1851, %r1856;
	// end inline asm
	shr.u32 	%r1864, %r1842, 8;
	// begin inline asm
	lop3.b32 %r1862, %r817, %r1864, %r1843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1866, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1867, %r1843, %r1866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1870, %r1862, %r1867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1873, %r828, %r1864, %r1854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1878, %r1854, %r1877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1881, %r1873, %r1878;
	// end inline asm
	// begin inline asm
	mov.b32 %r1889, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1900, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1888, %r16291, -2004318072;
	// begin inline asm
	lop3.b32 %r1886, %r817, %r1888, %r1889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1890, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1891, %r1889, %r1890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1894, %r1886, %r1891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1897, %r828, %r1888, %r1900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1901, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1902, %r1900, %r1901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1905, %r1897, %r1902;
	// end inline asm
	shr.u32 	%r1910, %r1888, 8;
	// begin inline asm
	lop3.b32 %r1908, %r817, %r1910, %r1889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1912, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1913, %r1889, %r1912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1916, %r1908, %r1913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1919, %r828, %r1910, %r1900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1924, %r1900, %r1923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1927, %r1919, %r1924;
	// end inline asm
	// begin inline asm
	mov.b32 %r1935, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1946, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1934, %r16292, -2004318072;
	// begin inline asm
	lop3.b32 %r1932, %r817, %r1934, %r1935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1937, %r1935, %r1936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1940, %r1932, %r1937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1943, %r828, %r1934, %r1946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1947, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1948, %r1946, %r1947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1951, %r1943, %r1948;
	// end inline asm
	shr.u32 	%r1956, %r1934, 8;
	// begin inline asm
	lop3.b32 %r1954, %r817, %r1956, %r1935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1959, %r1935, %r1958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1962, %r1954, %r1959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1965, %r828, %r1956, %r1946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1970, %r1946, %r1969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1973, %r1965, %r1970;
	// end inline asm
	// begin inline asm
	mov.b32 %r1981, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r1992, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r1980, %r16293, -2004318072;
	// begin inline asm
	lop3.b32 %r1978, %r817, %r1980, %r1981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1983, %r1981, %r1982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1986, %r1978, %r1983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1989, %r828, %r1980, %r1992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1993, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1994, %r1992, %r1993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1997, %r1989, %r1994;
	// end inline asm
	shr.u32 	%r2002, %r1980, 8;
	// begin inline asm
	lop3.b32 %r2000, %r817, %r2002, %r1981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2005, %r1981, %r2004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2008, %r2000, %r2005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2011, %r828, %r2002, %r1992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2016, %r1992, %r2015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2019, %r2011, %r2016;
	// end inline asm
	// begin inline asm
	mov.b32 %r2027, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2038, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2026, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r2024, %r817, %r2026, %r2027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2029, %r2027, %r2028;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2032, %r2024, %r2029;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2035, %r828, %r2026, %r2038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2039, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2040, %r2038, %r2039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2043, %r2035, %r2040;
	// end inline asm
	shr.u32 	%r2048, %r2026, 8;
	// begin inline asm
	lop3.b32 %r2046, %r817, %r2048, %r2027, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2050, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2051, %r2027, %r2050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2054, %r2046, %r2051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2057, %r828, %r2048, %r2038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2061, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2062, %r2038, %r2061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2065, %r2057, %r2062;
	// end inline asm
	// begin inline asm
	mov.b32 %r2073, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2084, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2072, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r2070, %r817, %r2072, %r2073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2075, %r2073, %r2074;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2078, %r2070, %r2075;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2081, %r828, %r2072, %r2084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2085, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2086, %r2084, %r2085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2089, %r2081, %r2086;
	// end inline asm
	shr.u32 	%r2094, %r2072, 8;
	// begin inline asm
	lop3.b32 %r2092, %r817, %r2094, %r2073, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2096, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2097, %r2073, %r2096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2100, %r2092, %r2097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2103, %r828, %r2094, %r2084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2107, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2108, %r2084, %r2107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2111, %r2103, %r2108;
	// end inline asm
	// begin inline asm
	mov.b32 %r2119, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2130, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2118, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r2116, %r817, %r2118, %r2119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2121, %r2119, %r2120;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2124, %r2116, %r2121;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2127, %r828, %r2118, %r2130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2131, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2132, %r2130, %r2131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2135, %r2127, %r2132;
	// end inline asm
	shr.u32 	%r2140, %r2118, 8;
	// begin inline asm
	lop3.b32 %r2138, %r817, %r2140, %r2119, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2142, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2143, %r2119, %r2142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2146, %r2138, %r2143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2149, %r828, %r2140, %r2130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2153, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2154, %r2130, %r2153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2157, %r2149, %r2154;
	// end inline asm
	// begin inline asm
	mov.b32 %r2165, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2176, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2164, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r2162, %r817, %r2164, %r2165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2167, %r2165, %r2166;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2170, %r2162, %r2167;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2173, %r828, %r2164, %r2176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2177, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2178, %r2176, %r2177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2181, %r2173, %r2178;
	// end inline asm
	shr.u32 	%r2186, %r2164, 8;
	// begin inline asm
	lop3.b32 %r2184, %r817, %r2186, %r2165, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2188, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2189, %r2165, %r2188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2192, %r2184, %r2189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2195, %r828, %r2186, %r2176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2199, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2200, %r2176, %r2199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2203, %r2195, %r2200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2206, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2208, %r2206, %r1848, %r1710;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2212, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2214, %r2212, %r1859, %r1714;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2218, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2220, %r2218, %r1870, %r1718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2224, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2226, %r2224, %r1881, %r1722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2230, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2232, %r2230, %r1894, %r1726;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2236, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2238, %r2236, %r1905, %r1730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2242, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2244, %r2242, %r1916, %r1734;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2248, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2250, %r2248, %r1927, %r1738;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2254, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2256, %r2254, %r1940, %r1742;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2260, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2262, %r2260, %r1951, %r1746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2266, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2268, %r2266, %r1962, %r1750;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2272, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2274, %r2272, %r1973, %r1754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2278, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2280, %r2278, %r1986, %r1758;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2284, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2286, %r2284, %r1997, %r1762;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2290, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2292, %r2290, %r2008, %r1766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2296, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2298, %r2296, %r2019, %r1770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2302, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2304, %r2302, %r2032, %r1774;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2308, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2310, %r2308, %r2043, %r1778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2314, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2316, %r2314, %r2054, %r1782;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2320, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2322, %r2320, %r2065, %r1786;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2326, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2328, %r2326, %r2078, %r1790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2332, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2334, %r2332, %r2089, %r1794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2338, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2340, %r2338, %r2100, %r1798;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2344, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2346, %r2344, %r2111, %r1802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2350, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2352, %r2350, %r2124, %r1806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2356, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2358, %r2356, %r2135, %r1810;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2362, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2364, %r2362, %r2146, %r1814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2368, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2370, %r2368, %r2157, %r1818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2374, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2376, %r2374, %r2170, %r1822;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2380, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2382, %r2380, %r2181, %r1826;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2386, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2388, %r2386, %r2192, %r1830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2392, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2394, %r2392, %r2203, %r1834;
	// end inline asm
	// begin inline asm
	mov.b32 %r2403, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2414, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2402, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r2400, %r817, %r2402, %r2403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2404, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2405, %r2403, %r2404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2408, %r2400, %r2405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2411, %r828, %r2402, %r2414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2415, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2416, %r2414, %r2415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2419, %r2411, %r2416;
	// end inline asm
	shr.u32 	%r2424, %r2402, 8;
	// begin inline asm
	lop3.b32 %r2422, %r817, %r2424, %r2403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2426, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2427, %r2403, %r2426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2430, %r2422, %r2427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2433, %r828, %r2424, %r2414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2437, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2438, %r2414, %r2437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2441, %r2433, %r2438;
	// end inline asm
	// begin inline asm
	mov.b32 %r2449, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2460, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2448, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r2446, %r817, %r2448, %r2449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2450, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2451, %r2449, %r2450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2454, %r2446, %r2451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2457, %r828, %r2448, %r2460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2461, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2462, %r2460, %r2461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2465, %r2457, %r2462;
	// end inline asm
	shr.u32 	%r2470, %r2448, 8;
	// begin inline asm
	lop3.b32 %r2468, %r817, %r2470, %r2449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2472, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2473, %r2449, %r2472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2476, %r2468, %r2473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2479, %r828, %r2470, %r2460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2483, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2484, %r2460, %r2483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2487, %r2479, %r2484;
	// end inline asm
	// begin inline asm
	mov.b32 %r2495, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2506, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2494, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r2492, %r817, %r2494, %r2495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2497, %r2495, %r2496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2500, %r2492, %r2497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2503, %r828, %r2494, %r2506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2507, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2508, %r2506, %r2507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2511, %r2503, %r2508;
	// end inline asm
	shr.u32 	%r2516, %r2494, 8;
	// begin inline asm
	lop3.b32 %r2514, %r817, %r2516, %r2495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2518, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2519, %r2495, %r2518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2522, %r2514, %r2519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2525, %r828, %r2516, %r2506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2529, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2530, %r2506, %r2529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2533, %r2525, %r2530;
	// end inline asm
	// begin inline asm
	mov.b32 %r2541, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2552, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2540, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r2538, %r817, %r2540, %r2541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2543, %r2541, %r2542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2546, %r2538, %r2543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2549, %r828, %r2540, %r2552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2553, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2554, %r2552, %r2553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2557, %r2549, %r2554;
	// end inline asm
	shr.u32 	%r2562, %r2540, 8;
	// begin inline asm
	lop3.b32 %r2560, %r817, %r2562, %r2541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2564, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2565, %r2541, %r2564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2568, %r2560, %r2565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2571, %r828, %r2562, %r2552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2575, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2576, %r2552, %r2575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2579, %r2571, %r2576;
	// end inline asm
	// begin inline asm
	mov.b32 %r2587, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2598, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2586, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r2584, %r817, %r2586, %r2587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2588, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2589, %r2587, %r2588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2592, %r2584, %r2589;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2595, %r828, %r2586, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2599, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2600, %r2598, %r2599;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2603, %r2595, %r2600;
	// end inline asm
	shr.u32 	%r2608, %r2586, 8;
	// begin inline asm
	lop3.b32 %r2606, %r817, %r2608, %r2587, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2610, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2611, %r2587, %r2610;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2614, %r2606, %r2611;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2617, %r828, %r2608, %r2598, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2621, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2622, %r2598, %r2621;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2625, %r2617, %r2622;
	// end inline asm
	// begin inline asm
	mov.b32 %r2633, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2644, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2632, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r2630, %r817, %r2632, %r2633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2635, %r2633, %r2634;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2638, %r2630, %r2635;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2641, %r828, %r2632, %r2644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2645, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2646, %r2644, %r2645;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2649, %r2641, %r2646;
	// end inline asm
	shr.u32 	%r2654, %r2632, 8;
	// begin inline asm
	lop3.b32 %r2652, %r817, %r2654, %r2633, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2656, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2657, %r2633, %r2656;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2660, %r2652, %r2657;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2663, %r828, %r2654, %r2644, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2667, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2668, %r2644, %r2667;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2671, %r2663, %r2668;
	// end inline asm
	// begin inline asm
	mov.b32 %r2679, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2690, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2678, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r2676, %r817, %r2678, %r2679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2681, %r2679, %r2680;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2684, %r2676, %r2681;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2687, %r828, %r2678, %r2690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2691, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2692, %r2690, %r2691;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2695, %r2687, %r2692;
	// end inline asm
	shr.u32 	%r2700, %r2678, 8;
	// begin inline asm
	lop3.b32 %r2698, %r817, %r2700, %r2679, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2702, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2703, %r2679, %r2702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2706, %r2698, %r2703;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2709, %r828, %r2700, %r2690, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2713, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2714, %r2690, %r2713;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2717, %r2709, %r2714;
	// end inline asm
	// begin inline asm
	mov.b32 %r2725, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r2736, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r2724, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r2722, %r817, %r2724, %r2725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2727, %r2725, %r2726;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2730, %r2722, %r2727;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2733, %r828, %r2724, %r2736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2737, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2738, %r2736, %r2737;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2741, %r2733, %r2738;
	// end inline asm
	shr.u32 	%r2746, %r2724, 8;
	// begin inline asm
	lop3.b32 %r2744, %r817, %r2746, %r2725, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2748, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2749, %r2725, %r2748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2752, %r2744, %r2749;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2755, %r828, %r2746, %r2736, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2759, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2760, %r2736, %r2759;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2763, %r2755, %r2760;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2901, %r336, %r2408, %r2208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2898, %r336, %r2419, %r2214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2910, %r336, %r2430, %r2220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2907, %r336, %r2441, %r2226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2919, %r336, %r2454, %r2232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2916, %r336, %r2465, %r2238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2928, %r336, %r2476, %r2244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2925, %r336, %r2487, %r2250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2937, %r336, %r2500, %r2256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2934, %r336, %r2511, %r2262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2946, %r336, %r2522, %r2268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2943, %r336, %r2533, %r2274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2955, %r336, %r2546, %r2280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2952, %r336, %r2557, %r2286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2964, %r336, %r2568, %r2292;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2961, %r336, %r2579, %r2298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2973, %r354, %r2592, %r2304;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2970, %r354, %r2603, %r2310;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2982, %r354, %r2614, %r2316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2979, %r354, %r2625, %r2322;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2991, %r354, %r2638, %r2328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2988, %r354, %r2649, %r2334;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3000, %r354, %r2660, %r2340;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2997, %r354, %r2671, %r2346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3009, %r354, %r2684, %r2352;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3006, %r354, %r2695, %r2358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3018, %r354, %r2706, %r2364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3015, %r354, %r2717, %r2370;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3027, %r354, %r2730, %r2376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3024, %r354, %r2741, %r2382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3036, %r354, %r2752, %r2388;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3033, %r354, %r2763, %r2394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2894, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2896, %r2894, %r2898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2899, %r393, %r2901, %r2896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2903, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2905, %r2903, %r2907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2908, %r393, %r2910, %r2905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2912, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2914, %r2912, %r2916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2917, %r393, %r2919, %r2914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2921, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2923, %r2921, %r2925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2926, %r393, %r2928, %r2923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2930, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2932, %r2930, %r2934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2935, %r393, %r2937, %r2932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2939, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2941, %r2939, %r2943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2944, %r393, %r2946, %r2941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2948, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2950, %r2948, %r2952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2953, %r393, %r2955, %r2950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2957, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2959, %r2957, %r2961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2962, %r393, %r2964, %r2959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2966, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2968, %r2966, %r2970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2971, %r396, %r2973, %r2968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2975, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2977, %r2975, %r2979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r396, %r2982, %r2977;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2984, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2986, %r2984, %r2988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r396, %r2991, %r2986;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2993, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2995, %r2993, %r2997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r396, %r3000, %r2995;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3002, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3004, %r3002, %r3006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r396, %r3009, %r3004;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3011, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3013, %r3011, %r3015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r396, %r3018, %r3013;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3020, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3022, %r3020, %r3024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r396, %r3027, %r3022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3029, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3031, %r3029, %r3033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r396, %r3036, %r3031;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3038, %r399, %r2901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3041, %r393, %r2898, %r3038;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3045, %r399, %r2910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3048, %r393, %r2907, %r3045;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3052, %r399, %r2919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r393, %r2916, %r3052;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3059, %r399, %r2928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r393, %r2925, %r3059;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3066, %r399, %r2937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3069, %r393, %r2934, %r3066;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3073, %r399, %r2946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r393, %r2943, %r3073;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r399, %r2955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r393, %r2952, %r3080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3087, %r399, %r2964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r393, %r2961, %r3087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3094, %r402, %r2973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r396, %r2970, %r3094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3101, %r402, %r2982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r396, %r2979, %r3101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3108, %r402, %r2991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r396, %r2988, %r3108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3115, %r402, %r3000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r396, %r2997, %r3115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3122, %r402, %r3009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r396, %r3006, %r3122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3129, %r402, %r3018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3132, %r396, %r3015, %r3129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3136, %r402, %r3027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3139, %r396, %r3024, %r3136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3143, %r402, %r3036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r396, %r3033, %r3143;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3317, %r3314}, {%r460, %r466, %r463, %r469}, {%r2899, %r3041}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3326, %r3323}, {%r460, %r466, %r463, %r469}, {%r2908, %r3048}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3335, %r3332}, {%r460, %r466, %r463, %r469}, {%r2917, %r3055}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3344, %r3341}, {%r460, %r466, %r463, %r469}, {%r2926, %r3062}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3353, %r3350}, {%r460, %r466, %r463, %r469}, {%r2935, %r3069}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3362, %r3359}, {%r460, %r466, %r463, %r469}, {%r2944, %r3076}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3371, %r3368}, {%r460, %r466, %r463, %r469}, {%r2953, %r3083}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3380, %r3377}, {%r460, %r466, %r463, %r469}, {%r2962, %r3090}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3389, %r3386}, {%r460, %r466, %r463, %r469}, {%r2971, %r3097}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3398, %r3395}, {%r460, %r466, %r463, %r469}, {%r2980, %r3104}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3407, %r3404}, {%r460, %r466, %r463, %r469}, {%r2989, %r3111}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3416, %r3413}, {%r460, %r466, %r463, %r469}, {%r2998, %r3118}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3425, %r3422}, {%r460, %r466, %r463, %r469}, {%r3007, %r3125}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3434, %r3431}, {%r460, %r466, %r463, %r469}, {%r3016, %r3132}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3443, %r3440}, {%r460, %r466, %r463, %r469}, {%r3025, %r3139}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3452, %r3449}, {%r460, %r466, %r463, %r469}, {%r3034, %r3146}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3310, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3312, %r3310, %r3314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3315, %r510, %r3317, %r3312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3319, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3321, %r3319, %r3323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3324, %r510, %r3326, %r3321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3328, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3330, %r3328, %r3332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3333, %r510, %r3335, %r3330;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3337, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3339, %r3337, %r3341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3342, %r510, %r3344, %r3339;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3346, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3348, %r3346, %r3350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3351, %r510, %r3353, %r3348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3355, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3357, %r3355, %r3359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3360, %r510, %r3362, %r3357;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3364, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3366, %r3364, %r3368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3369, %r510, %r3371, %r3366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3373, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3375, %r3373, %r3377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3378, %r510, %r3380, %r3375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3382, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3384, %r3382, %r3386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3387, %r510, %r3389, %r3384;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3391, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3393, %r3391, %r3395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3396, %r510, %r3398, %r3393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3400, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3402, %r3400, %r3404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3405, %r510, %r3407, %r3402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3409, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3411, %r3409, %r3413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3414, %r510, %r3416, %r3411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3418, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3420, %r3418, %r3422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3423, %r510, %r3425, %r3420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3427, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3429, %r3427, %r3431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3432, %r510, %r3434, %r3429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3436, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3438, %r3436, %r3440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3441, %r510, %r3443, %r3438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3445, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3447, %r3445, %r3449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3450, %r510, %r3452, %r3447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3454, %r513, %r3317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3457, %r510, %r3314, %r3454;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3461, %r513, %r3326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3464, %r510, %r3323, %r3461;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3468, %r513, %r3335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3471, %r510, %r3332, %r3468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3475, %r513, %r3344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r510, %r3341, %r3475;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3482, %r513, %r3353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3485, %r510, %r3350, %r3482;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3489, %r513, %r3362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3492, %r510, %r3359, %r3489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r513, %r3371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r510, %r3368, %r3496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r513, %r3380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r510, %r3377, %r3503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3510, %r513, %r3389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r510, %r3386, %r3510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r513, %r3398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r510, %r3395, %r3517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r513, %r3407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r510, %r3404, %r3524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r513, %r3416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r510, %r3413, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r513, %r3425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r510, %r3422, %r3538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3545, %r513, %r3434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r510, %r3431, %r3545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r513, %r3443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r510, %r3440, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r513, %r3452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r510, %r3449, %r3559;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3855, %r3858}, {%r548, %r554, %r551, %r557}, {%r3315, %r3457}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3861, %r3864}, {%r548, %r554, %r551, %r557}, {%r3324, %r3464}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3867, %r3870}, {%r548, %r554, %r551, %r557}, {%r3333, %r3471}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3873, %r3876}, {%r548, %r554, %r551, %r557}, {%r3342, %r3478}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3879, %r3882}, {%r548, %r554, %r551, %r557}, {%r3351, %r3485}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3885, %r3888}, {%r548, %r554, %r551, %r557}, {%r3360, %r3492}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3891, %r3894}, {%r548, %r554, %r551, %r557}, {%r3369, %r3499}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3897, %r3900}, {%r548, %r554, %r551, %r557}, {%r3378, %r3506}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3856, %r3859}, {%r548, %r554, %r551, %r557}, {%r3387, %r3513}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3862, %r3865}, {%r548, %r554, %r551, %r557}, {%r3396, %r3520}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3868, %r3871}, {%r548, %r554, %r551, %r557}, {%r3405, %r3527}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3874, %r3877}, {%r548, %r554, %r551, %r557}, {%r3414, %r3534}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3880, %r3883}, {%r548, %r554, %r551, %r557}, {%r3423, %r3541}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3886, %r3889}, {%r548, %r554, %r551, %r557}, {%r3432, %r3548}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3892, %r3895}, {%r548, %r554, %r551, %r557}, {%r3441, %r3555}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3898, %r3901}, {%r548, %r554, %r551, %r557}, {%r3450, %r3562}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3854, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3857, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3860, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3863, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3866, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3869, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3872, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3875, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3878, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3881, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3884, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3887, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3890, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3893, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3896, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3899, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3902, %r3855, %r3856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3905, %r3858, %r3859;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3908, %r3861, %r3862;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3911, %r3864, %r3865;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3914, %r3867, %r3868;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3917, %r3870, %r3871;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3920, %r3873, %r3874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3923, %r3876, %r3877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3926, %r3879, %r3880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3929, %r3882, %r3883;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3932, %r3885, %r3886;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3935, %r3888, %r3889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3938, %r3891, %r3892;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3941, %r3894, %r3895;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3944, %r3897, %r3898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3947, %r3900, %r3901;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3950, %r134, %r3854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3953, %r134, %r3857;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3956, %r134, %r3860;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3959, %r134, %r3863;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3962, %r134, %r3866;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3965, %r134, %r3869;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3968, %r134, %r3872;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3971, %r134, %r3875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3974, %r134, %r3878;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3977, %r134, %r3881;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3980, %r134, %r3884;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3983, %r134, %r3887;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3986, %r134, %r3890;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3989, %r134, %r3893;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3992, %r134, %r3896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3995, %r134, %r3899;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3998, %r135, %r3902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4001, %r135, %r3905;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4004, %r135, %r3908;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4007, %r135, %r3911;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4010, %r135, %r3914;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4013, %r135, %r3917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4016, %r135, %r3920;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4019, %r135, %r3923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4022, %r135, %r3926;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4025, %r135, %r3929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4028, %r135, %r3932;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4031, %r135, %r3935;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4034, %r135, %r3938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4037, %r135, %r3941;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4040, %r135, %r3944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4043, %r135, %r3947;
	// end inline asm
	mov.u16 	%rs412, -14592;
	// begin inline asm
	mov.b32 %r4046, {%rs412, %rs412};
	// end inline asm
	mov.u16 	%rs414, 18176;
	// begin inline asm
	mov.b32 %r4047, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4048, %r3950, %r4046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4051, %r4048, %r4047;
	// end inline asm
	// begin inline asm
	mov.b32 %r4054, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4055, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4056, %r3953, %r4054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4059, %r4056, %r4055;
	// end inline asm
	// begin inline asm
	mov.b32 %r4062, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4063, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4064, %r3956, %r4062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4067, %r4064, %r4063;
	// end inline asm
	// begin inline asm
	mov.b32 %r4070, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4071, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4072, %r3959, %r4070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4075, %r4072, %r4071;
	// end inline asm
	// begin inline asm
	mov.b32 %r4078, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4079, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4080, %r3962, %r4078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4083, %r4080, %r4079;
	// end inline asm
	// begin inline asm
	mov.b32 %r4086, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4087, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4088, %r3965, %r4086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4091, %r4088, %r4087;
	// end inline asm
	// begin inline asm
	mov.b32 %r4094, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4096, %r3968, %r4094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4099, %r4096, %r4095;
	// end inline asm
	// begin inline asm
	mov.b32 %r4102, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4104, %r3971, %r4102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4107, %r4104, %r4103;
	// end inline asm
	// begin inline asm
	mov.b32 %r4110, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4112, %r3974, %r4110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4115, %r4112, %r4111;
	// end inline asm
	// begin inline asm
	mov.b32 %r4118, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4120, %r3977, %r4118;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4123, %r4120, %r4119;
	// end inline asm
	// begin inline asm
	mov.b32 %r4126, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4128, %r3980, %r4126;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4131, %r4128, %r4127;
	// end inline asm
	// begin inline asm
	mov.b32 %r4134, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4136, %r3983, %r4134;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4139, %r4136, %r4135;
	// end inline asm
	// begin inline asm
	mov.b32 %r4142, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4144, %r3986, %r4142;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4147, %r4144, %r4143;
	// end inline asm
	// begin inline asm
	mov.b32 %r4150, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4152, %r3989, %r4150;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4155, %r4152, %r4151;
	// end inline asm
	// begin inline asm
	mov.b32 %r4158, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4160, %r3992, %r4158;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4163, %r4160, %r4159;
	// end inline asm
	// begin inline asm
	mov.b32 %r4166, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4168, %r3995, %r4166;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4171, %r4168, %r4167;
	// end inline asm
	// begin inline asm
	mov.b32 %r4174, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4176, %r3998, %r4174;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4179, %r4176, %r4175;
	// end inline asm
	// begin inline asm
	mov.b32 %r4182, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4184, %r4001, %r4182;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4187, %r4184, %r4183;
	// end inline asm
	// begin inline asm
	mov.b32 %r4190, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4192, %r4004, %r4190;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4195, %r4192, %r4191;
	// end inline asm
	// begin inline asm
	mov.b32 %r4198, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4200, %r4007, %r4198;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4203, %r4200, %r4199;
	// end inline asm
	// begin inline asm
	mov.b32 %r4206, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4208, %r4010, %r4206;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4211, %r4208, %r4207;
	// end inline asm
	// begin inline asm
	mov.b32 %r4214, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4216, %r4013, %r4214;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4219, %r4216, %r4215;
	// end inline asm
	// begin inline asm
	mov.b32 %r4222, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4224, %r4016, %r4222;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4227, %r4224, %r4223;
	// end inline asm
	// begin inline asm
	mov.b32 %r4230, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4232, %r4019, %r4230;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4235, %r4232, %r4231;
	// end inline asm
	// begin inline asm
	mov.b32 %r4238, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4240, %r4022, %r4238;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4243, %r4240, %r4239;
	// end inline asm
	// begin inline asm
	mov.b32 %r4246, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4248, %r4025, %r4246;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4251, %r4248, %r4247;
	// end inline asm
	// begin inline asm
	mov.b32 %r4254, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4256, %r4028, %r4254;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4259, %r4256, %r4255;
	// end inline asm
	// begin inline asm
	mov.b32 %r4262, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4264, %r4031, %r4262;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4267, %r4264, %r4263;
	// end inline asm
	// begin inline asm
	mov.b32 %r4270, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4272, %r4034, %r4270;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4275, %r4272, %r4271;
	// end inline asm
	// begin inline asm
	mov.b32 %r4278, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4280, %r4037, %r4278;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4283, %r4280, %r4279;
	// end inline asm
	// begin inline asm
	mov.b32 %r4286, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4288, %r4040, %r4286;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4291, %r4288, %r4287;
	// end inline asm
	// begin inline asm
	mov.b32 %r4294, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4296, %r4043, %r4294;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4299, %r4296, %r4295;
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4304, %r4305, %r4303;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4307, %r4051, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4310, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4311, %r4305, %r4310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4314, %r4059, %r4311;
	// end inline asm
	// begin inline asm
	mov.b32 %r4317, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4318, %r4305, %r4317;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4321, %r4067, %r4318;
	// end inline asm
	// begin inline asm
	mov.b32 %r4324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4325, %r4305, %r4324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4328, %r4075, %r4325;
	// end inline asm
	mov.u32 	%r4334, 25152;
	// begin inline asm
	prmt.b32 %r4331, %r4307, %r4321, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4335, %r4314, %r4328, %r4334;
	// end inline asm
	shl.b32 	%r4342, %r4335, 4;
	mov.u32 	%r4340, 252645135;
	// begin inline asm
	lop3.b32 %r4339, %r4340, %r4331, %r4342, 202;
	// end inline asm
	xor.b32  	%r16153, %r4339, -2004318072;
	// begin inline asm
	mov.b32 %r4346, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4345, %r4346, %r4344;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4348, %r4083, %r4345;
	// end inline asm
	// begin inline asm
	mov.b32 %r4351, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4352, %r4346, %r4351;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4355, %r4091, %r4352;
	// end inline asm
	// begin inline asm
	mov.b32 %r4358, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4359, %r4346, %r4358;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4362, %r4099, %r4359;
	// end inline asm
	// begin inline asm
	mov.b32 %r4365, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4366, %r4346, %r4365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4369, %r4107, %r4366;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4372, %r4348, %r4362, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4376, %r4355, %r4369, %r4334;
	// end inline asm
	shl.b32 	%r4383, %r4376, 4;
	// begin inline asm
	lop3.b32 %r4380, %r4340, %r4372, %r4383, 202;
	// end inline asm
	xor.b32  	%r16154, %r4380, -2004318072;
	// begin inline asm
	mov.b32 %r4387, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4385, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4387, %r4385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4115, %r4386;
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4387, %r4392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4123, %r4393;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4387, %r4399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4403, %r4131, %r4400;
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4387, %r4406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4139, %r4407;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4413, %r4389, %r4403, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4417, %r4396, %r4410, %r4334;
	// end inline asm
	shl.b32 	%r4424, %r4417, 4;
	// begin inline asm
	lop3.b32 %r4421, %r4340, %r4413, %r4424, 202;
	// end inline asm
	xor.b32  	%r16155, %r4421, -2004318072;
	// begin inline asm
	mov.b32 %r4428, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4426, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4428, %r4426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4147, %r4427;
	// end inline asm
	// begin inline asm
	mov.b32 %r4433, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4428, %r4433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4437, %r4155, %r4434;
	// end inline asm
	// begin inline asm
	mov.b32 %r4440, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4428, %r4440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4163, %r4441;
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4428, %r4447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4171, %r4448;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4454, %r4430, %r4444, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4458, %r4437, %r4451, %r4334;
	// end inline asm
	shl.b32 	%r4465, %r4458, 4;
	// begin inline asm
	lop3.b32 %r4462, %r4340, %r4454, %r4465, 202;
	// end inline asm
	xor.b32  	%r16156, %r4462, -2004318072;
	// begin inline asm
	mov.b32 %r4469, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4467, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4469, %r4467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4179, %r4468;
	// end inline asm
	// begin inline asm
	mov.b32 %r4474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4469, %r4474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4478, %r4187, %r4475;
	// end inline asm
	// begin inline asm
	mov.b32 %r4481, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4469, %r4481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4485, %r4195, %r4482;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4469, %r4488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4203, %r4489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4495, %r4471, %r4485, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4499, %r4478, %r4492, %r4334;
	// end inline asm
	shl.b32 	%r4506, %r4499, 4;
	// begin inline asm
	lop3.b32 %r4503, %r4340, %r4495, %r4506, 202;
	// end inline asm
	xor.b32  	%r16157, %r4503, -2004318072;
	// begin inline asm
	mov.b32 %r4510, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4510, %r4508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4211, %r4509;
	// end inline asm
	// begin inline asm
	mov.b32 %r4515, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4510, %r4515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4219, %r4516;
	// end inline asm
	// begin inline asm
	mov.b32 %r4522, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4510, %r4522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4227, %r4523;
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4510, %r4529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4235, %r4530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4536, %r4512, %r4526, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4540, %r4519, %r4533, %r4334;
	// end inline asm
	shl.b32 	%r4547, %r4540, 4;
	// begin inline asm
	lop3.b32 %r4544, %r4340, %r4536, %r4547, 202;
	// end inline asm
	xor.b32  	%r16158, %r4544, -2004318072;
	// begin inline asm
	mov.b32 %r4551, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4551, %r4549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4243, %r4550;
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4551, %r4556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4251, %r4557;
	// end inline asm
	// begin inline asm
	mov.b32 %r4563, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4551, %r4563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4259, %r4564;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4551, %r4570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4267, %r4571;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4577, %r4553, %r4567, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4581, %r4560, %r4574, %r4334;
	// end inline asm
	shl.b32 	%r4588, %r4581, 4;
	// begin inline asm
	lop3.b32 %r4585, %r4340, %r4577, %r4588, 202;
	// end inline asm
	xor.b32  	%r16159, %r4585, -2004318072;
	// begin inline asm
	mov.b32 %r4592, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4592, %r4590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4275, %r4591;
	// end inline asm
	// begin inline asm
	mov.b32 %r4597, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4592, %r4597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4283, %r4598;
	// end inline asm
	// begin inline asm
	mov.b32 %r4604, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4592, %r4604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4608, %r4291, %r4605;
	// end inline asm
	// begin inline asm
	mov.b32 %r4611, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4592, %r4611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4299, %r4612;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4618, %r4594, %r4608, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4622, %r4601, %r4615, %r4334;
	// end inline asm
	shl.b32 	%r4629, %r4622, 4;
	// begin inline asm
	lop3.b32 %r4626, %r4340, %r4618, %r4629, 202;
	// end inline asm
	xor.b32  	%r16160, %r4626, -2004318072;
	setp.eq.s32 	%p302, %r16317, 0;
	selp.b32 	%r16161, 0, 4161, %p302;
	add.s32 	%r16162, %r88, %r16161;
	mul.wide.u32 	%rd105, %r16162, 4;
	add.s64 	%rd106, %rd44, %rd105;
	st.shared.u32 	[%rd106], %r16153;
	add.s32 	%r16163, %r89, %r16161;
	mul.wide.u32 	%rd107, %r16163, 4;
	add.s64 	%rd108, %rd44, %rd107;
	st.shared.u32 	[%rd108], %r16154;
	add.s32 	%r16164, %r90, %r16161;
	mul.wide.u32 	%rd109, %r16164, 4;
	add.s64 	%rd110, %rd44, %rd109;
	st.shared.u32 	[%rd110], %r16155;
	add.s32 	%r16165, %r91, %r16161;
	mul.wide.u32 	%rd111, %r16165, 4;
	add.s64 	%rd112, %rd44, %rd111;
	st.shared.u32 	[%rd112], %r16156;
	add.s32 	%r16166, %r92, %r16161;
	mul.wide.u32 	%rd113, %r16166, 4;
	add.s64 	%rd114, %rd44, %rd113;
	st.shared.u32 	[%rd114], %r16157;
	add.s32 	%r16167, %r93, %r16161;
	mul.wide.u32 	%rd115, %r16167, 4;
	add.s64 	%rd116, %rd44, %rd115;
	st.shared.u32 	[%rd116], %r16158;
	add.s32 	%r16168, %r94, %r16161;
	mul.wide.u32 	%rd117, %r16168, 4;
	add.s64 	%rd118, %rd44, %rd117;
	st.shared.u32 	[%rd118], %r16159;
	add.s32 	%r16169, %r95, %r16161;
	mul.wide.u32 	%rd119, %r16169, 4;
	add.s64 	%rd120, %rd44, %rd119;
	st.shared.u32 	[%rd120], %r16160;
	ld.shared.u32 	%r16286, [%rd90];
	ld.shared.u32 	%r16287, [%rd92];
	ld.shared.u32 	%r16288, [%rd94];
	ld.shared.u32 	%r16289, [%rd96];
	ld.shared.u32 	%r16298, [%rd98];
	ld.shared.u32 	%r16299, [%rd100];
	ld.shared.u32 	%r16300, [%rd102];
	ld.shared.u32 	%r16301, [%rd104];
	// begin inline asm
	mov.b32 %r4635, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4634, %r16286, -2004318072;
	// begin inline asm
	lop3.b32 %r4632, %r817, %r4634, %r4635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4637, %r4635, %r4636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4640, %r4632, %r4637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4643, %r828, %r4634, %r4646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4647, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4648, %r4646, %r4647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4651, %r4643, %r4648;
	// end inline asm
	shr.u32 	%r4656, %r4634, 8;
	// begin inline asm
	lop3.b32 %r4654, %r817, %r4656, %r4635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4659, %r4635, %r4658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4662, %r4654, %r4659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4665, %r828, %r4656, %r4646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4669, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4670, %r4646, %r4669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4673, %r4665, %r4670;
	// end inline asm
	// begin inline asm
	mov.b32 %r4681, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4692, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4680, %r16287, -2004318072;
	// begin inline asm
	lop3.b32 %r4678, %r817, %r4680, %r4681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4683, %r4681, %r4682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4686, %r4678, %r4683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4689, %r828, %r4680, %r4692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4694, %r4692, %r4693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4697, %r4689, %r4694;
	// end inline asm
	shr.u32 	%r4702, %r4680, 8;
	// begin inline asm
	lop3.b32 %r4700, %r817, %r4702, %r4681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4704, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4705, %r4681, %r4704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4708, %r4700, %r4705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4711, %r828, %r4702, %r4692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4715, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4716, %r4692, %r4715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4719, %r4711, %r4716;
	// end inline asm
	// begin inline asm
	mov.b32 %r4727, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4738, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4726, %r16288, -2004318072;
	// begin inline asm
	lop3.b32 %r4724, %r817, %r4726, %r4727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4729, %r4727, %r4728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4732, %r4724, %r4729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4735, %r828, %r4726, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4739, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4740, %r4738, %r4739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4743, %r4735, %r4740;
	// end inline asm
	shr.u32 	%r4748, %r4726, 8;
	// begin inline asm
	lop3.b32 %r4746, %r817, %r4748, %r4727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4750, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4751, %r4727, %r4750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4754, %r4746, %r4751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4757, %r828, %r4748, %r4738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4761, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4762, %r4738, %r4761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4765, %r4757, %r4762;
	// end inline asm
	// begin inline asm
	mov.b32 %r4773, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4784, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4772, %r16289, -2004318072;
	// begin inline asm
	lop3.b32 %r4770, %r817, %r4772, %r4773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4774, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4775, %r4773, %r4774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4778, %r4770, %r4775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4781, %r828, %r4772, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4785, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4786, %r4784, %r4785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4789, %r4781, %r4786;
	// end inline asm
	shr.u32 	%r4794, %r4772, 8;
	// begin inline asm
	lop3.b32 %r4792, %r817, %r4794, %r4773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4797, %r4773, %r4796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4800, %r4792, %r4797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4803, %r828, %r4794, %r4784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4808, %r4784, %r4807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4811, %r4803, %r4808;
	// end inline asm
	// begin inline asm
	mov.b32 %r4819, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4830, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4818, %r16298, -2004318072;
	// begin inline asm
	lop3.b32 %r4816, %r817, %r4818, %r4819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4820, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4821, %r4819, %r4820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4824, %r4816, %r4821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4827, %r828, %r4818, %r4830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4832, %r4830, %r4831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4835, %r4827, %r4832;
	// end inline asm
	shr.u32 	%r4840, %r4818, 8;
	// begin inline asm
	lop3.b32 %r4838, %r817, %r4840, %r4819, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4843, %r4819, %r4842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4846, %r4838, %r4843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4849, %r828, %r4840, %r4830, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4854, %r4830, %r4853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4857, %r4849, %r4854;
	// end inline asm
	// begin inline asm
	mov.b32 %r4865, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4876, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4864, %r16299, -2004318072;
	// begin inline asm
	lop3.b32 %r4862, %r817, %r4864, %r4865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4866, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4867, %r4865, %r4866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4870, %r4862, %r4867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4873, %r828, %r4864, %r4876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4878, %r4876, %r4877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4881, %r4873, %r4878;
	// end inline asm
	shr.u32 	%r4886, %r4864, 8;
	// begin inline asm
	lop3.b32 %r4884, %r817, %r4886, %r4865, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4889, %r4865, %r4888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4892, %r4884, %r4889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4895, %r828, %r4886, %r4876, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4900, %r4876, %r4899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4903, %r4895, %r4900;
	// end inline asm
	// begin inline asm
	mov.b32 %r4911, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4922, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4910, %r16300, -2004318072;
	// begin inline asm
	lop3.b32 %r4908, %r817, %r4910, %r4911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4912, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4913, %r4911, %r4912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4916, %r4908, %r4913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4919, %r828, %r4910, %r4922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4924, %r4922, %r4923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4927, %r4919, %r4924;
	// end inline asm
	shr.u32 	%r4932, %r4910, 8;
	// begin inline asm
	lop3.b32 %r4930, %r817, %r4932, %r4911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4935, %r4911, %r4934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4938, %r4930, %r4935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4941, %r828, %r4932, %r4922, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4946, %r4922, %r4945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4949, %r4941, %r4946;
	// end inline asm
	// begin inline asm
	mov.b32 %r4957, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r4968, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r4956, %r16301, -2004318072;
	// begin inline asm
	lop3.b32 %r4954, %r817, %r4956, %r4957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4959, %r4957, %r4958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4962, %r4954, %r4959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4965, %r828, %r4956, %r4968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4970, %r4968, %r4969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4973, %r4965, %r4970;
	// end inline asm
	shr.u32 	%r4978, %r4956, 8;
	// begin inline asm
	lop3.b32 %r4976, %r817, %r4978, %r4957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4981, %r4957, %r4980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4984, %r4976, %r4981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4987, %r828, %r4978, %r4968, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4992, %r4968, %r4991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4995, %r4987, %r4992;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r4998, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5000, %r4998, %r4640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5003, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5005, %r5003, %r4651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5008, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5010, %r5008, %r4662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5013, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5015, %r5013, %r4673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5018, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5020, %r5018, %r4686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5023, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5025, %r5023, %r4697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5028, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5030, %r5028, %r4708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5033, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5035, %r5033, %r4719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5038, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5040, %r5038, %r4732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5043, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5045, %r5043, %r4743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5048, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5050, %r5048, %r4754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5053, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5055, %r5053, %r4765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5058, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5060, %r5058, %r4778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5063, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5065, %r5063, %r4789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5068, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5070, %r5068, %r4800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5073, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5075, %r5073, %r4811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5078, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5080, %r5078, %r4824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5083, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5085, %r5083, %r4835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5088, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5090, %r5088, %r4846;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5093, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5095, %r5093, %r4857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5098, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5100, %r5098, %r4870;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5103, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5105, %r5103, %r4881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5108, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5110, %r5108, %r4892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5113, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5115, %r5113, %r4903;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5118, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5120, %r5118, %r4916;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5123, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5125, %r5123, %r4927;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5128, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5130, %r5128, %r4938;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5133, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5135, %r5133, %r4949;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5138, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5140, %r5138, %r4962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5143, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5145, %r5143, %r4973;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5148, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5150, %r5148, %r4984;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5153, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5155, %r5153, %r4995;
	// end inline asm
	// begin inline asm
	mov.b32 %r5163, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5174, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5160, %r817, %r1842, %r5163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5165, %r5163, %r5164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5168, %r5160, %r5165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5171, %r828, %r1842, %r5174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5176, %r5174, %r5175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5179, %r5171, %r5176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5182, %r817, %r1864, %r5163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5187, %r5163, %r5186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5190, %r5182, %r5187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5193, %r828, %r1864, %r5174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5197, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5198, %r5174, %r5197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5201, %r5193, %r5198;
	// end inline asm
	// begin inline asm
	mov.b32 %r5209, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5220, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5206, %r817, %r1888, %r5209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5211, %r5209, %r5210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5214, %r5206, %r5211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5217, %r828, %r1888, %r5220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5221, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5222, %r5220, %r5221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5225, %r5217, %r5222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5228, %r817, %r1910, %r5209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5233, %r5209, %r5232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5236, %r5228, %r5233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5239, %r828, %r1910, %r5220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5244, %r5220, %r5243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5247, %r5239, %r5244;
	// end inline asm
	// begin inline asm
	mov.b32 %r5255, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5266, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5252, %r817, %r1934, %r5255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5257, %r5255, %r5256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5260, %r5252, %r5257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5263, %r828, %r1934, %r5266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5267, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5268, %r5266, %r5267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5271, %r5263, %r5268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5274, %r817, %r1956, %r5255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5279, %r5255, %r5278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5282, %r5274, %r5279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5285, %r828, %r1956, %r5266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5289, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5290, %r5266, %r5289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5293, %r5285, %r5290;
	// end inline asm
	// begin inline asm
	mov.b32 %r5301, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5312, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5298, %r817, %r1980, %r5301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5302, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5303, %r5301, %r5302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5306, %r5298, %r5303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5309, %r828, %r1980, %r5312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5313, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5314, %r5312, %r5313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5317, %r5309, %r5314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5320, %r817, %r2002, %r5301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5325, %r5301, %r5324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5328, %r5320, %r5325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5331, %r828, %r2002, %r5312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5335, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5336, %r5312, %r5335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5339, %r5331, %r5336;
	// end inline asm
	// begin inline asm
	mov.b32 %r5347, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5358, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5344, %r817, %r2026, %r5347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5348, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5349, %r5347, %r5348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5352, %r5344, %r5349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5355, %r828, %r2026, %r5358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5359, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5360, %r5358, %r5359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5363, %r5355, %r5360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5366, %r817, %r2048, %r5347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5370, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5371, %r5347, %r5370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5374, %r5366, %r5371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5377, %r828, %r2048, %r5358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5381, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5382, %r5358, %r5381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5385, %r5377, %r5382;
	// end inline asm
	// begin inline asm
	mov.b32 %r5393, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5404, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5390, %r817, %r2072, %r5393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5394, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5395, %r5393, %r5394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5398, %r5390, %r5395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5401, %r828, %r2072, %r5404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5405, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5406, %r5404, %r5405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5409, %r5401, %r5406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5412, %r817, %r2094, %r5393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5416, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5417, %r5393, %r5416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5420, %r5412, %r5417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5423, %r828, %r2094, %r5404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5427, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5428, %r5404, %r5427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5431, %r5423, %r5428;
	// end inline asm
	// begin inline asm
	mov.b32 %r5439, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5450, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5436, %r817, %r2118, %r5439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5440, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5441, %r5439, %r5440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5444, %r5436, %r5441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5447, %r828, %r2118, %r5450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5451, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5452, %r5450, %r5451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5455, %r5447, %r5452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5458, %r817, %r2140, %r5439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5462, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5463, %r5439, %r5462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5466, %r5458, %r5463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5469, %r828, %r2140, %r5450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5473, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5474, %r5450, %r5473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5477, %r5469, %r5474;
	// end inline asm
	// begin inline asm
	mov.b32 %r5485, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5496, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5482, %r817, %r2164, %r5485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5486, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5487, %r5485, %r5486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5490, %r5482, %r5487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5493, %r828, %r2164, %r5496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5497, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5498, %r5496, %r5497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5501, %r5493, %r5498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5504, %r817, %r2186, %r5485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5508, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5509, %r5485, %r5508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5512, %r5504, %r5509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5515, %r828, %r2186, %r5496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5519, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5520, %r5496, %r5519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5523, %r5515, %r5520;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5526, %r264, %r5168, %r5000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5530, %r264, %r5179, %r5005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5534, %r264, %r5190, %r5010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5538, %r264, %r5201, %r5015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5542, %r264, %r5214, %r5020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5546, %r264, %r5225, %r5025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5550, %r264, %r5236, %r5030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5554, %r264, %r5247, %r5035;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5558, %r264, %r5260, %r5040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5562, %r264, %r5271, %r5045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5566, %r264, %r5282, %r5050;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5570, %r264, %r5293, %r5055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5574, %r264, %r5306, %r5060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5578, %r264, %r5317, %r5065;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5582, %r264, %r5328, %r5070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5586, %r264, %r5339, %r5075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5590, %r282, %r5352, %r5080;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5594, %r282, %r5363, %r5085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5598, %r282, %r5374, %r5090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5602, %r282, %r5385, %r5095;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5606, %r282, %r5398, %r5100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5610, %r282, %r5409, %r5105;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5614, %r282, %r5420, %r5110;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5618, %r282, %r5431, %r5115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5622, %r282, %r5444, %r5120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5626, %r282, %r5455, %r5125;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5630, %r282, %r5466, %r5130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5634, %r282, %r5477, %r5135;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5638, %r282, %r5490, %r5140;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5642, %r282, %r5501, %r5145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5646, %r282, %r5512, %r5150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5650, %r282, %r5523, %r5155;
	// end inline asm
	// begin inline asm
	mov.b32 %r5659, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5670, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5656, %r817, %r2402, %r5659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5660, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5661, %r5659, %r5660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5664, %r5656, %r5661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5667, %r828, %r2402, %r5670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5671, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5672, %r5670, %r5671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5675, %r5667, %r5672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5678, %r817, %r2424, %r5659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5683, %r5659, %r5682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5686, %r5678, %r5683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5689, %r828, %r2424, %r5670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5693, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5694, %r5670, %r5693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5697, %r5689, %r5694;
	// end inline asm
	// begin inline asm
	mov.b32 %r5705, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5716, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5702, %r817, %r2448, %r5705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5706, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5707, %r5705, %r5706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5710, %r5702, %r5707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5713, %r828, %r2448, %r5716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5717, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5718, %r5716, %r5717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5721, %r5713, %r5718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5724, %r817, %r2470, %r5705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5729, %r5705, %r5728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5732, %r5724, %r5729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5735, %r828, %r2470, %r5716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5739, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5740, %r5716, %r5739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5743, %r5735, %r5740;
	// end inline asm
	// begin inline asm
	mov.b32 %r5751, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5762, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5748, %r817, %r2494, %r5751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5753, %r5751, %r5752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5756, %r5748, %r5753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5759, %r828, %r2494, %r5762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5763, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5764, %r5762, %r5763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5767, %r5759, %r5764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5770, %r817, %r2516, %r5751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5774, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5775, %r5751, %r5774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5778, %r5770, %r5775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5781, %r828, %r2516, %r5762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5785, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5786, %r5762, %r5785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5789, %r5781, %r5786;
	// end inline asm
	// begin inline asm
	mov.b32 %r5797, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5808, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5794, %r817, %r2540, %r5797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5799, %r5797, %r5798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5802, %r5794, %r5799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5805, %r828, %r2540, %r5808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5809, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5810, %r5808, %r5809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5813, %r5805, %r5810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5816, %r817, %r2562, %r5797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5820, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5821, %r5797, %r5820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5824, %r5816, %r5821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5827, %r828, %r2562, %r5808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5832, %r5808, %r5831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5835, %r5827, %r5832;
	// end inline asm
	// begin inline asm
	mov.b32 %r5843, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5854, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5840, %r817, %r2586, %r5843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5845, %r5843, %r5844;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5848, %r5840, %r5845;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5851, %r828, %r2586, %r5854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5855, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5856, %r5854, %r5855;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5859, %r5851, %r5856;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5862, %r817, %r2608, %r5843, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5866, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5867, %r5843, %r5866;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5870, %r5862, %r5867;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5873, %r828, %r2608, %r5854, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5877, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5878, %r5854, %r5877;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5881, %r5873, %r5878;
	// end inline asm
	// begin inline asm
	mov.b32 %r5889, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5900, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5886, %r817, %r2632, %r5889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5891, %r5889, %r5890;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5894, %r5886, %r5891;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5897, %r828, %r2632, %r5900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5901, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5902, %r5900, %r5901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5905, %r5897, %r5902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5908, %r817, %r2654, %r5889, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5912, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5913, %r5889, %r5912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5916, %r5908, %r5913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5919, %r828, %r2654, %r5900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5923, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5924, %r5900, %r5923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5927, %r5919, %r5924;
	// end inline asm
	// begin inline asm
	mov.b32 %r5935, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5946, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5932, %r817, %r2678, %r5935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5937, %r5935, %r5936;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5940, %r5932, %r5937;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5943, %r828, %r2678, %r5946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5947, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5948, %r5946, %r5947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5951, %r5943, %r5948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5954, %r817, %r2700, %r5935, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5958, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5959, %r5935, %r5958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5962, %r5954, %r5959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5965, %r828, %r2700, %r5946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5969, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5970, %r5946, %r5969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5973, %r5965, %r5970;
	// end inline asm
	// begin inline asm
	mov.b32 %r5981, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r5992, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5978, %r817, %r2724, %r5981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5983, %r5981, %r5982;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5986, %r5978, %r5983;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5989, %r828, %r2724, %r5992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5993, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5994, %r5992, %r5993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5997, %r5989, %r5994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6000, %r817, %r2746, %r5981, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6005, %r5981, %r6004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6008, %r6000, %r6005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6011, %r828, %r2746, %r5992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6015, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6016, %r5992, %r6015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6019, %r6011, %r6016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6022, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6024, %r6022, %r5664, %r5526;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6028, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6030, %r6028, %r5675, %r5530;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6034, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6036, %r6034, %r5686, %r5534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6040, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6042, %r6040, %r5697, %r5538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6046, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6048, %r6046, %r5710, %r5542;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6052, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6054, %r6052, %r5721, %r5546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6058, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6060, %r6058, %r5732, %r5550;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6064, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6066, %r6064, %r5743, %r5554;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6070, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6072, %r6070, %r5756, %r5558;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6076, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6078, %r6076, %r5767, %r5562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6082, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6084, %r6082, %r5778, %r5566;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6088, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6090, %r6088, %r5789, %r5570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6094, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6096, %r6094, %r5802, %r5574;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6100, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6102, %r6100, %r5813, %r5578;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6106, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6108, %r6106, %r5824, %r5582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6112, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6114, %r6112, %r5835, %r5586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6118, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6120, %r6118, %r5848, %r5590;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6124, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6126, %r6124, %r5859, %r5594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6130, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6132, %r6130, %r5870, %r5598;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6136, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6138, %r6136, %r5881, %r5602;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6142, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6144, %r6142, %r5894, %r5606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6148, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6150, %r6148, %r5905, %r5610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6154, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6156, %r6154, %r5916, %r5614;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6160, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6162, %r6160, %r5927, %r5618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6166, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6168, %r6166, %r5940, %r5622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6172, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6174, %r6172, %r5951, %r5626;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6178, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6180, %r6178, %r5962, %r5630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6184, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6186, %r6184, %r5973, %r5634;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6190, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6192, %r6190, %r5986, %r5638;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6196, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6198, %r6196, %r5997, %r5642;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6202, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6204, %r6202, %r6008, %r5646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6208, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6210, %r6208, %r6019, %r5650;
	// end inline asm
	// begin inline asm
	mov.b32 %r6219, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6230, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6216, %r817, %r818, %r6219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6220, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6221, %r6219, %r6220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6224, %r6216, %r6221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6227, %r828, %r818, %r6230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6231, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6232, %r6230, %r6231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6235, %r6227, %r6232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6238, %r817, %r840, %r6219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6242, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6243, %r6219, %r6242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6246, %r6238, %r6243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6249, %r828, %r840, %r6230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6253, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6254, %r6230, %r6253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6257, %r6249, %r6254;
	// end inline asm
	// begin inline asm
	mov.b32 %r6265, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6276, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6262, %r817, %r864, %r6265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6266, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6267, %r6265, %r6266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6270, %r6262, %r6267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6273, %r828, %r864, %r6276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6277, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6278, %r6276, %r6277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6281, %r6273, %r6278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6284, %r817, %r886, %r6265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6288, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6289, %r6265, %r6288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6292, %r6284, %r6289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6295, %r828, %r886, %r6276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6299, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6300, %r6276, %r6299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6303, %r6295, %r6300;
	// end inline asm
	// begin inline asm
	mov.b32 %r6311, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6322, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6308, %r817, %r910, %r6311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6313, %r6311, %r6312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6316, %r6308, %r6313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6319, %r828, %r910, %r6322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6323, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6324, %r6322, %r6323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6327, %r6319, %r6324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6330, %r817, %r932, %r6311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6334, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6335, %r6311, %r6334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6338, %r6330, %r6335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6341, %r828, %r932, %r6322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6345, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6346, %r6322, %r6345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6349, %r6341, %r6346;
	// end inline asm
	// begin inline asm
	mov.b32 %r6357, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6368, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6354, %r817, %r956, %r6357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6359, %r6357, %r6358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6362, %r6354, %r6359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6365, %r828, %r956, %r6368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6369, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6370, %r6368, %r6369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6373, %r6365, %r6370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6376, %r817, %r978, %r6357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6380, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6381, %r6357, %r6380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6384, %r6376, %r6381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6387, %r828, %r978, %r6368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6391, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6392, %r6368, %r6391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6395, %r6387, %r6392;
	// end inline asm
	// begin inline asm
	mov.b32 %r6403, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6414, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6400, %r817, %r1002, %r6403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6404, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6405, %r6403, %r6404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6408, %r6400, %r6405;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6411, %r828, %r1002, %r6414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6415, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6416, %r6414, %r6415;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6419, %r6411, %r6416;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6422, %r817, %r1024, %r6403, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6426, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6427, %r6403, %r6426;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6430, %r6422, %r6427;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6433, %r828, %r1024, %r6414, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6437, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6438, %r6414, %r6437;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6441, %r6433, %r6438;
	// end inline asm
	// begin inline asm
	mov.b32 %r6449, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6460, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6446, %r817, %r1048, %r6449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6451, %r6449, %r6450;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6454, %r6446, %r6451;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6457, %r828, %r1048, %r6460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6461, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6462, %r6460, %r6461;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6465, %r6457, %r6462;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6468, %r817, %r1070, %r6449, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6472, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6473, %r6449, %r6472;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6476, %r6468, %r6473;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6479, %r828, %r1070, %r6460, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6483, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6484, %r6460, %r6483;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6487, %r6479, %r6484;
	// end inline asm
	// begin inline asm
	mov.b32 %r6495, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6506, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6492, %r817, %r1094, %r6495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6497, %r6495, %r6496;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6500, %r6492, %r6497;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6503, %r828, %r1094, %r6506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6507, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6508, %r6506, %r6507;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6511, %r6503, %r6508;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6514, %r817, %r1116, %r6495, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6518, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6519, %r6495, %r6518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6522, %r6514, %r6519;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6525, %r828, %r1116, %r6506, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6529, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6530, %r6506, %r6529;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6533, %r6525, %r6530;
	// end inline asm
	// begin inline asm
	mov.b32 %r6541, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r6552, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6538, %r817, %r1140, %r6541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6543, %r6541, %r6542;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6546, %r6538, %r6543;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6549, %r828, %r1140, %r6552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6553, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6554, %r6552, %r6553;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6557, %r6549, %r6554;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6560, %r817, %r1162, %r6541, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6564, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6565, %r6541, %r6564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6568, %r6560, %r6565;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6571, %r828, %r1162, %r6552, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6575, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6576, %r6552, %r6575;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6579, %r6571, %r6576;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6717, %r336, %r6224, %r6024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6714, %r336, %r6235, %r6030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6726, %r336, %r6246, %r6036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6723, %r336, %r6257, %r6042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6735, %r336, %r6270, %r6048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6732, %r336, %r6281, %r6054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6744, %r336, %r6292, %r6060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6741, %r336, %r6303, %r6066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6753, %r336, %r6316, %r6072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6750, %r336, %r6327, %r6078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6762, %r336, %r6338, %r6084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6759, %r336, %r6349, %r6090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6771, %r336, %r6362, %r6096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6768, %r336, %r6373, %r6102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6780, %r336, %r6384, %r6108;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6777, %r336, %r6395, %r6114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6789, %r354, %r6408, %r6120;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6786, %r354, %r6419, %r6126;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6798, %r354, %r6430, %r6132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6795, %r354, %r6441, %r6138;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6807, %r354, %r6454, %r6144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6804, %r354, %r6465, %r6150;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6816, %r354, %r6476, %r6156;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6813, %r354, %r6487, %r6162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6825, %r354, %r6500, %r6168;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6822, %r354, %r6511, %r6174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6834, %r354, %r6522, %r6180;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6831, %r354, %r6533, %r6186;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6843, %r354, %r6546, %r6192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6840, %r354, %r6557, %r6198;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6852, %r354, %r6568, %r6204;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6849, %r354, %r6579, %r6210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6710, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6712, %r6710, %r6714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6715, %r393, %r6717, %r6712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6719, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6721, %r6719, %r6723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6724, %r393, %r6726, %r6721;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6728, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6730, %r6728, %r6732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6733, %r393, %r6735, %r6730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6737, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6739, %r6737, %r6741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6742, %r393, %r6744, %r6739;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6746, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6748, %r6746, %r6750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6751, %r393, %r6753, %r6748;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6755, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6757, %r6755, %r6759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6760, %r393, %r6762, %r6757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6764, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6766, %r6764, %r6768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6769, %r393, %r6771, %r6766;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6773, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6775, %r6773, %r6777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6778, %r393, %r6780, %r6775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6782, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6784, %r6782, %r6786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6787, %r396, %r6789, %r6784;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6791, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6793, %r6791, %r6795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r396, %r6798, %r6793;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6800, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6802, %r6800, %r6804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r396, %r6807, %r6802;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6809, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6811, %r6809, %r6813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r396, %r6816, %r6811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6818, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6820, %r6818, %r6822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r396, %r6825, %r6820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6827, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6829, %r6827, %r6831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r396, %r6834, %r6829;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6836, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6838, %r6836, %r6840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r396, %r6843, %r6838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6845, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6847, %r6845, %r6849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r396, %r6852, %r6847;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6854, %r399, %r6717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6857, %r393, %r6714, %r6854;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6861, %r399, %r6726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6864, %r393, %r6723, %r6861;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6868, %r399, %r6735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r393, %r6732, %r6868;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6875, %r399, %r6744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r393, %r6741, %r6875;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6882, %r399, %r6753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6885, %r393, %r6750, %r6882;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6889, %r399, %r6762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r393, %r6759, %r6889;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r399, %r6771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r393, %r6768, %r6896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6903, %r399, %r6780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6906, %r393, %r6777, %r6903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6910, %r402, %r6789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r396, %r6786, %r6910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6917, %r402, %r6798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r396, %r6795, %r6917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6924, %r402, %r6807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r396, %r6804, %r6924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6931, %r402, %r6816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r396, %r6813, %r6931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6938, %r402, %r6825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6941, %r396, %r6822, %r6938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6945, %r402, %r6834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6948, %r396, %r6831, %r6945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6952, %r402, %r6843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6955, %r396, %r6840, %r6952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6959, %r402, %r6852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6962, %r396, %r6849, %r6959;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7133, %r7130}, {%r460, %r466, %r463, %r469}, {%r6715, %r6857}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7142, %r7139}, {%r460, %r466, %r463, %r469}, {%r6724, %r6864}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7151, %r7148}, {%r460, %r466, %r463, %r469}, {%r6733, %r6871}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7160, %r7157}, {%r460, %r466, %r463, %r469}, {%r6742, %r6878}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7169, %r7166}, {%r460, %r466, %r463, %r469}, {%r6751, %r6885}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7178, %r7175}, {%r460, %r466, %r463, %r469}, {%r6760, %r6892}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7187, %r7184}, {%r460, %r466, %r463, %r469}, {%r6769, %r6899}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7196, %r7193}, {%r460, %r466, %r463, %r469}, {%r6778, %r6906}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7205, %r7202}, {%r460, %r466, %r463, %r469}, {%r6787, %r6913}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7214, %r7211}, {%r460, %r466, %r463, %r469}, {%r6796, %r6920}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7223, %r7220}, {%r460, %r466, %r463, %r469}, {%r6805, %r6927}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7232, %r7229}, {%r460, %r466, %r463, %r469}, {%r6814, %r6934}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7241, %r7238}, {%r460, %r466, %r463, %r469}, {%r6823, %r6941}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7250, %r7247}, {%r460, %r466, %r463, %r469}, {%r6832, %r6948}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7259, %r7256}, {%r460, %r466, %r463, %r469}, {%r6841, %r6955}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7268, %r7265}, {%r460, %r466, %r463, %r469}, {%r6850, %r6962}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7126, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7128, %r7126, %r7130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7131, %r510, %r7133, %r7128;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7135, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7137, %r7135, %r7139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7140, %r510, %r7142, %r7137;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7144, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7146, %r7144, %r7148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7149, %r510, %r7151, %r7146;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7153, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7155, %r7153, %r7157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7158, %r510, %r7160, %r7155;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7162, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7164, %r7162, %r7166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7167, %r510, %r7169, %r7164;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7171, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7173, %r7171, %r7175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7176, %r510, %r7178, %r7173;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7180, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7182, %r7180, %r7184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7185, %r510, %r7187, %r7182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7189, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7191, %r7189, %r7193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7194, %r510, %r7196, %r7191;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7198, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7200, %r7198, %r7202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7203, %r510, %r7205, %r7200;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7207, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7209, %r7207, %r7211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7212, %r510, %r7214, %r7209;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7216, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7218, %r7216, %r7220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7221, %r510, %r7223, %r7218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7225, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7227, %r7225, %r7229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7230, %r510, %r7232, %r7227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7234, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7236, %r7234, %r7238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7239, %r510, %r7241, %r7236;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7243, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7245, %r7243, %r7247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7248, %r510, %r7250, %r7245;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7252, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7254, %r7252, %r7256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7257, %r510, %r7259, %r7254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7261, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7263, %r7261, %r7265;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7266, %r510, %r7268, %r7263;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7270, %r513, %r7133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7273, %r510, %r7130, %r7270;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7277, %r513, %r7142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7280, %r510, %r7139, %r7277;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7284, %r513, %r7151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7287, %r510, %r7148, %r7284;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r513, %r7160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r510, %r7157, %r7291;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7298, %r513, %r7169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7301, %r510, %r7166, %r7298;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7305, %r513, %r7178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7308, %r510, %r7175, %r7305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r513, %r7187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r510, %r7184, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r513, %r7196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r510, %r7193, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r513, %r7205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r510, %r7202, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r513, %r7214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r510, %r7211, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r513, %r7223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r510, %r7220, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r513, %r7232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r510, %r7229, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r513, %r7241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r510, %r7238, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r513, %r7250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r510, %r7247, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r513, %r7259;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r510, %r7256, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r513, %r7268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7378, %r510, %r7265, %r7375;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7671, %r7674}, {%r548, %r554, %r551, %r557}, {%r7131, %r7273}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7677, %r7680}, {%r548, %r554, %r551, %r557}, {%r7140, %r7280}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7683, %r7686}, {%r548, %r554, %r551, %r557}, {%r7149, %r7287}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7689, %r7692}, {%r548, %r554, %r551, %r557}, {%r7158, %r7294}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7695, %r7698}, {%r548, %r554, %r551, %r557}, {%r7167, %r7301}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7701, %r7704}, {%r548, %r554, %r551, %r557}, {%r7176, %r7308}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7707, %r7710}, {%r548, %r554, %r551, %r557}, {%r7185, %r7315}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7713, %r7716}, {%r548, %r554, %r551, %r557}, {%r7194, %r7322}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7672, %r7675}, {%r548, %r554, %r551, %r557}, {%r7203, %r7329}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7678, %r7681}, {%r548, %r554, %r551, %r557}, {%r7212, %r7336}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7684, %r7687}, {%r548, %r554, %r551, %r557}, {%r7221, %r7343}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7690, %r7693}, {%r548, %r554, %r551, %r557}, {%r7230, %r7350}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7696, %r7699}, {%r548, %r554, %r551, %r557}, {%r7239, %r7357}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7702, %r7705}, {%r548, %r554, %r551, %r557}, {%r7248, %r7364}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7708, %r7711}, {%r548, %r554, %r551, %r557}, {%r7257, %r7371}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7714, %r7717}, {%r548, %r554, %r551, %r557}, {%r7266, %r7378}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7670, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7673, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7676, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7679, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7682, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7685, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7688, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7691, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7694, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7697, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7700, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7703, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7706, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7709, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7712, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7715, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7718, %r7671, %r7672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7721, %r7674, %r7675;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7724, %r7677, %r7678;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7727, %r7680, %r7681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7730, %r7683, %r7684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7733, %r7686, %r7687;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7736, %r7689, %r7690;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7739, %r7692, %r7693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7742, %r7695, %r7696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7745, %r7698, %r7699;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7748, %r7701, %r7702;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7751, %r7704, %r7705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7754, %r7707, %r7708;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7757, %r7710, %r7711;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7760, %r7713, %r7714;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7763, %r7716, %r7717;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7766, %r134, %r7670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7769, %r134, %r7673;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7772, %r134, %r7676;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7775, %r134, %r7679;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7778, %r134, %r7682;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7781, %r134, %r7685;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7784, %r134, %r7688;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7787, %r134, %r7691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7790, %r134, %r7694;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7793, %r134, %r7697;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7796, %r134, %r7700;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7799, %r134, %r7703;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7802, %r134, %r7706;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7805, %r134, %r7709;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7808, %r134, %r7712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7811, %r134, %r7715;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7814, %r135, %r7718;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7817, %r135, %r7721;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7820, %r135, %r7724;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7823, %r135, %r7727;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7826, %r135, %r7730;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7829, %r135, %r7733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7832, %r135, %r7736;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7835, %r135, %r7739;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7838, %r135, %r7742;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7841, %r135, %r7745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7844, %r135, %r7748;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7847, %r135, %r7751;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7850, %r135, %r7754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7853, %r135, %r7757;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7856, %r135, %r7760;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7859, %r135, %r7763;
	// end inline asm
	// begin inline asm
	mov.b32 %r7862, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7863, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7864, %r7766, %r7862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7867, %r7864, %r7863;
	// end inline asm
	// begin inline asm
	mov.b32 %r7870, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7871, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7872, %r7769, %r7870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7875, %r7872, %r7871;
	// end inline asm
	// begin inline asm
	mov.b32 %r7878, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7879, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7880, %r7772, %r7878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7883, %r7880, %r7879;
	// end inline asm
	// begin inline asm
	mov.b32 %r7886, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7887, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7888, %r7775, %r7886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7891, %r7888, %r7887;
	// end inline asm
	// begin inline asm
	mov.b32 %r7894, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7895, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7896, %r7778, %r7894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7899, %r7896, %r7895;
	// end inline asm
	// begin inline asm
	mov.b32 %r7902, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7903, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7904, %r7781, %r7902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7907, %r7904, %r7903;
	// end inline asm
	// begin inline asm
	mov.b32 %r7910, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7912, %r7784, %r7910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7915, %r7912, %r7911;
	// end inline asm
	// begin inline asm
	mov.b32 %r7918, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7920, %r7787, %r7918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7923, %r7920, %r7919;
	// end inline asm
	// begin inline asm
	mov.b32 %r7926, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7928, %r7790, %r7926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7931, %r7928, %r7927;
	// end inline asm
	// begin inline asm
	mov.b32 %r7934, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7936, %r7793, %r7934;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7939, %r7936, %r7935;
	// end inline asm
	// begin inline asm
	mov.b32 %r7942, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7944, %r7796, %r7942;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7947, %r7944, %r7943;
	// end inline asm
	// begin inline asm
	mov.b32 %r7950, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7952, %r7799, %r7950;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7955, %r7952, %r7951;
	// end inline asm
	// begin inline asm
	mov.b32 %r7958, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7960, %r7802, %r7958;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7963, %r7960, %r7959;
	// end inline asm
	// begin inline asm
	mov.b32 %r7966, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7968, %r7805, %r7966;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7971, %r7968, %r7967;
	// end inline asm
	// begin inline asm
	mov.b32 %r7974, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7976, %r7808, %r7974;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7979, %r7976, %r7975;
	// end inline asm
	// begin inline asm
	mov.b32 %r7982, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7984, %r7811, %r7982;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7987, %r7984, %r7983;
	// end inline asm
	// begin inline asm
	mov.b32 %r7990, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7992, %r7814, %r7990;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7995, %r7992, %r7991;
	// end inline asm
	// begin inline asm
	mov.b32 %r7998, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8000, %r7817, %r7998;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8003, %r8000, %r7999;
	// end inline asm
	// begin inline asm
	mov.b32 %r8006, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8008, %r7820, %r8006;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8011, %r8008, %r8007;
	// end inline asm
	// begin inline asm
	mov.b32 %r8014, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8016, %r7823, %r8014;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8019, %r8016, %r8015;
	// end inline asm
	// begin inline asm
	mov.b32 %r8022, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8024, %r7826, %r8022;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8027, %r8024, %r8023;
	// end inline asm
	// begin inline asm
	mov.b32 %r8030, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8032, %r7829, %r8030;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8035, %r8032, %r8031;
	// end inline asm
	// begin inline asm
	mov.b32 %r8038, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8040, %r7832, %r8038;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8043, %r8040, %r8039;
	// end inline asm
	// begin inline asm
	mov.b32 %r8046, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8048, %r7835, %r8046;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8051, %r8048, %r8047;
	// end inline asm
	// begin inline asm
	mov.b32 %r8054, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8056, %r7838, %r8054;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8059, %r8056, %r8055;
	// end inline asm
	// begin inline asm
	mov.b32 %r8062, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8064, %r7841, %r8062;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8067, %r8064, %r8063;
	// end inline asm
	// begin inline asm
	mov.b32 %r8070, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8072, %r7844, %r8070;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8075, %r8072, %r8071;
	// end inline asm
	// begin inline asm
	mov.b32 %r8078, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8080, %r7847, %r8078;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8083, %r8080, %r8079;
	// end inline asm
	// begin inline asm
	mov.b32 %r8086, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8088, %r7850, %r8086;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8091, %r8088, %r8087;
	// end inline asm
	// begin inline asm
	mov.b32 %r8094, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8096, %r7853, %r8094;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8099, %r8096, %r8095;
	// end inline asm
	// begin inline asm
	mov.b32 %r8102, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8104, %r7856, %r8102;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8107, %r8104, %r8103;
	// end inline asm
	// begin inline asm
	mov.b32 %r8110, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8112, %r7859, %r8110;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8115, %r8112, %r8111;
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8120, %r8121, %r8119;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8123, %r7867, %r8120;
	// end inline asm
	// begin inline asm
	mov.b32 %r8126, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8127, %r8121, %r8126;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8130, %r7875, %r8127;
	// end inline asm
	// begin inline asm
	mov.b32 %r8133, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8134, %r8121, %r8133;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8137, %r7883, %r8134;
	// end inline asm
	// begin inline asm
	mov.b32 %r8140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8141, %r8121, %r8140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8144, %r7891, %r8141;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8147, %r8123, %r8137, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8151, %r8130, %r8144, %r4334;
	// end inline asm
	shl.b32 	%r8158, %r8151, 4;
	// begin inline asm
	lop3.b32 %r8155, %r4340, %r8147, %r8158, 202;
	// end inline asm
	xor.b32  	%r16170, %r8155, -2004318072;
	// begin inline asm
	mov.b32 %r8162, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8161, %r8162, %r8160;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8164, %r7899, %r8161;
	// end inline asm
	// begin inline asm
	mov.b32 %r8167, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8168, %r8162, %r8167;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8171, %r7907, %r8168;
	// end inline asm
	// begin inline asm
	mov.b32 %r8174, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8175, %r8162, %r8174;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8178, %r7915, %r8175;
	// end inline asm
	// begin inline asm
	mov.b32 %r8181, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8182, %r8162, %r8181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8185, %r7923, %r8182;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8188, %r8164, %r8178, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8192, %r8171, %r8185, %r4334;
	// end inline asm
	shl.b32 	%r8199, %r8192, 4;
	// begin inline asm
	lop3.b32 %r8196, %r4340, %r8188, %r8199, 202;
	// end inline asm
	xor.b32  	%r16171, %r8196, -2004318072;
	// begin inline asm
	mov.b32 %r8203, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8201, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r8203, %r8201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8205, %r7931, %r8202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8208, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r8203, %r8208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8212, %r7939, %r8209;
	// end inline asm
	// begin inline asm
	mov.b32 %r8215, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8216, %r8203, %r8215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8219, %r7947, %r8216;
	// end inline asm
	// begin inline asm
	mov.b32 %r8222, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r8203, %r8222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r7955, %r8223;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8229, %r8205, %r8219, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8233, %r8212, %r8226, %r4334;
	// end inline asm
	shl.b32 	%r8240, %r8233, 4;
	// begin inline asm
	lop3.b32 %r8237, %r4340, %r8229, %r8240, 202;
	// end inline asm
	xor.b32  	%r16172, %r8237, -2004318072;
	// begin inline asm
	mov.b32 %r8244, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8242, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r8244, %r8242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8246, %r7963, %r8243;
	// end inline asm
	// begin inline asm
	mov.b32 %r8249, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r8244, %r8249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8253, %r7971, %r8250;
	// end inline asm
	// begin inline asm
	mov.b32 %r8256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8257, %r8244, %r8256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8260, %r7979, %r8257;
	// end inline asm
	// begin inline asm
	mov.b32 %r8263, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r8244, %r8263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r7987, %r8264;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8270, %r8246, %r8260, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8274, %r8253, %r8267, %r4334;
	// end inline asm
	shl.b32 	%r8281, %r8274, 4;
	// begin inline asm
	lop3.b32 %r8278, %r4340, %r8270, %r8281, 202;
	// end inline asm
	xor.b32  	%r16173, %r8278, -2004318072;
	// begin inline asm
	mov.b32 %r8285, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8283, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8285, %r8283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8287, %r7995, %r8284;
	// end inline asm
	// begin inline asm
	mov.b32 %r8290, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8285, %r8290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8294, %r8003, %r8291;
	// end inline asm
	// begin inline asm
	mov.b32 %r8297, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8298, %r8285, %r8297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8301, %r8011, %r8298;
	// end inline asm
	// begin inline asm
	mov.b32 %r8304, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8285, %r8304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8019, %r8305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8311, %r8287, %r8301, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8315, %r8294, %r8308, %r4334;
	// end inline asm
	shl.b32 	%r8322, %r8315, 4;
	// begin inline asm
	lop3.b32 %r8319, %r4340, %r8311, %r8322, 202;
	// end inline asm
	xor.b32  	%r16174, %r8319, -2004318072;
	// begin inline asm
	mov.b32 %r8326, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8326, %r8324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8328, %r8027, %r8325;
	// end inline asm
	// begin inline asm
	mov.b32 %r8331, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8326, %r8331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8335, %r8035, %r8332;
	// end inline asm
	// begin inline asm
	mov.b32 %r8338, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8339, %r8326, %r8338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8342, %r8043, %r8339;
	// end inline asm
	// begin inline asm
	mov.b32 %r8345, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8326, %r8345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8051, %r8346;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8352, %r8328, %r8342, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8356, %r8335, %r8349, %r4334;
	// end inline asm
	shl.b32 	%r8363, %r8356, 4;
	// begin inline asm
	lop3.b32 %r8360, %r4340, %r8352, %r8363, 202;
	// end inline asm
	xor.b32  	%r16175, %r8360, -2004318072;
	// begin inline asm
	mov.b32 %r8367, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8365, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8367, %r8365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8369, %r8059, %r8366;
	// end inline asm
	// begin inline asm
	mov.b32 %r8372, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8367, %r8372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8376, %r8067, %r8373;
	// end inline asm
	// begin inline asm
	mov.b32 %r8379, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8380, %r8367, %r8379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8383, %r8075, %r8380;
	// end inline asm
	// begin inline asm
	mov.b32 %r8386, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8367, %r8386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8083, %r8387;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8393, %r8369, %r8383, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8397, %r8376, %r8390, %r4334;
	// end inline asm
	shl.b32 	%r8404, %r8397, 4;
	// begin inline asm
	lop3.b32 %r8401, %r4340, %r8393, %r8404, 202;
	// end inline asm
	xor.b32  	%r16176, %r8401, -2004318072;
	// begin inline asm
	mov.b32 %r8408, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8408, %r8406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8410, %r8091, %r8407;
	// end inline asm
	// begin inline asm
	mov.b32 %r8413, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8408, %r8413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8417, %r8099, %r8414;
	// end inline asm
	// begin inline asm
	mov.b32 %r8420, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8421, %r8408, %r8420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8424, %r8107, %r8421;
	// end inline asm
	// begin inline asm
	mov.b32 %r8427, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8428, %r8408, %r8427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8115, %r8428;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8434, %r8410, %r8424, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8438, %r8417, %r8431, %r4334;
	// end inline asm
	shl.b32 	%r8445, %r8438, 4;
	// begin inline asm
	lop3.b32 %r8442, %r4340, %r8434, %r8445, 202;
	// end inline asm
	xor.b32  	%r16177, %r8442, -2004318072;
	st.shared.u32 	[%rd106], %r16170;
	st.shared.u32 	[%rd108], %r16171;
	st.shared.u32 	[%rd110], %r16172;
	st.shared.u32 	[%rd112], %r16173;
	st.shared.u32 	[%rd114], %r16174;
	st.shared.u32 	[%rd116], %r16175;
	st.shared.u32 	[%rd118], %r16176;
	st.shared.u32 	[%rd120], %r16177;
	ld.shared.u32 	%r16290, [%rd90];
	ld.shared.u32 	%r16291, [%rd92];
	ld.shared.u32 	%r16292, [%rd94];
	ld.shared.u32 	%r16293, [%rd96];
	ld.shared.u32 	%r16302, [%rd98];
	ld.shared.u32 	%r16303, [%rd100];
	ld.shared.u32 	%r16304, [%rd102];
	ld.shared.u32 	%r16305, [%rd104];
	// begin inline asm
	mov.b32 %r8451, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8462, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8450, %r16290, -2004318072;
	// begin inline asm
	lop3.b32 %r8448, %r817, %r8450, %r8451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8453, %r8451, %r8452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8456, %r8448, %r8453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8459, %r828, %r8450, %r8462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8463, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8464, %r8462, %r8463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8467, %r8459, %r8464;
	// end inline asm
	shr.u32 	%r8472, %r8450, 8;
	// begin inline asm
	lop3.b32 %r8470, %r817, %r8472, %r8451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8475, %r8451, %r8474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8478, %r8470, %r8475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8481, %r828, %r8472, %r8462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8485, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8486, %r8462, %r8485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8489, %r8481, %r8486;
	// end inline asm
	// begin inline asm
	mov.b32 %r8497, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8508, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8496, %r16291, -2004318072;
	// begin inline asm
	lop3.b32 %r8494, %r817, %r8496, %r8497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8499, %r8497, %r8498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8502, %r8494, %r8499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8505, %r828, %r8496, %r8508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8509, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8510, %r8508, %r8509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8513, %r8505, %r8510;
	// end inline asm
	shr.u32 	%r8518, %r8496, 8;
	// begin inline asm
	lop3.b32 %r8516, %r817, %r8518, %r8497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8520, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8521, %r8497, %r8520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8524, %r8516, %r8521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8527, %r828, %r8518, %r8508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8531, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8532, %r8508, %r8531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8535, %r8527, %r8532;
	// end inline asm
	// begin inline asm
	mov.b32 %r8543, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8554, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8542, %r16292, -2004318072;
	// begin inline asm
	lop3.b32 %r8540, %r817, %r8542, %r8543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8545, %r8543, %r8544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8548, %r8540, %r8545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8551, %r828, %r8542, %r8554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8555, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8556, %r8554, %r8555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8559, %r8551, %r8556;
	// end inline asm
	shr.u32 	%r8564, %r8542, 8;
	// begin inline asm
	lop3.b32 %r8562, %r817, %r8564, %r8543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8566, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8567, %r8543, %r8566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8570, %r8562, %r8567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8573, %r828, %r8564, %r8554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8577, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8578, %r8554, %r8577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8581, %r8573, %r8578;
	// end inline asm
	// begin inline asm
	mov.b32 %r8589, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8600, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8588, %r16293, -2004318072;
	// begin inline asm
	lop3.b32 %r8586, %r817, %r8588, %r8589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8591, %r8589, %r8590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8594, %r8586, %r8591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8597, %r828, %r8588, %r8600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8601, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8602, %r8600, %r8601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8605, %r8597, %r8602;
	// end inline asm
	shr.u32 	%r8610, %r8588, 8;
	// begin inline asm
	lop3.b32 %r8608, %r817, %r8610, %r8589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8612, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8613, %r8589, %r8612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8616, %r8608, %r8613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8619, %r828, %r8610, %r8600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8623, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8624, %r8600, %r8623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8627, %r8619, %r8624;
	// end inline asm
	// begin inline asm
	mov.b32 %r8635, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8646, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8634, %r16302, -2004318072;
	// begin inline asm
	lop3.b32 %r8632, %r817, %r8634, %r8635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8637, %r8635, %r8636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8640, %r8632, %r8637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8643, %r828, %r8634, %r8646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8647, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8648, %r8646, %r8647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8651, %r8643, %r8648;
	// end inline asm
	shr.u32 	%r8656, %r8634, 8;
	// begin inline asm
	lop3.b32 %r8654, %r817, %r8656, %r8635, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8658, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8659, %r8635, %r8658;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8662, %r8654, %r8659;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8665, %r828, %r8656, %r8646, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8669, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8670, %r8646, %r8669;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8673, %r8665, %r8670;
	// end inline asm
	// begin inline asm
	mov.b32 %r8681, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8692, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8680, %r16303, -2004318072;
	// begin inline asm
	lop3.b32 %r8678, %r817, %r8680, %r8681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8683, %r8681, %r8682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8686, %r8678, %r8683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8689, %r828, %r8680, %r8692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8693, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8694, %r8692, %r8693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8697, %r8689, %r8694;
	// end inline asm
	shr.u32 	%r8702, %r8680, 8;
	// begin inline asm
	lop3.b32 %r8700, %r817, %r8702, %r8681, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8704, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8705, %r8681, %r8704;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8708, %r8700, %r8705;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8711, %r828, %r8702, %r8692, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8715, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8716, %r8692, %r8715;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8719, %r8711, %r8716;
	// end inline asm
	// begin inline asm
	mov.b32 %r8727, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8738, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8726, %r16304, -2004318072;
	// begin inline asm
	lop3.b32 %r8724, %r817, %r8726, %r8727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8729, %r8727, %r8728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8732, %r8724, %r8729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8735, %r828, %r8726, %r8738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8739, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8740, %r8738, %r8739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8743, %r8735, %r8740;
	// end inline asm
	shr.u32 	%r8748, %r8726, 8;
	// begin inline asm
	lop3.b32 %r8746, %r817, %r8748, %r8727, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8750, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8751, %r8727, %r8750;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8754, %r8746, %r8751;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8757, %r828, %r8748, %r8738, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8761, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8762, %r8738, %r8761;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8765, %r8757, %r8762;
	// end inline asm
	// begin inline asm
	mov.b32 %r8773, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8784, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r8772, %r16305, -2004318072;
	// begin inline asm
	lop3.b32 %r8770, %r817, %r8772, %r8773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8774, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8775, %r8773, %r8774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8778, %r8770, %r8775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8781, %r828, %r8772, %r8784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8785, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8786, %r8784, %r8785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8789, %r8781, %r8786;
	// end inline asm
	shr.u32 	%r8794, %r8772, 8;
	// begin inline asm
	lop3.b32 %r8792, %r817, %r8794, %r8773, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8797, %r8773, %r8796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8800, %r8792, %r8797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8803, %r828, %r8794, %r8784, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8808, %r8784, %r8807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8811, %r8803, %r8808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8814, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8816, %r8814, %r8456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8819, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8821, %r8819, %r8467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8824, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8826, %r8824, %r8478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8829, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8831, %r8829, %r8489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8834, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8836, %r8834, %r8502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8839, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8841, %r8839, %r8513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8844, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8846, %r8844, %r8524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8849, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8851, %r8849, %r8535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8854, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8856, %r8854, %r8548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8859, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8861, %r8859, %r8559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8864, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8866, %r8864, %r8570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8869, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8871, %r8869, %r8581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8874, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8876, %r8874, %r8594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8879, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8881, %r8879, %r8605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8884, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8886, %r8884, %r8616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8889, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8891, %r8889, %r8627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8894, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8896, %r8894, %r8640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8899, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8901, %r8899, %r8651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8904, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8906, %r8904, %r8662;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8909, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8911, %r8909, %r8673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8914, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8916, %r8914, %r8686;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8919, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8921, %r8919, %r8697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8924, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8926, %r8924, %r8708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8929, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8931, %r8929, %r8719;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8934, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8936, %r8934, %r8732;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8939, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8941, %r8939, %r8743;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8944, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8946, %r8944, %r8754;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8949, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8951, %r8949, %r8765;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8954, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8956, %r8954, %r8778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8959, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8961, %r8959, %r8789;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8964, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8966, %r8964, %r8800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8969, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8971, %r8969, %r8811;
	// end inline asm
	// begin inline asm
	mov.b32 %r8979, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r8990, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r8976, %r817, %r2402, %r8979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8981, %r8979, %r8980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8984, %r8976, %r8981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8987, %r828, %r2402, %r8990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8992, %r8990, %r8991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8995, %r8987, %r8992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8998, %r817, %r2424, %r8979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9003, %r8979, %r9002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9006, %r8998, %r9003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9009, %r828, %r2424, %r8990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9013, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9014, %r8990, %r9013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9017, %r9009, %r9014;
	// end inline asm
	// begin inline asm
	mov.b32 %r9025, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9036, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9022, %r817, %r2448, %r9025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9027, %r9025, %r9026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9030, %r9022, %r9027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9033, %r828, %r2448, %r9036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9038, %r9036, %r9037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9041, %r9033, %r9038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9044, %r817, %r2470, %r9025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9049, %r9025, %r9048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9052, %r9044, %r9049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9055, %r828, %r2470, %r9036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9060, %r9036, %r9059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9063, %r9055, %r9060;
	// end inline asm
	// begin inline asm
	mov.b32 %r9071, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9082, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9068, %r817, %r2494, %r9071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9073, %r9071, %r9072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9076, %r9068, %r9073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9079, %r828, %r2494, %r9082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9084, %r9082, %r9083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9087, %r9079, %r9084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9090, %r817, %r2516, %r9071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9095, %r9071, %r9094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9098, %r9090, %r9095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9101, %r828, %r2516, %r9082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9105, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9106, %r9082, %r9105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9109, %r9101, %r9106;
	// end inline asm
	// begin inline asm
	mov.b32 %r9117, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9128, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9114, %r817, %r2540, %r9117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9119, %r9117, %r9118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9122, %r9114, %r9119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9125, %r828, %r2540, %r9128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9130, %r9128, %r9129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9133, %r9125, %r9130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9136, %r817, %r2562, %r9117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9141, %r9117, %r9140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9144, %r9136, %r9141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9147, %r828, %r2562, %r9128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9151, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9152, %r9128, %r9151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9155, %r9147, %r9152;
	// end inline asm
	// begin inline asm
	mov.b32 %r9163, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9174, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9160, %r817, %r2586, %r9163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9164, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9165, %r9163, %r9164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9168, %r9160, %r9165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9171, %r828, %r2586, %r9174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9175, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9176, %r9174, %r9175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9179, %r9171, %r9176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9182, %r817, %r2608, %r9163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9186, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9187, %r9163, %r9186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9190, %r9182, %r9187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9193, %r828, %r2608, %r9174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9197, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9198, %r9174, %r9197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9201, %r9193, %r9198;
	// end inline asm
	// begin inline asm
	mov.b32 %r9209, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9220, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9206, %r817, %r2632, %r9209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9210, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9211, %r9209, %r9210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9214, %r9206, %r9211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9217, %r828, %r2632, %r9220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9221, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9222, %r9220, %r9221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9225, %r9217, %r9222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9228, %r817, %r2654, %r9209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9232, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9233, %r9209, %r9232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9236, %r9228, %r9233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9239, %r828, %r2654, %r9220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9244, %r9220, %r9243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9247, %r9239, %r9244;
	// end inline asm
	// begin inline asm
	mov.b32 %r9255, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9266, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9252, %r817, %r2678, %r9255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9256, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9257, %r9255, %r9256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9260, %r9252, %r9257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9263, %r828, %r2678, %r9266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9267, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9268, %r9266, %r9267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9271, %r9263, %r9268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9274, %r817, %r2700, %r9255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9278, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9279, %r9255, %r9278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9282, %r9274, %r9279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9285, %r828, %r2700, %r9266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9289, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9290, %r9266, %r9289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9293, %r9285, %r9290;
	// end inline asm
	// begin inline asm
	mov.b32 %r9301, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9312, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9298, %r817, %r2724, %r9301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9302, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9303, %r9301, %r9302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9306, %r9298, %r9303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9309, %r828, %r2724, %r9312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9313, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9314, %r9312, %r9313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9317, %r9309, %r9314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9320, %r817, %r2746, %r9301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9324, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9325, %r9301, %r9324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9328, %r9320, %r9325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9331, %r828, %r2746, %r9312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9335, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9336, %r9312, %r9335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9339, %r9331, %r9336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9342, %r264, %r8984, %r8816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9346, %r264, %r8995, %r8821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9350, %r264, %r9006, %r8826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9354, %r264, %r9017, %r8831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9358, %r264, %r9030, %r8836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9362, %r264, %r9041, %r8841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9366, %r264, %r9052, %r8846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9370, %r264, %r9063, %r8851;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9374, %r264, %r9076, %r8856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9378, %r264, %r9087, %r8861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9382, %r264, %r9098, %r8866;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9386, %r264, %r9109, %r8871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9390, %r264, %r9122, %r8876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9394, %r264, %r9133, %r8881;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9398, %r264, %r9144, %r8886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9402, %r264, %r9155, %r8891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9406, %r282, %r9168, %r8896;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9410, %r282, %r9179, %r8901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9414, %r282, %r9190, %r8906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9418, %r282, %r9201, %r8911;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9422, %r282, %r9214, %r8916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9426, %r282, %r9225, %r8921;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9430, %r282, %r9236, %r8926;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9434, %r282, %r9247, %r8931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9438, %r282, %r9260, %r8936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9442, %r282, %r9271, %r8941;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9446, %r282, %r9282, %r8946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9450, %r282, %r9293, %r8951;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9454, %r282, %r9306, %r8956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9458, %r282, %r9317, %r8961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9462, %r282, %r9328, %r8966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9466, %r282, %r9339, %r8971;
	// end inline asm
	// begin inline asm
	mov.b32 %r9475, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9486, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9472, %r817, %r818, %r9475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9476, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9477, %r9475, %r9476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9480, %r9472, %r9477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9483, %r828, %r818, %r9486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9487, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9488, %r9486, %r9487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9491, %r9483, %r9488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9494, %r817, %r840, %r9475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9499, %r9475, %r9498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9502, %r9494, %r9499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9505, %r828, %r840, %r9486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9509, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9510, %r9486, %r9509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9513, %r9505, %r9510;
	// end inline asm
	// begin inline asm
	mov.b32 %r9521, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9532, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9518, %r817, %r864, %r9521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9522, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9523, %r9521, %r9522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9526, %r9518, %r9523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9529, %r828, %r864, %r9532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9533, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9534, %r9532, %r9533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9537, %r9529, %r9534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9540, %r817, %r886, %r9521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9545, %r9521, %r9544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9548, %r9540, %r9545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9551, %r828, %r886, %r9532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9555, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9556, %r9532, %r9555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9559, %r9551, %r9556;
	// end inline asm
	// begin inline asm
	mov.b32 %r9567, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9578, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9564, %r817, %r910, %r9567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9568, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9569, %r9567, %r9568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9572, %r9564, %r9569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9575, %r828, %r910, %r9578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9579, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9580, %r9578, %r9579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9583, %r9575, %r9580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9586, %r817, %r932, %r9567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9591, %r9567, %r9590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9594, %r9586, %r9591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9597, %r828, %r932, %r9578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9601, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9602, %r9578, %r9601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9605, %r9597, %r9602;
	// end inline asm
	// begin inline asm
	mov.b32 %r9613, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9624, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9610, %r817, %r956, %r9613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9614, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9615, %r9613, %r9614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9618, %r9610, %r9615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9621, %r828, %r956, %r9624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9625, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9626, %r9624, %r9625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9629, %r9621, %r9626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9632, %r817, %r978, %r9613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9637, %r9613, %r9636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9640, %r9632, %r9637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9643, %r828, %r978, %r9624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9647, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9648, %r9624, %r9647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9651, %r9643, %r9648;
	// end inline asm
	// begin inline asm
	mov.b32 %r9659, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9670, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9656, %r817, %r1002, %r9659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9660, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9661, %r9659, %r9660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9664, %r9656, %r9661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9667, %r828, %r1002, %r9670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9671, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9672, %r9670, %r9671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9675, %r9667, %r9672;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9678, %r817, %r1024, %r9659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9682, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9683, %r9659, %r9682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9686, %r9678, %r9683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9689, %r828, %r1024, %r9670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9693, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9694, %r9670, %r9693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9697, %r9689, %r9694;
	// end inline asm
	// begin inline asm
	mov.b32 %r9705, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9716, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9702, %r817, %r1048, %r9705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9706, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9707, %r9705, %r9706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9710, %r9702, %r9707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9713, %r828, %r1048, %r9716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9717, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9718, %r9716, %r9717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9721, %r9713, %r9718;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9724, %r817, %r1070, %r9705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9728, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9729, %r9705, %r9728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9732, %r9724, %r9729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9735, %r828, %r1070, %r9716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9739, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9740, %r9716, %r9739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9743, %r9735, %r9740;
	// end inline asm
	// begin inline asm
	mov.b32 %r9751, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9762, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9748, %r817, %r1094, %r9751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9752, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9753, %r9751, %r9752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9756, %r9748, %r9753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9759, %r828, %r1094, %r9762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9763, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9764, %r9762, %r9763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9767, %r9759, %r9764;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9770, %r817, %r1116, %r9751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9774, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9775, %r9751, %r9774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9778, %r9770, %r9775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9781, %r828, %r1116, %r9762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9785, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9786, %r9762, %r9785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9789, %r9781, %r9786;
	// end inline asm
	// begin inline asm
	mov.b32 %r9797, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r9808, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9794, %r817, %r1140, %r9797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9798, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9799, %r9797, %r9798;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9802, %r9794, %r9799;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9805, %r828, %r1140, %r9808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9809, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9810, %r9808, %r9809;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9813, %r9805, %r9810;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9816, %r817, %r1162, %r9797, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9820, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9821, %r9797, %r9820;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9824, %r9816, %r9821;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9827, %r828, %r1162, %r9808, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9831, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9832, %r9808, %r9831;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9835, %r9827, %r9832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9838, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9840, %r9838, %r9480, %r9342;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9844, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9846, %r9844, %r9491, %r9346;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9850, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9852, %r9850, %r9502, %r9350;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9856, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9858, %r9856, %r9513, %r9354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9862, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9864, %r9862, %r9526, %r9358;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9868, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9870, %r9868, %r9537, %r9362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9874, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9876, %r9874, %r9548, %r9366;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9880, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9882, %r9880, %r9559, %r9370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9886, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9888, %r9886, %r9572, %r9374;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9892, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9894, %r9892, %r9583, %r9378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9898, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9900, %r9898, %r9594, %r9382;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9904, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9906, %r9904, %r9605, %r9386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9910, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9912, %r9910, %r9618, %r9390;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9916, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9918, %r9916, %r9629, %r9394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9922, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9924, %r9922, %r9640, %r9398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9928, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9930, %r9928, %r9651, %r9402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9934, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9936, %r9934, %r9664, %r9406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9940, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9942, %r9940, %r9675, %r9410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9946, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9948, %r9946, %r9686, %r9414;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9952, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9954, %r9952, %r9697, %r9418;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9958, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9960, %r9958, %r9710, %r9422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9964, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9966, %r9964, %r9721, %r9426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9970, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9972, %r9970, %r9732, %r9430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9976, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9978, %r9976, %r9743, %r9434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9982, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9984, %r9982, %r9756, %r9438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9988, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9990, %r9988, %r9767, %r9442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9994, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9996, %r9994, %r9778, %r9446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10000, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10002, %r10000, %r9789, %r9450;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10006, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10008, %r10006, %r9802, %r9454;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10012, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10014, %r10012, %r9813, %r9458;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10018, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10020, %r10018, %r9824, %r9462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10024, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10026, %r10024, %r9835, %r9466;
	// end inline asm
	// begin inline asm
	mov.b32 %r10035, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10046, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10032, %r817, %r4634, %r10035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10036, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10037, %r10035, %r10036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10040, %r10032, %r10037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10043, %r828, %r4634, %r10046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10047, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10048, %r10046, %r10047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10051, %r10043, %r10048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10054, %r817, %r4656, %r10035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10058, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10059, %r10035, %r10058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10062, %r10054, %r10059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10065, %r828, %r4656, %r10046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10069, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10070, %r10046, %r10069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10073, %r10065, %r10070;
	// end inline asm
	// begin inline asm
	mov.b32 %r10081, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10092, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10078, %r817, %r4680, %r10081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10082, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10083, %r10081, %r10082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10086, %r10078, %r10083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10089, %r828, %r4680, %r10092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10093, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10094, %r10092, %r10093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10097, %r10089, %r10094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10100, %r817, %r4702, %r10081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10104, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10105, %r10081, %r10104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10108, %r10100, %r10105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10111, %r828, %r4702, %r10092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10115, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10116, %r10092, %r10115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10119, %r10111, %r10116;
	// end inline asm
	// begin inline asm
	mov.b32 %r10127, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10138, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10124, %r817, %r4726, %r10127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10128, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10129, %r10127, %r10128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10132, %r10124, %r10129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10135, %r828, %r4726, %r10138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10139, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10140, %r10138, %r10139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10143, %r10135, %r10140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10146, %r817, %r4748, %r10127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10150, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10151, %r10127, %r10150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10154, %r10146, %r10151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10157, %r828, %r4748, %r10138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10161, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10162, %r10138, %r10161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10165, %r10157, %r10162;
	// end inline asm
	// begin inline asm
	mov.b32 %r10173, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10184, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10170, %r817, %r4772, %r10173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10174, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10175, %r10173, %r10174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10178, %r10170, %r10175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10181, %r828, %r4772, %r10184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10185, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10186, %r10184, %r10185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10189, %r10181, %r10186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10192, %r817, %r4794, %r10173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10196, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10197, %r10173, %r10196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10200, %r10192, %r10197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10203, %r828, %r4794, %r10184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10207, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10208, %r10184, %r10207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10211, %r10203, %r10208;
	// end inline asm
	// begin inline asm
	mov.b32 %r10219, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10230, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10216, %r817, %r4818, %r10219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10220, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10221, %r10219, %r10220;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10224, %r10216, %r10221;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10227, %r828, %r4818, %r10230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10231, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10232, %r10230, %r10231;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10235, %r10227, %r10232;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10238, %r817, %r4840, %r10219, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10242, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10243, %r10219, %r10242;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10246, %r10238, %r10243;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10249, %r828, %r4840, %r10230, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10253, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10254, %r10230, %r10253;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10257, %r10249, %r10254;
	// end inline asm
	// begin inline asm
	mov.b32 %r10265, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10276, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10262, %r817, %r4864, %r10265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10266, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10267, %r10265, %r10266;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10270, %r10262, %r10267;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10273, %r828, %r4864, %r10276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10277, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10278, %r10276, %r10277;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10281, %r10273, %r10278;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10284, %r817, %r4886, %r10265, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10288, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10289, %r10265, %r10288;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10292, %r10284, %r10289;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10295, %r828, %r4886, %r10276, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10299, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10300, %r10276, %r10299;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10303, %r10295, %r10300;
	// end inline asm
	// begin inline asm
	mov.b32 %r10311, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10322, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10308, %r817, %r4910, %r10311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10312, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10313, %r10311, %r10312;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10316, %r10308, %r10313;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10319, %r828, %r4910, %r10322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10323, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10324, %r10322, %r10323;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10327, %r10319, %r10324;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10330, %r817, %r4932, %r10311, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10334, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10335, %r10311, %r10334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10338, %r10330, %r10335;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10341, %r828, %r4932, %r10322, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10345, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10346, %r10322, %r10345;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10349, %r10341, %r10346;
	// end inline asm
	// begin inline asm
	mov.b32 %r10357, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r10368, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10354, %r817, %r4956, %r10357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10358, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10359, %r10357, %r10358;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10362, %r10354, %r10359;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10365, %r828, %r4956, %r10368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10369, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10370, %r10368, %r10369;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10373, %r10365, %r10370;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10376, %r817, %r4978, %r10357, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10380, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10381, %r10357, %r10380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10384, %r10376, %r10381;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10387, %r828, %r4978, %r10368, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10391, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10392, %r10368, %r10391;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10395, %r10387, %r10392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10533, %r336, %r10040, %r9840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10530, %r336, %r10051, %r9846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10542, %r336, %r10062, %r9852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10539, %r336, %r10073, %r9858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10551, %r336, %r10086, %r9864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10548, %r336, %r10097, %r9870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10560, %r336, %r10108, %r9876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10557, %r336, %r10119, %r9882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10569, %r336, %r10132, %r9888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10566, %r336, %r10143, %r9894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10578, %r336, %r10154, %r9900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10575, %r336, %r10165, %r9906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10587, %r336, %r10178, %r9912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10584, %r336, %r10189, %r9918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10596, %r336, %r10200, %r9924;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10593, %r336, %r10211, %r9930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10605, %r354, %r10224, %r9936;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10602, %r354, %r10235, %r9942;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10614, %r354, %r10246, %r9948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10611, %r354, %r10257, %r9954;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10623, %r354, %r10270, %r9960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10620, %r354, %r10281, %r9966;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10632, %r354, %r10292, %r9972;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10629, %r354, %r10303, %r9978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10641, %r354, %r10316, %r9984;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10638, %r354, %r10327, %r9990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10650, %r354, %r10338, %r9996;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10647, %r354, %r10349, %r10002;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10659, %r354, %r10362, %r10008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10656, %r354, %r10373, %r10014;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10668, %r354, %r10384, %r10020;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10665, %r354, %r10395, %r10026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10526, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10528, %r10526, %r10530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10531, %r393, %r10533, %r10528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10535, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10537, %r10535, %r10539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10540, %r393, %r10542, %r10537;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10544, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10546, %r10544, %r10548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10549, %r393, %r10551, %r10546;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10553, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10555, %r10553, %r10557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10558, %r393, %r10560, %r10555;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10562, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10564, %r10562, %r10566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10567, %r393, %r10569, %r10564;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10571, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10573, %r10571, %r10575;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10576, %r393, %r10578, %r10573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10580, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10582, %r10580, %r10584;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10585, %r393, %r10587, %r10582;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10589, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10591, %r10589, %r10593;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10594, %r393, %r10596, %r10591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10598, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10600, %r10598, %r10602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10603, %r396, %r10605, %r10600;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10607, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10609, %r10607, %r10611;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r396, %r10614, %r10609;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10616, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10618, %r10616, %r10620;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r396, %r10623, %r10618;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10625, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10627, %r10625, %r10629;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r396, %r10632, %r10627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10634, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10636, %r10634, %r10638;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r396, %r10641, %r10636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10643, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10645, %r10643, %r10647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r396, %r10650, %r10645;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10652, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10654, %r10652, %r10656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r396, %r10659, %r10654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10661, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10663, %r10661, %r10665;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r396, %r10668, %r10663;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10670, %r399, %r10533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10673, %r393, %r10530, %r10670;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10677, %r399, %r10542;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10680, %r393, %r10539, %r10677;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10684, %r399, %r10551;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r393, %r10548, %r10684;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10691, %r399, %r10560;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r393, %r10557, %r10691;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10698, %r399, %r10569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10701, %r393, %r10566, %r10698;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10705, %r399, %r10578;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r393, %r10575, %r10705;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r399, %r10587;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r393, %r10584, %r10712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10719, %r399, %r10596;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10722, %r393, %r10593, %r10719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10726, %r402, %r10605;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r396, %r10602, %r10726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10733, %r402, %r10614;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r396, %r10611, %r10733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10740, %r402, %r10623;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r396, %r10620, %r10740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10747, %r402, %r10632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r396, %r10629, %r10747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10754, %r402, %r10641;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10757, %r396, %r10638, %r10754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10761, %r402, %r10650;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10764, %r396, %r10647, %r10761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10768, %r402, %r10659;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10771, %r396, %r10656, %r10768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10775, %r402, %r10668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10778, %r396, %r10665, %r10775;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10949, %r10946}, {%r460, %r466, %r463, %r469}, {%r10531, %r10673}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10958, %r10955}, {%r460, %r466, %r463, %r469}, {%r10540, %r10680}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10967, %r10964}, {%r460, %r466, %r463, %r469}, {%r10549, %r10687}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10976, %r10973}, {%r460, %r466, %r463, %r469}, {%r10558, %r10694}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10985, %r10982}, {%r460, %r466, %r463, %r469}, {%r10567, %r10701}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10994, %r10991}, {%r460, %r466, %r463, %r469}, {%r10576, %r10708}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11003, %r11000}, {%r460, %r466, %r463, %r469}, {%r10585, %r10715}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11012, %r11009}, {%r460, %r466, %r463, %r469}, {%r10594, %r10722}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11021, %r11018}, {%r460, %r466, %r463, %r469}, {%r10603, %r10729}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11030, %r11027}, {%r460, %r466, %r463, %r469}, {%r10612, %r10736}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11039, %r11036}, {%r460, %r466, %r463, %r469}, {%r10621, %r10743}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11048, %r11045}, {%r460, %r466, %r463, %r469}, {%r10630, %r10750}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11057, %r11054}, {%r460, %r466, %r463, %r469}, {%r10639, %r10757}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11066, %r11063}, {%r460, %r466, %r463, %r469}, {%r10648, %r10764}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11075, %r11072}, {%r460, %r466, %r463, %r469}, {%r10657, %r10771}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11084, %r11081}, {%r460, %r466, %r463, %r469}, {%r10666, %r10778}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10942, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10944, %r10942, %r10946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10947, %r510, %r10949, %r10944;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10951, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10953, %r10951, %r10955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10956, %r510, %r10958, %r10953;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10960, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10962, %r10960, %r10964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10965, %r510, %r10967, %r10962;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10969, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10971, %r10969, %r10973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10974, %r510, %r10976, %r10971;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10978, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10980, %r10978, %r10982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10983, %r510, %r10985, %r10980;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10987, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10989, %r10987, %r10991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10992, %r510, %r10994, %r10989;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10996, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10998, %r10996, %r11000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11001, %r510, %r11003, %r10998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11005, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11007, %r11005, %r11009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11010, %r510, %r11012, %r11007;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11014, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11016, %r11014, %r11018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11019, %r510, %r11021, %r11016;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11023, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11025, %r11023, %r11027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11028, %r510, %r11030, %r11025;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11032, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11034, %r11032, %r11036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11037, %r510, %r11039, %r11034;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11041, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11043, %r11041, %r11045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11046, %r510, %r11048, %r11043;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11050, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11052, %r11050, %r11054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11055, %r510, %r11057, %r11052;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11059, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11061, %r11059, %r11063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11064, %r510, %r11066, %r11061;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11068, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11070, %r11068, %r11072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11073, %r510, %r11075, %r11070;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11077, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11079, %r11077, %r11081;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11082, %r510, %r11084, %r11079;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11086, %r513, %r10949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11089, %r510, %r10946, %r11086;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11093, %r513, %r10958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11096, %r510, %r10955, %r11093;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11100, %r513, %r10967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11103, %r510, %r10964, %r11100;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11107, %r513, %r10976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11110, %r510, %r10973, %r11107;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11114, %r513, %r10985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11117, %r510, %r10982, %r11114;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11121, %r513, %r10994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11124, %r510, %r10991, %r11121;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r513, %r11003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r510, %r11000, %r11128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11135, %r513, %r11012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11138, %r510, %r11009, %r11135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11142, %r513, %r11021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11145, %r510, %r11018, %r11142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11149, %r513, %r11030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11152, %r510, %r11027, %r11149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11156, %r513, %r11039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11159, %r510, %r11036, %r11156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11163, %r513, %r11048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11166, %r510, %r11045, %r11163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11170, %r513, %r11057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11173, %r510, %r11054, %r11170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11177, %r513, %r11066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11180, %r510, %r11063, %r11177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11184, %r513, %r11075;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11187, %r510, %r11072, %r11184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11191, %r513, %r11084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11194, %r510, %r11081, %r11191;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11487, %r11490}, {%r548, %r554, %r551, %r557}, {%r10947, %r11089}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11493, %r11496}, {%r548, %r554, %r551, %r557}, {%r10956, %r11096}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11499, %r11502}, {%r548, %r554, %r551, %r557}, {%r10965, %r11103}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11505, %r11508}, {%r548, %r554, %r551, %r557}, {%r10974, %r11110}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11511, %r11514}, {%r548, %r554, %r551, %r557}, {%r10983, %r11117}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11517, %r11520}, {%r548, %r554, %r551, %r557}, {%r10992, %r11124}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11523, %r11526}, {%r548, %r554, %r551, %r557}, {%r11001, %r11131}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11529, %r11532}, {%r548, %r554, %r551, %r557}, {%r11010, %r11138}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11488, %r11491}, {%r548, %r554, %r551, %r557}, {%r11019, %r11145}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11494, %r11497}, {%r548, %r554, %r551, %r557}, {%r11028, %r11152}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11500, %r11503}, {%r548, %r554, %r551, %r557}, {%r11037, %r11159}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11506, %r11509}, {%r548, %r554, %r551, %r557}, {%r11046, %r11166}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11512, %r11515}, {%r548, %r554, %r551, %r557}, {%r11055, %r11173}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11518, %r11521}, {%r548, %r554, %r551, %r557}, {%r11064, %r11180}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11524, %r11527}, {%r548, %r554, %r551, %r557}, {%r11073, %r11187}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11530, %r11533}, {%r548, %r554, %r551, %r557}, {%r11082, %r11194}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11486, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11489, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11492, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11495, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11498, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11501, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11504, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11507, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11510, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11513, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11516, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11519, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11522, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11525, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11528, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11531, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11534, %r11487, %r11488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11537, %r11490, %r11491;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11540, %r11493, %r11494;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11543, %r11496, %r11497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11546, %r11499, %r11500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11549, %r11502, %r11503;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11552, %r11505, %r11506;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11555, %r11508, %r11509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11558, %r11511, %r11512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11561, %r11514, %r11515;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11564, %r11517, %r11518;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11567, %r11520, %r11521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11570, %r11523, %r11524;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11573, %r11526, %r11527;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11576, %r11529, %r11530;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11579, %r11532, %r11533;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11582, %r134, %r11486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11585, %r134, %r11489;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11588, %r134, %r11492;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11591, %r134, %r11495;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11594, %r134, %r11498;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11597, %r134, %r11501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11600, %r134, %r11504;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11603, %r134, %r11507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11606, %r134, %r11510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11609, %r134, %r11513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11612, %r134, %r11516;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11615, %r134, %r11519;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11618, %r134, %r11522;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11621, %r134, %r11525;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11624, %r134, %r11528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11627, %r134, %r11531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11630, %r135, %r11534;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11633, %r135, %r11537;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11636, %r135, %r11540;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11639, %r135, %r11543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11642, %r135, %r11546;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11645, %r135, %r11549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11648, %r135, %r11552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11651, %r135, %r11555;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11654, %r135, %r11558;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11657, %r135, %r11561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11660, %r135, %r11564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11663, %r135, %r11567;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11666, %r135, %r11570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11669, %r135, %r11573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11672, %r135, %r11576;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11675, %r135, %r11579;
	// end inline asm
	// begin inline asm
	mov.b32 %r11678, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11679, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11680, %r11582, %r11678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11683, %r11680, %r11679;
	// end inline asm
	// begin inline asm
	mov.b32 %r11686, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11687, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11688, %r11585, %r11686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11691, %r11688, %r11687;
	// end inline asm
	// begin inline asm
	mov.b32 %r11694, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11695, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11696, %r11588, %r11694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11699, %r11696, %r11695;
	// end inline asm
	// begin inline asm
	mov.b32 %r11702, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11703, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11704, %r11591, %r11702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11707, %r11704, %r11703;
	// end inline asm
	// begin inline asm
	mov.b32 %r11710, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11711, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11712, %r11594, %r11710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11715, %r11712, %r11711;
	// end inline asm
	// begin inline asm
	mov.b32 %r11718, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11719, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11720, %r11597, %r11718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11723, %r11720, %r11719;
	// end inline asm
	// begin inline asm
	mov.b32 %r11726, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11728, %r11600, %r11726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11731, %r11728, %r11727;
	// end inline asm
	// begin inline asm
	mov.b32 %r11734, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11736, %r11603, %r11734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11739, %r11736, %r11735;
	// end inline asm
	// begin inline asm
	mov.b32 %r11742, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11744, %r11606, %r11742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11747, %r11744, %r11743;
	// end inline asm
	// begin inline asm
	mov.b32 %r11750, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11752, %r11609, %r11750;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11755, %r11752, %r11751;
	// end inline asm
	// begin inline asm
	mov.b32 %r11758, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11760, %r11612, %r11758;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11763, %r11760, %r11759;
	// end inline asm
	// begin inline asm
	mov.b32 %r11766, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11768, %r11615, %r11766;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11771, %r11768, %r11767;
	// end inline asm
	// begin inline asm
	mov.b32 %r11774, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11776, %r11618, %r11774;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11779, %r11776, %r11775;
	// end inline asm
	// begin inline asm
	mov.b32 %r11782, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11784, %r11621, %r11782;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11787, %r11784, %r11783;
	// end inline asm
	// begin inline asm
	mov.b32 %r11790, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11792, %r11624, %r11790;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11795, %r11792, %r11791;
	// end inline asm
	// begin inline asm
	mov.b32 %r11798, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11800, %r11627, %r11798;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11803, %r11800, %r11799;
	// end inline asm
	// begin inline asm
	mov.b32 %r11806, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11808, %r11630, %r11806;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11811, %r11808, %r11807;
	// end inline asm
	// begin inline asm
	mov.b32 %r11814, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11816, %r11633, %r11814;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11819, %r11816, %r11815;
	// end inline asm
	// begin inline asm
	mov.b32 %r11822, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11824, %r11636, %r11822;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11827, %r11824, %r11823;
	// end inline asm
	// begin inline asm
	mov.b32 %r11830, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11832, %r11639, %r11830;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11835, %r11832, %r11831;
	// end inline asm
	// begin inline asm
	mov.b32 %r11838, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11840, %r11642, %r11838;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11843, %r11840, %r11839;
	// end inline asm
	// begin inline asm
	mov.b32 %r11846, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11848, %r11645, %r11846;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11851, %r11848, %r11847;
	// end inline asm
	// begin inline asm
	mov.b32 %r11854, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11856, %r11648, %r11854;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11859, %r11856, %r11855;
	// end inline asm
	// begin inline asm
	mov.b32 %r11862, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11864, %r11651, %r11862;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11867, %r11864, %r11863;
	// end inline asm
	// begin inline asm
	mov.b32 %r11870, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11872, %r11654, %r11870;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11875, %r11872, %r11871;
	// end inline asm
	// begin inline asm
	mov.b32 %r11878, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11880, %r11657, %r11878;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11883, %r11880, %r11879;
	// end inline asm
	// begin inline asm
	mov.b32 %r11886, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11888, %r11660, %r11886;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11891, %r11888, %r11887;
	// end inline asm
	// begin inline asm
	mov.b32 %r11894, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11896, %r11663, %r11894;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11899, %r11896, %r11895;
	// end inline asm
	// begin inline asm
	mov.b32 %r11902, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11904, %r11666, %r11902;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11907, %r11904, %r11903;
	// end inline asm
	// begin inline asm
	mov.b32 %r11910, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11912, %r11669, %r11910;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11915, %r11912, %r11911;
	// end inline asm
	// begin inline asm
	mov.b32 %r11918, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11920, %r11672, %r11918;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11923, %r11920, %r11919;
	// end inline asm
	// begin inline asm
	mov.b32 %r11926, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11928, %r11675, %r11926;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11931, %r11928, %r11927;
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11936, %r11937, %r11935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11939, %r11683, %r11936;
	// end inline asm
	// begin inline asm
	mov.b32 %r11942, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11943, %r11937, %r11942;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11946, %r11691, %r11943;
	// end inline asm
	// begin inline asm
	mov.b32 %r11949, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11950, %r11937, %r11949;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11953, %r11699, %r11950;
	// end inline asm
	// begin inline asm
	mov.b32 %r11956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11957, %r11937, %r11956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11960, %r11707, %r11957;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11963, %r11939, %r11953, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r11967, %r11946, %r11960, %r4334;
	// end inline asm
	shl.b32 	%r11974, %r11967, 4;
	// begin inline asm
	lop3.b32 %r11971, %r4340, %r11963, %r11974, 202;
	// end inline asm
	xor.b32  	%r16178, %r11971, -2004318072;
	// begin inline asm
	mov.b32 %r11978, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11977, %r11978, %r11976;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11980, %r11715, %r11977;
	// end inline asm
	// begin inline asm
	mov.b32 %r11983, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11984, %r11978, %r11983;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11987, %r11723, %r11984;
	// end inline asm
	// begin inline asm
	mov.b32 %r11990, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11991, %r11978, %r11990;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11994, %r11731, %r11991;
	// end inline asm
	// begin inline asm
	mov.b32 %r11997, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11998, %r11978, %r11997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12001, %r11739, %r11998;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12004, %r11980, %r11994, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12008, %r11987, %r12001, %r4334;
	// end inline asm
	shl.b32 	%r12015, %r12008, 4;
	// begin inline asm
	lop3.b32 %r12012, %r4340, %r12004, %r12015, 202;
	// end inline asm
	xor.b32  	%r16179, %r12012, -2004318072;
	// begin inline asm
	mov.b32 %r12019, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12017, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r12019, %r12017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12021, %r11747, %r12018;
	// end inline asm
	// begin inline asm
	mov.b32 %r12024, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r12019, %r12024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12028, %r11755, %r12025;
	// end inline asm
	// begin inline asm
	mov.b32 %r12031, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12032, %r12019, %r12031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12035, %r11763, %r12032;
	// end inline asm
	// begin inline asm
	mov.b32 %r12038, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r12019, %r12038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r11771, %r12039;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12045, %r12021, %r12035, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12049, %r12028, %r12042, %r4334;
	// end inline asm
	shl.b32 	%r12056, %r12049, 4;
	// begin inline asm
	lop3.b32 %r12053, %r4340, %r12045, %r12056, 202;
	// end inline asm
	xor.b32  	%r16180, %r12053, -2004318072;
	// begin inline asm
	mov.b32 %r12060, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12058, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r12060, %r12058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12062, %r11779, %r12059;
	// end inline asm
	// begin inline asm
	mov.b32 %r12065, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r12060, %r12065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12069, %r11787, %r12066;
	// end inline asm
	// begin inline asm
	mov.b32 %r12072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12073, %r12060, %r12072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12076, %r11795, %r12073;
	// end inline asm
	// begin inline asm
	mov.b32 %r12079, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r12060, %r12079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r11803, %r12080;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12086, %r12062, %r12076, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12090, %r12069, %r12083, %r4334;
	// end inline asm
	shl.b32 	%r12097, %r12090, 4;
	// begin inline asm
	lop3.b32 %r12094, %r4340, %r12086, %r12097, 202;
	// end inline asm
	xor.b32  	%r16181, %r12094, -2004318072;
	// begin inline asm
	mov.b32 %r12101, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12099, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r12101, %r12099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12103, %r11811, %r12100;
	// end inline asm
	// begin inline asm
	mov.b32 %r12106, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r12101, %r12106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12110, %r11819, %r12107;
	// end inline asm
	// begin inline asm
	mov.b32 %r12113, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12114, %r12101, %r12113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12117, %r11827, %r12114;
	// end inline asm
	// begin inline asm
	mov.b32 %r12120, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r12101, %r12120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r11835, %r12121;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12127, %r12103, %r12117, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12131, %r12110, %r12124, %r4334;
	// end inline asm
	shl.b32 	%r12138, %r12131, 4;
	// begin inline asm
	lop3.b32 %r12135, %r4340, %r12127, %r12138, 202;
	// end inline asm
	xor.b32  	%r16182, %r12135, -2004318072;
	// begin inline asm
	mov.b32 %r12142, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r12142, %r12140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12144, %r11843, %r12141;
	// end inline asm
	// begin inline asm
	mov.b32 %r12147, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r12142, %r12147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12151, %r11851, %r12148;
	// end inline asm
	// begin inline asm
	mov.b32 %r12154, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12155, %r12142, %r12154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12158, %r11859, %r12155;
	// end inline asm
	// begin inline asm
	mov.b32 %r12161, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r12142, %r12161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r11867, %r12162;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12168, %r12144, %r12158, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12172, %r12151, %r12165, %r4334;
	// end inline asm
	shl.b32 	%r12179, %r12172, 4;
	// begin inline asm
	lop3.b32 %r12176, %r4340, %r12168, %r12179, 202;
	// end inline asm
	xor.b32  	%r16183, %r12176, -2004318072;
	// begin inline asm
	mov.b32 %r12183, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12181, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r12183, %r12181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12185, %r11875, %r12182;
	// end inline asm
	// begin inline asm
	mov.b32 %r12188, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r12183, %r12188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12192, %r11883, %r12189;
	// end inline asm
	// begin inline asm
	mov.b32 %r12195, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12196, %r12183, %r12195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12199, %r11891, %r12196;
	// end inline asm
	// begin inline asm
	mov.b32 %r12202, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r12183, %r12202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r11899, %r12203;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12209, %r12185, %r12199, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12213, %r12192, %r12206, %r4334;
	// end inline asm
	shl.b32 	%r12220, %r12213, 4;
	// begin inline asm
	lop3.b32 %r12217, %r4340, %r12209, %r12220, 202;
	// end inline asm
	xor.b32  	%r16184, %r12217, -2004318072;
	// begin inline asm
	mov.b32 %r12224, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12222, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r12224, %r12222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12226, %r11907, %r12223;
	// end inline asm
	// begin inline asm
	mov.b32 %r12229, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r12224, %r12229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12233, %r11915, %r12230;
	// end inline asm
	// begin inline asm
	mov.b32 %r12236, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12237, %r12224, %r12236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12240, %r11923, %r12237;
	// end inline asm
	// begin inline asm
	mov.b32 %r12243, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12244, %r12224, %r12243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r11931, %r12244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12250, %r12226, %r12240, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12254, %r12233, %r12247, %r4334;
	// end inline asm
	shl.b32 	%r12261, %r12254, 4;
	// begin inline asm
	lop3.b32 %r12258, %r4340, %r12250, %r12261, 202;
	// end inline asm
	xor.b32  	%r16185, %r12258, -2004318072;
	st.shared.u32 	[%rd106], %r16178;
	st.shared.u32 	[%rd108], %r16179;
	st.shared.u32 	[%rd110], %r16180;
	st.shared.u32 	[%rd112], %r16181;
	st.shared.u32 	[%rd114], %r16182;
	st.shared.u32 	[%rd116], %r16183;
	st.shared.u32 	[%rd118], %r16184;
	st.shared.u32 	[%rd120], %r16185;
	ld.shared.u32 	%r16294, [%rd90];
	ld.shared.u32 	%r16295, [%rd92];
	ld.shared.u32 	%r16296, [%rd94];
	ld.shared.u32 	%r16297, [%rd96];
	ld.shared.u32 	%r16306, [%rd98];
	ld.shared.u32 	%r16307, [%rd100];
	ld.shared.u32 	%r16308, [%rd102];
	ld.shared.u32 	%r16309, [%rd104];
	// begin inline asm
	mov.b32 %r12267, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12278, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12266, %r16294, -2004318072;
	// begin inline asm
	lop3.b32 %r12264, %r817, %r12266, %r12267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12268, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12269, %r12267, %r12268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12272, %r12264, %r12269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12275, %r828, %r12266, %r12278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12279, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12280, %r12278, %r12279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12283, %r12275, %r12280;
	// end inline asm
	shr.u32 	%r12288, %r12266, 8;
	// begin inline asm
	lop3.b32 %r12286, %r817, %r12288, %r12267, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12290, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12291, %r12267, %r12290;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12294, %r12286, %r12291;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12297, %r828, %r12288, %r12278, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12301, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12302, %r12278, %r12301;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12305, %r12297, %r12302;
	// end inline asm
	// begin inline asm
	mov.b32 %r12313, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12324, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12312, %r16295, -2004318072;
	// begin inline asm
	lop3.b32 %r12310, %r817, %r12312, %r12313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12314, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12315, %r12313, %r12314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12318, %r12310, %r12315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12321, %r828, %r12312, %r12324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12325, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12326, %r12324, %r12325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12329, %r12321, %r12326;
	// end inline asm
	shr.u32 	%r12334, %r12312, 8;
	// begin inline asm
	lop3.b32 %r12332, %r817, %r12334, %r12313, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12336, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12337, %r12313, %r12336;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12340, %r12332, %r12337;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12343, %r828, %r12334, %r12324, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12347, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12348, %r12324, %r12347;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12351, %r12343, %r12348;
	// end inline asm
	// begin inline asm
	mov.b32 %r12359, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12370, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12358, %r16296, -2004318072;
	// begin inline asm
	lop3.b32 %r12356, %r817, %r12358, %r12359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12360, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12361, %r12359, %r12360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12364, %r12356, %r12361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12367, %r828, %r12358, %r12370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12371, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12372, %r12370, %r12371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12375, %r12367, %r12372;
	// end inline asm
	shr.u32 	%r12380, %r12358, 8;
	// begin inline asm
	lop3.b32 %r12378, %r817, %r12380, %r12359, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12382, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12383, %r12359, %r12382;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12386, %r12378, %r12383;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12389, %r828, %r12380, %r12370, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12393, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12394, %r12370, %r12393;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12397, %r12389, %r12394;
	// end inline asm
	// begin inline asm
	mov.b32 %r12405, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12416, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12404, %r16297, -2004318072;
	// begin inline asm
	lop3.b32 %r12402, %r817, %r12404, %r12405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12407, %r12405, %r12406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12410, %r12402, %r12407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12413, %r828, %r12404, %r12416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12417, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12418, %r12416, %r12417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12421, %r12413, %r12418;
	// end inline asm
	shr.u32 	%r12426, %r12404, 8;
	// begin inline asm
	lop3.b32 %r12424, %r817, %r12426, %r12405, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12428, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12429, %r12405, %r12428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12432, %r12424, %r12429;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12435, %r828, %r12426, %r12416, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12439, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12440, %r12416, %r12439;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12443, %r12435, %r12440;
	// end inline asm
	// begin inline asm
	mov.b32 %r12451, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12462, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12450, %r16306, -2004318072;
	// begin inline asm
	lop3.b32 %r12448, %r817, %r12450, %r12451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12453, %r12451, %r12452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12456, %r12448, %r12453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12459, %r828, %r12450, %r12462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12463, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12464, %r12462, %r12463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12467, %r12459, %r12464;
	// end inline asm
	shr.u32 	%r12472, %r12450, 8;
	// begin inline asm
	lop3.b32 %r12470, %r817, %r12472, %r12451, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12474, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12475, %r12451, %r12474;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12478, %r12470, %r12475;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12481, %r828, %r12472, %r12462, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12485, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12486, %r12462, %r12485;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12489, %r12481, %r12486;
	// end inline asm
	// begin inline asm
	mov.b32 %r12497, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12508, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12496, %r16307, -2004318072;
	// begin inline asm
	lop3.b32 %r12494, %r817, %r12496, %r12497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12499, %r12497, %r12498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12502, %r12494, %r12499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12505, %r828, %r12496, %r12508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12509, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12510, %r12508, %r12509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12513, %r12505, %r12510;
	// end inline asm
	shr.u32 	%r12518, %r12496, 8;
	// begin inline asm
	lop3.b32 %r12516, %r817, %r12518, %r12497, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12520, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12521, %r12497, %r12520;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12524, %r12516, %r12521;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12527, %r828, %r12518, %r12508, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12531, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12532, %r12508, %r12531;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12535, %r12527, %r12532;
	// end inline asm
	// begin inline asm
	mov.b32 %r12543, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12554, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12542, %r16308, -2004318072;
	// begin inline asm
	lop3.b32 %r12540, %r817, %r12542, %r12543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12545, %r12543, %r12544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12548, %r12540, %r12545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12551, %r828, %r12542, %r12554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12555, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12556, %r12554, %r12555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12559, %r12551, %r12556;
	// end inline asm
	shr.u32 	%r12564, %r12542, 8;
	// begin inline asm
	lop3.b32 %r12562, %r817, %r12564, %r12543, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12566, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12567, %r12543, %r12566;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12570, %r12562, %r12567;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12573, %r828, %r12564, %r12554, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12577, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12578, %r12554, %r12577;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12581, %r12573, %r12578;
	// end inline asm
	// begin inline asm
	mov.b32 %r12589, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12600, {%rs2179, %rs2179};
	// end inline asm
	xor.b32  	%r12588, %r16309, -2004318072;
	// begin inline asm
	lop3.b32 %r12586, %r817, %r12588, %r12589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12591, %r12589, %r12590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12594, %r12586, %r12591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12597, %r828, %r12588, %r12600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12601, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12602, %r12600, %r12601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12605, %r12597, %r12602;
	// end inline asm
	shr.u32 	%r12610, %r12588, 8;
	// begin inline asm
	lop3.b32 %r12608, %r817, %r12610, %r12589, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12612, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12613, %r12589, %r12612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12616, %r12608, %r12613;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12619, %r828, %r12610, %r12600, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12623, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12624, %r12600, %r12623;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12627, %r12619, %r12624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12630, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12632, %r12630, %r12272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12635, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12637, %r12635, %r12283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12640, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12642, %r12640, %r12294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12645, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12647, %r12645, %r12305;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12650, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12652, %r12650, %r12318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12655, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12657, %r12655, %r12329;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12660, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12662, %r12660, %r12340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12665, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12667, %r12665, %r12351;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12670, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12672, %r12670, %r12364;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12675, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12677, %r12675, %r12375;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12680, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12682, %r12680, %r12386;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12685, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12687, %r12685, %r12397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12690, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12692, %r12690, %r12410;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12695, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12697, %r12695, %r12421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12700, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12702, %r12700, %r12432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12705, %r372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12707, %r12705, %r12443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12710, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12712, %r12710, %r12456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12715, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12717, %r12715, %r12467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12720, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12722, %r12720, %r12478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12725, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12727, %r12725, %r12489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12730, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12732, %r12730, %r12502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12735, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12737, %r12735, %r12513;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12740, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12742, %r12740, %r12524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12745, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12747, %r12745, %r12535;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12750, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12752, %r12750, %r12548;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12755, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12757, %r12755, %r12559;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12760, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12762, %r12760, %r12570;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12765, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12767, %r12765, %r12581;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12770, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12772, %r12770, %r12594;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12775, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12777, %r12775, %r12605;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12780, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12782, %r12780, %r12616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12785, %r390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12787, %r12785, %r12627;
	// end inline asm
	// begin inline asm
	mov.b32 %r12795, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12806, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12792, %r817, %r818, %r12795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12796, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12797, %r12795, %r12796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12800, %r12792, %r12797;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12803, %r828, %r818, %r12806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12807, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12808, %r12806, %r12807;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12811, %r12803, %r12808;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12814, %r817, %r840, %r12795, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12818, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12819, %r12795, %r12818;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12822, %r12814, %r12819;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12825, %r828, %r840, %r12806, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12829, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12830, %r12806, %r12829;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12833, %r12825, %r12830;
	// end inline asm
	// begin inline asm
	mov.b32 %r12841, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12852, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12838, %r817, %r864, %r12841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12842, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12843, %r12841, %r12842;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12846, %r12838, %r12843;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12849, %r828, %r864, %r12852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12853, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12854, %r12852, %r12853;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12857, %r12849, %r12854;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12860, %r817, %r886, %r12841, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12864, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12865, %r12841, %r12864;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12868, %r12860, %r12865;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12871, %r828, %r886, %r12852, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12875, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12876, %r12852, %r12875;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12879, %r12871, %r12876;
	// end inline asm
	// begin inline asm
	mov.b32 %r12887, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12898, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12884, %r817, %r910, %r12887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12889, %r12887, %r12888;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12892, %r12884, %r12889;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12895, %r828, %r910, %r12898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12899, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12900, %r12898, %r12899;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12903, %r12895, %r12900;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12906, %r817, %r932, %r12887, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12910, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12911, %r12887, %r12910;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12914, %r12906, %r12911;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12917, %r828, %r932, %r12898, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12921, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12922, %r12898, %r12921;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12925, %r12917, %r12922;
	// end inline asm
	// begin inline asm
	mov.b32 %r12933, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12944, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12930, %r817, %r956, %r12933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12934, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12935, %r12933, %r12934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12938, %r12930, %r12935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12941, %r828, %r956, %r12944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12945, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12946, %r12944, %r12945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12949, %r12941, %r12946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12952, %r817, %r978, %r12933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12957, %r12933, %r12956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12960, %r12952, %r12957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12963, %r828, %r978, %r12944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12967, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12968, %r12944, %r12967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12971, %r12963, %r12968;
	// end inline asm
	// begin inline asm
	mov.b32 %r12979, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r12990, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12976, %r817, %r1002, %r12979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12980, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12981, %r12979, %r12980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12984, %r12976, %r12981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12987, %r828, %r1002, %r12990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12991, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12992, %r12990, %r12991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12995, %r12987, %r12992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12998, %r817, %r1024, %r12979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13002, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13003, %r12979, %r13002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13006, %r12998, %r13003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13009, %r828, %r1024, %r12990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13013, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13014, %r12990, %r13013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13017, %r13009, %r13014;
	// end inline asm
	// begin inline asm
	mov.b32 %r13025, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13036, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13022, %r817, %r1048, %r13025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13026, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13027, %r13025, %r13026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13030, %r13022, %r13027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13033, %r828, %r1048, %r13036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13037, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13038, %r13036, %r13037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13041, %r13033, %r13038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13044, %r817, %r1070, %r13025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13048, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13049, %r13025, %r13048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13052, %r13044, %r13049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13055, %r828, %r1070, %r13036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13060, %r13036, %r13059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13063, %r13055, %r13060;
	// end inline asm
	// begin inline asm
	mov.b32 %r13071, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13082, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13068, %r817, %r1094, %r13071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13072, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13073, %r13071, %r13072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13076, %r13068, %r13073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13079, %r828, %r1094, %r13082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13083, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13084, %r13082, %r13083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13087, %r13079, %r13084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13090, %r817, %r1116, %r13071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13094, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13095, %r13071, %r13094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13098, %r13090, %r13095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13101, %r828, %r1116, %r13082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13105, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13106, %r13082, %r13105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13109, %r13101, %r13106;
	// end inline asm
	// begin inline asm
	mov.b32 %r13117, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13128, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13114, %r817, %r1140, %r13117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13118, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13119, %r13117, %r13118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13122, %r13114, %r13119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13125, %r828, %r1140, %r13128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13129, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13130, %r13128, %r13129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13133, %r13125, %r13130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13136, %r817, %r1162, %r13117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13140, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13141, %r13117, %r13140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13144, %r13136, %r13141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13147, %r828, %r1162, %r13128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13151, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13152, %r13128, %r13151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13155, %r13147, %r13152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13158, %r264, %r12800, %r12632;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13162, %r264, %r12811, %r12637;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13166, %r264, %r12822, %r12642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13170, %r264, %r12833, %r12647;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13174, %r264, %r12846, %r12652;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13178, %r264, %r12857, %r12657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13182, %r264, %r12868, %r12662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13186, %r264, %r12879, %r12667;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13190, %r264, %r12892, %r12672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13194, %r264, %r12903, %r12677;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13198, %r264, %r12914, %r12682;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13202, %r264, %r12925, %r12687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13206, %r264, %r12938, %r12692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13210, %r264, %r12949, %r12697;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13214, %r264, %r12960, %r12702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13218, %r264, %r12971, %r12707;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13222, %r282, %r12984, %r12712;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13226, %r282, %r12995, %r12717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13230, %r282, %r13006, %r12722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13234, %r282, %r13017, %r12727;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13238, %r282, %r13030, %r12732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13242, %r282, %r13041, %r12737;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13246, %r282, %r13052, %r12742;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13250, %r282, %r13063, %r12747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13254, %r282, %r13076, %r12752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13258, %r282, %r13087, %r12757;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13262, %r282, %r13098, %r12762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13266, %r282, %r13109, %r12767;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13270, %r282, %r13122, %r12772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13274, %r282, %r13133, %r12777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13278, %r282, %r13144, %r12782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13282, %r282, %r13155, %r12787;
	// end inline asm
	// begin inline asm
	mov.b32 %r13291, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13302, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13288, %r817, %r4634, %r13291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13292, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13293, %r13291, %r13292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13296, %r13288, %r13293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13299, %r828, %r4634, %r13302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13303, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13304, %r13302, %r13303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13307, %r13299, %r13304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13310, %r817, %r4656, %r13291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13314, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13315, %r13291, %r13314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13318, %r13310, %r13315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13321, %r828, %r4656, %r13302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13325, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13326, %r13302, %r13325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13329, %r13321, %r13326;
	// end inline asm
	// begin inline asm
	mov.b32 %r13337, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13348, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13334, %r817, %r4680, %r13337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13338, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13339, %r13337, %r13338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13342, %r13334, %r13339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13345, %r828, %r4680, %r13348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13349, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13350, %r13348, %r13349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13353, %r13345, %r13350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13356, %r817, %r4702, %r13337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13360, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13361, %r13337, %r13360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13364, %r13356, %r13361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13367, %r828, %r4702, %r13348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13371, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13372, %r13348, %r13371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13375, %r13367, %r13372;
	// end inline asm
	// begin inline asm
	mov.b32 %r13383, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13394, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13380, %r817, %r4726, %r13383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13384, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13385, %r13383, %r13384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13388, %r13380, %r13385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13391, %r828, %r4726, %r13394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13395, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13396, %r13394, %r13395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13399, %r13391, %r13396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13402, %r817, %r4748, %r13383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13406, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13407, %r13383, %r13406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13410, %r13402, %r13407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13413, %r828, %r4748, %r13394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13417, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13418, %r13394, %r13417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13421, %r13413, %r13418;
	// end inline asm
	// begin inline asm
	mov.b32 %r13429, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13440, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13426, %r817, %r4772, %r13429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13430, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13431, %r13429, %r13430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13434, %r13426, %r13431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13437, %r828, %r4772, %r13440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13441, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13442, %r13440, %r13441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13445, %r13437, %r13442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13448, %r817, %r4794, %r13429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13452, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13453, %r13429, %r13452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13456, %r13448, %r13453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13459, %r828, %r4794, %r13440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13463, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13464, %r13440, %r13463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13467, %r13459, %r13464;
	// end inline asm
	// begin inline asm
	mov.b32 %r13475, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13486, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13472, %r817, %r4818, %r13475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13476, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13477, %r13475, %r13476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13480, %r13472, %r13477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13483, %r828, %r4818, %r13486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13487, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13488, %r13486, %r13487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13491, %r13483, %r13488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13494, %r817, %r4840, %r13475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13498, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13499, %r13475, %r13498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13502, %r13494, %r13499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13505, %r828, %r4840, %r13486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13509, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13510, %r13486, %r13509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13513, %r13505, %r13510;
	// end inline asm
	// begin inline asm
	mov.b32 %r13521, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13532, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13518, %r817, %r4864, %r13521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13522, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13523, %r13521, %r13522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13526, %r13518, %r13523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13529, %r828, %r4864, %r13532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13533, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13534, %r13532, %r13533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13537, %r13529, %r13534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13540, %r817, %r4886, %r13521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13544, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13545, %r13521, %r13544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13548, %r13540, %r13545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13551, %r828, %r4886, %r13532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13555, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13556, %r13532, %r13555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13559, %r13551, %r13556;
	// end inline asm
	// begin inline asm
	mov.b32 %r13567, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13578, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13564, %r817, %r4910, %r13567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13568, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13569, %r13567, %r13568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13572, %r13564, %r13569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13575, %r828, %r4910, %r13578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13579, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13580, %r13578, %r13579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13583, %r13575, %r13580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13586, %r817, %r4932, %r13567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13590, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13591, %r13567, %r13590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13594, %r13586, %r13591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13597, %r828, %r4932, %r13578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13601, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13602, %r13578, %r13601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13605, %r13597, %r13602;
	// end inline asm
	// begin inline asm
	mov.b32 %r13613, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13624, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13610, %r817, %r4956, %r13613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13614, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13615, %r13613, %r13614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13618, %r13610, %r13615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13621, %r828, %r4956, %r13624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13625, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13626, %r13624, %r13625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13629, %r13621, %r13626;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13632, %r817, %r4978, %r13613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13636, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13637, %r13613, %r13636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13640, %r13632, %r13637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13643, %r828, %r4978, %r13624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13647, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13648, %r13624, %r13647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13651, %r13643, %r13648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13654, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13656, %r13654, %r13296, %r13158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13660, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13662, %r13660, %r13307, %r13162;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13666, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13668, %r13666, %r13318, %r13166;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13672, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13674, %r13672, %r13329, %r13170;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13678, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13680, %r13678, %r13342, %r13174;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13684, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13686, %r13684, %r13353, %r13178;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13690, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13692, %r13690, %r13364, %r13182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13696, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13698, %r13696, %r13375, %r13186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13702, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13704, %r13702, %r13388, %r13190;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13708, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13710, %r13708, %r13399, %r13194;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13714, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13716, %r13714, %r13410, %r13198;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13720, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13722, %r13720, %r13421, %r13202;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13726, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13728, %r13726, %r13434, %r13206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13732, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13734, %r13732, %r13445, %r13210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13738, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13740, %r13738, %r13456, %r13214;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13744, %r300;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13746, %r13744, %r13467, %r13218;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13750, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13752, %r13750, %r13480, %r13222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13756, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13758, %r13756, %r13491, %r13226;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13762, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13764, %r13762, %r13502, %r13230;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13768, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13770, %r13768, %r13513, %r13234;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13774, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13776, %r13774, %r13526, %r13238;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13780, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13782, %r13780, %r13537, %r13242;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13786, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13788, %r13786, %r13548, %r13246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13792, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13794, %r13792, %r13559, %r13250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13798, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13800, %r13798, %r13572, %r13254;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13804, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13806, %r13804, %r13583, %r13258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13810, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13812, %r13810, %r13594, %r13262;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13816, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13818, %r13816, %r13605, %r13266;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13822, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13824, %r13822, %r13618, %r13270;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13828, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13830, %r13828, %r13629, %r13274;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13834, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13836, %r13834, %r13640, %r13278;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13840, %r318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13842, %r13840, %r13651, %r13282;
	// end inline asm
	// begin inline asm
	mov.b32 %r13851, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13862, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13848, %r817, %r8450, %r13851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13852, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13853, %r13851, %r13852;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13856, %r13848, %r13853;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13859, %r828, %r8450, %r13862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13863, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13864, %r13862, %r13863;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13867, %r13859, %r13864;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13870, %r817, %r8472, %r13851, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13874, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13875, %r13851, %r13874;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13878, %r13870, %r13875;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13881, %r828, %r8472, %r13862, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13885, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13886, %r13862, %r13885;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13889, %r13881, %r13886;
	// end inline asm
	// begin inline asm
	mov.b32 %r13897, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13908, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13894, %r817, %r8496, %r13897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13898, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13899, %r13897, %r13898;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13902, %r13894, %r13899;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13905, %r828, %r8496, %r13908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13909, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13910, %r13908, %r13909;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13913, %r13905, %r13910;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13916, %r817, %r8518, %r13897, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13920, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13921, %r13897, %r13920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13924, %r13916, %r13921;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13927, %r828, %r8518, %r13908, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13931, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13932, %r13908, %r13931;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13935, %r13927, %r13932;
	// end inline asm
	// begin inline asm
	mov.b32 %r13943, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r13954, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13940, %r817, %r8542, %r13943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13944, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13945, %r13943, %r13944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13948, %r13940, %r13945;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13951, %r828, %r8542, %r13954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13955, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13956, %r13954, %r13955;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13959, %r13951, %r13956;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13962, %r817, %r8564, %r13943, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13966, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13967, %r13943, %r13966;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13970, %r13962, %r13967;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13973, %r828, %r8564, %r13954, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13977, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13978, %r13954, %r13977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13981, %r13973, %r13978;
	// end inline asm
	// begin inline asm
	mov.b32 %r13989, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14000, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13986, %r817, %r8588, %r13989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13990, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13991, %r13989, %r13990;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13994, %r13986, %r13991;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13997, %r828, %r8588, %r14000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14001, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14002, %r14000, %r14001;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14005, %r13997, %r14002;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14008, %r817, %r8610, %r13989, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14012, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14013, %r13989, %r14012;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14016, %r14008, %r14013;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14019, %r828, %r8610, %r14000, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14023, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14024, %r14000, %r14023;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14027, %r14019, %r14024;
	// end inline asm
	// begin inline asm
	mov.b32 %r14035, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14046, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14032, %r817, %r8634, %r14035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14036, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14037, %r14035, %r14036;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14040, %r14032, %r14037;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14043, %r828, %r8634, %r14046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14047, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14048, %r14046, %r14047;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14051, %r14043, %r14048;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14054, %r817, %r8656, %r14035, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14058, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14059, %r14035, %r14058;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14062, %r14054, %r14059;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14065, %r828, %r8656, %r14046, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14069, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14070, %r14046, %r14069;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14073, %r14065, %r14070;
	// end inline asm
	// begin inline asm
	mov.b32 %r14081, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14092, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14078, %r817, %r8680, %r14081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14082, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14083, %r14081, %r14082;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14086, %r14078, %r14083;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14089, %r828, %r8680, %r14092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14093, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14094, %r14092, %r14093;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14097, %r14089, %r14094;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14100, %r817, %r8702, %r14081, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14104, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14105, %r14081, %r14104;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14108, %r14100, %r14105;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14111, %r828, %r8702, %r14092, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14115, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14116, %r14092, %r14115;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14119, %r14111, %r14116;
	// end inline asm
	// begin inline asm
	mov.b32 %r14127, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14138, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14124, %r817, %r8726, %r14127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14128, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14129, %r14127, %r14128;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14132, %r14124, %r14129;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14135, %r828, %r8726, %r14138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14139, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14140, %r14138, %r14139;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14143, %r14135, %r14140;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14146, %r817, %r8748, %r14127, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14150, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14151, %r14127, %r14150;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14154, %r14146, %r14151;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14157, %r828, %r8748, %r14138, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14161, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14162, %r14138, %r14161;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14165, %r14157, %r14162;
	// end inline asm
	// begin inline asm
	mov.b32 %r14173, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r14184, {%rs2179, %rs2179};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14170, %r817, %r8772, %r14173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14174, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14175, %r14173, %r14174;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14178, %r14170, %r14175;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14181, %r828, %r8772, %r14184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14185, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14186, %r14184, %r14185;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14189, %r14181, %r14186;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14192, %r817, %r8794, %r14173, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14196, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14197, %r14173, %r14196;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14200, %r14192, %r14197;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14203, %r828, %r8794, %r14184, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14207, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14208, %r14184, %r14207;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14211, %r14203, %r14208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14349, %r336, %r13856, %r13656;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14346, %r336, %r13867, %r13662;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14358, %r336, %r13878, %r13668;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14355, %r336, %r13889, %r13674;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14367, %r336, %r13902, %r13680;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14364, %r336, %r13913, %r13686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14376, %r336, %r13924, %r13692;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14373, %r336, %r13935, %r13698;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14385, %r336, %r13948, %r13704;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14382, %r336, %r13959, %r13710;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14394, %r336, %r13970, %r13716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14391, %r336, %r13981, %r13722;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14403, %r336, %r13994, %r13728;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14400, %r336, %r14005, %r13734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14412, %r336, %r14016, %r13740;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14409, %r336, %r14027, %r13746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14421, %r354, %r14040, %r13752;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14418, %r354, %r14051, %r13758;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14430, %r354, %r14062, %r13764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14427, %r354, %r14073, %r13770;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14439, %r354, %r14086, %r13776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14436, %r354, %r14097, %r13782;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14448, %r354, %r14108, %r13788;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14445, %r354, %r14119, %r13794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14457, %r354, %r14132, %r13800;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14454, %r354, %r14143, %r13806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14466, %r354, %r14154, %r13812;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14463, %r354, %r14165, %r13818;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14475, %r354, %r14178, %r13824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14472, %r354, %r14189, %r13830;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14484, %r354, %r14200, %r13836;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14481, %r354, %r14211, %r13842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14342, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14344, %r14342, %r14346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14347, %r393, %r14349, %r14344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14351, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14353, %r14351, %r14355;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14356, %r393, %r14358, %r14353;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14360, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14362, %r14360, %r14364;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14365, %r393, %r14367, %r14362;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14369, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14371, %r14369, %r14373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14374, %r393, %r14376, %r14371;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14378, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14380, %r14378, %r14382;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14383, %r393, %r14385, %r14380;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14387, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14389, %r14387, %r14391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14392, %r393, %r14394, %r14389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14396, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14398, %r14396, %r14400;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14401, %r393, %r14403, %r14398;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14405, %r399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14407, %r14405, %r14409;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14410, %r393, %r14412, %r14407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14414, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14416, %r14414, %r14418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14419, %r396, %r14421, %r14416;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14423, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14425, %r14423, %r14427;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r396, %r14430, %r14425;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14432, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14434, %r14432, %r14436;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r396, %r14439, %r14434;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14441, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14443, %r14441, %r14445;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r396, %r14448, %r14443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14450, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14452, %r14450, %r14454;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r396, %r14457, %r14452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14459, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14461, %r14459, %r14463;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r396, %r14466, %r14461;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14468, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14470, %r14468, %r14472;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r396, %r14475, %r14470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14477, %r402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14479, %r14477, %r14481;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r396, %r14484, %r14479;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14486, %r399, %r14349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14489, %r393, %r14346, %r14486;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14493, %r399, %r14358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14496, %r393, %r14355, %r14493;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14500, %r399, %r14367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r393, %r14364, %r14500;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14507, %r399, %r14376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r393, %r14373, %r14507;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14514, %r399, %r14385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14517, %r393, %r14382, %r14514;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14521, %r399, %r14394;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r393, %r14391, %r14521;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r399, %r14403;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r393, %r14400, %r14528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14535, %r399, %r14412;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14538, %r393, %r14409, %r14535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14542, %r402, %r14421;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r396, %r14418, %r14542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14549, %r402, %r14430;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r396, %r14427, %r14549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14556, %r402, %r14439;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r396, %r14436, %r14556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14563, %r402, %r14448;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r396, %r14445, %r14563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14570, %r402, %r14457;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14573, %r396, %r14454, %r14570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14577, %r402, %r14466;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14580, %r396, %r14463, %r14577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14584, %r402, %r14475;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14587, %r396, %r14472, %r14584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14591, %r402, %r14484;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14594, %r396, %r14481, %r14591;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14765, %r14762}, {%r460, %r466, %r463, %r469}, {%r14347, %r14489}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14774, %r14771}, {%r460, %r466, %r463, %r469}, {%r14356, %r14496}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14783, %r14780}, {%r460, %r466, %r463, %r469}, {%r14365, %r14503}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14792, %r14789}, {%r460, %r466, %r463, %r469}, {%r14374, %r14510}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14801, %r14798}, {%r460, %r466, %r463, %r469}, {%r14383, %r14517}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14810, %r14807}, {%r460, %r466, %r463, %r469}, {%r14392, %r14524}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14819, %r14816}, {%r460, %r466, %r463, %r469}, {%r14401, %r14531}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14828, %r14825}, {%r460, %r466, %r463, %r469}, {%r14410, %r14538}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14837, %r14834}, {%r460, %r466, %r463, %r469}, {%r14419, %r14545}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14846, %r14843}, {%r460, %r466, %r463, %r469}, {%r14428, %r14552}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14855, %r14852}, {%r460, %r466, %r463, %r469}, {%r14437, %r14559}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14864, %r14861}, {%r460, %r466, %r463, %r469}, {%r14446, %r14566}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14873, %r14870}, {%r460, %r466, %r463, %r469}, {%r14455, %r14573}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14882, %r14879}, {%r460, %r466, %r463, %r469}, {%r14464, %r14580}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14891, %r14888}, {%r460, %r466, %r463, %r469}, {%r14473, %r14587}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14900, %r14897}, {%r460, %r466, %r463, %r469}, {%r14482, %r14594}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14758, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14760, %r14758, %r14762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14763, %r510, %r14765, %r14760;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14767, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14769, %r14767, %r14771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14772, %r510, %r14774, %r14769;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14776, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14778, %r14776, %r14780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14781, %r510, %r14783, %r14778;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14785, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14787, %r14785, %r14789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14790, %r510, %r14792, %r14787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14794, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14796, %r14794, %r14798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14799, %r510, %r14801, %r14796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14803, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14805, %r14803, %r14807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14808, %r510, %r14810, %r14805;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14812, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14814, %r14812, %r14816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14817, %r510, %r14819, %r14814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14821, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14823, %r14821, %r14825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14826, %r510, %r14828, %r14823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14830, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14832, %r14830, %r14834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14835, %r510, %r14837, %r14832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14839, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14841, %r14839, %r14843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14844, %r510, %r14846, %r14841;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14848, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14850, %r14848, %r14852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14853, %r510, %r14855, %r14850;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14857, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14859, %r14857, %r14861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14862, %r510, %r14864, %r14859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14866, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14868, %r14866, %r14870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14871, %r510, %r14873, %r14868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14875, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14877, %r14875, %r14879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14880, %r510, %r14882, %r14877;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14884, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14886, %r14884, %r14888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14889, %r510, %r14891, %r14886;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14893, %r513;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14895, %r14893, %r14897;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14898, %r510, %r14900, %r14895;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14902, %r513, %r14765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14905, %r510, %r14762, %r14902;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14909, %r513, %r14774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14912, %r510, %r14771, %r14909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14916, %r513, %r14783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14919, %r510, %r14780, %r14916;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14923, %r513, %r14792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14926, %r510, %r14789, %r14923;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14930, %r513, %r14801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14933, %r510, %r14798, %r14930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14937, %r513, %r14810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14940, %r510, %r14807, %r14937;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r513, %r14819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r510, %r14816, %r14944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14951, %r513, %r14828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14954, %r510, %r14825, %r14951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14958, %r513, %r14837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14961, %r510, %r14834, %r14958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14965, %r513, %r14846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14968, %r510, %r14843, %r14965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14972, %r513, %r14855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14975, %r510, %r14852, %r14972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14979, %r513, %r14864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14982, %r510, %r14861, %r14979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14986, %r513, %r14873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14989, %r510, %r14870, %r14986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14993, %r513, %r14882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14996, %r510, %r14879, %r14993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15000, %r513, %r14891;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15003, %r510, %r14888, %r15000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15007, %r513, %r14900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15010, %r510, %r14897, %r15007;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15303, %r15306}, {%r548, %r554, %r551, %r557}, {%r14763, %r14905}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15309, %r15312}, {%r548, %r554, %r551, %r557}, {%r14772, %r14912}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15315, %r15318}, {%r548, %r554, %r551, %r557}, {%r14781, %r14919}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15321, %r15324}, {%r548, %r554, %r551, %r557}, {%r14790, %r14926}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15327, %r15330}, {%r548, %r554, %r551, %r557}, {%r14799, %r14933}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15333, %r15336}, {%r548, %r554, %r551, %r557}, {%r14808, %r14940}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15339, %r15342}, {%r548, %r554, %r551, %r557}, {%r14817, %r14947}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15345, %r15348}, {%r548, %r554, %r551, %r557}, {%r14826, %r14954}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15304, %r15307}, {%r548, %r554, %r551, %r557}, {%r14835, %r14961}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15310, %r15313}, {%r548, %r554, %r551, %r557}, {%r14844, %r14968}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15316, %r15319}, {%r548, %r554, %r551, %r557}, {%r14853, %r14975}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15322, %r15325}, {%r548, %r554, %r551, %r557}, {%r14862, %r14982}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15328, %r15331}, {%r548, %r554, %r551, %r557}, {%r14871, %r14989}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15334, %r15337}, {%r548, %r554, %r551, %r557}, {%r14880, %r14996}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15340, %r15343}, {%r548, %r554, %r551, %r557}, {%r14889, %r15003}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15346, %r15349}, {%r548, %r554, %r551, %r557}, {%r14898, %r15010}, {%r3158, %r3158};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15302, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15305, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15308, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15311, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15314, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15317, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15320, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15323, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15326, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15329, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15332, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15335, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15338, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15341, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15344, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15347, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15350, %r15303, %r15304;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15353, %r15306, %r15307;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15356, %r15309, %r15310;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15359, %r15312, %r15313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15362, %r15315, %r15316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15365, %r15318, %r15319;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15368, %r15321, %r15322;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15371, %r15324, %r15325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15374, %r15327, %r15328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15377, %r15330, %r15331;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15380, %r15333, %r15334;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15383, %r15336, %r15337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15386, %r15339, %r15340;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15389, %r15342, %r15343;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15392, %r15345, %r15346;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15395, %r15348, %r15349;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15398, %r134, %r15302;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15401, %r134, %r15305;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15404, %r134, %r15308;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15407, %r134, %r15311;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15410, %r134, %r15314;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15413, %r134, %r15317;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15416, %r134, %r15320;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15419, %r134, %r15323;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15422, %r134, %r15326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15425, %r134, %r15329;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15428, %r134, %r15332;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15431, %r134, %r15335;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15434, %r134, %r15338;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15437, %r134, %r15341;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15440, %r134, %r15344;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15443, %r134, %r15347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15446, %r135, %r15350;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15449, %r135, %r15353;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15452, %r135, %r15356;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15455, %r135, %r15359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15458, %r135, %r15362;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15461, %r135, %r15365;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15464, %r135, %r15368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15467, %r135, %r15371;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15470, %r135, %r15374;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15473, %r135, %r15377;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15476, %r135, %r15380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15479, %r135, %r15383;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15482, %r135, %r15386;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15485, %r135, %r15389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15488, %r135, %r15392;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15491, %r135, %r15395;
	// end inline asm
	// begin inline asm
	mov.b32 %r15494, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15495, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15496, %r15398, %r15494;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15499, %r15496, %r15495;
	// end inline asm
	// begin inline asm
	mov.b32 %r15502, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15503, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15504, %r15401, %r15502;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15507, %r15504, %r15503;
	// end inline asm
	// begin inline asm
	mov.b32 %r15510, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15511, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15512, %r15404, %r15510;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15515, %r15512, %r15511;
	// end inline asm
	// begin inline asm
	mov.b32 %r15518, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15519, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15520, %r15407, %r15518;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15523, %r15520, %r15519;
	// end inline asm
	// begin inline asm
	mov.b32 %r15526, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15527, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15528, %r15410, %r15526;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15531, %r15528, %r15527;
	// end inline asm
	// begin inline asm
	mov.b32 %r15534, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15535, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15536, %r15413, %r15534;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15539, %r15536, %r15535;
	// end inline asm
	// begin inline asm
	mov.b32 %r15542, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15544, %r15416, %r15542;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15547, %r15544, %r15543;
	// end inline asm
	// begin inline asm
	mov.b32 %r15550, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15552, %r15419, %r15550;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15555, %r15552, %r15551;
	// end inline asm
	// begin inline asm
	mov.b32 %r15558, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15560, %r15422, %r15558;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15563, %r15560, %r15559;
	// end inline asm
	// begin inline asm
	mov.b32 %r15566, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15568, %r15425, %r15566;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15571, %r15568, %r15567;
	// end inline asm
	// begin inline asm
	mov.b32 %r15574, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15576, %r15428, %r15574;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15579, %r15576, %r15575;
	// end inline asm
	// begin inline asm
	mov.b32 %r15582, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15584, %r15431, %r15582;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15587, %r15584, %r15583;
	// end inline asm
	// begin inline asm
	mov.b32 %r15590, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15592, %r15434, %r15590;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15595, %r15592, %r15591;
	// end inline asm
	// begin inline asm
	mov.b32 %r15598, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15600, %r15437, %r15598;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15603, %r15600, %r15599;
	// end inline asm
	// begin inline asm
	mov.b32 %r15606, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15608, %r15440, %r15606;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15611, %r15608, %r15607;
	// end inline asm
	// begin inline asm
	mov.b32 %r15614, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15616, %r15443, %r15614;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15619, %r15616, %r15615;
	// end inline asm
	// begin inline asm
	mov.b32 %r15622, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15624, %r15446, %r15622;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15627, %r15624, %r15623;
	// end inline asm
	// begin inline asm
	mov.b32 %r15630, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15632, %r15449, %r15630;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15635, %r15632, %r15631;
	// end inline asm
	// begin inline asm
	mov.b32 %r15638, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15640, %r15452, %r15638;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15643, %r15640, %r15639;
	// end inline asm
	// begin inline asm
	mov.b32 %r15646, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15648, %r15455, %r15646;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15651, %r15648, %r15647;
	// end inline asm
	// begin inline asm
	mov.b32 %r15654, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15656, %r15458, %r15654;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15659, %r15656, %r15655;
	// end inline asm
	// begin inline asm
	mov.b32 %r15662, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15664, %r15461, %r15662;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15667, %r15664, %r15663;
	// end inline asm
	// begin inline asm
	mov.b32 %r15670, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15672, %r15464, %r15670;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15675, %r15672, %r15671;
	// end inline asm
	// begin inline asm
	mov.b32 %r15678, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15680, %r15467, %r15678;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15683, %r15680, %r15679;
	// end inline asm
	// begin inline asm
	mov.b32 %r15686, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15688, %r15470, %r15686;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15691, %r15688, %r15687;
	// end inline asm
	// begin inline asm
	mov.b32 %r15694, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15696, %r15473, %r15694;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15699, %r15696, %r15695;
	// end inline asm
	// begin inline asm
	mov.b32 %r15702, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15704, %r15476, %r15702;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15707, %r15704, %r15703;
	// end inline asm
	// begin inline asm
	mov.b32 %r15710, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15712, %r15479, %r15710;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15715, %r15712, %r15711;
	// end inline asm
	// begin inline asm
	mov.b32 %r15718, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15720, %r15482, %r15718;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15723, %r15720, %r15719;
	// end inline asm
	// begin inline asm
	mov.b32 %r15726, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15728, %r15485, %r15726;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15731, %r15728, %r15727;
	// end inline asm
	// begin inline asm
	mov.b32 %r15734, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15736, %r15488, %r15734;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15739, %r15736, %r15735;
	// end inline asm
	// begin inline asm
	mov.b32 %r15742, {%rs412, %rs412};
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs414, %rs414};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15744, %r15491, %r15742;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15747, %r15744, %r15743;
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15752, %r15753, %r15751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15755, %r15499, %r15752;
	// end inline asm
	// begin inline asm
	mov.b32 %r15758, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15759, %r15753, %r15758;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15762, %r15507, %r15759;
	// end inline asm
	// begin inline asm
	mov.b32 %r15765, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15766, %r15753, %r15765;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15769, %r15515, %r15766;
	// end inline asm
	// begin inline asm
	mov.b32 %r15772, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15773, %r15753, %r15772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15776, %r15523, %r15773;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15779, %r15755, %r15769, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15783, %r15762, %r15776, %r4334;
	// end inline asm
	shl.b32 	%r15790, %r15783, 4;
	// begin inline asm
	lop3.b32 %r15787, %r4340, %r15779, %r15790, 202;
	// end inline asm
	xor.b32  	%r16186, %r15787, -2004318072;
	// begin inline asm
	mov.b32 %r15794, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15793, %r15794, %r15792;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15796, %r15531, %r15793;
	// end inline asm
	// begin inline asm
	mov.b32 %r15799, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15800, %r15794, %r15799;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15803, %r15539, %r15800;
	// end inline asm
	// begin inline asm
	mov.b32 %r15806, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15807, %r15794, %r15806;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15810, %r15547, %r15807;
	// end inline asm
	// begin inline asm
	mov.b32 %r15813, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15814, %r15794, %r15813;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15817, %r15555, %r15814;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15820, %r15796, %r15810, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15824, %r15803, %r15817, %r4334;
	// end inline asm
	shl.b32 	%r15831, %r15824, 4;
	// begin inline asm
	lop3.b32 %r15828, %r4340, %r15820, %r15831, 202;
	// end inline asm
	xor.b32  	%r16187, %r15828, -2004318072;
	// begin inline asm
	mov.b32 %r15835, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15833, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15835, %r15833;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15837, %r15563, %r15834;
	// end inline asm
	// begin inline asm
	mov.b32 %r15840, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15835, %r15840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15844, %r15571, %r15841;
	// end inline asm
	// begin inline asm
	mov.b32 %r15847, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15848, %r15835, %r15847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15851, %r15579, %r15848;
	// end inline asm
	// begin inline asm
	mov.b32 %r15854, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15835, %r15854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15587, %r15855;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15861, %r15837, %r15851, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15865, %r15844, %r15858, %r4334;
	// end inline asm
	shl.b32 	%r15872, %r15865, 4;
	// begin inline asm
	lop3.b32 %r15869, %r4340, %r15861, %r15872, 202;
	// end inline asm
	xor.b32  	%r16188, %r15869, -2004318072;
	// begin inline asm
	mov.b32 %r15876, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15874, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15876, %r15874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15878, %r15595, %r15875;
	// end inline asm
	// begin inline asm
	mov.b32 %r15881, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15876, %r15881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15885, %r15603, %r15882;
	// end inline asm
	// begin inline asm
	mov.b32 %r15888, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15889, %r15876, %r15888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15892, %r15611, %r15889;
	// end inline asm
	// begin inline asm
	mov.b32 %r15895, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15876, %r15895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15619, %r15896;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15902, %r15878, %r15892, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15906, %r15885, %r15899, %r4334;
	// end inline asm
	shl.b32 	%r15913, %r15906, 4;
	// begin inline asm
	lop3.b32 %r15910, %r4340, %r15902, %r15913, 202;
	// end inline asm
	xor.b32  	%r16189, %r15910, -2004318072;
	// begin inline asm
	mov.b32 %r15917, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15915, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15917, %r15915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15919, %r15627, %r15916;
	// end inline asm
	// begin inline asm
	mov.b32 %r15922, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15917, %r15922;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15926, %r15635, %r15923;
	// end inline asm
	// begin inline asm
	mov.b32 %r15929, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15930, %r15917, %r15929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15933, %r15643, %r15930;
	// end inline asm
	// begin inline asm
	mov.b32 %r15936, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15917, %r15936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15651, %r15937;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15943, %r15919, %r15933, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15947, %r15926, %r15940, %r4334;
	// end inline asm
	shl.b32 	%r15954, %r15947, 4;
	// begin inline asm
	lop3.b32 %r15951, %r4340, %r15943, %r15954, 202;
	// end inline asm
	xor.b32  	%r16190, %r15951, -2004318072;
	// begin inline asm
	mov.b32 %r15958, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15956, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15958, %r15956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15960, %r15659, %r15957;
	// end inline asm
	// begin inline asm
	mov.b32 %r15963, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15958, %r15963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15967, %r15667, %r15964;
	// end inline asm
	// begin inline asm
	mov.b32 %r15970, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15971, %r15958, %r15970;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15974, %r15675, %r15971;
	// end inline asm
	// begin inline asm
	mov.b32 %r15977, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15958, %r15977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15683, %r15978;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15984, %r15960, %r15974, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15988, %r15967, %r15981, %r4334;
	// end inline asm
	shl.b32 	%r15995, %r15988, 4;
	// begin inline asm
	lop3.b32 %r15992, %r4340, %r15984, %r15995, 202;
	// end inline asm
	xor.b32  	%r16191, %r15992, -2004318072;
	// begin inline asm
	mov.b32 %r15999, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r15997, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15999, %r15997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16001, %r15691, %r15998;
	// end inline asm
	// begin inline asm
	mov.b32 %r16004, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15999, %r16004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16008, %r15699, %r16005;
	// end inline asm
	// begin inline asm
	mov.b32 %r16011, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16012, %r15999, %r16011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16015, %r15707, %r16012;
	// end inline asm
	// begin inline asm
	mov.b32 %r16018, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r15999, %r16018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r15715, %r16019;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16025, %r16001, %r16015, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16029, %r16008, %r16022, %r4334;
	// end inline asm
	shl.b32 	%r16036, %r16029, 4;
	// begin inline asm
	lop3.b32 %r16033, %r4340, %r16025, %r16036, 202;
	// end inline asm
	xor.b32  	%r16192, %r16033, -2004318072;
	// begin inline asm
	mov.b32 %r16040, {%rs2387, %rs2387};
	// end inline asm
	// begin inline asm
	mov.b32 %r16038, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r16040, %r16038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16042, %r15723, %r16039;
	// end inline asm
	// begin inline asm
	mov.b32 %r16045, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r16040, %r16045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16049, %r15731, %r16046;
	// end inline asm
	// begin inline asm
	mov.b32 %r16052, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16053, %r16040, %r16052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16056, %r15739, %r16053;
	// end inline asm
	// begin inline asm
	mov.b32 %r16059, {%rs2395, %rs2395};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16060, %r16040, %r16059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r15747, %r16060;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16066, %r16042, %r16056, %r4334;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16070, %r16049, %r16063, %r4334;
	// end inline asm
	shl.b32 	%r16077, %r16070, 4;
	// begin inline asm
	lop3.b32 %r16074, %r4340, %r16066, %r16077, 202;
	// end inline asm
	xor.b32  	%r16193, %r16074, -2004318072;
	st.shared.u32 	[%rd106], %r16186;
	st.shared.u32 	[%rd108], %r16187;
	st.shared.u32 	[%rd110], %r16188;
	st.shared.u32 	[%rd112], %r16189;
	st.shared.u32 	[%rd114], %r16190;
	st.shared.u32 	[%rd116], %r16191;
	st.shared.u32 	[%rd118], %r16192;
	st.shared.u32 	[%rd120], %r16193;
	add.s32 	%r16317, %r16317, 128;
	setp.ne.s32 	%p303, %r16317, 256;
	@%p303 bra 	$L__BB0_156;
// %bb.157:                             // %guard_exit29770
                                        //   in Loop: Header=BB0_123 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16199, [%rd4];
	ld.shared.u32 	%r16200, [%rd5+128];
	ld.shared.u32 	%r16207, [%rd5+4];
	ld.shared.u32 	%r16208, [%rd5+132];
	ld.shared.u32 	%r16215, [%rd6];
	ld.shared.u32 	%r16216, [%rd7+128];
	ld.shared.u32 	%r16223, [%rd7+4];
	ld.shared.u32 	%r16224, [%rd7+132];
	ld.shared.u32 	%r16231, [%rd4+16644];
	ld.shared.u32 	%r16232, [%rd5+16772];
	ld.shared.u32 	%r16239, [%rd5+16648];
	ld.shared.u32 	%r16240, [%rd5+16776];
	ld.shared.u32 	%r16247, [%rd6+16644];
	ld.shared.u32 	%r16248, [%rd22];
	ld.shared.u32 	%r16255, [%rd7+16648];
	ld.shared.u32 	%r16256, [%rd7+16776];
	// begin inline asm
	prmt.b32 %r16194, %r16199, %r16200, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16198, %r16199, %r16200, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16202, %r16207, %r16208, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16206, %r16207, %r16208, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16210, %r16215, %r16216, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16214, %r16215, %r16216, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16218, %r16223, %r16224, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16222, %r16223, %r16224, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16226, %r16231, %r16232, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16230, %r16231, %r16232, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16234, %r16239, %r16240, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16238, %r16239, %r16240, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16242, %r16247, %r16248, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16246, %r16247, %r16248, %r16201;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16250, %r16255, %r16256, %r16197;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16254, %r16255, %r16256, %r16201;
	// end inline asm
	selp.b32 	%r16259, %r16198, %r16194, %p289;
	shfl.sync.bfly.b32	%r16260, %r16259, 8, 31, -1;
	selp.b32 	%r16261, %r16206, %r16202, %p289;
	shfl.sync.bfly.b32	%r16262, %r16261, 8, 31, -1;
	selp.b32 	%r16263, %r16214, %r16210, %p289;
	shfl.sync.bfly.b32	%r16264, %r16263, 8, 31, -1;
	selp.b32 	%r16265, %r16222, %r16218, %p289;
	shfl.sync.bfly.b32	%r16266, %r16265, 8, 31, -1;
	selp.b32 	%r16267, %r16230, %r16226, %p289;
	shfl.sync.bfly.b32	%r16268, %r16267, 8, 31, -1;
	selp.b32 	%r16269, %r16238, %r16234, %p289;
	shfl.sync.bfly.b32	%r16270, %r16269, 8, 31, -1;
	selp.b32 	%r16271, %r16246, %r16242, %p289;
	shfl.sync.bfly.b32	%r16272, %r16271, 8, 31, -1;
	selp.b32 	%r16273, %r16254, %r16250, %p289;
	shfl.sync.bfly.b32	%r16274, %r16273, 8, 31, -1;
	mov.u32 	%r16310, 256;
	bra.uni 	$L__BB0_123;
$L__BB0_124:                            // %L70523
	mov.u32 	%r671, 0;
	st.global.u32 	[%rd3], %r671;
	ret;
$L__BB0_7:                              // %L157
	mov.u32 	%r16275, 2;
	st.global.u32 	[%rd3], %r16275;
	mov.u64 	%rd121, exception5815;
	cvta.global.u64 	%rd122, %rd121;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd122;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r221;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd28, exception1;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r221;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
