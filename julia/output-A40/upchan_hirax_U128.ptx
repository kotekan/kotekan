// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Int32, 1}, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE // -- Begin function _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5808[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE
.visible .entry _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0[16],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<342>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16430>;
	.reg .f32 	%f<1392>;
	.reg .b64 	%rd<175>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r271, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r272, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r272, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd40, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_8];
	ld.param.u64 	%rd24, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_1];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %ctaid.x;
	shl.b32 	%r273, %r4, 9;
	or.b32  	%r274, %r3, %r1;
	or.b32  	%r275, %r274, %r273;
	mul.wide.u32 	%rd46, %r275, 4;
	add.s64 	%rd4, %rd40, %rd46;
	mov.u32 	%r276, 1;
	st.global.u32 	[%rd4], %r276;
	ld.global.u32 	%r5, [%rd24];
	setp.lt.s32 	%p2, %r5, 0;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L203
	ld.param.u64 	%rd28, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_2];
	ld.global.u32 	%r6, [%rd28];
	setp.lt.s32 	%p3, %r6, %r5;
	setp.gt.s32 	%p4, %r6, 16384;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L213
	ld.param.u64 	%rd32, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_3];
	ld.global.u32 	%r7, [%rd32];
	sub.s32 	%r277, %r6, %r5;
	and.b32  	%r278, %r277, 255;
	setp.ne.s32 	%p6, %r278, 0;
	setp.lt.s32 	%p7, %r7, 0;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L219
	ld.param.u64 	%rd36, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_4];
	ld.global.u32 	%r8, [%rd36];
	setp.lt.s32 	%p9, %r8, %r7;
	setp.gt.s32 	%p10, %r8, 128;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L229
	sub.s32 	%r279, %r8, %r7;
	and.b32  	%r280, %r279, 1;
	setp.eq.b32 	%p12, %r280, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %pass169
	bfe.u32 	%r190, %r1, 1, 1;
	and.b32  	%r191, %r1, 1;
	bfe.u32 	%r193, %r1, 2, 1;
	shr.u32 	%r194, %r1, 4;
	shl.b32 	%r291, %r194, 2;
	shl.b32 	%r292, %r193, 3;
	shl.b32 	%r293, %r191, 4;
	shl.b32 	%r294, %r190, 5;
	or.b32  	%r295, %r293, %r294;
	or.b32  	%r296, %r292, %r295;
	or.b32  	%r297, %r291, %r296;
	bfe.u32 	%r196, %r1, 3, 1;
	shl.b32 	%r298, %r196, 1;
	or.b32  	%r197, %r298, %r297;
	or.b32  	%r198, %r197, 64;
	mov.f32 	%f257, 0f40000000;
	mov.f32 	%f258, 0f43FF8000;
	div.approx.f32 	%f253, %f258, %f257;
	cvt.rn.f32.s32 	%f259, %r197;
	sub.f32 	%f260, %f259, %f253;
	mov.f32 	%f289, 0f43000000;
	div.approx.f32 	%f255, %f260, %f289;
	setp.ne.f32 	%p20, %f255, 0f00000000;
	mov.f32 	%f1351, 0f3F800000;
	mov.f32 	%f1336, %f1351;
	@%p20 bra 	$L__BB0_9;
	bra.uni 	$L__BB0_10;
$L__BB0_9:                              // %L734
	sin.approx.f32 	%f290, %f255;
	div.approx.f32 	%f1336, %f290, %f255;
$L__BB0_10:                             // %L737
	cvt.rn.f32.s32 	%f293, %r198;
	sub.f32 	%f294, %f293, %f253;
	div.approx.f32 	%f5, %f294, %f289;
	setp.eq.f32 	%p26, %f5, 0f00000000;
	mov.f32 	%f1337, %f1351;
	@%p26 bra 	$L__BB0_12;
// %bb.11:                              // %L754
	sin.approx.f32 	%f324, %f5;
	div.approx.f32 	%f1337, %f324, %f5;
$L__BB0_12:                             // %L757
	or.b32  	%r316, %r197, 1;
	or.b32  	%r10, %r197, 65;
	cvt.rn.f32.s32 	%f328, %r316;
	sub.f32 	%f329, %f328, %f253;
	div.approx.f32 	%f9, %f329, %f289;
	setp.eq.f32 	%p32, %f9, 0f00000000;
	mov.f32 	%f1338, %f1351;
	@%p32 bra 	$L__BB0_14;
// %bb.13:                              // %L836
	sin.approx.f32 	%f359, %f9;
	div.approx.f32 	%f1338, %f359, %f9;
$L__BB0_14:                             // %L839
	cvt.rn.f32.s32 	%f362, %r10;
	sub.f32 	%f363, %f362, %f253;
	div.approx.f32 	%f14, %f363, %f289;
	setp.eq.f32 	%p38, %f14, 0f00000000;
	mov.f32 	%f1339, %f1351;
	@%p38 bra 	$L__BB0_16;
// %bb.15:                              // %L856
	sin.approx.f32 	%f393, %f14;
	div.approx.f32 	%f1339, %f393, %f14;
$L__BB0_16:                             // %L859
	or.b32  	%r334, %r197, 128;
	or.b32  	%r12, %r197, 192;
	cvt.rn.f32.s32 	%f397, %r334;
	sub.f32 	%f398, %f397, %f253;
	div.approx.f32 	%f18, %f398, %f289;
	setp.eq.f32 	%p44, %f18, 0f00000000;
	mov.f32 	%f1340, %f1351;
	@%p44 bra 	$L__BB0_18;
// %bb.17:                              // %L938
	sin.approx.f32 	%f428, %f18;
	div.approx.f32 	%f1340, %f428, %f18;
$L__BB0_18:                             // %L941
	cvt.rn.f32.s32 	%f431, %r12;
	sub.f32 	%f432, %f431, %f253;
	div.approx.f32 	%f23, %f432, %f289;
	setp.eq.f32 	%p50, %f23, 0f00000000;
	mov.f32 	%f1341, %f1351;
	@%p50 bra 	$L__BB0_20;
// %bb.19:                              // %L958
	sin.approx.f32 	%f462, %f23;
	div.approx.f32 	%f1341, %f462, %f23;
$L__BB0_20:                             // %L961
	or.b32  	%r352, %r197, 129;
	or.b32  	%r14, %r197, 193;
	cvt.rn.f32.s32 	%f466, %r352;
	sub.f32 	%f467, %f466, %f253;
	div.approx.f32 	%f27, %f467, %f289;
	setp.eq.f32 	%p56, %f27, 0f00000000;
	mov.f32 	%f1342, %f1351;
	@%p56 bra 	$L__BB0_22;
// %bb.21:                              // %L1040
	sin.approx.f32 	%f497, %f27;
	div.approx.f32 	%f1342, %f497, %f27;
$L__BB0_22:                             // %L1043
	cvt.rn.f32.s32 	%f500, %r14;
	sub.f32 	%f501, %f500, %f253;
	div.approx.f32 	%f32, %f501, %f289;
	setp.eq.f32 	%p62, %f32, 0f00000000;
	mov.f32 	%f1343, %f1351;
	@%p62 bra 	$L__BB0_24;
// %bb.23:                              // %L1060
	sin.approx.f32 	%f531, %f32;
	div.approx.f32 	%f1343, %f531, %f32;
$L__BB0_24:                             // %L1063
	or.b32  	%r370, %r197, 256;
	or.b32  	%r16, %r197, 320;
	cvt.rn.f32.s32 	%f535, %r370;
	sub.f32 	%f536, %f535, %f253;
	div.approx.f32 	%f36, %f536, %f289;
	setp.eq.f32 	%p68, %f36, 0f00000000;
	mov.f32 	%f1344, %f1351;
	@%p68 bra 	$L__BB0_26;
// %bb.25:                              // %L1142
	sin.approx.f32 	%f566, %f36;
	div.approx.f32 	%f1344, %f566, %f36;
$L__BB0_26:                             // %L1145
	mov.f32 	%f261, 0f44004000;
	cvt.rn.f32.s32 	%f569, %r16;
	sub.f32 	%f570, %f569, %f253;
	div.approx.f32 	%f41, %f570, %f289;
	setp.eq.f32 	%p74, %f41, 0f00000000;
	mov.f32 	%f1345, %f1351;
	@%p74 bra 	$L__BB0_28;
// %bb.27:                              // %L1162
	sin.approx.f32 	%f600, %f41;
	div.approx.f32 	%f1345, %f600, %f41;
$L__BB0_28:                             // %L1165
	div.approx.f32 	%f262, %f260, %f261;
	div.approx.f32 	%f296, %f294, %f261;
	div.approx.f32 	%f331, %f329, %f261;
	div.approx.f32 	%f365, %f363, %f261;
	div.approx.f32 	%f400, %f398, %f261;
	div.approx.f32 	%f434, %f432, %f261;
	div.approx.f32 	%f469, %f467, %f261;
	div.approx.f32 	%f503, %f501, %f261;
	div.approx.f32 	%f538, %f536, %f261;
	div.approx.f32 	%f572, %f570, %f261;
	or.b32  	%r388, %r197, 257;
	or.b32  	%r18, %r197, 321;
	cvt.rn.f32.s32 	%f604, %r388;
	sub.f32 	%f605, %f604, %f253;
	div.approx.f32 	%f607, %f605, %f261;
	div.approx.f32 	%f45, %f605, %f289;
	setp.eq.f32 	%p80, %f45, 0f00000000;
	mov.f32 	%f1346, %f1351;
	@%p80 bra 	$L__BB0_30;
// %bb.29:                              // %L1244
	sin.approx.f32 	%f635, %f45;
	div.approx.f32 	%f1346, %f635, %f45;
$L__BB0_30:                             // %L1247
	abs.f32 	%f263, %f262;
	abs.f32 	%f297, %f296;
	abs.f32 	%f332, %f331;
	abs.f32 	%f366, %f365;
	abs.f32 	%f401, %f400;
	abs.f32 	%f435, %f434;
	abs.f32 	%f470, %f469;
	abs.f32 	%f504, %f503;
	abs.f32 	%f539, %f538;
	abs.f32 	%f573, %f572;
	abs.f32 	%f608, %f607;
	cvt.rn.f32.s32 	%f638, %r18;
	sub.f32 	%f639, %f638, %f253;
	div.approx.f32 	%f641, %f639, %f261;
	abs.f32 	%f642, %f641;
	div.approx.f32 	%f50, %f639, %f289;
	setp.eq.f32 	%p86, %f50, 0f00000000;
	mov.f32 	%f1347, %f1351;
	@%p86 bra 	$L__BB0_32;
// %bb.31:                              // %L1264
	sin.approx.f32 	%f669, %f50;
	div.approx.f32 	%f1347, %f669, %f50;
$L__BB0_32:                             // %L1267
	setp.gt.f32 	%p15, %f263, 0f4B800000;
	mul.f32 	%f264, %f262, 0f00000000;
	setp.gt.f32 	%p21, %f297, 0f4B800000;
	mul.f32 	%f298, %f296, 0f00000000;
	setp.gt.f32 	%p27, %f332, 0f4B800000;
	mul.f32 	%f333, %f331, 0f00000000;
	setp.gt.f32 	%p33, %f366, 0f4B800000;
	mul.f32 	%f367, %f365, 0f00000000;
	setp.gt.f32 	%p39, %f401, 0f4B800000;
	mul.f32 	%f402, %f400, 0f00000000;
	setp.gt.f32 	%p45, %f435, 0f4B800000;
	mul.f32 	%f436, %f434, 0f00000000;
	setp.gt.f32 	%p51, %f470, 0f4B800000;
	mul.f32 	%f471, %f469, 0f00000000;
	setp.gt.f32 	%p57, %f504, 0f4B800000;
	mul.f32 	%f505, %f503, 0f00000000;
	setp.gt.f32 	%p63, %f539, 0f4B800000;
	mul.f32 	%f540, %f538, 0f00000000;
	setp.gt.f32 	%p69, %f573, 0f4B800000;
	mul.f32 	%f574, %f572, 0f00000000;
	setp.gt.f32 	%p75, %f608, 0f4B800000;
	mul.f32 	%f609, %f607, 0f00000000;
	setp.gt.f32 	%p81, %f642, 0f4B800000;
	mul.f32 	%f643, %f641, 0f00000000;
	or.b32  	%r406, %r197, 384;
	or.b32  	%r20, %r197, 448;
	cvt.rn.f32.s32 	%f673, %r406;
	sub.f32 	%f674, %f673, %f253;
	div.approx.f32 	%f676, %f674, %f261;
	abs.f32 	%f677, %f676;
	setp.gt.f32 	%p87, %f677, 0f4B800000;
	mul.f32 	%f678, %f676, 0f00000000;
	div.approx.f32 	%f54, %f674, %f289;
	setp.eq.f32 	%p92, %f54, 0f00000000;
	mov.f32 	%f1348, %f1351;
	@%p92 bra 	$L__BB0_34;
// %bb.33:                              // %L1346
	sin.approx.f32 	%f704, %f54;
	div.approx.f32 	%f1348, %f704, %f54;
$L__BB0_34:                             // %L1349
	selp.f32 	%f265, %f264, %f262, %p15;
	selp.f32 	%f299, %f298, %f296, %p21;
	selp.f32 	%f334, %f333, %f331, %p27;
	selp.f32 	%f368, %f367, %f365, %p33;
	selp.f32 	%f403, %f402, %f400, %p39;
	selp.f32 	%f437, %f436, %f434, %p45;
	selp.f32 	%f472, %f471, %f469, %p51;
	selp.f32 	%f506, %f505, %f503, %p57;
	selp.f32 	%f541, %f540, %f538, %p63;
	selp.f32 	%f575, %f574, %f572, %p69;
	selp.f32 	%f610, %f609, %f607, %p75;
	selp.f32 	%f644, %f643, %f641, %p81;
	selp.f32 	%f679, %f678, %f676, %p87;
	cvt.rn.f32.s32 	%f707, %r20;
	sub.f32 	%f708, %f707, %f253;
	div.approx.f32 	%f710, %f708, %f261;
	abs.f32 	%f711, %f710;
	setp.gt.f32 	%p93, %f711, 0f4B800000;
	mul.f32 	%f712, %f710, 0f00000000;
	selp.f32 	%f713, %f712, %f710, %p93;
	div.approx.f32 	%f59, %f708, %f289;
	setp.eq.f32 	%p98, %f59, 0f00000000;
	mov.f32 	%f1349, %f1351;
	@%p98 bra 	$L__BB0_36;
// %bb.35:                              // %L1366
	sin.approx.f32 	%f738, %f59;
	div.approx.f32 	%f1349, %f738, %f59;
$L__BB0_36:                             // %L1369
	add.f32 	%f266, %f265, %f265;
	add.f32 	%f300, %f299, %f299;
	add.f32 	%f335, %f334, %f334;
	add.f32 	%f369, %f368, %f368;
	add.f32 	%f404, %f403, %f403;
	add.f32 	%f438, %f437, %f437;
	add.f32 	%f473, %f472, %f472;
	add.f32 	%f507, %f506, %f506;
	add.f32 	%f542, %f541, %f541;
	add.f32 	%f576, %f575, %f575;
	add.f32 	%f611, %f610, %f610;
	add.f32 	%f645, %f644, %f644;
	add.f32 	%f680, %f679, %f679;
	add.f32 	%f714, %f713, %f713;
	or.b32  	%r424, %r197, 385;
	or.b32  	%r22, %r197, 449;
	cvt.rn.f32.s32 	%f742, %r424;
	sub.f32 	%f743, %f742, %f253;
	div.approx.f32 	%f745, %f743, %f261;
	abs.f32 	%f746, %f745;
	setp.gt.f32 	%p99, %f746, 0f4B800000;
	mul.f32 	%f747, %f745, 0f00000000;
	selp.f32 	%f748, %f747, %f745, %p99;
	add.f32 	%f749, %f748, %f748;
	div.approx.f32 	%f63, %f743, %f289;
	setp.eq.f32 	%p104, %f63, 0f00000000;
	mov.f32 	%f1350, %f1351;
	@%p104 bra 	$L__BB0_38;
// %bb.37:                              // %L1448
	sin.approx.f32 	%f773, %f63;
	div.approx.f32 	%f1350, %f773, %f63;
$L__BB0_38:                             // %L1451
	mov.b32 	%r299, %f266;
	mov.b32 	%r306, %f300;
	mov.b32 	%r317, %f335;
	mov.b32 	%r324, %f369;
	mov.b32 	%r335, %f404;
	mov.b32 	%r342, %f438;
	mov.b32 	%r353, %f473;
	mov.b32 	%r360, %f507;
	mov.b32 	%r371, %f542;
	mov.b32 	%r378, %f576;
	mov.b32 	%r389, %f611;
	mov.b32 	%r396, %f645;
	mov.b32 	%r407, %f680;
	mov.b32 	%r414, %f714;
	mov.b32 	%r425, %f749;
	cvt.rn.f32.s32 	%f776, %r22;
	sub.f32 	%f777, %f776, %f253;
	div.approx.f32 	%f779, %f777, %f261;
	abs.f32 	%f780, %f779;
	setp.gt.f32 	%p105, %f780, 0f4B800000;
	mul.f32 	%f781, %f779, 0f00000000;
	selp.f32 	%f782, %f781, %f779, %p105;
	add.f32 	%f783, %f782, %f782;
	mov.b32 	%r432, %f783;
	div.approx.f32 	%f68, %f777, %f289;
	setp.eq.f32 	%p110, %f68, 0f00000000;
	@%p110 bra 	$L__BB0_40;
// %bb.39:                              // %L1468
	sin.approx.f32 	%f807, %f68;
	div.approx.f32 	%f1351, %f807, %f68;
$L__BB0_40:                             // %L1471
	and.b32  	%r300, %r299, -2147483648;
	and.b32  	%r307, %r306, -2147483648;
	and.b32  	%r318, %r317, -2147483648;
	and.b32  	%r325, %r324, -2147483648;
	and.b32  	%r336, %r335, -2147483648;
	and.b32  	%r343, %r342, -2147483648;
	and.b32  	%r354, %r353, -2147483648;
	and.b32  	%r361, %r360, -2147483648;
	and.b32  	%r372, %r371, -2147483648;
	and.b32  	%r379, %r378, -2147483648;
	and.b32  	%r390, %r389, -2147483648;
	and.b32  	%r397, %r396, -2147483648;
	and.b32  	%r408, %r407, -2147483648;
	and.b32  	%r415, %r414, -2147483648;
	and.b32  	%r426, %r425, -2147483648;
	and.b32  	%r433, %r432, -2147483648;
	mul.lo.s32 	%r24, %r197, 127;
	cvt.rn.f32.s32 	%f810, %r24;
	div.approx.f32 	%f71, %f810, %f289;
	abs.f32 	%f1354, %f71;
	setp.lt.f32 	%p111, %f1354, 0f40000000;
	@%p111 bra 	$L__BB0_52;
// %bb.41:
	setp.gtu.f32 	%p112, %f1354, 0f4B800000;
	@%p112 bra 	$L__BB0_48;
	bra.uni 	$L__BB0_42;
$L__BB0_48:
	mov.b32 	%r26, %f1354;
	and.b32  	%r442, %r26, 8388607;
	or.b32  	%r16360, %r442, 1065353216;
	mov.b32 	%f1353, %r16360;
	add.s32 	%r443, %r26, -1073741824;
	and.b32  	%r16361, %r443, -8388608;
	setp.eq.s32 	%p118, %r16361, 0;
	@%p118 bra 	$L__BB0_51;
// %bb.49:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f821, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f820,%f821;
	// end inline asm
$L__BB0_50:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r444, %r16361, 192937984;
	add.s32 	%r445, %r16360, %r444;
	mov.b32 	%f822, %r445;
	mul.f32 	%f823, %f820, %f822;
	sub.f32 	%f824, %f822, %f823;
	fma.rn.f32 	%f825, %f824, %f820, %f823;
	sub.f32 	%f826, %f822, %f825;
	fma.rz.f32 	%f827, %f826, %f820, %f825;
	cvt.rzi.f32.f32 	%f828, %f827;
	sub.f32 	%f1353, %f822, %f828;
	sub.s32 	%r16361, %r16361, %r444;
	mov.b32 	%r16360, %f1353;
	setp.ne.s32 	%p119, %r16361, 0;
	setp.ne.s32 	%p120, %r16360, 0;
	and.pred  	%p121, %p119, %p120;
	@%p121 bra 	$L__BB0_50;
$L__BB0_51:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p122, %r26, 2139095039;
	selp.f32 	%f829, 0f7FFFFFFF, 0f4B800000, %p122;
	mul.f32 	%f830, %f1353, 0f34000000;
	mul.f32 	%f1354, %f829, %f830;
	bra.uni 	$L__BB0_52;
$L__BB0_42:                             // %__nv_fast_fdividef.exit.i.i.i
	div.approx.f32 	%f813, %f1354, %f257;
	cvt.rzi.f32.f32 	%f1352, %f813;
	fma.rn.f32 	%f74, %f1352, 0fC0000000, %f1354;
	mov.b32 	%r25, %f74;
	setp.lt.u32 	%p113, %r25, 1073741824;
	@%p113 bra 	$L__BB0_47;
// %bb.43:
	setp.lt.u32 	%p114, %r25, -2147483647;
	@%p114 bra 	$L__BB0_45;
// %bb.44:
	add.f32 	%f818, %f1352, 0fBF800000;
	setp.lt.f32 	%p117, %f74, 0fC0000000;
	add.f32 	%f819, %f818, 0fBF800000;
	selp.f32 	%f1352, %f819, %f818, %p117;
	bra.uni 	$L__BB0_47;
$L__BB0_45:
	add.f32 	%f1352, %f1352, 0f3F800000;
	setp.ltu.f32 	%p115, %f74, 0f40800000;
	@%p115 bra 	$L__BB0_47;
// %bb.46:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f814, %f1352, 0f3F800000;
	fma.rn.f32 	%f816, %f257, 0fC0400000, %f74;
	setp.ge.f32 	%p116, %f816, 0f00000000;
	add.f32 	%f817, %f814, 0f3F800000;
	selp.f32 	%f1352, %f817, %f814, %p116;
$L__BB0_47:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1354, %f1352, 0fC0000000, %f1354;
$L__BB0_52:                             // %__internal_fmodf_kernel.exit.i
	or.b32  	%r301, %r300, 1056964608;
	or.b32  	%r308, %r307, 1056964608;
	or.b32  	%r319, %r318, 1056964608;
	or.b32  	%r326, %r325, 1056964608;
	or.b32  	%r337, %r336, 1056964608;
	or.b32  	%r344, %r343, 1056964608;
	or.b32  	%r355, %r354, 1056964608;
	or.b32  	%r362, %r361, 1056964608;
	or.b32  	%r373, %r372, 1056964608;
	or.b32  	%r380, %r379, 1056964608;
	or.b32  	%r391, %r390, 1056964608;
	or.b32  	%r398, %r397, 1056964608;
	or.b32  	%r409, %r408, 1056964608;
	or.b32  	%r416, %r415, 1056964608;
	or.b32  	%r427, %r426, 1056964608;
	or.b32  	%r434, %r433, 1056964608;
	abs.f32 	%f831, %f1354;
	setp.gtu.f32 	%p123, %f831, 0f7F800000;
	@%p123 bra 	$L__BB0_54;
// %bb.53:
	mov.b32 	%r446, %f71;
	and.b32  	%r447, %r446, -2147483648;
	mov.b32 	%r448, %f1354;
	or.b32  	%r449, %r447, %r448;
	mov.b32 	%f1354, %r449;
$L__BB0_54:                             // %__nv_fmodf.exit
	mov.b32 	%f267, %r301;
	mov.b32 	%f301, %r308;
	mov.b32 	%f336, %r319;
	mov.b32 	%f370, %r326;
	mov.b32 	%f405, %r337;
	mov.b32 	%f439, %r344;
	mov.b32 	%f474, %r355;
	mov.b32 	%f508, %r362;
	mov.b32 	%f543, %r373;
	mov.b32 	%f577, %r380;
	mov.b32 	%f612, %r391;
	mov.b32 	%f646, %r398;
	mov.b32 	%f681, %r409;
	mov.b32 	%f715, %r416;
	mov.b32 	%f750, %r427;
	mov.b32 	%f784, %r434;
	add.f32 	%f832, %f1354, %f1354;
	mov.b32 	%r450, %f832;
	and.b32  	%r451, %r450, -2147483648;
	or.b32  	%r452, %r451, 1056964608;
	mov.b32 	%f833, %r452;
	add.f32 	%f834, %f832, %f833;
	abs.f32 	%f836, %f832;
	add.s32 	%r458, %r24, 8128;
	cvt.rn.f32.s32 	%f862, %r458;
	div.approx.f32 	%f90, %f862, %f289;
	abs.f32 	%f1358, %f90;
	setp.lt.f32 	%p131, %f1358, 0f40000000;
	@%p131 bra 	$L__BB0_66;
// %bb.55:
	setp.gtu.f32 	%p132, %f1358, 0f4B800000;
	@%p132 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_56;
$L__BB0_62:
	mov.b32 	%r34, %f1358;
	and.b32  	%r459, %r34, 8388607;
	or.b32  	%r16362, %r459, 1065353216;
	mov.b32 	%f1357, %r16362;
	add.s32 	%r460, %r34, -1073741824;
	and.b32  	%r16363, %r460, -8388608;
	setp.eq.s32 	%p138, %r16363, 0;
	@%p138 bra 	$L__BB0_65;
// %bb.63:                              // %__nv_fmaf_rn.exit4.i.i.i1655.preheader
	mov.f32 	%f873, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f872,%f873;
	// end inline asm
$L__BB0_64:                             // %__nv_fmaf_rn.exit4.i.i.i1655
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r461, %r16363, 192937984;
	add.s32 	%r462, %r16362, %r461;
	mov.b32 	%f874, %r462;
	mul.f32 	%f875, %f872, %f874;
	sub.f32 	%f876, %f874, %f875;
	fma.rn.f32 	%f877, %f876, %f872, %f875;
	sub.f32 	%f878, %f874, %f877;
	fma.rz.f32 	%f879, %f878, %f872, %f877;
	cvt.rzi.f32.f32 	%f880, %f879;
	sub.f32 	%f1357, %f874, %f880;
	sub.s32 	%r16363, %r16363, %r461;
	mov.b32 	%r16362, %f1357;
	setp.ne.s32 	%p139, %r16363, 0;
	setp.ne.s32 	%p140, %r16362, 0;
	and.pred  	%p141, %p139, %p140;
	@%p141 bra 	$L__BB0_64;
$L__BB0_65:                             // %__internal_fmodf_slowpath_mod.exit.i.i1657
	setp.gt.u32 	%p142, %r34, 2139095039;
	selp.f32 	%f881, 0f7FFFFFFF, 0f4B800000, %p142;
	mul.f32 	%f882, %f1357, 0f34000000;
	mul.f32 	%f1358, %f881, %f882;
	bra.uni 	$L__BB0_66;
$L__BB0_56:                             // %__nv_fast_fdividef.exit.i.i.i1634
	div.approx.f32 	%f865, %f1358, %f257;
	cvt.rzi.f32.f32 	%f1356, %f865;
	fma.rn.f32 	%f93, %f1356, 0fC0000000, %f1358;
	mov.b32 	%r33, %f93;
	setp.lt.u32 	%p133, %r33, 1073741824;
	@%p133 bra 	$L__BB0_61;
// %bb.57:
	setp.lt.u32 	%p134, %r33, -2147483647;
	@%p134 bra 	$L__BB0_59;
// %bb.58:
	add.f32 	%f870, %f1356, 0fBF800000;
	setp.lt.f32 	%p137, %f93, 0fC0000000;
	add.f32 	%f871, %f870, 0fBF800000;
	selp.f32 	%f1356, %f871, %f870, %p137;
	bra.uni 	$L__BB0_61;
$L__BB0_59:
	add.f32 	%f1356, %f1356, 0f3F800000;
	setp.ltu.f32 	%p135, %f93, 0f40800000;
	@%p135 bra 	$L__BB0_61;
// %bb.60:                              // %__nv_fmaf_rn.exit.i.i.i1638
	add.f32 	%f866, %f1356, 0f3F800000;
	fma.rn.f32 	%f868, %f257, 0fC0400000, %f93;
	setp.ge.f32 	%p136, %f868, 0f00000000;
	add.f32 	%f869, %f866, 0f3F800000;
	selp.f32 	%f1356, %f869, %f866, %p136;
$L__BB0_61:                             // %__internal_fmodf_fastpath_quot.exit.i.i1641
	fma.rn.f32 	%f1358, %f1356, 0fC0000000, %f1358;
$L__BB0_66:                             // %__internal_fmodf_kernel.exit.i1660
	add.f32 	%f268, %f266, %f267;
	abs.f32 	%f270, %f266;
	add.f32 	%f302, %f300, %f301;
	abs.f32 	%f304, %f300;
	add.f32 	%f337, %f335, %f336;
	abs.f32 	%f339, %f335;
	add.f32 	%f371, %f369, %f370;
	abs.f32 	%f373, %f369;
	add.f32 	%f406, %f404, %f405;
	abs.f32 	%f408, %f404;
	add.f32 	%f440, %f438, %f439;
	abs.f32 	%f442, %f438;
	add.f32 	%f475, %f473, %f474;
	abs.f32 	%f477, %f473;
	add.f32 	%f509, %f507, %f508;
	abs.f32 	%f511, %f507;
	add.f32 	%f544, %f542, %f543;
	abs.f32 	%f546, %f542;
	add.f32 	%f578, %f576, %f577;
	abs.f32 	%f580, %f576;
	add.f32 	%f613, %f611, %f612;
	abs.f32 	%f615, %f611;
	add.f32 	%f647, %f645, %f646;
	abs.f32 	%f649, %f645;
	add.f32 	%f682, %f680, %f681;
	abs.f32 	%f684, %f680;
	add.f32 	%f716, %f714, %f715;
	abs.f32 	%f718, %f714;
	add.f32 	%f751, %f749, %f750;
	abs.f32 	%f753, %f749;
	add.f32 	%f785, %f783, %f784;
	abs.f32 	%f787, %f783;
	cvt.rzi.f32.f32 	%f835, %f834;
	setp.gt.f32 	%p124, %f836, 0f4B000000;
	shr.u32 	%r189, %r1, 1;
	shr.u32 	%r195, %r1, 3;
	abs.f32 	%f883, %f1358;
	setp.gtu.f32 	%p143, %f883, 0f7F800000;
	@%p143 bra 	$L__BB0_68;
// %bb.67:
	mov.b32 	%r463, %f90;
	and.b32  	%r464, %r463, -2147483648;
	mov.b32 	%r465, %f1358;
	or.b32  	%r466, %r464, %r465;
	mov.b32 	%f1358, %r466;
$L__BB0_68:                             // %__nv_fmodf.exit1661
	cvt.rzi.f32.f32 	%f269, %f268;
	setp.gt.f32 	%p16, %f270, 0f4B000000;
	cvt.rzi.f32.f32 	%f303, %f302;
	setp.gt.f32 	%p22, %f304, 0f4B000000;
	cvt.rzi.f32.f32 	%f338, %f337;
	setp.gt.f32 	%p28, %f339, 0f4B000000;
	cvt.rzi.f32.f32 	%f372, %f371;
	setp.gt.f32 	%p34, %f373, 0f4B000000;
	cvt.rzi.f32.f32 	%f407, %f406;
	setp.gt.f32 	%p40, %f408, 0f4B000000;
	cvt.rzi.f32.f32 	%f441, %f440;
	setp.gt.f32 	%p46, %f442, 0f4B000000;
	cvt.rzi.f32.f32 	%f476, %f475;
	setp.gt.f32 	%p52, %f477, 0f4B000000;
	cvt.rzi.f32.f32 	%f510, %f509;
	setp.gt.f32 	%p58, %f511, 0f4B000000;
	cvt.rzi.f32.f32 	%f545, %f544;
	setp.gt.f32 	%p64, %f546, 0f4B000000;
	cvt.rzi.f32.f32 	%f579, %f578;
	setp.gt.f32 	%p70, %f580, 0f4B000000;
	cvt.rzi.f32.f32 	%f614, %f613;
	setp.gt.f32 	%p76, %f615, 0f4B000000;
	cvt.rzi.f32.f32 	%f648, %f647;
	setp.gt.f32 	%p82, %f649, 0f4B000000;
	cvt.rzi.f32.f32 	%f683, %f682;
	setp.gt.f32 	%p88, %f684, 0f4B000000;
	cvt.rzi.f32.f32 	%f717, %f716;
	setp.gt.f32 	%p94, %f718, 0f4B000000;
	cvt.rzi.f32.f32 	%f752, %f751;
	setp.gt.f32 	%p100, %f753, 0f4B000000;
	cvt.rzi.f32.f32 	%f786, %f785;
	setp.gt.f32 	%p106, %f787, 0f4B000000;
	selp.f32 	%f837, %f832, %f835, %p124;
	cvt.rzi.f32.f32 	%f838, %f832;
	setp.lt.f32 	%p125, %f836, 0f3F000000;
	add.f32 	%f884, %f1358, %f1358;
	mov.b32 	%r479, %f884;
	and.b32  	%r480, %r479, -2147483648;
	or.b32  	%r481, %r480, 1056964608;
	mov.b32 	%f885, %r481;
	add.f32 	%f886, %f884, %f885;
	cvt.rzi.f32.f32 	%f887, %f886;
	abs.f32 	%f888, %f884;
	setp.gt.f32 	%p144, %f888, 0f4B000000;
	selp.f32 	%f889, %f884, %f887, %p144;
	cvt.rzi.f32.f32 	%f890, %f884;
	setp.lt.f32 	%p145, %f888, 0f3F000000;
	and.b32  	%r487, %r195, 2;
	or.b32  	%r488, %r193, %r487;
	and.b32  	%r489, %r189, 4;
	or.b32  	%r45, %r488, %r489;
	and.b32  	%r490, %r1, 3;
	mul.lo.s32 	%r491, %r490, %r45;
	shl.b32 	%r492, %r491, 1;
	neg.s32 	%r493, %r492;
	cvt.rn.f32.s32 	%f916, %r493;
	mov.f32 	%f917, 0f41000000;
	div.approx.f32 	%f107, %f916, %f917;
	abs.f32 	%f1362, %f107;
	setp.lt.f32 	%p151, %f1362, 0f40000000;
	@%p151 bra 	$L__BB0_80;
// %bb.69:
	setp.gtu.f32 	%p152, %f1362, 0f4B800000;
	@%p152 bra 	$L__BB0_76;
	bra.uni 	$L__BB0_70;
$L__BB0_76:
	mov.b32 	%r47, %f1362;
	and.b32  	%r494, %r47, 8388607;
	or.b32  	%r16364, %r494, 1065353216;
	mov.b32 	%f1361, %r16364;
	add.s32 	%r495, %r47, -1073741824;
	and.b32  	%r16365, %r495, -8388608;
	setp.eq.s32 	%p158, %r16365, 0;
	@%p158 bra 	$L__BB0_79;
// %bb.77:                              // %__nv_fmaf_rn.exit4.i.i.i1686.preheader
	mov.f32 	%f927, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f926,%f927;
	// end inline asm
$L__BB0_78:                             // %__nv_fmaf_rn.exit4.i.i.i1686
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r496, %r16365, 192937984;
	add.s32 	%r497, %r16364, %r496;
	mov.b32 	%f928, %r497;
	mul.f32 	%f929, %f926, %f928;
	sub.f32 	%f930, %f928, %f929;
	fma.rn.f32 	%f931, %f930, %f926, %f929;
	sub.f32 	%f932, %f928, %f931;
	fma.rz.f32 	%f933, %f932, %f926, %f931;
	cvt.rzi.f32.f32 	%f934, %f933;
	sub.f32 	%f1361, %f928, %f934;
	sub.s32 	%r16365, %r16365, %r496;
	mov.b32 	%r16364, %f1361;
	setp.ne.s32 	%p159, %r16365, 0;
	setp.ne.s32 	%p160, %r16364, 0;
	and.pred  	%p161, %p159, %p160;
	@%p161 bra 	$L__BB0_78;
$L__BB0_79:                             // %__internal_fmodf_slowpath_mod.exit.i.i1688
	setp.gt.u32 	%p162, %r47, 2139095039;
	selp.f32 	%f935, 0f7FFFFFFF, 0f4B800000, %p162;
	mul.f32 	%f936, %f1361, 0f34000000;
	mul.f32 	%f1362, %f935, %f936;
	bra.uni 	$L__BB0_80;
$L__BB0_70:                             // %__nv_fast_fdividef.exit.i.i.i1665
	div.approx.f32 	%f919, %f1362, %f257;
	cvt.rzi.f32.f32 	%f1360, %f919;
	fma.rn.f32 	%f110, %f1360, 0fC0000000, %f1362;
	mov.b32 	%r46, %f110;
	setp.lt.u32 	%p153, %r46, 1073741824;
	@%p153 bra 	$L__BB0_75;
// %bb.71:
	setp.lt.u32 	%p154, %r46, -2147483647;
	@%p154 bra 	$L__BB0_73;
// %bb.72:
	add.f32 	%f924, %f1360, 0fBF800000;
	setp.lt.f32 	%p157, %f110, 0fC0000000;
	add.f32 	%f925, %f924, 0fBF800000;
	selp.f32 	%f1360, %f925, %f924, %p157;
	bra.uni 	$L__BB0_75;
$L__BB0_73:
	add.f32 	%f1360, %f1360, 0f3F800000;
	setp.ltu.f32 	%p155, %f110, 0f40800000;
	@%p155 bra 	$L__BB0_75;
// %bb.74:                              // %__nv_fmaf_rn.exit.i.i.i1669
	add.f32 	%f920, %f1360, 0f3F800000;
	fma.rn.f32 	%f922, %f257, 0fC0400000, %f110;
	setp.ge.f32 	%p156, %f922, 0f00000000;
	add.f32 	%f923, %f920, 0f3F800000;
	selp.f32 	%f1360, %f923, %f920, %p156;
$L__BB0_75:                             // %__internal_fmodf_fastpath_quot.exit.i.i1672
	fma.rn.f32 	%f1362, %f1360, 0fC0000000, %f1362;
$L__BB0_80:                             // %__internal_fmodf_kernel.exit.i1691
	selp.f32 	%f271, %f266, %f269, %p16;
	cvt.rzi.f32.f32 	%f272, %f266;
	setp.lt.f32 	%p17, %f270, 0f3F000000;
	selp.f32 	%f305, %f300, %f303, %p22;
	cvt.rzi.f32.f32 	%f306, %f300;
	setp.lt.f32 	%p23, %f304, 0f3F000000;
	selp.f32 	%f340, %f335, %f338, %p28;
	cvt.rzi.f32.f32 	%f341, %f335;
	setp.lt.f32 	%p29, %f339, 0f3F000000;
	selp.f32 	%f374, %f369, %f372, %p34;
	cvt.rzi.f32.f32 	%f375, %f369;
	setp.lt.f32 	%p35, %f373, 0f3F000000;
	selp.f32 	%f409, %f404, %f407, %p40;
	cvt.rzi.f32.f32 	%f410, %f404;
	setp.lt.f32 	%p41, %f408, 0f3F000000;
	selp.f32 	%f443, %f438, %f441, %p46;
	cvt.rzi.f32.f32 	%f444, %f438;
	setp.lt.f32 	%p47, %f442, 0f3F000000;
	selp.f32 	%f478, %f473, %f476, %p52;
	cvt.rzi.f32.f32 	%f479, %f473;
	setp.lt.f32 	%p53, %f477, 0f3F000000;
	selp.f32 	%f512, %f507, %f510, %p58;
	cvt.rzi.f32.f32 	%f513, %f507;
	setp.lt.f32 	%p59, %f511, 0f3F000000;
	selp.f32 	%f547, %f542, %f545, %p64;
	cvt.rzi.f32.f32 	%f548, %f542;
	setp.lt.f32 	%p65, %f546, 0f3F000000;
	selp.f32 	%f581, %f576, %f579, %p70;
	cvt.rzi.f32.f32 	%f582, %f576;
	setp.lt.f32 	%p71, %f580, 0f3F000000;
	selp.f32 	%f616, %f611, %f614, %p76;
	cvt.rzi.f32.f32 	%f617, %f611;
	setp.lt.f32 	%p77, %f615, 0f3F000000;
	selp.f32 	%f650, %f645, %f648, %p82;
	cvt.rzi.f32.f32 	%f651, %f645;
	setp.lt.f32 	%p83, %f649, 0f3F000000;
	selp.f32 	%f685, %f680, %f683, %p88;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p89, %f684, 0f3F000000;
	selp.f32 	%f719, %f714, %f717, %p94;
	cvt.rzi.f32.f32 	%f720, %f714;
	setp.lt.f32 	%p95, %f718, 0f3F000000;
	selp.f32 	%f754, %f749, %f752, %p100;
	cvt.rzi.f32.f32 	%f755, %f749;
	setp.lt.f32 	%p101, %f753, 0f3F000000;
	selp.f32 	%f788, %f783, %f786, %p106;
	cvt.rzi.f32.f32 	%f789, %f783;
	setp.lt.f32 	%p107, %f787, 0f3F000000;
	selp.f32 	%f839, %f838, %f837, %p125;
	selp.f32 	%f891, %f890, %f889, %p145;
	shl.b32 	%r181, %r1, 1;
	abs.f32 	%f937, %f1362;
	setp.gtu.f32 	%p163, %f937, 0f7F800000;
	@%p163 bra 	$L__BB0_82;
// %bb.81:
	mov.b32 	%r498, %f107;
	and.b32  	%r499, %r498, -2147483648;
	mov.b32 	%r500, %f1362;
	or.b32  	%r501, %r499, %r500;
	mov.b32 	%f1362, %r501;
$L__BB0_82:                             // %__nv_fmodf.exit1692
	selp.f32 	%f273, %f272, %f271, %p17;
	selp.f32 	%f307, %f306, %f305, %p23;
	selp.f32 	%f342, %f341, %f340, %p29;
	selp.f32 	%f376, %f375, %f374, %p35;
	selp.f32 	%f411, %f410, %f409, %p41;
	selp.f32 	%f445, %f444, %f443, %p47;
	selp.f32 	%f480, %f479, %f478, %p53;
	selp.f32 	%f514, %f513, %f512, %p59;
	selp.f32 	%f549, %f548, %f547, %p65;
	selp.f32 	%f583, %f582, %f581, %p71;
	selp.f32 	%f618, %f617, %f616, %p77;
	selp.f32 	%f652, %f651, %f650, %p83;
	selp.f32 	%f687, %f686, %f685, %p89;
	selp.f32 	%f721, %f720, %f719, %p95;
	selp.f32 	%f756, %f755, %f754, %p101;
	selp.f32 	%f790, %f789, %f788, %p107;
	fma.rn.f32 	%f840, %f839, 0fBF000000, %f1354;
	fma.rn.f32 	%f892, %f891, 0fBF000000, %f1358;
	add.f32 	%f938, %f1362, %f1362;
	mov.b32 	%r502, %f938;
	and.b32  	%r503, %r502, -2147483648;
	or.b32  	%r504, %r503, 1056964608;
	mov.b32 	%f939, %r504;
	add.f32 	%f940, %f938, %f939;
	cvt.rzi.f32.f32 	%f941, %f940;
	abs.f32 	%f942, %f938;
	setp.gt.f32 	%p164, %f942, 0f4B000000;
	selp.f32 	%f943, %f938, %f941, %p164;
	cvt.rzi.f32.f32 	%f944, %f938;
	setp.lt.f32 	%p165, %f942, 0f3F000000;
	selp.f32 	%f945, %f944, %f943, %p165;
	fma.rn.f32 	%f946, %f945, 0fBF000000, %f1362;
	and.b32  	%r510, %r181, 6;
	mov.u32 	%r511, -8;
	sub.s32 	%r512, %r511, %r510;
	mul.lo.s32 	%r513, %r45, %r512;
	cvt.rn.f32.s32 	%f968, %r513;
	div.approx.f32 	%f126, %f968, %f917;
	abs.f32 	%f1366, %f126;
	setp.lt.f32 	%p171, %f1366, 0f40000000;
	@%p171 bra 	$L__BB0_94;
// %bb.83:
	setp.gtu.f32 	%p172, %f1366, 0f4B800000;
	@%p172 bra 	$L__BB0_90;
	bra.uni 	$L__BB0_84;
$L__BB0_90:
	mov.b32 	%r55, %f1366;
	and.b32  	%r514, %r55, 8388607;
	or.b32  	%r16366, %r514, 1065353216;
	mov.b32 	%f1365, %r16366;
	add.s32 	%r515, %r55, -1073741824;
	and.b32  	%r16367, %r515, -8388608;
	setp.eq.s32 	%p178, %r16367, 0;
	@%p178 bra 	$L__BB0_93;
// %bb.91:                              // %__nv_fmaf_rn.exit4.i.i.i1717.preheader
	mov.f32 	%f979, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f978,%f979;
	// end inline asm
$L__BB0_92:                             // %__nv_fmaf_rn.exit4.i.i.i1717
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r516, %r16367, 192937984;
	add.s32 	%r517, %r16366, %r516;
	mov.b32 	%f980, %r517;
	mul.f32 	%f981, %f978, %f980;
	sub.f32 	%f982, %f980, %f981;
	fma.rn.f32 	%f983, %f982, %f978, %f981;
	sub.f32 	%f984, %f980, %f983;
	fma.rz.f32 	%f985, %f984, %f978, %f983;
	cvt.rzi.f32.f32 	%f986, %f985;
	sub.f32 	%f1365, %f980, %f986;
	sub.s32 	%r16367, %r16367, %r516;
	mov.b32 	%r16366, %f1365;
	setp.ne.s32 	%p179, %r16367, 0;
	setp.ne.s32 	%p180, %r16366, 0;
	and.pred  	%p181, %p179, %p180;
	@%p181 bra 	$L__BB0_92;
$L__BB0_93:                             // %__internal_fmodf_slowpath_mod.exit.i.i1719
	setp.gt.u32 	%p182, %r55, 2139095039;
	selp.f32 	%f987, 0f7FFFFFFF, 0f4B800000, %p182;
	mul.f32 	%f988, %f1365, 0f34000000;
	mul.f32 	%f1366, %f987, %f988;
	bra.uni 	$L__BB0_94;
$L__BB0_84:                             // %__nv_fast_fdividef.exit.i.i.i1696
	div.approx.f32 	%f971, %f1366, %f257;
	cvt.rzi.f32.f32 	%f1364, %f971;
	fma.rn.f32 	%f129, %f1364, 0fC0000000, %f1366;
	mov.b32 	%r54, %f129;
	setp.lt.u32 	%p173, %r54, 1073741824;
	@%p173 bra 	$L__BB0_89;
// %bb.85:
	setp.lt.u32 	%p174, %r54, -2147483647;
	@%p174 bra 	$L__BB0_87;
// %bb.86:
	add.f32 	%f976, %f1364, 0fBF800000;
	setp.lt.f32 	%p177, %f129, 0fC0000000;
	add.f32 	%f977, %f976, 0fBF800000;
	selp.f32 	%f1364, %f977, %f976, %p177;
	bra.uni 	$L__BB0_89;
$L__BB0_87:
	add.f32 	%f1364, %f1364, 0f3F800000;
	setp.ltu.f32 	%p175, %f129, 0f40800000;
	@%p175 bra 	$L__BB0_89;
// %bb.88:                              // %__nv_fmaf_rn.exit.i.i.i1700
	add.f32 	%f972, %f1364, 0f3F800000;
	fma.rn.f32 	%f974, %f257, 0fC0400000, %f129;
	setp.ge.f32 	%p176, %f974, 0f00000000;
	add.f32 	%f975, %f972, 0f3F800000;
	selp.f32 	%f1364, %f975, %f972, %p176;
$L__BB0_89:                             // %__internal_fmodf_fastpath_quot.exit.i.i1703
	fma.rn.f32 	%f1366, %f1364, 0fC0000000, %f1366;
$L__BB0_94:                             // %__internal_fmodf_kernel.exit.i1722
	fma.rn.f32 	%f274, %f273, 0fBF000000, %f265;
	fma.rn.f32 	%f308, %f307, 0fBF000000, %f299;
	fma.rn.f32 	%f343, %f342, 0fBF000000, %f334;
	fma.rn.f32 	%f377, %f376, 0fBF000000, %f368;
	fma.rn.f32 	%f412, %f411, 0fBF000000, %f403;
	fma.rn.f32 	%f446, %f445, 0fBF000000, %f437;
	fma.rn.f32 	%f481, %f480, 0fBF000000, %f472;
	fma.rn.f32 	%f515, %f514, 0fBF000000, %f506;
	fma.rn.f32 	%f550, %f549, 0fBF000000, %f541;
	fma.rn.f32 	%f584, %f583, 0fBF000000, %f575;
	fma.rn.f32 	%f619, %f618, 0fBF000000, %f610;
	fma.rn.f32 	%f653, %f652, 0fBF000000, %f644;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f679;
	fma.rn.f32 	%f722, %f721, 0fBF000000, %f713;
	fma.rn.f32 	%f757, %f756, 0fBF000000, %f748;
	fma.rn.f32 	%f791, %f790, 0fBF000000, %f782;
	mul.f32 	%f841, %f840, %f840;
	mul.f32 	%f893, %f892, %f892;
	mul.f32 	%f947, %f946, %f946;
	abs.f32 	%f989, %f1366;
	setp.gtu.f32 	%p183, %f989, 0f7F800000;
	@%p183 bra 	$L__BB0_96;
// %bb.95:
	mov.b32 	%r518, %f126;
	and.b32  	%r519, %r518, -2147483648;
	mov.b32 	%r520, %f1366;
	or.b32  	%r521, %r519, %r520;
	mov.b32 	%f1366, %r521;
$L__BB0_96:                             // %__nv_fmodf.exit1723
	mul.f32 	%f275, %f274, %f274;
	mul.f32 	%f309, %f308, %f308;
	mul.f32 	%f344, %f343, %f343;
	mul.f32 	%f378, %f377, %f377;
	mul.f32 	%f413, %f412, %f412;
	mul.f32 	%f447, %f446, %f446;
	mul.f32 	%f482, %f481, %f481;
	mul.f32 	%f516, %f515, %f515;
	mul.f32 	%f551, %f550, %f550;
	mul.f32 	%f585, %f584, %f584;
	mul.f32 	%f620, %f619, %f619;
	mul.f32 	%f654, %f653, %f653;
	mul.f32 	%f689, %f688, %f688;
	mul.f32 	%f723, %f722, %f722;
	mul.f32 	%f758, %f757, %f757;
	mul.f32 	%f792, %f791, %f791;
	fma.rn.f32 	%f842, %f841, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f843, %f841, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f894, %f893, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f895, %f893, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f948, %f947, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f949, %f947, 0f3E684E12, 0fBFAAD2E0;
	add.f32 	%f990, %f1366, %f1366;
	mov.b32 	%r534, %f990;
	and.b32  	%r535, %r534, -2147483648;
	or.b32  	%r536, %r535, 1056964608;
	mov.b32 	%f991, %r536;
	add.f32 	%f992, %f990, %f991;
	cvt.rzi.f32.f32 	%f993, %f992;
	abs.f32 	%f994, %f990;
	setp.gt.f32 	%p184, %f994, 0f4B000000;
	selp.f32 	%f995, %f990, %f993, %p184;
	cvt.rzi.f32.f32 	%f996, %f990;
	setp.lt.f32 	%p185, %f994, 0f3F000000;
	selp.f32 	%f997, %f996, %f995, %p185;
	fma.rn.f32 	%f998, %f997, 0fBF000000, %f1366;
	mul.f32 	%f999, %f998, %f998;
	fma.rn.f32 	%f1000, %f999, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1001, %f999, 0f3E684E12, 0fBFAAD2E0;
	mul.lo.s32 	%r542, %r191, 2147483646;
	shl.b32 	%r543, %r190, 2;
	sub.s32 	%r544, %r542, %r543;
	mul.lo.s32 	%r545, %r544, %r45;
	shl.b32 	%r66, %r545, 1;
	cvt.rn.f32.s32 	%f143, %r66;
	div.approx.f32 	%f144, %f143, %f289;
	abs.f32 	%f1370, %f144;
	setp.lt.f32 	%p191, %f1370, 0f40000000;
	@%p191 bra 	$L__BB0_108;
// %bb.97:
	setp.gtu.f32 	%p192, %f1370, 0f4B800000;
	@%p192 bra 	$L__BB0_104;
	bra.uni 	$L__BB0_98;
$L__BB0_104:
	mov.b32 	%r68, %f1370;
	and.b32  	%r546, %r68, 8388607;
	or.b32  	%r16368, %r546, 1065353216;
	mov.b32 	%f1369, %r16368;
	add.s32 	%r547, %r68, -1073741824;
	and.b32  	%r16369, %r547, -8388608;
	setp.eq.s32 	%p198, %r16369, 0;
	@%p198 bra 	$L__BB0_107;
// %bb.105:                             // %__nv_fmaf_rn.exit4.i.i.i1748.preheader
	mov.f32 	%f1032, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1031,%f1032;
	// end inline asm
$L__BB0_106:                            // %__nv_fmaf_rn.exit4.i.i.i1748
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r548, %r16369, 192937984;
	add.s32 	%r549, %r16368, %r548;
	mov.b32 	%f1033, %r549;
	mul.f32 	%f1034, %f1031, %f1033;
	sub.f32 	%f1035, %f1033, %f1034;
	fma.rn.f32 	%f1036, %f1035, %f1031, %f1034;
	sub.f32 	%f1037, %f1033, %f1036;
	fma.rz.f32 	%f1038, %f1037, %f1031, %f1036;
	cvt.rzi.f32.f32 	%f1039, %f1038;
	sub.f32 	%f1369, %f1033, %f1039;
	sub.s32 	%r16369, %r16369, %r548;
	mov.b32 	%r16368, %f1369;
	setp.ne.s32 	%p199, %r16369, 0;
	setp.ne.s32 	%p200, %r16368, 0;
	and.pred  	%p201, %p199, %p200;
	@%p201 bra 	$L__BB0_106;
$L__BB0_107:                            // %__internal_fmodf_slowpath_mod.exit.i.i1750
	setp.gt.u32 	%p202, %r68, 2139095039;
	selp.f32 	%f1040, 0f7FFFFFFF, 0f4B800000, %p202;
	mul.f32 	%f1041, %f1369, 0f34000000;
	mul.f32 	%f1370, %f1040, %f1041;
	bra.uni 	$L__BB0_108;
$L__BB0_98:                             // %__nv_fast_fdividef.exit.i.i.i1727
	div.approx.f32 	%f1024, %f1370, %f257;
	cvt.rzi.f32.f32 	%f1368, %f1024;
	fma.rn.f32 	%f147, %f1368, 0fC0000000, %f1370;
	mov.b32 	%r67, %f147;
	setp.lt.u32 	%p193, %r67, 1073741824;
	@%p193 bra 	$L__BB0_103;
// %bb.99:
	setp.lt.u32 	%p194, %r67, -2147483647;
	@%p194 bra 	$L__BB0_101;
// %bb.100:
	add.f32 	%f1029, %f1368, 0fBF800000;
	setp.lt.f32 	%p197, %f147, 0fC0000000;
	add.f32 	%f1030, %f1029, 0fBF800000;
	selp.f32 	%f1368, %f1030, %f1029, %p197;
	bra.uni 	$L__BB0_103;
$L__BB0_101:
	add.f32 	%f1368, %f1368, 0f3F800000;
	setp.ltu.f32 	%p195, %f147, 0f40800000;
	@%p195 bra 	$L__BB0_103;
// %bb.102:                             // %__nv_fmaf_rn.exit.i.i.i1731
	add.f32 	%f1025, %f1368, 0f3F800000;
	fma.rn.f32 	%f1027, %f257, 0fC0400000, %f147;
	setp.ge.f32 	%p196, %f1027, 0f00000000;
	add.f32 	%f1028, %f1025, 0f3F800000;
	selp.f32 	%f1368, %f1028, %f1025, %p196;
$L__BB0_103:                            // %__internal_fmodf_fastpath_quot.exit.i.i1734
	fma.rn.f32 	%f1370, %f1368, 0fC0000000, %f1370;
$L__BB0_108:                            // %__internal_fmodf_kernel.exit.i1753
	cvt.rzi.s32.f32 	%r302, %f273;
	fma.rn.f32 	%f276, %f275, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f277, %f275, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r309, %f307;
	fma.rn.f32 	%f310, %f309, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f311, %f309, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r320, %f342;
	fma.rn.f32 	%f345, %f344, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f346, %f344, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r327, %f376;
	fma.rn.f32 	%f379, %f378, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f380, %f378, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r338, %f411;
	fma.rn.f32 	%f414, %f413, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f415, %f413, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r345, %f445;
	fma.rn.f32 	%f448, %f447, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f449, %f447, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r356, %f480;
	fma.rn.f32 	%f483, %f482, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f484, %f482, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r363, %f514;
	fma.rn.f32 	%f517, %f516, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f518, %f516, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r374, %f549;
	fma.rn.f32 	%f552, %f551, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f553, %f551, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r381, %f583;
	fma.rn.f32 	%f586, %f585, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f587, %f585, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r392, %f618;
	fma.rn.f32 	%f621, %f620, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f622, %f620, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r399, %f652;
	fma.rn.f32 	%f655, %f654, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f656, %f654, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r410, %f687;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r417, %f721;
	fma.rn.f32 	%f724, %f723, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f725, %f723, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r428, %f756;
	fma.rn.f32 	%f759, %f758, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f760, %f758, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r435, %f790;
	fma.rn.f32 	%f793, %f792, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f794, %f792, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r453, %f839;
	fma.rn.f32 	%f844, %f842, %f841, 0fC0A55DF6;
	fma.rn.f32 	%f845, %f843, %f841, 0f4081E0CF;
	fma.rn.f32 	%f846, %f841, %f840, 0f00000000;
	cvt.rzi.s32.f32 	%r482, %f891;
	fma.rn.f32 	%f896, %f894, %f893, 0fC0A55DF6;
	fma.rn.f32 	%f897, %f895, %f893, 0f4081E0CF;
	fma.rn.f32 	%f898, %f893, %f892, 0f00000000;
	cvt.rzi.s32.f32 	%r505, %f945;
	fma.rn.f32 	%f950, %f948, %f947, 0fC0A55DF6;
	fma.rn.f32 	%f951, %f949, %f947, 0f4081E0CF;
	fma.rn.f32 	%f952, %f947, %f946, 0f00000000;
	cvt.rzi.s32.f32 	%r537, %f997;
	fma.rn.f32 	%f1002, %f1000, %f999, 0fC0A55DF6;
	fma.rn.f32 	%f1003, %f1001, %f999, 0f4081E0CF;
	fma.rn.f32 	%f1004, %f999, %f998, 0f00000000;
	abs.f32 	%f1042, %f1370;
	setp.gtu.f32 	%p203, %f1042, 0f7F800000;
	@%p203 bra 	$L__BB0_110;
// %bb.109:
	mov.b32 	%r550, %f144;
	and.b32  	%r551, %r550, -2147483648;
	mov.b32 	%r552, %f1370;
	or.b32  	%r553, %r551, %r552;
	mov.b32 	%f1370, %r553;
$L__BB0_110:                            // %__nv_fmodf.exit1754
	shl.b32 	%r178, %r1, 2;
	add.s32 	%r303, %r302, 1;
	fma.rn.f32 	%f278, %f276, %f275, 0fC0A55DF6;
	fma.rn.f32 	%f279, %f277, %f275, 0f4081E0CF;
	fma.rn.f32 	%f280, %f275, %f274, 0f00000000;
	add.s32 	%r310, %r309, 1;
	fma.rn.f32 	%f312, %f310, %f309, 0fC0A55DF6;
	fma.rn.f32 	%f313, %f311, %f309, 0f4081E0CF;
	fma.rn.f32 	%f314, %f309, %f308, 0f00000000;
	add.s32 	%r321, %r320, 1;
	fma.rn.f32 	%f347, %f345, %f344, 0fC0A55DF6;
	fma.rn.f32 	%f348, %f346, %f344, 0f4081E0CF;
	fma.rn.f32 	%f349, %f344, %f343, 0f00000000;
	add.s32 	%r328, %r327, 1;
	fma.rn.f32 	%f381, %f379, %f378, 0fC0A55DF6;
	fma.rn.f32 	%f382, %f380, %f378, 0f4081E0CF;
	fma.rn.f32 	%f383, %f378, %f377, 0f00000000;
	add.s32 	%r339, %r338, 1;
	fma.rn.f32 	%f416, %f414, %f413, 0fC0A55DF6;
	fma.rn.f32 	%f417, %f415, %f413, 0f4081E0CF;
	fma.rn.f32 	%f418, %f413, %f412, 0f00000000;
	add.s32 	%r346, %r345, 1;
	fma.rn.f32 	%f450, %f448, %f447, 0fC0A55DF6;
	fma.rn.f32 	%f451, %f449, %f447, 0f4081E0CF;
	fma.rn.f32 	%f452, %f447, %f446, 0f00000000;
	add.s32 	%r357, %r356, 1;
	fma.rn.f32 	%f485, %f483, %f482, 0fC0A55DF6;
	fma.rn.f32 	%f486, %f484, %f482, 0f4081E0CF;
	fma.rn.f32 	%f487, %f482, %f481, 0f00000000;
	add.s32 	%r364, %r363, 1;
	fma.rn.f32 	%f519, %f517, %f516, 0fC0A55DF6;
	fma.rn.f32 	%f520, %f518, %f516, 0f4081E0CF;
	fma.rn.f32 	%f521, %f516, %f515, 0f00000000;
	add.s32 	%r375, %r374, 1;
	fma.rn.f32 	%f554, %f552, %f551, 0fC0A55DF6;
	fma.rn.f32 	%f555, %f553, %f551, 0f4081E0CF;
	fma.rn.f32 	%f556, %f551, %f550, 0f00000000;
	add.s32 	%r382, %r381, 1;
	fma.rn.f32 	%f588, %f586, %f585, 0fC0A55DF6;
	fma.rn.f32 	%f589, %f587, %f585, 0f4081E0CF;
	fma.rn.f32 	%f590, %f585, %f584, 0f00000000;
	add.s32 	%r393, %r392, 1;
	fma.rn.f32 	%f623, %f621, %f620, 0fC0A55DF6;
	fma.rn.f32 	%f624, %f622, %f620, 0f4081E0CF;
	fma.rn.f32 	%f625, %f620, %f619, 0f00000000;
	add.s32 	%r400, %r399, 1;
	fma.rn.f32 	%f657, %f655, %f654, 0fC0A55DF6;
	fma.rn.f32 	%f658, %f656, %f654, 0f4081E0CF;
	fma.rn.f32 	%f659, %f654, %f653, 0f00000000;
	add.s32 	%r411, %r410, 1;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	add.s32 	%r418, %r417, 1;
	fma.rn.f32 	%f726, %f724, %f723, 0fC0A55DF6;
	fma.rn.f32 	%f727, %f725, %f723, 0f4081E0CF;
	fma.rn.f32 	%f728, %f723, %f722, 0f00000000;
	add.s32 	%r429, %r428, 1;
	fma.rn.f32 	%f761, %f759, %f758, 0fC0A55DF6;
	fma.rn.f32 	%f762, %f760, %f758, 0f4081E0CF;
	fma.rn.f32 	%f763, %f758, %f757, 0f00000000;
	add.s32 	%r436, %r435, 1;
	fma.rn.f32 	%f795, %f793, %f792, 0fC0A55DF6;
	fma.rn.f32 	%f796, %f794, %f792, 0f4081E0CF;
	fma.rn.f32 	%f797, %f792, %f791, 0f00000000;
	fma.rn.f32 	%f847, %f845, %f841, 0fC09DE9E6;
	fma.rn.f32 	%f848, %f844, %f846, 0f00000000;
	and.b32  	%r454, %r453, 1;
	fma.rn.f32 	%f899, %f897, %f893, 0fC09DE9E6;
	fma.rn.f32 	%f900, %f896, %f898, 0f00000000;
	and.b32  	%r483, %r482, 1;
	fma.rn.f32 	%f953, %f951, %f947, 0fC09DE9E6;
	fma.rn.f32 	%f954, %f950, %f952, 0f00000000;
	and.b32  	%r506, %r505, 1;
	fma.rn.f32 	%f1005, %f1003, %f999, 0fC09DE9E6;
	fma.rn.f32 	%f1006, %f1002, %f1004, 0f00000000;
	and.b32  	%r538, %r537, 1;
	add.f32 	%f1043, %f1370, %f1370;
	mov.b32 	%r554, %f1043;
	and.b32  	%r555, %r554, -2147483648;
	or.b32  	%r556, %r555, 1056964608;
	mov.b32 	%f1044, %r556;
	add.f32 	%f1045, %f1043, %f1044;
	cvt.rzi.f32.f32 	%f1046, %f1045;
	abs.f32 	%f1047, %f1043;
	setp.gt.f32 	%p204, %f1047, 0f4B000000;
	selp.f32 	%f1048, %f1043, %f1046, %p204;
	cvt.rzi.f32.f32 	%f1049, %f1043;
	setp.lt.f32 	%p205, %f1047, 0f3F000000;
	selp.f32 	%f1050, %f1049, %f1048, %p205;
	cvt.rzi.s32.f32 	%r557, %f1050;
	fma.rn.f32 	%f1051, %f1050, 0fBF000000, %f1370;
	mul.f32 	%f1052, %f1051, %f1051;
	fma.rn.f32 	%f1053, %f1052, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1054, %f1052, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1055, %f1053, %f1052, 0fC0A55DF6;
	fma.rn.f32 	%f1056, %f1054, %f1052, 0f4081E0CF;
	fma.rn.f32 	%f1057, %f1052, %f1051, 0f00000000;
	shl.b32 	%r562, %r45, 4;
	sub.s32 	%r563, %r66, %r562;
	cvt.rn.f32.s32 	%f163, %r563;
	div.approx.f32 	%f164, %f163, %f289;
	abs.f32 	%f1374, %f164;
	setp.lt.f32 	%p211, %f1374, 0f40000000;
	@%p211 bra 	$L__BB0_122;
// %bb.111:
	setp.gtu.f32 	%p212, %f1374, 0f4B800000;
	@%p212 bra 	$L__BB0_118;
	bra.uni 	$L__BB0_112;
$L__BB0_118:
	mov.b32 	%r76, %f1374;
	and.b32  	%r564, %r76, 8388607;
	or.b32  	%r16370, %r564, 1065353216;
	mov.b32 	%f1373, %r16370;
	add.s32 	%r565, %r76, -1073741824;
	and.b32  	%r16371, %r565, -8388608;
	setp.eq.s32 	%p218, %r16371, 0;
	@%p218 bra 	$L__BB0_121;
// %bb.119:                             // %__nv_fmaf_rn.exit4.i.i.i1779.preheader
	mov.f32 	%f1083, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1082,%f1083;
	// end inline asm
$L__BB0_120:                            // %__nv_fmaf_rn.exit4.i.i.i1779
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r566, %r16371, 192937984;
	add.s32 	%r567, %r16370, %r566;
	mov.b32 	%f1084, %r567;
	mul.f32 	%f1085, %f1082, %f1084;
	sub.f32 	%f1086, %f1084, %f1085;
	fma.rn.f32 	%f1087, %f1086, %f1082, %f1085;
	sub.f32 	%f1088, %f1084, %f1087;
	fma.rz.f32 	%f1089, %f1088, %f1082, %f1087;
	cvt.rzi.f32.f32 	%f1090, %f1089;
	sub.f32 	%f1373, %f1084, %f1090;
	sub.s32 	%r16371, %r16371, %r566;
	mov.b32 	%r16370, %f1373;
	setp.ne.s32 	%p219, %r16371, 0;
	setp.ne.s32 	%p220, %r16370, 0;
	and.pred  	%p221, %p219, %p220;
	@%p221 bra 	$L__BB0_120;
$L__BB0_121:                            // %__internal_fmodf_slowpath_mod.exit.i.i1781
	setp.gt.u32 	%p222, %r76, 2139095039;
	selp.f32 	%f1091, 0f7FFFFFFF, 0f4B800000, %p222;
	mul.f32 	%f1092, %f1373, 0f34000000;
	mul.f32 	%f1374, %f1091, %f1092;
	bra.uni 	$L__BB0_122;
$L__BB0_112:                            // %__nv_fast_fdividef.exit.i.i.i1758
	div.approx.f32 	%f1075, %f1374, %f257;
	cvt.rzi.f32.f32 	%f1372, %f1075;
	fma.rn.f32 	%f167, %f1372, 0fC0000000, %f1374;
	mov.b32 	%r75, %f167;
	setp.lt.u32 	%p213, %r75, 1073741824;
	@%p213 bra 	$L__BB0_117;
// %bb.113:
	setp.lt.u32 	%p214, %r75, -2147483647;
	@%p214 bra 	$L__BB0_115;
// %bb.114:
	add.f32 	%f1080, %f1372, 0fBF800000;
	setp.lt.f32 	%p217, %f167, 0fC0000000;
	add.f32 	%f1081, %f1080, 0fBF800000;
	selp.f32 	%f1372, %f1081, %f1080, %p217;
	bra.uni 	$L__BB0_117;
$L__BB0_115:
	add.f32 	%f1372, %f1372, 0f3F800000;
	setp.ltu.f32 	%p215, %f167, 0f40800000;
	@%p215 bra 	$L__BB0_117;
// %bb.116:                             // %__nv_fmaf_rn.exit.i.i.i1762
	add.f32 	%f1076, %f1372, 0f3F800000;
	fma.rn.f32 	%f1078, %f257, 0fC0400000, %f167;
	setp.ge.f32 	%p216, %f1078, 0f00000000;
	add.f32 	%f1079, %f1076, 0f3F800000;
	selp.f32 	%f1372, %f1079, %f1076, %p216;
$L__BB0_117:                            // %__internal_fmodf_fastpath_quot.exit.i.i1765
	fma.rn.f32 	%f1374, %f1372, 0fC0000000, %f1374;
$L__BB0_122:                            // %__internal_fmodf_kernel.exit.i1784
	and.b32  	%r281, %r178, 32;
	and.b32  	%r282, %r1, 18;
	fma.rn.f32 	%f281, %f279, %f275, 0fC09DE9E6;
	fma.rn.f32 	%f282, %f278, %f280, 0f00000000;
	and.b32  	%r304, %r303, 1;
	fma.rn.f32 	%f315, %f313, %f309, 0fC09DE9E6;
	fma.rn.f32 	%f316, %f312, %f314, 0f00000000;
	and.b32  	%r311, %r310, 1;
	fma.rn.f32 	%f350, %f348, %f344, 0fC09DE9E6;
	fma.rn.f32 	%f351, %f347, %f349, 0f00000000;
	and.b32  	%r322, %r321, 1;
	fma.rn.f32 	%f384, %f382, %f378, 0fC09DE9E6;
	fma.rn.f32 	%f385, %f381, %f383, 0f00000000;
	and.b32  	%r329, %r328, 1;
	fma.rn.f32 	%f419, %f417, %f413, 0fC09DE9E6;
	fma.rn.f32 	%f420, %f416, %f418, 0f00000000;
	and.b32  	%r340, %r339, 1;
	fma.rn.f32 	%f453, %f451, %f447, 0fC09DE9E6;
	fma.rn.f32 	%f454, %f450, %f452, 0f00000000;
	and.b32  	%r347, %r346, 1;
	fma.rn.f32 	%f488, %f486, %f482, 0fC09DE9E6;
	fma.rn.f32 	%f489, %f485, %f487, 0f00000000;
	and.b32  	%r358, %r357, 1;
	fma.rn.f32 	%f522, %f520, %f516, 0fC09DE9E6;
	fma.rn.f32 	%f523, %f519, %f521, 0f00000000;
	and.b32  	%r365, %r364, 1;
	fma.rn.f32 	%f557, %f555, %f551, 0fC09DE9E6;
	fma.rn.f32 	%f558, %f554, %f556, 0f00000000;
	and.b32  	%r376, %r375, 1;
	fma.rn.f32 	%f591, %f589, %f585, 0fC09DE9E6;
	fma.rn.f32 	%f592, %f588, %f590, 0f00000000;
	and.b32  	%r383, %r382, 1;
	fma.rn.f32 	%f626, %f624, %f620, 0fC09DE9E6;
	fma.rn.f32 	%f627, %f623, %f625, 0f00000000;
	and.b32  	%r394, %r393, 1;
	fma.rn.f32 	%f660, %f658, %f654, 0fC09DE9E6;
	fma.rn.f32 	%f661, %f657, %f659, 0f00000000;
	and.b32  	%r401, %r400, 1;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	and.b32  	%r412, %r411, 1;
	fma.rn.f32 	%f729, %f727, %f723, 0fC09DE9E6;
	fma.rn.f32 	%f730, %f726, %f728, 0f00000000;
	and.b32  	%r419, %r418, 1;
	fma.rn.f32 	%f764, %f762, %f758, 0fC09DE9E6;
	fma.rn.f32 	%f765, %f761, %f763, 0f00000000;
	and.b32  	%r430, %r429, 1;
	fma.rn.f32 	%f798, %f796, %f792, 0fC09DE9E6;
	fma.rn.f32 	%f799, %f795, %f797, 0f00000000;
	and.b32  	%r437, %r436, 1;
	fma.rn.f32 	%f849, %f847, %f841, 0f3F800000;
	fma.rn.f32 	%f850, %f840, 0f40490FDB, %f848;
	setp.eq.b32 	%p126, %r454, 1;
	fma.rn.f32 	%f901, %f899, %f893, 0f3F800000;
	fma.rn.f32 	%f902, %f892, 0f40490FDB, %f900;
	setp.eq.b32 	%p146, %r483, 1;
	fma.rn.f32 	%f955, %f953, %f947, 0f3F800000;
	fma.rn.f32 	%f956, %f946, 0f40490FDB, %f954;
	setp.eq.b32 	%p166, %r506, 1;
	fma.rn.f32 	%f1007, %f1005, %f999, 0f3F800000;
	fma.rn.f32 	%f1008, %f998, 0f40490FDB, %f1006;
	setp.eq.b32 	%p186, %r538, 1;
	fma.rn.f32 	%f1058, %f1056, %f1052, 0fC09DE9E6;
	fma.rn.f32 	%f1059, %f1055, %f1057, 0f00000000;
	and.b32  	%r558, %r557, 1;
	abs.f32 	%f1093, %f1374;
	setp.gtu.f32 	%p223, %f1093, 0f7F800000;
	@%p223 bra 	$L__BB0_124;
// %bb.123:
	mov.b32 	%r568, %f164;
	and.b32  	%r569, %r568, -2147483648;
	mov.b32 	%r570, %f1374;
	or.b32  	%r571, %r569, %r570;
	mov.b32 	%f1374, %r571;
$L__BB0_124:                            // %__nv_fmodf.exit1785
	or.b32  	%r185, %r282, %r281;
	fma.rn.f32 	%f283, %f281, %f275, 0f3F800000;
	fma.rn.f32 	%f284, %f274, 0f40490FDB, %f282;
	setp.eq.b32 	%p18, %r304, 1;
	fma.rn.f32 	%f317, %f315, %f309, 0f3F800000;
	fma.rn.f32 	%f318, %f308, 0f40490FDB, %f316;
	setp.eq.b32 	%p24, %r311, 1;
	fma.rn.f32 	%f352, %f350, %f344, 0f3F800000;
	fma.rn.f32 	%f353, %f343, 0f40490FDB, %f351;
	setp.eq.b32 	%p30, %r322, 1;
	fma.rn.f32 	%f386, %f384, %f378, 0f3F800000;
	fma.rn.f32 	%f387, %f377, 0f40490FDB, %f385;
	setp.eq.b32 	%p36, %r329, 1;
	fma.rn.f32 	%f421, %f419, %f413, 0f3F800000;
	fma.rn.f32 	%f422, %f412, 0f40490FDB, %f420;
	setp.eq.b32 	%p42, %r340, 1;
	fma.rn.f32 	%f455, %f453, %f447, 0f3F800000;
	fma.rn.f32 	%f456, %f446, 0f40490FDB, %f454;
	setp.eq.b32 	%p48, %r347, 1;
	fma.rn.f32 	%f490, %f488, %f482, 0f3F800000;
	fma.rn.f32 	%f491, %f481, 0f40490FDB, %f489;
	setp.eq.b32 	%p54, %r358, 1;
	fma.rn.f32 	%f524, %f522, %f516, 0f3F800000;
	fma.rn.f32 	%f525, %f515, 0f40490FDB, %f523;
	setp.eq.b32 	%p60, %r365, 1;
	fma.rn.f32 	%f559, %f557, %f551, 0f3F800000;
	fma.rn.f32 	%f560, %f550, 0f40490FDB, %f558;
	setp.eq.b32 	%p66, %r376, 1;
	fma.rn.f32 	%f593, %f591, %f585, 0f3F800000;
	fma.rn.f32 	%f594, %f584, 0f40490FDB, %f592;
	setp.eq.b32 	%p72, %r383, 1;
	fma.rn.f32 	%f628, %f626, %f620, 0f3F800000;
	fma.rn.f32 	%f629, %f619, 0f40490FDB, %f627;
	setp.eq.b32 	%p78, %r394, 1;
	fma.rn.f32 	%f662, %f660, %f654, 0f3F800000;
	fma.rn.f32 	%f663, %f653, 0f40490FDB, %f661;
	setp.eq.b32 	%p84, %r401, 1;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	setp.eq.b32 	%p90, %r412, 1;
	fma.rn.f32 	%f731, %f729, %f723, 0f3F800000;
	fma.rn.f32 	%f732, %f722, 0f40490FDB, %f730;
	setp.eq.b32 	%p96, %r419, 1;
	fma.rn.f32 	%f766, %f764, %f758, 0f3F800000;
	fma.rn.f32 	%f767, %f757, 0f40490FDB, %f765;
	setp.eq.b32 	%p102, %r430, 1;
	fma.rn.f32 	%f800, %f798, %f792, 0f3F800000;
	fma.rn.f32 	%f801, %f791, 0f40490FDB, %f799;
	setp.eq.b32 	%p108, %r437, 1;
	selp.f32 	%f851, %f849, %f850, %p126;
	and.b32  	%r455, %r453, 2;
	selp.f32 	%f903, %f901, %f902, %p146;
	and.b32  	%r484, %r482, 2;
	selp.f32 	%f957, %f955, %f956, %p166;
	and.b32  	%r507, %r505, 2;
	selp.f32 	%f1009, %f1007, %f1008, %p186;
	and.b32  	%r539, %r537, 2;
	fma.rn.f32 	%f1060, %f1058, %f1052, 0f3F800000;
	fma.rn.f32 	%f1061, %f1051, 0f40490FDB, %f1059;
	setp.eq.b32 	%p206, %r558, 1;
	add.f32 	%f1094, %f1374, %f1374;
	mov.b32 	%r578, %f1094;
	and.b32  	%r579, %r578, -2147483648;
	or.b32  	%r580, %r579, 1056964608;
	mov.b32 	%f1095, %r580;
	add.f32 	%f1096, %f1094, %f1095;
	cvt.rzi.f32.f32 	%f1097, %f1096;
	abs.f32 	%f1098, %f1094;
	setp.gt.f32 	%p224, %f1098, 0f4B000000;
	selp.f32 	%f1099, %f1094, %f1097, %p224;
	cvt.rzi.f32.f32 	%f1100, %f1094;
	setp.lt.f32 	%p225, %f1098, 0f3F000000;
	selp.f32 	%f1101, %f1100, %f1099, %p225;
	cvt.rzi.s32.f32 	%r581, %f1101;
	fma.rn.f32 	%f1102, %f1101, 0fBF000000, %f1374;
	mul.f32 	%f1103, %f1102, %f1102;
	fma.rn.f32 	%f1104, %f1103, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1105, %f1103, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1106, %f1104, %f1103, 0fC0A55DF6;
	fma.rn.f32 	%f1107, %f1105, %f1103, 0f4081E0CF;
	fma.rn.f32 	%f1108, %f1103, %f1102, 0f00000000;
	fma.rn.f32 	%f1109, %f1107, %f1103, 0fC09DE9E6;
	fma.rn.f32 	%f1110, %f1106, %f1108, 0f00000000;
	fma.rn.f32 	%f1111, %f1109, %f1103, 0f3F800000;
	fma.rn.f32 	%f1112, %f1102, 0f40490FDB, %f1110;
	and.b32  	%r582, %r581, 1;
	setp.eq.b32 	%p226, %r582, 1;
	mov.f32 	%f1126, 0f41800000;
	div.approx.f32 	%f181, %f143, %f1126;
	abs.f32 	%f1378, %f181;
	setp.lt.f32 	%p231, %f1378, 0f40000000;
	@%p231 bra 	$L__BB0_136;
// %bb.125:
	setp.gtu.f32 	%p232, %f1378, 0f4B800000;
	@%p232 bra 	$L__BB0_132;
	bra.uni 	$L__BB0_126;
$L__BB0_132:
	mov.b32 	%r86, %f1378;
	and.b32  	%r586, %r86, 8388607;
	or.b32  	%r16372, %r586, 1065353216;
	mov.b32 	%f1377, %r16372;
	add.s32 	%r587, %r86, -1073741824;
	and.b32  	%r16373, %r587, -8388608;
	setp.eq.s32 	%p238, %r16373, 0;
	@%p238 bra 	$L__BB0_135;
// %bb.133:                             // %__nv_fmaf_rn.exit4.i.i.i1810.preheader
	mov.f32 	%f1136, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1135,%f1136;
	// end inline asm
$L__BB0_134:                            // %__nv_fmaf_rn.exit4.i.i.i1810
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r588, %r16373, 192937984;
	add.s32 	%r589, %r16372, %r588;
	mov.b32 	%f1137, %r589;
	mul.f32 	%f1138, %f1135, %f1137;
	sub.f32 	%f1139, %f1137, %f1138;
	fma.rn.f32 	%f1140, %f1139, %f1135, %f1138;
	sub.f32 	%f1141, %f1137, %f1140;
	fma.rz.f32 	%f1142, %f1141, %f1135, %f1140;
	cvt.rzi.f32.f32 	%f1143, %f1142;
	sub.f32 	%f1377, %f1137, %f1143;
	sub.s32 	%r16373, %r16373, %r588;
	mov.b32 	%r16372, %f1377;
	setp.ne.s32 	%p239, %r16373, 0;
	setp.ne.s32 	%p240, %r16372, 0;
	and.pred  	%p241, %p239, %p240;
	@%p241 bra 	$L__BB0_134;
$L__BB0_135:                            // %__internal_fmodf_slowpath_mod.exit.i.i1812
	setp.gt.u32 	%p242, %r86, 2139095039;
	selp.f32 	%f1144, 0f7FFFFFFF, 0f4B800000, %p242;
	mul.f32 	%f1145, %f1377, 0f34000000;
	mul.f32 	%f1378, %f1144, %f1145;
	bra.uni 	$L__BB0_136;
$L__BB0_126:                            // %__nv_fast_fdividef.exit.i.i.i1789
	div.approx.f32 	%f1128, %f1378, %f257;
	cvt.rzi.f32.f32 	%f1376, %f1128;
	fma.rn.f32 	%f184, %f1376, 0fC0000000, %f1378;
	mov.b32 	%r85, %f184;
	setp.lt.u32 	%p233, %r85, 1073741824;
	@%p233 bra 	$L__BB0_131;
// %bb.127:
	setp.lt.u32 	%p234, %r85, -2147483647;
	@%p234 bra 	$L__BB0_129;
// %bb.128:
	add.f32 	%f1133, %f1376, 0fBF800000;
	setp.lt.f32 	%p237, %f184, 0fC0000000;
	add.f32 	%f1134, %f1133, 0fBF800000;
	selp.f32 	%f1376, %f1134, %f1133, %p237;
	bra.uni 	$L__BB0_131;
$L__BB0_129:
	add.f32 	%f1376, %f1376, 0f3F800000;
	setp.ltu.f32 	%p235, %f184, 0f40800000;
	@%p235 bra 	$L__BB0_131;
// %bb.130:                             // %__nv_fmaf_rn.exit.i.i.i1793
	add.f32 	%f1129, %f1376, 0f3F800000;
	fma.rn.f32 	%f1131, %f257, 0fC0400000, %f184;
	setp.ge.f32 	%p236, %f1131, 0f00000000;
	add.f32 	%f1132, %f1129, 0f3F800000;
	selp.f32 	%f1376, %f1132, %f1129, %p236;
$L__BB0_131:                            // %__internal_fmodf_fastpath_quot.exit.i.i1796
	fma.rn.f32 	%f1378, %f1376, 0fC0000000, %f1378;
$L__BB0_136:                            // %__internal_fmodf_kernel.exit.i1815
	and.b32  	%r180, %r178, 4;
	or.b32  	%r187, %r185, 64;
	selp.f32 	%f285, %f283, %f284, %p18;
	and.b32  	%r305, %r303, 2;
	mov.f32 	%f286, 0f00000000;
	selp.f32 	%f319, %f317, %f318, %p24;
	and.b32  	%r312, %r310, 2;
	selp.f32 	%f354, %f352, %f353, %p30;
	and.b32  	%r323, %r321, 2;
	selp.f32 	%f388, %f386, %f387, %p36;
	and.b32  	%r330, %r328, 2;
	selp.f32 	%f423, %f421, %f422, %p42;
	and.b32  	%r341, %r339, 2;
	selp.f32 	%f457, %f455, %f456, %p48;
	and.b32  	%r348, %r346, 2;
	selp.f32 	%f492, %f490, %f491, %p54;
	and.b32  	%r359, %r357, 2;
	selp.f32 	%f526, %f524, %f525, %p60;
	and.b32  	%r366, %r364, 2;
	selp.f32 	%f561, %f559, %f560, %p66;
	and.b32  	%r377, %r375, 2;
	selp.f32 	%f595, %f593, %f594, %p72;
	and.b32  	%r384, %r382, 2;
	selp.f32 	%f630, %f628, %f629, %p78;
	and.b32  	%r395, %r393, 2;
	selp.f32 	%f664, %f662, %f663, %p84;
	and.b32  	%r402, %r400, 2;
	selp.f32 	%f699, %f697, %f698, %p90;
	and.b32  	%r413, %r411, 2;
	selp.f32 	%f733, %f731, %f732, %p96;
	and.b32  	%r420, %r418, 2;
	selp.f32 	%f768, %f766, %f767, %p102;
	and.b32  	%r431, %r429, 2;
	selp.f32 	%f802, %f800, %f801, %p108;
	and.b32  	%r438, %r436, 2;
	setp.eq.s32 	%p127, %r455, 0;
	neg.f32 	%f853, %f851;
	add.s32 	%r456, %r453, 1;
	cvt.rzi.f32.f32 	%f858, %f1354;
	setp.eq.s32 	%p147, %r484, 0;
	neg.f32 	%f905, %f903;
	add.s32 	%r485, %r482, 1;
	cvt.rzi.f32.f32 	%f910, %f1358;
	setp.eq.s32 	%p167, %r507, 0;
	neg.f32 	%f959, %f957;
	add.s32 	%r508, %r505, 1;
	cvt.rzi.f32.f32 	%f964, %f1362;
	setp.eq.s32 	%p187, %r539, 0;
	neg.f32 	%f1011, %f1009;
	add.s32 	%r540, %r537, 1;
	cvt.rzi.f32.f32 	%f1016, %f1366;
	selp.f32 	%f1062, %f1060, %f1061, %p206;
	and.b32  	%r559, %r557, 2;
	selp.f32 	%f1113, %f1111, %f1112, %p226;
	and.b32  	%r583, %r581, 2;
	abs.f32 	%f1146, %f1378;
	setp.gtu.f32 	%p243, %f1146, 0f7F800000;
	@%p243 bra 	$L__BB0_138;
// %bb.137:
	mov.b32 	%r590, %f181;
	and.b32  	%r591, %r590, -2147483648;
	mov.b32 	%r592, %f1378;
	or.b32  	%r593, %r591, %r592;
	mov.b32 	%f1378, %r593;
$L__BB0_138:                            // %__nv_fmodf.exit1816
	and.b32  	%r182, %r181, 8;
	shl.b32 	%r183, %r4, 5;
	or.b32  	%r283, %r185, %r180;
	or.b32  	%r287, %r187, %r180;
	setp.eq.s32 	%p19, %r305, 0;
	sub.f32 	%f287, %f286, %f285;
	setp.eq.s32 	%p25, %r312, 0;
	sub.f32 	%f321, %f286, %f319;
	setp.eq.s32 	%p31, %r323, 0;
	sub.f32 	%f356, %f286, %f354;
	setp.eq.s32 	%p37, %r330, 0;
	sub.f32 	%f390, %f286, %f388;
	setp.eq.s32 	%p43, %r341, 0;
	sub.f32 	%f425, %f286, %f423;
	setp.eq.s32 	%p49, %r348, 0;
	sub.f32 	%f459, %f286, %f457;
	setp.eq.s32 	%p55, %r359, 0;
	sub.f32 	%f494, %f286, %f492;
	setp.eq.s32 	%p61, %r366, 0;
	sub.f32 	%f528, %f286, %f526;
	setp.eq.s32 	%p67, %r377, 0;
	sub.f32 	%f563, %f286, %f561;
	setp.eq.s32 	%p73, %r384, 0;
	sub.f32 	%f597, %f286, %f595;
	setp.eq.s32 	%p79, %r395, 0;
	sub.f32 	%f632, %f286, %f630;
	setp.eq.s32 	%p85, %r402, 0;
	sub.f32 	%f666, %f286, %f664;
	setp.eq.s32 	%p91, %r413, 0;
	sub.f32 	%f701, %f286, %f699;
	setp.eq.s32 	%p97, %r420, 0;
	sub.f32 	%f735, %f286, %f733;
	setp.eq.s32 	%p103, %r431, 0;
	sub.f32 	%f770, %f286, %f768;
	setp.eq.s32 	%p109, %r438, 0;
	sub.f32 	%f804, %f286, %f802;
	selp.f32 	%f852, %f850, %f849, %p126;
	selp.f32 	%f854, %f851, %f853, %p127;
	and.b32  	%r457, %r456, 2;
	setp.eq.f32 	%p129, %f858, %f1354;
	mul.f32 	%f859, %f1354, 0f00000000;
	selp.f32 	%f904, %f902, %f901, %p146;
	selp.f32 	%f906, %f903, %f905, %p147;
	and.b32  	%r486, %r485, 2;
	setp.eq.f32 	%p149, %f910, %f1358;
	mul.f32 	%f911, %f1358, 0f00000000;
	selp.f32 	%f958, %f956, %f955, %p166;
	selp.f32 	%f960, %f957, %f959, %p167;
	and.b32  	%r509, %r508, 2;
	setp.eq.f32 	%p169, %f964, %f1362;
	mul.f32 	%f965, %f1362, 0f00000000;
	selp.f32 	%f1010, %f1008, %f1007, %p186;
	selp.f32 	%f1012, %f1009, %f1011, %p187;
	and.b32  	%r541, %r540, 2;
	setp.eq.f32 	%p189, %f1016, %f1366;
	mul.f32 	%f1017, %f1366, 0f00000000;
	setp.eq.s32 	%p207, %r559, 0;
	neg.f32 	%f1064, %f1062;
	add.s32 	%r560, %r557, 1;
	cvt.rzi.f32.f32 	%f1069, %f1370;
	setp.eq.s32 	%p227, %r583, 0;
	neg.f32 	%f1115, %f1113;
	add.s32 	%r584, %r581, 1;
	cvt.rzi.f32.f32 	%f1120, %f1374;
	add.f32 	%f1147, %f1378, %f1378;
	mov.b32 	%r594, %f1147;
	and.b32  	%r595, %r594, -2147483648;
	or.b32  	%r596, %r595, 1056964608;
	mov.b32 	%f1148, %r596;
	add.f32 	%f1149, %f1147, %f1148;
	cvt.rzi.f32.f32 	%f1150, %f1149;
	abs.f32 	%f1151, %f1147;
	setp.gt.f32 	%p244, %f1151, 0f4B000000;
	selp.f32 	%f1152, %f1147, %f1150, %p244;
	cvt.rzi.f32.f32 	%f1153, %f1147;
	setp.lt.f32 	%p245, %f1151, 0f3F000000;
	selp.f32 	%f1154, %f1153, %f1152, %p245;
	cvt.rzi.s32.f32 	%r597, %f1154;
	fma.rn.f32 	%f1155, %f1154, 0fBF000000, %f1378;
	mul.f32 	%f1156, %f1155, %f1155;
	fma.rn.f32 	%f1157, %f1156, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1158, %f1156, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1159, %f1157, %f1156, 0fC0A55DF6;
	fma.rn.f32 	%f1160, %f1158, %f1156, 0f4081E0CF;
	fma.rn.f32 	%f1161, %f1156, %f1155, 0f00000000;
	fma.rn.f32 	%f1162, %f1160, %f1156, 0fC09DE9E6;
	fma.rn.f32 	%f1163, %f1159, %f1161, 0f00000000;
	fma.rn.f32 	%f1164, %f1162, %f1156, 0f3F800000;
	fma.rn.f32 	%f1165, %f1155, 0f40490FDB, %f1163;
	and.b32  	%r598, %r597, 1;
	setp.eq.b32 	%p246, %r598, 1;
	selp.f32 	%f1166, %f1164, %f1165, %p246;
	selp.f32 	%f1167, %f1165, %f1164, %p246;
	and.b32  	%r599, %r597, 2;
	setp.eq.s32 	%p247, %r599, 0;
	neg.f32 	%f1168, %f1166;
	selp.f32 	%f1169, %f1166, %f1168, %p247;
	add.s32 	%r600, %r597, 1;
	and.b32  	%r601, %r600, 2;
	cvt.rzi.f32.f32 	%f1173, %f1378;
	setp.eq.f32 	%p249, %f1173, %f1378;
	mul.f32 	%f1174, %f1378, 0f00000000;
	div.approx.f32 	%f200, %f163, %f1126;
	abs.f32 	%f1382, %f200;
	setp.lt.f32 	%p251, %f1382, 0f40000000;
	@%p251 bra 	$L__BB0_150;
// %bb.139:
	setp.gtu.f32 	%p252, %f1382, 0f4B800000;
	@%p252 bra 	$L__BB0_146;
	bra.uni 	$L__BB0_140;
$L__BB0_146:
	mov.b32 	%r94, %f1382;
	and.b32  	%r602, %r94, 8388607;
	or.b32  	%r16374, %r602, 1065353216;
	mov.b32 	%f1381, %r16374;
	add.s32 	%r603, %r94, -1073741824;
	and.b32  	%r16375, %r603, -8388608;
	setp.eq.s32 	%p258, %r16375, 0;
	@%p258 bra 	$L__BB0_149;
// %bb.147:                             // %__nv_fmaf_rn.exit4.i.i.i1841.preheader
	mov.f32 	%f1187, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1186,%f1187;
	// end inline asm
$L__BB0_148:                            // %__nv_fmaf_rn.exit4.i.i.i1841
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r604, %r16375, 192937984;
	add.s32 	%r605, %r16374, %r604;
	mov.b32 	%f1188, %r605;
	mul.f32 	%f1189, %f1186, %f1188;
	sub.f32 	%f1190, %f1188, %f1189;
	fma.rn.f32 	%f1191, %f1190, %f1186, %f1189;
	sub.f32 	%f1192, %f1188, %f1191;
	fma.rz.f32 	%f1193, %f1192, %f1186, %f1191;
	cvt.rzi.f32.f32 	%f1194, %f1193;
	sub.f32 	%f1381, %f1188, %f1194;
	sub.s32 	%r16375, %r16375, %r604;
	mov.b32 	%r16374, %f1381;
	setp.ne.s32 	%p259, %r16375, 0;
	setp.ne.s32 	%p260, %r16374, 0;
	and.pred  	%p261, %p259, %p260;
	@%p261 bra 	$L__BB0_148;
$L__BB0_149:                            // %__internal_fmodf_slowpath_mod.exit.i.i1843
	setp.gt.u32 	%p262, %r94, 2139095039;
	selp.f32 	%f1195, 0f7FFFFFFF, 0f4B800000, %p262;
	mul.f32 	%f1196, %f1381, 0f34000000;
	mul.f32 	%f1382, %f1195, %f1196;
	bra.uni 	$L__BB0_150;
$L__BB0_140:                            // %__nv_fast_fdividef.exit.i.i.i1820
	div.approx.f32 	%f1179, %f1382, %f257;
	cvt.rzi.f32.f32 	%f1380, %f1179;
	fma.rn.f32 	%f203, %f1380, 0fC0000000, %f1382;
	mov.b32 	%r93, %f203;
	setp.lt.u32 	%p253, %r93, 1073741824;
	@%p253 bra 	$L__BB0_145;
// %bb.141:
	setp.lt.u32 	%p254, %r93, -2147483647;
	@%p254 bra 	$L__BB0_143;
// %bb.142:
	add.f32 	%f1184, %f1380, 0fBF800000;
	setp.lt.f32 	%p257, %f203, 0fC0000000;
	add.f32 	%f1185, %f1184, 0fBF800000;
	selp.f32 	%f1380, %f1185, %f1184, %p257;
	bra.uni 	$L__BB0_145;
$L__BB0_143:
	add.f32 	%f1380, %f1380, 0f3F800000;
	setp.ltu.f32 	%p255, %f203, 0f40800000;
	@%p255 bra 	$L__BB0_145;
// %bb.144:                             // %__nv_fmaf_rn.exit.i.i.i1824
	add.f32 	%f1180, %f1380, 0f3F800000;
	fma.rn.f32 	%f1182, %f257, 0fC0400000, %f203;
	setp.ge.f32 	%p256, %f1182, 0f00000000;
	add.f32 	%f1183, %f1180, 0f3F800000;
	selp.f32 	%f1380, %f1183, %f1180, %p256;
$L__BB0_145:                            // %__internal_fmodf_fastpath_quot.exit.i.i1827
	fma.rn.f32 	%f1382, %f1380, 0fC0000000, %f1382;
$L__BB0_150:                            // %__internal_fmodf_kernel.exit.i1846
	and.b32  	%r184, %r183, 8064;
	or.b32  	%r284, %r283, %r182;
	or.b32  	%r288, %r287, %r182;
	selp.f32 	%f288, %f285, %f287, %p19;
	selp.f32 	%f322, %f319, %f321, %p25;
	selp.f32 	%f357, %f354, %f356, %p31;
	selp.f32 	%f391, %f388, %f390, %p37;
	selp.f32 	%f426, %f423, %f425, %p43;
	selp.f32 	%f460, %f457, %f459, %p49;
	selp.f32 	%f495, %f492, %f494, %p55;
	selp.f32 	%f529, %f526, %f528, %p61;
	selp.f32 	%f564, %f561, %f563, %p67;
	selp.f32 	%f598, %f595, %f597, %p73;
	selp.f32 	%f633, %f630, %f632, %p79;
	selp.f32 	%f667, %f664, %f666, %p85;
	selp.f32 	%f702, %f699, %f701, %p91;
	selp.f32 	%f736, %f733, %f735, %p97;
	selp.f32 	%f771, %f768, %f770, %p103;
	selp.f32 	%f805, %f802, %f804, %p109;
	setp.eq.s32 	%p128, %r457, 0;
	sub.f32 	%f856, %f286, %f852;
	selp.f32 	%f88, %f859, %f854, %p129;
	abs.f32 	%f860, %f1354;
	setp.eq.s32 	%p148, %r486, 0;
	sub.f32 	%f908, %f286, %f904;
	selp.f32 	%f912, %f911, %f906, %p149;
	abs.f32 	%f913, %f1358;
	setp.eq.s32 	%p168, %r509, 0;
	sub.f32 	%f962, %f286, %f958;
	selp.f32 	%f124, %f965, %f960, %p169;
	abs.f32 	%f966, %f1362;
	setp.eq.s32 	%p188, %r541, 0;
	sub.f32 	%f1014, %f286, %f1010;
	selp.f32 	%f1018, %f1017, %f1012, %p189;
	abs.f32 	%f1019, %f1366;
	selp.f32 	%f1063, %f1061, %f1060, %p206;
	selp.f32 	%f1065, %f1062, %f1064, %p207;
	and.b32  	%r561, %r560, 2;
	setp.eq.f32 	%p209, %f1069, %f1370;
	mul.f32 	%f1070, %f1370, 0f00000000;
	selp.f32 	%f1114, %f1112, %f1111, %p226;
	selp.f32 	%f1116, %f1113, %f1115, %p227;
	and.b32  	%r585, %r584, 2;
	setp.eq.f32 	%p229, %f1120, %f1374;
	mul.f32 	%f1121, %f1374, 0f00000000;
	setp.eq.s32 	%p248, %r601, 0;
	sub.f32 	%f1171, %f286, %f1167;
	selp.f32 	%f198, %f1174, %f1169, %p249;
	abs.f32 	%f1175, %f1378;
	and.b32  	%r179, %r1, 16;
	abs.f32 	%f1197, %f1382;
	setp.gtu.f32 	%p263, %f1197, 0f7F800000;
	@%p263 bra 	$L__BB0_152;
// %bb.151:
	mov.b32 	%r606, %f200;
	and.b32  	%r607, %r606, -2147483648;
	mov.b32 	%r608, %f1382;
	or.b32  	%r609, %r607, %r608;
	mov.b32 	%f1382, %r609;
$L__BB0_152:                            // %__nv_fmodf.exit1847
	or.b32  	%r285, %r284, %r184;
	or.b32  	%r289, %r288, %r184;
	mul.f32 	%f254, %f288, %f288;
	mul.f32 	%f4, %f322, %f322;
	mul.f32 	%f8, %f357, %f357;
	mul.f32 	%f13, %f391, %f391;
	mul.f32 	%f17, %f426, %f426;
	mul.f32 	%f22, %f460, %f460;
	mul.f32 	%f26, %f495, %f495;
	mul.f32 	%f31, %f529, %f529;
	mul.f32 	%f35, %f564, %f564;
	mul.f32 	%f40, %f598, %f598;
	mul.f32 	%f44, %f633, %f633;
	mul.f32 	%f49, %f667, %f667;
	mul.f32 	%f53, %f702, %f702;
	mul.f32 	%f58, %f736, %f736;
	mul.f32 	%f62, %f771, %f771;
	mul.f32 	%f67, %f805, %f805;
	selp.f32 	%f857, %f852, %f856, %p128;
	setp.gt.f32 	%p130, %f860, 0f4B800000;
	add.f32 	%f861, %f88, 0f3F800000;
	selp.f32 	%f909, %f904, %f908, %p148;
	setp.gt.f32 	%p150, %f913, 0f4B800000;
	add.f32 	%f914, %f912, 0f3F800000;
	selp.f32 	%f963, %f958, %f962, %p168;
	setp.gt.f32 	%p170, %f966, 0f4B800000;
	add.f32 	%f967, %f124, 0f3F800000;
	selp.f32 	%f1015, %f1010, %f1014, %p188;
	setp.gt.f32 	%p190, %f1019, 0f4B800000;
	add.f32 	%f1020, %f1018, 0f3F800000;
	setp.eq.s32 	%p208, %r561, 0;
	sub.f32 	%f1067, %f286, %f1063;
	selp.f32 	%f161, %f1070, %f1065, %p209;
	abs.f32 	%f1071, %f1370;
	setp.eq.s32 	%p228, %r585, 0;
	sub.f32 	%f1118, %f286, %f1114;
	selp.f32 	%f1122, %f1121, %f1116, %p229;
	abs.f32 	%f1123, %f1374;
	selp.f32 	%f1172, %f1167, %f1171, %p248;
	setp.gt.f32 	%p250, %f1175, 0f4B800000;
	add.f32 	%f1176, %f198, 0f3F800000;
	add.f32 	%f1198, %f1382, %f1382;
	mov.b32 	%r622, %f1198;
	and.b32  	%r623, %r622, -2147483648;
	or.b32  	%r624, %r623, 1056964608;
	mov.b32 	%f1199, %r624;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p264, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p264;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p265, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p265;
	cvt.rzi.s32.f32 	%r625, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1382;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r626, %r625, 1;
	setp.eq.b32 	%p266, %r626, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p266;
	selp.f32 	%f1218, %f1216, %f1215, %p266;
	and.b32  	%r627, %r625, 2;
	setp.eq.s32 	%p267, %r627, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p267;
	add.s32 	%r628, %r625, 1;
	and.b32  	%r629, %r628, 2;
	setp.eq.s32 	%p268, %r629, 0;
	sub.f32 	%f1222, %f286, %f1218;
	selp.f32 	%f1223, %f1218, %f1222, %p268;
	cvt.rzi.f32.f32 	%f1224, %f1382;
	setp.eq.f32 	%p269, %f1224, %f1382;
	mul.f32 	%f1225, %f1382, 0f00000000;
	selp.f32 	%f1226, %f1225, %f1220, %p269;
	abs.f32 	%f1227, %f1382;
	setp.gt.f32 	%p270, %f1227, 0f4B800000;
	add.f32 	%f1228, %f1226, 0f3F800000;
	mul.lo.s32 	%r630, %r193, 2147483640;
	cvt.u16.u32 	%rs1, %r1;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r631, %r630, %r179;
	mad.lo.s32 	%r632, %r196, 2147483616, %r631;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r633, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r634, %rs21;
	sub.s32 	%r635, %r632, %r634;
	shl.b32 	%r636, %r635, 1;
	cvt.rn.f32.s32 	%f1230, %r636;
	div.approx.f32 	%f217, %f1230, %f289;
	abs.f32 	%f1386, %f217;
	setp.lt.f32 	%p271, %f1386, 0f40000000;
	@%p271 bra 	$L__BB0_164;
// %bb.153:
	setp.gtu.f32 	%p272, %f1386, 0f4B800000;
	@%p272 bra 	$L__BB0_160;
	bra.uni 	$L__BB0_154;
$L__BB0_160:
	mov.b32 	%r107, %f1386;
	and.b32  	%r637, %r107, 8388607;
	or.b32  	%r16376, %r637, 1065353216;
	mov.b32 	%f1385, %r16376;
	add.s32 	%r638, %r107, -1073741824;
	and.b32  	%r16377, %r638, -8388608;
	setp.eq.s32 	%p278, %r16377, 0;
	@%p278 bra 	$L__BB0_163;
// %bb.161:                             // %__nv_fmaf_rn.exit4.i.i.i1872.preheader
	mov.f32 	%f1241, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1240,%f1241;
	// end inline asm
$L__BB0_162:                            // %__nv_fmaf_rn.exit4.i.i.i1872
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r639, %r16377, 192937984;
	add.s32 	%r640, %r16376, %r639;
	mov.b32 	%f1242, %r640;
	mul.f32 	%f1243, %f1240, %f1242;
	sub.f32 	%f1244, %f1242, %f1243;
	fma.rn.f32 	%f1245, %f1244, %f1240, %f1243;
	sub.f32 	%f1246, %f1242, %f1245;
	fma.rz.f32 	%f1247, %f1246, %f1240, %f1245;
	cvt.rzi.f32.f32 	%f1248, %f1247;
	sub.f32 	%f1385, %f1242, %f1248;
	sub.s32 	%r16377, %r16377, %r639;
	mov.b32 	%r16376, %f1385;
	setp.ne.s32 	%p279, %r16377, 0;
	setp.ne.s32 	%p280, %r16376, 0;
	and.pred  	%p281, %p279, %p280;
	@%p281 bra 	$L__BB0_162;
$L__BB0_163:                            // %__internal_fmodf_slowpath_mod.exit.i.i1874
	setp.gt.u32 	%p282, %r107, 2139095039;
	selp.f32 	%f1249, 0f7FFFFFFF, 0f4B800000, %p282;
	mul.f32 	%f1250, %f1385, 0f34000000;
	mul.f32 	%f1386, %f1249, %f1250;
	bra.uni 	$L__BB0_164;
$L__BB0_154:                            // %__nv_fast_fdividef.exit.i.i.i1851
	div.approx.f32 	%f1233, %f1386, %f257;
	cvt.rzi.f32.f32 	%f1384, %f1233;
	fma.rn.f32 	%f220, %f1384, 0fC0000000, %f1386;
	mov.b32 	%r106, %f220;
	setp.lt.u32 	%p273, %r106, 1073741824;
	@%p273 bra 	$L__BB0_159;
// %bb.155:
	setp.lt.u32 	%p274, %r106, -2147483647;
	@%p274 bra 	$L__BB0_157;
// %bb.156:
	add.f32 	%f1238, %f1384, 0fBF800000;
	setp.lt.f32 	%p277, %f220, 0fC0000000;
	add.f32 	%f1239, %f1238, 0fBF800000;
	selp.f32 	%f1384, %f1239, %f1238, %p277;
	bra.uni 	$L__BB0_159;
$L__BB0_157:
	add.f32 	%f1384, %f1384, 0f3F800000;
	setp.ltu.f32 	%p275, %f220, 0f40800000;
	@%p275 bra 	$L__BB0_159;
// %bb.158:                             // %__nv_fmaf_rn.exit.i.i.i1855
	add.f32 	%f1234, %f1384, 0f3F800000;
	fma.rn.f32 	%f1236, %f257, 0fC0400000, %f220;
	setp.ge.f32 	%p276, %f1236, 0f00000000;
	add.f32 	%f1237, %f1234, 0f3F800000;
	selp.f32 	%f1384, %f1237, %f1234, %p276;
$L__BB0_159:                            // %__internal_fmodf_fastpath_quot.exit.i.i1858
	fma.rn.f32 	%f1386, %f1384, 0fC0000000, %f1386;
$L__BB0_164:                            // %__internal_fmodf_kernel.exit.i1877
	shr.u32 	%r286, %r285, 1;
	bfe.u32 	%r290, %r289, 1, 12;
	mul.f32 	%f292, %f254, 0f3B8B2FF9;
	mul.f32 	%f326, %f4, 0f3B8B2FF9;
	mul.f32 	%f361, %f8, 0f3B8B2FF9;
	mul.f32 	%f395, %f13, 0f3B8B2FF9;
	mul.f32 	%f430, %f17, 0f3B8B2FF9;
	mul.f32 	%f464, %f22, 0f3B8B2FF9;
	mul.f32 	%f499, %f26, 0f3B8B2FF9;
	mul.f32 	%f533, %f31, 0f3B8B2FF9;
	mul.f32 	%f568, %f35, 0f3B8B2FF9;
	mul.f32 	%f602, %f40, 0f3B8B2FF9;
	mul.f32 	%f637, %f44, 0f3B8B2FF9;
	mul.f32 	%f671, %f49, 0f3B8B2FF9;
	mul.f32 	%f706, %f53, 0f3B8B2FF9;
	mul.f32 	%f740, %f58, 0f3B8B2FF9;
	mul.f32 	%f775, %f62, 0f3B8B2FF9;
	mul.f32 	%f808, %f67, 0f3B8B2FF9;
	selp.f32 	%f89, %f861, %f857, %p130;
	selp.f32 	%f915, %f914, %f909, %p150;
	selp.f32 	%f125, %f967, %f963, %p170;
	selp.f32 	%f1021, %f1020, %f1015, %p190;
	selp.f32 	%f1068, %f1063, %f1067, %p208;
	setp.gt.f32 	%p210, %f1071, 0f4B800000;
	add.f32 	%f1072, %f161, 0f3F800000;
	selp.f32 	%f1119, %f1114, %f1118, %p228;
	setp.gt.f32 	%p230, %f1123, 0f4B800000;
	add.f32 	%f1124, %f1122, 0f3F800000;
	selp.f32 	%f199, %f1176, %f1172, %p250;
	selp.f32 	%f1229, %f1228, %f1223, %p270;
	sub.s32 	%r105, %r632, %r633;
	abs.f32 	%f1251, %f1386;
	setp.gtu.f32 	%p283, %f1251, 0f7F800000;
	@%p283 bra 	$L__BB0_166;
// %bb.165:
	mov.b32 	%r641, %f217;
	and.b32  	%r642, %r641, -2147483648;
	mov.b32 	%r643, %f1386;
	or.b32  	%r644, %r642, %r643;
	mov.b32 	%f1386, %r644;
$L__BB0_166:                            // %__nv_fmodf.exit1878
	ld.param.u64 	%rd1, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_5];
	mul.wide.u32 	%rd47, %r286, 4;
	mul.wide.u32 	%rd49, %r290, 4;
	mul.f32 	%f3, %f292, %f1336;
	mul.f32 	%f327, %f326, %f1337;
	mul.f32 	%f12, %f361, %f1338;
	mul.f32 	%f396, %f395, %f1339;
	mul.f32 	%f21, %f430, %f1340;
	mul.f32 	%f465, %f464, %f1341;
	mul.f32 	%f30, %f499, %f1342;
	mul.f32 	%f534, %f533, %f1343;
	mul.f32 	%f39, %f568, %f1344;
	mul.f32 	%f603, %f602, %f1345;
	mul.f32 	%f48, %f637, %f1346;
	mul.f32 	%f672, %f671, %f1347;
	mul.f32 	%f57, %f706, %f1348;
	mul.f32 	%f741, %f740, %f1349;
	mul.f32 	%f66, %f775, %f1350;
	mul.f32 	%f809, %f808, %f1351;
	mov.b32 	%r469, %f915;
	mov.b32 	%r468, %f89;
	mov.b32 	%r475, %f912;
	mov.b32 	%r474, %f88;
	mov.b32 	%r524, %f1021;
	mov.b32 	%r523, %f125;
	mov.b32 	%r530, %f1018;
	mov.b32 	%r529, %f124;
	selp.f32 	%f162, %f1072, %f1068, %p210;
	selp.f32 	%f1125, %f1124, %f1119, %p230;
	mov.b32 	%r612, %f1229;
	mov.b32 	%r611, %f199;
	mov.b32 	%r618, %f1226;
	mov.b32 	%r617, %f198;
	add.f32 	%f1252, %f1386, %f1386;
	mov.b32 	%r645, %f1252;
	and.b32  	%r646, %r645, -2147483648;
	or.b32  	%r647, %r646, 1056964608;
	mov.b32 	%f1253, %r647;
	add.f32 	%f1254, %f1252, %f1253;
	cvt.rzi.f32.f32 	%f1255, %f1254;
	abs.f32 	%f1256, %f1252;
	setp.gt.f32 	%p284, %f1256, 0f4B000000;
	selp.f32 	%f1257, %f1252, %f1255, %p284;
	cvt.rzi.f32.f32 	%f1258, %f1252;
	setp.lt.f32 	%p285, %f1256, 0f3F000000;
	selp.f32 	%f1259, %f1258, %f1257, %p285;
	cvt.rzi.s32.f32 	%r648, %f1259;
	fma.rn.f32 	%f1260, %f1259, 0fBF000000, %f1386;
	mul.f32 	%f1261, %f1260, %f1260;
	fma.rn.f32 	%f1262, %f1261, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1263, %f1261, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1264, %f1262, %f1261, 0fC0A55DF6;
	fma.rn.f32 	%f1265, %f1263, %f1261, 0f4081E0CF;
	fma.rn.f32 	%f1266, %f1261, %f1260, 0f00000000;
	fma.rn.f32 	%f1267, %f1265, %f1261, 0fC09DE9E6;
	fma.rn.f32 	%f1268, %f1264, %f1266, 0f00000000;
	fma.rn.f32 	%f1269, %f1267, %f1261, 0f3F800000;
	fma.rn.f32 	%f1270, %f1260, 0f40490FDB, %f1268;
	and.b32  	%r649, %r648, 1;
	setp.eq.b32 	%p286, %r649, 1;
	selp.f32 	%f1271, %f1269, %f1270, %p286;
	selp.f32 	%f1272, %f1270, %f1269, %p286;
	and.b32  	%r650, %r648, 2;
	setp.eq.s32 	%p287, %r650, 0;
	neg.f32 	%f1273, %f1271;
	selp.f32 	%f1274, %f1271, %f1273, %p287;
	add.s32 	%r651, %r648, 1;
	and.b32  	%r652, %r651, 2;
	setp.eq.s32 	%p288, %r652, 0;
	sub.f32 	%f1276, %f286, %f1272;
	selp.f32 	%f1277, %f1272, %f1276, %p288;
	cvt.rzi.f32.f32 	%f1278, %f1386;
	setp.eq.f32 	%p289, %f1278, %f1386;
	mul.f32 	%f1279, %f1386, 0f00000000;
	selp.f32 	%f234, %f1279, %f1274, %p289;
	abs.f32 	%f1280, %f1386;
	setp.gt.f32 	%p290, %f1280, 0f4B800000;
	add.f32 	%f1281, %f234, 0f3F800000;
	shl.b32 	%r653, %r105, 1;
	cvt.rn.f32.s32 	%f1282, %r653;
	div.approx.f32 	%f236, %f1282, %f289;
	abs.f32 	%f1390, %f236;
	setp.lt.f32 	%p291, %f1390, 0f40000000;
	@%p291 bra 	$L__BB0_178;
// %bb.167:
	setp.gtu.f32 	%p292, %f1390, 0f4B800000;
	@%p292 bra 	$L__BB0_174;
	bra.uni 	$L__BB0_168;
$L__BB0_174:
	mov.b32 	%r115, %f1390;
	and.b32  	%r654, %r115, 8388607;
	or.b32  	%r16378, %r654, 1065353216;
	mov.b32 	%f1389, %r16378;
	add.s32 	%r655, %r115, -1073741824;
	and.b32  	%r16379, %r655, -8388608;
	setp.eq.s32 	%p298, %r16379, 0;
	@%p298 bra 	$L__BB0_177;
// %bb.175:                             // %__nv_fmaf_rn.exit4.i.i.i1903.preheader
	mov.f32 	%f1293, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1292,%f1293;
	// end inline asm
$L__BB0_176:                            // %__nv_fmaf_rn.exit4.i.i.i1903
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r656, %r16379, 192937984;
	add.s32 	%r657, %r16378, %r656;
	mov.b32 	%f1294, %r657;
	mul.f32 	%f1295, %f1292, %f1294;
	sub.f32 	%f1296, %f1294, %f1295;
	fma.rn.f32 	%f1297, %f1296, %f1292, %f1295;
	sub.f32 	%f1298, %f1294, %f1297;
	fma.rz.f32 	%f1299, %f1298, %f1292, %f1297;
	cvt.rzi.f32.f32 	%f1300, %f1299;
	sub.f32 	%f1389, %f1294, %f1300;
	sub.s32 	%r16379, %r16379, %r656;
	mov.b32 	%r16378, %f1389;
	setp.ne.s32 	%p299, %r16379, 0;
	setp.ne.s32 	%p300, %r16378, 0;
	and.pred  	%p301, %p299, %p300;
	@%p301 bra 	$L__BB0_176;
$L__BB0_177:                            // %__internal_fmodf_slowpath_mod.exit.i.i1905
	setp.gt.u32 	%p302, %r115, 2139095039;
	selp.f32 	%f1301, 0f7FFFFFFF, 0f4B800000, %p302;
	mul.f32 	%f1302, %f1389, 0f34000000;
	mul.f32 	%f1390, %f1301, %f1302;
	bra.uni 	$L__BB0_178;
$L__BB0_168:                            // %__nv_fast_fdividef.exit.i.i.i1882
	div.approx.f32 	%f1285, %f1390, %f257;
	cvt.rzi.f32.f32 	%f1388, %f1285;
	fma.rn.f32 	%f239, %f1388, 0fC0000000, %f1390;
	mov.b32 	%r114, %f239;
	setp.lt.u32 	%p293, %r114, 1073741824;
	@%p293 bra 	$L__BB0_173;
// %bb.169:
	setp.lt.u32 	%p294, %r114, -2147483647;
	@%p294 bra 	$L__BB0_171;
// %bb.170:
	add.f32 	%f1290, %f1388, 0fBF800000;
	setp.lt.f32 	%p297, %f239, 0fC0000000;
	add.f32 	%f1291, %f1290, 0fBF800000;
	selp.f32 	%f1388, %f1291, %f1290, %p297;
	bra.uni 	$L__BB0_173;
$L__BB0_171:
	add.f32 	%f1388, %f1388, 0f3F800000;
	setp.ltu.f32 	%p295, %f239, 0f40800000;
	@%p295 bra 	$L__BB0_173;
// %bb.172:                             // %__nv_fmaf_rn.exit.i.i.i1886
	add.f32 	%f1286, %f1388, 0f3F800000;
	fma.rn.f32 	%f1288, %f257, 0fC0400000, %f239;
	setp.ge.f32 	%p296, %f1288, 0f00000000;
	add.f32 	%f1289, %f1286, 0f3F800000;
	selp.f32 	%f1388, %f1289, %f1286, %p296;
$L__BB0_173:                            // %__internal_fmodf_fastpath_quot.exit.i.i1889
	fma.rn.f32 	%f1390, %f1388, 0fC0000000, %f1390;
$L__BB0_178:                            // %__internal_fmodf_kernel.exit.i1908
	add.s64 	%rd48, %rd1, %rd47;
	add.s64 	%rd50, %rd1, %rd49;
	shr.u32 	%r192, %r1, 2;
	mov.b32 	%r315, %f327;
	mov.b32 	%r314, %f3;
	mov.b32 	%r333, %f396;
	mov.b32 	%r332, %f12;
	mov.b32 	%r351, %f465;
	mov.b32 	%r350, %f21;
	mov.b32 	%r369, %f534;
	mov.b32 	%r368, %f30;
	mov.b32 	%r387, %f603;
	mov.b32 	%r386, %f39;
	mov.b32 	%r405, %f672;
	mov.b32 	%r404, %f48;
	mov.b32 	%r423, %f741;
	mov.b32 	%r422, %f57;
	mov.b32 	%r441, %f809;
	mov.b32 	%r440, %f66;
	xor.b32  	%r527, %r530, -2147483648;
	xor.b32  	%r526, %r529, -2147483648;
	mov.b32 	%r574, %f1125;
	mov.b32 	%r573, %f162;
	mov.b32 	%r577, %f1122;
	mov.b32 	%r576, %f161;
	xor.b32  	%r615, %r618, -2147483648;
	xor.b32  	%r614, %r617, -2147483648;
	selp.f32 	%f235, %f1281, %f1277, %p290;
	abs.f32 	%f1303, %f1390;
	setp.gtu.f32 	%p303, %f1303, 0f7F800000;
	@%p303 bra 	$L__BB0_180;
// %bb.179:
	mov.b32 	%r658, %f236;
	and.b32  	%r659, %r658, -2147483648;
	mov.b32 	%r660, %f1390;
	or.b32  	%r661, %r659, %r660;
	mov.b32 	%f1390, %r661;
$L__BB0_180:                            // %__nv_fmodf.exit1909
	ld.param.u64 	%rd2, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_6];
	ld.param.u64 	%rd3, [_Z6upchan13CuDeviceArrayI5Int32Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_IS0_Li1ELi1EES_I9Float16x2Li1ELi1EES_I6Int4x8Li1ELi1EES_IS2_Li1ELi1EES_IS0_Li1ELi1EE_param_7];
	ld.global.u32 	%r186, [%rd48];
	ld.global.u32 	%r188, [%rd50];
	// begin inline asm
	cvt.rn.f16x2.f32 %r313, %r315, %r314;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r331, %r333, %r332;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r349, %r351, %r350;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r367, %r369, %r368;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r385, %r387, %r386;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r403, %r405, %r404;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r421, %r423, %r422;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r439, %r441, %r440;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r467, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r470, %r469, %r468;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r473, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r476, %r475, %r474;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r522, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r525, %r527, %r526;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r528, %r530, %r529;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r531, %r524, %r523;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r572, %r574, %r573;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r575, %r577, %r576;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r610, %r612, %r611;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r613, %r615, %r614;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r616, %r618, %r617;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r619, %r612, %r611;
	// end inline asm
	add.f32 	%f1304, %f1390, %f1390;
	mov.b32 	%r669, %f1304;
	and.b32  	%r670, %r669, -2147483648;
	or.b32  	%r671, %r670, 1056964608;
	mov.b32 	%f1305, %r671;
	add.f32 	%f1306, %f1304, %f1305;
	cvt.rzi.f32.f32 	%f1307, %f1306;
	abs.f32 	%f1308, %f1304;
	setp.gt.f32 	%p304, %f1308, 0f4B000000;
	selp.f32 	%f1309, %f1304, %f1307, %p304;
	cvt.rzi.f32.f32 	%f1310, %f1304;
	setp.lt.f32 	%p305, %f1308, 0f3F000000;
	selp.f32 	%f1311, %f1310, %f1309, %p305;
	cvt.rzi.s32.f32 	%r672, %f1311;
	fma.rn.f32 	%f1312, %f1311, 0fBF000000, %f1390;
	mul.f32 	%f1313, %f1312, %f1312;
	fma.rn.f32 	%f1314, %f1313, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1315, %f1313, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1316, %f1314, %f1313, 0fC0A55DF6;
	fma.rn.f32 	%f1317, %f1315, %f1313, 0f4081E0CF;
	fma.rn.f32 	%f1318, %f1313, %f1312, 0f00000000;
	fma.rn.f32 	%f1319, %f1317, %f1313, 0fC09DE9E6;
	fma.rn.f32 	%f1320, %f1316, %f1318, 0f00000000;
	fma.rn.f32 	%f1321, %f1319, %f1313, 0f3F800000;
	fma.rn.f32 	%f1322, %f1312, 0f40490FDB, %f1320;
	and.b32  	%r673, %r672, 1;
	setp.eq.b32 	%p306, %r673, 1;
	selp.f32 	%f1323, %f1321, %f1322, %p306;
	selp.f32 	%f1324, %f1322, %f1321, %p306;
	and.b32  	%r674, %r672, 2;
	setp.eq.s32 	%p307, %r674, 0;
	neg.f32 	%f1325, %f1323;
	selp.f32 	%f1326, %f1323, %f1325, %p307;
	add.s32 	%r675, %r672, 1;
	and.b32  	%r676, %r675, 2;
	setp.eq.s32 	%p308, %r676, 0;
	sub.f32 	%f1328, %f286, %f1324;
	selp.f32 	%f1329, %f1324, %f1328, %p308;
	cvt.rzi.f32.f32 	%f1330, %f1390;
	setp.eq.f32 	%p309, %f1330, %f1390;
	mul.f32 	%f1331, %f1390, 0f00000000;
	selp.f32 	%f1332, %f1331, %f1326, %p309;
	abs.f32 	%f1333, %f1390;
	setp.gt.f32 	%p310, %f1333, 0f4B800000;
	add.f32 	%f1334, %f1332, 0f3F800000;
	selp.f32 	%f1335, %f1334, %f1329, %p310;
	mov.b32 	%r664, %f1335;
	mov.b32 	%r663, %f235;
	// begin inline asm
	cvt.rn.f16x2.f32 %r662, %r664, %r663;
	// end inline asm
	mov.b32 	%r667, %f1332;
	mov.b32 	%r666, %f234;
	// begin inline asm
	cvt.rn.f16x2.f32 %r665, %r667, %r666;
	// end inline asm
	shl.b32 	%r677, %r5, 13;
	and.b32  	%r124, %r183, 64;
	and.b32  	%r678, %r178, 28;
	and.b32  	%r679, %r183, 32;
	or.b32  	%r125, %r679, %r678;
	shl.b32 	%r680, %r1, 3;
	and.b32  	%r126, %r680, 64;
	or.b32  	%r681, %r124, %r125;
	or.b32  	%r127, %r677, %r681;
	bfe.s32 	%r682, %r1, 3, 1;
	and.b32  	%r128, %r1, 8;
	shl.b32 	%r683, %r1, 4;
	or.b32  	%r684, %r683, %r128;
	shr.u32 	%r685, %r684, 2;
	and.b32  	%r686, %r685, 30;
	and.b32  	%r687, %r683, 48;
	or.b32  	%r129, %r182, %r687;
	and.b32  	%r130, %r192, 6;
	shr.u32 	%r688, %r2, 1;
	and.b32  	%r689, %r3, 32;
	or.b32  	%r690, %r689, %r688;
	or.b32  	%r691, %r690, 8;
	or.b32  	%r692, %r690, 16;
	or.b32  	%r693, %r690, 24;
	or.b32  	%r694, %r185, %r182;
	or.b32  	%r695, %r694, %r180;
	shr.u32 	%r696, %r695, 1;
	mul.lo.s32 	%r697, %r696, 65;
	add.s32 	%r131, %r690, %r697;
	add.s32 	%r132, %r691, %r697;
	add.s32 	%r133, %r692, %r697;
	add.s32 	%r134, %r693, %r697;
	or.b32  	%r698, %r187, %r182;
	or.b32  	%r699, %r698, %r180;
	shr.u32 	%r700, %r699, 1;
	mul.lo.s32 	%r701, %r700, 65;
	add.s32 	%r135, %r690, %r701;
	add.s32 	%r136, %r691, %r701;
	add.s32 	%r137, %r692, %r701;
	add.s32 	%r138, %r693, %r701;
	shl.b32 	%r702, %r2, 1;
	or.b32  	%r703, %r702, %r194;
	mul.lo.s32 	%r704, %r703, 65;
	add.s32 	%r705, %r686, %r704;
	mul.wide.u32 	%rd51, %r705, 4;
	mov.u64 	%rd52, shmem;
	add.s64 	%rd5, %rd52, %rd51;
	cvt.u64.u32 	%rd53, %r686;
	cvt.u64.u32 	%rd54, %r704;
	add.s64 	%rd55, %rd54, %rd53;
	shl.b64 	%rd56, %rd55, 2;
	add.s64 	%rd6, %rd52, %rd56;
	or.b32  	%r706, %r703, 32;
	mul.lo.s32 	%r707, %r706, 65;
	add.s32 	%r708, %r686, %r707;
	mul.wide.u32 	%rd57, %r708, 4;
	add.s64 	%rd7, %rd52, %rd57;
	cvt.u64.u32 	%rd58, %r707;
	add.s64 	%rd59, %rd58, %rd53;
	shl.b64 	%rd60, %rd59, 2;
	add.s64 	%rd8, %rd52, %rd60;
	shl.b32 	%r709, %r7, 20;
	add.s32 	%r710, %r709, -3145728;
	shl.b32 	%r711, %r2, 2;
	or.b32  	%r712, %r711, %r195;
	or.b32  	%r713, %r712, %r184;
	shl.b32 	%r139, %r713, 7;
	cvt.s64.s32 	%rd9, %r710;
	or.b32  	%r140, %r139, 8192;
	shr.u32 	%r714, %r182, 3;
	setp.gt.u32 	%p311, %r1, 15;
	bfe.u32 	%r715, %r683, 5, 1;
	bfe.s32 	%r716, %r2, 1, 1;
	and.b32  	%r717, %r2, 2;
	setp.eq.s32 	%p312, %r717, 0;
	and.b32  	%r718, %r716, 1040;
	shr.u32 	%r719, %r2, 3;
	mul.lo.s32 	%r720, %r719, 260;
	bfe.s32 	%r721, %r2, 2, 1;
	and.b32  	%r722, %r2, 4;
	setp.eq.s32 	%p313, %r722, 0;
	and.b32  	%r723, %r721, 520;
	and.b32  	%r724, %r2, 1;
	neg.s32 	%r725, %r724;
	and.b32  	%r726, %r725, 2080;
	mul.lo.s32 	%r727, %r194, 65;
	or.b32  	%r728, %r726, %r686;
	add.s32 	%r729, %r728, %r720;
	add.s32 	%r730, %r729, %r718;
	add.s32 	%r731, %r730, %r723;
	add.s32 	%r732, %r731, %r727;
	mul.wide.u32 	%rd61, %r732, 4;
	add.s64 	%rd10, %rd52, %rd61;
	cvt.u64.u32 	%rd62, %r727;
	selp.b64 	%rd63, 0, 520, %p313;
	selp.b64 	%rd64, 0, 1040, %p312;
	cvt.u64.u32 	%rd65, %r720;
	cvt.u64.u32 	%rd66, %r728;
	add.s64 	%rd67, %rd66, %rd65;
	add.s64 	%rd68, %rd67, %rd64;
	add.s64 	%rd69, %rd68, %rd63;
	add.s64 	%rd70, %rd69, %rd62;
	shl.b64 	%rd71, %rd70, 2;
	add.s64 	%rd11, %rd52, %rd71;
	add.s32 	%r733, %r732, 162;
	mul.wide.u32 	%rd72, %r733, 4;
	add.s64 	%rd12, %rd52, %rd72;
	add.s32 	%r734, %r732, 131;
	mul.wide.u32 	%rd73, %r734, 4;
	add.s64 	%rd13, %rd52, %rd73;
	add.s32 	%r735, %r732, 163;
	mul.wide.u32 	%rd74, %r735, 4;
	add.s64 	%rd14, %rd52, %rd74;
	cvt.u64.u32 	%rd75, %r730;
	add.s64 	%rd76, %rd75, %rd63;
	add.s64 	%rd77, %rd76, %rd62;
	shl.b64 	%rd78, %rd77, 2;
	add.s64 	%rd15, %rd52, %rd78;
	add.s32 	%r736, %r732, 4193;
	mul.wide.u32 	%rd79, %r736, 4;
	add.s64 	%rd16, %rd52, %rd79;
	add.s32 	%r737, %r732, 4162;
	mul.wide.u32 	%rd80, %r737, 4;
	add.s64 	%rd17, %rd52, %rd80;
	add.s32 	%r738, %r732, 4194;
	mul.wide.u32 	%rd81, %r738, 4;
	add.s64 	%rd18, %rd52, %rd81;
	add.s32 	%r739, %r732, 4291;
	mul.wide.u32 	%rd82, %r739, 4;
	add.s64 	%rd19, %rd52, %rd82;
	add.s32 	%r740, %r732, 4323;
	mul.wide.u32 	%rd83, %r740, 4;
	add.s64 	%rd20, %rd52, %rd83;
	add.s32 	%r741, %r732, 4292;
	mul.wide.u32 	%rd84, %r741, 4;
	add.s64 	%rd21, %rd52, %rd84;
	add.s32 	%r742, %r732, 4324;
	mul.wide.u32 	%rd85, %r742, 4;
	add.s64 	%rd22, %rd52, %rd85;
	and.b32  	%r743, %r682, 1040;
	mul.lo.s32 	%r744, %r714, 260;
	selp.b32 	%r141, 520, 0, %p311;
	mul.lo.s32 	%r142, %r715, 65;
	setp.eq.s32 	%p314, %r191, 0;
	selp.b32 	%r143, 0, 130, %p314;
	add.s32 	%r745, %r690, %r744;
	add.s32 	%r144, %r745, %r743;
	add.s32 	%r746, %r691, %r744;
	add.s32 	%r145, %r746, %r743;
	add.s32 	%r747, %r692, %r744;
	add.s32 	%r146, %r747, %r743;
	add.s32 	%r748, %r693, %r744;
	add.s32 	%r147, %r748, %r743;
	add.s32 	%r148, %r690, 2080;
	add.s32 	%r149, %r691, 2080;
	add.s32 	%r150, %r692, 2080;
	add.s32 	%r151, %r693, 2080;
	mov.u32 	%r16380, 0;
	setp.eq.s32 	%p316, %r128, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16381, %r16380;
	mov.u32 	%r16382, %r16380;
	mov.u32 	%r16383, %r16380;
	mov.u32 	%r16384, %r16380;
	mov.u32 	%r16385, %r16380;
	mov.u32 	%r16386, %r16380;
	mov.u32 	%r16387, %r16380;
	mov.u32 	%r16388, %r16380;
	mov.u32 	%r16389, %r16380;
	mov.u32 	%r16390, %r16380;
	mov.u32 	%r16391, %r16380;
	mov.u32 	%r16392, %r16380;
	mov.u32 	%r16393, %r16380;
	mov.u32 	%r16394, %r16380;
	mov.u32 	%r16395, %r16380;
	mov.u32 	%r16396, %r16380;
	mov.u32 	%r16397, %r16380;
	mov.u32 	%r16398, %r16380;
	mov.u32 	%r16399, %r16380;
	mov.u32 	%r16400, %r16380;
	mov.u32 	%r16401, %r16380;
	mov.u32 	%r16402, %r16380;
	mov.u32 	%r16403, %r16380;
	mov.u32 	%r16404, %r16380;
	bra.uni 	$L__BB0_181;
$L__BB0_187:                            // %L70736
                                        //   in Loop: Header=BB0_181 Depth=1
	add.s32 	%r177, %r16404, 256;
	setp.ne.s32 	%p341, %r16404, 7936;
	mov.u32 	%r16404, %r177;
	@%p341 bra 	$L__BB0_181;
	bra.uni 	$L__BB0_188;
$L__BB0_181:                            // %L2416
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_183 Depth 2
	add.s32 	%r749, %r16404, %r5;
	setp.gt.s32 	%p315, %r6, %r749;
	@%p315 bra 	$L__BB0_182;
	bra.uni 	$L__BB0_188;
$L__BB0_182:                            // %pass884
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r815, %r16404, %r126;
	or.b32  	%r816, %r815, %r181;
	and.b32  	%r817, %r816, 8032;
	or.b32  	%r818, %r817, %r2;
	shl.b32 	%r819, %r818, 13;
	add.s32 	%r820, %r127, %r819;
	shr.s32 	%r821, %r820, 31;
	shr.u32 	%r822, %r821, 6;
	add.s32 	%r823, %r820, %r822;
	shr.s32 	%r824, %r823, 26;
	setp.lt.s32 	%p317, %r820, 0;
	and.b32  	%r825, %r823, -67108864;
	setp.ne.s32 	%p318, %r825, %r820;
	and.pred  	%p319, %p317, %p318;
	selp.u32 	%r826, 1, 0, %p319;
	sub.s32 	%r827, %r826, %r824;
	shl.b32 	%r828, %r827, 26;
	add.s32 	%r829, %r828, %r820;
	mul.wide.s32 	%rd86, %r829, 4;
	add.s64 	%rd87, %rd2, %rd86;
	ld.global.v4.u32 	{%r830, %r831, %r832, %r833}, [%rd87];
	or.b32  	%r834, %r819, 131072;
	add.s32 	%r835, %r127, %r834;
	shr.s32 	%r836, %r835, 31;
	shr.u32 	%r837, %r836, 6;
	add.s32 	%r838, %r835, %r837;
	shr.s32 	%r839, %r838, 26;
	setp.lt.s32 	%p320, %r835, 0;
	and.b32  	%r840, %r838, -67108864;
	setp.ne.s32 	%p321, %r840, %r835;
	and.pred  	%p322, %p320, %p321;
	selp.u32 	%r841, 1, 0, %p322;
	sub.s32 	%r842, %r841, %r839;
	shl.b32 	%r843, %r842, 26;
	add.s32 	%r844, %r843, %r835;
	mul.wide.s32 	%rd88, %r844, 4;
	add.s64 	%rd89, %rd2, %rd88;
	ld.global.v4.u32 	{%r845, %r846, %r847, %r848}, [%rd89];
	or.b32  	%r849, %r819, 1048576;
	add.s32 	%r850, %r127, %r849;
	shr.s32 	%r851, %r850, 31;
	shr.u32 	%r852, %r851, 6;
	add.s32 	%r853, %r850, %r852;
	shr.s32 	%r854, %r853, 26;
	setp.lt.s32 	%p323, %r850, 0;
	and.b32  	%r855, %r853, -67108864;
	setp.ne.s32 	%p324, %r855, %r850;
	and.pred  	%p325, %p323, %p324;
	selp.u32 	%r856, 1, 0, %p325;
	sub.s32 	%r857, %r856, %r854;
	shl.b32 	%r858, %r857, 26;
	add.s32 	%r859, %r858, %r850;
	mul.wide.s32 	%rd90, %r859, 4;
	add.s64 	%rd91, %rd2, %rd90;
	ld.global.v4.u32 	{%r860, %r861, %r862, %r863}, [%rd91];
	or.b32  	%r864, %r819, 1179648;
	add.s32 	%r865, %r127, %r864;
	shr.s32 	%r866, %r865, 31;
	shr.u32 	%r867, %r866, 6;
	add.s32 	%r868, %r865, %r867;
	shr.s32 	%r869, %r868, 26;
	setp.lt.s32 	%p326, %r865, 0;
	and.b32  	%r870, %r868, -67108864;
	setp.ne.s32 	%p327, %r870, %r865;
	and.pred  	%p328, %p326, %p327;
	selp.u32 	%r871, 1, 0, %p328;
	sub.s32 	%r872, %r871, %r869;
	shl.b32 	%r873, %r872, 26;
	add.s32 	%r874, %r873, %r865;
	mul.wide.s32 	%rd92, %r874, 4;
	add.s64 	%rd93, %rd2, %rd92;
	ld.global.v4.u32 	{%r875, %r876, %r877, %r878}, [%rd93];
	selp.b32 	%r879, %r832, %r830, %p316;
	shfl.sync.bfly.b32	%r880, %r879, 8, 31, -1;
	selp.b32 	%r751, %r830, %r880, %p316;
	selp.b32 	%r752, %r880, %r832, %p316;
	selp.b32 	%r881, %r833, %r831, %p316;
	shfl.sync.bfly.b32	%r882, %r881, 8, 31, -1;
	selp.b32 	%r759, %r831, %r882, %p316;
	selp.b32 	%r760, %r882, %r833, %p316;
	selp.b32 	%r883, %r847, %r845, %p316;
	shfl.sync.bfly.b32	%r884, %r883, 8, 31, -1;
	selp.b32 	%r767, %r845, %r884, %p316;
	selp.b32 	%r768, %r884, %r847, %p316;
	selp.b32 	%r885, %r848, %r846, %p316;
	shfl.sync.bfly.b32	%r886, %r885, 8, 31, -1;
	selp.b32 	%r775, %r846, %r886, %p316;
	selp.b32 	%r776, %r886, %r848, %p316;
	selp.b32 	%r887, %r862, %r860, %p316;
	shfl.sync.bfly.b32	%r888, %r887, 8, 31, -1;
	selp.b32 	%r783, %r860, %r888, %p316;
	selp.b32 	%r784, %r888, %r862, %p316;
	selp.b32 	%r889, %r863, %r861, %p316;
	shfl.sync.bfly.b32	%r890, %r889, 8, 31, -1;
	selp.b32 	%r791, %r861, %r890, %p316;
	selp.b32 	%r792, %r890, %r863, %p316;
	selp.b32 	%r891, %r877, %r875, %p316;
	shfl.sync.bfly.b32	%r892, %r891, 8, 31, -1;
	selp.b32 	%r799, %r875, %r892, %p316;
	selp.b32 	%r800, %r892, %r877, %p316;
	selp.b32 	%r893, %r878, %r876, %p316;
	shfl.sync.bfly.b32	%r894, %r893, 8, 31, -1;
	selp.b32 	%r807, %r876, %r894, %p316;
	selp.b32 	%r808, %r894, %r878, %p316;
	mov.u32 	%r809, 21520;
	// begin inline asm
	prmt.b32 %r750, %r751, %r752, %r809;
	// end inline asm
	mov.u32 	%r813, 30258;
	// begin inline asm
	prmt.b32 %r754, %r751, %r752, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r758, %r759, %r760, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r762, %r759, %r760, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r766, %r767, %r768, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r770, %r767, %r768, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r774, %r775, %r776, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r778, %r775, %r776, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r782, %r783, %r784, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r786, %r783, %r784, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r790, %r791, %r792, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r794, %r791, %r792, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r798, %r799, %r800, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r802, %r799, %r800, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r806, %r807, %r808, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r810, %r807, %r808, %r813;
	// end inline asm
	st.shared.u32 	[%rd10], %r750;
	st.shared.u32 	[%rd11+128], %r754;
	st.shared.u32 	[%rd11+4], %r758;
	st.shared.u32 	[%rd11+132], %r762;
	st.shared.u32 	[%rd10+520], %r766;
	st.shared.u32 	[%rd12], %r770;
	st.shared.u32 	[%rd13], %r774;
	st.shared.u32 	[%rd14], %r778;
	st.shared.u32 	[%rd15+16644], %r782;
	st.shared.u32 	[%rd16], %r786;
	st.shared.u32 	[%rd17], %r790;
	st.shared.u32 	[%rd18], %r794;
	st.shared.u32 	[%rd19], %r798;
	st.shared.u32 	[%rd20], %r802;
	st.shared.u32 	[%rd21], %r806;
	st.shared.u32 	[%rd22], %r810;
	bar.sync 	0;
	or.b32  	%r895, %r129, %r16404;
	or.b32  	%r199, %r895, 1;
	mov.u32 	%r3240, 0;
	mov.u32 	%r16405, %r3240;
$L__BB0_183:                            // %pass6419
                                        //   Parent Loop BB0_181 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	setp.eq.s32 	%p329, %r16405, 0;
	selp.b32 	%r16160, 0, 4161, %p329;
	add.s32 	%r16161, %r144, %r16160;
	add.s32 	%r16162, %r16161, %r141;
	add.s32 	%r16163, %r16162, %r142;
	add.s32 	%r16164, %r16163, %r143;
	mul.wide.u32 	%rd94, %r16164, 4;
	add.s64 	%rd96, %rd52, %rd94;
	ld.shared.u32 	%r16165, [%rd96];
	add.s32 	%r16166, %r145, %r16160;
	add.s32 	%r16167, %r16166, %r141;
	add.s32 	%r16168, %r16167, %r142;
	add.s32 	%r16169, %r16168, %r143;
	mul.wide.u32 	%rd97, %r16169, 4;
	add.s64 	%rd98, %rd52, %rd97;
	ld.shared.u32 	%r16170, [%rd98];
	add.s32 	%r16171, %r146, %r16160;
	add.s32 	%r16172, %r16171, %r141;
	add.s32 	%r16173, %r16172, %r142;
	add.s32 	%r16174, %r16173, %r143;
	mul.wide.u32 	%rd99, %r16174, 4;
	add.s64 	%rd100, %rd52, %rd99;
	ld.shared.u32 	%r16175, [%rd100];
	add.s32 	%r16176, %r147, %r16160;
	add.s32 	%r16177, %r16176, %r141;
	add.s32 	%r16178, %r16177, %r142;
	add.s32 	%r16179, %r16178, %r143;
	mul.wide.u32 	%rd101, %r16179, 4;
	add.s64 	%rd102, %rd52, %rd101;
	ld.shared.u32 	%r16180, [%rd102];
	add.s32 	%r16181, %r199, %r16405;
	or.b32  	%r16182, %r16181, %r130;
	bfe.s32 	%r16183, %r16182, 1, 1;
	and.b32  	%r16184, %r16183, 1040;
	bfe.s32 	%r16185, %r16181, 3, 1;
	and.b32  	%r16186, %r16185, 260;
	bfe.s32 	%r16187, %r16181, 7, 1;
	and.b32  	%r16188, %r16187, 4161;
	bfe.s32 	%r16189, %r16182, 2, 1;
	and.b32  	%r16190, %r16189, 520;
	bfe.s32 	%r16191, %r16181, 4, 1;
	and.b32  	%r16192, %r16191, 130;
	add.s32 	%r16193, %r148, %r16186;
	or.b32  	%r16194, %r16193, %r16184;
	add.s32 	%r16195, %r16194, %r16188;
	add.s32 	%r16196, %r16195, %r16190;
	add.s32 	%r16197, %r16196, %r142;
	add.s32 	%r16198, %r16197, %r16192;
	mul.wide.u32 	%rd103, %r16198, 4;
	add.s64 	%rd104, %rd52, %rd103;
	ld.shared.u32 	%r16199, [%rd104];
	add.s32 	%r16200, %r149, %r16186;
	add.s32 	%r16201, %r16200, %r16184;
	add.s32 	%r16202, %r16201, %r16188;
	add.s32 	%r16203, %r16202, %r16190;
	add.s32 	%r16204, %r16203, %r142;
	add.s32 	%r16205, %r16204, %r16192;
	mul.wide.u32 	%rd105, %r16205, 4;
	add.s64 	%rd106, %rd52, %rd105;
	ld.shared.u32 	%r16206, [%rd106];
	add.s32 	%r16207, %r150, %r16186;
	add.s32 	%r16208, %r16207, %r16184;
	add.s32 	%r16209, %r16208, %r16188;
	add.s32 	%r16210, %r16209, %r16190;
	add.s32 	%r16211, %r16210, %r142;
	add.s32 	%r16212, %r16211, %r16192;
	mul.wide.u32 	%rd107, %r16212, 4;
	add.s64 	%rd108, %rd52, %rd107;
	ld.shared.u32 	%r16213, [%rd108];
	add.s32 	%r16214, %r151, %r16186;
	add.s32 	%r16215, %r16214, %r16184;
	add.s32 	%r16216, %r16215, %r16188;
	add.s32 	%r16217, %r16216, %r16190;
	add.s32 	%r16218, %r16217, %r142;
	add.s32 	%r16219, %r16218, %r16192;
	mul.wide.u32 	%rd109, %r16219, 4;
	add.s64 	%rd110, %rd52, %rd109;
	ld.shared.u32 	%r16220, [%rd110];
	// begin inline asm
	mov.b32 %r901, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r912, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r900, %r16165, -2004318072;
	mov.u32 	%r899, 983055;
	// begin inline asm
	lop3.b32 %r898, %r899, %r900, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r903, %r901, %r902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r906, %r898, %r903;
	// end inline asm
	mov.u32 	%r910, 15728880;
	// begin inline asm
	lop3.b32 %r909, %r910, %r900, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r914, %r912, %r913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r917, %r909, %r914;
	// end inline asm
	shr.u32 	%r922, %r900, 8;
	// begin inline asm
	lop3.b32 %r920, %r899, %r922, %r901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r925, %r901, %r924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r928, %r920, %r925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r931, %r910, %r922, %r912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r936, %r912, %r935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r939, %r931, %r936;
	// end inline asm
	// begin inline asm
	mov.b32 %r947, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r958, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r946, %r16170, -2004318072;
	// begin inline asm
	lop3.b32 %r944, %r899, %r946, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r949, %r947, %r948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r952, %r944, %r949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r955, %r910, %r946, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r960, %r958, %r959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r963, %r955, %r960;
	// end inline asm
	shr.u32 	%r968, %r946, 8;
	// begin inline asm
	lop3.b32 %r966, %r899, %r968, %r947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r971, %r947, %r970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r974, %r966, %r971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r977, %r910, %r968, %r958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r982, %r958, %r981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r985, %r977, %r982;
	// end inline asm
	// begin inline asm
	mov.b32 %r993, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1004, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r992, %r16175, -2004318072;
	// begin inline asm
	lop3.b32 %r990, %r899, %r992, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r995, %r993, %r994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r998, %r990, %r995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1001, %r910, %r992, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1006, %r1004, %r1005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1009, %r1001, %r1006;
	// end inline asm
	shr.u32 	%r1014, %r992, 8;
	// begin inline asm
	lop3.b32 %r1012, %r899, %r1014, %r993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1017, %r993, %r1016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1020, %r1012, %r1017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1023, %r910, %r1014, %r1004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1028, %r1004, %r1027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1031, %r1023, %r1028;
	// end inline asm
	// begin inline asm
	mov.b32 %r1039, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1050, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1038, %r16180, -2004318072;
	// begin inline asm
	lop3.b32 %r1036, %r899, %r1038, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1041, %r1039, %r1040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1044, %r1036, %r1041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1047, %r910, %r1038, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1052, %r1050, %r1051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1055, %r1047, %r1052;
	// end inline asm
	shr.u32 	%r1060, %r1038, 8;
	// begin inline asm
	lop3.b32 %r1058, %r899, %r1060, %r1039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1063, %r1039, %r1062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1066, %r1058, %r1063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1069, %r910, %r1060, %r1050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1074, %r1050, %r1073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1077, %r1069, %r1074;
	// end inline asm
	// begin inline asm
	mov.b32 %r1085, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1096, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1084, %r16199, -2004318072;
	// begin inline asm
	lop3.b32 %r1082, %r899, %r1084, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1085, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1093, %r910, %r1084, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1098, %r1096, %r1097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1101, %r1093, %r1098;
	// end inline asm
	shr.u32 	%r1106, %r1084, 8;
	// begin inline asm
	lop3.b32 %r1104, %r899, %r1106, %r1085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1109, %r1085, %r1108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1112, %r1104, %r1109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1115, %r910, %r1106, %r1096, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1120, %r1096, %r1119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1123, %r1115, %r1120;
	// end inline asm
	// begin inline asm
	mov.b32 %r1131, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1142, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1130, %r16206, -2004318072;
	// begin inline asm
	lop3.b32 %r1128, %r899, %r1130, %r1131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1131, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1139, %r910, %r1130, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1144, %r1142, %r1143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1147, %r1139, %r1144;
	// end inline asm
	shr.u32 	%r1152, %r1130, 8;
	// begin inline asm
	lop3.b32 %r1150, %r899, %r1152, %r1131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1155, %r1131, %r1154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1158, %r1150, %r1155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1161, %r910, %r1152, %r1142, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1166, %r1142, %r1165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1169, %r1161, %r1166;
	// end inline asm
	// begin inline asm
	mov.b32 %r1177, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1188, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1176, %r16213, -2004318072;
	// begin inline asm
	lop3.b32 %r1174, %r899, %r1176, %r1177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1177, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1185, %r910, %r1176, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1190, %r1188, %r1189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1193, %r1185, %r1190;
	// end inline asm
	shr.u32 	%r1198, %r1176, 8;
	// begin inline asm
	lop3.b32 %r1196, %r899, %r1198, %r1177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1201, %r1177, %r1200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1204, %r1196, %r1201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1207, %r910, %r1198, %r1188, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1212, %r1188, %r1211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1215, %r1207, %r1212;
	// end inline asm
	// begin inline asm
	mov.b32 %r1223, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1234, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1222, %r16220, -2004318072;
	// begin inline asm
	lop3.b32 %r1220, %r899, %r1222, %r1223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1225, %r1223, %r1224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1228, %r1220, %r1225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1231, %r910, %r1222, %r1234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1236, %r1234, %r1235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1239, %r1231, %r1236;
	// end inline asm
	shr.u32 	%r1244, %r1222, 8;
	// begin inline asm
	lop3.b32 %r1242, %r899, %r1244, %r1223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1247, %r1223, %r1246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1250, %r1242, %r1247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1253, %r910, %r1244, %r1234, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1258, %r1234, %r1257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1261, %r1253, %r1258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1264, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1266, %r1264, %r906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1269, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1271, %r1269, %r917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1274, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1276, %r1274, %r928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1279, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1281, %r1279, %r939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1284, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1286, %r1284, %r952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1289, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1291, %r1289, %r963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1294, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1296, %r1294, %r974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1299, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1301, %r1299, %r985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1304, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1306, %r1304, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1309, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1311, %r1309, %r1009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1314, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1316, %r1314, %r1020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1319, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1321, %r1319, %r1031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1324, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1326, %r1324, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1329, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1331, %r1329, %r1055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1334, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1336, %r1334, %r1066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1339, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1341, %r1339, %r1077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1344, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1346, %r1344, %r1090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1349, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1351, %r1349, %r1101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1354, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1356, %r1354, %r1112;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1359, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1361, %r1359, %r1123;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1364, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1366, %r1364, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1369, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1371, %r1369, %r1147;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1374, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1376, %r1374, %r1158;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1379, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1381, %r1379, %r1169;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1384, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1386, %r1384, %r1182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1389, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1391, %r1389, %r1193;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1394, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1396, %r1394, %r1204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1399, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1401, %r1399, %r1215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1404, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1406, %r1404, %r1228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1409, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1411, %r1409, %r1239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1414, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1416, %r1414, %r1250;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1419, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1421, %r1419, %r1261;
	// end inline asm
	// begin inline asm
	mov.b32 %r1429, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1440, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1428, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r1426, %r899, %r1428, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1431, %r1429, %r1430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1426, %r1431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1437, %r910, %r1428, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1442, %r1440, %r1441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1445, %r1437, %r1442;
	// end inline asm
	shr.u32 	%r1450, %r1428, 8;
	// begin inline asm
	lop3.b32 %r1448, %r899, %r1450, %r1429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1453, %r1429, %r1452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1456, %r1448, %r1453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1459, %r910, %r1450, %r1440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1464, %r1440, %r1463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1467, %r1459, %r1464;
	// end inline asm
	// begin inline asm
	mov.b32 %r1475, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1486, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1474, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r1472, %r899, %r1474, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1475, %r1476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1472, %r1477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1483, %r910, %r1474, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1488, %r1486, %r1487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1491, %r1483, %r1488;
	// end inline asm
	shr.u32 	%r1496, %r1474, 8;
	// begin inline asm
	lop3.b32 %r1494, %r899, %r1496, %r1475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1499, %r1475, %r1498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1502, %r1494, %r1499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1505, %r910, %r1496, %r1486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1510, %r1486, %r1509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1513, %r1505, %r1510;
	// end inline asm
	// begin inline asm
	mov.b32 %r1521, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1532, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1520, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r1518, %r899, %r1520, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1523, %r1521, %r1522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1526, %r1518, %r1523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1529, %r910, %r1520, %r1532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1534, %r1532, %r1533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1537, %r1529, %r1534;
	// end inline asm
	shr.u32 	%r1542, %r1520, 8;
	// begin inline asm
	lop3.b32 %r1540, %r899, %r1542, %r1521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1545, %r1521, %r1544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1548, %r1540, %r1545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1551, %r910, %r1542, %r1532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1556, %r1532, %r1555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1559, %r1551, %r1556;
	// end inline asm
	// begin inline asm
	mov.b32 %r1567, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1578, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1566, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r1564, %r899, %r1566, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1569, %r1567, %r1568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1572, %r1564, %r1569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1575, %r910, %r1566, %r1578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1580, %r1578, %r1579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1583, %r1575, %r1580;
	// end inline asm
	shr.u32 	%r1588, %r1566, 8;
	// begin inline asm
	lop3.b32 %r1586, %r899, %r1588, %r1567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1591, %r1567, %r1590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1594, %r1586, %r1591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1597, %r910, %r1588, %r1578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1602, %r1578, %r1601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1605, %r1597, %r1602;
	// end inline asm
	// begin inline asm
	mov.b32 %r1613, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1624, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1612, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r1610, %r899, %r1612, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1615, %r1613, %r1614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1618, %r1610, %r1615;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1621, %r910, %r1612, %r1624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1625, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1626, %r1624, %r1625;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1629, %r1621, %r1626;
	// end inline asm
	shr.u32 	%r1634, %r1612, 8;
	// begin inline asm
	lop3.b32 %r1632, %r899, %r1634, %r1613, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1636, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1637, %r1613, %r1636;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1640, %r1632, %r1637;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1643, %r910, %r1634, %r1624, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1647, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1648, %r1624, %r1647;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1651, %r1643, %r1648;
	// end inline asm
	// begin inline asm
	mov.b32 %r1659, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1670, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1658, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r1656, %r899, %r1658, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1661, %r1659, %r1660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1664, %r1656, %r1661;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1667, %r910, %r1658, %r1670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1671, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1672, %r1670, %r1671;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1675, %r1667, %r1672;
	// end inline asm
	shr.u32 	%r1680, %r1658, 8;
	// begin inline asm
	lop3.b32 %r1678, %r899, %r1680, %r1659, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1682, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1683, %r1659, %r1682;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1686, %r1678, %r1683;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1689, %r910, %r1680, %r1670, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1694, %r1670, %r1693;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1697, %r1689, %r1694;
	// end inline asm
	// begin inline asm
	mov.b32 %r1705, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1716, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1704, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r1702, %r899, %r1704, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1707, %r1705, %r1706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1702, %r1707;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1713, %r910, %r1704, %r1716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1717, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1718, %r1716, %r1717;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1721, %r1713, %r1718;
	// end inline asm
	shr.u32 	%r1726, %r1704, 8;
	// begin inline asm
	lop3.b32 %r1724, %r899, %r1726, %r1705, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1728, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1729, %r1705, %r1728;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1732, %r1724, %r1729;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1735, %r910, %r1726, %r1716, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1739, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1740, %r1716, %r1739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1743, %r1735, %r1740;
	// end inline asm
	// begin inline asm
	mov.b32 %r1751, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1762, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1750, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r1748, %r899, %r1750, %r1751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1753, %r1751, %r1752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1756, %r1748, %r1753;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1759, %r910, %r1750, %r1762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1763, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1764, %r1762, %r1763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1767, %r1759, %r1764;
	// end inline asm
	shr.u32 	%r1772, %r1750, 8;
	// begin inline asm
	lop3.b32 %r1770, %r899, %r1772, %r1751, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1774, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1775, %r1751, %r1774;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1778, %r1770, %r1775;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1781, %r910, %r1772, %r1762, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1785, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1786, %r1762, %r1785;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1789, %r1781, %r1786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1792, %r313, %r1434, %r1266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1796, %r313, %r1445, %r1271;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1800, %r313, %r1456, %r1276;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1804, %r313, %r1467, %r1281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1808, %r313, %r1480, %r1286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1812, %r313, %r1491, %r1291;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1816, %r313, %r1502, %r1296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1820, %r313, %r1513, %r1301;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1824, %r313, %r1526, %r1306;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1828, %r313, %r1537, %r1311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1832, %r313, %r1548, %r1316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1836, %r313, %r1559, %r1321;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1840, %r313, %r1572, %r1326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1844, %r313, %r1583, %r1331;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1848, %r313, %r1594, %r1336;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1852, %r313, %r1605, %r1341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1856, %r331, %r1618, %r1346;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1860, %r331, %r1629, %r1351;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1864, %r331, %r1640, %r1356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1868, %r331, %r1651, %r1361;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1872, %r331, %r1664, %r1366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1876, %r331, %r1675, %r1371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1880, %r331, %r1686, %r1376;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1884, %r331, %r1697, %r1381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1888, %r331, %r1710, %r1386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1892, %r331, %r1721, %r1391;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1896, %r331, %r1732, %r1396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1900, %r331, %r1743, %r1401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1904, %r331, %r1756, %r1406;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1908, %r331, %r1767, %r1411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1912, %r331, %r1778, %r1416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1916, %r331, %r1789, %r1421;
	// end inline asm
	// begin inline asm
	mov.b32 %r1925, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1936, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1924, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r1922, %r899, %r1924, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1927, %r1925, %r1926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1930, %r1922, %r1927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1933, %r910, %r1924, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1938, %r1936, %r1937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1941, %r1933, %r1938;
	// end inline asm
	shr.u32 	%r1946, %r1924, 8;
	// begin inline asm
	lop3.b32 %r1944, %r899, %r1946, %r1925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1949, %r1925, %r1948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1952, %r1944, %r1949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1955, %r910, %r1946, %r1936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1960, %r1936, %r1959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1963, %r1955, %r1960;
	// end inline asm
	// begin inline asm
	mov.b32 %r1971, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1982, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1970, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r1968, %r899, %r1970, %r1971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1973, %r1971, %r1972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1976, %r1968, %r1973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1979, %r910, %r1970, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1984, %r1982, %r1983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1987, %r1979, %r1984;
	// end inline asm
	shr.u32 	%r1992, %r1970, 8;
	// begin inline asm
	lop3.b32 %r1990, %r899, %r1992, %r1971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1995, %r1971, %r1994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1998, %r1990, %r1995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2001, %r910, %r1992, %r1982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2006, %r1982, %r2005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2009, %r2001, %r2006;
	// end inline asm
	// begin inline asm
	mov.b32 %r2017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2028, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2016, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r2014, %r899, %r2016, %r2017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2019, %r2017, %r2018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2022, %r2014, %r2019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2025, %r910, %r2016, %r2028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2030, %r2028, %r2029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2033, %r2025, %r2030;
	// end inline asm
	shr.u32 	%r2038, %r2016, 8;
	// begin inline asm
	lop3.b32 %r2036, %r899, %r2038, %r2017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2041, %r2017, %r2040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2044, %r2036, %r2041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2047, %r910, %r2038, %r2028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2052, %r2028, %r2051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2055, %r2047, %r2052;
	// end inline asm
	// begin inline asm
	mov.b32 %r2063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2074, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2062, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r2060, %r899, %r2062, %r2063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2065, %r2063, %r2064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2068, %r2060, %r2065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2071, %r910, %r2062, %r2074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2076, %r2074, %r2075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2079, %r2071, %r2076;
	// end inline asm
	shr.u32 	%r2084, %r2062, 8;
	// begin inline asm
	lop3.b32 %r2082, %r899, %r2084, %r2063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2087, %r2063, %r2086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2090, %r2082, %r2087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2093, %r910, %r2084, %r2074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2098, %r2074, %r2097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2101, %r2093, %r2098;
	// end inline asm
	// begin inline asm
	mov.b32 %r2109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2120, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2108, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r2106, %r899, %r2108, %r2109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2111, %r2109, %r2110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2114, %r2106, %r2111;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2117, %r910, %r2108, %r2120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2122, %r2120, %r2121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2125, %r2117, %r2122;
	// end inline asm
	shr.u32 	%r2130, %r2108, 8;
	// begin inline asm
	lop3.b32 %r2128, %r899, %r2130, %r2109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2133, %r2109, %r2132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2136, %r2128, %r2133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2139, %r910, %r2130, %r2120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2144, %r2120, %r2143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2147, %r2139, %r2144;
	// end inline asm
	// begin inline asm
	mov.b32 %r2155, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2166, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2154, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r2152, %r899, %r2154, %r2155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2157, %r2155, %r2156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2160, %r2152, %r2157;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2163, %r910, %r2154, %r2166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2168, %r2166, %r2167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2171, %r2163, %r2168;
	// end inline asm
	shr.u32 	%r2176, %r2154, 8;
	// begin inline asm
	lop3.b32 %r2174, %r899, %r2176, %r2155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2179, %r2155, %r2178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2182, %r2174, %r2179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2185, %r910, %r2176, %r2166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2190, %r2166, %r2189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2193, %r2185, %r2190;
	// end inline asm
	// begin inline asm
	mov.b32 %r2201, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2212, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2200, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r2198, %r899, %r2200, %r2201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2203, %r2201, %r2202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2206, %r2198, %r2203;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2209, %r910, %r2200, %r2212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2214, %r2212, %r2213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2217, %r2209, %r2214;
	// end inline asm
	shr.u32 	%r2222, %r2200, 8;
	// begin inline asm
	lop3.b32 %r2220, %r899, %r2222, %r2201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2225, %r2201, %r2224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2228, %r2220, %r2225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2231, %r910, %r2222, %r2212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2236, %r2212, %r2235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2239, %r2231, %r2236;
	// end inline asm
	// begin inline asm
	mov.b32 %r2247, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2258, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2246, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r2244, %r899, %r2246, %r2247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2249, %r2247, %r2248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2252, %r2244, %r2249;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2255, %r910, %r2246, %r2258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2260, %r2258, %r2259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2263, %r2255, %r2260;
	// end inline asm
	shr.u32 	%r2268, %r2246, 8;
	// begin inline asm
	lop3.b32 %r2266, %r899, %r2268, %r2247, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2271, %r2247, %r2270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2274, %r2266, %r2271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2277, %r910, %r2268, %r2258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2282, %r2258, %r2281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2285, %r2277, %r2282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2288, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2290, %r2288, %r1930, %r1792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2294, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2296, %r2294, %r1941, %r1796;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2300, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2302, %r2300, %r1952, %r1800;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2306, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2308, %r2306, %r1963, %r1804;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2312, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2314, %r2312, %r1976, %r1808;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2318, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2320, %r2318, %r1987, %r1812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2324, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2326, %r2324, %r1998, %r1816;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2330, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2332, %r2330, %r2009, %r1820;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2336, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2338, %r2336, %r2022, %r1824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2342, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2344, %r2342, %r2033, %r1828;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2348, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2350, %r2348, %r2044, %r1832;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2354, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2356, %r2354, %r2055, %r1836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2360, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2362, %r2360, %r2068, %r1840;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2366, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2368, %r2366, %r2079, %r1844;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2372, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2374, %r2372, %r2090, %r1848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2378, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2380, %r2378, %r2101, %r1852;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2384, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2386, %r2384, %r2114, %r1856;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2390, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2392, %r2390, %r2125, %r1860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2396, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2398, %r2396, %r2136, %r1864;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2402, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2404, %r2402, %r2147, %r1868;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2408, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2410, %r2408, %r2160, %r1872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2414, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2416, %r2414, %r2171, %r1876;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2420, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2422, %r2420, %r2182, %r1880;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2426, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2428, %r2426, %r2193, %r1884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2432, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2434, %r2432, %r2206, %r1888;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2438, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2440, %r2438, %r2217, %r1892;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2444, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2446, %r2444, %r2228, %r1896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2450, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2452, %r2450, %r2239, %r1900;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2456, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2458, %r2456, %r2252, %r1904;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2462, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2464, %r2462, %r2263, %r1908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2468, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2470, %r2468, %r2274, %r1912;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2474, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2476, %r2474, %r2285, %r1916;
	// end inline asm
	// begin inline asm
	mov.b32 %r2485, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2496, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2484, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r2482, %r899, %r2484, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2485, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2493, %r910, %r2484, %r2496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2498, %r2496, %r2497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2501, %r2493, %r2498;
	// end inline asm
	shr.u32 	%r2506, %r2484, 8;
	// begin inline asm
	lop3.b32 %r2504, %r899, %r2506, %r2485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2509, %r2485, %r2508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2512, %r2504, %r2509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2515, %r910, %r2506, %r2496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2520, %r2496, %r2519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2523, %r2515, %r2520;
	// end inline asm
	// begin inline asm
	mov.b32 %r2531, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2542, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2530, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r2528, %r899, %r2530, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2533, %r2531, %r2532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2536, %r2528, %r2533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2539, %r910, %r2530, %r2542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2544, %r2542, %r2543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2547, %r2539, %r2544;
	// end inline asm
	shr.u32 	%r2552, %r2530, 8;
	// begin inline asm
	lop3.b32 %r2550, %r899, %r2552, %r2531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2555, %r2531, %r2554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2558, %r2550, %r2555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2561, %r910, %r2552, %r2542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2566, %r2542, %r2565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2569, %r2561, %r2566;
	// end inline asm
	// begin inline asm
	mov.b32 %r2577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2588, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2576, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r2574, %r899, %r2576, %r2577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2579, %r2577, %r2578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2582, %r2574, %r2579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2585, %r910, %r2576, %r2588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2590, %r2588, %r2589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2593, %r2585, %r2590;
	// end inline asm
	shr.u32 	%r2598, %r2576, 8;
	// begin inline asm
	lop3.b32 %r2596, %r899, %r2598, %r2577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2601, %r2577, %r2600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2604, %r2596, %r2601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2607, %r910, %r2598, %r2588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2612, %r2588, %r2611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2615, %r2607, %r2612;
	// end inline asm
	// begin inline asm
	mov.b32 %r2623, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2634, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2622, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r2620, %r899, %r2622, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2625, %r2623, %r2624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2628, %r2620, %r2625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2631, %r910, %r2622, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2636, %r2634, %r2635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2639, %r2631, %r2636;
	// end inline asm
	shr.u32 	%r2644, %r2622, 8;
	// begin inline asm
	lop3.b32 %r2642, %r899, %r2644, %r2623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2647, %r2623, %r2646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2650, %r2642, %r2647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2653, %r910, %r2644, %r2634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2658, %r2634, %r2657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2661, %r2653, %r2658;
	// end inline asm
	// begin inline asm
	mov.b32 %r2669, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2680, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2668, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r2666, %r899, %r2668, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2671, %r2669, %r2670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2674, %r2666, %r2671;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2677, %r910, %r2668, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2681, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2682, %r2680, %r2681;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2685, %r2677, %r2682;
	// end inline asm
	shr.u32 	%r2690, %r2668, 8;
	// begin inline asm
	lop3.b32 %r2688, %r899, %r2690, %r2669, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2692, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2693, %r2669, %r2692;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2696, %r2688, %r2693;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2699, %r910, %r2690, %r2680, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2703, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2704, %r2680, %r2703;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2707, %r2699, %r2704;
	// end inline asm
	// begin inline asm
	mov.b32 %r2715, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2726, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2714, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r2712, %r899, %r2714, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2717, %r2715, %r2716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2720, %r2712, %r2717;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2723, %r910, %r2714, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2727, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2728, %r2726, %r2727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2731, %r2723, %r2728;
	// end inline asm
	shr.u32 	%r2736, %r2714, 8;
	// begin inline asm
	lop3.b32 %r2734, %r899, %r2736, %r2715, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2738, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2739, %r2715, %r2738;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2742, %r2734, %r2739;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2745, %r910, %r2736, %r2726, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2749, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2750, %r2726, %r2749;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2753, %r2745, %r2750;
	// end inline asm
	// begin inline asm
	mov.b32 %r2761, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2772, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2760, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r2758, %r899, %r2760, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2761, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2769, %r910, %r2760, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2773, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2774, %r2772, %r2773;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2777, %r2769, %r2774;
	// end inline asm
	shr.u32 	%r2782, %r2760, 8;
	// begin inline asm
	lop3.b32 %r2780, %r899, %r2782, %r2761, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2784, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2785, %r2761, %r2784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2788, %r2780, %r2785;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2791, %r910, %r2782, %r2772, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2795, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2796, %r2772, %r2795;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2799, %r2791, %r2796;
	// end inline asm
	// begin inline asm
	mov.b32 %r2807, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2818, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2806, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r2804, %r899, %r2806, %r2807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2809, %r2807, %r2808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2812, %r2804, %r2809;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2815, %r910, %r2806, %r2818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2819, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2820, %r2818, %r2819;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2823, %r2815, %r2820;
	// end inline asm
	shr.u32 	%r2828, %r2806, 8;
	// begin inline asm
	lop3.b32 %r2826, %r899, %r2828, %r2807, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2830, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2831, %r2807, %r2830;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2834, %r2826, %r2831;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2837, %r910, %r2828, %r2818, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2842, %r2818, %r2841;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2845, %r2837, %r2842;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r385, %r2490, %r2290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2980, %r385, %r2501, %r2296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r385, %r2512, %r2302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2989, %r385, %r2523, %r2308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r385, %r2536, %r2314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2998, %r385, %r2547, %r2320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r385, %r2558, %r2326;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3007, %r385, %r2569, %r2332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r385, %r2582, %r2338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3016, %r385, %r2593, %r2344;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r385, %r2604, %r2350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3025, %r385, %r2615, %r2356;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r385, %r2628, %r2362;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3034, %r385, %r2639, %r2368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r385, %r2650, %r2374;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3043, %r385, %r2661, %r2380;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r403, %r2674, %r2386;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3052, %r403, %r2685, %r2392;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r403, %r2696, %r2398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3061, %r403, %r2707, %r2404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r403, %r2720, %r2410;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3070, %r403, %r2731, %r2416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r403, %r2742, %r2422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3079, %r403, %r2753, %r2428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3091, %r403, %r2766, %r2434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3088, %r403, %r2777, %r2440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3100, %r403, %r2788, %r2446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r403, %r2799, %r2452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3109, %r403, %r2812, %r2458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3106, %r403, %r2823, %r2464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r403, %r2834, %r2470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3115, %r403, %r2845, %r2476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2976, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2978, %r2976, %r2980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2981, %r467, %r2983, %r2978;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2985, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2987, %r2985, %r2989;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2990, %r467, %r2992, %r2987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2994, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2996, %r2994, %r2998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2999, %r467, %r3001, %r2996;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3003, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3005, %r3003, %r3007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3008, %r467, %r3010, %r3005;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3012, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3014, %r3012, %r3016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3017, %r467, %r3019, %r3014;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3021, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3023, %r3021, %r3025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3026, %r467, %r3028, %r3023;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3030, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3032, %r3030, %r3034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3035, %r467, %r3037, %r3032;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3039, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3041, %r3039, %r3043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3044, %r467, %r3046, %r3041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3048, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3050, %r3048, %r3052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3053, %r470, %r3055, %r3050;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3057, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3059, %r3057, %r3061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3062, %r470, %r3064, %r3059;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3066, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3068, %r3066, %r3070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3071, %r470, %r3073, %r3068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3075, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3077, %r3075, %r3079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3080, %r470, %r3082, %r3077;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3084, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3086, %r3084, %r3088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3089, %r470, %r3091, %r3086;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3093, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3095, %r3093, %r3097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3098, %r470, %r3100, %r3095;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3102, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3104, %r3102, %r3106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3107, %r470, %r3109, %r3104;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3111, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3113, %r3111, %r3115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3116, %r470, %r3118, %r3113;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3120, %r473, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3123, %r467, %r2980, %r3120;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3127, %r473, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3130, %r467, %r2989, %r3127;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3134, %r473, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3137, %r467, %r2998, %r3134;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3141, %r473, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3144, %r467, %r3007, %r3141;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3148, %r473, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3151, %r467, %r3016, %r3148;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3155, %r473, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3158, %r467, %r3025, %r3155;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3162, %r473, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3165, %r467, %r3034, %r3162;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3169, %r473, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3172, %r467, %r3043, %r3169;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3176, %r476, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3179, %r470, %r3052, %r3176;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3183, %r476, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3186, %r470, %r3061, %r3183;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3190, %r476, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3193, %r470, %r3070, %r3190;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3197, %r476, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3200, %r470, %r3079, %r3197;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3204, %r476, %r3091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3207, %r470, %r3088, %r3204;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3211, %r476, %r3100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3214, %r470, %r3097, %r3211;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3218, %r476, %r3109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3221, %r470, %r3106, %r3218;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3225, %r476, %r3118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3228, %r470, %r3115, %r3225;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3399, %r3396}, {%r522, %r528, %r525, %r531}, {%r2981, %r3123}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3408, %r3405}, {%r522, %r528, %r525, %r531}, {%r2990, %r3130}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3417, %r3414}, {%r522, %r528, %r525, %r531}, {%r2999, %r3137}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3426, %r3423}, {%r522, %r528, %r525, %r531}, {%r3008, %r3144}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3435, %r3432}, {%r522, %r528, %r525, %r531}, {%r3017, %r3151}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3444, %r3441}, {%r522, %r528, %r525, %r531}, {%r3026, %r3158}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3453, %r3450}, {%r522, %r528, %r525, %r531}, {%r3035, %r3165}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3462, %r3459}, {%r522, %r528, %r525, %r531}, {%r3044, %r3172}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3471, %r3468}, {%r522, %r528, %r525, %r531}, {%r3053, %r3179}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3480, %r3477}, {%r522, %r528, %r525, %r531}, {%r3062, %r3186}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3489, %r3486}, {%r522, %r528, %r525, %r531}, {%r3071, %r3193}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3498, %r3495}, {%r522, %r528, %r525, %r531}, {%r3080, %r3200}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3507, %r3504}, {%r522, %r528, %r525, %r531}, {%r3089, %r3207}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3516, %r3513}, {%r522, %r528, %r525, %r531}, {%r3098, %r3214}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3525, %r3522}, {%r522, %r528, %r525, %r531}, {%r3107, %r3221}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3534, %r3531}, {%r522, %r528, %r525, %r531}, {%r3116, %r3228}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3392, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3394, %r3392, %r3396;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3397, %r572, %r3399, %r3394;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3401, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3403, %r3401, %r3405;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3406, %r572, %r3408, %r3403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3410, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3412, %r3410, %r3414;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3415, %r572, %r3417, %r3412;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3419, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3421, %r3419, %r3423;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3424, %r572, %r3426, %r3421;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3428, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3430, %r3428, %r3432;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3433, %r572, %r3435, %r3430;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3437, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3439, %r3437, %r3441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3442, %r572, %r3444, %r3439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3446, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3448, %r3446, %r3450;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3451, %r572, %r3453, %r3448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3455, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3457, %r3455, %r3459;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3460, %r572, %r3462, %r3457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3464, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3466, %r3464, %r3468;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3469, %r572, %r3471, %r3466;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3473, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3475, %r3473, %r3477;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3478, %r572, %r3480, %r3475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3482, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3484, %r3482, %r3486;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3487, %r572, %r3489, %r3484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3491, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3493, %r3491, %r3495;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3496, %r572, %r3498, %r3493;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3500, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3502, %r3500, %r3504;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3505, %r572, %r3507, %r3502;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3509, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3511, %r3509, %r3513;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3514, %r572, %r3516, %r3511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3518, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3520, %r3518, %r3522;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3523, %r572, %r3525, %r3520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3527, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3529, %r3527, %r3531;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3532, %r572, %r3534, %r3529;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3536, %r575, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3539, %r572, %r3396, %r3536;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3543, %r575, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3546, %r572, %r3405, %r3543;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3550, %r575, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3553, %r572, %r3414, %r3550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3557, %r575, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3560, %r572, %r3423, %r3557;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3564, %r575, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3567, %r572, %r3432, %r3564;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3571, %r575, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3574, %r572, %r3441, %r3571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3578, %r575, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3581, %r572, %r3450, %r3578;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3585, %r575, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3588, %r572, %r3459, %r3585;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3592, %r575, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3595, %r572, %r3468, %r3592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3599, %r575, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3602, %r572, %r3477, %r3599;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3606, %r575, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3609, %r572, %r3486, %r3606;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3613, %r575, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3616, %r572, %r3495, %r3613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3620, %r575, %r3507;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3623, %r572, %r3504, %r3620;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3627, %r575, %r3516;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3630, %r572, %r3513, %r3627;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3634, %r575, %r3525;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3637, %r572, %r3522, %r3634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3641, %r575, %r3534;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3644, %r572, %r3531, %r3641;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3937, %r3940}, {%r610, %r616, %r613, %r619}, {%r3397, %r3539}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3943, %r3946}, {%r610, %r616, %r613, %r619}, {%r3406, %r3546}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3949, %r3952}, {%r610, %r616, %r613, %r619}, {%r3415, %r3553}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3955, %r3958}, {%r610, %r616, %r613, %r619}, {%r3424, %r3560}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3961, %r3964}, {%r610, %r616, %r613, %r619}, {%r3433, %r3567}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3967, %r3970}, {%r610, %r616, %r613, %r619}, {%r3442, %r3574}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3973, %r3976}, {%r610, %r616, %r613, %r619}, {%r3451, %r3581}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3979, %r3982}, {%r610, %r616, %r613, %r619}, {%r3460, %r3588}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3938, %r3941}, {%r610, %r616, %r613, %r619}, {%r3469, %r3595}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3944, %r3947}, {%r610, %r616, %r613, %r619}, {%r3478, %r3602}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3950, %r3953}, {%r610, %r616, %r613, %r619}, {%r3487, %r3609}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3956, %r3959}, {%r610, %r616, %r613, %r619}, {%r3496, %r3616}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3962, %r3965}, {%r610, %r616, %r613, %r619}, {%r3505, %r3623}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3968, %r3971}, {%r610, %r616, %r613, %r619}, {%r3514, %r3630}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3974, %r3977}, {%r610, %r616, %r613, %r619}, {%r3523, %r3637}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3980, %r3983}, {%r610, %r616, %r613, %r619}, {%r3532, %r3644}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3936, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3951, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3954, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3957, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3960, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3963, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3966, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3969, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3972, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3975, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3978, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3981, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3984, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3999, %r3952, %r3953;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4002, %r3955, %r3956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4005, %r3958, %r3959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4008, %r3961, %r3962;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4011, %r3964, %r3965;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4014, %r3967, %r3968;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4017, %r3970, %r3971;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4020, %r3973, %r3974;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4023, %r3976, %r3977;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4026, %r3979, %r3980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4029, %r3982, %r3983;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r186, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r186, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r186, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r186, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r186, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r186, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r186, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r186, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r186, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r186, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r186, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r186, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r186, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r186, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r186, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r186, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r188, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r188, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r188, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r188, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r188, %r3996;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4095, %r188, %r3999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4098, %r188, %r4002;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4101, %r188, %r4005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4104, %r188, %r4008;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4107, %r188, %r4011;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4110, %r188, %r4014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4113, %r188, %r4017;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4116, %r188, %r4020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4119, %r188, %r4023;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4122, %r188, %r4026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4125, %r188, %r4029;
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4129, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4130, %r4032, %r4128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4133, %r4130, %r4129;
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4137, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4138, %r4035, %r4136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4141, %r4138, %r4137;
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4145, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4146, %r4038, %r4144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4149, %r4146, %r4145;
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4153, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4154, %r4041, %r4152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4157, %r4154, %r4153;
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4161, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4162, %r4044, %r4160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4165, %r4162, %r4161;
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4169, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4170, %r4047, %r4168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4173, %r4170, %r4169;
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4177, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4178, %r4050, %r4176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4181, %r4178, %r4177;
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4185, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4186, %r4053, %r4184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4189, %r4186, %r4185;
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4193, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4194, %r4056, %r4192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4197, %r4194, %r4193;
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4201, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4202, %r4059, %r4200;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4205, %r4202, %r4201;
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4209, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4210, %r4062, %r4208;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4213, %r4210, %r4209;
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4217, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4218, %r4065, %r4216;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4221, %r4218, %r4217;
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4225, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4226, %r4068, %r4224;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4229, %r4226, %r4225;
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4233, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4234, %r4071, %r4232;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4237, %r4234, %r4233;
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4241, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4242, %r4074, %r4240;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4245, %r4242, %r4241;
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4249, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4250, %r4077, %r4248;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4253, %r4250, %r4249;
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4257, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4258, %r4080, %r4256;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4261, %r4258, %r4257;
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4265, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4266, %r4083, %r4264;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4269, %r4266, %r4265;
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4273, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4274, %r4086, %r4272;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4277, %r4274, %r4273;
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4281, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4282, %r4089, %r4280;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4285, %r4282, %r4281;
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4289, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4290, %r4092, %r4288;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4293, %r4290, %r4289;
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4297, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4298, %r4095, %r4296;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4301, %r4298, %r4297;
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4305, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4306, %r4098, %r4304;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4309, %r4306, %r4305;
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4313, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4314, %r4101, %r4312;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4317, %r4314, %r4313;
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4321, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4322, %r4104, %r4320;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4325, %r4322, %r4321;
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4329, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4330, %r4107, %r4328;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4333, %r4330, %r4329;
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4337, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4338, %r4110, %r4336;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4341, %r4338, %r4337;
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4345, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4346, %r4113, %r4344;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4349, %r4346, %r4345;
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4353, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4354, %r4116, %r4352;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4357, %r4354, %r4353;
	// end inline asm
	// begin inline asm
	mov.b32 %r4360, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4361, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4362, %r4119, %r4360;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4365, %r4362, %r4361;
	// end inline asm
	// begin inline asm
	mov.b32 %r4368, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4369, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4370, %r4122, %r4368;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4373, %r4370, %r4369;
	// end inline asm
	// begin inline asm
	mov.b32 %r4376, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4377, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4378, %r4125, %r4376;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4381, %r4378, %r4377;
	// end inline asm
	// begin inline asm
	mov.b32 %r4387, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4386, %r4387, %r4385;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4389, %r4133, %r4386;
	// end inline asm
	// begin inline asm
	mov.b32 %r4392, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4393, %r4387, %r4392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4396, %r4141, %r4393;
	// end inline asm
	// begin inline asm
	mov.b32 %r4399, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4400, %r4387, %r4399;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4403, %r4149, %r4400;
	// end inline asm
	// begin inline asm
	mov.b32 %r4406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4407, %r4387, %r4406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4410, %r4157, %r4407;
	// end inline asm
	mov.u32 	%r4416, 25152;
	// begin inline asm
	prmt.b32 %r4413, %r4389, %r4403, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4417, %r4396, %r4410, %r4416;
	// end inline asm
	shl.b32 	%r4424, %r4417, 4;
	mov.u32 	%r4422, 252645135;
	// begin inline asm
	lop3.b32 %r4421, %r4422, %r4413, %r4424, 202;
	// end inline asm
	xor.b32  	%r16221, %r4421, -2004318072;
	// begin inline asm
	mov.b32 %r4428, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4426, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4427, %r4428, %r4426;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4430, %r4165, %r4427;
	// end inline asm
	// begin inline asm
	mov.b32 %r4433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4434, %r4428, %r4433;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4437, %r4173, %r4434;
	// end inline asm
	// begin inline asm
	mov.b32 %r4440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4441, %r4428, %r4440;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4444, %r4181, %r4441;
	// end inline asm
	// begin inline asm
	mov.b32 %r4447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4448, %r4428, %r4447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4451, %r4189, %r4448;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4454, %r4430, %r4444, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4458, %r4437, %r4451, %r4416;
	// end inline asm
	shl.b32 	%r4465, %r4458, 4;
	// begin inline asm
	lop3.b32 %r4462, %r4422, %r4454, %r4465, 202;
	// end inline asm
	xor.b32  	%r16222, %r4462, -2004318072;
	// begin inline asm
	mov.b32 %r4469, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4467, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4468, %r4469, %r4467;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4471, %r4197, %r4468;
	// end inline asm
	// begin inline asm
	mov.b32 %r4474, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4475, %r4469, %r4474;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4478, %r4205, %r4475;
	// end inline asm
	// begin inline asm
	mov.b32 %r4481, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4482, %r4469, %r4481;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4485, %r4213, %r4482;
	// end inline asm
	// begin inline asm
	mov.b32 %r4488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4489, %r4469, %r4488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4492, %r4221, %r4489;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4495, %r4471, %r4485, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4499, %r4478, %r4492, %r4416;
	// end inline asm
	shl.b32 	%r4506, %r4499, 4;
	// begin inline asm
	lop3.b32 %r4503, %r4422, %r4495, %r4506, 202;
	// end inline asm
	xor.b32  	%r16223, %r4503, -2004318072;
	// begin inline asm
	mov.b32 %r4510, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4509, %r4510, %r4508;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4512, %r4229, %r4509;
	// end inline asm
	// begin inline asm
	mov.b32 %r4515, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4516, %r4510, %r4515;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4519, %r4237, %r4516;
	// end inline asm
	// begin inline asm
	mov.b32 %r4522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4523, %r4510, %r4522;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4526, %r4245, %r4523;
	// end inline asm
	// begin inline asm
	mov.b32 %r4529, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4530, %r4510, %r4529;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4533, %r4253, %r4530;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4536, %r4512, %r4526, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4540, %r4519, %r4533, %r4416;
	// end inline asm
	shl.b32 	%r4547, %r4540, 4;
	// begin inline asm
	lop3.b32 %r4544, %r4422, %r4536, %r4547, 202;
	// end inline asm
	xor.b32  	%r16224, %r4544, -2004318072;
	// begin inline asm
	mov.b32 %r4551, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4549, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4550, %r4551, %r4549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4553, %r4261, %r4550;
	// end inline asm
	// begin inline asm
	mov.b32 %r4556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4557, %r4551, %r4556;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4560, %r4269, %r4557;
	// end inline asm
	// begin inline asm
	mov.b32 %r4563, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4564, %r4551, %r4563;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4567, %r4277, %r4564;
	// end inline asm
	// begin inline asm
	mov.b32 %r4570, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4571, %r4551, %r4570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4574, %r4285, %r4571;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4577, %r4553, %r4567, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4581, %r4560, %r4574, %r4416;
	// end inline asm
	shl.b32 	%r4588, %r4581, 4;
	// begin inline asm
	lop3.b32 %r4585, %r4422, %r4577, %r4588, 202;
	// end inline asm
	xor.b32  	%r16225, %r4585, -2004318072;
	// begin inline asm
	mov.b32 %r4592, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4591, %r4592, %r4590;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4594, %r4293, %r4591;
	// end inline asm
	// begin inline asm
	mov.b32 %r4597, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4598, %r4592, %r4597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4601, %r4301, %r4598;
	// end inline asm
	// begin inline asm
	mov.b32 %r4604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4605, %r4592, %r4604;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4608, %r4309, %r4605;
	// end inline asm
	// begin inline asm
	mov.b32 %r4611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4612, %r4592, %r4611;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4615, %r4317, %r4612;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4618, %r4594, %r4608, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4622, %r4601, %r4615, %r4416;
	// end inline asm
	shl.b32 	%r4629, %r4622, 4;
	// begin inline asm
	lop3.b32 %r4626, %r4422, %r4618, %r4629, 202;
	// end inline asm
	xor.b32  	%r16226, %r4626, -2004318072;
	// begin inline asm
	mov.b32 %r4633, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4631, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4632, %r4633, %r4631;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4635, %r4325, %r4632;
	// end inline asm
	// begin inline asm
	mov.b32 %r4638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4639, %r4633, %r4638;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4642, %r4333, %r4639;
	// end inline asm
	// begin inline asm
	mov.b32 %r4645, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4646, %r4633, %r4645;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4649, %r4341, %r4646;
	// end inline asm
	// begin inline asm
	mov.b32 %r4652, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4653, %r4633, %r4652;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4656, %r4349, %r4653;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4659, %r4635, %r4649, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4663, %r4642, %r4656, %r4416;
	// end inline asm
	shl.b32 	%r4670, %r4663, 4;
	// begin inline asm
	lop3.b32 %r4667, %r4422, %r4659, %r4670, 202;
	// end inline asm
	xor.b32  	%r16227, %r4667, -2004318072;
	// begin inline asm
	mov.b32 %r4674, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4673, %r4674, %r4672;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4676, %r4357, %r4673;
	// end inline asm
	// begin inline asm
	mov.b32 %r4679, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4680, %r4674, %r4679;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4683, %r4365, %r4680;
	// end inline asm
	// begin inline asm
	mov.b32 %r4686, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4687, %r4674, %r4686;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4690, %r4373, %r4687;
	// end inline asm
	// begin inline asm
	mov.b32 %r4693, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4694, %r4674, %r4693;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4381, %r4694;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4700, %r4676, %r4690, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4704, %r4683, %r4697, %r4416;
	// end inline asm
	shl.b32 	%r4711, %r4704, 4;
	// begin inline asm
	lop3.b32 %r4708, %r4422, %r4700, %r4711, 202;
	// end inline asm
	xor.b32  	%r16228, %r4708, -2004318072;
	add.s32 	%r16229, %r131, %r16160;
	mul.wide.u32 	%rd111, %r16229, 4;
	add.s64 	%rd112, %rd52, %rd111;
	st.shared.u32 	[%rd112], %r16221;
	add.s32 	%r16230, %r132, %r16160;
	mul.wide.u32 	%rd113, %r16230, 4;
	add.s64 	%rd114, %rd52, %rd113;
	st.shared.u32 	[%rd114], %r16222;
	add.s32 	%r16231, %r133, %r16160;
	mul.wide.u32 	%rd115, %r16231, 4;
	add.s64 	%rd116, %rd52, %rd115;
	st.shared.u32 	[%rd116], %r16223;
	add.s32 	%r16232, %r134, %r16160;
	mul.wide.u32 	%rd117, %r16232, 4;
	add.s64 	%rd118, %rd52, %rd117;
	st.shared.u32 	[%rd118], %r16224;
	add.s32 	%r16233, %r135, %r16160;
	mul.wide.u32 	%rd119, %r16233, 4;
	add.s64 	%rd120, %rd52, %rd119;
	st.shared.u32 	[%rd120], %r16225;
	add.s32 	%r16234, %r136, %r16160;
	mul.wide.u32 	%rd121, %r16234, 4;
	add.s64 	%rd122, %rd52, %rd121;
	st.shared.u32 	[%rd122], %r16226;
	add.s32 	%r16235, %r137, %r16160;
	mul.wide.u32 	%rd123, %r16235, 4;
	add.s64 	%rd124, %rd52, %rd123;
	st.shared.u32 	[%rd124], %r16227;
	add.s32 	%r16236, %r138, %r16160;
	mul.wide.u32 	%rd125, %r16236, 4;
	add.s64 	%rd126, %rd52, %rd125;
	st.shared.u32 	[%rd126], %r16228;
	ld.shared.u32 	%r16380, [%rd96];
	ld.shared.u32 	%r16381, [%rd98];
	ld.shared.u32 	%r16382, [%rd100];
	ld.shared.u32 	%r16383, [%rd102];
	ld.shared.u32 	%r16392, [%rd104];
	ld.shared.u32 	%r16393, [%rd106];
	ld.shared.u32 	%r16394, [%rd108];
	ld.shared.u32 	%r16395, [%rd110];
	// begin inline asm
	mov.b32 %r4717, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4728, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4716, %r16380, -2004318072;
	// begin inline asm
	lop3.b32 %r4714, %r899, %r4716, %r4717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4717, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4725, %r910, %r4716, %r4728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4730, %r4728, %r4729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4733, %r4725, %r4730;
	// end inline asm
	shr.u32 	%r4738, %r4716, 8;
	// begin inline asm
	lop3.b32 %r4736, %r899, %r4738, %r4717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4741, %r4717, %r4740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4744, %r4736, %r4741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4747, %r910, %r4738, %r4728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4752, %r4728, %r4751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4755, %r4747, %r4752;
	// end inline asm
	// begin inline asm
	mov.b32 %r4763, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4774, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4762, %r16381, -2004318072;
	// begin inline asm
	lop3.b32 %r4760, %r899, %r4762, %r4763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4765, %r4763, %r4764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4768, %r4760, %r4765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4771, %r910, %r4762, %r4774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4776, %r4774, %r4775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4779, %r4771, %r4776;
	// end inline asm
	shr.u32 	%r4784, %r4762, 8;
	// begin inline asm
	lop3.b32 %r4782, %r899, %r4784, %r4763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4787, %r4763, %r4786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4790, %r4782, %r4787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4793, %r910, %r4784, %r4774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4798, %r4774, %r4797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4801, %r4793, %r4798;
	// end inline asm
	// begin inline asm
	mov.b32 %r4809, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4820, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4808, %r16382, -2004318072;
	// begin inline asm
	lop3.b32 %r4806, %r899, %r4808, %r4809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4811, %r4809, %r4810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4814, %r4806, %r4811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4817, %r910, %r4808, %r4820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4822, %r4820, %r4821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4825, %r4817, %r4822;
	// end inline asm
	shr.u32 	%r4830, %r4808, 8;
	// begin inline asm
	lop3.b32 %r4828, %r899, %r4830, %r4809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4833, %r4809, %r4832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4836, %r4828, %r4833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4839, %r910, %r4830, %r4820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4844, %r4820, %r4843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4847, %r4839, %r4844;
	// end inline asm
	// begin inline asm
	mov.b32 %r4855, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4866, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4854, %r16383, -2004318072;
	// begin inline asm
	lop3.b32 %r4852, %r899, %r4854, %r4855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4857, %r4855, %r4856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4860, %r4852, %r4857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4863, %r910, %r4854, %r4866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4868, %r4866, %r4867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4871, %r4863, %r4868;
	// end inline asm
	shr.u32 	%r4876, %r4854, 8;
	// begin inline asm
	lop3.b32 %r4874, %r899, %r4876, %r4855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4879, %r4855, %r4878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4882, %r4874, %r4879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4885, %r910, %r4876, %r4866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4890, %r4866, %r4889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4893, %r4885, %r4890;
	// end inline asm
	// begin inline asm
	mov.b32 %r4901, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4912, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4900, %r16392, -2004318072;
	// begin inline asm
	lop3.b32 %r4898, %r899, %r4900, %r4901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4903, %r4901, %r4902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4906, %r4898, %r4903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4909, %r910, %r4900, %r4912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4914, %r4912, %r4913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4917, %r4909, %r4914;
	// end inline asm
	shr.u32 	%r4922, %r4900, 8;
	// begin inline asm
	lop3.b32 %r4920, %r899, %r4922, %r4901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4925, %r4901, %r4924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4928, %r4920, %r4925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4931, %r910, %r4922, %r4912, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4936, %r4912, %r4935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4939, %r4931, %r4936;
	// end inline asm
	// begin inline asm
	mov.b32 %r4947, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4958, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4946, %r16393, -2004318072;
	// begin inline asm
	lop3.b32 %r4944, %r899, %r4946, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4949, %r4947, %r4948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4952, %r4944, %r4949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4955, %r910, %r4946, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4960, %r4958, %r4959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4963, %r4955, %r4960;
	// end inline asm
	shr.u32 	%r4968, %r4946, 8;
	// begin inline asm
	lop3.b32 %r4966, %r899, %r4968, %r4947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4971, %r4947, %r4970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4974, %r4966, %r4971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4977, %r910, %r4968, %r4958, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4982, %r4958, %r4981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4985, %r4977, %r4982;
	// end inline asm
	// begin inline asm
	mov.b32 %r4993, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5004, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4992, %r16394, -2004318072;
	// begin inline asm
	lop3.b32 %r4990, %r899, %r4992, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4995, %r4993, %r4994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4998, %r4990, %r4995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5001, %r910, %r4992, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5006, %r5004, %r5005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5009, %r5001, %r5006;
	// end inline asm
	shr.u32 	%r5014, %r4992, 8;
	// begin inline asm
	lop3.b32 %r5012, %r899, %r5014, %r4993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5017, %r4993, %r5016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5020, %r5012, %r5017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5023, %r910, %r5014, %r5004, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5028, %r5004, %r5027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5031, %r5023, %r5028;
	// end inline asm
	// begin inline asm
	mov.b32 %r5039, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5050, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5038, %r16395, -2004318072;
	// begin inline asm
	lop3.b32 %r5036, %r899, %r5038, %r5039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5041, %r5039, %r5040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5044, %r5036, %r5041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5047, %r910, %r5038, %r5050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5052, %r5050, %r5051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5055, %r5047, %r5052;
	// end inline asm
	shr.u32 	%r5060, %r5038, 8;
	// begin inline asm
	lop3.b32 %r5058, %r899, %r5060, %r5039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5063, %r5039, %r5062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5066, %r5058, %r5063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5069, %r910, %r5060, %r5050, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5074, %r5050, %r5073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5077, %r5069, %r5074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5080, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5082, %r5080, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5085, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5087, %r5085, %r4733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5090, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5092, %r5090, %r4744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5095, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5097, %r5095, %r4755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5100, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5102, %r5100, %r4768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5105, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5107, %r5105, %r4779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5110, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5112, %r5110, %r4790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5115, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5117, %r5115, %r4801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5120, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5122, %r5120, %r4814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5125, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5127, %r5125, %r4825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5130, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5132, %r5130, %r4836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5135, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5137, %r5135, %r4847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5140, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5142, %r5140, %r4860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5145, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5147, %r5145, %r4871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5150, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5152, %r5150, %r4882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5155, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5157, %r5155, %r4893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5160, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5162, %r5160, %r4906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5165, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5167, %r5165, %r4917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5170, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5172, %r5170, %r4928;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5175, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5177, %r5175, %r4939;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5180, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5182, %r5180, %r4952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5185, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5187, %r5185, %r4963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5190, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5192, %r5190, %r4974;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5195, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5197, %r5195, %r4985;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5200, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5202, %r5200, %r4998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5205, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5207, %r5205, %r5009;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5210, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5212, %r5210, %r5020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5215, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5217, %r5215, %r5031;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5220, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5222, %r5220, %r5044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5225, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5227, %r5225, %r5055;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5230, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5232, %r5230, %r5066;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5235, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5237, %r5235, %r5077;
	// end inline asm
	// begin inline asm
	mov.b32 %r5245, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5256, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5242, %r899, %r1924, %r5245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5247, %r5245, %r5246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5250, %r5242, %r5247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5253, %r910, %r1924, %r5256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5258, %r5256, %r5257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5261, %r5253, %r5258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5264, %r899, %r1946, %r5245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5269, %r5245, %r5268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5272, %r5264, %r5269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5275, %r910, %r1946, %r5256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5280, %r5256, %r5279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5283, %r5275, %r5280;
	// end inline asm
	// begin inline asm
	mov.b32 %r5291, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5302, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5288, %r899, %r1970, %r5291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5293, %r5291, %r5292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5296, %r5288, %r5293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5299, %r910, %r1970, %r5302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5304, %r5302, %r5303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5307, %r5299, %r5304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5310, %r899, %r1992, %r5291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5315, %r5291, %r5314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5318, %r5310, %r5315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5321, %r910, %r1992, %r5302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5326, %r5302, %r5325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5329, %r5321, %r5326;
	// end inline asm
	// begin inline asm
	mov.b32 %r5337, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5348, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5334, %r899, %r2016, %r5337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5339, %r5337, %r5338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5342, %r5334, %r5339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5345, %r910, %r2016, %r5348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5350, %r5348, %r5349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5353, %r5345, %r5350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5356, %r899, %r2038, %r5337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5361, %r5337, %r5360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5364, %r5356, %r5361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5367, %r910, %r2038, %r5348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5372, %r5348, %r5371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5375, %r5367, %r5372;
	// end inline asm
	// begin inline asm
	mov.b32 %r5383, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5394, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5380, %r899, %r2062, %r5383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5385, %r5383, %r5384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5388, %r5380, %r5385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5391, %r910, %r2062, %r5394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5396, %r5394, %r5395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5399, %r5391, %r5396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5402, %r899, %r2084, %r5383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5407, %r5383, %r5406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5410, %r5402, %r5407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5413, %r910, %r2084, %r5394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5418, %r5394, %r5417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5421, %r5413, %r5418;
	// end inline asm
	// begin inline asm
	mov.b32 %r5429, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5440, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5426, %r899, %r2108, %r5429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5431, %r5429, %r5430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5434, %r5426, %r5431;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5437, %r910, %r2108, %r5440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5442, %r5440, %r5441;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5445, %r5437, %r5442;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5448, %r899, %r2130, %r5429, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5452, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5453, %r5429, %r5452;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5456, %r5448, %r5453;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5459, %r910, %r2130, %r5440, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5463, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5464, %r5440, %r5463;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5467, %r5459, %r5464;
	// end inline asm
	// begin inline asm
	mov.b32 %r5475, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5486, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5472, %r899, %r2154, %r5475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5477, %r5475, %r5476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5480, %r5472, %r5477;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5483, %r910, %r2154, %r5486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5487, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5488, %r5486, %r5487;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5491, %r5483, %r5488;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5494, %r899, %r2176, %r5475, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5498, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5499, %r5475, %r5498;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5502, %r5494, %r5499;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5505, %r910, %r2176, %r5486, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5510, %r5486, %r5509;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5513, %r5505, %r5510;
	// end inline asm
	// begin inline asm
	mov.b32 %r5521, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5532, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5518, %r899, %r2200, %r5521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5523, %r5521, %r5522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5526, %r5518, %r5523;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5529, %r910, %r2200, %r5532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5533, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5534, %r5532, %r5533;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5537, %r5529, %r5534;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5540, %r899, %r2222, %r5521, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5544, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5545, %r5521, %r5544;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5548, %r5540, %r5545;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5551, %r910, %r2222, %r5532, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5555, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5556, %r5532, %r5555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5559, %r5551, %r5556;
	// end inline asm
	// begin inline asm
	mov.b32 %r5567, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5578, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5564, %r899, %r2246, %r5567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5569, %r5567, %r5568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5572, %r5564, %r5569;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5575, %r910, %r2246, %r5578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5579, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5580, %r5578, %r5579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5583, %r5575, %r5580;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5586, %r899, %r2268, %r5567, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5590, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5591, %r5567, %r5590;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5594, %r5586, %r5591;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5597, %r910, %r2268, %r5578, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5601, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5602, %r5578, %r5601;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5605, %r5597, %r5602;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5608, %r313, %r5250, %r5082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5612, %r313, %r5261, %r5087;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5616, %r313, %r5272, %r5092;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5620, %r313, %r5283, %r5097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5624, %r313, %r5296, %r5102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5628, %r313, %r5307, %r5107;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5632, %r313, %r5318, %r5112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5636, %r313, %r5329, %r5117;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5640, %r313, %r5342, %r5122;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5644, %r313, %r5353, %r5127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5648, %r313, %r5364, %r5132;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5652, %r313, %r5375, %r5137;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5656, %r313, %r5388, %r5142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5660, %r313, %r5399, %r5147;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5664, %r313, %r5410, %r5152;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5668, %r313, %r5421, %r5157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5672, %r331, %r5434, %r5162;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5676, %r331, %r5445, %r5167;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5680, %r331, %r5456, %r5172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5684, %r331, %r5467, %r5177;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5688, %r331, %r5480, %r5182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5692, %r331, %r5491, %r5187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5696, %r331, %r5502, %r5192;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5700, %r331, %r5513, %r5197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5704, %r331, %r5526, %r5202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5708, %r331, %r5537, %r5207;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5712, %r331, %r5548, %r5212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5716, %r331, %r5559, %r5217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5720, %r331, %r5572, %r5222;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5724, %r331, %r5583, %r5227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5728, %r331, %r5594, %r5232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5732, %r331, %r5605, %r5237;
	// end inline asm
	// begin inline asm
	mov.b32 %r5741, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5752, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5738, %r899, %r2484, %r5741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5743, %r5741, %r5742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5746, %r5738, %r5743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5749, %r910, %r2484, %r5752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5754, %r5752, %r5753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5757, %r5749, %r5754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5760, %r899, %r2506, %r5741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5765, %r5741, %r5764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5768, %r5760, %r5765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5771, %r910, %r2506, %r5752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5776, %r5752, %r5775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5779, %r5771, %r5776;
	// end inline asm
	// begin inline asm
	mov.b32 %r5787, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5798, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5784, %r899, %r2530, %r5787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5789, %r5787, %r5788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5792, %r5784, %r5789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5795, %r910, %r2530, %r5798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5800, %r5798, %r5799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5803, %r5795, %r5800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5806, %r899, %r2552, %r5787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5811, %r5787, %r5810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5814, %r5806, %r5811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5817, %r910, %r2552, %r5798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5822, %r5798, %r5821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5825, %r5817, %r5822;
	// end inline asm
	// begin inline asm
	mov.b32 %r5833, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5844, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5830, %r899, %r2576, %r5833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5835, %r5833, %r5834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5838, %r5830, %r5835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5841, %r910, %r2576, %r5844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5846, %r5844, %r5845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5849, %r5841, %r5846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5852, %r899, %r2598, %r5833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5857, %r5833, %r5856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5860, %r5852, %r5857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5863, %r910, %r2598, %r5844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5868, %r5844, %r5867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5871, %r5863, %r5868;
	// end inline asm
	// begin inline asm
	mov.b32 %r5879, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5890, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5876, %r899, %r2622, %r5879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5879, %r5880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5884, %r5876, %r5881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5887, %r910, %r2622, %r5890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5892, %r5890, %r5891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5895, %r5887, %r5892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5898, %r899, %r2644, %r5879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5903, %r5879, %r5902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5906, %r5898, %r5903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5909, %r910, %r2644, %r5890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5914, %r5890, %r5913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5917, %r5909, %r5914;
	// end inline asm
	// begin inline asm
	mov.b32 %r5925, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5936, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5922, %r899, %r2668, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5925, %r5926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5930, %r5922, %r5927;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5933, %r910, %r2668, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5938, %r5936, %r5937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5941, %r5933, %r5938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5944, %r899, %r2690, %r5925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5949, %r5925, %r5948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5952, %r5944, %r5949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5955, %r910, %r2690, %r5936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5960, %r5936, %r5959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5963, %r5955, %r5960;
	// end inline asm
	// begin inline asm
	mov.b32 %r5971, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5982, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5968, %r899, %r2714, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5971, %r5972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5976, %r5968, %r5973;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5979, %r910, %r2714, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5984, %r5982, %r5983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5987, %r5979, %r5984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5990, %r899, %r2736, %r5971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5995, %r5971, %r5994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5998, %r5990, %r5995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6001, %r910, %r2736, %r5982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6006, %r5982, %r6005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6009, %r6001, %r6006;
	// end inline asm
	// begin inline asm
	mov.b32 %r6017, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6028, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6014, %r899, %r2760, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r6017, %r6018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6022, %r6014, %r6019;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6025, %r910, %r2760, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6030, %r6028, %r6029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6033, %r6025, %r6030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6036, %r899, %r2782, %r6017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6041, %r6017, %r6040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6044, %r6036, %r6041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6047, %r910, %r2782, %r6028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6052, %r6028, %r6051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6055, %r6047, %r6052;
	// end inline asm
	// begin inline asm
	mov.b32 %r6063, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6074, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6060, %r899, %r2806, %r6063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6065, %r6063, %r6064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6068, %r6060, %r6065;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6071, %r910, %r2806, %r6074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6076, %r6074, %r6075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6079, %r6071, %r6076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6082, %r899, %r2828, %r6063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6087, %r6063, %r6086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6090, %r6082, %r6087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6093, %r910, %r2828, %r6074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6098, %r6074, %r6097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6101, %r6093, %r6098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6104, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6106, %r6104, %r5746, %r5608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6110, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6112, %r6110, %r5757, %r5612;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6116, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6118, %r6116, %r5768, %r5616;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6122, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6124, %r6122, %r5779, %r5620;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6128, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6130, %r6128, %r5792, %r5624;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6134, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6136, %r6134, %r5803, %r5628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6140, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6142, %r6140, %r5814, %r5632;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6146, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6148, %r6146, %r5825, %r5636;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6152, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6154, %r6152, %r5838, %r5640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6158, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6160, %r6158, %r5849, %r5644;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6164, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6166, %r6164, %r5860, %r5648;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6170, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6172, %r6170, %r5871, %r5652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6176, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6178, %r6176, %r5884, %r5656;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6182, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6184, %r6182, %r5895, %r5660;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6188, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6190, %r6188, %r5906, %r5664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6194, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6196, %r6194, %r5917, %r5668;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6200, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6202, %r6200, %r5930, %r5672;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6206, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6208, %r6206, %r5941, %r5676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6212, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6214, %r6212, %r5952, %r5680;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6218, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6220, %r6218, %r5963, %r5684;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6224, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6226, %r6224, %r5976, %r5688;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6230, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6232, %r6230, %r5987, %r5692;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6236, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6238, %r6236, %r5998, %r5696;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6242, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6244, %r6242, %r6009, %r5700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6248, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6250, %r6248, %r6022, %r5704;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6254, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6256, %r6254, %r6033, %r5708;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6260, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6262, %r6260, %r6044, %r5712;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6266, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6268, %r6266, %r6055, %r5716;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6272, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6274, %r6272, %r6068, %r5720;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6278, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6280, %r6278, %r6079, %r5724;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6284, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6286, %r6284, %r6090, %r5728;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6290, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6292, %r6290, %r6101, %r5732;
	// end inline asm
	// begin inline asm
	mov.b32 %r6301, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6312, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6298, %r899, %r900, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6303, %r6301, %r6302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6306, %r6298, %r6303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6309, %r910, %r900, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6314, %r6312, %r6313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6317, %r6309, %r6314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6320, %r899, %r922, %r6301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6325, %r6301, %r6324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6328, %r6320, %r6325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6331, %r910, %r922, %r6312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6336, %r6312, %r6335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6339, %r6331, %r6336;
	// end inline asm
	// begin inline asm
	mov.b32 %r6347, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6358, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6344, %r899, %r946, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6349, %r6347, %r6348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6352, %r6344, %r6349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6355, %r910, %r946, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6360, %r6358, %r6359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6363, %r6355, %r6360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6366, %r899, %r968, %r6347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6371, %r6347, %r6370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6374, %r6366, %r6371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6377, %r910, %r968, %r6358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6382, %r6358, %r6381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6385, %r6377, %r6382;
	// end inline asm
	// begin inline asm
	mov.b32 %r6393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6404, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6390, %r899, %r992, %r6393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6395, %r6393, %r6394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6398, %r6390, %r6395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6401, %r910, %r992, %r6404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6406, %r6404, %r6405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6409, %r6401, %r6406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6412, %r899, %r1014, %r6393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6417, %r6393, %r6416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6420, %r6412, %r6417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6423, %r910, %r1014, %r6404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6428, %r6404, %r6427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6431, %r6423, %r6428;
	// end inline asm
	// begin inline asm
	mov.b32 %r6439, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6450, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6436, %r899, %r1038, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6441, %r6439, %r6440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6444, %r6436, %r6441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6447, %r910, %r1038, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6452, %r6450, %r6451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6455, %r6447, %r6452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6458, %r899, %r1060, %r6439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6463, %r6439, %r6462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6466, %r6458, %r6463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6469, %r910, %r1060, %r6450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6474, %r6450, %r6473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6477, %r6469, %r6474;
	// end inline asm
	// begin inline asm
	mov.b32 %r6485, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6496, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r899, %r1084, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6485, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6493, %r910, %r1084, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6497, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6498, %r6496, %r6497;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6501, %r6493, %r6498;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6504, %r899, %r1106, %r6485, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6508, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6509, %r6485, %r6508;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6512, %r6504, %r6509;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6515, %r910, %r1106, %r6496, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6519, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6520, %r6496, %r6519;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6523, %r6515, %r6520;
	// end inline asm
	// begin inline asm
	mov.b32 %r6531, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6542, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r899, %r1130, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6531, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6539, %r910, %r1130, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6543, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6544, %r6542, %r6543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6547, %r6539, %r6544;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6550, %r899, %r1152, %r6531, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6554, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6555, %r6531, %r6554;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6558, %r6550, %r6555;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6561, %r910, %r1152, %r6542, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6565, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6566, %r6542, %r6565;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6569, %r6561, %r6566;
	// end inline asm
	// begin inline asm
	mov.b32 %r6577, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6588, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r899, %r1176, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6577, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6585, %r910, %r1176, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6589, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6590, %r6588, %r6589;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6593, %r6585, %r6590;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6596, %r899, %r1198, %r6577, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6600, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6601, %r6577, %r6600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6604, %r6596, %r6601;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6607, %r910, %r1198, %r6588, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6611, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6612, %r6588, %r6611;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6615, %r6607, %r6612;
	// end inline asm
	// begin inline asm
	mov.b32 %r6623, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6634, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6620, %r899, %r1222, %r6623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6625, %r6623, %r6624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6628, %r6620, %r6625;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6631, %r910, %r1222, %r6634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6635, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6636, %r6634, %r6635;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6639, %r6631, %r6636;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6642, %r899, %r1244, %r6623, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6647, %r6623, %r6646;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6650, %r6642, %r6647;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6653, %r910, %r1244, %r6634, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6657, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6658, %r6634, %r6657;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6661, %r6653, %r6658;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r385, %r6306, %r6106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6796, %r385, %r6317, %r6112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r385, %r6328, %r6118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6805, %r385, %r6339, %r6124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r385, %r6352, %r6130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6814, %r385, %r6363, %r6136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r385, %r6374, %r6142;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6823, %r385, %r6385, %r6148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r385, %r6398, %r6154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6832, %r385, %r6409, %r6160;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r385, %r6420, %r6166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6841, %r385, %r6431, %r6172;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r385, %r6444, %r6178;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6850, %r385, %r6455, %r6184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r385, %r6466, %r6190;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6859, %r385, %r6477, %r6196;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r403, %r6490, %r6202;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6868, %r403, %r6501, %r6208;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r403, %r6512, %r6214;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6877, %r403, %r6523, %r6220;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r403, %r6536, %r6226;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6886, %r403, %r6547, %r6232;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r403, %r6558, %r6238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6895, %r403, %r6569, %r6244;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6907, %r403, %r6582, %r6250;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6904, %r403, %r6593, %r6256;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6916, %r403, %r6604, %r6262;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r403, %r6615, %r6268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6925, %r403, %r6628, %r6274;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6922, %r403, %r6639, %r6280;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r403, %r6650, %r6286;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6931, %r403, %r6661, %r6292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6792, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6794, %r6792, %r6796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6797, %r467, %r6799, %r6794;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6801, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6803, %r6801, %r6805;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6806, %r467, %r6808, %r6803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6810, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6812, %r6810, %r6814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6815, %r467, %r6817, %r6812;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6819, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6821, %r6819, %r6823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6824, %r467, %r6826, %r6821;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6828, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6830, %r6828, %r6832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6833, %r467, %r6835, %r6830;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6837, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6839, %r6837, %r6841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6842, %r467, %r6844, %r6839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6846, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6848, %r6846, %r6850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6851, %r467, %r6853, %r6848;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6855, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6857, %r6855, %r6859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6860, %r467, %r6862, %r6857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6864, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6866, %r6864, %r6868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6869, %r470, %r6871, %r6866;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6873, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6875, %r6873, %r6877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6878, %r470, %r6880, %r6875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6882, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6884, %r6882, %r6886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6887, %r470, %r6889, %r6884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6891, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6893, %r6891, %r6895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6896, %r470, %r6898, %r6893;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6900, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6902, %r6900, %r6904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6905, %r470, %r6907, %r6902;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6909, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6911, %r6909, %r6913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6914, %r470, %r6916, %r6911;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6918, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6920, %r6918, %r6922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6923, %r470, %r6925, %r6920;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6927, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6929, %r6927, %r6931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6932, %r470, %r6934, %r6929;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6936, %r473, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6939, %r467, %r6796, %r6936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6943, %r473, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6946, %r467, %r6805, %r6943;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6950, %r473, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6953, %r467, %r6814, %r6950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6957, %r473, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6960, %r467, %r6823, %r6957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6964, %r473, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6967, %r467, %r6832, %r6964;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6971, %r473, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6974, %r467, %r6841, %r6971;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6978, %r473, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6981, %r467, %r6850, %r6978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6985, %r473, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6988, %r467, %r6859, %r6985;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6992, %r476, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6995, %r470, %r6868, %r6992;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6999, %r476, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7002, %r470, %r6877, %r6999;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7006, %r476, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7009, %r470, %r6886, %r7006;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7013, %r476, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7016, %r470, %r6895, %r7013;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7020, %r476, %r6907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7023, %r470, %r6904, %r7020;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7027, %r476, %r6916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7030, %r470, %r6913, %r7027;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7034, %r476, %r6925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7037, %r470, %r6922, %r7034;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7041, %r476, %r6934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7044, %r470, %r6931, %r7041;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7215, %r7212}, {%r522, %r528, %r525, %r531}, {%r6797, %r6939}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7224, %r7221}, {%r522, %r528, %r525, %r531}, {%r6806, %r6946}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7233, %r7230}, {%r522, %r528, %r525, %r531}, {%r6815, %r6953}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7242, %r7239}, {%r522, %r528, %r525, %r531}, {%r6824, %r6960}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7251, %r7248}, {%r522, %r528, %r525, %r531}, {%r6833, %r6967}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7260, %r7257}, {%r522, %r528, %r525, %r531}, {%r6842, %r6974}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7269, %r7266}, {%r522, %r528, %r525, %r531}, {%r6851, %r6981}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7278, %r7275}, {%r522, %r528, %r525, %r531}, {%r6860, %r6988}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7287, %r7284}, {%r522, %r528, %r525, %r531}, {%r6869, %r6995}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7296, %r7293}, {%r522, %r528, %r525, %r531}, {%r6878, %r7002}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7305, %r7302}, {%r522, %r528, %r525, %r531}, {%r6887, %r7009}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7314, %r7311}, {%r522, %r528, %r525, %r531}, {%r6896, %r7016}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7323, %r7320}, {%r522, %r528, %r525, %r531}, {%r6905, %r7023}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7332, %r7329}, {%r522, %r528, %r525, %r531}, {%r6914, %r7030}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7341, %r7338}, {%r522, %r528, %r525, %r531}, {%r6923, %r7037}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7350, %r7347}, {%r522, %r528, %r525, %r531}, {%r6932, %r7044}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7208, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7210, %r7208, %r7212;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7213, %r572, %r7215, %r7210;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7217, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7219, %r7217, %r7221;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7222, %r572, %r7224, %r7219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7226, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7228, %r7226, %r7230;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7231, %r572, %r7233, %r7228;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7235, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7237, %r7235, %r7239;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7240, %r572, %r7242, %r7237;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7244, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7246, %r7244, %r7248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7249, %r572, %r7251, %r7246;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7253, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7255, %r7253, %r7257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7258, %r572, %r7260, %r7255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7262, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7264, %r7262, %r7266;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7267, %r572, %r7269, %r7264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7271, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7273, %r7271, %r7275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7276, %r572, %r7278, %r7273;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7280, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7282, %r7280, %r7284;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7285, %r572, %r7287, %r7282;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7289, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7291, %r7289, %r7293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7294, %r572, %r7296, %r7291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7298, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7300, %r7298, %r7302;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7303, %r572, %r7305, %r7300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7307, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7309, %r7307, %r7311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7312, %r572, %r7314, %r7309;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7316, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7318, %r7316, %r7320;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7321, %r572, %r7323, %r7318;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7325, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7327, %r7325, %r7329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7330, %r572, %r7332, %r7327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7334, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7336, %r7334, %r7338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7339, %r572, %r7341, %r7336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7343, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7345, %r7343, %r7347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7348, %r572, %r7350, %r7345;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7352, %r575, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7355, %r572, %r7212, %r7352;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7359, %r575, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7362, %r572, %r7221, %r7359;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7366, %r575, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7369, %r572, %r7230, %r7366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7373, %r575, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7376, %r572, %r7239, %r7373;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7380, %r575, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7383, %r572, %r7248, %r7380;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7387, %r575, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7390, %r572, %r7257, %r7387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7394, %r575, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7397, %r572, %r7266, %r7394;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7401, %r575, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7404, %r572, %r7275, %r7401;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7408, %r575, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7411, %r572, %r7284, %r7408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7415, %r575, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7418, %r572, %r7293, %r7415;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7422, %r575, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7425, %r572, %r7302, %r7422;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7429, %r575, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7432, %r572, %r7311, %r7429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7436, %r575, %r7323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7439, %r572, %r7320, %r7436;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7443, %r575, %r7332;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7446, %r572, %r7329, %r7443;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7450, %r575, %r7341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7453, %r572, %r7338, %r7450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7457, %r575, %r7350;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7460, %r572, %r7347, %r7457;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7753, %r7756}, {%r610, %r616, %r613, %r619}, {%r7213, %r7355}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7759, %r7762}, {%r610, %r616, %r613, %r619}, {%r7222, %r7362}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7765, %r7768}, {%r610, %r616, %r613, %r619}, {%r7231, %r7369}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7771, %r7774}, {%r610, %r616, %r613, %r619}, {%r7240, %r7376}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7777, %r7780}, {%r610, %r616, %r613, %r619}, {%r7249, %r7383}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7783, %r7786}, {%r610, %r616, %r613, %r619}, {%r7258, %r7390}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7789, %r7792}, {%r610, %r616, %r613, %r619}, {%r7267, %r7397}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7795, %r7798}, {%r610, %r616, %r613, %r619}, {%r7276, %r7404}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7754, %r7757}, {%r610, %r616, %r613, %r619}, {%r7285, %r7411}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7760, %r7763}, {%r610, %r616, %r613, %r619}, {%r7294, %r7418}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7766, %r7769}, {%r610, %r616, %r613, %r619}, {%r7303, %r7425}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7772, %r7775}, {%r610, %r616, %r613, %r619}, {%r7312, %r7432}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7778, %r7781}, {%r610, %r616, %r613, %r619}, {%r7321, %r7439}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7784, %r7787}, {%r610, %r616, %r613, %r619}, {%r7330, %r7446}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7790, %r7793}, {%r610, %r616, %r613, %r619}, {%r7339, %r7453}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7796, %r7799}, {%r610, %r616, %r613, %r619}, {%r7348, %r7460}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7767, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7770, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7773, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7776, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7779, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7782, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7785, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7788, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7791, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7794, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7797, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7800, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7815, %r7768, %r7769;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7818, %r7771, %r7772;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7821, %r7774, %r7775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7824, %r7777, %r7778;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7827, %r7780, %r7781;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7830, %r7783, %r7784;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7833, %r7786, %r7787;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7836, %r7789, %r7790;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7839, %r7792, %r7793;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7842, %r7795, %r7796;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7845, %r7798, %r7799;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r186, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r186, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r186, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r186, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r186, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r186, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r186, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r186, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r186, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r186, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r186, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r186, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r186, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r186, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r186, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r186, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r188, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r188, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r188, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r188, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r188, %r7812;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7911, %r188, %r7815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7914, %r188, %r7818;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7917, %r188, %r7821;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7920, %r188, %r7824;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7923, %r188, %r7827;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7926, %r188, %r7830;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7929, %r188, %r7833;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7932, %r188, %r7836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7935, %r188, %r7839;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7938, %r188, %r7842;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7941, %r188, %r7845;
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7945, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7946, %r7848, %r7944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7949, %r7946, %r7945;
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7953, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7954, %r7851, %r7952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7957, %r7954, %r7953;
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7961, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7962, %r7854, %r7960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7965, %r7962, %r7961;
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7969, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7970, %r7857, %r7968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7973, %r7970, %r7969;
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7977, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7978, %r7860, %r7976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7981, %r7978, %r7977;
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7985, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7986, %r7863, %r7984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7989, %r7986, %r7985;
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7993, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7994, %r7866, %r7992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7997, %r7994, %r7993;
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8001, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8002, %r7869, %r8000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8005, %r8002, %r8001;
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8009, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8010, %r7872, %r8008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8013, %r8010, %r8009;
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8017, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8018, %r7875, %r8016;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8021, %r8018, %r8017;
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8025, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8026, %r7878, %r8024;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8029, %r8026, %r8025;
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8033, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8034, %r7881, %r8032;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8037, %r8034, %r8033;
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8041, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8042, %r7884, %r8040;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8045, %r8042, %r8041;
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8049, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8050, %r7887, %r8048;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8053, %r8050, %r8049;
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8057, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8058, %r7890, %r8056;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8061, %r8058, %r8057;
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8065, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8066, %r7893, %r8064;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8069, %r8066, %r8065;
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8073, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8074, %r7896, %r8072;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8077, %r8074, %r8073;
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8081, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8082, %r7899, %r8080;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8085, %r8082, %r8081;
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8089, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8090, %r7902, %r8088;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8093, %r8090, %r8089;
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8097, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8098, %r7905, %r8096;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8101, %r8098, %r8097;
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8105, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8106, %r7908, %r8104;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8109, %r8106, %r8105;
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8113, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8114, %r7911, %r8112;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8117, %r8114, %r8113;
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8121, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8122, %r7914, %r8120;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8125, %r8122, %r8121;
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8129, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8130, %r7917, %r8128;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8133, %r8130, %r8129;
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8137, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8138, %r7920, %r8136;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8141, %r8138, %r8137;
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8145, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8146, %r7923, %r8144;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8149, %r8146, %r8145;
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8153, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8154, %r7926, %r8152;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8157, %r8154, %r8153;
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8161, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8162, %r7929, %r8160;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8165, %r8162, %r8161;
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8169, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8170, %r7932, %r8168;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8173, %r8170, %r8169;
	// end inline asm
	// begin inline asm
	mov.b32 %r8176, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8177, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8178, %r7935, %r8176;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8181, %r8178, %r8177;
	// end inline asm
	// begin inline asm
	mov.b32 %r8184, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8185, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8186, %r7938, %r8184;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8189, %r8186, %r8185;
	// end inline asm
	// begin inline asm
	mov.b32 %r8192, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8193, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8194, %r7941, %r8192;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8197, %r8194, %r8193;
	// end inline asm
	// begin inline asm
	mov.b32 %r8203, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8201, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8202, %r8203, %r8201;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8205, %r7949, %r8202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8208, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8209, %r8203, %r8208;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8212, %r7957, %r8209;
	// end inline asm
	// begin inline asm
	mov.b32 %r8215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8216, %r8203, %r8215;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8219, %r7965, %r8216;
	// end inline asm
	// begin inline asm
	mov.b32 %r8222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8223, %r8203, %r8222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8226, %r7973, %r8223;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8229, %r8205, %r8219, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8233, %r8212, %r8226, %r4416;
	// end inline asm
	shl.b32 	%r8240, %r8233, 4;
	// begin inline asm
	lop3.b32 %r8237, %r4422, %r8229, %r8240, 202;
	// end inline asm
	xor.b32  	%r16237, %r8237, -2004318072;
	// begin inline asm
	mov.b32 %r8244, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8242, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8243, %r8244, %r8242;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8246, %r7981, %r8243;
	// end inline asm
	// begin inline asm
	mov.b32 %r8249, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8250, %r8244, %r8249;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8253, %r7989, %r8250;
	// end inline asm
	// begin inline asm
	mov.b32 %r8256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8257, %r8244, %r8256;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8260, %r7997, %r8257;
	// end inline asm
	// begin inline asm
	mov.b32 %r8263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8264, %r8244, %r8263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8267, %r8005, %r8264;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8270, %r8246, %r8260, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8274, %r8253, %r8267, %r4416;
	// end inline asm
	shl.b32 	%r8281, %r8274, 4;
	// begin inline asm
	lop3.b32 %r8278, %r4422, %r8270, %r8281, 202;
	// end inline asm
	xor.b32  	%r16238, %r8278, -2004318072;
	// begin inline asm
	mov.b32 %r8285, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8283, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8284, %r8285, %r8283;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8287, %r8013, %r8284;
	// end inline asm
	// begin inline asm
	mov.b32 %r8290, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8291, %r8285, %r8290;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8294, %r8021, %r8291;
	// end inline asm
	// begin inline asm
	mov.b32 %r8297, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8298, %r8285, %r8297;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8301, %r8029, %r8298;
	// end inline asm
	// begin inline asm
	mov.b32 %r8304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8305, %r8285, %r8304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8308, %r8037, %r8305;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8311, %r8287, %r8301, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8315, %r8294, %r8308, %r4416;
	// end inline asm
	shl.b32 	%r8322, %r8315, 4;
	// begin inline asm
	lop3.b32 %r8319, %r4422, %r8311, %r8322, 202;
	// end inline asm
	xor.b32  	%r16239, %r8319, -2004318072;
	// begin inline asm
	mov.b32 %r8326, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8325, %r8326, %r8324;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8328, %r8045, %r8325;
	// end inline asm
	// begin inline asm
	mov.b32 %r8331, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8332, %r8326, %r8331;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8335, %r8053, %r8332;
	// end inline asm
	// begin inline asm
	mov.b32 %r8338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8339, %r8326, %r8338;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8342, %r8061, %r8339;
	// end inline asm
	// begin inline asm
	mov.b32 %r8345, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8346, %r8326, %r8345;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8349, %r8069, %r8346;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8352, %r8328, %r8342, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8356, %r8335, %r8349, %r4416;
	// end inline asm
	shl.b32 	%r8363, %r8356, 4;
	// begin inline asm
	lop3.b32 %r8360, %r4422, %r8352, %r8363, 202;
	// end inline asm
	xor.b32  	%r16240, %r8360, -2004318072;
	// begin inline asm
	mov.b32 %r8367, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8365, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8366, %r8367, %r8365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8369, %r8077, %r8366;
	// end inline asm
	// begin inline asm
	mov.b32 %r8372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8373, %r8367, %r8372;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8376, %r8085, %r8373;
	// end inline asm
	// begin inline asm
	mov.b32 %r8379, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8380, %r8367, %r8379;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8383, %r8093, %r8380;
	// end inline asm
	// begin inline asm
	mov.b32 %r8386, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8387, %r8367, %r8386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8390, %r8101, %r8387;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8393, %r8369, %r8383, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8397, %r8376, %r8390, %r4416;
	// end inline asm
	shl.b32 	%r8404, %r8397, 4;
	// begin inline asm
	lop3.b32 %r8401, %r4422, %r8393, %r8404, 202;
	// end inline asm
	xor.b32  	%r16241, %r8401, -2004318072;
	// begin inline asm
	mov.b32 %r8408, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8407, %r8408, %r8406;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8410, %r8109, %r8407;
	// end inline asm
	// begin inline asm
	mov.b32 %r8413, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8414, %r8408, %r8413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8417, %r8117, %r8414;
	// end inline asm
	// begin inline asm
	mov.b32 %r8420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8421, %r8408, %r8420;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8424, %r8125, %r8421;
	// end inline asm
	// begin inline asm
	mov.b32 %r8427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8428, %r8408, %r8427;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8431, %r8133, %r8428;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8434, %r8410, %r8424, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8438, %r8417, %r8431, %r4416;
	// end inline asm
	shl.b32 	%r8445, %r8438, 4;
	// begin inline asm
	lop3.b32 %r8442, %r4422, %r8434, %r8445, 202;
	// end inline asm
	xor.b32  	%r16242, %r8442, -2004318072;
	// begin inline asm
	mov.b32 %r8449, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8447, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8448, %r8449, %r8447;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8451, %r8141, %r8448;
	// end inline asm
	// begin inline asm
	mov.b32 %r8454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8455, %r8449, %r8454;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8458, %r8149, %r8455;
	// end inline asm
	// begin inline asm
	mov.b32 %r8461, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8462, %r8449, %r8461;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8465, %r8157, %r8462;
	// end inline asm
	// begin inline asm
	mov.b32 %r8468, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8469, %r8449, %r8468;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8472, %r8165, %r8469;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8475, %r8451, %r8465, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8479, %r8458, %r8472, %r4416;
	// end inline asm
	shl.b32 	%r8486, %r8479, 4;
	// begin inline asm
	lop3.b32 %r8483, %r4422, %r8475, %r8486, 202;
	// end inline asm
	xor.b32  	%r16243, %r8483, -2004318072;
	// begin inline asm
	mov.b32 %r8490, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8489, %r8490, %r8488;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8492, %r8173, %r8489;
	// end inline asm
	// begin inline asm
	mov.b32 %r8495, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8496, %r8490, %r8495;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8499, %r8181, %r8496;
	// end inline asm
	// begin inline asm
	mov.b32 %r8502, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8503, %r8490, %r8502;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8506, %r8189, %r8503;
	// end inline asm
	// begin inline asm
	mov.b32 %r8509, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8510, %r8490, %r8509;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8513, %r8197, %r8510;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8516, %r8492, %r8506, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8520, %r8499, %r8513, %r4416;
	// end inline asm
	shl.b32 	%r8527, %r8520, 4;
	// begin inline asm
	lop3.b32 %r8524, %r4422, %r8516, %r8527, 202;
	// end inline asm
	xor.b32  	%r16244, %r8524, -2004318072;
	st.shared.u32 	[%rd112], %r16237;
	st.shared.u32 	[%rd114], %r16238;
	st.shared.u32 	[%rd116], %r16239;
	st.shared.u32 	[%rd118], %r16240;
	st.shared.u32 	[%rd120], %r16241;
	st.shared.u32 	[%rd122], %r16242;
	st.shared.u32 	[%rd124], %r16243;
	st.shared.u32 	[%rd126], %r16244;
	ld.shared.u32 	%r16384, [%rd96];
	ld.shared.u32 	%r16385, [%rd98];
	ld.shared.u32 	%r16386, [%rd100];
	ld.shared.u32 	%r16387, [%rd102];
	ld.shared.u32 	%r16396, [%rd104];
	ld.shared.u32 	%r16397, [%rd106];
	ld.shared.u32 	%r16398, [%rd108];
	ld.shared.u32 	%r16399, [%rd110];
	// begin inline asm
	mov.b32 %r8533, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8544, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8532, %r16384, -2004318072;
	// begin inline asm
	lop3.b32 %r8530, %r899, %r8532, %r8533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8535, %r8533, %r8534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8538, %r8530, %r8535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8541, %r910, %r8532, %r8544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8546, %r8544, %r8545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8549, %r8541, %r8546;
	// end inline asm
	shr.u32 	%r8554, %r8532, 8;
	// begin inline asm
	lop3.b32 %r8552, %r899, %r8554, %r8533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8557, %r8533, %r8556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8560, %r8552, %r8557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8563, %r910, %r8554, %r8544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8568, %r8544, %r8567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8571, %r8563, %r8568;
	// end inline asm
	// begin inline asm
	mov.b32 %r8579, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8590, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8578, %r16385, -2004318072;
	// begin inline asm
	lop3.b32 %r8576, %r899, %r8578, %r8579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8581, %r8579, %r8580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8584, %r8576, %r8581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8587, %r910, %r8578, %r8590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8592, %r8590, %r8591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8595, %r8587, %r8592;
	// end inline asm
	shr.u32 	%r8600, %r8578, 8;
	// begin inline asm
	lop3.b32 %r8598, %r899, %r8600, %r8579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8603, %r8579, %r8602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8606, %r8598, %r8603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8609, %r910, %r8600, %r8590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8614, %r8590, %r8613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8617, %r8609, %r8614;
	// end inline asm
	// begin inline asm
	mov.b32 %r8625, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8636, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8624, %r16386, -2004318072;
	// begin inline asm
	lop3.b32 %r8622, %r899, %r8624, %r8625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8627, %r8625, %r8626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8630, %r8622, %r8627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8633, %r910, %r8624, %r8636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8638, %r8636, %r8637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8641, %r8633, %r8638;
	// end inline asm
	shr.u32 	%r8646, %r8624, 8;
	// begin inline asm
	lop3.b32 %r8644, %r899, %r8646, %r8625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8649, %r8625, %r8648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8652, %r8644, %r8649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8655, %r910, %r8646, %r8636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8660, %r8636, %r8659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8663, %r8655, %r8660;
	// end inline asm
	// begin inline asm
	mov.b32 %r8671, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8682, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8670, %r16387, -2004318072;
	// begin inline asm
	lop3.b32 %r8668, %r899, %r8670, %r8671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8673, %r8671, %r8672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8676, %r8668, %r8673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8679, %r910, %r8670, %r8682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8684, %r8682, %r8683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8687, %r8679, %r8684;
	// end inline asm
	shr.u32 	%r8692, %r8670, 8;
	// begin inline asm
	lop3.b32 %r8690, %r899, %r8692, %r8671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8695, %r8671, %r8694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8698, %r8690, %r8695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8701, %r910, %r8692, %r8682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8706, %r8682, %r8705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8709, %r8701, %r8706;
	// end inline asm
	// begin inline asm
	mov.b32 %r8717, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8728, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8716, %r16396, -2004318072;
	// begin inline asm
	lop3.b32 %r8714, %r899, %r8716, %r8717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8719, %r8717, %r8718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8722, %r8714, %r8719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8725, %r910, %r8716, %r8728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8730, %r8728, %r8729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8733, %r8725, %r8730;
	// end inline asm
	shr.u32 	%r8738, %r8716, 8;
	// begin inline asm
	lop3.b32 %r8736, %r899, %r8738, %r8717, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8741, %r8717, %r8740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8744, %r8736, %r8741;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8747, %r910, %r8738, %r8728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8752, %r8728, %r8751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8755, %r8747, %r8752;
	// end inline asm
	// begin inline asm
	mov.b32 %r8763, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8774, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8762, %r16397, -2004318072;
	// begin inline asm
	lop3.b32 %r8760, %r899, %r8762, %r8763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8765, %r8763, %r8764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8768, %r8760, %r8765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8771, %r910, %r8762, %r8774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8776, %r8774, %r8775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8779, %r8771, %r8776;
	// end inline asm
	shr.u32 	%r8784, %r8762, 8;
	// begin inline asm
	lop3.b32 %r8782, %r899, %r8784, %r8763, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8787, %r8763, %r8786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8790, %r8782, %r8787;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8793, %r910, %r8784, %r8774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8798, %r8774, %r8797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8801, %r8793, %r8798;
	// end inline asm
	// begin inline asm
	mov.b32 %r8809, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8820, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8808, %r16398, -2004318072;
	// begin inline asm
	lop3.b32 %r8806, %r899, %r8808, %r8809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8811, %r8809, %r8810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8814, %r8806, %r8811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8817, %r910, %r8808, %r8820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8822, %r8820, %r8821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8825, %r8817, %r8822;
	// end inline asm
	shr.u32 	%r8830, %r8808, 8;
	// begin inline asm
	lop3.b32 %r8828, %r899, %r8830, %r8809, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8832, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8833, %r8809, %r8832;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8836, %r8828, %r8833;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8839, %r910, %r8830, %r8820, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8843, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8844, %r8820, %r8843;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8847, %r8839, %r8844;
	// end inline asm
	// begin inline asm
	mov.b32 %r8855, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8866, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8854, %r16399, -2004318072;
	// begin inline asm
	lop3.b32 %r8852, %r899, %r8854, %r8855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8857, %r8855, %r8856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8860, %r8852, %r8857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8863, %r910, %r8854, %r8866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8868, %r8866, %r8867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8871, %r8863, %r8868;
	// end inline asm
	shr.u32 	%r8876, %r8854, 8;
	// begin inline asm
	lop3.b32 %r8874, %r899, %r8876, %r8855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8879, %r8855, %r8878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8882, %r8874, %r8879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8885, %r910, %r8876, %r8866, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8890, %r8866, %r8889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8893, %r8885, %r8890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8896, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8898, %r8896, %r8538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8901, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8903, %r8901, %r8549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8906, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8908, %r8906, %r8560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8911, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8913, %r8911, %r8571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8916, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8918, %r8916, %r8584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8921, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8923, %r8921, %r8595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8926, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8928, %r8926, %r8606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8931, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8933, %r8931, %r8617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8936, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8938, %r8936, %r8630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8941, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8943, %r8941, %r8641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8946, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8948, %r8946, %r8652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8951, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8953, %r8951, %r8663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8956, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8958, %r8956, %r8676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8961, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8963, %r8961, %r8687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8966, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8968, %r8966, %r8698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8971, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8973, %r8971, %r8709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8976, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8978, %r8976, %r8722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8981, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8983, %r8981, %r8733;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8986, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8988, %r8986, %r8744;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8991, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8993, %r8991, %r8755;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8996, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8998, %r8996, %r8768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9001, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9003, %r9001, %r8779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9006, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9008, %r9006, %r8790;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9011, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9013, %r9011, %r8801;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9016, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9018, %r9016, %r8814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9021, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9023, %r9021, %r8825;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9026, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9028, %r9026, %r8836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9031, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9033, %r9031, %r8847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9036, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9038, %r9036, %r8860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9041, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9043, %r9041, %r8871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9046, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9048, %r9046, %r8882;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9051, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9053, %r9051, %r8893;
	// end inline asm
	// begin inline asm
	mov.b32 %r9061, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9072, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9058, %r899, %r2484, %r9061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9063, %r9061, %r9062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9066, %r9058, %r9063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9069, %r910, %r2484, %r9072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9074, %r9072, %r9073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9077, %r9069, %r9074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9080, %r899, %r2506, %r9061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9085, %r9061, %r9084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9088, %r9080, %r9085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9091, %r910, %r2506, %r9072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9096, %r9072, %r9095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9099, %r9091, %r9096;
	// end inline asm
	// begin inline asm
	mov.b32 %r9107, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9118, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9104, %r899, %r2530, %r9107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9109, %r9107, %r9108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9112, %r9104, %r9109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9115, %r910, %r2530, %r9118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9120, %r9118, %r9119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9123, %r9115, %r9120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9126, %r899, %r2552, %r9107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9131, %r9107, %r9130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9134, %r9126, %r9131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9137, %r910, %r2552, %r9118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9142, %r9118, %r9141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9145, %r9137, %r9142;
	// end inline asm
	// begin inline asm
	mov.b32 %r9153, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9164, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9150, %r899, %r2576, %r9153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9155, %r9153, %r9154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9158, %r9150, %r9155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9161, %r910, %r2576, %r9164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9166, %r9164, %r9165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9169, %r9161, %r9166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9172, %r899, %r2598, %r9153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9177, %r9153, %r9176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9180, %r9172, %r9177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9183, %r910, %r2598, %r9164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9188, %r9164, %r9187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9191, %r9183, %r9188;
	// end inline asm
	// begin inline asm
	mov.b32 %r9199, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9210, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9196, %r899, %r2622, %r9199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9201, %r9199, %r9200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9204, %r9196, %r9201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9207, %r910, %r2622, %r9210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9212, %r9210, %r9211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9215, %r9207, %r9212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9218, %r899, %r2644, %r9199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9223, %r9199, %r9222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9226, %r9218, %r9223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9229, %r910, %r2644, %r9210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9234, %r9210, %r9233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9237, %r9229, %r9234;
	// end inline asm
	// begin inline asm
	mov.b32 %r9245, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9256, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9242, %r899, %r2668, %r9245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9247, %r9245, %r9246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9250, %r9242, %r9247;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9253, %r910, %r2668, %r9256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9258, %r9256, %r9257;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9261, %r9253, %r9258;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9264, %r899, %r2690, %r9245, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9268, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9269, %r9245, %r9268;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9272, %r9264, %r9269;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9275, %r910, %r2690, %r9256, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9279, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9280, %r9256, %r9279;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9283, %r9275, %r9280;
	// end inline asm
	// begin inline asm
	mov.b32 %r9291, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9302, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9288, %r899, %r2714, %r9291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9293, %r9291, %r9292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9296, %r9288, %r9293;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9299, %r910, %r2714, %r9302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9303, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9304, %r9302, %r9303;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9307, %r9299, %r9304;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9310, %r899, %r2736, %r9291, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9314, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9315, %r9291, %r9314;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9318, %r9310, %r9315;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9321, %r910, %r2736, %r9302, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9326, %r9302, %r9325;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9329, %r9321, %r9326;
	// end inline asm
	// begin inline asm
	mov.b32 %r9337, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9348, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9334, %r899, %r2760, %r9337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9339, %r9337, %r9338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9342, %r9334, %r9339;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9345, %r910, %r2760, %r9348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9349, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9350, %r9348, %r9349;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9353, %r9345, %r9350;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9356, %r899, %r2782, %r9337, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9360, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9361, %r9337, %r9360;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9364, %r9356, %r9361;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9367, %r910, %r2782, %r9348, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9371, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9372, %r9348, %r9371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9375, %r9367, %r9372;
	// end inline asm
	// begin inline asm
	mov.b32 %r9383, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9394, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9380, %r899, %r2806, %r9383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9385, %r9383, %r9384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9388, %r9380, %r9385;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9391, %r910, %r2806, %r9394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9395, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9396, %r9394, %r9395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9399, %r9391, %r9396;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9402, %r899, %r2828, %r9383, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9406, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9407, %r9383, %r9406;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9410, %r9402, %r9407;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9413, %r910, %r2828, %r9394, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9417, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9418, %r9394, %r9417;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9421, %r9413, %r9418;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9424, %r313, %r9066, %r8898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9428, %r313, %r9077, %r8903;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9432, %r313, %r9088, %r8908;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9436, %r313, %r9099, %r8913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9440, %r313, %r9112, %r8918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9444, %r313, %r9123, %r8923;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9448, %r313, %r9134, %r8928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9452, %r313, %r9145, %r8933;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9456, %r313, %r9158, %r8938;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9460, %r313, %r9169, %r8943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9464, %r313, %r9180, %r8948;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9468, %r313, %r9191, %r8953;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9472, %r313, %r9204, %r8958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9476, %r313, %r9215, %r8963;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9480, %r313, %r9226, %r8968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9484, %r313, %r9237, %r8973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9488, %r331, %r9250, %r8978;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9492, %r331, %r9261, %r8983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9496, %r331, %r9272, %r8988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9500, %r331, %r9283, %r8993;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9504, %r331, %r9296, %r8998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9508, %r331, %r9307, %r9003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9512, %r331, %r9318, %r9008;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9516, %r331, %r9329, %r9013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9520, %r331, %r9342, %r9018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9524, %r331, %r9353, %r9023;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9528, %r331, %r9364, %r9028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9532, %r331, %r9375, %r9033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9536, %r331, %r9388, %r9038;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9540, %r331, %r9399, %r9043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9544, %r331, %r9410, %r9048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9548, %r331, %r9421, %r9053;
	// end inline asm
	// begin inline asm
	mov.b32 %r9557, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9568, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9554, %r899, %r900, %r9557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9559, %r9557, %r9558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9562, %r9554, %r9559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9565, %r910, %r900, %r9568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9570, %r9568, %r9569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9573, %r9565, %r9570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9576, %r899, %r922, %r9557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9581, %r9557, %r9580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9584, %r9576, %r9581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9587, %r910, %r922, %r9568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9592, %r9568, %r9591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9595, %r9587, %r9592;
	// end inline asm
	// begin inline asm
	mov.b32 %r9603, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9614, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9600, %r899, %r946, %r9603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9605, %r9603, %r9604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9608, %r9600, %r9605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9611, %r910, %r946, %r9614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9616, %r9614, %r9615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9619, %r9611, %r9616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9622, %r899, %r968, %r9603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9627, %r9603, %r9626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9630, %r9622, %r9627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9633, %r910, %r968, %r9614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9638, %r9614, %r9637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9641, %r9633, %r9638;
	// end inline asm
	// begin inline asm
	mov.b32 %r9649, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9660, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9646, %r899, %r992, %r9649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9651, %r9649, %r9650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9654, %r9646, %r9651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9657, %r910, %r992, %r9660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9662, %r9660, %r9661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9665, %r9657, %r9662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9668, %r899, %r1014, %r9649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9673, %r9649, %r9672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9676, %r9668, %r9673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9679, %r910, %r1014, %r9660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9684, %r9660, %r9683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9687, %r9679, %r9684;
	// end inline asm
	// begin inline asm
	mov.b32 %r9695, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9706, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9692, %r899, %r1038, %r9695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9697, %r9695, %r9696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9700, %r9692, %r9697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9703, %r910, %r1038, %r9706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9708, %r9706, %r9707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9711, %r9703, %r9708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9714, %r899, %r1060, %r9695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9719, %r9695, %r9718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9722, %r9714, %r9719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9725, %r910, %r1060, %r9706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9730, %r9706, %r9729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9733, %r9725, %r9730;
	// end inline asm
	// begin inline asm
	mov.b32 %r9741, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9752, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9738, %r899, %r1084, %r9741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9743, %r9741, %r9742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9746, %r9738, %r9743;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9749, %r910, %r1084, %r9752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9754, %r9752, %r9753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9757, %r9749, %r9754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9760, %r899, %r1106, %r9741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9765, %r9741, %r9764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9768, %r9760, %r9765;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9771, %r910, %r1106, %r9752, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9776, %r9752, %r9775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9779, %r9771, %r9776;
	// end inline asm
	// begin inline asm
	mov.b32 %r9787, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9798, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9784, %r899, %r1130, %r9787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9789, %r9787, %r9788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9792, %r9784, %r9789;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9795, %r910, %r1130, %r9798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9800, %r9798, %r9799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9803, %r9795, %r9800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9806, %r899, %r1152, %r9787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9811, %r9787, %r9810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9814, %r9806, %r9811;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9817, %r910, %r1152, %r9798, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9822, %r9798, %r9821;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9825, %r9817, %r9822;
	// end inline asm
	// begin inline asm
	mov.b32 %r9833, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9844, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9830, %r899, %r1176, %r9833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9835, %r9833, %r9834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9838, %r9830, %r9835;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9841, %r910, %r1176, %r9844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9846, %r9844, %r9845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9849, %r9841, %r9846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9852, %r899, %r1198, %r9833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9857, %r9833, %r9856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9860, %r9852, %r9857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9863, %r910, %r1198, %r9844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9868, %r9844, %r9867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9871, %r9863, %r9868;
	// end inline asm
	// begin inline asm
	mov.b32 %r9879, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9890, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9876, %r899, %r1222, %r9879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9881, %r9879, %r9880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9884, %r9876, %r9881;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9887, %r910, %r1222, %r9890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9892, %r9890, %r9891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9895, %r9887, %r9892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9898, %r899, %r1244, %r9879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9903, %r9879, %r9902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9906, %r9898, %r9903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9909, %r910, %r1244, %r9890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9914, %r9890, %r9913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9917, %r9909, %r9914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9920, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9922, %r9920, %r9562, %r9424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9926, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9928, %r9926, %r9573, %r9428;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9932, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9934, %r9932, %r9584, %r9432;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9938, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9940, %r9938, %r9595, %r9436;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9944, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9946, %r9944, %r9608, %r9440;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9950, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9952, %r9950, %r9619, %r9444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9956, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9958, %r9956, %r9630, %r9448;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9962, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9964, %r9962, %r9641, %r9452;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9968, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9970, %r9968, %r9654, %r9456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9974, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9976, %r9974, %r9665, %r9460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9980, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9982, %r9980, %r9676, %r9464;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9986, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9988, %r9986, %r9687, %r9468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9992, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9994, %r9992, %r9700, %r9472;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9998, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10000, %r9998, %r9711, %r9476;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10004, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10006, %r10004, %r9722, %r9480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10010, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10012, %r10010, %r9733, %r9484;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10016, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10018, %r10016, %r9746, %r9488;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10022, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10024, %r10022, %r9757, %r9492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10028, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10030, %r10028, %r9768, %r9496;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10034, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10036, %r10034, %r9779, %r9500;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10040, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10042, %r10040, %r9792, %r9504;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10046, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10048, %r10046, %r9803, %r9508;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10052, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10054, %r10052, %r9814, %r9512;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10058, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10060, %r10058, %r9825, %r9516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10064, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10066, %r10064, %r9838, %r9520;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10070, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10072, %r10070, %r9849, %r9524;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10076, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10078, %r10076, %r9860, %r9528;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10082, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10084, %r10082, %r9871, %r9532;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10088, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10090, %r10088, %r9884, %r9536;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10094, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10096, %r10094, %r9895, %r9540;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10100, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10102, %r10100, %r9906, %r9544;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10106, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10108, %r10106, %r9917, %r9548;
	// end inline asm
	// begin inline asm
	mov.b32 %r10117, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10128, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10114, %r899, %r4716, %r10117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10119, %r10117, %r10118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10122, %r10114, %r10119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10125, %r910, %r4716, %r10128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10130, %r10128, %r10129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10133, %r10125, %r10130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10136, %r899, %r4738, %r10117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10141, %r10117, %r10140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10144, %r10136, %r10141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10147, %r910, %r4738, %r10128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10152, %r10128, %r10151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10155, %r10147, %r10152;
	// end inline asm
	// begin inline asm
	mov.b32 %r10163, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10174, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10160, %r899, %r4762, %r10163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10165, %r10163, %r10164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10168, %r10160, %r10165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10171, %r910, %r4762, %r10174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10176, %r10174, %r10175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10179, %r10171, %r10176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10182, %r899, %r4784, %r10163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10187, %r10163, %r10186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10190, %r10182, %r10187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10193, %r910, %r4784, %r10174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10198, %r10174, %r10197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10201, %r10193, %r10198;
	// end inline asm
	// begin inline asm
	mov.b32 %r10209, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10220, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10206, %r899, %r4808, %r10209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10211, %r10209, %r10210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10214, %r10206, %r10211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10217, %r910, %r4808, %r10220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10222, %r10220, %r10221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10225, %r10217, %r10222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10228, %r899, %r4830, %r10209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10233, %r10209, %r10232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10236, %r10228, %r10233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10239, %r910, %r4830, %r10220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10244, %r10220, %r10243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10247, %r10239, %r10244;
	// end inline asm
	// begin inline asm
	mov.b32 %r10255, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10266, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10252, %r899, %r4854, %r10255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10257, %r10255, %r10256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10260, %r10252, %r10257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10263, %r910, %r4854, %r10266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10268, %r10266, %r10267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10271, %r10263, %r10268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10274, %r899, %r4876, %r10255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10279, %r10255, %r10278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10282, %r10274, %r10279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10285, %r910, %r4876, %r10266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10290, %r10266, %r10289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10293, %r10285, %r10290;
	// end inline asm
	// begin inline asm
	mov.b32 %r10301, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10312, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10298, %r899, %r4900, %r10301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10303, %r10301, %r10302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10306, %r10298, %r10303;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10309, %r910, %r4900, %r10312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10313, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10314, %r10312, %r10313;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10317, %r10309, %r10314;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10320, %r899, %r4922, %r10301, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10324, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10325, %r10301, %r10324;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10328, %r10320, %r10325;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10331, %r910, %r4922, %r10312, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10335, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10336, %r10312, %r10335;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10339, %r10331, %r10336;
	// end inline asm
	// begin inline asm
	mov.b32 %r10347, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10358, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10344, %r899, %r4946, %r10347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10349, %r10347, %r10348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10352, %r10344, %r10349;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10355, %r910, %r4946, %r10358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10360, %r10358, %r10359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10363, %r10355, %r10360;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10366, %r899, %r4968, %r10347, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10370, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10371, %r10347, %r10370;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10374, %r10366, %r10371;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10377, %r910, %r4968, %r10358, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10381, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10382, %r10358, %r10381;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10385, %r10377, %r10382;
	// end inline asm
	// begin inline asm
	mov.b32 %r10393, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10404, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10390, %r899, %r4992, %r10393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10395, %r10393, %r10394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10398, %r10390, %r10395;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10401, %r910, %r4992, %r10404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10405, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10406, %r10404, %r10405;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10409, %r10401, %r10406;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10412, %r899, %r5014, %r10393, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10416, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10417, %r10393, %r10416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10420, %r10412, %r10417;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10423, %r910, %r5014, %r10404, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10427, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10428, %r10404, %r10427;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10431, %r10423, %r10428;
	// end inline asm
	// begin inline asm
	mov.b32 %r10439, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10450, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10436, %r899, %r5038, %r10439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10441, %r10439, %r10440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10444, %r10436, %r10441;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10447, %r910, %r5038, %r10450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10451, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10452, %r10450, %r10451;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10455, %r10447, %r10452;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10458, %r899, %r5060, %r10439, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10463, %r10439, %r10462;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10466, %r10458, %r10463;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10469, %r910, %r5060, %r10450, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10473, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10474, %r10450, %r10473;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10477, %r10469, %r10474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r385, %r10122, %r9922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10612, %r385, %r10133, %r9928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r385, %r10144, %r9934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10621, %r385, %r10155, %r9940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r385, %r10168, %r9946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10630, %r385, %r10179, %r9952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r385, %r10190, %r9958;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10639, %r385, %r10201, %r9964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r385, %r10214, %r9970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10648, %r385, %r10225, %r9976;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r385, %r10236, %r9982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10657, %r385, %r10247, %r9988;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r385, %r10260, %r9994;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10666, %r385, %r10271, %r10000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r385, %r10282, %r10006;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10675, %r385, %r10293, %r10012;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r403, %r10306, %r10018;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10684, %r403, %r10317, %r10024;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r403, %r10328, %r10030;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10693, %r403, %r10339, %r10036;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r403, %r10352, %r10042;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10702, %r403, %r10363, %r10048;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r403, %r10374, %r10054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10711, %r403, %r10385, %r10060;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10723, %r403, %r10398, %r10066;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10720, %r403, %r10409, %r10072;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10732, %r403, %r10420, %r10078;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r403, %r10431, %r10084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10741, %r403, %r10444, %r10090;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10738, %r403, %r10455, %r10096;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r403, %r10466, %r10102;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10747, %r403, %r10477, %r10108;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10608, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10610, %r10608, %r10612;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10613, %r467, %r10615, %r10610;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10617, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10619, %r10617, %r10621;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10622, %r467, %r10624, %r10619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10626, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10628, %r10626, %r10630;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10631, %r467, %r10633, %r10628;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10635, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10637, %r10635, %r10639;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10640, %r467, %r10642, %r10637;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10644, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10646, %r10644, %r10648;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10649, %r467, %r10651, %r10646;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10653, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10655, %r10653, %r10657;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10658, %r467, %r10660, %r10655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10662, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10664, %r10662, %r10666;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10667, %r467, %r10669, %r10664;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10671, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10673, %r10671, %r10675;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10676, %r467, %r10678, %r10673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10680, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10682, %r10680, %r10684;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10685, %r470, %r10687, %r10682;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10689, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10691, %r10689, %r10693;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10694, %r470, %r10696, %r10691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10698, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10700, %r10698, %r10702;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10703, %r470, %r10705, %r10700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10707, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10709, %r10707, %r10711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10712, %r470, %r10714, %r10709;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10716, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10718, %r10716, %r10720;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10721, %r470, %r10723, %r10718;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10725, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10727, %r10725, %r10729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10730, %r470, %r10732, %r10727;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10734, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10736, %r10734, %r10738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10739, %r470, %r10741, %r10736;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10743, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10745, %r10743, %r10747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10748, %r470, %r10750, %r10745;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10752, %r473, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10755, %r467, %r10612, %r10752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10759, %r473, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10762, %r467, %r10621, %r10759;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10766, %r473, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10769, %r467, %r10630, %r10766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10773, %r473, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10776, %r467, %r10639, %r10773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10780, %r473, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10783, %r467, %r10648, %r10780;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10787, %r473, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10790, %r467, %r10657, %r10787;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10794, %r473, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10797, %r467, %r10666, %r10794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10801, %r473, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10804, %r467, %r10675, %r10801;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10808, %r476, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10811, %r470, %r10684, %r10808;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10815, %r476, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10818, %r470, %r10693, %r10815;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10822, %r476, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10825, %r470, %r10702, %r10822;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10829, %r476, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10832, %r470, %r10711, %r10829;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10836, %r476, %r10723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10839, %r470, %r10720, %r10836;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10843, %r476, %r10732;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10846, %r470, %r10729, %r10843;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10850, %r476, %r10741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10853, %r470, %r10738, %r10850;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10857, %r476, %r10750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10860, %r470, %r10747, %r10857;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11031, %r11028}, {%r522, %r528, %r525, %r531}, {%r10613, %r10755}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11040, %r11037}, {%r522, %r528, %r525, %r531}, {%r10622, %r10762}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11049, %r11046}, {%r522, %r528, %r525, %r531}, {%r10631, %r10769}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11058, %r11055}, {%r522, %r528, %r525, %r531}, {%r10640, %r10776}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11067, %r11064}, {%r522, %r528, %r525, %r531}, {%r10649, %r10783}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11076, %r11073}, {%r522, %r528, %r525, %r531}, {%r10658, %r10790}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11085, %r11082}, {%r522, %r528, %r525, %r531}, {%r10667, %r10797}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11094, %r11091}, {%r522, %r528, %r525, %r531}, {%r10676, %r10804}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11103, %r11100}, {%r522, %r528, %r525, %r531}, {%r10685, %r10811}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11112, %r11109}, {%r522, %r528, %r525, %r531}, {%r10694, %r10818}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11121, %r11118}, {%r522, %r528, %r525, %r531}, {%r10703, %r10825}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11130, %r11127}, {%r522, %r528, %r525, %r531}, {%r10712, %r10832}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11139, %r11136}, {%r522, %r528, %r525, %r531}, {%r10721, %r10839}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11148, %r11145}, {%r522, %r528, %r525, %r531}, {%r10730, %r10846}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11157, %r11154}, {%r522, %r528, %r525, %r531}, {%r10739, %r10853}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11166, %r11163}, {%r522, %r528, %r525, %r531}, {%r10748, %r10860}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11024, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11026, %r11024, %r11028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11029, %r572, %r11031, %r11026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11033, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11035, %r11033, %r11037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11038, %r572, %r11040, %r11035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11042, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11044, %r11042, %r11046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11047, %r572, %r11049, %r11044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11051, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11053, %r11051, %r11055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11056, %r572, %r11058, %r11053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11060, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11062, %r11060, %r11064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11065, %r572, %r11067, %r11062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11069, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11071, %r11069, %r11073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11074, %r572, %r11076, %r11071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11078, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11080, %r11078, %r11082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11083, %r572, %r11085, %r11080;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11087, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11089, %r11087, %r11091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11092, %r572, %r11094, %r11089;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11096, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11098, %r11096, %r11100;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11101, %r572, %r11103, %r11098;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11105, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11107, %r11105, %r11109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11110, %r572, %r11112, %r11107;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11114, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11116, %r11114, %r11118;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11119, %r572, %r11121, %r11116;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11123, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11125, %r11123, %r11127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11128, %r572, %r11130, %r11125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11132, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11134, %r11132, %r11136;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11137, %r572, %r11139, %r11134;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11141, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11143, %r11141, %r11145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11146, %r572, %r11148, %r11143;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11150, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11152, %r11150, %r11154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11155, %r572, %r11157, %r11152;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11159, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11161, %r11159, %r11163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11164, %r572, %r11166, %r11161;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11168, %r575, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11171, %r572, %r11028, %r11168;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11175, %r575, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11178, %r572, %r11037, %r11175;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11182, %r575, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11185, %r572, %r11046, %r11182;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11189, %r575, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11192, %r572, %r11055, %r11189;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11196, %r575, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11199, %r572, %r11064, %r11196;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11203, %r575, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11206, %r572, %r11073, %r11203;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11210, %r575, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11213, %r572, %r11082, %r11210;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11217, %r575, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11220, %r572, %r11091, %r11217;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11224, %r575, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11227, %r572, %r11100, %r11224;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11231, %r575, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11234, %r572, %r11109, %r11231;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11238, %r575, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11241, %r572, %r11118, %r11238;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11245, %r575, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11248, %r572, %r11127, %r11245;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11252, %r575, %r11139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11255, %r572, %r11136, %r11252;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11259, %r575, %r11148;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11262, %r572, %r11145, %r11259;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11266, %r575, %r11157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11269, %r572, %r11154, %r11266;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11273, %r575, %r11166;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11276, %r572, %r11163, %r11273;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11569, %r11572}, {%r610, %r616, %r613, %r619}, {%r11029, %r11171}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11575, %r11578}, {%r610, %r616, %r613, %r619}, {%r11038, %r11178}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11581, %r11584}, {%r610, %r616, %r613, %r619}, {%r11047, %r11185}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11587, %r11590}, {%r610, %r616, %r613, %r619}, {%r11056, %r11192}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11593, %r11596}, {%r610, %r616, %r613, %r619}, {%r11065, %r11199}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11599, %r11602}, {%r610, %r616, %r613, %r619}, {%r11074, %r11206}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11605, %r11608}, {%r610, %r616, %r613, %r619}, {%r11083, %r11213}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11611, %r11614}, {%r610, %r616, %r613, %r619}, {%r11092, %r11220}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11570, %r11573}, {%r610, %r616, %r613, %r619}, {%r11101, %r11227}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11576, %r11579}, {%r610, %r616, %r613, %r619}, {%r11110, %r11234}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11582, %r11585}, {%r610, %r616, %r613, %r619}, {%r11119, %r11241}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11588, %r11591}, {%r610, %r616, %r613, %r619}, {%r11128, %r11248}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11594, %r11597}, {%r610, %r616, %r613, %r619}, {%r11137, %r11255}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11600, %r11603}, {%r610, %r616, %r613, %r619}, {%r11146, %r11262}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11606, %r11609}, {%r610, %r616, %r613, %r619}, {%r11155, %r11269}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11612, %r11615}, {%r610, %r616, %r613, %r619}, {%r11164, %r11276}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11568, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11583, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11586, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11589, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11592, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11595, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11598, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11601, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11604, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11607, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11610, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11613, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11616, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11631, %r11584, %r11585;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11634, %r11587, %r11588;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11637, %r11590, %r11591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11640, %r11593, %r11594;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11643, %r11596, %r11597;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11646, %r11599, %r11600;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11649, %r11602, %r11603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11652, %r11605, %r11606;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11655, %r11608, %r11609;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11658, %r11611, %r11612;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11661, %r11614, %r11615;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r186, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r186, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r186, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r186, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r186, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r186, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r186, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r186, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r186, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r186, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r186, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r186, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r186, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r186, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r186, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r186, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r188, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r188, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r188, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r188, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r188, %r11628;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11727, %r188, %r11631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11730, %r188, %r11634;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11733, %r188, %r11637;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11736, %r188, %r11640;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11739, %r188, %r11643;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11742, %r188, %r11646;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11745, %r188, %r11649;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11748, %r188, %r11652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11751, %r188, %r11655;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11754, %r188, %r11658;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11757, %r188, %r11661;
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11761, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11762, %r11664, %r11760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11765, %r11762, %r11761;
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11769, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11770, %r11667, %r11768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11773, %r11770, %r11769;
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11777, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11778, %r11670, %r11776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11781, %r11778, %r11777;
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11785, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11786, %r11673, %r11784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11789, %r11786, %r11785;
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11793, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11794, %r11676, %r11792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11797, %r11794, %r11793;
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11801, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11802, %r11679, %r11800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11805, %r11802, %r11801;
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11809, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11810, %r11682, %r11808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11813, %r11810, %r11809;
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11817, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11818, %r11685, %r11816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11821, %r11818, %r11817;
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11825, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11826, %r11688, %r11824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11829, %r11826, %r11825;
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11833, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11834, %r11691, %r11832;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11837, %r11834, %r11833;
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11841, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11842, %r11694, %r11840;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11845, %r11842, %r11841;
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11849, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11850, %r11697, %r11848;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11853, %r11850, %r11849;
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11857, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11858, %r11700, %r11856;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11861, %r11858, %r11857;
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11865, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11866, %r11703, %r11864;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11869, %r11866, %r11865;
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11873, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11874, %r11706, %r11872;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11877, %r11874, %r11873;
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11881, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11882, %r11709, %r11880;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11885, %r11882, %r11881;
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11889, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11890, %r11712, %r11888;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11893, %r11890, %r11889;
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11897, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11898, %r11715, %r11896;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11901, %r11898, %r11897;
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11905, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11906, %r11718, %r11904;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11909, %r11906, %r11905;
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11913, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11914, %r11721, %r11912;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11917, %r11914, %r11913;
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11921, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11922, %r11724, %r11920;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11925, %r11922, %r11921;
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11929, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11930, %r11727, %r11928;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11933, %r11930, %r11929;
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11937, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11938, %r11730, %r11936;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11941, %r11938, %r11937;
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11945, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11946, %r11733, %r11944;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11949, %r11946, %r11945;
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11953, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11954, %r11736, %r11952;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11957, %r11954, %r11953;
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11961, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11962, %r11739, %r11960;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11965, %r11962, %r11961;
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11969, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11970, %r11742, %r11968;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11973, %r11970, %r11969;
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11977, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11978, %r11745, %r11976;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11981, %r11978, %r11977;
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11985, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11986, %r11748, %r11984;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11989, %r11986, %r11985;
	// end inline asm
	// begin inline asm
	mov.b32 %r11992, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11993, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11994, %r11751, %r11992;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11997, %r11994, %r11993;
	// end inline asm
	// begin inline asm
	mov.b32 %r12000, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12001, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12002, %r11754, %r12000;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12005, %r12002, %r12001;
	// end inline asm
	// begin inline asm
	mov.b32 %r12008, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r12009, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r12010, %r11757, %r12008;
	// end inline asm
	// begin inline asm
	min.f16x2 %r12013, %r12010, %r12009;
	// end inline asm
	// begin inline asm
	mov.b32 %r12019, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12017, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12018, %r12019, %r12017;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12021, %r11765, %r12018;
	// end inline asm
	// begin inline asm
	mov.b32 %r12024, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12025, %r12019, %r12024;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12028, %r11773, %r12025;
	// end inline asm
	// begin inline asm
	mov.b32 %r12031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12032, %r12019, %r12031;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12035, %r11781, %r12032;
	// end inline asm
	// begin inline asm
	mov.b32 %r12038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12039, %r12019, %r12038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12042, %r11789, %r12039;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12045, %r12021, %r12035, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12049, %r12028, %r12042, %r4416;
	// end inline asm
	shl.b32 	%r12056, %r12049, 4;
	// begin inline asm
	lop3.b32 %r12053, %r4422, %r12045, %r12056, 202;
	// end inline asm
	xor.b32  	%r16245, %r12053, -2004318072;
	// begin inline asm
	mov.b32 %r12060, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12058, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12059, %r12060, %r12058;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12062, %r11797, %r12059;
	// end inline asm
	// begin inline asm
	mov.b32 %r12065, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12066, %r12060, %r12065;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12069, %r11805, %r12066;
	// end inline asm
	// begin inline asm
	mov.b32 %r12072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12073, %r12060, %r12072;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12076, %r11813, %r12073;
	// end inline asm
	// begin inline asm
	mov.b32 %r12079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12080, %r12060, %r12079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12083, %r11821, %r12080;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12086, %r12062, %r12076, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12090, %r12069, %r12083, %r4416;
	// end inline asm
	shl.b32 	%r12097, %r12090, 4;
	// begin inline asm
	lop3.b32 %r12094, %r4422, %r12086, %r12097, 202;
	// end inline asm
	xor.b32  	%r16246, %r12094, -2004318072;
	// begin inline asm
	mov.b32 %r12101, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12100, %r12101, %r12099;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12103, %r11829, %r12100;
	// end inline asm
	// begin inline asm
	mov.b32 %r12106, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12107, %r12101, %r12106;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12110, %r11837, %r12107;
	// end inline asm
	// begin inline asm
	mov.b32 %r12113, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12114, %r12101, %r12113;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12117, %r11845, %r12114;
	// end inline asm
	// begin inline asm
	mov.b32 %r12120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12121, %r12101, %r12120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12124, %r11853, %r12121;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12127, %r12103, %r12117, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12131, %r12110, %r12124, %r4416;
	// end inline asm
	shl.b32 	%r12138, %r12131, 4;
	// begin inline asm
	lop3.b32 %r12135, %r4422, %r12127, %r12138, 202;
	// end inline asm
	xor.b32  	%r16247, %r12135, -2004318072;
	// begin inline asm
	mov.b32 %r12142, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12141, %r12142, %r12140;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12144, %r11861, %r12141;
	// end inline asm
	// begin inline asm
	mov.b32 %r12147, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12148, %r12142, %r12147;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12151, %r11869, %r12148;
	// end inline asm
	// begin inline asm
	mov.b32 %r12154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12155, %r12142, %r12154;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12158, %r11877, %r12155;
	// end inline asm
	// begin inline asm
	mov.b32 %r12161, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12162, %r12142, %r12161;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12165, %r11885, %r12162;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12168, %r12144, %r12158, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12172, %r12151, %r12165, %r4416;
	// end inline asm
	shl.b32 	%r12179, %r12172, 4;
	// begin inline asm
	lop3.b32 %r12176, %r4422, %r12168, %r12179, 202;
	// end inline asm
	xor.b32  	%r16248, %r12176, -2004318072;
	// begin inline asm
	mov.b32 %r12183, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12181, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12182, %r12183, %r12181;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12185, %r11893, %r12182;
	// end inline asm
	// begin inline asm
	mov.b32 %r12188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12189, %r12183, %r12188;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12192, %r11901, %r12189;
	// end inline asm
	// begin inline asm
	mov.b32 %r12195, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12196, %r12183, %r12195;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12199, %r11909, %r12196;
	// end inline asm
	// begin inline asm
	mov.b32 %r12202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12203, %r12183, %r12202;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12206, %r11917, %r12203;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12209, %r12185, %r12199, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12213, %r12192, %r12206, %r4416;
	// end inline asm
	shl.b32 	%r12220, %r12213, 4;
	// begin inline asm
	lop3.b32 %r12217, %r4422, %r12209, %r12220, 202;
	// end inline asm
	xor.b32  	%r16249, %r12217, -2004318072;
	// begin inline asm
	mov.b32 %r12224, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12223, %r12224, %r12222;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12226, %r11925, %r12223;
	// end inline asm
	// begin inline asm
	mov.b32 %r12229, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12230, %r12224, %r12229;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12233, %r11933, %r12230;
	// end inline asm
	// begin inline asm
	mov.b32 %r12236, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12237, %r12224, %r12236;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12240, %r11941, %r12237;
	// end inline asm
	// begin inline asm
	mov.b32 %r12243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12244, %r12224, %r12243;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12247, %r11949, %r12244;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12250, %r12226, %r12240, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12254, %r12233, %r12247, %r4416;
	// end inline asm
	shl.b32 	%r12261, %r12254, 4;
	// begin inline asm
	lop3.b32 %r12258, %r4422, %r12250, %r12261, 202;
	// end inline asm
	xor.b32  	%r16250, %r12258, -2004318072;
	// begin inline asm
	mov.b32 %r12265, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12263, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12264, %r12265, %r12263;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12267, %r11957, %r12264;
	// end inline asm
	// begin inline asm
	mov.b32 %r12270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12271, %r12265, %r12270;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12274, %r11965, %r12271;
	// end inline asm
	// begin inline asm
	mov.b32 %r12277, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12278, %r12265, %r12277;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12281, %r11973, %r12278;
	// end inline asm
	// begin inline asm
	mov.b32 %r12284, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12285, %r12265, %r12284;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12288, %r11981, %r12285;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12291, %r12267, %r12281, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12295, %r12274, %r12288, %r4416;
	// end inline asm
	shl.b32 	%r12302, %r12295, 4;
	// begin inline asm
	lop3.b32 %r12299, %r4422, %r12291, %r12302, 202;
	// end inline asm
	xor.b32  	%r16251, %r12299, -2004318072;
	// begin inline asm
	mov.b32 %r12306, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12304, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12305, %r12306, %r12304;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12308, %r11989, %r12305;
	// end inline asm
	// begin inline asm
	mov.b32 %r12311, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12312, %r12306, %r12311;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12315, %r11997, %r12312;
	// end inline asm
	// begin inline asm
	mov.b32 %r12318, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12319, %r12306, %r12318;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12322, %r12005, %r12319;
	// end inline asm
	// begin inline asm
	mov.b32 %r12325, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12326, %r12306, %r12325;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12329, %r12013, %r12326;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12332, %r12308, %r12322, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12336, %r12315, %r12329, %r4416;
	// end inline asm
	shl.b32 	%r12343, %r12336, 4;
	// begin inline asm
	lop3.b32 %r12340, %r4422, %r12332, %r12343, 202;
	// end inline asm
	xor.b32  	%r16252, %r12340, -2004318072;
	st.shared.u32 	[%rd112], %r16245;
	st.shared.u32 	[%rd114], %r16246;
	st.shared.u32 	[%rd116], %r16247;
	st.shared.u32 	[%rd118], %r16248;
	st.shared.u32 	[%rd120], %r16249;
	st.shared.u32 	[%rd122], %r16250;
	st.shared.u32 	[%rd124], %r16251;
	st.shared.u32 	[%rd126], %r16252;
	ld.shared.u32 	%r16388, [%rd96];
	ld.shared.u32 	%r16389, [%rd98];
	ld.shared.u32 	%r16390, [%rd100];
	ld.shared.u32 	%r16391, [%rd102];
	ld.shared.u32 	%r16400, [%rd104];
	ld.shared.u32 	%r16401, [%rd106];
	ld.shared.u32 	%r16402, [%rd108];
	ld.shared.u32 	%r16403, [%rd110];
	// begin inline asm
	mov.b32 %r12349, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12360, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12348, %r16388, -2004318072;
	// begin inline asm
	lop3.b32 %r12346, %r899, %r12348, %r12349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12351, %r12349, %r12350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12354, %r12346, %r12351;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12357, %r910, %r12348, %r12360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12362, %r12360, %r12361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12365, %r12357, %r12362;
	// end inline asm
	shr.u32 	%r12370, %r12348, 8;
	// begin inline asm
	lop3.b32 %r12368, %r899, %r12370, %r12349, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12373, %r12349, %r12372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12376, %r12368, %r12373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12379, %r910, %r12370, %r12360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12384, %r12360, %r12383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12387, %r12379, %r12384;
	// end inline asm
	// begin inline asm
	mov.b32 %r12395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12406, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12394, %r16389, -2004318072;
	// begin inline asm
	lop3.b32 %r12392, %r899, %r12394, %r12395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12397, %r12395, %r12396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12400, %r12392, %r12397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12403, %r910, %r12394, %r12406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12408, %r12406, %r12407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12411, %r12403, %r12408;
	// end inline asm
	shr.u32 	%r12416, %r12394, 8;
	// begin inline asm
	lop3.b32 %r12414, %r899, %r12416, %r12395, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12419, %r12395, %r12418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12422, %r12414, %r12419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12425, %r910, %r12416, %r12406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12430, %r12406, %r12429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12433, %r12425, %r12430;
	// end inline asm
	// begin inline asm
	mov.b32 %r12441, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12452, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12440, %r16390, -2004318072;
	// begin inline asm
	lop3.b32 %r12438, %r899, %r12440, %r12441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12443, %r12441, %r12442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12446, %r12438, %r12443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12449, %r910, %r12440, %r12452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12454, %r12452, %r12453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12457, %r12449, %r12454;
	// end inline asm
	shr.u32 	%r12462, %r12440, 8;
	// begin inline asm
	lop3.b32 %r12460, %r899, %r12462, %r12441, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12465, %r12441, %r12464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12468, %r12460, %r12465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12471, %r910, %r12462, %r12452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12476, %r12452, %r12475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12479, %r12471, %r12476;
	// end inline asm
	// begin inline asm
	mov.b32 %r12487, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12498, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12486, %r16391, -2004318072;
	// begin inline asm
	lop3.b32 %r12484, %r899, %r12486, %r12487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12489, %r12487, %r12488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12492, %r12484, %r12489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12495, %r910, %r12486, %r12498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12500, %r12498, %r12499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12503, %r12495, %r12500;
	// end inline asm
	shr.u32 	%r12508, %r12486, 8;
	// begin inline asm
	lop3.b32 %r12506, %r899, %r12508, %r12487, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12511, %r12487, %r12510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12514, %r12506, %r12511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12517, %r910, %r12508, %r12498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12522, %r12498, %r12521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12525, %r12517, %r12522;
	// end inline asm
	// begin inline asm
	mov.b32 %r12533, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12544, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12532, %r16400, -2004318072;
	// begin inline asm
	lop3.b32 %r12530, %r899, %r12532, %r12533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12535, %r12533, %r12534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12538, %r12530, %r12535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12541, %r910, %r12532, %r12544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12546, %r12544, %r12545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12549, %r12541, %r12546;
	// end inline asm
	shr.u32 	%r12554, %r12532, 8;
	// begin inline asm
	lop3.b32 %r12552, %r899, %r12554, %r12533, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12557, %r12533, %r12556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12560, %r12552, %r12557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12563, %r910, %r12554, %r12544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12568, %r12544, %r12567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12571, %r12563, %r12568;
	// end inline asm
	// begin inline asm
	mov.b32 %r12579, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12590, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12578, %r16401, -2004318072;
	// begin inline asm
	lop3.b32 %r12576, %r899, %r12578, %r12579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12581, %r12579, %r12580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12584, %r12576, %r12581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12587, %r910, %r12578, %r12590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12592, %r12590, %r12591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12595, %r12587, %r12592;
	// end inline asm
	shr.u32 	%r12600, %r12578, 8;
	// begin inline asm
	lop3.b32 %r12598, %r899, %r12600, %r12579, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12603, %r12579, %r12602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12606, %r12598, %r12603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12609, %r910, %r12600, %r12590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12614, %r12590, %r12613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12617, %r12609, %r12614;
	// end inline asm
	// begin inline asm
	mov.b32 %r12625, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12636, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12624, %r16402, -2004318072;
	// begin inline asm
	lop3.b32 %r12622, %r899, %r12624, %r12625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12627, %r12625, %r12626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12630, %r12622, %r12627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12633, %r910, %r12624, %r12636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12638, %r12636, %r12637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12641, %r12633, %r12638;
	// end inline asm
	shr.u32 	%r12646, %r12624, 8;
	// begin inline asm
	lop3.b32 %r12644, %r899, %r12646, %r12625, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12649, %r12625, %r12648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12652, %r12644, %r12649;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12655, %r910, %r12646, %r12636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12660, %r12636, %r12659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12663, %r12655, %r12660;
	// end inline asm
	// begin inline asm
	mov.b32 %r12671, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12682, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12670, %r16403, -2004318072;
	// begin inline asm
	lop3.b32 %r12668, %r899, %r12670, %r12671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12673, %r12671, %r12672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12676, %r12668, %r12673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12679, %r910, %r12670, %r12682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12684, %r12682, %r12683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12687, %r12679, %r12684;
	// end inline asm
	shr.u32 	%r12692, %r12670, 8;
	// begin inline asm
	lop3.b32 %r12690, %r899, %r12692, %r12671, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12695, %r12671, %r12694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12698, %r12690, %r12695;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12701, %r910, %r12692, %r12682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12706, %r12682, %r12705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12709, %r12701, %r12706;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12712, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12714, %r12712, %r12354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12717, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12719, %r12717, %r12365;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12722, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12724, %r12722, %r12376;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12727, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12729, %r12727, %r12387;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12732, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12734, %r12732, %r12400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12737, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12739, %r12737, %r12411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12742, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12744, %r12742, %r12422;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12747, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12749, %r12747, %r12433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12752, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12754, %r12752, %r12446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12757, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12759, %r12757, %r12457;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12762, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12764, %r12762, %r12468;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12767, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12769, %r12767, %r12479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12772, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12774, %r12772, %r12492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12777, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12779, %r12777, %r12503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12782, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12784, %r12782, %r12514;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12787, %r421;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12789, %r12787, %r12525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12792, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12794, %r12792, %r12538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12797, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12799, %r12797, %r12549;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12802, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12804, %r12802, %r12560;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12807, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12809, %r12807, %r12571;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12812, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12814, %r12812, %r12584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12817, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12819, %r12817, %r12595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12822, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12824, %r12822, %r12606;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12827, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12829, %r12827, %r12617;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12832, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12834, %r12832, %r12630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12837, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12839, %r12837, %r12641;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12842, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12844, %r12842, %r12652;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12847, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12849, %r12847, %r12663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12852, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12854, %r12852, %r12676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12857, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12859, %r12857, %r12687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12862, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12864, %r12862, %r12698;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12867, %r439;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12869, %r12867, %r12709;
	// end inline asm
	// begin inline asm
	mov.b32 %r12877, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12888, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12874, %r899, %r900, %r12877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12879, %r12877, %r12878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12882, %r12874, %r12879;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12885, %r910, %r900, %r12888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12890, %r12888, %r12889;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12893, %r12885, %r12890;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12896, %r899, %r922, %r12877, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12900, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12901, %r12877, %r12900;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12904, %r12896, %r12901;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12907, %r910, %r922, %r12888, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12911, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12912, %r12888, %r12911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12915, %r12907, %r12912;
	// end inline asm
	// begin inline asm
	mov.b32 %r12923, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12934, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12920, %r899, %r946, %r12923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12925, %r12923, %r12924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12928, %r12920, %r12925;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12931, %r910, %r946, %r12934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12935, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12936, %r12934, %r12935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12939, %r12931, %r12936;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12942, %r899, %r968, %r12923, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12946, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12947, %r12923, %r12946;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12950, %r12942, %r12947;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12953, %r910, %r968, %r12934, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12957, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12958, %r12934, %r12957;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12961, %r12953, %r12958;
	// end inline asm
	// begin inline asm
	mov.b32 %r12969, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12980, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12966, %r899, %r992, %r12969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12971, %r12969, %r12970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12974, %r12966, %r12971;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12977, %r910, %r992, %r12980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12981, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12982, %r12980, %r12981;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12985, %r12977, %r12982;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12988, %r899, %r1014, %r12969, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12992, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12993, %r12969, %r12992;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12996, %r12988, %r12993;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12999, %r910, %r1014, %r12980, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13003, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13004, %r12980, %r13003;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13007, %r12999, %r13004;
	// end inline asm
	// begin inline asm
	mov.b32 %r13015, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13026, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13012, %r899, %r1038, %r13015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13017, %r13015, %r13016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13020, %r13012, %r13017;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13023, %r910, %r1038, %r13026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13027, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13028, %r13026, %r13027;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13031, %r13023, %r13028;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13034, %r899, %r1060, %r13015, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13039, %r13015, %r13038;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13042, %r13034, %r13039;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13045, %r910, %r1060, %r13026, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13049, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13050, %r13026, %r13049;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13053, %r13045, %r13050;
	// end inline asm
	// begin inline asm
	mov.b32 %r13061, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13072, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13058, %r899, %r1084, %r13061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13063, %r13061, %r13062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13066, %r13058, %r13063;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13069, %r910, %r1084, %r13072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13074, %r13072, %r13073;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13077, %r13069, %r13074;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13080, %r899, %r1106, %r13061, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13084, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13085, %r13061, %r13084;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13088, %r13080, %r13085;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13091, %r910, %r1106, %r13072, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13095, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13096, %r13072, %r13095;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13099, %r13091, %r13096;
	// end inline asm
	// begin inline asm
	mov.b32 %r13107, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13118, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13104, %r899, %r1130, %r13107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13109, %r13107, %r13108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13112, %r13104, %r13109;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13115, %r910, %r1130, %r13118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13119, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13120, %r13118, %r13119;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13123, %r13115, %r13120;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13126, %r899, %r1152, %r13107, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13130, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13131, %r13107, %r13130;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13134, %r13126, %r13131;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13137, %r910, %r1152, %r13118, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13142, %r13118, %r13141;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13145, %r13137, %r13142;
	// end inline asm
	// begin inline asm
	mov.b32 %r13153, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13164, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13150, %r899, %r1176, %r13153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13155, %r13153, %r13154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13158, %r13150, %r13155;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13161, %r910, %r1176, %r13164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13165, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13166, %r13164, %r13165;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13169, %r13161, %r13166;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13172, %r899, %r1198, %r13153, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13176, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13177, %r13153, %r13176;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13180, %r13172, %r13177;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13183, %r910, %r1198, %r13164, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13187, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13188, %r13164, %r13187;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13191, %r13183, %r13188;
	// end inline asm
	// begin inline asm
	mov.b32 %r13199, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13210, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13196, %r899, %r1222, %r13199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13201, %r13199, %r13200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13204, %r13196, %r13201;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13207, %r910, %r1222, %r13210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13211, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13212, %r13210, %r13211;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13215, %r13207, %r13212;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13218, %r899, %r1244, %r13199, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13222, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13223, %r13199, %r13222;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13226, %r13218, %r13223;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13229, %r910, %r1244, %r13210, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13233, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13234, %r13210, %r13233;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13237, %r13229, %r13234;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13240, %r313, %r12882, %r12714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13244, %r313, %r12893, %r12719;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13248, %r313, %r12904, %r12724;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13252, %r313, %r12915, %r12729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13256, %r313, %r12928, %r12734;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13260, %r313, %r12939, %r12739;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13264, %r313, %r12950, %r12744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13268, %r313, %r12961, %r12749;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13272, %r313, %r12974, %r12754;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13276, %r313, %r12985, %r12759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13280, %r313, %r12996, %r12764;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13284, %r313, %r13007, %r12769;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13288, %r313, %r13020, %r12774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13292, %r313, %r13031, %r12779;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13296, %r313, %r13042, %r12784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13300, %r313, %r13053, %r12789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13304, %r331, %r13066, %r12794;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13308, %r331, %r13077, %r12799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13312, %r331, %r13088, %r12804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13316, %r331, %r13099, %r12809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13320, %r331, %r13112, %r12814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13324, %r331, %r13123, %r12819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13328, %r331, %r13134, %r12824;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13332, %r331, %r13145, %r12829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13336, %r331, %r13158, %r12834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13340, %r331, %r13169, %r12839;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13344, %r331, %r13180, %r12844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13348, %r331, %r13191, %r12849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13352, %r331, %r13204, %r12854;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13356, %r331, %r13215, %r12859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13360, %r331, %r13226, %r12864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13364, %r331, %r13237, %r12869;
	// end inline asm
	// begin inline asm
	mov.b32 %r13373, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13384, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13370, %r899, %r4716, %r13373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13375, %r13373, %r13374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13378, %r13370, %r13375;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13381, %r910, %r4716, %r13384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13386, %r13384, %r13385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13389, %r13381, %r13386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13392, %r899, %r4738, %r13373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13397, %r13373, %r13396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13400, %r13392, %r13397;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13403, %r910, %r4738, %r13384, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13408, %r13384, %r13407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13411, %r13403, %r13408;
	// end inline asm
	// begin inline asm
	mov.b32 %r13419, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13430, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13416, %r899, %r4762, %r13419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13421, %r13419, %r13420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13424, %r13416, %r13421;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13427, %r910, %r4762, %r13430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13432, %r13430, %r13431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13435, %r13427, %r13432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13438, %r899, %r4784, %r13419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13443, %r13419, %r13442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13446, %r13438, %r13443;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13449, %r910, %r4784, %r13430, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13454, %r13430, %r13453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13457, %r13449, %r13454;
	// end inline asm
	// begin inline asm
	mov.b32 %r13465, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13476, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13462, %r899, %r4808, %r13465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13467, %r13465, %r13466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13470, %r13462, %r13467;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13473, %r910, %r4808, %r13476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13478, %r13476, %r13477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13481, %r13473, %r13478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13484, %r899, %r4830, %r13465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13489, %r13465, %r13488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13492, %r13484, %r13489;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13495, %r910, %r4830, %r13476, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13500, %r13476, %r13499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13503, %r13495, %r13500;
	// end inline asm
	// begin inline asm
	mov.b32 %r13511, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13522, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13508, %r899, %r4854, %r13511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13513, %r13511, %r13512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13516, %r13508, %r13513;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13519, %r910, %r4854, %r13522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13524, %r13522, %r13523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13527, %r13519, %r13524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13530, %r899, %r4876, %r13511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13535, %r13511, %r13534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13538, %r13530, %r13535;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13541, %r910, %r4876, %r13522, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13546, %r13522, %r13545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13549, %r13541, %r13546;
	// end inline asm
	// begin inline asm
	mov.b32 %r13557, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13568, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13554, %r899, %r4900, %r13557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13559, %r13557, %r13558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13562, %r13554, %r13559;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13565, %r910, %r4900, %r13568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13570, %r13568, %r13569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13573, %r13565, %r13570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13576, %r899, %r4922, %r13557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13581, %r13557, %r13580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13584, %r13576, %r13581;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13587, %r910, %r4922, %r13568, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13592, %r13568, %r13591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13595, %r13587, %r13592;
	// end inline asm
	// begin inline asm
	mov.b32 %r13603, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13614, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13600, %r899, %r4946, %r13603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13605, %r13603, %r13604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13608, %r13600, %r13605;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13611, %r910, %r4946, %r13614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13616, %r13614, %r13615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13619, %r13611, %r13616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13622, %r899, %r4968, %r13603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13627, %r13603, %r13626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13630, %r13622, %r13627;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13633, %r910, %r4968, %r13614, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13638, %r13614, %r13637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13641, %r13633, %r13638;
	// end inline asm
	// begin inline asm
	mov.b32 %r13649, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13660, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13646, %r899, %r4992, %r13649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13651, %r13649, %r13650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13654, %r13646, %r13651;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13657, %r910, %r4992, %r13660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13662, %r13660, %r13661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13665, %r13657, %r13662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13668, %r899, %r5014, %r13649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13673, %r13649, %r13672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13676, %r13668, %r13673;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13679, %r910, %r5014, %r13660, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13684, %r13660, %r13683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13687, %r13679, %r13684;
	// end inline asm
	// begin inline asm
	mov.b32 %r13695, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13706, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13692, %r899, %r5038, %r13695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13697, %r13695, %r13696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13700, %r13692, %r13697;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13703, %r910, %r5038, %r13706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13708, %r13706, %r13707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13711, %r13703, %r13708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13714, %r899, %r5060, %r13695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13719, %r13695, %r13718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13722, %r13714, %r13719;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13725, %r910, %r5060, %r13706, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13730, %r13706, %r13729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13733, %r13725, %r13730;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13736, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13738, %r13736, %r13378, %r13240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13742, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13744, %r13742, %r13389, %r13244;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13748, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13750, %r13748, %r13400, %r13248;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13754, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13756, %r13754, %r13411, %r13252;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13760, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13762, %r13760, %r13424, %r13256;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13766, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13768, %r13766, %r13435, %r13260;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13772, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13774, %r13772, %r13446, %r13264;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13778, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13780, %r13778, %r13457, %r13268;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13784, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13786, %r13784, %r13470, %r13272;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13790, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13792, %r13790, %r13481, %r13276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13796, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13798, %r13796, %r13492, %r13280;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13802, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13804, %r13802, %r13503, %r13284;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13808, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13810, %r13808, %r13516, %r13288;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13814, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13816, %r13814, %r13527, %r13292;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13820, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13822, %r13820, %r13538, %r13296;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13826, %r349;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13828, %r13826, %r13549, %r13300;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13832, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13834, %r13832, %r13562, %r13304;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13838, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13840, %r13838, %r13573, %r13308;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13844, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13846, %r13844, %r13584, %r13312;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13850, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13852, %r13850, %r13595, %r13316;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13856, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13858, %r13856, %r13608, %r13320;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13862, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13864, %r13862, %r13619, %r13324;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13868, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13870, %r13868, %r13630, %r13328;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13874, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13876, %r13874, %r13641, %r13332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13880, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13882, %r13880, %r13654, %r13336;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13886, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13888, %r13886, %r13665, %r13340;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13892, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13894, %r13892, %r13676, %r13344;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13898, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13900, %r13898, %r13687, %r13348;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13904, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13906, %r13904, %r13700, %r13352;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13910, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13912, %r13910, %r13711, %r13356;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13916, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13918, %r13916, %r13722, %r13360;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13922, %r367;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13924, %r13922, %r13733, %r13364;
	// end inline asm
	// begin inline asm
	mov.b32 %r13933, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13944, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13930, %r899, %r8532, %r13933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13935, %r13933, %r13934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13938, %r13930, %r13935;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13941, %r910, %r8532, %r13944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13945, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13946, %r13944, %r13945;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13949, %r13941, %r13946;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13952, %r899, %r8554, %r13933, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13957, %r13933, %r13956;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13960, %r13952, %r13957;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13963, %r910, %r8554, %r13944, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13967, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13968, %r13944, %r13967;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13971, %r13963, %r13968;
	// end inline asm
	// begin inline asm
	mov.b32 %r13979, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13990, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13976, %r899, %r8578, %r13979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13981, %r13979, %r13980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13984, %r13976, %r13981;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13987, %r910, %r8578, %r13990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13992, %r13990, %r13991;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13995, %r13987, %r13992;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13998, %r899, %r8600, %r13979, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14002, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14003, %r13979, %r14002;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14006, %r13998, %r14003;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14009, %r910, %r8600, %r13990, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14013, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14014, %r13990, %r14013;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14017, %r14009, %r14014;
	// end inline asm
	// begin inline asm
	mov.b32 %r14025, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14036, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14022, %r899, %r8624, %r14025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14027, %r14025, %r14026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14030, %r14022, %r14027;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14033, %r910, %r8624, %r14036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14037, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14038, %r14036, %r14037;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14041, %r14033, %r14038;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14044, %r899, %r8646, %r14025, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14048, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14049, %r14025, %r14048;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14052, %r14044, %r14049;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14055, %r910, %r8646, %r14036, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14060, %r14036, %r14059;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14063, %r14055, %r14060;
	// end inline asm
	// begin inline asm
	mov.b32 %r14071, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14082, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14068, %r899, %r8670, %r14071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14073, %r14071, %r14072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14076, %r14068, %r14073;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14079, %r910, %r8670, %r14082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14083, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14084, %r14082, %r14083;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14087, %r14079, %r14084;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14090, %r899, %r8692, %r14071, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14095, %r14071, %r14094;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14098, %r14090, %r14095;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14101, %r910, %r8692, %r14082, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14105, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14106, %r14082, %r14105;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14109, %r14101, %r14106;
	// end inline asm
	// begin inline asm
	mov.b32 %r14117, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14128, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14114, %r899, %r8716, %r14117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14119, %r14117, %r14118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14122, %r14114, %r14119;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14125, %r910, %r8716, %r14128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14129, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14130, %r14128, %r14129;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14133, %r14125, %r14130;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14136, %r899, %r8738, %r14117, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14140, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14141, %r14117, %r14140;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14144, %r14136, %r14141;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14147, %r910, %r8738, %r14128, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14151, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14152, %r14128, %r14151;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14155, %r14147, %r14152;
	// end inline asm
	// begin inline asm
	mov.b32 %r14163, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14174, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14160, %r899, %r8762, %r14163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14165, %r14163, %r14164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14168, %r14160, %r14165;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14171, %r910, %r8762, %r14174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14176, %r14174, %r14175;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14179, %r14171, %r14176;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14182, %r899, %r8784, %r14163, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14186, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14187, %r14163, %r14186;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14190, %r14182, %r14187;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14193, %r910, %r8784, %r14174, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14197, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14198, %r14174, %r14197;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14201, %r14193, %r14198;
	// end inline asm
	// begin inline asm
	mov.b32 %r14209, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14220, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14206, %r899, %r8808, %r14209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14211, %r14209, %r14210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14214, %r14206, %r14211;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14217, %r910, %r8808, %r14220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14221, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14222, %r14220, %r14221;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14225, %r14217, %r14222;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14228, %r899, %r8830, %r14209, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14232, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14233, %r14209, %r14232;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14236, %r14228, %r14233;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14239, %r910, %r8830, %r14220, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14243, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14244, %r14220, %r14243;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14247, %r14239, %r14244;
	// end inline asm
	// begin inline asm
	mov.b32 %r14255, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14266, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14252, %r899, %r8854, %r14255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14257, %r14255, %r14256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14260, %r14252, %r14257;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14263, %r910, %r8854, %r14266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14267, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14268, %r14266, %r14267;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14271, %r14263, %r14268;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14274, %r899, %r8876, %r14255, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14279, %r14255, %r14278;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14282, %r14274, %r14279;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14285, %r910, %r8876, %r14266, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14289, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14290, %r14266, %r14289;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14293, %r14285, %r14290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r385, %r13938, %r13738;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14428, %r385, %r13949, %r13744;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r385, %r13960, %r13750;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14437, %r385, %r13971, %r13756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r385, %r13984, %r13762;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14446, %r385, %r13995, %r13768;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r385, %r14006, %r13774;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14455, %r385, %r14017, %r13780;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r385, %r14030, %r13786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14464, %r385, %r14041, %r13792;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r385, %r14052, %r13798;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14473, %r385, %r14063, %r13804;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r385, %r14076, %r13810;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14482, %r385, %r14087, %r13816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r385, %r14098, %r13822;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14491, %r385, %r14109, %r13828;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r403, %r14122, %r13834;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14500, %r403, %r14133, %r13840;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r403, %r14144, %r13846;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14509, %r403, %r14155, %r13852;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r403, %r14168, %r13858;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14518, %r403, %r14179, %r13864;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r403, %r14190, %r13870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14527, %r403, %r14201, %r13876;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14539, %r403, %r14214, %r13882;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14536, %r403, %r14225, %r13888;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14548, %r403, %r14236, %r13894;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r403, %r14247, %r13900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14557, %r403, %r14260, %r13906;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14554, %r403, %r14271, %r13912;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r403, %r14282, %r13918;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14563, %r403, %r14293, %r13924;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14424, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14426, %r14424, %r14428;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14429, %r467, %r14431, %r14426;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14433, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14435, %r14433, %r14437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14438, %r467, %r14440, %r14435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14442, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14444, %r14442, %r14446;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14447, %r467, %r14449, %r14444;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14451, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14453, %r14451, %r14455;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14456, %r467, %r14458, %r14453;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14460, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14462, %r14460, %r14464;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14465, %r467, %r14467, %r14462;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14469, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14471, %r14469, %r14473;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14474, %r467, %r14476, %r14471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14478, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14480, %r14478, %r14482;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14483, %r467, %r14485, %r14480;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14487, %r473;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14489, %r14487, %r14491;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14492, %r467, %r14494, %r14489;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14496, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14498, %r14496, %r14500;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14501, %r470, %r14503, %r14498;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14505, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14507, %r14505, %r14509;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14510, %r470, %r14512, %r14507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14514, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14516, %r14514, %r14518;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14519, %r470, %r14521, %r14516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14523, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14525, %r14523, %r14527;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14528, %r470, %r14530, %r14525;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14532, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14534, %r14532, %r14536;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14537, %r470, %r14539, %r14534;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14541, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14543, %r14541, %r14545;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14546, %r470, %r14548, %r14543;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14550, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14552, %r14550, %r14554;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14555, %r470, %r14557, %r14552;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14559, %r476;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14561, %r14559, %r14563;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14564, %r470, %r14566, %r14561;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14568, %r473, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14571, %r467, %r14428, %r14568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14575, %r473, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14578, %r467, %r14437, %r14575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14582, %r473, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14585, %r467, %r14446, %r14582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14589, %r473, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14592, %r467, %r14455, %r14589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14596, %r473, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14599, %r467, %r14464, %r14596;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14603, %r473, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14606, %r467, %r14473, %r14603;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14610, %r473, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14613, %r467, %r14482, %r14610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14617, %r473, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14620, %r467, %r14491, %r14617;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14624, %r476, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14627, %r470, %r14500, %r14624;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14631, %r476, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14634, %r470, %r14509, %r14631;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14638, %r476, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14641, %r470, %r14518, %r14638;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14645, %r476, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14648, %r470, %r14527, %r14645;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14652, %r476, %r14539;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14655, %r470, %r14536, %r14652;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14659, %r476, %r14548;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14662, %r470, %r14545, %r14659;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14666, %r476, %r14557;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14669, %r470, %r14554, %r14666;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14673, %r476, %r14566;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14676, %r470, %r14563, %r14673;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14847, %r14844}, {%r522, %r528, %r525, %r531}, {%r14429, %r14571}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14856, %r14853}, {%r522, %r528, %r525, %r531}, {%r14438, %r14578}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14865, %r14862}, {%r522, %r528, %r525, %r531}, {%r14447, %r14585}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14874, %r14871}, {%r522, %r528, %r525, %r531}, {%r14456, %r14592}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14883, %r14880}, {%r522, %r528, %r525, %r531}, {%r14465, %r14599}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14892, %r14889}, {%r522, %r528, %r525, %r531}, {%r14474, %r14606}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14901, %r14898}, {%r522, %r528, %r525, %r531}, {%r14483, %r14613}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14910, %r14907}, {%r522, %r528, %r525, %r531}, {%r14492, %r14620}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14919, %r14916}, {%r522, %r528, %r525, %r531}, {%r14501, %r14627}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14928, %r14925}, {%r522, %r528, %r525, %r531}, {%r14510, %r14634}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14937, %r14934}, {%r522, %r528, %r525, %r531}, {%r14519, %r14641}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14946, %r14943}, {%r522, %r528, %r525, %r531}, {%r14528, %r14648}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14955, %r14952}, {%r522, %r528, %r525, %r531}, {%r14537, %r14655}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14964, %r14961}, {%r522, %r528, %r525, %r531}, {%r14546, %r14662}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14973, %r14970}, {%r522, %r528, %r525, %r531}, {%r14555, %r14669}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14982, %r14979}, {%r522, %r528, %r525, %r531}, {%r14564, %r14676}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14840, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14842, %r14840, %r14844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14845, %r572, %r14847, %r14842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14849, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14851, %r14849, %r14853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14854, %r572, %r14856, %r14851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14858, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14860, %r14858, %r14862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14863, %r572, %r14865, %r14860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14867, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14869, %r14867, %r14871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14872, %r572, %r14874, %r14869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14876, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14878, %r14876, %r14880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14881, %r572, %r14883, %r14878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14885, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14887, %r14885, %r14889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14890, %r572, %r14892, %r14887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14894, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14896, %r14894, %r14898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14899, %r572, %r14901, %r14896;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14903, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14905, %r14903, %r14907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14908, %r572, %r14910, %r14905;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14912, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14914, %r14912, %r14916;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14917, %r572, %r14919, %r14914;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14921, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14923, %r14921, %r14925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14926, %r572, %r14928, %r14923;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14930, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14932, %r14930, %r14934;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14935, %r572, %r14937, %r14932;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14939, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14941, %r14939, %r14943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14944, %r572, %r14946, %r14941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14948, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14950, %r14948, %r14952;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14953, %r572, %r14955, %r14950;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14957, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14959, %r14957, %r14961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14962, %r572, %r14964, %r14959;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14966, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14968, %r14966, %r14970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14971, %r572, %r14973, %r14968;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14975, %r575;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14977, %r14975, %r14979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14980, %r572, %r14982, %r14977;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14984, %r575, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14987, %r572, %r14844, %r14984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14991, %r575, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14994, %r572, %r14853, %r14991;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14998, %r575, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15001, %r572, %r14862, %r14998;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15005, %r575, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15008, %r572, %r14871, %r15005;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15012, %r575, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15015, %r572, %r14880, %r15012;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15019, %r575, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15022, %r572, %r14889, %r15019;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15026, %r575, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15029, %r572, %r14898, %r15026;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15033, %r575, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15036, %r572, %r14907, %r15033;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15040, %r575, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15043, %r572, %r14916, %r15040;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15047, %r575, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15050, %r572, %r14925, %r15047;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15054, %r575, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15057, %r572, %r14934, %r15054;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15061, %r575, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15064, %r572, %r14943, %r15061;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15068, %r575, %r14955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15071, %r572, %r14952, %r15068;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15075, %r575, %r14964;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15078, %r572, %r14961, %r15075;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15082, %r575, %r14973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15085, %r572, %r14970, %r15082;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15089, %r575, %r14982;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15092, %r572, %r14979, %r15089;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15385, %r15388}, {%r610, %r616, %r613, %r619}, {%r14845, %r14987}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15391, %r15394}, {%r610, %r616, %r613, %r619}, {%r14854, %r14994}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15397, %r15400}, {%r610, %r616, %r613, %r619}, {%r14863, %r15001}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15403, %r15406}, {%r610, %r616, %r613, %r619}, {%r14872, %r15008}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15409, %r15412}, {%r610, %r616, %r613, %r619}, {%r14881, %r15015}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15415, %r15418}, {%r610, %r616, %r613, %r619}, {%r14890, %r15022}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15421, %r15424}, {%r610, %r616, %r613, %r619}, {%r14899, %r15029}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15427, %r15430}, {%r610, %r616, %r613, %r619}, {%r14908, %r15036}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15386, %r15389}, {%r610, %r616, %r613, %r619}, {%r14917, %r15043}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15392, %r15395}, {%r610, %r616, %r613, %r619}, {%r14926, %r15050}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15398, %r15401}, {%r610, %r616, %r613, %r619}, {%r14935, %r15057}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15404, %r15407}, {%r610, %r616, %r613, %r619}, {%r14944, %r15064}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15410, %r15413}, {%r610, %r616, %r613, %r619}, {%r14953, %r15071}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15416, %r15419}, {%r610, %r616, %r613, %r619}, {%r14962, %r15078}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15422, %r15425}, {%r610, %r616, %r613, %r619}, {%r14971, %r15085}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15428, %r15431}, {%r610, %r616, %r613, %r619}, {%r14980, %r15092}, {%r3240, %r3240};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15384, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15399, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15402, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15405, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15408, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15411, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15414, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15417, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15420, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15423, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15426, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15429, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15432, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15447, %r15400, %r15401;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15450, %r15403, %r15404;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15453, %r15406, %r15407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15456, %r15409, %r15410;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15459, %r15412, %r15413;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15462, %r15415, %r15416;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15465, %r15418, %r15419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15468, %r15421, %r15422;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15471, %r15424, %r15425;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15474, %r15427, %r15428;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15477, %r15430, %r15431;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r186, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r186, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r186, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r186, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r186, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r186, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r186, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r186, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r186, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r186, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r186, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r186, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r186, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r186, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r186, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r186, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r188, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r188, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r188, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r188, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r188, %r15444;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15543, %r188, %r15447;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15546, %r188, %r15450;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15549, %r188, %r15453;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15552, %r188, %r15456;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15555, %r188, %r15459;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15558, %r188, %r15462;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15561, %r188, %r15465;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15564, %r188, %r15468;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15567, %r188, %r15471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15570, %r188, %r15474;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15573, %r188, %r15477;
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15577, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15578, %r15480, %r15576;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15581, %r15578, %r15577;
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15585, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15586, %r15483, %r15584;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15589, %r15586, %r15585;
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15593, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15594, %r15486, %r15592;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15597, %r15594, %r15593;
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15601, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15602, %r15489, %r15600;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15605, %r15602, %r15601;
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15609, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15610, %r15492, %r15608;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15613, %r15610, %r15609;
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15617, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15618, %r15495, %r15616;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15621, %r15618, %r15617;
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15625, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15626, %r15498, %r15624;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15629, %r15626, %r15625;
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15633, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15634, %r15501, %r15632;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15637, %r15634, %r15633;
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15641, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15642, %r15504, %r15640;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15645, %r15642, %r15641;
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15649, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15650, %r15507, %r15648;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15653, %r15650, %r15649;
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15657, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15658, %r15510, %r15656;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15661, %r15658, %r15657;
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15665, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15666, %r15513, %r15664;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15669, %r15666, %r15665;
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15673, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15674, %r15516, %r15672;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15677, %r15674, %r15673;
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15681, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15682, %r15519, %r15680;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15685, %r15682, %r15681;
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15689, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15690, %r15522, %r15688;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15693, %r15690, %r15689;
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15697, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15698, %r15525, %r15696;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15701, %r15698, %r15697;
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15705, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15706, %r15528, %r15704;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15709, %r15706, %r15705;
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15713, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15714, %r15531, %r15712;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15717, %r15714, %r15713;
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15721, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15722, %r15534, %r15720;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15725, %r15722, %r15721;
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15729, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15730, %r15537, %r15728;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15733, %r15730, %r15729;
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15737, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15738, %r15540, %r15736;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15741, %r15738, %r15737;
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15745, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15746, %r15543, %r15744;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15749, %r15746, %r15745;
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15753, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15754, %r15546, %r15752;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15757, %r15754, %r15753;
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15761, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15762, %r15549, %r15760;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15765, %r15762, %r15761;
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15769, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15770, %r15552, %r15768;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15773, %r15770, %r15769;
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15777, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15778, %r15555, %r15776;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15781, %r15778, %r15777;
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15785, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15786, %r15558, %r15784;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15789, %r15786, %r15785;
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15793, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15794, %r15561, %r15792;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15797, %r15794, %r15793;
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15801, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15802, %r15564, %r15800;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15805, %r15802, %r15801;
	// end inline asm
	// begin inline asm
	mov.b32 %r15808, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15809, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15810, %r15567, %r15808;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15813, %r15810, %r15809;
	// end inline asm
	// begin inline asm
	mov.b32 %r15816, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15817, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15818, %r15570, %r15816;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15821, %r15818, %r15817;
	// end inline asm
	// begin inline asm
	mov.b32 %r15824, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15825, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15826, %r15573, %r15824;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15829, %r15826, %r15825;
	// end inline asm
	// begin inline asm
	mov.b32 %r15835, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15833, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15834, %r15835, %r15833;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15837, %r15581, %r15834;
	// end inline asm
	// begin inline asm
	mov.b32 %r15840, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15841, %r15835, %r15840;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15844, %r15589, %r15841;
	// end inline asm
	// begin inline asm
	mov.b32 %r15847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15848, %r15835, %r15847;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15851, %r15597, %r15848;
	// end inline asm
	// begin inline asm
	mov.b32 %r15854, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15855, %r15835, %r15854;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15858, %r15605, %r15855;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15861, %r15837, %r15851, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15865, %r15844, %r15858, %r4416;
	// end inline asm
	shl.b32 	%r15872, %r15865, 4;
	// begin inline asm
	lop3.b32 %r15869, %r4422, %r15861, %r15872, 202;
	// end inline asm
	xor.b32  	%r16253, %r15869, -2004318072;
	// begin inline asm
	mov.b32 %r15876, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15874, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15875, %r15876, %r15874;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15878, %r15613, %r15875;
	// end inline asm
	// begin inline asm
	mov.b32 %r15881, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15882, %r15876, %r15881;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15885, %r15621, %r15882;
	// end inline asm
	// begin inline asm
	mov.b32 %r15888, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15889, %r15876, %r15888;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15892, %r15629, %r15889;
	// end inline asm
	// begin inline asm
	mov.b32 %r15895, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15896, %r15876, %r15895;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15899, %r15637, %r15896;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15902, %r15878, %r15892, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15906, %r15885, %r15899, %r4416;
	// end inline asm
	shl.b32 	%r15913, %r15906, 4;
	// begin inline asm
	lop3.b32 %r15910, %r4422, %r15902, %r15913, 202;
	// end inline asm
	xor.b32  	%r16254, %r15910, -2004318072;
	// begin inline asm
	mov.b32 %r15917, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15916, %r15917, %r15915;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15919, %r15645, %r15916;
	// end inline asm
	// begin inline asm
	mov.b32 %r15922, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15923, %r15917, %r15922;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15926, %r15653, %r15923;
	// end inline asm
	// begin inline asm
	mov.b32 %r15929, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15930, %r15917, %r15929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15933, %r15661, %r15930;
	// end inline asm
	// begin inline asm
	mov.b32 %r15936, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15937, %r15917, %r15936;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15940, %r15669, %r15937;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15943, %r15919, %r15933, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15947, %r15926, %r15940, %r4416;
	// end inline asm
	shl.b32 	%r15954, %r15947, 4;
	// begin inline asm
	lop3.b32 %r15951, %r4422, %r15943, %r15954, 202;
	// end inline asm
	xor.b32  	%r16255, %r15951, -2004318072;
	// begin inline asm
	mov.b32 %r15958, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15956, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15957, %r15958, %r15956;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15960, %r15677, %r15957;
	// end inline asm
	// begin inline asm
	mov.b32 %r15963, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15964, %r15958, %r15963;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15967, %r15685, %r15964;
	// end inline asm
	// begin inline asm
	mov.b32 %r15970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15971, %r15958, %r15970;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15974, %r15693, %r15971;
	// end inline asm
	// begin inline asm
	mov.b32 %r15977, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15978, %r15958, %r15977;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15981, %r15701, %r15978;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15984, %r15960, %r15974, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15988, %r15967, %r15981, %r4416;
	// end inline asm
	shl.b32 	%r15995, %r15988, 4;
	// begin inline asm
	lop3.b32 %r15992, %r4422, %r15984, %r15995, 202;
	// end inline asm
	xor.b32  	%r16256, %r15992, -2004318072;
	// begin inline asm
	mov.b32 %r15999, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15997, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15998, %r15999, %r15997;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16001, %r15709, %r15998;
	// end inline asm
	// begin inline asm
	mov.b32 %r16004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16005, %r15999, %r16004;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16008, %r15717, %r16005;
	// end inline asm
	// begin inline asm
	mov.b32 %r16011, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16012, %r15999, %r16011;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16015, %r15725, %r16012;
	// end inline asm
	// begin inline asm
	mov.b32 %r16018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16019, %r15999, %r16018;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16022, %r15733, %r16019;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16025, %r16001, %r16015, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16029, %r16008, %r16022, %r4416;
	// end inline asm
	shl.b32 	%r16036, %r16029, 4;
	// begin inline asm
	lop3.b32 %r16033, %r4422, %r16025, %r16036, 202;
	// end inline asm
	xor.b32  	%r16257, %r16033, -2004318072;
	// begin inline asm
	mov.b32 %r16040, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16038, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16039, %r16040, %r16038;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16042, %r15741, %r16039;
	// end inline asm
	// begin inline asm
	mov.b32 %r16045, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16046, %r16040, %r16045;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16049, %r15749, %r16046;
	// end inline asm
	// begin inline asm
	mov.b32 %r16052, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16053, %r16040, %r16052;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16056, %r15757, %r16053;
	// end inline asm
	// begin inline asm
	mov.b32 %r16059, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16060, %r16040, %r16059;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16063, %r15765, %r16060;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16066, %r16042, %r16056, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16070, %r16049, %r16063, %r4416;
	// end inline asm
	shl.b32 	%r16077, %r16070, 4;
	// begin inline asm
	lop3.b32 %r16074, %r4422, %r16066, %r16077, 202;
	// end inline asm
	xor.b32  	%r16258, %r16074, -2004318072;
	// begin inline asm
	mov.b32 %r16081, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16079, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16080, %r16081, %r16079;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16083, %r15773, %r16080;
	// end inline asm
	// begin inline asm
	mov.b32 %r16086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16087, %r16081, %r16086;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16090, %r15781, %r16087;
	// end inline asm
	// begin inline asm
	mov.b32 %r16093, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16094, %r16081, %r16093;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16097, %r15789, %r16094;
	// end inline asm
	// begin inline asm
	mov.b32 %r16100, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16101, %r16081, %r16100;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16104, %r15797, %r16101;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16107, %r16083, %r16097, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16111, %r16090, %r16104, %r4416;
	// end inline asm
	shl.b32 	%r16118, %r16111, 4;
	// begin inline asm
	lop3.b32 %r16115, %r4422, %r16107, %r16118, 202;
	// end inline asm
	xor.b32  	%r16259, %r16115, -2004318072;
	// begin inline asm
	mov.b32 %r16122, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16120, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16121, %r16122, %r16120;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16124, %r15805, %r16121;
	// end inline asm
	// begin inline asm
	mov.b32 %r16127, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16128, %r16122, %r16127;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16131, %r15813, %r16128;
	// end inline asm
	// begin inline asm
	mov.b32 %r16134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16135, %r16122, %r16134;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16138, %r15821, %r16135;
	// end inline asm
	// begin inline asm
	mov.b32 %r16141, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16142, %r16122, %r16141;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16145, %r15829, %r16142;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16148, %r16124, %r16138, %r4416;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16152, %r16131, %r16145, %r4416;
	// end inline asm
	shl.b32 	%r16159, %r16152, 4;
	// begin inline asm
	lop3.b32 %r16156, %r4422, %r16148, %r16159, 202;
	// end inline asm
	xor.b32  	%r16260, %r16156, -2004318072;
	st.shared.u32 	[%rd112], %r16253;
	st.shared.u32 	[%rd114], %r16254;
	st.shared.u32 	[%rd116], %r16255;
	st.shared.u32 	[%rd118], %r16256;
	st.shared.u32 	[%rd120], %r16257;
	st.shared.u32 	[%rd122], %r16258;
	st.shared.u32 	[%rd124], %r16259;
	st.shared.u32 	[%rd126], %r16260;
	add.s32 	%r16405, %r16405, 128;
	setp.eq.s32 	%p330, %r16405, 256;
	@%p330 bra 	$L__BB0_184;
	bra.uni 	$L__BB0_183;
$L__BB0_184:                            // %guard_exit29799
                                        //   in Loop: Header=BB0_181 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16266, [%rd5];
	ld.shared.u32 	%r16267, [%rd6+128];
	ld.shared.u32 	%r16274, [%rd6+4];
	ld.shared.u32 	%r16275, [%rd6+132];
	ld.shared.u32 	%r16282, [%rd7];
	ld.shared.u32 	%r16283, [%rd8+128];
	ld.shared.u32 	%r16290, [%rd8+4];
	ld.shared.u32 	%r16291, [%rd8+132];
	ld.shared.u32 	%r16298, [%rd5+16644];
	ld.shared.u32 	%r16299, [%rd6+16772];
	ld.shared.u32 	%r16306, [%rd6+16648];
	ld.shared.u32 	%r16307, [%rd6+16776];
	ld.shared.u32 	%r16314, [%rd7+16644];
	ld.shared.u32 	%r16315, [%rd8+16772];
	ld.shared.u32 	%r16322, [%rd8+16648];
	ld.shared.u32 	%r16323, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16261, %r16266, %r16267, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16265, %r16266, %r16267, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16269, %r16274, %r16275, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16273, %r16274, %r16275, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16277, %r16282, %r16283, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16281, %r16282, %r16283, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16285, %r16290, %r16291, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16289, %r16290, %r16291, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16293, %r16298, %r16299, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16297, %r16298, %r16299, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16301, %r16306, %r16307, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16305, %r16306, %r16307, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16309, %r16314, %r16315, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16313, %r16314, %r16315, %r813;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16317, %r16322, %r16323, %r809;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16321, %r16322, %r16323, %r813;
	// end inline asm
	selp.b32 	%r16325, %r16265, %r16261, %p316;
	shfl.sync.bfly.b32	%r258, %r16325, 8, 31, -1;
	selp.b32 	%r16326, %r16273, %r16269, %p316;
	shfl.sync.bfly.b32	%r259, %r16326, 8, 31, -1;
	selp.b32 	%r16327, %r16281, %r16277, %p316;
	shfl.sync.bfly.b32	%r260, %r16327, 8, 31, -1;
	selp.b32 	%r16328, %r16289, %r16285, %p316;
	shfl.sync.bfly.b32	%r261, %r16328, 8, 31, -1;
	selp.b32 	%r16329, %r16297, %r16293, %p316;
	shfl.sync.bfly.b32	%r16330, %r16329, 8, 31, -1;
	selp.b32 	%r16331, %r16305, %r16301, %p316;
	shfl.sync.bfly.b32	%r16332, %r16331, 8, 31, -1;
	selp.b32 	%r16333, %r16313, %r16309, %p316;
	shfl.sync.bfly.b32	%r16334, %r16333, 8, 31, -1;
	selp.b32 	%r16335, %r16321, %r16317, %p316;
	shfl.sync.bfly.b32	%r16336, %r16335, 8, 31, -1;
	and.b32  	%r270, %r16404, 768;
	setp.lt.u32 	%p332, %r270, 384;
	shl.b32 	%r16359, %r16404, 13;
	@%p332 bra 	$L__BB0_186;
// %bb.185:                             // %pass28428
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r16337, %r261, %r16289, %p316;
	selp.b32 	%r16338, %r16285, %r261, %p316;
	selp.b32 	%r16339, %r260, %r16281, %p316;
	selp.b32 	%r16340, %r16277, %r260, %p316;
	selp.b32 	%r16341, %r259, %r16273, %p316;
	selp.b32 	%r16342, %r16269, %r259, %p316;
	selp.b32 	%r16343, %r258, %r16265, %p316;
	selp.b32 	%r16344, %r16261, %r258, %p316;
	or.b32  	%r16346, %r16359, %r124;
	or.b32  	%r16347, %r16346, %r125;
	or.b32  	%r16348, %r16347, %r139;
	cvt.u64.u32 	%rd127, %r16348;
	add.s64 	%rd128, %rd127, %rd9;
	shr.u64 	%rd129, %rd128, 38;
	add.s64 	%rd130, %rd128, %rd129;
	shr.s64 	%rd131, %rd130, 26;
	setp.lt.s64 	%p334, %rd128, 0;
	and.b64  	%rd132, %rd130, -67108864;
	setp.ne.s64 	%p335, %rd132, %rd128;
	and.pred  	%p336, %p334, %p335;
	selp.u64 	%rd133, 1, 0, %p336;
	sub.s64 	%rd134, %rd133, %rd131;
	shl.b64 	%rd135, %rd134, 26;
	add.s64 	%rd136, %rd135, %rd128;
	shl.b64 	%rd137, %rd136, 2;
	add.s64 	%rd138, %rd3, %rd137;
	st.global.v4.u32 	[%rd138], {%r16344, %r16342, %r16343, %r16341};
	or.b32  	%r16349, %r16347, %r140;
	cvt.s64.s32 	%rd139, %r16349;
	add.s64 	%rd140, %rd139, %rd9;
	shr.u64 	%rd141, %rd140, 38;
	add.s64 	%rd142, %rd140, %rd141;
	shr.u64 	%rd143, %rd142, 26;
	shr.u64 	%rd144, %rd140, 63;
	sub.s64 	%rd145, %rd144, %rd143;
	shl.b64 	%rd146, %rd145, 26;
	add.s64 	%rd147, %rd146, %rd140;
	shl.b64 	%rd148, %rd147, 2;
	add.s64 	%rd149, %rd3, %rd148;
	st.global.v4.u32 	[%rd149], {%r16340, %r16338, %r16339, %r16337};
$L__BB0_186:                            // %pass28621
                                        //   in Loop: Header=BB0_181 Depth=1
	or.b32  	%r16350, %r270, 128;
	setp.lt.u32 	%p337, %r16350, 384;
	@%p337 bra 	$L__BB0_187;
// %bb.189:                             // %pass28644
                                        //   in Loop: Header=BB0_181 Depth=1
	selp.b32 	%r262, %r16293, %r16330, %p316;
	selp.b32 	%r263, %r16330, %r16297, %p316;
	selp.b32 	%r264, %r16301, %r16332, %p316;
	selp.b32 	%r265, %r16332, %r16305, %p316;
	selp.b32 	%r266, %r16309, %r16334, %p316;
	selp.b32 	%r267, %r16334, %r16313, %p316;
	selp.b32 	%r268, %r16317, %r16336, %p316;
	selp.b32 	%r269, %r16336, %r16321, %p316;
	or.b32  	%r16352, %r16359, %r124;
	or.b32  	%r16353, %r16352, %r125;
	or.b32  	%r16354, %r16353, 1048576;
	or.b32  	%r16355, %r16354, %r139;
	cvt.u64.u32 	%rd150, %r16355;
	add.s64 	%rd151, %rd150, %rd9;
	shr.u64 	%rd152, %rd151, 38;
	add.s64 	%rd153, %rd151, %rd152;
	shr.s64 	%rd154, %rd153, 26;
	setp.lt.s64 	%p338, %rd151, 0;
	and.b64  	%rd155, %rd153, -67108864;
	setp.ne.s64 	%p339, %rd155, %rd151;
	and.pred  	%p340, %p338, %p339;
	selp.u64 	%rd156, 1, 0, %p340;
	sub.s64 	%rd157, %rd156, %rd154;
	shl.b64 	%rd158, %rd157, 26;
	add.s64 	%rd159, %rd158, %rd151;
	shl.b64 	%rd160, %rd159, 2;
	add.s64 	%rd161, %rd3, %rd160;
	st.global.v4.u32 	[%rd161], {%r262, %r264, %r263, %r265};
	or.b32  	%r16356, %r16354, %r140;
	cvt.s64.s32 	%rd162, %r16356;
	add.s64 	%rd163, %rd162, %rd9;
	shr.u64 	%rd164, %rd163, 38;
	add.s64 	%rd165, %rd163, %rd164;
	shr.u64 	%rd166, %rd165, 26;
	shr.u64 	%rd167, %rd163, 63;
	sub.s64 	%rd168, %rd167, %rd166;
	shl.b64 	%rd169, %rd168, 26;
	add.s64 	%rd170, %rd169, %rd163;
	shl.b64 	%rd171, %rd170, 2;
	add.s64 	%rd172, %rd3, %rd171;
	st.global.v4.u32 	[%rd172], {%r266, %r268, %r267, %r269};
	bra.uni 	$L__BB0_187;
$L__BB0_188:                            // %L70747
	mov.u32 	%r16357, 0;
	st.global.u32 	[%rd4], %r16357;
	ret;
$L__BB0_7:                              // %L245
	mov.u32 	%r16358, 2;
	st.global.u32 	[%rd4], %r16358;
	mov.u64 	%rd173, exception5808;
	cvta.global.u64 	%rd174, %rd173;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd174;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r271;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd44, exception1;
	cvta.global.u64 	%rd45, %rd44;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd45;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r271;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
