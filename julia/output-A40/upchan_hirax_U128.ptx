// PTX kernel code for the CUDA upchannelizer
// This file has been generated automatically by `upchan.jl`.
// Do not modify this file, your changes will be lost.

// PTX CompilerJob of MethodInstance for upchan(::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::Int32, ::CuDeviceVector{Float16x2, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int4x8, 1}, ::CuDeviceVector{Int32, 1}) for sm_86, minthreads=512, blocks_per_sm=2

//
// Generated by LLVM NVPTX Back-End
//

.version 8.2
.target sm_86
.address_size 64

	// .globl	_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE // -- Begin function _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.func gpu_report_exception
(
	.param .b64 gpu_report_exception_param_0
)
.noreturn
{
	trap;
}
.func gpu_signal_exception
(
	.param .align 8 .b8 gpu_signal_exception_param_0[16]
)
.noreturn
{
	trap;
}
.extern .shared .align 32 .b8 shmem[];
.global .align 1 .b8 exception5818[6] = {101, 114, 114, 111, 114, 0};
.global .align 1 .b8 exception1[10] = {101, 120, 99, 101, 112, 116, 105, 111, 110, 0};
                                        // @_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE
.visible .entry _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE(
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0[16],
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5,
	.param .u32 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6,
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9[32],
	.param .align 8 .b8 _Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10[32]
)
.reqntid 512, 1, 1
.minnctapersm 2
{
	.reg .pred 	%p<313>;
	.reg .b16 	%rs<2390>;
	.reg .b32 	%r<16399>;
	.reg .f32 	%f<1424>;
	.reg .b64 	%rd<160>;

// %bb.0:                               // %conversion
	ld.param.u32 	%r192, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0+8];
	ld.param.u64 	%rd23, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_0];
	// begin inline asm
	mov.u32 %r199, %dynamic_smem_size;
	// end inline asm
	setp.gt.u32 	%p1, %r199, 66815;
	@%p1 bra 	$L__BB0_2;
	bra.uni 	$L__BB0_1;
$L__BB0_2:                              // %L16
	ld.param.u64 	%rd24, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_10];
	ld.param.u32 	%r193, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_1];
	mov.u32 	%r1, %ctaid.x;
	shl.b32 	%r200, %r1, 9;
	mov.u32 	%r2, %tid.y;
	shl.b32 	%r3, %r2, 5;
	mov.u32 	%r4, %tid.x;
	or.b32  	%r201, %r3, %r4;
	or.b32  	%r202, %r201, %r200;
	mul.wide.u32 	%rd30, %r202, 4;
	add.s64 	%rd4, %rd24, %rd30;
	mov.u32 	%r203, 1;
	st.global.u32 	[%rd4], %r203;
	setp.gt.u32 	%p2, %r193, 32767;
	@%p2 bra 	$L__BB0_7;
// %bb.3:                               // %L120
	ld.param.u32 	%r194, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_2];
	setp.lt.s32 	%p3, %r194, %r193;
	setp.gt.s32 	%p4, %r194, 65535;
	or.pred  	%p5, %p3, %p4;
	@%p5 bra 	$L__BB0_7;
// %bb.4:                               // %L127
	ld.param.u32 	%r195, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_3];
	sub.s32 	%r204, %r194, %r193;
	and.b32  	%r205, %r204, 255;
	setp.ne.s32 	%p6, %r205, 0;
	setp.gt.u32 	%p7, %r195, 255;
	or.pred  	%p8, %p6, %p7;
	@%p8 bra 	$L__BB0_7;
// %bb.5:                               // %L138
	ld.param.u32 	%r196, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_4];
	setp.lt.s32 	%p9, %r196, %r195;
	setp.gt.s32 	%p10, %r196, 511;
	or.pred  	%p11, %p9, %p10;
	@%p11 bra 	$L__BB0_7;
// %bb.6:                               // %L145
	sub.s32 	%r206, %r196, %r195;
	and.b32  	%r207, %r206, 1;
	setp.eq.b32 	%p12, %r207, 1;
	mov.pred 	%p13, 0;
	xor.pred  	%p14, %p12, %p13;
	@%p14 bra 	$L__BB0_8;
	bra.uni 	$L__BB0_7;
$L__BB0_8:                              // %L260
	ld.param.u32 	%r197, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_5];
	setp.lt.s32 	%p15, %r197, 0;
	@%p15 bra 	$L__BB0_10;
// %bb.9:                               // %L262
	ld.param.u32 	%r198, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_6];
	setp.le.s32 	%p16, %r197, %r198;
	setp.lt.s32 	%p17, %r198, 65;
	and.pred  	%p18, %p16, %p17;
	@%p18 bra 	$L__BB0_11;
	bra.uni 	$L__BB0_10;
$L__BB0_11:                             // %pass189
	bfe.u32 	%r152, %r4, 1, 1;
	and.b32  	%r153, %r4, 1;
	bfe.u32 	%r155, %r4, 2, 1;
	shr.u32 	%r156, %r4, 4;
	shl.b32 	%r218, %r156, 2;
	shl.b32 	%r219, %r155, 3;
	shl.b32 	%r220, %r153, 4;
	shl.b32 	%r221, %r152, 5;
	or.b32  	%r222, %r220, %r221;
	or.b32  	%r223, %r219, %r222;
	or.b32  	%r224, %r218, %r223;
	bfe.u32 	%r158, %r4, 3, 1;
	shl.b32 	%r225, %r158, 1;
	or.b32  	%r159, %r225, %r224;
	shl.b32 	%r160, %r159, 1;
	add.s32 	%r226, %r160, -511;
	cvt.rn.f32.s32 	%f126, %r226;
	mov.f32 	%f127, 0f44800000;
	div.approx.f32 	%f103, %f126, %f127;
	abs.f32 	%f128, %f103;
	setp.gt.f32 	%p19, %f128, 0f4B800000;
	mul.f32 	%f129, %f103, 0f00000000;
	selp.f32 	%f130, %f129, %f103, %p19;
	add.f32 	%f131, %f130, %f130;
	mov.b32 	%r227, %f131;
	and.b32  	%r228, %r227, -2147483648;
	mov.f32 	%f151, 0f00000000;
	mul.f32 	%f105, %f103, 0f40800000;
	setp.neu.f32 	%p24, %f105, 0f00000000;
	mov.f32 	%f1415, 0f3F800000;
	mov.f32 	%f1400, %f1415;
	@%p24 bra 	$L__BB0_12;
	bra.uni 	$L__BB0_13;
$L__BB0_12:                             // %L762
	add.f32 	%f154, %f105, %f105;
	mov.b32 	%r234, %f154;
	and.b32  	%r235, %r234, -2147483648;
	or.b32  	%r236, %r235, 1056964608;
	mov.b32 	%f155, %r236;
	add.f32 	%f156, %f154, %f155;
	cvt.rzi.f32.f32 	%f157, %f156;
	abs.f32 	%f158, %f154;
	setp.gt.f32 	%p25, %f158, 0f4B000000;
	selp.f32 	%f159, %f154, %f157, %p25;
	cvt.rzi.f32.f32 	%f160, %f154;
	setp.lt.f32 	%p26, %f158, 0f3F000000;
	selp.f32 	%f161, %f160, %f159, %p26;
	cvt.rzi.s32.f32 	%r237, %f161;
	fma.rn.f32 	%f162, %f161, 0fBF000000, %f105;
	mul.f32 	%f163, %f162, %f162;
	fma.rn.f32 	%f164, %f163, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f165, %f163, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f166, %f164, %f163, 0fC0A55DF6;
	fma.rn.f32 	%f167, %f165, %f163, 0f4081E0CF;
	fma.rn.f32 	%f168, %f163, %f162, 0f00000000;
	fma.rn.f32 	%f169, %f167, %f163, 0fC09DE9E6;
	fma.rn.f32 	%f170, %f166, %f168, 0f00000000;
	fma.rn.f32 	%f171, %f169, %f163, 0f3F800000;
	fma.rn.f32 	%f172, %f162, 0f40490FDB, %f170;
	and.b32  	%r238, %r237, 1;
	setp.eq.b32 	%p27, %r238, 1;
	selp.f32 	%f173, %f171, %f172, %p27;
	and.b32  	%r239, %r237, 2;
	setp.eq.s32 	%p28, %r239, 0;
	sub.f32 	%f175, %f151, %f173;
	selp.f32 	%f176, %f173, %f175, %p28;
	cvt.rzi.f32.f32 	%f177, %f105;
	setp.eq.f32 	%p29, %f105, %f177;
	mul.f32 	%f178, %f105, 0f00000000;
	selp.f32 	%f179, %f178, %f176, %p29;
	mul.f32 	%f180, %f103, 0f41490FDB;
	div.approx.f32 	%f1400, %f179, %f180;
$L__BB0_13:                             // %L766
	or.b32  	%r229, %r228, 1056964608;
	add.s32 	%r240, %r160, -383;
	cvt.rn.f32.s32 	%f184, %r240;
	div.approx.f32 	%f4, %f184, %f127;
	abs.f32 	%f186, %f4;
	setp.gt.f32 	%p30, %f186, 0f4B800000;
	mul.f32 	%f187, %f4, 0f00000000;
	selp.f32 	%f188, %f187, %f4, %p30;
	add.f32 	%f189, %f188, %f188;
	mov.b32 	%r241, %f189;
	and.b32  	%r242, %r241, -2147483648;
	or.b32  	%r243, %r242, 1056964608;
	mul.f32 	%f6, %f4, 0f40800000;
	setp.eq.f32 	%p35, %f6, 0f00000000;
	mov.f32 	%f1401, %f1415;
	@%p35 bra 	$L__BB0_15;
// %bb.14:                              // %L780
	add.f32 	%f212, %f6, %f6;
	mov.b32 	%r248, %f212;
	and.b32  	%r249, %r248, -2147483648;
	or.b32  	%r250, %r249, 1056964608;
	mov.b32 	%f213, %r250;
	add.f32 	%f214, %f212, %f213;
	cvt.rzi.f32.f32 	%f215, %f214;
	abs.f32 	%f216, %f212;
	setp.gt.f32 	%p36, %f216, 0f4B000000;
	selp.f32 	%f217, %f212, %f215, %p36;
	cvt.rzi.f32.f32 	%f218, %f212;
	setp.lt.f32 	%p37, %f216, 0f3F000000;
	selp.f32 	%f219, %f218, %f217, %p37;
	cvt.rzi.s32.f32 	%r251, %f219;
	fma.rn.f32 	%f220, %f219, 0fBF000000, %f6;
	mul.f32 	%f221, %f220, %f220;
	fma.rn.f32 	%f222, %f221, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f223, %f221, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f224, %f222, %f221, 0fC0A55DF6;
	fma.rn.f32 	%f225, %f223, %f221, 0f4081E0CF;
	fma.rn.f32 	%f226, %f221, %f220, 0f00000000;
	fma.rn.f32 	%f227, %f225, %f221, 0fC09DE9E6;
	fma.rn.f32 	%f228, %f224, %f226, 0f00000000;
	fma.rn.f32 	%f229, %f227, %f221, 0f3F800000;
	fma.rn.f32 	%f230, %f220, 0f40490FDB, %f228;
	and.b32  	%r252, %r251, 1;
	setp.eq.b32 	%p38, %r252, 1;
	selp.f32 	%f231, %f229, %f230, %p38;
	and.b32  	%r253, %r251, 2;
	setp.eq.s32 	%p39, %r253, 0;
	sub.f32 	%f233, %f151, %f231;
	selp.f32 	%f234, %f231, %f233, %p39;
	cvt.rzi.f32.f32 	%f235, %f6;
	setp.eq.f32 	%p40, %f6, %f235;
	mul.f32 	%f236, %f6, 0f00000000;
	selp.f32 	%f237, %f236, %f234, %p40;
	mul.f32 	%f238, %f4, 0f41490FDB;
	div.approx.f32 	%f1401, %f237, %f238;
$L__BB0_15:                             // %L784
	mov.b32 	%f132, %r229;
	mov.b32 	%f190, %r243;
	add.s32 	%r257, %r160, -509;
	cvt.rn.f32.s32 	%f243, %r257;
	div.approx.f32 	%f9, %f243, %f127;
	abs.f32 	%f245, %f9;
	setp.gt.f32 	%p41, %f245, 0f4B800000;
	mul.f32 	%f246, %f9, 0f00000000;
	selp.f32 	%f247, %f246, %f9, %p41;
	add.f32 	%f248, %f247, %f247;
	mov.b32 	%r258, %f248;
	and.b32  	%r259, %r258, -2147483648;
	or.b32  	%r260, %r259, 1056964608;
	mov.b32 	%f249, %r260;
	mul.f32 	%f11, %f9, 0f40800000;
	setp.eq.f32 	%p46, %f11, 0f00000000;
	mov.f32 	%f1402, %f1415;
	@%p46 bra 	$L__BB0_17;
// %bb.16:                              // %L860
	add.f32 	%f271, %f11, %f11;
	mov.b32 	%r265, %f271;
	and.b32  	%r266, %r265, -2147483648;
	or.b32  	%r267, %r266, 1056964608;
	mov.b32 	%f272, %r267;
	add.f32 	%f273, %f271, %f272;
	cvt.rzi.f32.f32 	%f274, %f273;
	abs.f32 	%f275, %f271;
	setp.gt.f32 	%p47, %f275, 0f4B000000;
	selp.f32 	%f276, %f271, %f274, %p47;
	cvt.rzi.f32.f32 	%f277, %f271;
	setp.lt.f32 	%p48, %f275, 0f3F000000;
	selp.f32 	%f278, %f277, %f276, %p48;
	cvt.rzi.s32.f32 	%r268, %f278;
	fma.rn.f32 	%f279, %f278, 0fBF000000, %f11;
	mul.f32 	%f280, %f279, %f279;
	fma.rn.f32 	%f281, %f280, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f282, %f280, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f283, %f281, %f280, 0fC0A55DF6;
	fma.rn.f32 	%f284, %f282, %f280, 0f4081E0CF;
	fma.rn.f32 	%f285, %f280, %f279, 0f00000000;
	fma.rn.f32 	%f286, %f284, %f280, 0fC09DE9E6;
	fma.rn.f32 	%f287, %f283, %f285, 0f00000000;
	fma.rn.f32 	%f288, %f286, %f280, 0f3F800000;
	fma.rn.f32 	%f289, %f279, 0f40490FDB, %f287;
	and.b32  	%r269, %r268, 1;
	setp.eq.b32 	%p49, %r269, 1;
	selp.f32 	%f290, %f288, %f289, %p49;
	and.b32  	%r270, %r268, 2;
	setp.eq.s32 	%p50, %r270, 0;
	sub.f32 	%f292, %f151, %f290;
	selp.f32 	%f293, %f290, %f292, %p50;
	cvt.rzi.f32.f32 	%f294, %f11;
	setp.eq.f32 	%p51, %f11, %f294;
	mul.f32 	%f295, %f11, 0f00000000;
	selp.f32 	%f296, %f295, %f293, %p51;
	mul.f32 	%f297, %f9, 0f41490FDB;
	div.approx.f32 	%f1402, %f296, %f297;
$L__BB0_17:                             // %L864
	add.f32 	%f133, %f131, %f132;
	abs.f32 	%f135, %f131;
	add.f32 	%f191, %f189, %f190;
	abs.f32 	%f193, %f189;
	add.f32 	%f250, %f248, %f249;
	abs.f32 	%f252, %f248;
	add.s32 	%r271, %r160, -381;
	cvt.rn.f32.s32 	%f301, %r271;
	div.approx.f32 	%f15, %f301, %f127;
	abs.f32 	%f303, %f15;
	setp.gt.f32 	%p52, %f303, 0f4B800000;
	mul.f32 	%f304, %f15, 0f00000000;
	selp.f32 	%f305, %f304, %f15, %p52;
	add.f32 	%f306, %f305, %f305;
	mov.b32 	%r272, %f306;
	and.b32  	%r273, %r272, -2147483648;
	or.b32  	%r274, %r273, 1056964608;
	mov.b32 	%f307, %r274;
	add.f32 	%f308, %f306, %f307;
	abs.f32 	%f310, %f306;
	mul.f32 	%f17, %f15, 0f40800000;
	setp.eq.f32 	%p57, %f17, 0f00000000;
	mov.f32 	%f1403, %f1415;
	@%p57 bra 	$L__BB0_19;
// %bb.18:                              // %L878
	add.f32 	%f329, %f17, %f17;
	mov.b32 	%r279, %f329;
	and.b32  	%r280, %r279, -2147483648;
	or.b32  	%r281, %r280, 1056964608;
	mov.b32 	%f330, %r281;
	add.f32 	%f331, %f329, %f330;
	cvt.rzi.f32.f32 	%f332, %f331;
	abs.f32 	%f333, %f329;
	setp.gt.f32 	%p58, %f333, 0f4B000000;
	selp.f32 	%f334, %f329, %f332, %p58;
	cvt.rzi.f32.f32 	%f335, %f329;
	setp.lt.f32 	%p59, %f333, 0f3F000000;
	selp.f32 	%f336, %f335, %f334, %p59;
	cvt.rzi.s32.f32 	%r282, %f336;
	fma.rn.f32 	%f337, %f336, 0fBF000000, %f17;
	mul.f32 	%f338, %f337, %f337;
	fma.rn.f32 	%f339, %f338, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f340, %f338, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f341, %f339, %f338, 0fC0A55DF6;
	fma.rn.f32 	%f342, %f340, %f338, 0f4081E0CF;
	fma.rn.f32 	%f343, %f338, %f337, 0f00000000;
	fma.rn.f32 	%f344, %f342, %f338, 0fC09DE9E6;
	fma.rn.f32 	%f345, %f341, %f343, 0f00000000;
	fma.rn.f32 	%f346, %f344, %f338, 0f3F800000;
	fma.rn.f32 	%f347, %f337, 0f40490FDB, %f345;
	and.b32  	%r283, %r282, 1;
	setp.eq.b32 	%p60, %r283, 1;
	selp.f32 	%f348, %f346, %f347, %p60;
	and.b32  	%r284, %r282, 2;
	setp.eq.s32 	%p61, %r284, 0;
	sub.f32 	%f350, %f151, %f348;
	selp.f32 	%f351, %f348, %f350, %p61;
	cvt.rzi.f32.f32 	%f352, %f17;
	setp.eq.f32 	%p62, %f17, %f352;
	mul.f32 	%f353, %f17, 0f00000000;
	selp.f32 	%f354, %f353, %f351, %p62;
	mul.f32 	%f355, %f15, 0f41490FDB;
	div.approx.f32 	%f1403, %f354, %f355;
$L__BB0_19:                             // %L882
	cvt.rzi.f32.f32 	%f134, %f133;
	setp.gt.f32 	%p20, %f135, 0f4B000000;
	cvt.rzi.f32.f32 	%f192, %f191;
	setp.gt.f32 	%p31, %f193, 0f4B000000;
	cvt.rzi.f32.f32 	%f251, %f250;
	setp.gt.f32 	%p42, %f252, 0f4B000000;
	cvt.rzi.f32.f32 	%f309, %f308;
	setp.gt.f32 	%p53, %f310, 0f4B000000;
	add.s32 	%r288, %r160, -255;
	cvt.rn.f32.s32 	%f360, %r288;
	div.approx.f32 	%f20, %f360, %f127;
	abs.f32 	%f362, %f20;
	setp.gt.f32 	%p63, %f362, 0f4B800000;
	mul.f32 	%f363, %f20, 0f00000000;
	selp.f32 	%f364, %f363, %f20, %p63;
	add.f32 	%f365, %f364, %f364;
	mov.b32 	%r289, %f365;
	and.b32  	%r290, %r289, -2147483648;
	or.b32  	%r291, %r290, 1056964608;
	mov.b32 	%f366, %r291;
	add.f32 	%f367, %f365, %f366;
	cvt.rzi.f32.f32 	%f368, %f367;
	abs.f32 	%f369, %f365;
	setp.gt.f32 	%p64, %f369, 0f4B000000;
	mul.f32 	%f22, %f20, 0f40800000;
	setp.eq.f32 	%p68, %f22, 0f00000000;
	mov.f32 	%f1404, %f1415;
	@%p68 bra 	$L__BB0_21;
// %bb.20:                              // %L958
	add.f32 	%f388, %f22, %f22;
	mov.b32 	%r296, %f388;
	and.b32  	%r297, %r296, -2147483648;
	or.b32  	%r298, %r297, 1056964608;
	mov.b32 	%f389, %r298;
	add.f32 	%f390, %f388, %f389;
	cvt.rzi.f32.f32 	%f391, %f390;
	abs.f32 	%f392, %f388;
	setp.gt.f32 	%p69, %f392, 0f4B000000;
	selp.f32 	%f393, %f388, %f391, %p69;
	cvt.rzi.f32.f32 	%f394, %f388;
	setp.lt.f32 	%p70, %f392, 0f3F000000;
	selp.f32 	%f395, %f394, %f393, %p70;
	cvt.rzi.s32.f32 	%r299, %f395;
	fma.rn.f32 	%f396, %f395, 0fBF000000, %f22;
	mul.f32 	%f397, %f396, %f396;
	fma.rn.f32 	%f398, %f397, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f399, %f397, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f400, %f398, %f397, 0fC0A55DF6;
	fma.rn.f32 	%f401, %f399, %f397, 0f4081E0CF;
	fma.rn.f32 	%f402, %f397, %f396, 0f00000000;
	fma.rn.f32 	%f403, %f401, %f397, 0fC09DE9E6;
	fma.rn.f32 	%f404, %f400, %f402, 0f00000000;
	fma.rn.f32 	%f405, %f403, %f397, 0f3F800000;
	fma.rn.f32 	%f406, %f396, 0f40490FDB, %f404;
	and.b32  	%r300, %r299, 1;
	setp.eq.b32 	%p71, %r300, 1;
	selp.f32 	%f407, %f405, %f406, %p71;
	and.b32  	%r301, %r299, 2;
	setp.eq.s32 	%p72, %r301, 0;
	sub.f32 	%f409, %f151, %f407;
	selp.f32 	%f410, %f407, %f409, %p72;
	cvt.rzi.f32.f32 	%f411, %f22;
	setp.eq.f32 	%p73, %f22, %f411;
	mul.f32 	%f412, %f22, 0f00000000;
	selp.f32 	%f413, %f412, %f410, %p73;
	mul.f32 	%f414, %f20, 0f41490FDB;
	div.approx.f32 	%f1404, %f413, %f414;
$L__BB0_21:                             // %L962
	selp.f32 	%f136, %f131, %f134, %p20;
	cvt.rzi.f32.f32 	%f137, %f131;
	setp.lt.f32 	%p21, %f135, 0f3F000000;
	selp.f32 	%f194, %f189, %f192, %p31;
	cvt.rzi.f32.f32 	%f195, %f189;
	setp.lt.f32 	%p32, %f193, 0f3F000000;
	selp.f32 	%f253, %f248, %f251, %p42;
	cvt.rzi.f32.f32 	%f254, %f248;
	setp.lt.f32 	%p43, %f252, 0f3F000000;
	selp.f32 	%f311, %f306, %f309, %p53;
	cvt.rzi.f32.f32 	%f312, %f306;
	setp.lt.f32 	%p54, %f310, 0f3F000000;
	selp.f32 	%f370, %f365, %f368, %p64;
	cvt.rzi.f32.f32 	%f371, %f365;
	setp.lt.f32 	%p65, %f369, 0f3F000000;
	add.s32 	%r302, %r160, -127;
	cvt.rn.f32.s32 	%f418, %r302;
	div.approx.f32 	%f26, %f418, %f127;
	abs.f32 	%f420, %f26;
	setp.gt.f32 	%p74, %f420, 0f4B800000;
	mul.f32 	%f421, %f26, 0f00000000;
	selp.f32 	%f422, %f421, %f26, %p74;
	add.f32 	%f423, %f422, %f422;
	mov.b32 	%r303, %f423;
	and.b32  	%r304, %r303, -2147483648;
	or.b32  	%r305, %r304, 1056964608;
	mov.b32 	%f424, %r305;
	add.f32 	%f425, %f423, %f424;
	cvt.rzi.f32.f32 	%f426, %f425;
	abs.f32 	%f427, %f423;
	setp.gt.f32 	%p75, %f427, 0f4B000000;
	selp.f32 	%f428, %f423, %f426, %p75;
	cvt.rzi.f32.f32 	%f429, %f423;
	setp.lt.f32 	%p76, %f427, 0f3F000000;
	mul.f32 	%f28, %f26, 0f40800000;
	setp.eq.f32 	%p79, %f28, 0f00000000;
	mov.f32 	%f1405, %f1415;
	@%p79 bra 	$L__BB0_23;
// %bb.22:                              // %L976
	add.f32 	%f446, %f28, %f28;
	mov.b32 	%r310, %f446;
	and.b32  	%r311, %r310, -2147483648;
	or.b32  	%r312, %r311, 1056964608;
	mov.b32 	%f447, %r312;
	add.f32 	%f448, %f446, %f447;
	cvt.rzi.f32.f32 	%f449, %f448;
	abs.f32 	%f450, %f446;
	setp.gt.f32 	%p80, %f450, 0f4B000000;
	selp.f32 	%f451, %f446, %f449, %p80;
	cvt.rzi.f32.f32 	%f452, %f446;
	setp.lt.f32 	%p81, %f450, 0f3F000000;
	selp.f32 	%f453, %f452, %f451, %p81;
	cvt.rzi.s32.f32 	%r313, %f453;
	fma.rn.f32 	%f454, %f453, 0fBF000000, %f28;
	mul.f32 	%f455, %f454, %f454;
	fma.rn.f32 	%f456, %f455, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f457, %f455, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f458, %f456, %f455, 0fC0A55DF6;
	fma.rn.f32 	%f459, %f457, %f455, 0f4081E0CF;
	fma.rn.f32 	%f460, %f455, %f454, 0f00000000;
	fma.rn.f32 	%f461, %f459, %f455, 0fC09DE9E6;
	fma.rn.f32 	%f462, %f458, %f460, 0f00000000;
	fma.rn.f32 	%f463, %f461, %f455, 0f3F800000;
	fma.rn.f32 	%f464, %f454, 0f40490FDB, %f462;
	and.b32  	%r314, %r313, 1;
	setp.eq.b32 	%p82, %r314, 1;
	selp.f32 	%f465, %f463, %f464, %p82;
	and.b32  	%r315, %r313, 2;
	setp.eq.s32 	%p83, %r315, 0;
	sub.f32 	%f467, %f151, %f465;
	selp.f32 	%f468, %f465, %f467, %p83;
	cvt.rzi.f32.f32 	%f469, %f28;
	setp.eq.f32 	%p84, %f28, %f469;
	mul.f32 	%f470, %f28, 0f00000000;
	selp.f32 	%f471, %f470, %f468, %p84;
	mul.f32 	%f472, %f26, 0f41490FDB;
	div.approx.f32 	%f1405, %f471, %f472;
$L__BB0_23:                             // %L980
	selp.f32 	%f138, %f137, %f136, %p21;
	selp.f32 	%f196, %f195, %f194, %p32;
	selp.f32 	%f255, %f254, %f253, %p43;
	selp.f32 	%f313, %f312, %f311, %p54;
	selp.f32 	%f372, %f371, %f370, %p65;
	selp.f32 	%f430, %f429, %f428, %p76;
	add.s32 	%r319, %r160, -253;
	cvt.rn.f32.s32 	%f477, %r319;
	div.approx.f32 	%f31, %f477, %f127;
	abs.f32 	%f479, %f31;
	setp.gt.f32 	%p85, %f479, 0f4B800000;
	mul.f32 	%f480, %f31, 0f00000000;
	selp.f32 	%f481, %f480, %f31, %p85;
	add.f32 	%f482, %f481, %f481;
	mov.b32 	%r320, %f482;
	and.b32  	%r321, %r320, -2147483648;
	or.b32  	%r322, %r321, 1056964608;
	mov.b32 	%f483, %r322;
	add.f32 	%f484, %f482, %f483;
	cvt.rzi.f32.f32 	%f485, %f484;
	abs.f32 	%f486, %f482;
	setp.gt.f32 	%p86, %f486, 0f4B000000;
	selp.f32 	%f487, %f482, %f485, %p86;
	cvt.rzi.f32.f32 	%f488, %f482;
	setp.lt.f32 	%p87, %f486, 0f3F000000;
	selp.f32 	%f489, %f488, %f487, %p87;
	mul.f32 	%f33, %f31, 0f40800000;
	setp.eq.f32 	%p90, %f33, 0f00000000;
	mov.f32 	%f1406, %f1415;
	@%p90 bra 	$L__BB0_25;
// %bb.24:                              // %L1056
	add.f32 	%f505, %f33, %f33;
	mov.b32 	%r327, %f505;
	and.b32  	%r328, %r327, -2147483648;
	or.b32  	%r329, %r328, 1056964608;
	mov.b32 	%f506, %r329;
	add.f32 	%f507, %f505, %f506;
	cvt.rzi.f32.f32 	%f508, %f507;
	abs.f32 	%f509, %f505;
	setp.gt.f32 	%p91, %f509, 0f4B000000;
	selp.f32 	%f510, %f505, %f508, %p91;
	cvt.rzi.f32.f32 	%f511, %f505;
	setp.lt.f32 	%p92, %f509, 0f3F000000;
	selp.f32 	%f512, %f511, %f510, %p92;
	cvt.rzi.s32.f32 	%r330, %f512;
	fma.rn.f32 	%f513, %f512, 0fBF000000, %f33;
	mul.f32 	%f514, %f513, %f513;
	fma.rn.f32 	%f515, %f514, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f516, %f514, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f517, %f515, %f514, 0fC0A55DF6;
	fma.rn.f32 	%f518, %f516, %f514, 0f4081E0CF;
	fma.rn.f32 	%f519, %f514, %f513, 0f00000000;
	fma.rn.f32 	%f520, %f518, %f514, 0fC09DE9E6;
	fma.rn.f32 	%f521, %f517, %f519, 0f00000000;
	fma.rn.f32 	%f522, %f520, %f514, 0f3F800000;
	fma.rn.f32 	%f523, %f513, 0f40490FDB, %f521;
	and.b32  	%r331, %r330, 1;
	setp.eq.b32 	%p93, %r331, 1;
	selp.f32 	%f524, %f522, %f523, %p93;
	and.b32  	%r332, %r330, 2;
	setp.eq.s32 	%p94, %r332, 0;
	sub.f32 	%f526, %f151, %f524;
	selp.f32 	%f527, %f524, %f526, %p94;
	cvt.rzi.f32.f32 	%f528, %f33;
	setp.eq.f32 	%p95, %f33, %f528;
	mul.f32 	%f529, %f33, 0f00000000;
	selp.f32 	%f530, %f529, %f527, %p95;
	mul.f32 	%f531, %f31, 0f41490FDB;
	div.approx.f32 	%f1406, %f530, %f531;
$L__BB0_25:                             // %L1060
	fma.rn.f32 	%f139, %f138, 0fBF000000, %f130;
	fma.rn.f32 	%f197, %f196, 0fBF000000, %f188;
	fma.rn.f32 	%f256, %f255, 0fBF000000, %f247;
	fma.rn.f32 	%f314, %f313, 0fBF000000, %f305;
	fma.rn.f32 	%f373, %f372, 0fBF000000, %f364;
	fma.rn.f32 	%f431, %f430, 0fBF000000, %f422;
	fma.rn.f32 	%f490, %f489, 0fBF000000, %f481;
	add.s32 	%r333, %r160, -125;
	cvt.rn.f32.s32 	%f535, %r333;
	div.approx.f32 	%f37, %f535, %f127;
	abs.f32 	%f537, %f37;
	setp.gt.f32 	%p96, %f537, 0f4B800000;
	mul.f32 	%f538, %f37, 0f00000000;
	selp.f32 	%f539, %f538, %f37, %p96;
	add.f32 	%f540, %f539, %f539;
	mov.b32 	%r334, %f540;
	and.b32  	%r335, %r334, -2147483648;
	or.b32  	%r336, %r335, 1056964608;
	mov.b32 	%f541, %r336;
	add.f32 	%f542, %f540, %f541;
	cvt.rzi.f32.f32 	%f543, %f542;
	abs.f32 	%f544, %f540;
	setp.gt.f32 	%p97, %f544, 0f4B000000;
	selp.f32 	%f545, %f540, %f543, %p97;
	cvt.rzi.f32.f32 	%f546, %f540;
	setp.lt.f32 	%p98, %f544, 0f3F000000;
	selp.f32 	%f547, %f546, %f545, %p98;
	fma.rn.f32 	%f548, %f547, 0fBF000000, %f539;
	mul.f32 	%f39, %f37, 0f40800000;
	setp.eq.f32 	%p101, %f39, 0f00000000;
	mov.f32 	%f1407, %f1415;
	@%p101 bra 	$L__BB0_27;
// %bb.26:                              // %L1074
	add.f32 	%f563, %f39, %f39;
	mov.b32 	%r341, %f563;
	and.b32  	%r342, %r341, -2147483648;
	or.b32  	%r343, %r342, 1056964608;
	mov.b32 	%f564, %r343;
	add.f32 	%f565, %f563, %f564;
	cvt.rzi.f32.f32 	%f566, %f565;
	abs.f32 	%f567, %f563;
	setp.gt.f32 	%p102, %f567, 0f4B000000;
	selp.f32 	%f568, %f563, %f566, %p102;
	cvt.rzi.f32.f32 	%f569, %f563;
	setp.lt.f32 	%p103, %f567, 0f3F000000;
	selp.f32 	%f570, %f569, %f568, %p103;
	cvt.rzi.s32.f32 	%r344, %f570;
	fma.rn.f32 	%f571, %f570, 0fBF000000, %f39;
	mul.f32 	%f572, %f571, %f571;
	fma.rn.f32 	%f573, %f572, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f574, %f572, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f575, %f573, %f572, 0fC0A55DF6;
	fma.rn.f32 	%f576, %f574, %f572, 0f4081E0CF;
	fma.rn.f32 	%f577, %f572, %f571, 0f00000000;
	fma.rn.f32 	%f578, %f576, %f572, 0fC09DE9E6;
	fma.rn.f32 	%f579, %f575, %f577, 0f00000000;
	fma.rn.f32 	%f580, %f578, %f572, 0f3F800000;
	fma.rn.f32 	%f581, %f571, 0f40490FDB, %f579;
	and.b32  	%r345, %r344, 1;
	setp.eq.b32 	%p104, %r345, 1;
	selp.f32 	%f582, %f580, %f581, %p104;
	and.b32  	%r346, %r344, 2;
	setp.eq.s32 	%p105, %r346, 0;
	sub.f32 	%f584, %f151, %f582;
	selp.f32 	%f585, %f582, %f584, %p105;
	cvt.rzi.f32.f32 	%f586, %f39;
	setp.eq.f32 	%p106, %f39, %f586;
	mul.f32 	%f587, %f39, 0f00000000;
	selp.f32 	%f588, %f587, %f585, %p106;
	mul.f32 	%f589, %f37, 0f41490FDB;
	div.approx.f32 	%f1407, %f588, %f589;
$L__BB0_27:                             // %L1078
	mul.f32 	%f140, %f139, %f139;
	mul.f32 	%f198, %f197, %f197;
	mul.f32 	%f257, %f256, %f256;
	mul.f32 	%f315, %f314, %f314;
	mul.f32 	%f374, %f373, %f373;
	mul.f32 	%f432, %f431, %f431;
	mul.f32 	%f491, %f490, %f490;
	mul.f32 	%f549, %f548, %f548;
	or.b32  	%r350, %r160, 1;
	cvt.rn.f32.s32 	%f594, %r350;
	div.approx.f32 	%f42, %f594, %f127;
	abs.f32 	%f596, %f42;
	setp.gt.f32 	%p107, %f596, 0f4B800000;
	mul.f32 	%f597, %f42, 0f00000000;
	selp.f32 	%f598, %f597, %f42, %p107;
	add.f32 	%f599, %f598, %f598;
	mov.b32 	%r351, %f599;
	and.b32  	%r352, %r351, -2147483648;
	or.b32  	%r353, %r352, 1056964608;
	mov.b32 	%f600, %r353;
	add.f32 	%f601, %f599, %f600;
	cvt.rzi.f32.f32 	%f602, %f601;
	abs.f32 	%f603, %f599;
	setp.gt.f32 	%p108, %f603, 0f4B000000;
	selp.f32 	%f604, %f599, %f602, %p108;
	cvt.rzi.f32.f32 	%f605, %f599;
	setp.lt.f32 	%p109, %f603, 0f3F000000;
	selp.f32 	%f606, %f605, %f604, %p109;
	fma.rn.f32 	%f607, %f606, 0fBF000000, %f598;
	mul.f32 	%f608, %f607, %f607;
	mul.f32 	%f44, %f42, 0f40800000;
	setp.eq.f32 	%p112, %f44, 0f00000000;
	mov.f32 	%f1408, %f1415;
	@%p112 bra 	$L__BB0_29;
// %bb.28:                              // %L1154
	add.f32 	%f622, %f44, %f44;
	mov.b32 	%r358, %f622;
	and.b32  	%r359, %r358, -2147483648;
	or.b32  	%r360, %r359, 1056964608;
	mov.b32 	%f623, %r360;
	add.f32 	%f624, %f622, %f623;
	cvt.rzi.f32.f32 	%f625, %f624;
	abs.f32 	%f626, %f622;
	setp.gt.f32 	%p113, %f626, 0f4B000000;
	selp.f32 	%f627, %f622, %f625, %p113;
	cvt.rzi.f32.f32 	%f628, %f622;
	setp.lt.f32 	%p114, %f626, 0f3F000000;
	selp.f32 	%f629, %f628, %f627, %p114;
	cvt.rzi.s32.f32 	%r361, %f629;
	fma.rn.f32 	%f630, %f629, 0fBF000000, %f44;
	mul.f32 	%f631, %f630, %f630;
	fma.rn.f32 	%f632, %f631, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f633, %f631, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f634, %f632, %f631, 0fC0A55DF6;
	fma.rn.f32 	%f635, %f633, %f631, 0f4081E0CF;
	fma.rn.f32 	%f636, %f631, %f630, 0f00000000;
	fma.rn.f32 	%f637, %f635, %f631, 0fC09DE9E6;
	fma.rn.f32 	%f638, %f634, %f636, 0f00000000;
	fma.rn.f32 	%f639, %f637, %f631, 0f3F800000;
	fma.rn.f32 	%f640, %f630, 0f40490FDB, %f638;
	and.b32  	%r362, %r361, 1;
	setp.eq.b32 	%p115, %r362, 1;
	selp.f32 	%f641, %f639, %f640, %p115;
	and.b32  	%r363, %r361, 2;
	setp.eq.s32 	%p116, %r363, 0;
	sub.f32 	%f643, %f151, %f641;
	selp.f32 	%f644, %f641, %f643, %p116;
	cvt.rzi.f32.f32 	%f645, %f44;
	setp.eq.f32 	%p117, %f44, %f645;
	mul.f32 	%f646, %f44, 0f00000000;
	selp.f32 	%f647, %f646, %f644, %p117;
	mul.f32 	%f648, %f42, 0f41490FDB;
	div.approx.f32 	%f1408, %f647, %f648;
$L__BB0_29:                             // %L1158
	cvt.rzi.s32.f32 	%r230, %f138;
	fma.rn.f32 	%f141, %f140, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f142, %f140, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r244, %f196;
	fma.rn.f32 	%f199, %f198, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f200, %f198, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r261, %f255;
	fma.rn.f32 	%f258, %f257, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f259, %f257, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r275, %f313;
	fma.rn.f32 	%f316, %f315, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f317, %f315, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r292, %f372;
	fma.rn.f32 	%f375, %f374, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f376, %f374, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r306, %f430;
	fma.rn.f32 	%f433, %f432, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f434, %f432, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r323, %f489;
	fma.rn.f32 	%f492, %f491, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f493, %f491, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r337, %f547;
	fma.rn.f32 	%f550, %f549, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f551, %f549, 0f3E684E12, 0fBFAAD2E0;
	cvt.rzi.s32.f32 	%r354, %f606;
	fma.rn.f32 	%f609, %f608, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f610, %f608, 0f3E684E12, 0fBFAAD2E0;
	add.s32 	%r364, %r160, 129;
	cvt.rn.f32.s32 	%f652, %r364;
	div.approx.f32 	%f48, %f652, %f127;
	abs.f32 	%f654, %f48;
	setp.gt.f32 	%p118, %f654, 0f4B800000;
	mul.f32 	%f655, %f48, 0f00000000;
	selp.f32 	%f656, %f655, %f48, %p118;
	add.f32 	%f657, %f656, %f656;
	mov.b32 	%r365, %f657;
	and.b32  	%r366, %r365, -2147483648;
	or.b32  	%r367, %r366, 1056964608;
	mov.b32 	%f658, %r367;
	add.f32 	%f659, %f657, %f658;
	cvt.rzi.f32.f32 	%f660, %f659;
	abs.f32 	%f661, %f657;
	setp.gt.f32 	%p119, %f661, 0f4B000000;
	selp.f32 	%f662, %f657, %f660, %p119;
	cvt.rzi.f32.f32 	%f663, %f657;
	setp.lt.f32 	%p120, %f661, 0f3F000000;
	selp.f32 	%f664, %f663, %f662, %p120;
	cvt.rzi.s32.f32 	%r368, %f664;
	fma.rn.f32 	%f665, %f664, 0fBF000000, %f656;
	mul.f32 	%f666, %f665, %f665;
	fma.rn.f32 	%f667, %f666, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f668, %f666, 0f3E684E12, 0fBFAAD2E0;
	mul.f32 	%f50, %f48, 0f40800000;
	setp.eq.f32 	%p123, %f50, 0f00000000;
	mov.f32 	%f1409, %f1415;
	@%p123 bra 	$L__BB0_31;
// %bb.30:                              // %L1172
	add.f32 	%f680, %f50, %f50;
	mov.b32 	%r372, %f680;
	and.b32  	%r373, %r372, -2147483648;
	or.b32  	%r374, %r373, 1056964608;
	mov.b32 	%f681, %r374;
	add.f32 	%f682, %f680, %f681;
	cvt.rzi.f32.f32 	%f683, %f682;
	abs.f32 	%f684, %f680;
	setp.gt.f32 	%p124, %f684, 0f4B000000;
	selp.f32 	%f685, %f680, %f683, %p124;
	cvt.rzi.f32.f32 	%f686, %f680;
	setp.lt.f32 	%p125, %f684, 0f3F000000;
	selp.f32 	%f687, %f686, %f685, %p125;
	cvt.rzi.s32.f32 	%r375, %f687;
	fma.rn.f32 	%f688, %f687, 0fBF000000, %f50;
	mul.f32 	%f689, %f688, %f688;
	fma.rn.f32 	%f690, %f689, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f691, %f689, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f692, %f690, %f689, 0fC0A55DF6;
	fma.rn.f32 	%f693, %f691, %f689, 0f4081E0CF;
	fma.rn.f32 	%f694, %f689, %f688, 0f00000000;
	fma.rn.f32 	%f695, %f693, %f689, 0fC09DE9E6;
	fma.rn.f32 	%f696, %f692, %f694, 0f00000000;
	fma.rn.f32 	%f697, %f695, %f689, 0f3F800000;
	fma.rn.f32 	%f698, %f688, 0f40490FDB, %f696;
	and.b32  	%r376, %r375, 1;
	setp.eq.b32 	%p126, %r376, 1;
	selp.f32 	%f699, %f697, %f698, %p126;
	and.b32  	%r377, %r375, 2;
	setp.eq.s32 	%p127, %r377, 0;
	sub.f32 	%f701, %f151, %f699;
	selp.f32 	%f702, %f699, %f701, %p127;
	cvt.rzi.f32.f32 	%f703, %f50;
	setp.eq.f32 	%p128, %f50, %f703;
	mul.f32 	%f704, %f50, 0f00000000;
	selp.f32 	%f705, %f704, %f702, %p128;
	mul.f32 	%f706, %f48, 0f41490FDB;
	div.approx.f32 	%f1409, %f705, %f706;
$L__BB0_31:                             // %L1176
	add.s32 	%r231, %r230, 1;
	fma.rn.f32 	%f143, %f141, %f140, 0fC0A55DF6;
	fma.rn.f32 	%f144, %f142, %f140, 0f4081E0CF;
	fma.rn.f32 	%f145, %f140, %f139, 0f00000000;
	add.s32 	%r245, %r244, 1;
	fma.rn.f32 	%f201, %f199, %f198, 0fC0A55DF6;
	fma.rn.f32 	%f202, %f200, %f198, 0f4081E0CF;
	fma.rn.f32 	%f203, %f198, %f197, 0f00000000;
	add.s32 	%r262, %r261, 1;
	fma.rn.f32 	%f260, %f258, %f257, 0fC0A55DF6;
	fma.rn.f32 	%f261, %f259, %f257, 0f4081E0CF;
	fma.rn.f32 	%f262, %f257, %f256, 0f00000000;
	add.s32 	%r276, %r275, 1;
	fma.rn.f32 	%f318, %f316, %f315, 0fC0A55DF6;
	fma.rn.f32 	%f319, %f317, %f315, 0f4081E0CF;
	fma.rn.f32 	%f320, %f315, %f314, 0f00000000;
	add.s32 	%r293, %r292, 1;
	fma.rn.f32 	%f377, %f375, %f374, 0fC0A55DF6;
	fma.rn.f32 	%f378, %f376, %f374, 0f4081E0CF;
	fma.rn.f32 	%f379, %f374, %f373, 0f00000000;
	add.s32 	%r307, %r306, 1;
	fma.rn.f32 	%f435, %f433, %f432, 0fC0A55DF6;
	fma.rn.f32 	%f436, %f434, %f432, 0f4081E0CF;
	fma.rn.f32 	%f437, %f432, %f431, 0f00000000;
	add.s32 	%r324, %r323, 1;
	fma.rn.f32 	%f494, %f492, %f491, 0fC0A55DF6;
	fma.rn.f32 	%f495, %f493, %f491, 0f4081E0CF;
	fma.rn.f32 	%f496, %f491, %f490, 0f00000000;
	add.s32 	%r338, %r337, 1;
	fma.rn.f32 	%f552, %f550, %f549, 0fC0A55DF6;
	fma.rn.f32 	%f553, %f551, %f549, 0f4081E0CF;
	fma.rn.f32 	%f554, %f549, %f548, 0f00000000;
	add.s32 	%r355, %r354, 1;
	fma.rn.f32 	%f611, %f609, %f608, 0fC0A55DF6;
	fma.rn.f32 	%f612, %f610, %f608, 0f4081E0CF;
	fma.rn.f32 	%f613, %f608, %f607, 0f00000000;
	add.s32 	%r369, %r368, 1;
	fma.rn.f32 	%f669, %f667, %f666, 0fC0A55DF6;
	fma.rn.f32 	%f670, %f668, %f666, 0f4081E0CF;
	fma.rn.f32 	%f671, %f666, %f665, 0f00000000;
	or.b32  	%r381, %r160, 3;
	cvt.rn.f32.s32 	%f711, %r381;
	div.approx.f32 	%f53, %f711, %f127;
	abs.f32 	%f713, %f53;
	setp.gt.f32 	%p129, %f713, 0f4B800000;
	mul.f32 	%f714, %f53, 0f00000000;
	selp.f32 	%f715, %f714, %f53, %p129;
	add.f32 	%f716, %f715, %f715;
	mov.b32 	%r382, %f716;
	and.b32  	%r383, %r382, -2147483648;
	or.b32  	%r384, %r383, 1056964608;
	mov.b32 	%f717, %r384;
	add.f32 	%f718, %f716, %f717;
	cvt.rzi.f32.f32 	%f719, %f718;
	abs.f32 	%f720, %f716;
	setp.gt.f32 	%p130, %f720, 0f4B000000;
	selp.f32 	%f721, %f716, %f719, %p130;
	cvt.rzi.f32.f32 	%f722, %f716;
	setp.lt.f32 	%p131, %f720, 0f3F000000;
	selp.f32 	%f723, %f722, %f721, %p131;
	cvt.rzi.s32.f32 	%r385, %f723;
	add.s32 	%r386, %r385, 1;
	fma.rn.f32 	%f724, %f723, 0fBF000000, %f715;
	mul.f32 	%f725, %f724, %f724;
	fma.rn.f32 	%f726, %f725, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f727, %f725, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f728, %f726, %f725, 0fC0A55DF6;
	fma.rn.f32 	%f729, %f727, %f725, 0f4081E0CF;
	fma.rn.f32 	%f730, %f725, %f724, 0f00000000;
	mul.f32 	%f55, %f53, 0f40800000;
	setp.eq.f32 	%p134, %f55, 0f00000000;
	mov.f32 	%f1410, %f1415;
	@%p134 bra 	$L__BB0_33;
// %bb.32:                              // %L1252
	add.f32 	%f739, %f55, %f55;
	mov.b32 	%r389, %f739;
	and.b32  	%r390, %r389, -2147483648;
	or.b32  	%r391, %r390, 1056964608;
	mov.b32 	%f740, %r391;
	add.f32 	%f741, %f739, %f740;
	cvt.rzi.f32.f32 	%f742, %f741;
	abs.f32 	%f743, %f739;
	setp.gt.f32 	%p135, %f743, 0f4B000000;
	selp.f32 	%f744, %f739, %f742, %p135;
	cvt.rzi.f32.f32 	%f745, %f739;
	setp.lt.f32 	%p136, %f743, 0f3F000000;
	selp.f32 	%f746, %f745, %f744, %p136;
	cvt.rzi.s32.f32 	%r392, %f746;
	fma.rn.f32 	%f747, %f746, 0fBF000000, %f55;
	mul.f32 	%f748, %f747, %f747;
	fma.rn.f32 	%f749, %f748, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f750, %f748, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f751, %f749, %f748, 0fC0A55DF6;
	fma.rn.f32 	%f752, %f750, %f748, 0f4081E0CF;
	fma.rn.f32 	%f753, %f748, %f747, 0f00000000;
	fma.rn.f32 	%f754, %f752, %f748, 0fC09DE9E6;
	fma.rn.f32 	%f755, %f751, %f753, 0f00000000;
	fma.rn.f32 	%f756, %f754, %f748, 0f3F800000;
	fma.rn.f32 	%f757, %f747, 0f40490FDB, %f755;
	and.b32  	%r393, %r392, 1;
	setp.eq.b32 	%p137, %r393, 1;
	selp.f32 	%f758, %f756, %f757, %p137;
	and.b32  	%r394, %r392, 2;
	setp.eq.s32 	%p138, %r394, 0;
	sub.f32 	%f760, %f151, %f758;
	selp.f32 	%f761, %f758, %f760, %p138;
	cvt.rzi.f32.f32 	%f762, %f55;
	setp.eq.f32 	%p139, %f55, %f762;
	mul.f32 	%f763, %f55, 0f00000000;
	selp.f32 	%f764, %f763, %f761, %p139;
	mul.f32 	%f765, %f53, 0f41490FDB;
	div.approx.f32 	%f1410, %f764, %f765;
$L__BB0_33:                             // %L1256
	shl.b32 	%r140, %r4, 1;
	and.b32  	%r147, %r4, 18;
	fma.rn.f32 	%f146, %f144, %f140, 0fC09DE9E6;
	fma.rn.f32 	%f147, %f143, %f145, 0f00000000;
	and.b32  	%r232, %r231, 1;
	fma.rn.f32 	%f204, %f202, %f198, 0fC09DE9E6;
	fma.rn.f32 	%f205, %f201, %f203, 0f00000000;
	and.b32  	%r246, %r245, 1;
	fma.rn.f32 	%f263, %f261, %f257, 0fC09DE9E6;
	fma.rn.f32 	%f264, %f260, %f262, 0f00000000;
	and.b32  	%r263, %r262, 1;
	fma.rn.f32 	%f321, %f319, %f315, 0fC09DE9E6;
	fma.rn.f32 	%f322, %f318, %f320, 0f00000000;
	and.b32  	%r277, %r276, 1;
	fma.rn.f32 	%f380, %f378, %f374, 0fC09DE9E6;
	fma.rn.f32 	%f381, %f377, %f379, 0f00000000;
	and.b32  	%r294, %r293, 1;
	fma.rn.f32 	%f438, %f436, %f432, 0fC09DE9E6;
	fma.rn.f32 	%f439, %f435, %f437, 0f00000000;
	and.b32  	%r308, %r307, 1;
	fma.rn.f32 	%f497, %f495, %f491, 0fC09DE9E6;
	fma.rn.f32 	%f498, %f494, %f496, 0f00000000;
	and.b32  	%r325, %r324, 1;
	fma.rn.f32 	%f555, %f553, %f549, 0fC09DE9E6;
	fma.rn.f32 	%f556, %f552, %f554, 0f00000000;
	and.b32  	%r339, %r338, 1;
	fma.rn.f32 	%f614, %f612, %f608, 0fC09DE9E6;
	fma.rn.f32 	%f615, %f611, %f613, 0f00000000;
	and.b32  	%r356, %r355, 1;
	fma.rn.f32 	%f672, %f670, %f666, 0fC09DE9E6;
	fma.rn.f32 	%f673, %f669, %f671, 0f00000000;
	and.b32  	%r370, %r369, 1;
	fma.rn.f32 	%f731, %f729, %f725, 0fC09DE9E6;
	fma.rn.f32 	%f732, %f728, %f730, 0f00000000;
	and.b32  	%r387, %r386, 1;
	add.s32 	%r395, %r160, 131;
	cvt.rn.f32.s32 	%f769, %r395;
	div.approx.f32 	%f59, %f769, %f127;
	abs.f32 	%f771, %f59;
	setp.gt.f32 	%p140, %f771, 0f4B800000;
	mul.f32 	%f772, %f59, 0f00000000;
	selp.f32 	%f773, %f772, %f59, %p140;
	add.f32 	%f774, %f773, %f773;
	mov.b32 	%r396, %f774;
	and.b32  	%r397, %r396, -2147483648;
	or.b32  	%r398, %r397, 1056964608;
	mov.b32 	%f775, %r398;
	add.f32 	%f776, %f774, %f775;
	cvt.rzi.f32.f32 	%f777, %f776;
	abs.f32 	%f778, %f774;
	setp.gt.f32 	%p141, %f778, 0f4B000000;
	selp.f32 	%f779, %f774, %f777, %p141;
	cvt.rzi.f32.f32 	%f780, %f774;
	setp.lt.f32 	%p142, %f778, 0f3F000000;
	selp.f32 	%f781, %f780, %f779, %p142;
	cvt.rzi.s32.f32 	%r399, %f781;
	add.s32 	%r400, %r399, 1;
	fma.rn.f32 	%f782, %f781, 0fBF000000, %f773;
	mul.f32 	%f783, %f782, %f782;
	fma.rn.f32 	%f784, %f783, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f785, %f783, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f786, %f784, %f783, 0fC0A55DF6;
	fma.rn.f32 	%f787, %f785, %f783, 0f4081E0CF;
	fma.rn.f32 	%f788, %f783, %f782, 0f00000000;
	fma.rn.f32 	%f789, %f787, %f783, 0fC09DE9E6;
	fma.rn.f32 	%f790, %f786, %f788, 0f00000000;
	and.b32  	%r401, %r400, 1;
	mul.f32 	%f61, %f59, 0f40800000;
	setp.eq.f32 	%p145, %f61, 0f00000000;
	mov.f32 	%f1411, %f1415;
	@%p145 bra 	$L__BB0_35;
// %bb.34:                              // %L1270
	add.f32 	%f797, %f61, %f61;
	mov.b32 	%r403, %f797;
	and.b32  	%r404, %r403, -2147483648;
	or.b32  	%r405, %r404, 1056964608;
	mov.b32 	%f798, %r405;
	add.f32 	%f799, %f797, %f798;
	cvt.rzi.f32.f32 	%f800, %f799;
	abs.f32 	%f801, %f797;
	setp.gt.f32 	%p146, %f801, 0f4B000000;
	selp.f32 	%f802, %f797, %f800, %p146;
	cvt.rzi.f32.f32 	%f803, %f797;
	setp.lt.f32 	%p147, %f801, 0f3F000000;
	selp.f32 	%f804, %f803, %f802, %p147;
	cvt.rzi.s32.f32 	%r406, %f804;
	fma.rn.f32 	%f805, %f804, 0fBF000000, %f61;
	mul.f32 	%f806, %f805, %f805;
	fma.rn.f32 	%f807, %f806, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f808, %f806, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f809, %f807, %f806, 0fC0A55DF6;
	fma.rn.f32 	%f810, %f808, %f806, 0f4081E0CF;
	fma.rn.f32 	%f811, %f806, %f805, 0f00000000;
	fma.rn.f32 	%f812, %f810, %f806, 0fC09DE9E6;
	fma.rn.f32 	%f813, %f809, %f811, 0f00000000;
	fma.rn.f32 	%f814, %f812, %f806, 0f3F800000;
	fma.rn.f32 	%f815, %f805, 0f40490FDB, %f813;
	and.b32  	%r407, %r406, 1;
	setp.eq.b32 	%p148, %r407, 1;
	selp.f32 	%f816, %f814, %f815, %p148;
	and.b32  	%r408, %r406, 2;
	setp.eq.s32 	%p149, %r408, 0;
	sub.f32 	%f818, %f151, %f816;
	selp.f32 	%f819, %f816, %f818, %p149;
	cvt.rzi.f32.f32 	%f820, %f61;
	setp.eq.f32 	%p150, %f61, %f820;
	mul.f32 	%f821, %f61, 0f00000000;
	selp.f32 	%f822, %f821, %f819, %p150;
	mul.f32 	%f823, %f59, 0f41490FDB;
	div.approx.f32 	%f1411, %f822, %f823;
$L__BB0_35:                             // %L1274
	and.b32  	%r141, %r140, 8;
	shl.b32 	%r142, %r4, 2;
	or.b32  	%r149, %r147, 64;
	fma.rn.f32 	%f148, %f146, %f140, 0f3F800000;
	fma.rn.f32 	%f149, %f139, 0f40490FDB, %f147;
	setp.eq.b32 	%p22, %r232, 1;
	fma.rn.f32 	%f206, %f204, %f198, 0f3F800000;
	fma.rn.f32 	%f207, %f197, 0f40490FDB, %f205;
	setp.eq.b32 	%p33, %r246, 1;
	fma.rn.f32 	%f265, %f263, %f257, 0f3F800000;
	fma.rn.f32 	%f266, %f256, 0f40490FDB, %f264;
	setp.eq.b32 	%p44, %r263, 1;
	fma.rn.f32 	%f323, %f321, %f315, 0f3F800000;
	fma.rn.f32 	%f324, %f314, 0f40490FDB, %f322;
	setp.eq.b32 	%p55, %r277, 1;
	fma.rn.f32 	%f382, %f380, %f374, 0f3F800000;
	fma.rn.f32 	%f383, %f373, 0f40490FDB, %f381;
	setp.eq.b32 	%p66, %r294, 1;
	fma.rn.f32 	%f440, %f438, %f432, 0f3F800000;
	fma.rn.f32 	%f441, %f431, 0f40490FDB, %f439;
	setp.eq.b32 	%p77, %r308, 1;
	fma.rn.f32 	%f499, %f497, %f491, 0f3F800000;
	fma.rn.f32 	%f500, %f490, 0f40490FDB, %f498;
	setp.eq.b32 	%p88, %r325, 1;
	fma.rn.f32 	%f557, %f555, %f549, 0f3F800000;
	fma.rn.f32 	%f558, %f548, 0f40490FDB, %f556;
	setp.eq.b32 	%p99, %r339, 1;
	fma.rn.f32 	%f616, %f614, %f608, 0f3F800000;
	fma.rn.f32 	%f617, %f607, 0f40490FDB, %f615;
	setp.eq.b32 	%p110, %r356, 1;
	fma.rn.f32 	%f674, %f672, %f666, 0f3F800000;
	fma.rn.f32 	%f675, %f665, 0f40490FDB, %f673;
	setp.eq.b32 	%p121, %r370, 1;
	fma.rn.f32 	%f733, %f731, %f725, 0f3F800000;
	fma.rn.f32 	%f734, %f724, 0f40490FDB, %f732;
	setp.eq.b32 	%p132, %r387, 1;
	fma.rn.f32 	%f791, %f789, %f783, 0f3F800000;
	fma.rn.f32 	%f792, %f782, 0f40490FDB, %f790;
	setp.eq.b32 	%p143, %r401, 1;
	add.s32 	%r412, %r160, 257;
	cvt.rn.f32.s32 	%f828, %r412;
	div.approx.f32 	%f64, %f828, %f127;
	abs.f32 	%f830, %f64;
	setp.gt.f32 	%p151, %f830, 0f4B800000;
	mul.f32 	%f831, %f64, 0f00000000;
	selp.f32 	%f832, %f831, %f64, %p151;
	add.f32 	%f833, %f832, %f832;
	mov.b32 	%r413, %f833;
	and.b32  	%r414, %r413, -2147483648;
	or.b32  	%r415, %r414, 1056964608;
	mov.b32 	%f834, %r415;
	add.f32 	%f835, %f833, %f834;
	cvt.rzi.f32.f32 	%f836, %f835;
	abs.f32 	%f837, %f833;
	setp.gt.f32 	%p152, %f837, 0f4B000000;
	selp.f32 	%f838, %f833, %f836, %p152;
	cvt.rzi.f32.f32 	%f839, %f833;
	setp.lt.f32 	%p153, %f837, 0f3F000000;
	selp.f32 	%f840, %f839, %f838, %p153;
	cvt.rzi.s32.f32 	%r416, %f840;
	add.s32 	%r417, %r416, 1;
	fma.rn.f32 	%f841, %f840, 0fBF000000, %f832;
	mul.f32 	%f842, %f841, %f841;
	fma.rn.f32 	%f843, %f842, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f844, %f842, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f845, %f843, %f842, 0fC0A55DF6;
	fma.rn.f32 	%f846, %f844, %f842, 0f4081E0CF;
	fma.rn.f32 	%f847, %f842, %f841, 0f00000000;
	fma.rn.f32 	%f848, %f846, %f842, 0fC09DE9E6;
	fma.rn.f32 	%f849, %f845, %f847, 0f00000000;
	fma.rn.f32 	%f850, %f848, %f842, 0f3F800000;
	fma.rn.f32 	%f851, %f841, 0f40490FDB, %f849;
	and.b32  	%r418, %r417, 1;
	setp.eq.b32 	%p154, %r418, 1;
	mul.f32 	%f66, %f64, 0f40800000;
	setp.eq.f32 	%p156, %f66, 0f00000000;
	mov.f32 	%f1412, %f1415;
	@%p156 bra 	$L__BB0_37;
// %bb.36:                              // %L1350
	add.f32 	%f856, %f66, %f66;
	mov.b32 	%r420, %f856;
	and.b32  	%r421, %r420, -2147483648;
	or.b32  	%r422, %r421, 1056964608;
	mov.b32 	%f857, %r422;
	add.f32 	%f858, %f856, %f857;
	cvt.rzi.f32.f32 	%f859, %f858;
	abs.f32 	%f860, %f856;
	setp.gt.f32 	%p157, %f860, 0f4B000000;
	selp.f32 	%f861, %f856, %f859, %p157;
	cvt.rzi.f32.f32 	%f862, %f856;
	setp.lt.f32 	%p158, %f860, 0f3F000000;
	selp.f32 	%f863, %f862, %f861, %p158;
	cvt.rzi.s32.f32 	%r423, %f863;
	fma.rn.f32 	%f864, %f863, 0fBF000000, %f66;
	mul.f32 	%f865, %f864, %f864;
	fma.rn.f32 	%f866, %f865, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f867, %f865, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f868, %f866, %f865, 0fC0A55DF6;
	fma.rn.f32 	%f869, %f867, %f865, 0f4081E0CF;
	fma.rn.f32 	%f870, %f865, %f864, 0f00000000;
	fma.rn.f32 	%f871, %f869, %f865, 0fC09DE9E6;
	fma.rn.f32 	%f872, %f868, %f870, 0f00000000;
	fma.rn.f32 	%f873, %f871, %f865, 0f3F800000;
	fma.rn.f32 	%f874, %f864, 0f40490FDB, %f872;
	and.b32  	%r424, %r423, 1;
	setp.eq.b32 	%p159, %r424, 1;
	selp.f32 	%f875, %f873, %f874, %p159;
	and.b32  	%r425, %r423, 2;
	setp.eq.s32 	%p160, %r425, 0;
	sub.f32 	%f877, %f151, %f875;
	selp.f32 	%f878, %f875, %f877, %p160;
	cvt.rzi.f32.f32 	%f879, %f66;
	setp.eq.f32 	%p161, %f66, %f879;
	mul.f32 	%f880, %f66, 0f00000000;
	selp.f32 	%f881, %f880, %f878, %p161;
	mul.f32 	%f882, %f64, 0f41490FDB;
	div.approx.f32 	%f1412, %f881, %f882;
$L__BB0_37:                             // %L1354
	and.b32  	%r143, %r142, 32;
	or.b32  	%r208, %r147, %r141;
	or.b32  	%r213, %r149, %r141;
	selp.f32 	%f150, %f148, %f149, %p22;
	and.b32  	%r233, %r231, 2;
	selp.f32 	%f208, %f206, %f207, %p33;
	and.b32  	%r247, %r245, 2;
	selp.f32 	%f267, %f265, %f266, %p44;
	and.b32  	%r264, %r262, 2;
	selp.f32 	%f325, %f323, %f324, %p55;
	and.b32  	%r278, %r276, 2;
	selp.f32 	%f384, %f382, %f383, %p66;
	and.b32  	%r295, %r293, 2;
	selp.f32 	%f442, %f440, %f441, %p77;
	and.b32  	%r309, %r307, 2;
	selp.f32 	%f501, %f499, %f500, %p88;
	and.b32  	%r326, %r324, 2;
	selp.f32 	%f559, %f557, %f558, %p99;
	and.b32  	%r340, %r338, 2;
	selp.f32 	%f618, %f616, %f617, %p110;
	and.b32  	%r357, %r355, 2;
	selp.f32 	%f676, %f674, %f675, %p121;
	and.b32  	%r371, %r369, 2;
	selp.f32 	%f735, %f733, %f734, %p132;
	and.b32  	%r388, %r386, 2;
	selp.f32 	%f793, %f791, %f792, %p143;
	and.b32  	%r402, %r400, 2;
	selp.f32 	%f852, %f850, %f851, %p154;
	and.b32  	%r419, %r417, 2;
	add.s32 	%r426, %r160, 385;
	cvt.rn.f32.s32 	%f886, %r426;
	div.approx.f32 	%f70, %f886, %f127;
	abs.f32 	%f888, %f70;
	setp.gt.f32 	%p162, %f888, 0f4B800000;
	mul.f32 	%f889, %f70, 0f00000000;
	selp.f32 	%f890, %f889, %f70, %p162;
	add.f32 	%f891, %f890, %f890;
	mov.b32 	%r427, %f891;
	and.b32  	%r428, %r427, -2147483648;
	or.b32  	%r429, %r428, 1056964608;
	mov.b32 	%f892, %r429;
	add.f32 	%f893, %f891, %f892;
	cvt.rzi.f32.f32 	%f894, %f893;
	abs.f32 	%f895, %f891;
	setp.gt.f32 	%p163, %f895, 0f4B000000;
	selp.f32 	%f896, %f891, %f894, %p163;
	cvt.rzi.f32.f32 	%f897, %f891;
	setp.lt.f32 	%p164, %f895, 0f3F000000;
	selp.f32 	%f898, %f897, %f896, %p164;
	cvt.rzi.s32.f32 	%r430, %f898;
	add.s32 	%r431, %r430, 1;
	fma.rn.f32 	%f899, %f898, 0fBF000000, %f890;
	mul.f32 	%f900, %f899, %f899;
	fma.rn.f32 	%f901, %f900, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f902, %f900, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f903, %f901, %f900, 0fC0A55DF6;
	fma.rn.f32 	%f904, %f902, %f900, 0f4081E0CF;
	fma.rn.f32 	%f905, %f900, %f899, 0f00000000;
	fma.rn.f32 	%f906, %f904, %f900, 0fC09DE9E6;
	fma.rn.f32 	%f907, %f903, %f905, 0f00000000;
	fma.rn.f32 	%f908, %f906, %f900, 0f3F800000;
	fma.rn.f32 	%f909, %f899, 0f40490FDB, %f907;
	and.b32  	%r432, %r431, 1;
	setp.eq.b32 	%p165, %r432, 1;
	selp.f32 	%f910, %f908, %f909, %p165;
	and.b32  	%r433, %r431, 2;
	mul.f32 	%f72, %f70, 0f40800000;
	setp.eq.f32 	%p167, %f72, 0f00000000;
	mov.f32 	%f1413, %f1415;
	@%p167 bra 	$L__BB0_39;
// %bb.38:                              // %L1368
	add.f32 	%f914, %f72, %f72;
	mov.b32 	%r434, %f914;
	and.b32  	%r435, %r434, -2147483648;
	or.b32  	%r436, %r435, 1056964608;
	mov.b32 	%f915, %r436;
	add.f32 	%f916, %f914, %f915;
	cvt.rzi.f32.f32 	%f917, %f916;
	abs.f32 	%f918, %f914;
	setp.gt.f32 	%p168, %f918, 0f4B000000;
	selp.f32 	%f919, %f914, %f917, %p168;
	cvt.rzi.f32.f32 	%f920, %f914;
	setp.lt.f32 	%p169, %f918, 0f3F000000;
	selp.f32 	%f921, %f920, %f919, %p169;
	cvt.rzi.s32.f32 	%r437, %f921;
	fma.rn.f32 	%f922, %f921, 0fBF000000, %f72;
	mul.f32 	%f923, %f922, %f922;
	fma.rn.f32 	%f924, %f923, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f925, %f923, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f926, %f924, %f923, 0fC0A55DF6;
	fma.rn.f32 	%f927, %f925, %f923, 0f4081E0CF;
	fma.rn.f32 	%f928, %f923, %f922, 0f00000000;
	fma.rn.f32 	%f929, %f927, %f923, 0fC09DE9E6;
	fma.rn.f32 	%f930, %f926, %f928, 0f00000000;
	fma.rn.f32 	%f931, %f929, %f923, 0f3F800000;
	fma.rn.f32 	%f932, %f922, 0f40490FDB, %f930;
	and.b32  	%r438, %r437, 1;
	setp.eq.b32 	%p170, %r438, 1;
	selp.f32 	%f933, %f931, %f932, %p170;
	and.b32  	%r439, %r437, 2;
	setp.eq.s32 	%p171, %r439, 0;
	sub.f32 	%f935, %f151, %f933;
	selp.f32 	%f936, %f933, %f935, %p171;
	cvt.rzi.f32.f32 	%f937, %f72;
	setp.eq.f32 	%p172, %f72, %f937;
	mul.f32 	%f938, %f72, 0f00000000;
	selp.f32 	%f939, %f938, %f936, %p172;
	mul.f32 	%f940, %f70, 0f41490FDB;
	div.approx.f32 	%f1413, %f939, %f940;
$L__BB0_39:                             // %L1372
	and.b32  	%r144, %r142, 4;
	shl.b32 	%r145, %r1, 5;
	or.b32  	%r209, %r208, %r143;
	or.b32  	%r214, %r213, %r143;
	setp.eq.s32 	%p23, %r233, 0;
	sub.f32 	%f152, %f151, %f150;
	setp.eq.s32 	%p34, %r247, 0;
	sub.f32 	%f210, %f151, %f208;
	setp.eq.s32 	%p45, %r264, 0;
	sub.f32 	%f269, %f151, %f267;
	setp.eq.s32 	%p56, %r278, 0;
	sub.f32 	%f327, %f151, %f325;
	setp.eq.s32 	%p67, %r295, 0;
	sub.f32 	%f386, %f151, %f384;
	setp.eq.s32 	%p78, %r309, 0;
	sub.f32 	%f444, %f151, %f442;
	setp.eq.s32 	%p89, %r326, 0;
	sub.f32 	%f503, %f151, %f501;
	setp.eq.s32 	%p100, %r340, 0;
	sub.f32 	%f561, %f151, %f559;
	setp.eq.s32 	%p111, %r357, 0;
	sub.f32 	%f620, %f151, %f618;
	setp.eq.s32 	%p122, %r371, 0;
	sub.f32 	%f678, %f151, %f676;
	setp.eq.s32 	%p133, %r388, 0;
	sub.f32 	%f737, %f151, %f735;
	setp.eq.s32 	%p144, %r402, 0;
	sub.f32 	%f795, %f151, %f793;
	setp.eq.s32 	%p155, %r419, 0;
	sub.f32 	%f854, %f151, %f852;
	setp.eq.s32 	%p166, %r433, 0;
	sub.f32 	%f912, %f151, %f910;
	add.s32 	%r443, %r160, 259;
	cvt.rn.f32.s32 	%f945, %r443;
	div.approx.f32 	%f75, %f945, %f127;
	abs.f32 	%f947, %f75;
	setp.gt.f32 	%p173, %f947, 0f4B800000;
	mul.f32 	%f948, %f75, 0f00000000;
	selp.f32 	%f949, %f948, %f75, %p173;
	add.f32 	%f950, %f949, %f949;
	mov.b32 	%r444, %f950;
	and.b32  	%r445, %r444, -2147483648;
	or.b32  	%r446, %r445, 1056964608;
	mov.b32 	%f951, %r446;
	add.f32 	%f952, %f950, %f951;
	cvt.rzi.f32.f32 	%f953, %f952;
	abs.f32 	%f954, %f950;
	setp.gt.f32 	%p174, %f954, 0f4B000000;
	selp.f32 	%f955, %f950, %f953, %p174;
	cvt.rzi.f32.f32 	%f956, %f950;
	setp.lt.f32 	%p175, %f954, 0f3F000000;
	selp.f32 	%f957, %f956, %f955, %p175;
	cvt.rzi.s32.f32 	%r447, %f957;
	add.s32 	%r448, %r447, 1;
	fma.rn.f32 	%f958, %f957, 0fBF000000, %f949;
	mul.f32 	%f959, %f958, %f958;
	fma.rn.f32 	%f960, %f959, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f961, %f959, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f962, %f960, %f959, 0fC0A55DF6;
	fma.rn.f32 	%f963, %f961, %f959, 0f4081E0CF;
	fma.rn.f32 	%f964, %f959, %f958, 0f00000000;
	fma.rn.f32 	%f965, %f963, %f959, 0fC09DE9E6;
	fma.rn.f32 	%f966, %f962, %f964, 0f00000000;
	fma.rn.f32 	%f967, %f965, %f959, 0f3F800000;
	fma.rn.f32 	%f968, %f958, 0f40490FDB, %f966;
	and.b32  	%r449, %r448, 1;
	setp.eq.b32 	%p176, %r449, 1;
	selp.f32 	%f969, %f967, %f968, %p176;
	and.b32  	%r450, %r448, 2;
	setp.eq.s32 	%p177, %r450, 0;
	sub.f32 	%f971, %f151, %f969;
	mul.f32 	%f77, %f75, 0f40800000;
	setp.eq.f32 	%p178, %f77, 0f00000000;
	mov.f32 	%f1414, %f1415;
	@%p178 bra 	$L__BB0_41;
// %bb.40:                              // %L1448
	add.f32 	%f973, %f77, %f77;
	mov.b32 	%r451, %f973;
	and.b32  	%r452, %r451, -2147483648;
	or.b32  	%r453, %r452, 1056964608;
	mov.b32 	%f974, %r453;
	add.f32 	%f975, %f973, %f974;
	cvt.rzi.f32.f32 	%f976, %f975;
	abs.f32 	%f977, %f973;
	setp.gt.f32 	%p179, %f977, 0f4B000000;
	selp.f32 	%f978, %f973, %f976, %p179;
	cvt.rzi.f32.f32 	%f979, %f973;
	setp.lt.f32 	%p180, %f977, 0f3F000000;
	selp.f32 	%f980, %f979, %f978, %p180;
	cvt.rzi.s32.f32 	%r454, %f980;
	fma.rn.f32 	%f981, %f980, 0fBF000000, %f77;
	mul.f32 	%f982, %f981, %f981;
	fma.rn.f32 	%f983, %f982, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f984, %f982, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f985, %f983, %f982, 0fC0A55DF6;
	fma.rn.f32 	%f986, %f984, %f982, 0f4081E0CF;
	fma.rn.f32 	%f987, %f982, %f981, 0f00000000;
	fma.rn.f32 	%f988, %f986, %f982, 0fC09DE9E6;
	fma.rn.f32 	%f989, %f985, %f987, 0f00000000;
	fma.rn.f32 	%f990, %f988, %f982, 0f3F800000;
	fma.rn.f32 	%f991, %f981, 0f40490FDB, %f989;
	and.b32  	%r455, %r454, 1;
	setp.eq.b32 	%p181, %r455, 1;
	selp.f32 	%f992, %f990, %f991, %p181;
	and.b32  	%r456, %r454, 2;
	setp.eq.s32 	%p182, %r456, 0;
	sub.f32 	%f994, %f151, %f992;
	selp.f32 	%f995, %f992, %f994, %p182;
	cvt.rzi.f32.f32 	%f996, %f77;
	setp.eq.f32 	%p183, %f77, %f996;
	mul.f32 	%f997, %f77, 0f00000000;
	selp.f32 	%f998, %f997, %f995, %p183;
	mul.f32 	%f999, %f75, 0f41490FDB;
	div.approx.f32 	%f1414, %f998, %f999;
$L__BB0_41:                             // %L1452
	and.b32  	%r146, %r145, 8064;
	or.b32  	%r210, %r209, %r144;
	or.b32  	%r215, %r214, %r144;
	selp.f32 	%f153, %f150, %f152, %p23;
	selp.f32 	%f211, %f208, %f210, %p34;
	selp.f32 	%f270, %f267, %f269, %p45;
	selp.f32 	%f328, %f325, %f327, %p56;
	selp.f32 	%f387, %f384, %f386, %p67;
	selp.f32 	%f445, %f442, %f444, %p78;
	selp.f32 	%f504, %f501, %f503, %p89;
	selp.f32 	%f562, %f559, %f561, %p100;
	selp.f32 	%f621, %f618, %f620, %p111;
	selp.f32 	%f679, %f676, %f678, %p122;
	selp.f32 	%f738, %f735, %f737, %p133;
	selp.f32 	%f796, %f793, %f795, %p144;
	selp.f32 	%f855, %f852, %f854, %p155;
	selp.f32 	%f913, %f910, %f912, %p166;
	selp.f32 	%f972, %f969, %f971, %p177;
	mov.f32 	%f183, 0f43000000;
	and.b32  	%r139, %r4, 16;
	shr.u32 	%r151, %r4, 1;
	shr.u32 	%r157, %r4, 3;
	add.s32 	%r457, %r160, 387;
	cvt.rn.f32.s32 	%f1003, %r457;
	div.approx.f32 	%f81, %f1003, %f127;
	abs.f32 	%f1005, %f81;
	setp.gt.f32 	%p184, %f1005, 0f4B800000;
	mul.f32 	%f1006, %f81, 0f00000000;
	selp.f32 	%f1007, %f1006, %f81, %p184;
	add.f32 	%f1008, %f1007, %f1007;
	mov.b32 	%r458, %f1008;
	and.b32  	%r459, %r458, -2147483648;
	or.b32  	%r460, %r459, 1056964608;
	mov.b32 	%f1009, %r460;
	add.f32 	%f1010, %f1008, %f1009;
	cvt.rzi.f32.f32 	%f1011, %f1010;
	abs.f32 	%f1012, %f1008;
	setp.gt.f32 	%p185, %f1012, 0f4B000000;
	selp.f32 	%f1013, %f1008, %f1011, %p185;
	cvt.rzi.f32.f32 	%f1014, %f1008;
	setp.lt.f32 	%p186, %f1012, 0f3F000000;
	selp.f32 	%f1015, %f1014, %f1013, %p186;
	cvt.rzi.s32.f32 	%r461, %f1015;
	add.s32 	%r462, %r461, 1;
	fma.rn.f32 	%f1016, %f1015, 0fBF000000, %f1007;
	mul.f32 	%f1017, %f1016, %f1016;
	fma.rn.f32 	%f1018, %f1017, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1019, %f1017, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1020, %f1018, %f1017, 0fC0A55DF6;
	fma.rn.f32 	%f1021, %f1019, %f1017, 0f4081E0CF;
	fma.rn.f32 	%f1022, %f1017, %f1016, 0f00000000;
	fma.rn.f32 	%f1023, %f1021, %f1017, 0fC09DE9E6;
	fma.rn.f32 	%f1024, %f1020, %f1022, 0f00000000;
	fma.rn.f32 	%f1025, %f1023, %f1017, 0f3F800000;
	fma.rn.f32 	%f1026, %f1016, 0f40490FDB, %f1024;
	and.b32  	%r463, %r462, 1;
	setp.eq.b32 	%p187, %r463, 1;
	selp.f32 	%f1027, %f1025, %f1026, %p187;
	and.b32  	%r464, %r462, 2;
	setp.eq.s32 	%p188, %r464, 0;
	sub.f32 	%f1029, %f151, %f1027;
	selp.f32 	%f1030, %f1027, %f1029, %p188;
	mul.f32 	%f83, %f81, 0f40800000;
	setp.eq.f32 	%p189, %f83, 0f00000000;
	@%p189 bra 	$L__BB0_43;
// %bb.42:                              // %L1466
	add.f32 	%f1031, %f83, %f83;
	mov.b32 	%r465, %f1031;
	and.b32  	%r466, %r465, -2147483648;
	or.b32  	%r467, %r466, 1056964608;
	mov.b32 	%f1032, %r467;
	add.f32 	%f1033, %f1031, %f1032;
	cvt.rzi.f32.f32 	%f1034, %f1033;
	abs.f32 	%f1035, %f1031;
	setp.gt.f32 	%p190, %f1035, 0f4B000000;
	selp.f32 	%f1036, %f1031, %f1034, %p190;
	cvt.rzi.f32.f32 	%f1037, %f1031;
	setp.lt.f32 	%p191, %f1035, 0f3F000000;
	selp.f32 	%f1038, %f1037, %f1036, %p191;
	cvt.rzi.s32.f32 	%r468, %f1038;
	fma.rn.f32 	%f1039, %f1038, 0fBF000000, %f83;
	mul.f32 	%f1040, %f1039, %f1039;
	fma.rn.f32 	%f1041, %f1040, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1042, %f1040, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1043, %f1041, %f1040, 0fC0A55DF6;
	fma.rn.f32 	%f1044, %f1042, %f1040, 0f4081E0CF;
	fma.rn.f32 	%f1045, %f1040, %f1039, 0f00000000;
	fma.rn.f32 	%f1046, %f1044, %f1040, 0fC09DE9E6;
	fma.rn.f32 	%f1047, %f1043, %f1045, 0f00000000;
	fma.rn.f32 	%f1048, %f1046, %f1040, 0f3F800000;
	fma.rn.f32 	%f1049, %f1039, 0f40490FDB, %f1047;
	and.b32  	%r469, %r468, 1;
	setp.eq.b32 	%p192, %r469, 1;
	selp.f32 	%f1050, %f1048, %f1049, %p192;
	and.b32  	%r470, %r468, 2;
	setp.eq.s32 	%p193, %r470, 0;
	sub.f32 	%f1052, %f151, %f1050;
	selp.f32 	%f1053, %f1050, %f1052, %p193;
	cvt.rzi.f32.f32 	%f1054, %f83;
	setp.eq.f32 	%p194, %f83, %f1054;
	mul.f32 	%f1055, %f83, 0f00000000;
	selp.f32 	%f1056, %f1055, %f1053, %p194;
	mul.f32 	%f1057, %f81, 0f41490FDB;
	div.approx.f32 	%f1415, %f1056, %f1057;
$L__BB0_43:                             // %L1470
	or.b32  	%r211, %r210, %r146;
	or.b32  	%r216, %r215, %r146;
	mul.f32 	%f104, %f153, %f153;
	mul.f32 	%f5, %f211, %f211;
	mul.f32 	%f10, %f270, %f270;
	mul.f32 	%f16, %f328, %f328;
	mul.f32 	%f21, %f387, %f387;
	mul.f32 	%f27, %f445, %f445;
	mul.f32 	%f32, %f504, %f504;
	mul.f32 	%f38, %f562, %f562;
	mul.f32 	%f43, %f621, %f621;
	mul.f32 	%f49, %f679, %f679;
	mul.f32 	%f54, %f738, %f738;
	mul.f32 	%f60, %f796, %f796;
	mul.f32 	%f65, %f855, %f855;
	mul.f32 	%f71, %f913, %f913;
	mul.f32 	%f76, %f972, %f972;
	mul.f32 	%f82, %f1030, %f1030;
	mul.lo.s32 	%r516, %r159, 127;
	and.b32  	%r517, %r516, 255;
	cvt.rn.f32.s32 	%f1061, %r517;
	div.approx.f32 	%f1062, %f1061, %f183;
	add.f32 	%f1063, %f1062, %f1062;
	mov.b32 	%r518, %f1063;
	and.b32  	%r519, %r518, -2147483648;
	or.b32  	%r520, %r519, 1056964608;
	mov.b32 	%f1064, %r520;
	add.f32 	%f1065, %f1063, %f1064;
	cvt.rzi.f32.f32 	%f1066, %f1065;
	abs.f32 	%f1067, %f1063;
	setp.gt.f32 	%p195, %f1067, 0f4B000000;
	selp.f32 	%f1068, %f1063, %f1066, %p195;
	cvt.rzi.f32.f32 	%f1069, %f1063;
	setp.lt.f32 	%p196, %f1067, 0f3F000000;
	selp.f32 	%f1070, %f1069, %f1068, %p196;
	cvt.rzi.s32.f32 	%r521, %f1070;
	fma.rn.f32 	%f1071, %f1070, 0fBF000000, %f1062;
	mul.f32 	%f1072, %f1071, %f1071;
	fma.rn.f32 	%f1073, %f1072, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1074, %f1072, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1075, %f1073, %f1072, 0fC0A55DF6;
	fma.rn.f32 	%f1076, %f1074, %f1072, 0f4081E0CF;
	fma.rn.f32 	%f1077, %f1072, %f1071, 0f00000000;
	fma.rn.f32 	%f1078, %f1076, %f1072, 0fC09DE9E6;
	fma.rn.f32 	%f1079, %f1075, %f1077, 0f00000000;
	fma.rn.f32 	%f1080, %f1078, %f1072, 0f3F800000;
	fma.rn.f32 	%f1081, %f1071, 0f40490FDB, %f1079;
	and.b32  	%r522, %r521, 1;
	setp.eq.b32 	%p197, %r522, 1;
	selp.f32 	%f1082, %f1080, %f1081, %p197;
	selp.f32 	%f1083, %f1081, %f1080, %p197;
	and.b32  	%r523, %r521, 2;
	setp.eq.s32 	%p198, %r523, 0;
	neg.f32 	%f1084, %f1082;
	selp.f32 	%f1085, %f1082, %f1084, %p198;
	add.s32 	%r524, %r521, 1;
	and.b32  	%r525, %r524, 2;
	setp.eq.s32 	%p199, %r525, 0;
	sub.f32 	%f1087, %f151, %f1083;
	selp.f32 	%f1088, %f1083, %f1087, %p199;
	cvt.rzi.f32.f32 	%f1089, %f1062;
	setp.eq.f32 	%p200, %f1089, %f1062;
	mul.f32 	%f1090, %f1062, 0f00000000;
	selp.f32 	%f1091, %f1090, %f1085, %p200;
	abs.f32 	%f1092, %f1062;
	setp.gt.f32 	%p201, %f1092, 0f4B800000;
	add.f32 	%f1093, %f1091, 0f3F800000;
	add.s32 	%r526, %r516, 192;
	and.b32  	%r527, %r526, 255;
	cvt.rn.f32.s32 	%f1095, %r527;
	div.approx.f32 	%f1096, %f1095, %f183;
	add.f32 	%f1097, %f1096, %f1096;
	mov.b32 	%r528, %f1097;
	and.b32  	%r529, %r528, -2147483648;
	or.b32  	%r530, %r529, 1056964608;
	mov.b32 	%f1098, %r530;
	add.f32 	%f1099, %f1097, %f1098;
	cvt.rzi.f32.f32 	%f1100, %f1099;
	abs.f32 	%f1101, %f1097;
	setp.gt.f32 	%p202, %f1101, 0f4B000000;
	selp.f32 	%f1102, %f1097, %f1100, %p202;
	cvt.rzi.f32.f32 	%f1103, %f1097;
	setp.lt.f32 	%p203, %f1101, 0f3F000000;
	selp.f32 	%f1104, %f1103, %f1102, %p203;
	cvt.rzi.s32.f32 	%r531, %f1104;
	fma.rn.f32 	%f1105, %f1104, 0fBF000000, %f1096;
	mul.f32 	%f1106, %f1105, %f1105;
	fma.rn.f32 	%f1107, %f1106, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1108, %f1106, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1109, %f1107, %f1106, 0fC0A55DF6;
	fma.rn.f32 	%f1110, %f1108, %f1106, 0f4081E0CF;
	fma.rn.f32 	%f1111, %f1106, %f1105, 0f00000000;
	fma.rn.f32 	%f1112, %f1110, %f1106, 0fC09DE9E6;
	fma.rn.f32 	%f1113, %f1109, %f1111, 0f00000000;
	fma.rn.f32 	%f1114, %f1112, %f1106, 0f3F800000;
	fma.rn.f32 	%f1115, %f1105, 0f40490FDB, %f1113;
	and.b32  	%r532, %r531, 1;
	setp.eq.b32 	%p204, %r532, 1;
	selp.f32 	%f1116, %f1114, %f1115, %p204;
	selp.f32 	%f1117, %f1115, %f1114, %p204;
	and.b32  	%r533, %r531, 2;
	setp.eq.s32 	%p205, %r533, 0;
	neg.f32 	%f1118, %f1116;
	selp.f32 	%f1119, %f1116, %f1118, %p205;
	add.s32 	%r534, %r531, 1;
	and.b32  	%r535, %r534, 2;
	setp.eq.s32 	%p206, %r535, 0;
	sub.f32 	%f1120, %f151, %f1117;
	selp.f32 	%f1121, %f1117, %f1120, %p206;
	cvt.rzi.f32.f32 	%f1122, %f1096;
	setp.eq.f32 	%p207, %f1122, %f1096;
	mul.f32 	%f1123, %f1096, 0f00000000;
	selp.f32 	%f1124, %f1123, %f1119, %p207;
	abs.f32 	%f1125, %f1096;
	setp.gt.f32 	%p208, %f1125, 0f4B800000;
	add.f32 	%f1126, %f1124, 0f3F800000;
	and.b32  	%r536, %r157, 2;
	and.b32  	%r537, %r151, 4;
	or.b32  	%r538, %r155, %r536;
	or.b32  	%r539, %r538, %r537;
	and.b32  	%r540, %r140, 6;
	mul.lo.s32 	%r541, %r539, %r540;
	and.b32  	%r542, %r541, 14;
	cvt.rn.f32.s32 	%f1128, %r542;
	mov.f32 	%f1129, 0f41000000;
	div.approx.f32 	%f1130, %f1128, %f1129;
	add.f32 	%f1131, %f1130, %f1130;
	mov.b32 	%r543, %f1131;
	and.b32  	%r544, %r543, -2147483648;
	or.b32  	%r545, %r544, 1056964608;
	mov.b32 	%f1132, %r545;
	add.f32 	%f1133, %f1131, %f1132;
	cvt.rzi.f32.f32 	%f1134, %f1133;
	abs.f32 	%f1135, %f1131;
	setp.gt.f32 	%p209, %f1135, 0f4B000000;
	selp.f32 	%f1136, %f1131, %f1134, %p209;
	cvt.rzi.f32.f32 	%f1137, %f1131;
	setp.lt.f32 	%p210, %f1135, 0f3F000000;
	selp.f32 	%f1138, %f1137, %f1136, %p210;
	cvt.rzi.s32.f32 	%r546, %f1138;
	fma.rn.f32 	%f1139, %f1138, 0fBF000000, %f1130;
	mul.f32 	%f1140, %f1139, %f1139;
	fma.rn.f32 	%f1141, %f1140, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1142, %f1140, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1143, %f1141, %f1140, 0fC0A55DF6;
	fma.rn.f32 	%f1144, %f1142, %f1140, 0f4081E0CF;
	fma.rn.f32 	%f1145, %f1140, %f1139, 0f00000000;
	fma.rn.f32 	%f1146, %f1144, %f1140, 0fC09DE9E6;
	fma.rn.f32 	%f1147, %f1143, %f1145, 0f00000000;
	fma.rn.f32 	%f1148, %f1146, %f1140, 0f3F800000;
	fma.rn.f32 	%f1149, %f1139, 0f40490FDB, %f1147;
	and.b32  	%r547, %r546, 1;
	setp.eq.b32 	%p211, %r547, 1;
	selp.f32 	%f1150, %f1148, %f1149, %p211;
	selp.f32 	%f1151, %f1149, %f1148, %p211;
	and.b32  	%r548, %r546, 2;
	setp.eq.s32 	%p212, %r548, 0;
	neg.f32 	%f1152, %f1150;
	selp.f32 	%f1153, %f1150, %f1152, %p212;
	add.s32 	%r549, %r546, 1;
	and.b32  	%r550, %r549, 2;
	setp.eq.s32 	%p213, %r550, 0;
	sub.f32 	%f1154, %f151, %f1151;
	selp.f32 	%f1155, %f1151, %f1154, %p213;
	cvt.rzi.f32.f32 	%f1156, %f1130;
	setp.eq.f32 	%p214, %f1156, %f1130;
	mul.f32 	%f1157, %f1130, 0f00000000;
	selp.f32 	%f1158, %f1157, %f1153, %p214;
	abs.f32 	%f1159, %f1130;
	setp.gt.f32 	%p215, %f1159, 0f4B800000;
	add.f32 	%f1160, %f1158, 0f3F800000;
	or.b32  	%r551, %r140, 8;
	mul.lo.s32 	%r552, %r539, %r551;
	and.b32  	%r553, %r552, 14;
	cvt.rn.f32.s32 	%f1162, %r553;
	div.approx.f32 	%f1163, %f1162, %f1129;
	add.f32 	%f1164, %f1163, %f1163;
	mov.b32 	%r554, %f1164;
	and.b32  	%r555, %r554, -2147483648;
	or.b32  	%r556, %r555, 1056964608;
	mov.b32 	%f1165, %r556;
	add.f32 	%f1166, %f1164, %f1165;
	cvt.rzi.f32.f32 	%f1167, %f1166;
	abs.f32 	%f1168, %f1164;
	setp.gt.f32 	%p216, %f1168, 0f4B000000;
	selp.f32 	%f1169, %f1164, %f1167, %p216;
	cvt.rzi.f32.f32 	%f1170, %f1164;
	setp.lt.f32 	%p217, %f1168, 0f3F000000;
	selp.f32 	%f1171, %f1170, %f1169, %p217;
	cvt.rzi.s32.f32 	%r557, %f1171;
	fma.rn.f32 	%f1172, %f1171, 0fBF000000, %f1163;
	mul.f32 	%f1173, %f1172, %f1172;
	fma.rn.f32 	%f1174, %f1173, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1175, %f1173, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1176, %f1174, %f1173, 0fC0A55DF6;
	fma.rn.f32 	%f1177, %f1175, %f1173, 0f4081E0CF;
	fma.rn.f32 	%f1178, %f1173, %f1172, 0f00000000;
	fma.rn.f32 	%f1179, %f1177, %f1173, 0fC09DE9E6;
	fma.rn.f32 	%f1180, %f1176, %f1178, 0f00000000;
	fma.rn.f32 	%f1181, %f1179, %f1173, 0f3F800000;
	fma.rn.f32 	%f1182, %f1172, 0f40490FDB, %f1180;
	and.b32  	%r558, %r557, 1;
	setp.eq.b32 	%p218, %r558, 1;
	selp.f32 	%f1183, %f1181, %f1182, %p218;
	selp.f32 	%f1184, %f1182, %f1181, %p218;
	and.b32  	%r559, %r557, 2;
	setp.eq.s32 	%p219, %r559, 0;
	neg.f32 	%f1185, %f1183;
	selp.f32 	%f1186, %f1183, %f1185, %p219;
	add.s32 	%r560, %r557, 1;
	and.b32  	%r561, %r560, 2;
	setp.eq.s32 	%p220, %r561, 0;
	sub.f32 	%f1187, %f151, %f1184;
	selp.f32 	%f1188, %f1184, %f1187, %p220;
	cvt.rzi.f32.f32 	%f1189, %f1163;
	setp.eq.f32 	%p221, %f1189, %f1163;
	mul.f32 	%f1190, %f1163, 0f00000000;
	selp.f32 	%f1191, %f1190, %f1186, %p221;
	abs.f32 	%f1192, %f1163;
	setp.gt.f32 	%p222, %f1192, 0f4B800000;
	add.f32 	%f1193, %f1191, 0f3F800000;
	shl.b32 	%r562, %r152, 3;
	shl.b32 	%r563, %r153, 2;
	or.b32  	%r564, %r562, %r563;
	mul.lo.s32 	%r565, %r564, %r539;
	cvt.rn.f32.s32 	%f1195, %r565;
	mov.f32 	%f1196, 0f42800000;
	div.approx.f32 	%f1197, %f1195, %f1196;
	add.f32 	%f1198, %f1197, %f1197;
	mov.b32 	%r566, %f1198;
	and.b32  	%r567, %r566, -2147483648;
	or.b32  	%r568, %r567, 1056964608;
	mov.b32 	%f1199, %r568;
	add.f32 	%f1200, %f1198, %f1199;
	cvt.rzi.f32.f32 	%f1201, %f1200;
	abs.f32 	%f1202, %f1198;
	setp.gt.f32 	%p223, %f1202, 0f4B000000;
	selp.f32 	%f1203, %f1198, %f1201, %p223;
	cvt.rzi.f32.f32 	%f1204, %f1198;
	setp.lt.f32 	%p224, %f1202, 0f3F000000;
	selp.f32 	%f1205, %f1204, %f1203, %p224;
	cvt.rzi.s32.f32 	%r569, %f1205;
	fma.rn.f32 	%f1206, %f1205, 0fBF000000, %f1197;
	mul.f32 	%f1207, %f1206, %f1206;
	fma.rn.f32 	%f1208, %f1207, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1209, %f1207, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1210, %f1208, %f1207, 0fC0A55DF6;
	fma.rn.f32 	%f1211, %f1209, %f1207, 0f4081E0CF;
	fma.rn.f32 	%f1212, %f1207, %f1206, 0f00000000;
	fma.rn.f32 	%f1213, %f1211, %f1207, 0fC09DE9E6;
	fma.rn.f32 	%f1214, %f1210, %f1212, 0f00000000;
	fma.rn.f32 	%f1215, %f1213, %f1207, 0f3F800000;
	fma.rn.f32 	%f1216, %f1206, 0f40490FDB, %f1214;
	and.b32  	%r570, %r569, 1;
	setp.eq.b32 	%p225, %r570, 1;
	selp.f32 	%f1217, %f1215, %f1216, %p225;
	selp.f32 	%f1218, %f1216, %f1215, %p225;
	and.b32  	%r571, %r569, 2;
	setp.eq.s32 	%p226, %r571, 0;
	neg.f32 	%f1219, %f1217;
	selp.f32 	%f1220, %f1217, %f1219, %p226;
	add.s32 	%r572, %r569, 1;
	and.b32  	%r573, %r572, 2;
	setp.eq.s32 	%p227, %r573, 0;
	sub.f32 	%f1221, %f151, %f1218;
	cvt.rzi.f32.f32 	%f1223, %f1197;
	setp.eq.f32 	%p228, %f1223, %f1197;
	mul.f32 	%f1224, %f1197, 0f00000000;
	selp.f32 	%f1225, %f1224, %f1220, %p228;
	abs.f32 	%f1226, %f1197;
	shl.b32 	%r575, %r539, 4;
	add.s32 	%r576, %r565, %r575;
	and.b32  	%r577, %r576, 124;
	cvt.rn.f32.s32 	%f1229, %r577;
	div.approx.f32 	%f1230, %f1229, %f1196;
	add.f32 	%f1231, %f1230, %f1230;
	mov.b32 	%r578, %f1231;
	and.b32  	%r579, %r578, -2147483648;
	or.b32  	%r580, %r579, 1056964608;
	mov.b32 	%f1232, %r580;
	add.f32 	%f1233, %f1231, %f1232;
	cvt.rzi.f32.f32 	%f1234, %f1233;
	abs.f32 	%f1235, %f1231;
	setp.gt.f32 	%p230, %f1235, 0f4B000000;
	selp.f32 	%f1236, %f1231, %f1234, %p230;
	cvt.rzi.f32.f32 	%f1237, %f1231;
	setp.lt.f32 	%p231, %f1235, 0f3F000000;
	selp.f32 	%f1238, %f1237, %f1236, %p231;
	cvt.rzi.s32.f32 	%r581, %f1238;
	fma.rn.f32 	%f1239, %f1238, 0fBF000000, %f1230;
	mul.f32 	%f1240, %f1239, %f1239;
	fma.rn.f32 	%f1241, %f1240, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1242, %f1240, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1243, %f1241, %f1240, 0fC0A55DF6;
	fma.rn.f32 	%f1244, %f1242, %f1240, 0f4081E0CF;
	fma.rn.f32 	%f1245, %f1240, %f1239, 0f00000000;
	fma.rn.f32 	%f1246, %f1244, %f1240, 0fC09DE9E6;
	fma.rn.f32 	%f1247, %f1243, %f1245, 0f00000000;
	fma.rn.f32 	%f1248, %f1246, %f1240, 0f3F800000;
	fma.rn.f32 	%f1249, %f1239, 0f40490FDB, %f1247;
	and.b32  	%r582, %r581, 1;
	setp.eq.b32 	%p232, %r582, 1;
	selp.f32 	%f1250, %f1248, %f1249, %p232;
	selp.f32 	%f1251, %f1249, %f1248, %p232;
	and.b32  	%r583, %r581, 2;
	setp.eq.s32 	%p233, %r583, 0;
	neg.f32 	%f1252, %f1250;
	selp.f32 	%f1253, %f1250, %f1252, %p233;
	add.s32 	%r584, %r581, 1;
	and.b32  	%r585, %r584, 2;
	setp.eq.s32 	%p234, %r585, 0;
	sub.f32 	%f1254, %f151, %f1251;
	cvt.rzi.f32.f32 	%f1256, %f1230;
	setp.eq.f32 	%p235, %f1256, %f1230;
	mul.f32 	%f1257, %f1230, 0f00000000;
	selp.f32 	%f1258, %f1257, %f1253, %p235;
	abs.f32 	%f1259, %f1230;
	and.b32  	%r587, %r565, 12;
	cvt.rn.f32.s32 	%f1262, %r587;
	div.approx.f32 	%f1263, %f1262, %f1129;
	add.f32 	%f1264, %f1263, %f1263;
	mov.b32 	%r588, %f1264;
	and.b32  	%r589, %r588, -2147483648;
	or.b32  	%r590, %r589, 1056964608;
	mov.b32 	%f1265, %r590;
	add.f32 	%f1266, %f1264, %f1265;
	cvt.rzi.f32.f32 	%f1267, %f1266;
	abs.f32 	%f1268, %f1264;
	setp.gt.f32 	%p237, %f1268, 0f4B000000;
	selp.f32 	%f1269, %f1264, %f1267, %p237;
	cvt.rzi.f32.f32 	%f1270, %f1264;
	setp.lt.f32 	%p238, %f1268, 0f3F000000;
	selp.f32 	%f1271, %f1270, %f1269, %p238;
	cvt.rzi.s32.f32 	%r591, %f1271;
	fma.rn.f32 	%f1272, %f1271, 0fBF000000, %f1263;
	mul.f32 	%f1273, %f1272, %f1272;
	fma.rn.f32 	%f1274, %f1273, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1275, %f1273, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1276, %f1274, %f1273, 0fC0A55DF6;
	fma.rn.f32 	%f1277, %f1275, %f1273, 0f4081E0CF;
	fma.rn.f32 	%f1278, %f1273, %f1272, 0f00000000;
	fma.rn.f32 	%f1279, %f1277, %f1273, 0fC09DE9E6;
	fma.rn.f32 	%f1280, %f1276, %f1278, 0f00000000;
	fma.rn.f32 	%f1281, %f1279, %f1273, 0f3F800000;
	fma.rn.f32 	%f1282, %f1272, 0f40490FDB, %f1280;
	and.b32  	%r592, %r591, 1;
	setp.eq.b32 	%p239, %r592, 1;
	selp.f32 	%f1283, %f1281, %f1282, %p239;
	selp.f32 	%f1284, %f1282, %f1281, %p239;
	and.b32  	%r593, %r591, 2;
	setp.eq.s32 	%p240, %r593, 0;
	neg.f32 	%f1285, %f1283;
	selp.f32 	%f1286, %f1283, %f1285, %p240;
	add.s32 	%r594, %r591, 1;
	and.b32  	%r595, %r594, 2;
	setp.eq.s32 	%p241, %r595, 0;
	sub.f32 	%f1287, %f151, %f1284;
	selp.f32 	%f1288, %f1284, %f1287, %p241;
	cvt.rzi.f32.f32 	%f1289, %f1263;
	setp.eq.f32 	%p242, %f1289, %f1263;
	mul.f32 	%f1290, %f1263, 0f00000000;
	selp.f32 	%f1291, %f1290, %f1286, %p242;
	abs.f32 	%f1292, %f1263;
	setp.gt.f32 	%p243, %f1292, 0f4B800000;
	add.f32 	%f1293, %f1291, 0f3F800000;
	mul.lo.s32 	%r596, %r155, 2147483640;
	cvt.u16.u32 	%rs1, %r4;
	shr.u16 	%rs2, %rs1, 8;
	shl.b16 	%rs3, %rs1, 8;
	or.b16  	%rs4, %rs3, %rs2;
	shl.b16 	%rs5, %rs4, 4;
	shr.u16 	%rs6, %rs4, 4;
	and.b16  	%rs7, %rs6, 3840;
	or.b16  	%rs8, %rs7, %rs5;
	and.b16  	%rs9, %rs8, 13107;
	shl.b16 	%rs10, %rs9, 2;
	shr.u16 	%rs11, %rs8, 2;
	and.b16  	%rs12, %rs11, 13107;
	or.b16  	%rs13, %rs12, %rs10;
	and.b16  	%rs14, %rs13, 20480;
	shl.b16 	%rs15, %rs14, 1;
	shr.u16 	%rs16, %rs13, 1;
	and.b16  	%rs17, %rs16, 16384;
	or.b16  	%rs18, %rs17, %rs15;
	shr.u16 	%rs19, %rs18, 13;
	sub.s32 	%r597, %r596, %r139;
	mad.lo.s32 	%r598, %r158, 2147483616, %r597;
	or.b16  	%rs20, %rs19, 1;
	cvt.u32.u16 	%r599, %rs20;
	and.b16  	%rs21, %rs19, 6;
	cvt.u32.u16 	%r600, %rs21;
	sub.s32 	%r601, %r598, %r600;
	shl.b32 	%r602, %r601, 1;
	cvt.rn.f32.s32 	%f1295, %r602;
	div.approx.f32 	%f86, %f1295, %f183;
	abs.f32 	%f1422, %f86;
	setp.lt.f32 	%p244, %f1422, 0f40000000;
	@%p244 bra 	$L__BB0_77;
// %bb.44:
	setp.gtu.f32 	%p245, %f1422, 0f4B800000;
	@%p245 bra 	$L__BB0_73;
	bra.uni 	$L__BB0_45;
$L__BB0_73:
	mov.b32 	%r162, %f1422;
	and.b32  	%r603, %r162, 8388607;
	or.b32  	%r16397, %r603, 1065353216;
	mov.b32 	%f1421, %r16397;
	add.s32 	%r604, %r162, -1073741824;
	and.b32  	%r16398, %r604, -8388608;
	setp.eq.s32 	%p251, %r16398, 0;
	@%p251 bra 	$L__BB0_76;
// %bb.74:                              // %__nv_fmaf_rn.exit4.i.i.i2016.preheader
	mov.f32 	%f1305, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1304,%f1305;
	// end inline asm
$L__BB0_75:                             // %__nv_fmaf_rn.exit4.i.i.i2016
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r605, %r16398, 192937984;
	add.s32 	%r606, %r16397, %r605;
	mov.b32 	%f1306, %r606;
	mul.f32 	%f1307, %f1304, %f1306;
	sub.f32 	%f1308, %f1306, %f1307;
	fma.rn.f32 	%f1309, %f1308, %f1304, %f1307;
	sub.f32 	%f1310, %f1306, %f1309;
	fma.rz.f32 	%f1311, %f1310, %f1304, %f1309;
	cvt.rzi.f32.f32 	%f1312, %f1311;
	sub.f32 	%f1421, %f1306, %f1312;
	sub.s32 	%r16398, %r16398, %r605;
	mov.b32 	%r16397, %f1421;
	setp.ne.s32 	%p252, %r16398, 0;
	setp.ne.s32 	%p253, %r16397, 0;
	and.pred  	%p254, %p252, %p253;
	@%p254 bra 	$L__BB0_75;
$L__BB0_76:                             // %__internal_fmodf_slowpath_mod.exit.i.i2018
	setp.gt.u32 	%p255, %r162, 2139095039;
	selp.f32 	%f1313, 0f7FFFFFFF, 0f4B800000, %p255;
	mul.f32 	%f1314, %f1421, 0f34000000;
	mul.f32 	%f1422, %f1313, %f1314;
	bra.uni 	$L__BB0_77;
$L__BB0_45:                             // %__nv_fast_fdividef.exit.i.i.i1995
	mov.f32 	%f1296, 0f40000000;
	div.approx.f32 	%f1297, %f1422, %f1296;
	cvt.rzi.f32.f32 	%f1420, %f1297;
	fma.rn.f32 	%f107, %f1420, 0fC0000000, %f1422;
	mov.b32 	%r161, %f107;
	setp.lt.u32 	%p246, %r161, 1073741824;
	@%p246 bra 	$L__BB0_72;
// %bb.46:
	setp.lt.u32 	%p247, %r161, -2147483647;
	@%p247 bra 	$L__BB0_70;
// %bb.47:
	add.f32 	%f1302, %f1420, 0fBF800000;
	setp.lt.f32 	%p250, %f107, 0fC0000000;
	add.f32 	%f1303, %f1302, 0fBF800000;
	selp.f32 	%f1420, %f1303, %f1302, %p250;
	bra.uni 	$L__BB0_72;
$L__BB0_70:
	add.f32 	%f1420, %f1420, 0f3F800000;
	setp.ltu.f32 	%p248, %f107, 0f40800000;
	@%p248 bra 	$L__BB0_72;
// %bb.71:                              // %__nv_fmaf_rn.exit.i.i.i1999
	add.f32 	%f1298, %f1420, 0f3F800000;
	fma.rn.f32 	%f1300, %f1296, 0fC0400000, %f107;
	setp.ge.f32 	%p249, %f1300, 0f00000000;
	add.f32 	%f1301, %f1298, 0f3F800000;
	selp.f32 	%f1420, %f1301, %f1298, %p249;
$L__BB0_72:                             // %__internal_fmodf_fastpath_quot.exit.i.i2002
	fma.rn.f32 	%f1422, %f1420, 0fC0000000, %f1422;
$L__BB0_77:                             // %__internal_fmodf_kernel.exit.i2021
	shr.u32 	%r212, %r211, 1;
	bfe.u32 	%r217, %r216, 1, 12;
	mul.f32 	%f182, %f1400, %f104;
	mul.f32 	%f240, %f1401, %f5;
	mul.f32 	%f299, %f1402, %f10;
	mul.f32 	%f357, %f1403, %f16;
	mul.f32 	%f416, %f1404, %f21;
	mul.f32 	%f474, %f1405, %f27;
	mul.f32 	%f533, %f1406, %f32;
	mul.f32 	%f591, %f1407, %f38;
	mul.f32 	%f650, %f1408, %f43;
	mul.f32 	%f708, %f1409, %f49;
	mul.f32 	%f767, %f1410, %f54;
	mul.f32 	%f825, %f1411, %f60;
	mul.f32 	%f884, %f1412, %f65;
	mul.f32 	%f942, %f1413, %f71;
	mul.f32 	%f1001, %f1414, %f76;
	mul.f32 	%f1058, %f1415, %f82;
	selp.f32 	%f1094, %f1093, %f1088, %p201;
	selp.f32 	%f1127, %f1126, %f1121, %p208;
	selp.f32 	%f1161, %f1160, %f1155, %p215;
	selp.f32 	%f1194, %f1193, %f1188, %p222;
	selp.f32 	%f1222, %f1218, %f1221, %p227;
	setp.gt.f32 	%p229, %f1226, 0f4B800000;
	add.f32 	%f1227, %f1225, 0f3F800000;
	selp.f32 	%f1255, %f1251, %f1254, %p234;
	setp.gt.f32 	%p236, %f1259, 0f4B800000;
	add.f32 	%f1260, %f1258, 0f3F800000;
	selp.f32 	%f1294, %f1293, %f1288, %p243;
	mov.b32 	%r509, %f1291;
	sub.s32 	%r27, %r598, %r599;
	abs.f32 	%f1315, %f1422;
	setp.gtu.f32 	%p256, %f1315, 0f7F800000;
	@%p256 bra 	$L__BB0_79;
// %bb.78:
	mov.b32 	%r607, %f86;
	and.b32  	%r608, %r607, -2147483648;
	mov.b32 	%r609, %f1422;
	or.b32  	%r610, %r608, %r609;
	mov.b32 	%f1422, %r610;
$L__BB0_79:                             // %__nv_fmodf.exit2022
	ld.param.u64 	%rd1, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_7];
	mul.wide.u32 	%rd31, %r212, 4;
	mul.wide.u32 	%rd33, %r217, 4;
	div.approx.f32 	%f3, %f182, %f183;
	div.approx.f32 	%f242, %f240, %f183;
	div.approx.f32 	%f14, %f299, %f183;
	div.approx.f32 	%f359, %f357, %f183;
	div.approx.f32 	%f25, %f416, %f183;
	div.approx.f32 	%f476, %f474, %f183;
	div.approx.f32 	%f36, %f533, %f183;
	div.approx.f32 	%f593, %f591, %f183;
	div.approx.f32 	%f47, %f650, %f183;
	div.approx.f32 	%f710, %f708, %f183;
	div.approx.f32 	%f58, %f767, %f183;
	div.approx.f32 	%f827, %f825, %f183;
	div.approx.f32 	%f69, %f884, %f183;
	div.approx.f32 	%f944, %f942, %f183;
	div.approx.f32 	%f80, %f1001, %f183;
	div.approx.f32 	%f1060, %f1058, %f183;
	mov.b32 	%r478, %f1094;
	mov.b32 	%r479, %f1127;
	mov.b32 	%r484, %f1091;
	mov.b32 	%r485, %f1124;
	mov.b32 	%r496, %f1161;
	mov.b32 	%r497, %f1194;
	mov.b32 	%r490, %f1158;
	mov.b32 	%r491, %f1191;
	mov.b32 	%r574, %f1225;
	selp.f32 	%f1228, %f1227, %f1222, %p229;
	mov.b32 	%r586, %f1258;
	selp.f32 	%f1261, %f1260, %f1255, %p236;
	mov.b32 	%r515, %f1294;
	xor.b32  	%r511, %r509, -2147483648;
	add.f32 	%f1316, %f1422, %f1422;
	mov.b32 	%r611, %f1316;
	and.b32  	%r612, %r611, -2147483648;
	or.b32  	%r613, %r612, 1056964608;
	mov.b32 	%f1317, %r613;
	add.f32 	%f1318, %f1316, %f1317;
	cvt.rzi.f32.f32 	%f1319, %f1318;
	abs.f32 	%f1320, %f1316;
	setp.gt.f32 	%p257, %f1320, 0f4B000000;
	selp.f32 	%f1321, %f1316, %f1319, %p257;
	cvt.rzi.f32.f32 	%f1322, %f1316;
	setp.lt.f32 	%p258, %f1320, 0f3F000000;
	selp.f32 	%f1323, %f1322, %f1321, %p258;
	cvt.rzi.s32.f32 	%r614, %f1323;
	fma.rn.f32 	%f1324, %f1323, 0fBF000000, %f1422;
	mul.f32 	%f1325, %f1324, %f1324;
	fma.rn.f32 	%f1326, %f1325, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1327, %f1325, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1328, %f1326, %f1325, 0fC0A55DF6;
	fma.rn.f32 	%f1329, %f1327, %f1325, 0f4081E0CF;
	fma.rn.f32 	%f1330, %f1325, %f1324, 0f00000000;
	fma.rn.f32 	%f1331, %f1329, %f1325, 0fC09DE9E6;
	fma.rn.f32 	%f1332, %f1328, %f1330, 0f00000000;
	fma.rn.f32 	%f1333, %f1331, %f1325, 0f3F800000;
	fma.rn.f32 	%f1334, %f1324, 0f40490FDB, %f1332;
	and.b32  	%r615, %r614, 1;
	setp.eq.b32 	%p259, %r615, 1;
	selp.f32 	%f1335, %f1333, %f1334, %p259;
	selp.f32 	%f1336, %f1334, %f1333, %p259;
	and.b32  	%r616, %r614, 2;
	setp.eq.s32 	%p260, %r616, 0;
	neg.f32 	%f1337, %f1335;
	selp.f32 	%f1338, %f1335, %f1337, %p260;
	add.s32 	%r617, %r614, 1;
	and.b32  	%r618, %r617, 2;
	setp.eq.s32 	%p261, %r618, 0;
	sub.f32 	%f1340, %f151, %f1336;
	selp.f32 	%f1341, %f1336, %f1340, %p261;
	cvt.rzi.f32.f32 	%f1342, %f1422;
	setp.eq.f32 	%p262, %f1342, %f1422;
	mul.f32 	%f1343, %f1422, 0f00000000;
	selp.f32 	%f121, %f1343, %f1338, %p262;
	abs.f32 	%f1344, %f1422;
	setp.gt.f32 	%p263, %f1344, 0f4B800000;
	add.f32 	%f1345, %f121, 0f3F800000;
	shl.b32 	%r619, %r27, 1;
	cvt.rn.f32.s32 	%f1346, %r619;
	div.approx.f32 	%f123, %f1346, %f183;
	abs.f32 	%f1418, %f123;
	setp.lt.f32 	%p264, %f1418, 0f40000000;
	@%p264 bra 	$L__BB0_59;
// %bb.48:
	setp.gtu.f32 	%p265, %f1418, 0f4B800000;
	@%p265 bra 	$L__BB0_55;
	bra.uni 	$L__BB0_49;
$L__BB0_55:
	mov.b32 	%r29, %f1418;
	and.b32  	%r620, %r29, 8388607;
	or.b32  	%r16345, %r620, 1065353216;
	mov.b32 	%f1417, %r16345;
	add.s32 	%r621, %r29, -1073741824;
	and.b32  	%r16346, %r621, -8388608;
	setp.eq.s32 	%p271, %r16346, 0;
	@%p271 bra 	$L__BB0_58;
// %bb.56:                              // %__nv_fmaf_rn.exit4.i.i.i.preheader
	mov.f32 	%f1357, 0f3F800000;
	// begin inline asm
	rcp.approx.ftz.f32 %f1356,%f1357;
	// end inline asm
$L__BB0_57:                             // %__nv_fmaf_rn.exit4.i.i.i
                                        // =>This Inner Loop Header: Depth=1
	min.u32 	%r622, %r16346, 192937984;
	add.s32 	%r623, %r16345, %r622;
	mov.b32 	%f1358, %r623;
	mul.f32 	%f1359, %f1356, %f1358;
	sub.f32 	%f1360, %f1358, %f1359;
	fma.rn.f32 	%f1361, %f1360, %f1356, %f1359;
	sub.f32 	%f1362, %f1358, %f1361;
	fma.rz.f32 	%f1363, %f1362, %f1356, %f1361;
	cvt.rzi.f32.f32 	%f1364, %f1363;
	sub.f32 	%f1417, %f1358, %f1364;
	sub.s32 	%r16346, %r16346, %r622;
	mov.b32 	%r16345, %f1417;
	setp.ne.s32 	%p272, %r16346, 0;
	setp.ne.s32 	%p273, %r16345, 0;
	and.pred  	%p274, %p272, %p273;
	@%p274 bra 	$L__BB0_57;
$L__BB0_58:                             // %__internal_fmodf_slowpath_mod.exit.i.i
	setp.gt.u32 	%p275, %r29, 2139095039;
	selp.f32 	%f1365, 0f7FFFFFFF, 0f4B800000, %p275;
	mul.f32 	%f1366, %f1417, 0f34000000;
	mul.f32 	%f1418, %f1365, %f1366;
	bra.uni 	$L__BB0_59;
$L__BB0_49:                             // %__nv_fast_fdividef.exit.i.i.i
	mov.f32 	%f1348, 0f40000000;
	div.approx.f32 	%f1349, %f1418, %f1348;
	cvt.rzi.f32.f32 	%f1416, %f1349;
	fma.rn.f32 	%f89, %f1416, 0fC0000000, %f1418;
	mov.b32 	%r28, %f89;
	setp.lt.u32 	%p266, %r28, 1073741824;
	@%p266 bra 	$L__BB0_54;
// %bb.50:
	setp.lt.u32 	%p267, %r28, -2147483647;
	@%p267 bra 	$L__BB0_52;
// %bb.51:
	add.f32 	%f1354, %f1416, 0fBF800000;
	setp.lt.f32 	%p270, %f89, 0fC0000000;
	add.f32 	%f1355, %f1354, 0fBF800000;
	selp.f32 	%f1416, %f1355, %f1354, %p270;
	bra.uni 	$L__BB0_54;
$L__BB0_52:
	add.f32 	%f1416, %f1416, 0f3F800000;
	setp.ltu.f32 	%p268, %f89, 0f40800000;
	@%p268 bra 	$L__BB0_54;
// %bb.53:                              // %__nv_fmaf_rn.exit.i.i.i
	add.f32 	%f1350, %f1416, 0f3F800000;
	fma.rn.f32 	%f1352, %f1348, 0fC0400000, %f89;
	setp.ge.f32 	%p269, %f1352, 0f00000000;
	add.f32 	%f1353, %f1350, 0f3F800000;
	selp.f32 	%f1416, %f1353, %f1350, %p269;
$L__BB0_54:                             // %__internal_fmodf_fastpath_quot.exit.i.i
	fma.rn.f32 	%f1418, %f1416, 0fC0000000, %f1418;
$L__BB0_59:                             // %__internal_fmodf_kernel.exit.i
	add.s64 	%rd32, %rd1, %rd31;
	add.s64 	%rd34, %rd1, %rd33;
	shr.u32 	%r154, %r4, 2;
	mov.b32 	%r256, %f242;
	mov.b32 	%r255, %f3;
	mov.b32 	%r287, %f359;
	mov.b32 	%r286, %f14;
	mov.b32 	%r318, %f476;
	mov.b32 	%r317, %f25;
	mov.b32 	%r349, %f593;
	mov.b32 	%r348, %f36;
	mov.b32 	%r380, %f710;
	mov.b32 	%r379, %f47;
	mov.b32 	%r411, %f827;
	mov.b32 	%r410, %f58;
	mov.b32 	%r442, %f944;
	mov.b32 	%r441, %f69;
	mov.b32 	%r473, %f1060;
	mov.b32 	%r472, %f80;
	xor.b32  	%r493, %r490, -2147483648;
	xor.b32  	%r494, %r491, -2147483648;
	mov.b32 	%r499, %f1228;
	mov.b32 	%r500, %f1261;
	xor.b32  	%r502, %r574, -2147483648;
	xor.b32  	%r503, %r586, -2147483648;
	selp.f32 	%f122, %f1345, %f1341, %p263;
	abs.f32 	%f1367, %f1418;
	setp.gtu.f32 	%p276, %f1367, 0f7F800000;
	@%p276 bra 	$L__BB0_61;
// %bb.60:
	mov.b32 	%r624, %f123;
	and.b32  	%r625, %r624, -2147483648;
	mov.b32 	%r626, %f1418;
	or.b32  	%r627, %r625, %r626;
	mov.b32 	%f1418, %r627;
$L__BB0_61:                             // %__nv_fmodf.exit
	ld.param.u64 	%rd2, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_8];
	ld.param.u64 	%rd3, [_Z6upchan5Int32S_S_S_S_S_13CuDeviceArrayI9Float16x2Li1ELi1EES0_I6Int4x8Li1ELi1EES0_IS2_Li1ELi1EES0_IS_Li1ELi1EE_param_9];
	ld.global.u32 	%r148, [%rd32];
	ld.global.u32 	%r150, [%rd34];
	// begin inline asm
	cvt.rn.f16x2.f32 %r254, %r256, %r255;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r285, %r287, %r286;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r316, %r318, %r317;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r347, %r349, %r348;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r378, %r380, %r379;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r409, %r411, %r410;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r440, %r442, %r441;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r471, %r473, %r472;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r474, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r477, %r479, %r478;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r480, %r485, %r484;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r483, %r485, %r484;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r486, %r497, %r496;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r489, %r491, %r490;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r492, %r494, %r493;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r495, %r497, %r496;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r498, %r500, %r499;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r501, %r503, %r502;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r504, %r515, %r515;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r507, %r509, %r509;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r510, %r511, %r511;
	// end inline asm
	// begin inline asm
	cvt.rn.f16x2.f32 %r513, %r515, %r515;
	// end inline asm
	add.f32 	%f1368, %f1418, %f1418;
	mov.b32 	%r635, %f1368;
	and.b32  	%r636, %r635, -2147483648;
	or.b32  	%r637, %r636, 1056964608;
	mov.b32 	%f1369, %r637;
	add.f32 	%f1370, %f1368, %f1369;
	cvt.rzi.f32.f32 	%f1371, %f1370;
	abs.f32 	%f1372, %f1368;
	setp.gt.f32 	%p277, %f1372, 0f4B000000;
	selp.f32 	%f1373, %f1368, %f1371, %p277;
	cvt.rzi.f32.f32 	%f1374, %f1368;
	setp.lt.f32 	%p278, %f1372, 0f3F000000;
	selp.f32 	%f1375, %f1374, %f1373, %p278;
	cvt.rzi.s32.f32 	%r638, %f1375;
	fma.rn.f32 	%f1376, %f1375, 0fBF000000, %f1418;
	mul.f32 	%f1377, %f1376, %f1376;
	fma.rn.f32 	%f1378, %f1377, 0fBF17ACC9, 0f40233590;
	fma.rn.f32 	%f1379, %f1377, 0f3E684E12, 0fBFAAD2E0;
	fma.rn.f32 	%f1380, %f1378, %f1377, 0fC0A55DF6;
	fma.rn.f32 	%f1381, %f1379, %f1377, 0f4081E0CF;
	fma.rn.f32 	%f1382, %f1377, %f1376, 0f00000000;
	fma.rn.f32 	%f1383, %f1381, %f1377, 0fC09DE9E6;
	fma.rn.f32 	%f1384, %f1380, %f1382, 0f00000000;
	fma.rn.f32 	%f1385, %f1383, %f1377, 0f3F800000;
	fma.rn.f32 	%f1386, %f1376, 0f40490FDB, %f1384;
	and.b32  	%r639, %r638, 1;
	setp.eq.b32 	%p279, %r639, 1;
	selp.f32 	%f1387, %f1385, %f1386, %p279;
	selp.f32 	%f1388, %f1386, %f1385, %p279;
	and.b32  	%r640, %r638, 2;
	setp.eq.s32 	%p280, %r640, 0;
	neg.f32 	%f1389, %f1387;
	selp.f32 	%f1390, %f1387, %f1389, %p280;
	add.s32 	%r641, %r638, 1;
	and.b32  	%r642, %r641, 2;
	setp.eq.s32 	%p281, %r642, 0;
	sub.f32 	%f1392, %f151, %f1388;
	selp.f32 	%f1393, %f1388, %f1392, %p281;
	cvt.rzi.f32.f32 	%f1394, %f1418;
	setp.eq.f32 	%p282, %f1394, %f1418;
	mul.f32 	%f1395, %f1418, 0f00000000;
	selp.f32 	%f1396, %f1395, %f1390, %p282;
	abs.f32 	%f1397, %f1418;
	setp.gt.f32 	%p283, %f1397, 0f4B800000;
	add.f32 	%f1398, %f1396, 0f3F800000;
	selp.f32 	%f1399, %f1398, %f1393, %p283;
	mov.b32 	%r630, %f1399;
	mov.b32 	%r629, %f122;
	// begin inline asm
	cvt.rn.f16x2.f32 %r628, %r630, %r629;
	// end inline asm
	mov.b32 	%r633, %f1396;
	mov.b32 	%r632, %f121;
	// begin inline asm
	cvt.rn.f16x2.f32 %r631, %r633, %r632;
	// end inline asm
	shl.b32 	%r643, %r193, 13;
	shl.b32 	%r644, %r197, 7;
	shl.b32 	%r645, %r4, 3;
	and.b32  	%r646, %r645, 64;
	or.b32  	%r38, %r646, %r2;
	and.b32  	%r39, %r145, 64;
	and.b32  	%r647, %r145, 32;
	and.b32  	%r648, %r142, 28;
	or.b32  	%r40, %r647, %r648;
	and.b32  	%r649, %r145, 8128;
	or.b32  	%r650, %r649, %r643;
	or.b32  	%r651, %r650, %r40;
	add.s32 	%r41, %r651, %r644;
	and.b32  	%r42, %r4, 8;
	shl.b32 	%r652, %r4, 4;
	or.b32  	%r653, %r42, %r652;
	shr.u32 	%r654, %r653, 2;
	and.b32  	%r655, %r654, 30;
	and.b32  	%r43, %r652, 48;
	and.b32  	%r656, %r154, 6;
	or.b32  	%r657, %r141, %r43;
	or.b32  	%r44, %r657, %r656;
	shr.u32 	%r658, %r2, 1;
	and.b32  	%r659, %r3, 32;
	or.b32  	%r660, %r659, %r658;
	or.b32  	%r661, %r660, 8;
	or.b32  	%r662, %r660, 16;
	or.b32  	%r663, %r660, 24;
	or.b32  	%r664, %r147, %r144;
	or.b32  	%r665, %r664, %r143;
	or.b32  	%r666, %r665, %r141;
	shr.u32 	%r667, %r666, 1;
	mul.lo.s32 	%r668, %r667, 65;
	add.s32 	%r45, %r660, %r668;
	add.s32 	%r46, %r661, %r668;
	add.s32 	%r47, %r662, %r668;
	add.s32 	%r48, %r663, %r668;
	or.b32  	%r669, %r149, %r144;
	or.b32  	%r670, %r669, %r143;
	or.b32  	%r671, %r670, %r141;
	shr.u32 	%r672, %r671, 1;
	mul.lo.s32 	%r673, %r672, 65;
	add.s32 	%r49, %r660, %r673;
	add.s32 	%r50, %r661, %r673;
	add.s32 	%r51, %r662, %r673;
	add.s32 	%r52, %r663, %r673;
	shl.b32 	%r674, %r2, 1;
	or.b32  	%r675, %r674, %r156;
	mul.lo.s32 	%r676, %r675, 65;
	add.s32 	%r677, %r655, %r676;
	mul.wide.u32 	%rd35, %r677, 4;
	mov.u64 	%rd36, shmem;
	add.s64 	%rd5, %rd36, %rd35;
	cvt.u64.u32 	%rd37, %r655;
	cvt.u64.u32 	%rd38, %r676;
	add.s64 	%rd39, %rd38, %rd37;
	shl.b64 	%rd40, %rd39, 2;
	add.s64 	%rd6, %rd36, %rd40;
	or.b32  	%r678, %r675, 32;
	mul.lo.s32 	%r679, %r678, 65;
	add.s32 	%r680, %r655, %r679;
	mul.wide.u32 	%rd41, %r680, 4;
	add.s64 	%rd7, %rd36, %rd41;
	cvt.u64.u32 	%rd42, %r679;
	add.s64 	%rd43, %rd42, %rd37;
	shl.b64 	%rd44, %rd43, 2;
	add.s64 	%rd8, %rd36, %rd44;
	shl.b32 	%r681, %r195, 20;
	add.s32 	%r682, %r681, -3145728;
	shl.b32 	%r683, %r2, 2;
	or.b32  	%r684, %r683, %r157;
	or.b32  	%r685, %r684, %r146;
	shl.b32 	%r53, %r685, 7;
	cvt.s64.s32 	%rd9, %r682;
	or.b32  	%r54, %r53, 8192;
	bfe.u32 	%r686, %r652, 5, 1;
	bfe.s32 	%r687, %r2, 1, 1;
	and.b32  	%r688, %r2, 2;
	setp.eq.s32 	%p284, %r688, 0;
	and.b32  	%r689, %r687, 1040;
	mul.lo.s32 	%r690, %r156, 65;
	and.b32  	%r691, %r2, 1;
	neg.s32 	%r692, %r691;
	and.b32  	%r693, %r692, 2080;
	shr.u32 	%r694, %r2, 3;
	mul.lo.s32 	%r695, %r694, 260;
	bfe.s32 	%r696, %r2, 2, 1;
	and.b32  	%r697, %r2, 4;
	setp.eq.s32 	%p285, %r697, 0;
	and.b32  	%r698, %r696, 520;
	or.b32  	%r699, %r693, %r655;
	add.s32 	%r700, %r699, %r690;
	add.s32 	%r701, %r700, %r689;
	add.s32 	%r702, %r701, %r695;
	add.s32 	%r703, %r702, %r698;
	mul.wide.u32 	%rd45, %r703, 4;
	add.s64 	%rd10, %rd36, %rd45;
	selp.b64 	%rd46, 0, 520, %p285;
	cvt.u64.u32 	%rd47, %r695;
	selp.b64 	%rd48, 0, 1040, %p284;
	cvt.u64.u32 	%rd49, %r690;
	cvt.u64.u32 	%rd50, %r699;
	add.s64 	%rd51, %rd50, %rd49;
	add.s64 	%rd52, %rd51, %rd48;
	add.s64 	%rd53, %rd52, %rd47;
	add.s64 	%rd54, %rd53, %rd46;
	shl.b64 	%rd55, %rd54, 2;
	add.s64 	%rd11, %rd36, %rd55;
	cvt.u64.u32 	%rd56, %r702;
	add.s64 	%rd57, %rd56, %rd46;
	shl.b64 	%rd58, %rd57, 2;
	add.s64 	%rd12, %rd36, %rd58;
	add.s32 	%r704, %r703, 162;
	mul.wide.u32 	%rd59, %r704, 4;
	add.s64 	%rd13, %rd36, %rd59;
	add.s32 	%r705, %r703, 131;
	mul.wide.u32 	%rd60, %r705, 4;
	add.s64 	%rd14, %rd36, %rd60;
	add.s32 	%r706, %r703, 163;
	mul.wide.u32 	%rd61, %r706, 4;
	add.s64 	%rd15, %rd36, %rd61;
	add.s32 	%r707, %r703, 4193;
	mul.wide.u32 	%rd62, %r707, 4;
	add.s64 	%rd16, %rd36, %rd62;
	add.s32 	%r708, %r703, 4162;
	mul.wide.u32 	%rd63, %r708, 4;
	add.s64 	%rd17, %rd36, %rd63;
	add.s32 	%r709, %r703, 4194;
	mul.wide.u32 	%rd64, %r709, 4;
	add.s64 	%rd18, %rd36, %rd64;
	add.s32 	%r710, %r703, 4323;
	mul.wide.u32 	%rd65, %r710, 4;
	add.s64 	%rd19, %rd36, %rd65;
	add.s32 	%r711, %r703, 4292;
	mul.wide.u32 	%rd66, %r711, 4;
	add.s64 	%rd20, %rd36, %rd66;
	add.s32 	%r712, %r703, 4324;
	mul.wide.u32 	%rd67, %r712, 4;
	add.s64 	%rd21, %rd36, %rd67;
	mul.lo.s32 	%r713, %r686, 65;
	add.s32 	%r55, %r660, %r713;
	add.s32 	%r56, %r661, %r713;
	add.s32 	%r57, %r662, %r713;
	add.s32 	%r58, %r663, %r713;
	add.s32 	%r59, %r660, 2080;
	add.s32 	%r60, %r661, 2080;
	add.s32 	%r61, %r662, 2080;
	add.s32 	%r62, %r663, 2080;
	add.s32 	%r714, %r680, 4193;
	mul.wide.u32 	%rd68, %r714, 4;
	add.s64 	%rd22, %rd36, %rd68;
	mov.u32 	%r16347, 0;
	setp.eq.s32 	%p287, %r42, 0;
	mov.u16 	%rs2381, 25600;
	mov.u16 	%rs2173, 21504;
	mov.u16 	%rs2389, 18432;
	mov.u16 	%rs2307, -14592;
	mov.u32 	%r16348, %r16347;
	mov.u32 	%r16349, %r16347;
	mov.u32 	%r16350, %r16347;
	mov.u32 	%r16351, %r16347;
	mov.u32 	%r16352, %r16347;
	mov.u32 	%r16353, %r16347;
	mov.u32 	%r16354, %r16347;
	mov.u32 	%r16355, %r16347;
	mov.u32 	%r16356, %r16347;
	mov.u32 	%r16357, %r16347;
	mov.u32 	%r16358, %r16347;
	mov.u32 	%r16359, %r16347;
	mov.u32 	%r16360, %r16347;
	mov.u32 	%r16361, %r16347;
	mov.u32 	%r16362, %r16347;
	mov.u32 	%r16363, %r16347;
	mov.u32 	%r16364, %r16347;
	mov.u32 	%r16365, %r16347;
	mov.u32 	%r16366, %r16347;
	mov.u32 	%r16367, %r16347;
	mov.u32 	%r16368, %r16347;
	mov.u32 	%r16369, %r16347;
	mov.u32 	%r16370, %r16347;
	mov.u32 	%r16371, %r16347;
	bra.uni 	$L__BB0_62;
$L__BB0_68:                             // %L70797
                                        //   in Loop: Header=BB0_62 Depth=1
	add.s32 	%r138, %r16371, 256;
	setp.ne.s32 	%p312, %r16371, 32512;
	mov.u32 	%r16371, %r138;
	@%p312 bra 	$L__BB0_62;
	bra.uni 	$L__BB0_69;
$L__BB0_62:                             // %L2097
                                        // =>This Loop Header: Depth=1
                                        //     Child Loop BB0_64 Depth 2
	add.s32 	%r715, %r16371, %r193;
	setp.lt.s32 	%p286, %r715, %r194;
	@%p286 bra 	$L__BB0_63;
	bra.uni 	$L__BB0_69;
$L__BB0_63:                             // %pass819
                                        //   in Loop: Header=BB0_62 Depth=1
	or.b32  	%r781, %r16371, %r140;
	and.b32  	%r782, %r781, 32544;
	or.b32  	%r783, %r38, %r782;
	shl.b32 	%r784, %r783, 13;
	add.s32 	%r785, %r41, %r784;
	shr.s32 	%r786, %r785, 31;
	shr.u32 	%r787, %r786, 4;
	add.s32 	%r788, %r785, %r787;
	shr.s32 	%r789, %r788, 28;
	setp.lt.s32 	%p288, %r785, 0;
	and.b32  	%r790, %r788, -268435456;
	setp.ne.s32 	%p289, %r790, %r785;
	and.pred  	%p290, %p288, %p289;
	selp.u32 	%r791, 1, 0, %p290;
	sub.s32 	%r792, %r791, %r789;
	shl.b32 	%r793, %r792, 28;
	add.s32 	%r794, %r793, %r785;
	mul.wide.s32 	%rd69, %r794, 4;
	add.s64 	%rd70, %rd2, %rd69;
	ld.global.v4.u32 	{%r795, %r796, %r797, %r798}, [%rd70];
	or.b32  	%r799, %r784, 131072;
	add.s32 	%r800, %r41, %r799;
	shr.s32 	%r801, %r800, 31;
	shr.u32 	%r802, %r801, 4;
	add.s32 	%r803, %r800, %r802;
	shr.s32 	%r804, %r803, 28;
	setp.lt.s32 	%p291, %r800, 0;
	and.b32  	%r805, %r803, -268435456;
	setp.ne.s32 	%p292, %r805, %r800;
	and.pred  	%p293, %p291, %p292;
	selp.u32 	%r806, 1, 0, %p293;
	sub.s32 	%r807, %r806, %r804;
	shl.b32 	%r808, %r807, 28;
	add.s32 	%r809, %r808, %r800;
	mul.wide.s32 	%rd71, %r809, 4;
	add.s64 	%rd72, %rd2, %rd71;
	ld.global.v4.u32 	{%r810, %r811, %r812, %r813}, [%rd72];
	or.b32  	%r814, %r784, 1048576;
	add.s32 	%r815, %r41, %r814;
	shr.s32 	%r816, %r815, 31;
	shr.u32 	%r817, %r816, 4;
	add.s32 	%r818, %r815, %r817;
	shr.s32 	%r819, %r818, 28;
	setp.lt.s32 	%p294, %r815, 0;
	and.b32  	%r820, %r818, -268435456;
	setp.ne.s32 	%p295, %r820, %r815;
	and.pred  	%p296, %p294, %p295;
	selp.u32 	%r821, 1, 0, %p296;
	sub.s32 	%r822, %r821, %r819;
	shl.b32 	%r823, %r822, 28;
	add.s32 	%r824, %r823, %r815;
	mul.wide.s32 	%rd73, %r824, 4;
	add.s64 	%rd74, %rd2, %rd73;
	ld.global.v4.u32 	{%r825, %r826, %r827, %r828}, [%rd74];
	or.b32  	%r829, %r784, 1179648;
	add.s32 	%r830, %r41, %r829;
	shr.s32 	%r831, %r830, 31;
	shr.u32 	%r832, %r831, 4;
	add.s32 	%r833, %r830, %r832;
	shr.s32 	%r834, %r833, 28;
	setp.lt.s32 	%p297, %r830, 0;
	and.b32  	%r835, %r833, -268435456;
	setp.ne.s32 	%p298, %r835, %r830;
	and.pred  	%p299, %p297, %p298;
	selp.u32 	%r836, 1, 0, %p299;
	sub.s32 	%r837, %r836, %r834;
	shl.b32 	%r838, %r837, 28;
	add.s32 	%r839, %r838, %r830;
	mul.wide.s32 	%rd75, %r839, 4;
	add.s64 	%rd76, %rd2, %rd75;
	ld.global.v4.u32 	{%r840, %r841, %r842, %r843}, [%rd76];
	selp.b32 	%r844, %r797, %r795, %p287;
	shfl.sync.bfly.b32	%r845, %r844, 8, 31, -1;
	selp.b32 	%r717, %r795, %r845, %p287;
	selp.b32 	%r718, %r845, %r797, %p287;
	selp.b32 	%r846, %r798, %r796, %p287;
	shfl.sync.bfly.b32	%r847, %r846, 8, 31, -1;
	selp.b32 	%r725, %r796, %r847, %p287;
	selp.b32 	%r726, %r847, %r798, %p287;
	selp.b32 	%r848, %r812, %r810, %p287;
	shfl.sync.bfly.b32	%r849, %r848, 8, 31, -1;
	selp.b32 	%r733, %r810, %r849, %p287;
	selp.b32 	%r734, %r849, %r812, %p287;
	selp.b32 	%r850, %r813, %r811, %p287;
	shfl.sync.bfly.b32	%r851, %r850, 8, 31, -1;
	selp.b32 	%r741, %r811, %r851, %p287;
	selp.b32 	%r742, %r851, %r813, %p287;
	selp.b32 	%r852, %r827, %r825, %p287;
	shfl.sync.bfly.b32	%r853, %r852, 8, 31, -1;
	selp.b32 	%r749, %r825, %r853, %p287;
	selp.b32 	%r750, %r853, %r827, %p287;
	selp.b32 	%r854, %r828, %r826, %p287;
	shfl.sync.bfly.b32	%r855, %r854, 8, 31, -1;
	selp.b32 	%r757, %r826, %r855, %p287;
	selp.b32 	%r758, %r855, %r828, %p287;
	selp.b32 	%r856, %r842, %r840, %p287;
	shfl.sync.bfly.b32	%r857, %r856, 8, 31, -1;
	selp.b32 	%r765, %r840, %r857, %p287;
	selp.b32 	%r766, %r857, %r842, %p287;
	selp.b32 	%r858, %r843, %r841, %p287;
	shfl.sync.bfly.b32	%r859, %r858, 8, 31, -1;
	selp.b32 	%r773, %r841, %r859, %p287;
	selp.b32 	%r774, %r859, %r843, %p287;
	mov.u32 	%r775, 21520;
	// begin inline asm
	prmt.b32 %r716, %r717, %r718, %r775;
	// end inline asm
	mov.u32 	%r779, 30258;
	// begin inline asm
	prmt.b32 %r720, %r717, %r718, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r724, %r725, %r726, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r728, %r725, %r726, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r732, %r733, %r734, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r736, %r733, %r734, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r740, %r741, %r742, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r744, %r741, %r742, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r748, %r749, %r750, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r752, %r749, %r750, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r756, %r757, %r758, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r760, %r757, %r758, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r764, %r765, %r766, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r768, %r765, %r766, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r772, %r773, %r774, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r776, %r773, %r774, %r779;
	// end inline asm
	st.shared.u32 	[%rd10], %r716;
	st.shared.u32 	[%rd11+128], %r720;
	st.shared.u32 	[%rd11+4], %r724;
	st.shared.u32 	[%rd11+132], %r728;
	st.shared.u32 	[%rd12+520], %r732;
	st.shared.u32 	[%rd13], %r736;
	st.shared.u32 	[%rd14], %r740;
	st.shared.u32 	[%rd15], %r744;
	st.shared.u32 	[%rd12+16644], %r748;
	st.shared.u32 	[%rd16], %r752;
	st.shared.u32 	[%rd17], %r756;
	st.shared.u32 	[%rd18], %r760;
	st.shared.u32 	[%rd12+17164], %r764;
	st.shared.u32 	[%rd19], %r768;
	st.shared.u32 	[%rd20], %r772;
	st.shared.u32 	[%rd21], %r776;
	bar.sync 	0;
	or.b32  	%r169, %r44, %r16371;
	or.b32  	%r860, %r16371, %r43;
	or.b32  	%r861, %r860, %r141;
	or.b32  	%r862, %r154, %r861;
	or.b32  	%r170, %r862, 1;
	mov.u32 	%r780, 0;
	mov.u32 	%r16396, %r780;
$L__BB0_64:                             // %L13672
                                        //   Parent Loop BB0_62 Depth=1
                                        // =>  This Inner Loop Header: Depth=2
	add.s32 	%r16127, %r169, %r16396;
	bfe.s32 	%r16128, %r16127, 1, 1;
	and.b32  	%r16129, %r16128, 1040;
	bfe.s32 	%r16130, %r16127, 3, 1;
	and.b32  	%r16131, %r16130, 260;
	bfe.s32 	%r16132, %r16127, 7, 1;
	and.b32  	%r16133, %r16132, 4161;
	bfe.s32 	%r16134, %r16127, 4, 1;
	and.b32  	%r16135, %r16134, 130;
	bfe.s32 	%r16136, %r16127, 2, 1;
	and.b32  	%r16137, %r16136, 520;
	add.s32 	%r16138, %r55, %r16129;
	add.s32 	%r16139, %r16138, %r16131;
	add.s32 	%r16140, %r16139, %r16133;
	add.s32 	%r16141, %r16140, %r16135;
	add.s32 	%r16142, %r16141, %r16137;
	mul.wide.u32 	%rd77, %r16142, 4;
	add.s64 	%rd79, %rd36, %rd77;
	ld.shared.u32 	%r16143, [%rd79];
	add.s32 	%r16144, %r56, %r16129;
	add.s32 	%r16145, %r16144, %r16131;
	add.s32 	%r16146, %r16145, %r16133;
	add.s32 	%r16147, %r16146, %r16135;
	add.s32 	%r16148, %r16147, %r16137;
	mul.wide.u32 	%rd80, %r16148, 4;
	add.s64 	%rd81, %rd36, %rd80;
	ld.shared.u32 	%r16149, [%rd81];
	add.s32 	%r16150, %r57, %r16129;
	add.s32 	%r16151, %r16150, %r16131;
	add.s32 	%r16152, %r16151, %r16133;
	add.s32 	%r16153, %r16152, %r16135;
	add.s32 	%r16154, %r16153, %r16137;
	mul.wide.u32 	%rd82, %r16154, 4;
	add.s64 	%rd83, %rd36, %rd82;
	ld.shared.u32 	%r16155, [%rd83];
	add.s32 	%r16156, %r58, %r16129;
	add.s32 	%r16157, %r16156, %r16131;
	add.s32 	%r16158, %r16157, %r16133;
	add.s32 	%r16159, %r16158, %r16135;
	add.s32 	%r16160, %r16159, %r16137;
	mul.wide.u32 	%rd84, %r16160, 4;
	add.s64 	%rd85, %rd36, %rd84;
	ld.shared.u32 	%r16161, [%rd85];
	add.s32 	%r16162, %r170, %r16396;
	bfe.s32 	%r16163, %r16162, 1, 1;
	and.b32  	%r16164, %r16163, 1040;
	bfe.s32 	%r16165, %r16162, 5, 1;
	and.b32  	%r16166, %r16165, 65;
	bfe.s32 	%r16167, %r16162, 3, 1;
	and.b32  	%r16168, %r16167, 260;
	bfe.s32 	%r16169, %r16162, 7, 1;
	and.b32  	%r16170, %r16169, 4161;
	bfe.s32 	%r16171, %r16162, 4, 1;
	and.b32  	%r16172, %r16171, 130;
	bfe.s32 	%r16173, %r16162, 2, 1;
	and.b32  	%r16174, %r16173, 520;
	add.s32 	%r16175, %r59, %r16166;
	or.b32  	%r16176, %r16175, %r16164;
	add.s32 	%r16177, %r16176, %r16168;
	add.s32 	%r16178, %r16177, %r16170;
	add.s32 	%r16179, %r16178, %r16172;
	add.s32 	%r16180, %r16179, %r16174;
	mul.wide.u32 	%rd86, %r16180, 4;
	add.s64 	%rd87, %rd36, %rd86;
	ld.shared.u32 	%r16181, [%rd87];
	add.s32 	%r16182, %r60, %r16166;
	add.s32 	%r16183, %r16182, %r16164;
	add.s32 	%r16184, %r16183, %r16168;
	add.s32 	%r16185, %r16184, %r16170;
	add.s32 	%r16186, %r16185, %r16172;
	add.s32 	%r16187, %r16186, %r16174;
	mul.wide.u32 	%rd88, %r16187, 4;
	add.s64 	%rd89, %rd36, %rd88;
	ld.shared.u32 	%r16188, [%rd89];
	add.s32 	%r16189, %r61, %r16166;
	add.s32 	%r16190, %r16189, %r16164;
	add.s32 	%r16191, %r16190, %r16168;
	add.s32 	%r16192, %r16191, %r16170;
	add.s32 	%r16193, %r16192, %r16172;
	add.s32 	%r16194, %r16193, %r16174;
	mul.wide.u32 	%rd90, %r16194, 4;
	add.s64 	%rd91, %rd36, %rd90;
	ld.shared.u32 	%r16195, [%rd91];
	add.s32 	%r16196, %r62, %r16166;
	add.s32 	%r16197, %r16196, %r16164;
	add.s32 	%r16198, %r16197, %r16168;
	add.s32 	%r16199, %r16198, %r16170;
	add.s32 	%r16200, %r16199, %r16172;
	add.s32 	%r16201, %r16200, %r16174;
	mul.wide.u32 	%rd92, %r16201, 4;
	add.s64 	%rd93, %rd36, %rd92;
	ld.shared.u32 	%r16202, [%rd93];
	// begin inline asm
	mov.b32 %r868, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r879, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r867, %r16143, -2004318072;
	mov.u32 	%r866, 983055;
	// begin inline asm
	lop3.b32 %r865, %r866, %r867, %r868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r870, %r868, %r869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r873, %r865, %r870;
	// end inline asm
	mov.u32 	%r877, 15728880;
	// begin inline asm
	lop3.b32 %r876, %r877, %r867, %r879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r881, %r879, %r880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r884, %r876, %r881;
	// end inline asm
	shr.u32 	%r889, %r867, 8;
	// begin inline asm
	lop3.b32 %r887, %r866, %r889, %r868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r892, %r868, %r891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r895, %r887, %r892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r898, %r877, %r889, %r879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r903, %r879, %r902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r906, %r898, %r903;
	// end inline asm
	// begin inline asm
	mov.b32 %r914, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r925, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r913, %r16149, -2004318072;
	// begin inline asm
	lop3.b32 %r911, %r866, %r913, %r914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r916, %r914, %r915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r919, %r911, %r916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r922, %r877, %r913, %r925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r927, %r925, %r926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r930, %r922, %r927;
	// end inline asm
	shr.u32 	%r935, %r913, 8;
	// begin inline asm
	lop3.b32 %r933, %r866, %r935, %r914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r938, %r914, %r937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r941, %r933, %r938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r944, %r877, %r935, %r925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r949, %r925, %r948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r952, %r944, %r949;
	// end inline asm
	// begin inline asm
	mov.b32 %r960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r971, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r959, %r16155, -2004318072;
	// begin inline asm
	lop3.b32 %r957, %r866, %r959, %r960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r962, %r960, %r961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r965, %r957, %r962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r968, %r877, %r959, %r971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r973, %r971, %r972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r976, %r968, %r973;
	// end inline asm
	shr.u32 	%r981, %r959, 8;
	// begin inline asm
	lop3.b32 %r979, %r866, %r981, %r960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r984, %r960, %r983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r987, %r979, %r984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r990, %r877, %r981, %r971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r995, %r971, %r994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r998, %r990, %r995;
	// end inline asm
	// begin inline asm
	mov.b32 %r1006, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1017, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1005, %r16161, -2004318072;
	// begin inline asm
	lop3.b32 %r1003, %r866, %r1005, %r1006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1008, %r1006, %r1007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1011, %r1003, %r1008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1014, %r877, %r1005, %r1017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1019, %r1017, %r1018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1022, %r1014, %r1019;
	// end inline asm
	shr.u32 	%r1027, %r1005, 8;
	// begin inline asm
	lop3.b32 %r1025, %r866, %r1027, %r1006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1030, %r1006, %r1029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1033, %r1025, %r1030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1036, %r877, %r1027, %r1017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1041, %r1017, %r1040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1044, %r1036, %r1041;
	// end inline asm
	// begin inline asm
	mov.b32 %r1052, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1063, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1051, %r16181, -2004318072;
	// begin inline asm
	lop3.b32 %r1049, %r866, %r1051, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1054, %r1052, %r1053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1057, %r1049, %r1054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1060, %r877, %r1051, %r1063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1065, %r1063, %r1064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1068, %r1060, %r1065;
	// end inline asm
	shr.u32 	%r1073, %r1051, 8;
	// begin inline asm
	lop3.b32 %r1071, %r866, %r1073, %r1052, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1076, %r1052, %r1075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1079, %r1071, %r1076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1082, %r877, %r1073, %r1063, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1087, %r1063, %r1086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1090, %r1082, %r1087;
	// end inline asm
	// begin inline asm
	mov.b32 %r1098, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1109, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1097, %r16188, -2004318072;
	// begin inline asm
	lop3.b32 %r1095, %r866, %r1097, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1100, %r1098, %r1099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1103, %r1095, %r1100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1106, %r877, %r1097, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1111, %r1109, %r1110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1114, %r1106, %r1111;
	// end inline asm
	shr.u32 	%r1119, %r1097, 8;
	// begin inline asm
	lop3.b32 %r1117, %r866, %r1119, %r1098, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1122, %r1098, %r1121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1125, %r1117, %r1122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1128, %r877, %r1119, %r1109, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1133, %r1109, %r1132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1136, %r1128, %r1133;
	// end inline asm
	// begin inline asm
	mov.b32 %r1144, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1155, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1143, %r16195, -2004318072;
	// begin inline asm
	lop3.b32 %r1141, %r866, %r1143, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1146, %r1144, %r1145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1149, %r1141, %r1146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1152, %r877, %r1143, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1157, %r1155, %r1156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1160, %r1152, %r1157;
	// end inline asm
	shr.u32 	%r1165, %r1143, 8;
	// begin inline asm
	lop3.b32 %r1163, %r866, %r1165, %r1144, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1168, %r1144, %r1167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1171, %r1163, %r1168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1174, %r877, %r1165, %r1155, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1179, %r1155, %r1178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1182, %r1174, %r1179;
	// end inline asm
	// begin inline asm
	mov.b32 %r1190, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1201, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1189, %r16202, -2004318072;
	// begin inline asm
	lop3.b32 %r1187, %r866, %r1189, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1192, %r1190, %r1191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1195, %r1187, %r1192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1198, %r877, %r1189, %r1201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1203, %r1201, %r1202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1206, %r1198, %r1203;
	// end inline asm
	shr.u32 	%r1211, %r1189, 8;
	// begin inline asm
	lop3.b32 %r1209, %r866, %r1211, %r1190, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1214, %r1190, %r1213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1217, %r1209, %r1214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1220, %r877, %r1211, %r1201, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1225, %r1201, %r1224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1228, %r1220, %r1225;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1231, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1233, %r1231, %r873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1236, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1238, %r1236, %r884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1241, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1243, %r1241, %r895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1246, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1248, %r1246, %r906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1251, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1253, %r1251, %r919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1256, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1258, %r1256, %r930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1261, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1263, %r1261, %r941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1266, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1268, %r1266, %r952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1271, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1273, %r1271, %r965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1276, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1278, %r1276, %r976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1281, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1283, %r1281, %r987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1286, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1288, %r1286, %r998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1291, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1293, %r1291, %r1011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1296, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1298, %r1296, %r1022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1301, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1303, %r1301, %r1033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1306, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1308, %r1306, %r1044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1311, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1313, %r1311, %r1057;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1316, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1318, %r1316, %r1068;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1321, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1323, %r1321, %r1079;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1326, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1328, %r1326, %r1090;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1331, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1333, %r1331, %r1103;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1336, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1338, %r1336, %r1114;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1341, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1343, %r1341, %r1125;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1346, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1348, %r1346, %r1136;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1351, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1353, %r1351, %r1149;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1356, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1358, %r1356, %r1160;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1361, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1363, %r1361, %r1171;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1366, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1368, %r1366, %r1182;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1371, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1373, %r1371, %r1195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1376, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1378, %r1376, %r1206;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1381, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1383, %r1381, %r1217;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r1386, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r1388, %r1386, %r1228;
	// end inline asm
	// begin inline asm
	mov.b32 %r1396, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1407, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1395, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r1393, %r866, %r1395, %r1396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1398, %r1396, %r1397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1401, %r1393, %r1398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1404, %r877, %r1395, %r1407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1409, %r1407, %r1408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1412, %r1404, %r1409;
	// end inline asm
	shr.u32 	%r1417, %r1395, 8;
	// begin inline asm
	lop3.b32 %r1415, %r866, %r1417, %r1396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1420, %r1396, %r1419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1423, %r1415, %r1420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1426, %r877, %r1417, %r1407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1431, %r1407, %r1430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1434, %r1426, %r1431;
	// end inline asm
	// begin inline asm
	mov.b32 %r1442, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1453, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1441, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r1439, %r866, %r1441, %r1442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1444, %r1442, %r1443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1447, %r1439, %r1444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1450, %r877, %r1441, %r1453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1455, %r1453, %r1454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1458, %r1450, %r1455;
	// end inline asm
	shr.u32 	%r1463, %r1441, 8;
	// begin inline asm
	lop3.b32 %r1461, %r866, %r1463, %r1442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1466, %r1442, %r1465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1469, %r1461, %r1466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1472, %r877, %r1463, %r1453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1477, %r1453, %r1476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1480, %r1472, %r1477;
	// end inline asm
	// begin inline asm
	mov.b32 %r1488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1499, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1487, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r1485, %r866, %r1487, %r1488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1490, %r1488, %r1489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1493, %r1485, %r1490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1496, %r877, %r1487, %r1499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1501, %r1499, %r1500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1504, %r1496, %r1501;
	// end inline asm
	shr.u32 	%r1509, %r1487, 8;
	// begin inline asm
	lop3.b32 %r1507, %r866, %r1509, %r1488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1512, %r1488, %r1511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1515, %r1507, %r1512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1518, %r877, %r1509, %r1499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1523, %r1499, %r1522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1526, %r1518, %r1523;
	// end inline asm
	// begin inline asm
	mov.b32 %r1534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1545, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1533, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r1531, %r866, %r1533, %r1534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1536, %r1534, %r1535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1539, %r1531, %r1536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1542, %r877, %r1533, %r1545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1547, %r1545, %r1546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1550, %r1542, %r1547;
	// end inline asm
	shr.u32 	%r1555, %r1533, 8;
	// begin inline asm
	lop3.b32 %r1553, %r866, %r1555, %r1534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1558, %r1534, %r1557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1561, %r1553, %r1558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1564, %r877, %r1555, %r1545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1569, %r1545, %r1568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1572, %r1564, %r1569;
	// end inline asm
	// begin inline asm
	mov.b32 %r1580, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1591, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1579, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r1577, %r866, %r1579, %r1580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1581, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1582, %r1580, %r1581;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1585, %r1577, %r1582;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1588, %r877, %r1579, %r1591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1592, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1593, %r1591, %r1592;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1596, %r1588, %r1593;
	// end inline asm
	shr.u32 	%r1601, %r1579, 8;
	// begin inline asm
	lop3.b32 %r1599, %r866, %r1601, %r1580, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1603, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1604, %r1580, %r1603;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1607, %r1599, %r1604;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1610, %r877, %r1601, %r1591, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1614, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1615, %r1591, %r1614;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1618, %r1610, %r1615;
	// end inline asm
	// begin inline asm
	mov.b32 %r1626, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1637, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1625, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r1623, %r866, %r1625, %r1626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1627, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1628, %r1626, %r1627;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1631, %r1623, %r1628;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1634, %r877, %r1625, %r1637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1638, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1639, %r1637, %r1638;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1642, %r1634, %r1639;
	// end inline asm
	shr.u32 	%r1647, %r1625, 8;
	// begin inline asm
	lop3.b32 %r1645, %r866, %r1647, %r1626, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1649, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1650, %r1626, %r1649;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1653, %r1645, %r1650;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1656, %r877, %r1647, %r1637, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1661, %r1637, %r1660;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1664, %r1656, %r1661;
	// end inline asm
	// begin inline asm
	mov.b32 %r1672, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1683, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1671, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r1669, %r866, %r1671, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1673, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1674, %r1672, %r1673;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1677, %r1669, %r1674;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1680, %r877, %r1671, %r1683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1684, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1685, %r1683, %r1684;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1688, %r1680, %r1685;
	// end inline asm
	shr.u32 	%r1693, %r1671, 8;
	// begin inline asm
	lop3.b32 %r1691, %r866, %r1693, %r1672, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1695, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1696, %r1672, %r1695;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1699, %r1691, %r1696;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1702, %r877, %r1693, %r1683, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1706, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1707, %r1683, %r1706;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1710, %r1702, %r1707;
	// end inline asm
	// begin inline asm
	mov.b32 %r1718, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1729, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1717, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r1715, %r866, %r1717, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1719, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1720, %r1718, %r1719;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1723, %r1715, %r1720;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1726, %r877, %r1717, %r1729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1730, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1731, %r1729, %r1730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1734, %r1726, %r1731;
	// end inline asm
	shr.u32 	%r1739, %r1717, 8;
	// begin inline asm
	lop3.b32 %r1737, %r866, %r1739, %r1718, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1741, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1742, %r1718, %r1741;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1745, %r1737, %r1742;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1748, %r877, %r1739, %r1729, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1752, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1753, %r1729, %r1752;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1756, %r1748, %r1753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1759, %r254, %r1401, %r1233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1763, %r254, %r1412, %r1238;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1767, %r254, %r1423, %r1243;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1771, %r254, %r1434, %r1248;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1775, %r254, %r1447, %r1253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1779, %r254, %r1458, %r1258;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1783, %r254, %r1469, %r1263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1787, %r254, %r1480, %r1268;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1791, %r254, %r1493, %r1273;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1795, %r254, %r1504, %r1278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1799, %r254, %r1515, %r1283;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1803, %r254, %r1526, %r1288;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1807, %r254, %r1539, %r1293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1811, %r254, %r1550, %r1298;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1815, %r254, %r1561, %r1303;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1819, %r254, %r1572, %r1308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1823, %r285, %r1585, %r1313;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1827, %r285, %r1596, %r1318;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1831, %r285, %r1607, %r1323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1835, %r285, %r1618, %r1328;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1839, %r285, %r1631, %r1333;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1843, %r285, %r1642, %r1338;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1847, %r285, %r1653, %r1343;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1851, %r285, %r1664, %r1348;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1855, %r285, %r1677, %r1353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1859, %r285, %r1688, %r1358;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1863, %r285, %r1699, %r1363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1867, %r285, %r1710, %r1368;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1871, %r285, %r1723, %r1373;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1875, %r285, %r1734, %r1378;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1879, %r285, %r1745, %r1383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r1883, %r285, %r1756, %r1388;
	// end inline asm
	// begin inline asm
	mov.b32 %r1892, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1903, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1891, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r1889, %r866, %r1891, %r1892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1894, %r1892, %r1893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1897, %r1889, %r1894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1900, %r877, %r1891, %r1903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1905, %r1903, %r1904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1908, %r1900, %r1905;
	// end inline asm
	shr.u32 	%r1913, %r1891, 8;
	// begin inline asm
	lop3.b32 %r1911, %r866, %r1913, %r1892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1916, %r1892, %r1915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1919, %r1911, %r1916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1922, %r877, %r1913, %r1903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1927, %r1903, %r1926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1930, %r1922, %r1927;
	// end inline asm
	// begin inline asm
	mov.b32 %r1938, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1949, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1937, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r1935, %r866, %r1937, %r1938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1940, %r1938, %r1939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1943, %r1935, %r1940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1946, %r877, %r1937, %r1949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1951, %r1949, %r1950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1954, %r1946, %r1951;
	// end inline asm
	shr.u32 	%r1959, %r1937, 8;
	// begin inline asm
	lop3.b32 %r1957, %r866, %r1959, %r1938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1962, %r1938, %r1961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1965, %r1957, %r1962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1968, %r877, %r1959, %r1949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1973, %r1949, %r1972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1976, %r1968, %r1973;
	// end inline asm
	// begin inline asm
	mov.b32 %r1984, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r1995, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r1983, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r1981, %r866, %r1983, %r1984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1986, %r1984, %r1985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r1989, %r1981, %r1986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r1992, %r877, %r1983, %r1995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r1996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r1997, %r1995, %r1996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2000, %r1992, %r1997;
	// end inline asm
	shr.u32 	%r2005, %r1983, 8;
	// begin inline asm
	lop3.b32 %r2003, %r866, %r2005, %r1984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2008, %r1984, %r2007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2011, %r2003, %r2008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2014, %r877, %r2005, %r1995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2019, %r1995, %r2018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2022, %r2014, %r2019;
	// end inline asm
	// begin inline asm
	mov.b32 %r2030, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2041, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2029, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r2027, %r866, %r2029, %r2030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2032, %r2030, %r2031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2035, %r2027, %r2032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2038, %r877, %r2029, %r2041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2043, %r2041, %r2042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2046, %r2038, %r2043;
	// end inline asm
	shr.u32 	%r2051, %r2029, 8;
	// begin inline asm
	lop3.b32 %r2049, %r866, %r2051, %r2030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2054, %r2030, %r2053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2057, %r2049, %r2054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2060, %r877, %r2051, %r2041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2065, %r2041, %r2064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2068, %r2060, %r2065;
	// end inline asm
	// begin inline asm
	mov.b32 %r2076, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2087, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2075, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r2073, %r866, %r2075, %r2076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2077, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2078, %r2076, %r2077;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2081, %r2073, %r2078;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2084, %r877, %r2075, %r2087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2088, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2089, %r2087, %r2088;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2092, %r2084, %r2089;
	// end inline asm
	shr.u32 	%r2097, %r2075, 8;
	// begin inline asm
	lop3.b32 %r2095, %r866, %r2097, %r2076, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2099, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2100, %r2076, %r2099;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2103, %r2095, %r2100;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2106, %r877, %r2097, %r2087, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2110, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2111, %r2087, %r2110;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2114, %r2106, %r2111;
	// end inline asm
	// begin inline asm
	mov.b32 %r2122, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2133, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2121, %r16364, -2004318072;
	// begin inline asm
	lop3.b32 %r2119, %r866, %r2121, %r2122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2123, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2124, %r2122, %r2123;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2127, %r2119, %r2124;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2130, %r877, %r2121, %r2133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2134, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2135, %r2133, %r2134;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2138, %r2130, %r2135;
	// end inline asm
	shr.u32 	%r2143, %r2121, 8;
	// begin inline asm
	lop3.b32 %r2141, %r866, %r2143, %r2122, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2145, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2146, %r2122, %r2145;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2149, %r2141, %r2146;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2152, %r877, %r2143, %r2133, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2156, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2157, %r2133, %r2156;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2160, %r2152, %r2157;
	// end inline asm
	// begin inline asm
	mov.b32 %r2168, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2179, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2167, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r2165, %r866, %r2167, %r2168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2170, %r2168, %r2169;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2173, %r2165, %r2170;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2176, %r877, %r2167, %r2179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2180, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2181, %r2179, %r2180;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2184, %r2176, %r2181;
	// end inline asm
	shr.u32 	%r2189, %r2167, 8;
	// begin inline asm
	lop3.b32 %r2187, %r866, %r2189, %r2168, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2191, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2192, %r2168, %r2191;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2195, %r2187, %r2192;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2198, %r877, %r2189, %r2179, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2202, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2203, %r2179, %r2202;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2206, %r2198, %r2203;
	// end inline asm
	// begin inline asm
	mov.b32 %r2214, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2225, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2213, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r2211, %r866, %r2213, %r2214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2215, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2216, %r2214, %r2215;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2219, %r2211, %r2216;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2222, %r877, %r2213, %r2225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2226, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2227, %r2225, %r2226;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2230, %r2222, %r2227;
	// end inline asm
	shr.u32 	%r2235, %r2213, 8;
	// begin inline asm
	lop3.b32 %r2233, %r866, %r2235, %r2214, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2238, %r2214, %r2237;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2241, %r2233, %r2238;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2244, %r877, %r2235, %r2225, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2248, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2249, %r2225, %r2248;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2252, %r2244, %r2249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2255, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2257, %r2255, %r1897, %r1759;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2261, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2263, %r2261, %r1908, %r1763;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2267, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2269, %r2267, %r1919, %r1767;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2273, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2275, %r2273, %r1930, %r1771;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2279, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2281, %r2279, %r1943, %r1775;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2285, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2287, %r2285, %r1954, %r1779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2291, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2293, %r2291, %r1965, %r1783;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2297, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2299, %r2297, %r1976, %r1787;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2303, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2305, %r2303, %r1989, %r1791;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2309, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2311, %r2309, %r2000, %r1795;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2315, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2317, %r2315, %r2011, %r1799;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2321, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2323, %r2321, %r2022, %r1803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2327, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2329, %r2327, %r2035, %r1807;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2333, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2335, %r2333, %r2046, %r1811;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2339, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2341, %r2339, %r2057, %r1815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2345, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2347, %r2345, %r2068, %r1819;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2351, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2353, %r2351, %r2081, %r1823;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2357, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2359, %r2357, %r2092, %r1827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2363, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2365, %r2363, %r2103, %r1831;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2369, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2371, %r2369, %r2114, %r1835;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2375, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2377, %r2375, %r2127, %r1839;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2381, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2383, %r2381, %r2138, %r1843;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2387, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2389, %r2387, %r2149, %r1847;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2393, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2395, %r2393, %r2160, %r1851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2399, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2401, %r2399, %r2173, %r1855;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2405, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2407, %r2405, %r2184, %r1859;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2411, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2413, %r2411, %r2195, %r1863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2417, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2419, %r2417, %r2206, %r1867;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2423, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2425, %r2423, %r2219, %r1871;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2429, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2431, %r2429, %r2230, %r1875;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2435, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2437, %r2435, %r2241, %r1879;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2441, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2443, %r2441, %r2252, %r1883;
	// end inline asm
	// begin inline asm
	mov.b32 %r2452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2463, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2451, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r2449, %r866, %r2451, %r2452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2454, %r2452, %r2453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2457, %r2449, %r2454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2460, %r877, %r2451, %r2463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2465, %r2463, %r2464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2468, %r2460, %r2465;
	// end inline asm
	shr.u32 	%r2473, %r2451, 8;
	// begin inline asm
	lop3.b32 %r2471, %r866, %r2473, %r2452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2476, %r2452, %r2475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2479, %r2471, %r2476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2482, %r877, %r2473, %r2463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2487, %r2463, %r2486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2490, %r2482, %r2487;
	// end inline asm
	// begin inline asm
	mov.b32 %r2498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2509, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2497, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r2495, %r866, %r2497, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2500, %r2498, %r2499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2503, %r2495, %r2500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2506, %r877, %r2497, %r2509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2511, %r2509, %r2510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2514, %r2506, %r2511;
	// end inline asm
	shr.u32 	%r2519, %r2497, 8;
	// begin inline asm
	lop3.b32 %r2517, %r866, %r2519, %r2498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2522, %r2498, %r2521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2525, %r2517, %r2522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2528, %r877, %r2519, %r2509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2533, %r2509, %r2532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2536, %r2528, %r2533;
	// end inline asm
	// begin inline asm
	mov.b32 %r2544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2555, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2543, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r2541, %r866, %r2543, %r2544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2546, %r2544, %r2545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2549, %r2541, %r2546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2552, %r877, %r2543, %r2555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2557, %r2555, %r2556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2560, %r2552, %r2557;
	// end inline asm
	shr.u32 	%r2565, %r2543, 8;
	// begin inline asm
	lop3.b32 %r2563, %r866, %r2565, %r2544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2568, %r2544, %r2567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2571, %r2563, %r2568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2574, %r877, %r2565, %r2555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2579, %r2555, %r2578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2582, %r2574, %r2579;
	// end inline asm
	// begin inline asm
	mov.b32 %r2590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2601, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2589, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r2587, %r866, %r2589, %r2590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2592, %r2590, %r2591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2595, %r2587, %r2592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2598, %r877, %r2589, %r2601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2603, %r2601, %r2602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2606, %r2598, %r2603;
	// end inline asm
	shr.u32 	%r2611, %r2589, 8;
	// begin inline asm
	lop3.b32 %r2609, %r866, %r2611, %r2590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2614, %r2590, %r2613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2617, %r2609, %r2614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2620, %r877, %r2611, %r2601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2625, %r2601, %r2624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2628, %r2620, %r2625;
	// end inline asm
	// begin inline asm
	mov.b32 %r2636, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2647, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2635, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r2633, %r866, %r2635, %r2636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2637, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2638, %r2636, %r2637;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2641, %r2633, %r2638;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2644, %r877, %r2635, %r2647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2648, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2649, %r2647, %r2648;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2652, %r2644, %r2649;
	// end inline asm
	shr.u32 	%r2657, %r2635, 8;
	// begin inline asm
	lop3.b32 %r2655, %r866, %r2657, %r2636, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2659, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2660, %r2636, %r2659;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2663, %r2655, %r2660;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2666, %r877, %r2657, %r2647, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2670, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2671, %r2647, %r2670;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2674, %r2666, %r2671;
	// end inline asm
	// begin inline asm
	mov.b32 %r2682, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2693, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2681, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r2679, %r866, %r2681, %r2682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2683, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2684, %r2682, %r2683;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2687, %r2679, %r2684;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2690, %r877, %r2681, %r2693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2694, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2695, %r2693, %r2694;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2698, %r2690, %r2695;
	// end inline asm
	shr.u32 	%r2703, %r2681, 8;
	// begin inline asm
	lop3.b32 %r2701, %r866, %r2703, %r2682, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2705, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2706, %r2682, %r2705;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2709, %r2701, %r2706;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2712, %r877, %r2703, %r2693, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2716, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2717, %r2693, %r2716;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2720, %r2712, %r2717;
	// end inline asm
	// begin inline asm
	mov.b32 %r2728, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2739, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2727, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r2725, %r866, %r2727, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2729, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2730, %r2728, %r2729;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2733, %r2725, %r2730;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2736, %r877, %r2727, %r2739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2740, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2741, %r2739, %r2740;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2744, %r2736, %r2741;
	// end inline asm
	shr.u32 	%r2749, %r2727, 8;
	// begin inline asm
	lop3.b32 %r2747, %r866, %r2749, %r2728, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2751, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2752, %r2728, %r2751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2755, %r2747, %r2752;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2758, %r877, %r2749, %r2739, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2762, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2763, %r2739, %r2762;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2766, %r2758, %r2763;
	// end inline asm
	// begin inline asm
	mov.b32 %r2774, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r2785, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r2773, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r2771, %r866, %r2773, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2775, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2776, %r2774, %r2775;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2779, %r2771, %r2776;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2782, %r877, %r2773, %r2785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2786, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2787, %r2785, %r2786;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2790, %r2782, %r2787;
	// end inline asm
	shr.u32 	%r2795, %r2773, 8;
	// begin inline asm
	lop3.b32 %r2793, %r866, %r2795, %r2774, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2797, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2798, %r2774, %r2797;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2801, %r2793, %r2798;
	// end inline asm
	// begin inline asm
	lop3.b32 %r2804, %r877, %r2795, %r2785, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r2808, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r2809, %r2785, %r2808;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r2812, %r2804, %r2809;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2950, %r378, %r2457, %r2257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2947, %r378, %r2468, %r2263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2959, %r378, %r2479, %r2269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2956, %r378, %r2490, %r2275;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2968, %r378, %r2503, %r2281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2965, %r378, %r2514, %r2287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2977, %r378, %r2525, %r2293;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2974, %r378, %r2536, %r2299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2986, %r378, %r2549, %r2305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2983, %r378, %r2560, %r2311;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2995, %r378, %r2571, %r2317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2992, %r378, %r2582, %r2323;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3004, %r378, %r2595, %r2329;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3001, %r378, %r2606, %r2335;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3013, %r378, %r2617, %r2341;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3010, %r378, %r2628, %r2347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3022, %r409, %r2641, %r2353;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3019, %r409, %r2652, %r2359;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3031, %r409, %r2663, %r2365;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3028, %r409, %r2674, %r2371;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3040, %r409, %r2687, %r2377;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3037, %r409, %r2698, %r2383;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3049, %r409, %r2709, %r2389;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3046, %r409, %r2720, %r2395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3058, %r409, %r2733, %r2401;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3055, %r409, %r2744, %r2407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3067, %r409, %r2755, %r2413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3064, %r409, %r2766, %r2419;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3076, %r409, %r2779, %r2425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3073, %r409, %r2790, %r2431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3085, %r409, %r2801, %r2437;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3082, %r409, %r2812, %r2443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2943, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2945, %r2943, %r2947;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2948, %r474, %r2950, %r2945;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2952, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2954, %r2952, %r2956;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2957, %r474, %r2959, %r2954;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2961, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2963, %r2961, %r2965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2966, %r474, %r2968, %r2963;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2970, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2972, %r2970, %r2974;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2975, %r474, %r2977, %r2972;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2979, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2981, %r2979, %r2983;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2984, %r474, %r2986, %r2981;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2988, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2990, %r2988, %r2992;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r2993, %r474, %r2995, %r2990;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r2997, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r2999, %r2997, %r3001;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3002, %r474, %r3004, %r2999;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3006, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3008, %r3006, %r3010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3011, %r474, %r3013, %r3008;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3015, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3017, %r3015, %r3019;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3020, %r477, %r3022, %r3017;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3024, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3026, %r3024, %r3028;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3029, %r477, %r3031, %r3026;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3033, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3035, %r3033, %r3037;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3038, %r477, %r3040, %r3035;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3042, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3044, %r3042, %r3046;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3047, %r477, %r3049, %r3044;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3051, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3053, %r3051, %r3055;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3056, %r477, %r3058, %r3053;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3060, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3062, %r3060, %r3064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3065, %r477, %r3067, %r3062;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3069, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3071, %r3069, %r3073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3074, %r477, %r3076, %r3071;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3078, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3080, %r3078, %r3082;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3083, %r477, %r3085, %r3080;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3087, %r480, %r2950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3090, %r474, %r2947, %r3087;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3094, %r480, %r2959;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3097, %r474, %r2956, %r3094;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3101, %r480, %r2968;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3104, %r474, %r2965, %r3101;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3108, %r480, %r2977;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3111, %r474, %r2974, %r3108;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3115, %r480, %r2986;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3118, %r474, %r2983, %r3115;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3122, %r480, %r2995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3125, %r474, %r2992, %r3122;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3129, %r480, %r3004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3132, %r474, %r3001, %r3129;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3136, %r480, %r3013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3139, %r474, %r3010, %r3136;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3143, %r483, %r3022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3146, %r477, %r3019, %r3143;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3150, %r483, %r3031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3153, %r477, %r3028, %r3150;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3157, %r483, %r3040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3160, %r477, %r3037, %r3157;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3164, %r483, %r3049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3167, %r477, %r3046, %r3164;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3171, %r483, %r3058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3174, %r477, %r3055, %r3171;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3178, %r483, %r3067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3181, %r477, %r3064, %r3178;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3185, %r483, %r3076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3188, %r477, %r3073, %r3185;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3192, %r483, %r3085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3195, %r477, %r3082, %r3192;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3366, %r3363}, {%r486, %r492, %r489, %r495}, {%r2948, %r3090}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3375, %r3372}, {%r486, %r492, %r489, %r495}, {%r2957, %r3097}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3384, %r3381}, {%r486, %r492, %r489, %r495}, {%r2966, %r3104}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3393, %r3390}, {%r486, %r492, %r489, %r495}, {%r2975, %r3111}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3402, %r3399}, {%r486, %r492, %r489, %r495}, {%r2984, %r3118}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3411, %r3408}, {%r486, %r492, %r489, %r495}, {%r2993, %r3125}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3420, %r3417}, {%r486, %r492, %r489, %r495}, {%r3002, %r3132}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3429, %r3426}, {%r486, %r492, %r489, %r495}, {%r3011, %r3139}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3438, %r3435}, {%r486, %r492, %r489, %r495}, {%r3020, %r3146}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3447, %r3444}, {%r486, %r492, %r489, %r495}, {%r3029, %r3153}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3456, %r3453}, {%r486, %r492, %r489, %r495}, {%r3038, %r3160}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3465, %r3462}, {%r486, %r492, %r489, %r495}, {%r3047, %r3167}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3474, %r3471}, {%r486, %r492, %r489, %r495}, {%r3056, %r3174}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3483, %r3480}, {%r486, %r492, %r489, %r495}, {%r3065, %r3181}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3492, %r3489}, {%r486, %r492, %r489, %r495}, {%r3074, %r3188}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3501, %r3498}, {%r486, %r492, %r489, %r495}, {%r3083, %r3195}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3359, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3361, %r3359, %r3363;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3364, %r498, %r3366, %r3361;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3368, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3370, %r3368, %r3372;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3373, %r498, %r3375, %r3370;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3377, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3379, %r3377, %r3381;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3382, %r498, %r3384, %r3379;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3386, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3388, %r3386, %r3390;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3391, %r498, %r3393, %r3388;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3395, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3397, %r3395, %r3399;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3400, %r498, %r3402, %r3397;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3404, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3406, %r3404, %r3408;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3409, %r498, %r3411, %r3406;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3413, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3415, %r3413, %r3417;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3418, %r498, %r3420, %r3415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3422, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3424, %r3422, %r3426;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3427, %r498, %r3429, %r3424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3431, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3433, %r3431, %r3435;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3436, %r498, %r3438, %r3433;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3440, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3442, %r3440, %r3444;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3445, %r498, %r3447, %r3442;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3449, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3451, %r3449, %r3453;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3454, %r498, %r3456, %r3451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3458, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3460, %r3458, %r3462;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3463, %r498, %r3465, %r3460;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3467, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3469, %r3467, %r3471;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3472, %r498, %r3474, %r3469;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3476, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3478, %r3476, %r3480;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3481, %r498, %r3483, %r3478;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3485, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3487, %r3485, %r3489;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3490, %r498, %r3492, %r3487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r3494, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3496, %r3494, %r3498;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3499, %r498, %r3501, %r3496;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3503, %r501, %r3366;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3506, %r498, %r3363, %r3503;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3510, %r501, %r3375;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3513, %r498, %r3372, %r3510;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3517, %r501, %r3384;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3520, %r498, %r3381, %r3517;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3524, %r501, %r3393;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3527, %r498, %r3390, %r3524;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3531, %r501, %r3402;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3534, %r498, %r3399, %r3531;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3538, %r501, %r3411;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3541, %r498, %r3408, %r3538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3545, %r501, %r3420;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3548, %r498, %r3417, %r3545;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3552, %r501, %r3429;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3555, %r498, %r3426, %r3552;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3559, %r501, %r3438;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3562, %r498, %r3435, %r3559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3566, %r501, %r3447;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3569, %r498, %r3444, %r3566;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3573, %r501, %r3456;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3576, %r498, %r3453, %r3573;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3580, %r501, %r3465;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3583, %r498, %r3462, %r3580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3587, %r501, %r3474;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3590, %r498, %r3471, %r3587;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3594, %r501, %r3483;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3597, %r498, %r3480, %r3594;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3601, %r501, %r3492;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3604, %r498, %r3489, %r3601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3608, %r501, %r3501;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r3611, %r498, %r3498, %r3608;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3904, %r3907}, {%r504, %r510, %r507, %r513}, {%r3364, %r3506}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3910, %r3913}, {%r504, %r510, %r507, %r513}, {%r3373, %r3513}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3916, %r3919}, {%r504, %r510, %r507, %r513}, {%r3382, %r3520}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3922, %r3925}, {%r504, %r510, %r507, %r513}, {%r3391, %r3527}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3928, %r3931}, {%r504, %r510, %r507, %r513}, {%r3400, %r3534}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3934, %r3937}, {%r504, %r510, %r507, %r513}, {%r3409, %r3541}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3940, %r3943}, {%r504, %r510, %r507, %r513}, {%r3418, %r3548}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3946, %r3949}, {%r504, %r510, %r507, %r513}, {%r3427, %r3555}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3905, %r3908}, {%r504, %r510, %r507, %r513}, {%r3436, %r3562}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3911, %r3914}, {%r504, %r510, %r507, %r513}, {%r3445, %r3569}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3917, %r3920}, {%r504, %r510, %r507, %r513}, {%r3454, %r3576}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3923, %r3926}, {%r504, %r510, %r507, %r513}, {%r3463, %r3583}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3929, %r3932}, {%r504, %r510, %r507, %r513}, {%r3472, %r3590}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3935, %r3938}, {%r504, %r510, %r507, %r513}, {%r3481, %r3597}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3941, %r3944}, {%r504, %r510, %r507, %r513}, {%r3490, %r3604}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r3947, %r3950}, {%r504, %r510, %r507, %r513}, {%r3499, %r3611}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3903, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3906, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3909, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3912, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3915, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3918, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3921, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3924, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3927, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3930, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3933, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3936, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3939, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3942, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3945, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r3948, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3951, %r3904, %r3905;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3954, %r3907, %r3908;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3957, %r3910, %r3911;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3960, %r3913, %r3914;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3963, %r3916, %r3917;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3966, %r3919, %r3920;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3969, %r3922, %r3923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3972, %r3925, %r3926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3975, %r3928, %r3929;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3978, %r3931, %r3932;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3981, %r3934, %r3935;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3984, %r3937, %r3938;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3987, %r3940, %r3941;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3990, %r3943, %r3944;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3993, %r3946, %r3947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r3996, %r3949, %r3950;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r3999, %r148, %r3903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4002, %r148, %r3906;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4005, %r148, %r3909;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4008, %r148, %r3912;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4011, %r148, %r3915;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4014, %r148, %r3918;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4017, %r148, %r3921;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4020, %r148, %r3924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4023, %r148, %r3927;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4026, %r148, %r3930;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4029, %r148, %r3933;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4032, %r148, %r3936;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4035, %r148, %r3939;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4038, %r148, %r3942;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4041, %r148, %r3945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4044, %r148, %r3948;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4047, %r150, %r3951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4050, %r150, %r3954;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4053, %r150, %r3957;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4056, %r150, %r3960;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4059, %r150, %r3963;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4062, %r150, %r3966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4065, %r150, %r3969;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4068, %r150, %r3972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4071, %r150, %r3975;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4074, %r150, %r3978;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4077, %r150, %r3981;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4080, %r150, %r3984;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4083, %r150, %r3987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4086, %r150, %r3990;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4089, %r150, %r3993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r4092, %r150, %r3996;
	// end inline asm
	// begin inline asm
	mov.b32 %r4095, {%rs2307, %rs2307};
	// end inline asm
	mov.u16 	%rs408, 18176;
	// begin inline asm
	mov.b32 %r4096, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4097, %r3999, %r4095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4100, %r4097, %r4096;
	// end inline asm
	// begin inline asm
	mov.b32 %r4103, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4104, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4105, %r4002, %r4103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4108, %r4105, %r4104;
	// end inline asm
	// begin inline asm
	mov.b32 %r4111, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4112, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4113, %r4005, %r4111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4116, %r4113, %r4112;
	// end inline asm
	// begin inline asm
	mov.b32 %r4119, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4120, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4121, %r4008, %r4119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4124, %r4121, %r4120;
	// end inline asm
	// begin inline asm
	mov.b32 %r4127, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4128, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4129, %r4011, %r4127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4132, %r4129, %r4128;
	// end inline asm
	// begin inline asm
	mov.b32 %r4135, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4136, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4137, %r4014, %r4135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4140, %r4137, %r4136;
	// end inline asm
	// begin inline asm
	mov.b32 %r4143, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4144, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4145, %r4017, %r4143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4148, %r4145, %r4144;
	// end inline asm
	// begin inline asm
	mov.b32 %r4151, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4152, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4153, %r4020, %r4151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4156, %r4153, %r4152;
	// end inline asm
	// begin inline asm
	mov.b32 %r4159, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4160, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4161, %r4023, %r4159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4164, %r4161, %r4160;
	// end inline asm
	// begin inline asm
	mov.b32 %r4167, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4168, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4169, %r4026, %r4167;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4172, %r4169, %r4168;
	// end inline asm
	// begin inline asm
	mov.b32 %r4175, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4176, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4177, %r4029, %r4175;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4180, %r4177, %r4176;
	// end inline asm
	// begin inline asm
	mov.b32 %r4183, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4184, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4185, %r4032, %r4183;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4188, %r4185, %r4184;
	// end inline asm
	// begin inline asm
	mov.b32 %r4191, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4192, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4193, %r4035, %r4191;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4196, %r4193, %r4192;
	// end inline asm
	// begin inline asm
	mov.b32 %r4199, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4200, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4201, %r4038, %r4199;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4204, %r4201, %r4200;
	// end inline asm
	// begin inline asm
	mov.b32 %r4207, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4208, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4209, %r4041, %r4207;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4212, %r4209, %r4208;
	// end inline asm
	// begin inline asm
	mov.b32 %r4215, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4216, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4217, %r4044, %r4215;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4220, %r4217, %r4216;
	// end inline asm
	// begin inline asm
	mov.b32 %r4223, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4224, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4225, %r4047, %r4223;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4228, %r4225, %r4224;
	// end inline asm
	// begin inline asm
	mov.b32 %r4231, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4232, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4233, %r4050, %r4231;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4236, %r4233, %r4232;
	// end inline asm
	// begin inline asm
	mov.b32 %r4239, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4240, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4241, %r4053, %r4239;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4244, %r4241, %r4240;
	// end inline asm
	// begin inline asm
	mov.b32 %r4247, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4248, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4249, %r4056, %r4247;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4252, %r4249, %r4248;
	// end inline asm
	// begin inline asm
	mov.b32 %r4255, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4256, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4257, %r4059, %r4255;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4260, %r4257, %r4256;
	// end inline asm
	// begin inline asm
	mov.b32 %r4263, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4264, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4265, %r4062, %r4263;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4268, %r4265, %r4264;
	// end inline asm
	// begin inline asm
	mov.b32 %r4271, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4272, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4273, %r4065, %r4271;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4276, %r4273, %r4272;
	// end inline asm
	// begin inline asm
	mov.b32 %r4279, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4280, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4281, %r4068, %r4279;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4284, %r4281, %r4280;
	// end inline asm
	// begin inline asm
	mov.b32 %r4287, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4288, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4289, %r4071, %r4287;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4292, %r4289, %r4288;
	// end inline asm
	// begin inline asm
	mov.b32 %r4295, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4296, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4297, %r4074, %r4295;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4300, %r4297, %r4296;
	// end inline asm
	// begin inline asm
	mov.b32 %r4303, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4304, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4305, %r4077, %r4303;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4308, %r4305, %r4304;
	// end inline asm
	// begin inline asm
	mov.b32 %r4311, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4312, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4313, %r4080, %r4311;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4316, %r4313, %r4312;
	// end inline asm
	// begin inline asm
	mov.b32 %r4319, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4320, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4321, %r4083, %r4319;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4324, %r4321, %r4320;
	// end inline asm
	// begin inline asm
	mov.b32 %r4327, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4328, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4329, %r4086, %r4327;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4332, %r4329, %r4328;
	// end inline asm
	// begin inline asm
	mov.b32 %r4335, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4336, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4337, %r4089, %r4335;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4340, %r4337, %r4336;
	// end inline asm
	// begin inline asm
	mov.b32 %r4343, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r4344, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r4345, %r4092, %r4343;
	// end inline asm
	// begin inline asm
	min.f16x2 %r4348, %r4345, %r4344;
	// end inline asm
	// begin inline asm
	mov.b32 %r4354, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4353, %r4354, %r4352;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4356, %r4100, %r4353;
	// end inline asm
	// begin inline asm
	mov.b32 %r4359, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4360, %r4354, %r4359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4363, %r4108, %r4360;
	// end inline asm
	// begin inline asm
	mov.b32 %r4366, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4367, %r4354, %r4366;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4370, %r4116, %r4367;
	// end inline asm
	// begin inline asm
	mov.b32 %r4373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4374, %r4354, %r4373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4377, %r4124, %r4374;
	// end inline asm
	mov.u32 	%r4383, 25152;
	// begin inline asm
	prmt.b32 %r4380, %r4356, %r4370, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4384, %r4363, %r4377, %r4383;
	// end inline asm
	shl.b32 	%r4391, %r4384, 4;
	mov.u32 	%r4389, 252645135;
	// begin inline asm
	lop3.b32 %r4388, %r4389, %r4380, %r4391, 202;
	// end inline asm
	xor.b32  	%r16203, %r4388, -2004318072;
	// begin inline asm
	mov.b32 %r4395, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4393, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4394, %r4395, %r4393;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4397, %r4132, %r4394;
	// end inline asm
	// begin inline asm
	mov.b32 %r4400, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4401, %r4395, %r4400;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4404, %r4140, %r4401;
	// end inline asm
	// begin inline asm
	mov.b32 %r4407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4408, %r4395, %r4407;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4411, %r4148, %r4408;
	// end inline asm
	// begin inline asm
	mov.b32 %r4414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4415, %r4395, %r4414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4418, %r4156, %r4415;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4421, %r4397, %r4411, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4425, %r4404, %r4418, %r4383;
	// end inline asm
	shl.b32 	%r4432, %r4425, 4;
	// begin inline asm
	lop3.b32 %r4429, %r4389, %r4421, %r4432, 202;
	// end inline asm
	xor.b32  	%r16204, %r4429, -2004318072;
	// begin inline asm
	mov.b32 %r4436, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4434, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4435, %r4436, %r4434;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4438, %r4164, %r4435;
	// end inline asm
	// begin inline asm
	mov.b32 %r4441, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4442, %r4436, %r4441;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4445, %r4172, %r4442;
	// end inline asm
	// begin inline asm
	mov.b32 %r4448, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4449, %r4436, %r4448;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4452, %r4180, %r4449;
	// end inline asm
	// begin inline asm
	mov.b32 %r4455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4456, %r4436, %r4455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4459, %r4188, %r4456;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4462, %r4438, %r4452, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4466, %r4445, %r4459, %r4383;
	// end inline asm
	shl.b32 	%r4473, %r4466, 4;
	// begin inline asm
	lop3.b32 %r4470, %r4389, %r4462, %r4473, 202;
	// end inline asm
	xor.b32  	%r16205, %r4470, -2004318072;
	// begin inline asm
	mov.b32 %r4477, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4476, %r4477, %r4475;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4479, %r4196, %r4476;
	// end inline asm
	// begin inline asm
	mov.b32 %r4482, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4483, %r4477, %r4482;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4486, %r4204, %r4483;
	// end inline asm
	// begin inline asm
	mov.b32 %r4489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4490, %r4477, %r4489;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4493, %r4212, %r4490;
	// end inline asm
	// begin inline asm
	mov.b32 %r4496, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4497, %r4477, %r4496;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4500, %r4220, %r4497;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4503, %r4479, %r4493, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4507, %r4486, %r4500, %r4383;
	// end inline asm
	shl.b32 	%r4514, %r4507, 4;
	// begin inline asm
	lop3.b32 %r4511, %r4389, %r4503, %r4514, 202;
	// end inline asm
	xor.b32  	%r16206, %r4511, -2004318072;
	// begin inline asm
	mov.b32 %r4518, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4516, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4517, %r4518, %r4516;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4520, %r4228, %r4517;
	// end inline asm
	// begin inline asm
	mov.b32 %r4523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4524, %r4518, %r4523;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4527, %r4236, %r4524;
	// end inline asm
	// begin inline asm
	mov.b32 %r4530, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4531, %r4518, %r4530;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4534, %r4244, %r4531;
	// end inline asm
	// begin inline asm
	mov.b32 %r4537, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4538, %r4518, %r4537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4541, %r4252, %r4538;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4544, %r4520, %r4534, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4548, %r4527, %r4541, %r4383;
	// end inline asm
	shl.b32 	%r4555, %r4548, 4;
	// begin inline asm
	lop3.b32 %r4552, %r4389, %r4544, %r4555, 202;
	// end inline asm
	xor.b32  	%r16207, %r4552, -2004318072;
	// begin inline asm
	mov.b32 %r4559, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4558, %r4559, %r4557;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4561, %r4260, %r4558;
	// end inline asm
	// begin inline asm
	mov.b32 %r4564, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4565, %r4559, %r4564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4568, %r4268, %r4565;
	// end inline asm
	// begin inline asm
	mov.b32 %r4571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4572, %r4559, %r4571;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4575, %r4276, %r4572;
	// end inline asm
	// begin inline asm
	mov.b32 %r4578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4579, %r4559, %r4578;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4582, %r4284, %r4579;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4585, %r4561, %r4575, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4589, %r4568, %r4582, %r4383;
	// end inline asm
	shl.b32 	%r4596, %r4589, 4;
	// begin inline asm
	lop3.b32 %r4593, %r4389, %r4585, %r4596, 202;
	// end inline asm
	xor.b32  	%r16208, %r4593, -2004318072;
	// begin inline asm
	mov.b32 %r4600, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4598, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4599, %r4600, %r4598;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4602, %r4292, %r4599;
	// end inline asm
	// begin inline asm
	mov.b32 %r4605, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4606, %r4600, %r4605;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4609, %r4300, %r4606;
	// end inline asm
	// begin inline asm
	mov.b32 %r4612, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4613, %r4600, %r4612;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4616, %r4308, %r4613;
	// end inline asm
	// begin inline asm
	mov.b32 %r4619, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4620, %r4600, %r4619;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4623, %r4316, %r4620;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4626, %r4602, %r4616, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4630, %r4609, %r4623, %r4383;
	// end inline asm
	shl.b32 	%r4637, %r4630, 4;
	// begin inline asm
	lop3.b32 %r4634, %r4389, %r4626, %r4637, 202;
	// end inline asm
	xor.b32  	%r16209, %r4634, -2004318072;
	// begin inline asm
	mov.b32 %r4641, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4640, %r4641, %r4639;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4643, %r4324, %r4640;
	// end inline asm
	// begin inline asm
	mov.b32 %r4646, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4647, %r4641, %r4646;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4650, %r4332, %r4647;
	// end inline asm
	// begin inline asm
	mov.b32 %r4653, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4654, %r4641, %r4653;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4657, %r4340, %r4654;
	// end inline asm
	// begin inline asm
	mov.b32 %r4660, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4661, %r4641, %r4660;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4664, %r4348, %r4661;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4667, %r4643, %r4657, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r4671, %r4650, %r4664, %r4383;
	// end inline asm
	shl.b32 	%r4678, %r4671, 4;
	// begin inline asm
	lop3.b32 %r4675, %r4389, %r4667, %r4678, 202;
	// end inline asm
	xor.b32  	%r16210, %r4675, -2004318072;
	setp.eq.s32 	%p300, %r16396, 0;
	selp.b32 	%r16211, 0, 4161, %p300;
	add.s32 	%r16212, %r45, %r16211;
	mul.wide.u32 	%rd94, %r16212, 4;
	add.s64 	%rd95, %rd36, %rd94;
	st.shared.u32 	[%rd95], %r16203;
	add.s32 	%r16213, %r46, %r16211;
	mul.wide.u32 	%rd96, %r16213, 4;
	add.s64 	%rd97, %rd36, %rd96;
	st.shared.u32 	[%rd97], %r16204;
	add.s32 	%r16214, %r47, %r16211;
	mul.wide.u32 	%rd98, %r16214, 4;
	add.s64 	%rd99, %rd36, %rd98;
	st.shared.u32 	[%rd99], %r16205;
	add.s32 	%r16215, %r48, %r16211;
	mul.wide.u32 	%rd100, %r16215, 4;
	add.s64 	%rd101, %rd36, %rd100;
	st.shared.u32 	[%rd101], %r16206;
	add.s32 	%r16216, %r49, %r16211;
	mul.wide.u32 	%rd102, %r16216, 4;
	add.s64 	%rd103, %rd36, %rd102;
	st.shared.u32 	[%rd103], %r16207;
	add.s32 	%r16217, %r50, %r16211;
	mul.wide.u32 	%rd104, %r16217, 4;
	add.s64 	%rd105, %rd36, %rd104;
	st.shared.u32 	[%rd105], %r16208;
	add.s32 	%r16218, %r51, %r16211;
	mul.wide.u32 	%rd106, %r16218, 4;
	add.s64 	%rd107, %rd36, %rd106;
	st.shared.u32 	[%rd107], %r16209;
	add.s32 	%r16219, %r52, %r16211;
	mul.wide.u32 	%rd108, %r16219, 4;
	add.s64 	%rd109, %rd36, %rd108;
	st.shared.u32 	[%rd109], %r16210;
	ld.shared.u32 	%r16347, [%rd79];
	ld.shared.u32 	%r16348, [%rd81];
	ld.shared.u32 	%r16349, [%rd83];
	ld.shared.u32 	%r16350, [%rd85];
	ld.shared.u32 	%r16359, [%rd87];
	ld.shared.u32 	%r16360, [%rd89];
	ld.shared.u32 	%r16361, [%rd91];
	ld.shared.u32 	%r16362, [%rd93];
	// begin inline asm
	mov.b32 %r4684, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4695, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4683, %r16347, -2004318072;
	// begin inline asm
	lop3.b32 %r4681, %r866, %r4683, %r4684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4686, %r4684, %r4685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4689, %r4681, %r4686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4692, %r877, %r4683, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4697, %r4695, %r4696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4700, %r4692, %r4697;
	// end inline asm
	shr.u32 	%r4705, %r4683, 8;
	// begin inline asm
	lop3.b32 %r4703, %r866, %r4705, %r4684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4708, %r4684, %r4707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4711, %r4703, %r4708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4714, %r877, %r4705, %r4695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4719, %r4695, %r4718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4722, %r4714, %r4719;
	// end inline asm
	// begin inline asm
	mov.b32 %r4730, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4741, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4729, %r16348, -2004318072;
	// begin inline asm
	lop3.b32 %r4727, %r866, %r4729, %r4730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4732, %r4730, %r4731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4735, %r4727, %r4732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4738, %r877, %r4729, %r4741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4743, %r4741, %r4742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4746, %r4738, %r4743;
	// end inline asm
	shr.u32 	%r4751, %r4729, 8;
	// begin inline asm
	lop3.b32 %r4749, %r866, %r4751, %r4730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4754, %r4730, %r4753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4757, %r4749, %r4754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4760, %r877, %r4751, %r4741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4765, %r4741, %r4764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4768, %r4760, %r4765;
	// end inline asm
	// begin inline asm
	mov.b32 %r4776, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4787, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4775, %r16349, -2004318072;
	// begin inline asm
	lop3.b32 %r4773, %r866, %r4775, %r4776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4778, %r4776, %r4777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4781, %r4773, %r4778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4784, %r877, %r4775, %r4787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4789, %r4787, %r4788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4792, %r4784, %r4789;
	// end inline asm
	shr.u32 	%r4797, %r4775, 8;
	// begin inline asm
	lop3.b32 %r4795, %r866, %r4797, %r4776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4800, %r4776, %r4799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4803, %r4795, %r4800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4806, %r877, %r4797, %r4787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4811, %r4787, %r4810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4814, %r4806, %r4811;
	// end inline asm
	// begin inline asm
	mov.b32 %r4822, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4833, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4821, %r16350, -2004318072;
	// begin inline asm
	lop3.b32 %r4819, %r866, %r4821, %r4822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4824, %r4822, %r4823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4827, %r4819, %r4824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4830, %r877, %r4821, %r4833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4835, %r4833, %r4834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4838, %r4830, %r4835;
	// end inline asm
	shr.u32 	%r4843, %r4821, 8;
	// begin inline asm
	lop3.b32 %r4841, %r866, %r4843, %r4822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4846, %r4822, %r4845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4849, %r4841, %r4846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4852, %r877, %r4843, %r4833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4857, %r4833, %r4856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4860, %r4852, %r4857;
	// end inline asm
	// begin inline asm
	mov.b32 %r4868, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4879, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4867, %r16359, -2004318072;
	// begin inline asm
	lop3.b32 %r4865, %r866, %r4867, %r4868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4870, %r4868, %r4869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4873, %r4865, %r4870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4876, %r877, %r4867, %r4879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4881, %r4879, %r4880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4884, %r4876, %r4881;
	// end inline asm
	shr.u32 	%r4889, %r4867, 8;
	// begin inline asm
	lop3.b32 %r4887, %r866, %r4889, %r4868, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4892, %r4868, %r4891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4895, %r4887, %r4892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4898, %r877, %r4889, %r4879, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4903, %r4879, %r4902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4906, %r4898, %r4903;
	// end inline asm
	// begin inline asm
	mov.b32 %r4914, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4925, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4913, %r16360, -2004318072;
	// begin inline asm
	lop3.b32 %r4911, %r866, %r4913, %r4914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4916, %r4914, %r4915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4919, %r4911, %r4916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4922, %r877, %r4913, %r4925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4927, %r4925, %r4926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4930, %r4922, %r4927;
	// end inline asm
	shr.u32 	%r4935, %r4913, 8;
	// begin inline asm
	lop3.b32 %r4933, %r866, %r4935, %r4914, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4938, %r4914, %r4937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4941, %r4933, %r4938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4944, %r877, %r4935, %r4925, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4949, %r4925, %r4948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4952, %r4944, %r4949;
	// end inline asm
	// begin inline asm
	mov.b32 %r4960, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r4971, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r4959, %r16361, -2004318072;
	// begin inline asm
	lop3.b32 %r4957, %r866, %r4959, %r4960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4962, %r4960, %r4961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4965, %r4957, %r4962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4968, %r877, %r4959, %r4971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4973, %r4971, %r4972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4976, %r4968, %r4973;
	// end inline asm
	shr.u32 	%r4981, %r4959, 8;
	// begin inline asm
	lop3.b32 %r4979, %r866, %r4981, %r4960, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4984, %r4960, %r4983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4987, %r4979, %r4984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r4990, %r877, %r4981, %r4971, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r4994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r4995, %r4971, %r4994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r4998, %r4990, %r4995;
	// end inline asm
	// begin inline asm
	mov.b32 %r5006, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5017, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r5005, %r16362, -2004318072;
	// begin inline asm
	lop3.b32 %r5003, %r866, %r5005, %r5006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5008, %r5006, %r5007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5011, %r5003, %r5008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5014, %r877, %r5005, %r5017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5019, %r5017, %r5018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5022, %r5014, %r5019;
	// end inline asm
	shr.u32 	%r5027, %r5005, 8;
	// begin inline asm
	lop3.b32 %r5025, %r866, %r5027, %r5006, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5030, %r5006, %r5029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5033, %r5025, %r5030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5036, %r877, %r5027, %r5017, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5041, %r5017, %r5040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5044, %r5036, %r5041;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5047, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5049, %r5047, %r4689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5052, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5054, %r5052, %r4700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5057, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5059, %r5057, %r4711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5062, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5064, %r5062, %r4722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5067, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5069, %r5067, %r4735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5072, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5074, %r5072, %r4746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5077, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5079, %r5077, %r4757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5082, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5084, %r5082, %r4768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5087, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5089, %r5087, %r4781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5092, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5094, %r5092, %r4792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5097, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5099, %r5097, %r4803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5102, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5104, %r5102, %r4814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5107, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5109, %r5107, %r4827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5112, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5114, %r5112, %r4838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5117, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5119, %r5117, %r4849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5122, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5124, %r5122, %r4860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5127, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5129, %r5127, %r4873;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5132, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5134, %r5132, %r4884;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5137, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5139, %r5137, %r4895;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5142, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5144, %r5142, %r4906;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5147, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5149, %r5147, %r4919;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5152, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5154, %r5152, %r4930;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5157, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5159, %r5157, %r4941;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5162, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5164, %r5162, %r4952;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5167, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5169, %r5167, %r4965;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5172, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5174, %r5172, %r4976;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5177, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5179, %r5177, %r4987;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5182, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5184, %r5182, %r4998;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5187, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5189, %r5187, %r5011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5192, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5194, %r5192, %r5022;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5197, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5199, %r5197, %r5033;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r5202, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r5204, %r5202, %r5044;
	// end inline asm
	// begin inline asm
	mov.b32 %r5212, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5223, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5209, %r866, %r1891, %r5212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5214, %r5212, %r5213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5217, %r5209, %r5214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5220, %r877, %r1891, %r5223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5225, %r5223, %r5224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5228, %r5220, %r5225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5231, %r866, %r1913, %r5212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5236, %r5212, %r5235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5239, %r5231, %r5236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5242, %r877, %r1913, %r5223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5247, %r5223, %r5246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5250, %r5242, %r5247;
	// end inline asm
	// begin inline asm
	mov.b32 %r5258, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5269, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5255, %r866, %r1937, %r5258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5260, %r5258, %r5259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5263, %r5255, %r5260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5266, %r877, %r1937, %r5269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5271, %r5269, %r5270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5274, %r5266, %r5271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5277, %r866, %r1959, %r5258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5282, %r5258, %r5281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5285, %r5277, %r5282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5288, %r877, %r1959, %r5269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5293, %r5269, %r5292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5296, %r5288, %r5293;
	// end inline asm
	// begin inline asm
	mov.b32 %r5304, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5315, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5301, %r866, %r1983, %r5304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5306, %r5304, %r5305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5309, %r5301, %r5306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5312, %r877, %r1983, %r5315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5317, %r5315, %r5316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5320, %r5312, %r5317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5323, %r866, %r2005, %r5304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5328, %r5304, %r5327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5331, %r5323, %r5328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5334, %r877, %r2005, %r5315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5339, %r5315, %r5338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5342, %r5334, %r5339;
	// end inline asm
	// begin inline asm
	mov.b32 %r5350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5361, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5347, %r866, %r2029, %r5350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5352, %r5350, %r5351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5355, %r5347, %r5352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5358, %r877, %r2029, %r5361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5363, %r5361, %r5362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5366, %r5358, %r5363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5369, %r866, %r2051, %r5350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5374, %r5350, %r5373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5377, %r5369, %r5374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5380, %r877, %r2051, %r5361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5385, %r5361, %r5384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5388, %r5380, %r5385;
	// end inline asm
	// begin inline asm
	mov.b32 %r5396, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5407, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5393, %r866, %r2075, %r5396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5397, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5398, %r5396, %r5397;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5401, %r5393, %r5398;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5404, %r877, %r2075, %r5407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5408, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5409, %r5407, %r5408;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5412, %r5404, %r5409;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5415, %r866, %r2097, %r5396, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5419, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5420, %r5396, %r5419;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5423, %r5415, %r5420;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5426, %r877, %r2097, %r5407, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5430, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5431, %r5407, %r5430;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5434, %r5426, %r5431;
	// end inline asm
	// begin inline asm
	mov.b32 %r5442, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5453, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5439, %r866, %r2121, %r5442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5443, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5444, %r5442, %r5443;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5447, %r5439, %r5444;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5450, %r877, %r2121, %r5453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5454, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5455, %r5453, %r5454;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5458, %r5450, %r5455;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5461, %r866, %r2143, %r5442, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5465, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5466, %r5442, %r5465;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5469, %r5461, %r5466;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5472, %r877, %r2143, %r5453, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5477, %r5453, %r5476;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5480, %r5472, %r5477;
	// end inline asm
	// begin inline asm
	mov.b32 %r5488, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5499, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5485, %r866, %r2167, %r5488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5489, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5490, %r5488, %r5489;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5493, %r5485, %r5490;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5496, %r877, %r2167, %r5499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5500, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5501, %r5499, %r5500;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5504, %r5496, %r5501;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5507, %r866, %r2189, %r5488, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5511, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5512, %r5488, %r5511;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5515, %r5507, %r5512;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5518, %r877, %r2189, %r5499, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5522, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5523, %r5499, %r5522;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5526, %r5518, %r5523;
	// end inline asm
	// begin inline asm
	mov.b32 %r5534, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5545, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5531, %r866, %r2213, %r5534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5535, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5536, %r5534, %r5535;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5539, %r5531, %r5536;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5542, %r877, %r2213, %r5545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5546, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5547, %r5545, %r5546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5550, %r5542, %r5547;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5553, %r866, %r2235, %r5534, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5557, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5558, %r5534, %r5557;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5561, %r5553, %r5558;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5564, %r877, %r2235, %r5545, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5568, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5569, %r5545, %r5568;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5572, %r5564, %r5569;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5575, %r254, %r5217, %r5049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5579, %r254, %r5228, %r5054;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5583, %r254, %r5239, %r5059;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5587, %r254, %r5250, %r5064;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5591, %r254, %r5263, %r5069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5595, %r254, %r5274, %r5074;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5599, %r254, %r5285, %r5079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5603, %r254, %r5296, %r5084;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5607, %r254, %r5309, %r5089;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5611, %r254, %r5320, %r5094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5615, %r254, %r5331, %r5099;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5619, %r254, %r5342, %r5104;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5623, %r254, %r5355, %r5109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5627, %r254, %r5366, %r5114;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5631, %r254, %r5377, %r5119;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5635, %r254, %r5388, %r5124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5639, %r285, %r5401, %r5129;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5643, %r285, %r5412, %r5134;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5647, %r285, %r5423, %r5139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5651, %r285, %r5434, %r5144;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5655, %r285, %r5447, %r5149;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5659, %r285, %r5458, %r5154;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5663, %r285, %r5469, %r5159;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5667, %r285, %r5480, %r5164;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5671, %r285, %r5493, %r5169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5675, %r285, %r5504, %r5174;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5679, %r285, %r5515, %r5179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5683, %r285, %r5526, %r5184;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5687, %r285, %r5539, %r5189;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5691, %r285, %r5550, %r5194;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5695, %r285, %r5561, %r5199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r5699, %r285, %r5572, %r5204;
	// end inline asm
	// begin inline asm
	mov.b32 %r5708, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5719, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5705, %r866, %r2451, %r5708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5710, %r5708, %r5709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5713, %r5705, %r5710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5716, %r877, %r2451, %r5719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5721, %r5719, %r5720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5724, %r5716, %r5721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5727, %r866, %r2473, %r5708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5732, %r5708, %r5731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5735, %r5727, %r5732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5738, %r877, %r2473, %r5719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5743, %r5719, %r5742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5746, %r5738, %r5743;
	// end inline asm
	// begin inline asm
	mov.b32 %r5754, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5765, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5751, %r866, %r2497, %r5754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5756, %r5754, %r5755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5759, %r5751, %r5756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5762, %r877, %r2497, %r5765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5767, %r5765, %r5766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5770, %r5762, %r5767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5773, %r866, %r2519, %r5754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5778, %r5754, %r5777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5781, %r5773, %r5778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5784, %r877, %r2519, %r5765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5789, %r5765, %r5788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5792, %r5784, %r5789;
	// end inline asm
	// begin inline asm
	mov.b32 %r5800, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5811, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5797, %r866, %r2543, %r5800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5802, %r5800, %r5801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5805, %r5797, %r5802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5808, %r877, %r2543, %r5811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5813, %r5811, %r5812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5816, %r5808, %r5813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5819, %r866, %r2565, %r5800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5824, %r5800, %r5823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5827, %r5819, %r5824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5830, %r877, %r2565, %r5811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5835, %r5811, %r5834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5838, %r5830, %r5835;
	// end inline asm
	// begin inline asm
	mov.b32 %r5846, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5857, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5843, %r866, %r2589, %r5846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5848, %r5846, %r5847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5851, %r5843, %r5848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5854, %r877, %r2589, %r5857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5859, %r5857, %r5858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5862, %r5854, %r5859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5865, %r866, %r2611, %r5846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5870, %r5846, %r5869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5873, %r5865, %r5870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5876, %r877, %r2611, %r5857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5881, %r5857, %r5880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5884, %r5876, %r5881;
	// end inline asm
	// begin inline asm
	mov.b32 %r5892, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5903, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5889, %r866, %r2635, %r5892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5893, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5894, %r5892, %r5893;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5897, %r5889, %r5894;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5900, %r877, %r2635, %r5903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5904, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5905, %r5903, %r5904;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5908, %r5900, %r5905;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5911, %r866, %r2657, %r5892, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5915, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5916, %r5892, %r5915;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5919, %r5911, %r5916;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5922, %r877, %r2657, %r5903, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5926, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5927, %r5903, %r5926;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5930, %r5922, %r5927;
	// end inline asm
	// begin inline asm
	mov.b32 %r5938, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5949, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5935, %r866, %r2681, %r5938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5939, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5940, %r5938, %r5939;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5943, %r5935, %r5940;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5946, %r877, %r2681, %r5949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5950, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5951, %r5949, %r5950;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5954, %r5946, %r5951;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5957, %r866, %r2703, %r5938, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5961, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5962, %r5938, %r5961;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5965, %r5957, %r5962;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5968, %r877, %r2703, %r5949, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5972, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5973, %r5949, %r5972;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5976, %r5968, %r5973;
	// end inline asm
	// begin inline asm
	mov.b32 %r5984, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r5995, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r5981, %r866, %r2727, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5986, %r5984, %r5985;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r5989, %r5981, %r5986;
	// end inline asm
	// begin inline asm
	lop3.b32 %r5992, %r877, %r2727, %r5995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r5996, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r5997, %r5995, %r5996;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6000, %r5992, %r5997;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6003, %r866, %r2749, %r5984, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6007, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6008, %r5984, %r6007;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6011, %r6003, %r6008;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6014, %r877, %r2749, %r5995, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6018, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6019, %r5995, %r6018;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6022, %r6014, %r6019;
	// end inline asm
	// begin inline asm
	mov.b32 %r6030, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6041, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6027, %r866, %r2773, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6031, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6032, %r6030, %r6031;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6035, %r6027, %r6032;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6038, %r877, %r2773, %r6041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6042, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6043, %r6041, %r6042;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6046, %r6038, %r6043;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6049, %r866, %r2795, %r6030, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6054, %r6030, %r6053;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6057, %r6049, %r6054;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6060, %r877, %r2795, %r6041, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6064, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6065, %r6041, %r6064;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6068, %r6060, %r6065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6071, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6073, %r6071, %r5713, %r5575;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6077, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6079, %r6077, %r5724, %r5579;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6083, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6085, %r6083, %r5735, %r5583;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6089, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6091, %r6089, %r5746, %r5587;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6095, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6097, %r6095, %r5759, %r5591;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6101, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6103, %r6101, %r5770, %r5595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6107, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6109, %r6107, %r5781, %r5599;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6113, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6115, %r6113, %r5792, %r5603;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6119, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6121, %r6119, %r5805, %r5607;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6125, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6127, %r6125, %r5816, %r5611;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6131, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6133, %r6131, %r5827, %r5615;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6137, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6139, %r6137, %r5838, %r5619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6143, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6145, %r6143, %r5851, %r5623;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6149, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6151, %r6149, %r5862, %r5627;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6155, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6157, %r6155, %r5873, %r5631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6161, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6163, %r6161, %r5884, %r5635;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6167, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6169, %r6167, %r5897, %r5639;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6173, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6175, %r6173, %r5908, %r5643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6179, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6181, %r6179, %r5919, %r5647;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6185, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6187, %r6185, %r5930, %r5651;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6191, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6193, %r6191, %r5943, %r5655;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6197, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6199, %r6197, %r5954, %r5659;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6203, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6205, %r6203, %r5965, %r5663;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6209, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6211, %r6209, %r5976, %r5667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6215, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6217, %r6215, %r5989, %r5671;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6221, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6223, %r6221, %r6000, %r5675;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6227, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6229, %r6227, %r6011, %r5679;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6233, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6235, %r6233, %r6022, %r5683;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6239, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6241, %r6239, %r6035, %r5687;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6245, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6247, %r6245, %r6046, %r5691;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6251, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6253, %r6251, %r6057, %r5695;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6257, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6259, %r6257, %r6068, %r5699;
	// end inline asm
	// begin inline asm
	mov.b32 %r6268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6279, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6265, %r866, %r867, %r6268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6270, %r6268, %r6269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6273, %r6265, %r6270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6276, %r877, %r867, %r6279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6281, %r6279, %r6280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6284, %r6276, %r6281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6287, %r866, %r889, %r6268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6292, %r6268, %r6291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6295, %r6287, %r6292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6298, %r877, %r889, %r6279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6303, %r6279, %r6302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6306, %r6298, %r6303;
	// end inline asm
	// begin inline asm
	mov.b32 %r6314, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6325, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6311, %r866, %r913, %r6314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6316, %r6314, %r6315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6319, %r6311, %r6316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6322, %r877, %r913, %r6325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6327, %r6325, %r6326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6330, %r6322, %r6327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6333, %r866, %r935, %r6314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6338, %r6314, %r6337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6341, %r6333, %r6338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6344, %r877, %r935, %r6325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6349, %r6325, %r6348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6352, %r6344, %r6349;
	// end inline asm
	// begin inline asm
	mov.b32 %r6360, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6371, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6357, %r866, %r959, %r6360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6362, %r6360, %r6361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6365, %r6357, %r6362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6368, %r877, %r959, %r6371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6373, %r6371, %r6372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6376, %r6368, %r6373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6379, %r866, %r981, %r6360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6384, %r6360, %r6383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6387, %r6379, %r6384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6390, %r877, %r981, %r6371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6395, %r6371, %r6394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6398, %r6390, %r6395;
	// end inline asm
	// begin inline asm
	mov.b32 %r6406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6417, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6403, %r866, %r1005, %r6406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6408, %r6406, %r6407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6411, %r6403, %r6408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6414, %r877, %r1005, %r6417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6419, %r6417, %r6418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6422, %r6414, %r6419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6425, %r866, %r1027, %r6406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6430, %r6406, %r6429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6433, %r6425, %r6430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6436, %r877, %r1027, %r6417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6441, %r6417, %r6440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6444, %r6436, %r6441;
	// end inline asm
	// begin inline asm
	mov.b32 %r6452, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6463, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6449, %r866, %r1051, %r6452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6453, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6454, %r6452, %r6453;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6457, %r6449, %r6454;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6460, %r877, %r1051, %r6463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6464, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6465, %r6463, %r6464;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6468, %r6460, %r6465;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6471, %r866, %r1073, %r6452, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6475, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6476, %r6452, %r6475;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6479, %r6471, %r6476;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6482, %r877, %r1073, %r6463, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6486, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6487, %r6463, %r6486;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6490, %r6482, %r6487;
	// end inline asm
	// begin inline asm
	mov.b32 %r6498, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6509, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6495, %r866, %r1097, %r6498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6499, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6500, %r6498, %r6499;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6503, %r6495, %r6500;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6506, %r877, %r1097, %r6509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6510, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6511, %r6509, %r6510;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6514, %r6506, %r6511;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6517, %r866, %r1119, %r6498, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6521, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6522, %r6498, %r6521;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6525, %r6517, %r6522;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6528, %r877, %r1119, %r6509, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6532, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6533, %r6509, %r6532;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6536, %r6528, %r6533;
	// end inline asm
	// begin inline asm
	mov.b32 %r6544, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6555, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6541, %r866, %r1143, %r6544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6545, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6546, %r6544, %r6545;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6549, %r6541, %r6546;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6552, %r877, %r1143, %r6555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6556, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6557, %r6555, %r6556;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6560, %r6552, %r6557;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6563, %r866, %r1165, %r6544, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6567, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6568, %r6544, %r6567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6571, %r6563, %r6568;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6574, %r877, %r1165, %r6555, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6578, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6579, %r6555, %r6578;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6582, %r6574, %r6579;
	// end inline asm
	// begin inline asm
	mov.b32 %r6590, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r6601, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r6587, %r866, %r1189, %r6590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6591, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6592, %r6590, %r6591;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6595, %r6587, %r6592;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6598, %r877, %r1189, %r6601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6602, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6603, %r6601, %r6602;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6606, %r6598, %r6603;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6609, %r866, %r1211, %r6590, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6613, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6614, %r6590, %r6613;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6617, %r6609, %r6614;
	// end inline asm
	// begin inline asm
	lop3.b32 %r6620, %r877, %r1211, %r6601, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r6624, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r6625, %r6601, %r6624;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r6628, %r6620, %r6625;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6766, %r378, %r6273, %r6073;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6763, %r378, %r6284, %r6079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6775, %r378, %r6295, %r6085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6772, %r378, %r6306, %r6091;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6784, %r378, %r6319, %r6097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6781, %r378, %r6330, %r6103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6793, %r378, %r6341, %r6109;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6790, %r378, %r6352, %r6115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6802, %r378, %r6365, %r6121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6799, %r378, %r6376, %r6127;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6811, %r378, %r6387, %r6133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6808, %r378, %r6398, %r6139;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6820, %r378, %r6411, %r6145;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6817, %r378, %r6422, %r6151;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6829, %r378, %r6433, %r6157;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6826, %r378, %r6444, %r6163;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6838, %r409, %r6457, %r6169;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6835, %r409, %r6468, %r6175;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6847, %r409, %r6479, %r6181;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6844, %r409, %r6490, %r6187;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6856, %r409, %r6503, %r6193;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6853, %r409, %r6514, %r6199;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6865, %r409, %r6525, %r6205;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6862, %r409, %r6536, %r6211;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6874, %r409, %r6549, %r6217;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6871, %r409, %r6560, %r6223;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6883, %r409, %r6571, %r6229;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6880, %r409, %r6582, %r6235;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6892, %r409, %r6595, %r6241;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6889, %r409, %r6606, %r6247;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6901, %r409, %r6617, %r6253;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6898, %r409, %r6628, %r6259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6759, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6761, %r6759, %r6763;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6764, %r474, %r6766, %r6761;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6768, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6770, %r6768, %r6772;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6773, %r474, %r6775, %r6770;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6777, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6779, %r6777, %r6781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6782, %r474, %r6784, %r6779;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6786, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6788, %r6786, %r6790;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6791, %r474, %r6793, %r6788;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6795, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6797, %r6795, %r6799;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6800, %r474, %r6802, %r6797;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6804, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6806, %r6804, %r6808;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6809, %r474, %r6811, %r6806;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6813, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6815, %r6813, %r6817;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6818, %r474, %r6820, %r6815;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6822, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6824, %r6822, %r6826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6827, %r474, %r6829, %r6824;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6831, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6833, %r6831, %r6835;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6836, %r477, %r6838, %r6833;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6840, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6842, %r6840, %r6844;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6845, %r477, %r6847, %r6842;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6849, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6851, %r6849, %r6853;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6854, %r477, %r6856, %r6851;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6858, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6860, %r6858, %r6862;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6863, %r477, %r6865, %r6860;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6867, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6869, %r6867, %r6871;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6872, %r477, %r6874, %r6869;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6876, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6878, %r6876, %r6880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6881, %r477, %r6883, %r6878;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6885, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6887, %r6885, %r6889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6890, %r477, %r6892, %r6887;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r6894, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6896, %r6894, %r6898;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6899, %r477, %r6901, %r6896;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6903, %r480, %r6766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6906, %r474, %r6763, %r6903;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6910, %r480, %r6775;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6913, %r474, %r6772, %r6910;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6917, %r480, %r6784;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6920, %r474, %r6781, %r6917;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6924, %r480, %r6793;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6927, %r474, %r6790, %r6924;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6931, %r480, %r6802;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6934, %r474, %r6799, %r6931;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6938, %r480, %r6811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6941, %r474, %r6808, %r6938;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6945, %r480, %r6820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6948, %r474, %r6817, %r6945;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6952, %r480, %r6829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6955, %r474, %r6826, %r6952;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6959, %r483, %r6838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6962, %r477, %r6835, %r6959;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6966, %r483, %r6847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6969, %r477, %r6844, %r6966;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6973, %r483, %r6856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6976, %r477, %r6853, %r6973;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6980, %r483, %r6865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6983, %r477, %r6862, %r6980;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6987, %r483, %r6874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6990, %r477, %r6871, %r6987;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r6994, %r483, %r6883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r6997, %r477, %r6880, %r6994;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7001, %r483, %r6892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7004, %r477, %r6889, %r7001;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7008, %r483, %r6901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7011, %r477, %r6898, %r7008;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7182, %r7179}, {%r486, %r492, %r489, %r495}, {%r6764, %r6906}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7191, %r7188}, {%r486, %r492, %r489, %r495}, {%r6773, %r6913}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7200, %r7197}, {%r486, %r492, %r489, %r495}, {%r6782, %r6920}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7209, %r7206}, {%r486, %r492, %r489, %r495}, {%r6791, %r6927}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7218, %r7215}, {%r486, %r492, %r489, %r495}, {%r6800, %r6934}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7227, %r7224}, {%r486, %r492, %r489, %r495}, {%r6809, %r6941}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7236, %r7233}, {%r486, %r492, %r489, %r495}, {%r6818, %r6948}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7245, %r7242}, {%r486, %r492, %r489, %r495}, {%r6827, %r6955}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7254, %r7251}, {%r486, %r492, %r489, %r495}, {%r6836, %r6962}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7263, %r7260}, {%r486, %r492, %r489, %r495}, {%r6845, %r6969}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7272, %r7269}, {%r486, %r492, %r489, %r495}, {%r6854, %r6976}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7281, %r7278}, {%r486, %r492, %r489, %r495}, {%r6863, %r6983}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7290, %r7287}, {%r486, %r492, %r489, %r495}, {%r6872, %r6990}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7299, %r7296}, {%r486, %r492, %r489, %r495}, {%r6881, %r6997}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7308, %r7305}, {%r486, %r492, %r489, %r495}, {%r6890, %r7004}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7317, %r7314}, {%r486, %r492, %r489, %r495}, {%r6899, %r7011}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7175, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7177, %r7175, %r7179;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7180, %r498, %r7182, %r7177;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7184, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7186, %r7184, %r7188;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7189, %r498, %r7191, %r7186;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7193, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7195, %r7193, %r7197;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7198, %r498, %r7200, %r7195;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7202, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7204, %r7202, %r7206;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7207, %r498, %r7209, %r7204;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7211, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7213, %r7211, %r7215;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7216, %r498, %r7218, %r7213;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7220, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7222, %r7220, %r7224;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7225, %r498, %r7227, %r7222;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7229, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7231, %r7229, %r7233;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7234, %r498, %r7236, %r7231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7238, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7240, %r7238, %r7242;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7243, %r498, %r7245, %r7240;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7247, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7249, %r7247, %r7251;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7252, %r498, %r7254, %r7249;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7256, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7258, %r7256, %r7260;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7261, %r498, %r7263, %r7258;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7265, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7267, %r7265, %r7269;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7270, %r498, %r7272, %r7267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7274, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7276, %r7274, %r7278;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7279, %r498, %r7281, %r7276;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7283, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7285, %r7283, %r7287;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7288, %r498, %r7290, %r7285;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7292, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7294, %r7292, %r7296;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7297, %r498, %r7299, %r7294;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7301, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7303, %r7301, %r7305;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7306, %r498, %r7308, %r7303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r7310, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7312, %r7310, %r7314;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7315, %r498, %r7317, %r7312;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7319, %r501, %r7182;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7322, %r498, %r7179, %r7319;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7326, %r501, %r7191;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7329, %r498, %r7188, %r7326;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7333, %r501, %r7200;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7336, %r498, %r7197, %r7333;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7340, %r501, %r7209;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7343, %r498, %r7206, %r7340;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7347, %r501, %r7218;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7350, %r498, %r7215, %r7347;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7354, %r501, %r7227;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7357, %r498, %r7224, %r7354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7361, %r501, %r7236;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7364, %r498, %r7233, %r7361;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7368, %r501, %r7245;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7371, %r498, %r7242, %r7368;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7375, %r501, %r7254;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7378, %r498, %r7251, %r7375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7382, %r501, %r7263;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7385, %r498, %r7260, %r7382;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7389, %r501, %r7272;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7392, %r498, %r7269, %r7389;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7396, %r501, %r7281;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7399, %r498, %r7278, %r7396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7403, %r501, %r7290;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7406, %r498, %r7287, %r7403;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7410, %r501, %r7299;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7413, %r498, %r7296, %r7410;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7417, %r501, %r7308;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7420, %r498, %r7305, %r7417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7424, %r501, %r7317;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r7427, %r498, %r7314, %r7424;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7720, %r7723}, {%r504, %r510, %r507, %r513}, {%r7180, %r7322}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7726, %r7729}, {%r504, %r510, %r507, %r513}, {%r7189, %r7329}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7732, %r7735}, {%r504, %r510, %r507, %r513}, {%r7198, %r7336}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7738, %r7741}, {%r504, %r510, %r507, %r513}, {%r7207, %r7343}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7744, %r7747}, {%r504, %r510, %r507, %r513}, {%r7216, %r7350}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7750, %r7753}, {%r504, %r510, %r507, %r513}, {%r7225, %r7357}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7756, %r7759}, {%r504, %r510, %r507, %r513}, {%r7234, %r7364}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7762, %r7765}, {%r504, %r510, %r507, %r513}, {%r7243, %r7371}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7721, %r7724}, {%r504, %r510, %r507, %r513}, {%r7252, %r7378}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7727, %r7730}, {%r504, %r510, %r507, %r513}, {%r7261, %r7385}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7733, %r7736}, {%r504, %r510, %r507, %r513}, {%r7270, %r7392}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7739, %r7742}, {%r504, %r510, %r507, %r513}, {%r7279, %r7399}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7745, %r7748}, {%r504, %r510, %r507, %r513}, {%r7288, %r7406}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7751, %r7754}, {%r504, %r510, %r507, %r513}, {%r7297, %r7413}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7757, %r7760}, {%r504, %r510, %r507, %r513}, {%r7306, %r7420}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r7763, %r7766}, {%r504, %r510, %r507, %r513}, {%r7315, %r7427}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7719, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7722, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7725, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7728, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7731, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7734, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7737, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7740, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7743, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7746, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7749, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7752, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7755, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7758, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7761, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r7764, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7767, %r7720, %r7721;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7770, %r7723, %r7724;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7773, %r7726, %r7727;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7776, %r7729, %r7730;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7779, %r7732, %r7733;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7782, %r7735, %r7736;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7785, %r7738, %r7739;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7788, %r7741, %r7742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7791, %r7744, %r7745;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7794, %r7747, %r7748;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7797, %r7750, %r7751;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7800, %r7753, %r7754;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7803, %r7756, %r7757;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7806, %r7759, %r7760;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7809, %r7762, %r7763;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r7812, %r7765, %r7766;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7815, %r148, %r7719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7818, %r148, %r7722;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7821, %r148, %r7725;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7824, %r148, %r7728;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7827, %r148, %r7731;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7830, %r148, %r7734;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7833, %r148, %r7737;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7836, %r148, %r7740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7839, %r148, %r7743;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7842, %r148, %r7746;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7845, %r148, %r7749;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7848, %r148, %r7752;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7851, %r148, %r7755;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7854, %r148, %r7758;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7857, %r148, %r7761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7860, %r148, %r7764;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7863, %r150, %r7767;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7866, %r150, %r7770;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7869, %r150, %r7773;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7872, %r150, %r7776;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7875, %r150, %r7779;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7878, %r150, %r7782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7881, %r150, %r7785;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7884, %r150, %r7788;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7887, %r150, %r7791;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7890, %r150, %r7794;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7893, %r150, %r7797;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7896, %r150, %r7800;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7899, %r150, %r7803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7902, %r150, %r7806;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7905, %r150, %r7809;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r7908, %r150, %r7812;
	// end inline asm
	// begin inline asm
	mov.b32 %r7911, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7912, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7913, %r7815, %r7911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7916, %r7913, %r7912;
	// end inline asm
	// begin inline asm
	mov.b32 %r7919, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7920, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7921, %r7818, %r7919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7924, %r7921, %r7920;
	// end inline asm
	// begin inline asm
	mov.b32 %r7927, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7928, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7929, %r7821, %r7927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7932, %r7929, %r7928;
	// end inline asm
	// begin inline asm
	mov.b32 %r7935, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7936, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7937, %r7824, %r7935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7940, %r7937, %r7936;
	// end inline asm
	// begin inline asm
	mov.b32 %r7943, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7944, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7945, %r7827, %r7943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7948, %r7945, %r7944;
	// end inline asm
	// begin inline asm
	mov.b32 %r7951, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7952, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7953, %r7830, %r7951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7956, %r7953, %r7952;
	// end inline asm
	// begin inline asm
	mov.b32 %r7959, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7960, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7961, %r7833, %r7959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7964, %r7961, %r7960;
	// end inline asm
	// begin inline asm
	mov.b32 %r7967, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7968, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7969, %r7836, %r7967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7972, %r7969, %r7968;
	// end inline asm
	// begin inline asm
	mov.b32 %r7975, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7976, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7977, %r7839, %r7975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7980, %r7977, %r7976;
	// end inline asm
	// begin inline asm
	mov.b32 %r7983, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7984, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7985, %r7842, %r7983;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7988, %r7985, %r7984;
	// end inline asm
	// begin inline asm
	mov.b32 %r7991, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r7992, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r7993, %r7845, %r7991;
	// end inline asm
	// begin inline asm
	min.f16x2 %r7996, %r7993, %r7992;
	// end inline asm
	// begin inline asm
	mov.b32 %r7999, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8000, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8001, %r7848, %r7999;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8004, %r8001, %r8000;
	// end inline asm
	// begin inline asm
	mov.b32 %r8007, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8008, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8009, %r7851, %r8007;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8012, %r8009, %r8008;
	// end inline asm
	// begin inline asm
	mov.b32 %r8015, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8016, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8017, %r7854, %r8015;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8020, %r8017, %r8016;
	// end inline asm
	// begin inline asm
	mov.b32 %r8023, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8024, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8025, %r7857, %r8023;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8028, %r8025, %r8024;
	// end inline asm
	// begin inline asm
	mov.b32 %r8031, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8032, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8033, %r7860, %r8031;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8036, %r8033, %r8032;
	// end inline asm
	// begin inline asm
	mov.b32 %r8039, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8040, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8041, %r7863, %r8039;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8044, %r8041, %r8040;
	// end inline asm
	// begin inline asm
	mov.b32 %r8047, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8048, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8049, %r7866, %r8047;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8052, %r8049, %r8048;
	// end inline asm
	// begin inline asm
	mov.b32 %r8055, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8056, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8057, %r7869, %r8055;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8060, %r8057, %r8056;
	// end inline asm
	// begin inline asm
	mov.b32 %r8063, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8064, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8065, %r7872, %r8063;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8068, %r8065, %r8064;
	// end inline asm
	// begin inline asm
	mov.b32 %r8071, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8072, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8073, %r7875, %r8071;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8076, %r8073, %r8072;
	// end inline asm
	// begin inline asm
	mov.b32 %r8079, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8080, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8081, %r7878, %r8079;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8084, %r8081, %r8080;
	// end inline asm
	// begin inline asm
	mov.b32 %r8087, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8088, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8089, %r7881, %r8087;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8092, %r8089, %r8088;
	// end inline asm
	// begin inline asm
	mov.b32 %r8095, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8096, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8097, %r7884, %r8095;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8100, %r8097, %r8096;
	// end inline asm
	// begin inline asm
	mov.b32 %r8103, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8104, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8105, %r7887, %r8103;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8108, %r8105, %r8104;
	// end inline asm
	// begin inline asm
	mov.b32 %r8111, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8112, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8113, %r7890, %r8111;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8116, %r8113, %r8112;
	// end inline asm
	// begin inline asm
	mov.b32 %r8119, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8120, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8121, %r7893, %r8119;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8124, %r8121, %r8120;
	// end inline asm
	// begin inline asm
	mov.b32 %r8127, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8128, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8129, %r7896, %r8127;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8132, %r8129, %r8128;
	// end inline asm
	// begin inline asm
	mov.b32 %r8135, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8136, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8137, %r7899, %r8135;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8140, %r8137, %r8136;
	// end inline asm
	// begin inline asm
	mov.b32 %r8143, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8144, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8145, %r7902, %r8143;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8148, %r8145, %r8144;
	// end inline asm
	// begin inline asm
	mov.b32 %r8151, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8152, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8153, %r7905, %r8151;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8156, %r8153, %r8152;
	// end inline asm
	// begin inline asm
	mov.b32 %r8159, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r8160, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r8161, %r7908, %r8159;
	// end inline asm
	// begin inline asm
	min.f16x2 %r8164, %r8161, %r8160;
	// end inline asm
	// begin inline asm
	mov.b32 %r8170, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8168, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8169, %r8170, %r8168;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8172, %r7916, %r8169;
	// end inline asm
	// begin inline asm
	mov.b32 %r8175, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8176, %r8170, %r8175;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8179, %r7924, %r8176;
	// end inline asm
	// begin inline asm
	mov.b32 %r8182, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8183, %r8170, %r8182;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8186, %r7932, %r8183;
	// end inline asm
	// begin inline asm
	mov.b32 %r8189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8190, %r8170, %r8189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8193, %r7940, %r8190;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8196, %r8172, %r8186, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8200, %r8179, %r8193, %r4383;
	// end inline asm
	shl.b32 	%r8207, %r8200, 4;
	// begin inline asm
	lop3.b32 %r8204, %r4389, %r8196, %r8207, 202;
	// end inline asm
	xor.b32  	%r16220, %r8204, -2004318072;
	// begin inline asm
	mov.b32 %r8211, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8209, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8210, %r8211, %r8209;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8213, %r7948, %r8210;
	// end inline asm
	// begin inline asm
	mov.b32 %r8216, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8217, %r8211, %r8216;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8220, %r7956, %r8217;
	// end inline asm
	// begin inline asm
	mov.b32 %r8223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8224, %r8211, %r8223;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8227, %r7964, %r8224;
	// end inline asm
	// begin inline asm
	mov.b32 %r8230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8231, %r8211, %r8230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8234, %r7972, %r8231;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8237, %r8213, %r8227, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8241, %r8220, %r8234, %r4383;
	// end inline asm
	shl.b32 	%r8248, %r8241, 4;
	// begin inline asm
	lop3.b32 %r8245, %r4389, %r8237, %r8248, 202;
	// end inline asm
	xor.b32  	%r16221, %r8245, -2004318072;
	// begin inline asm
	mov.b32 %r8252, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8250, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8251, %r8252, %r8250;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8254, %r7980, %r8251;
	// end inline asm
	// begin inline asm
	mov.b32 %r8257, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8258, %r8252, %r8257;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8261, %r7988, %r8258;
	// end inline asm
	// begin inline asm
	mov.b32 %r8264, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8265, %r8252, %r8264;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8268, %r7996, %r8265;
	// end inline asm
	// begin inline asm
	mov.b32 %r8271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8272, %r8252, %r8271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8275, %r8004, %r8272;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8278, %r8254, %r8268, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8282, %r8261, %r8275, %r4383;
	// end inline asm
	shl.b32 	%r8289, %r8282, 4;
	// begin inline asm
	lop3.b32 %r8286, %r4389, %r8278, %r8289, 202;
	// end inline asm
	xor.b32  	%r16222, %r8286, -2004318072;
	// begin inline asm
	mov.b32 %r8293, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8292, %r8293, %r8291;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8295, %r8012, %r8292;
	// end inline asm
	// begin inline asm
	mov.b32 %r8298, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8299, %r8293, %r8298;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8302, %r8020, %r8299;
	// end inline asm
	// begin inline asm
	mov.b32 %r8305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8306, %r8293, %r8305;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8309, %r8028, %r8306;
	// end inline asm
	// begin inline asm
	mov.b32 %r8312, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8313, %r8293, %r8312;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8316, %r8036, %r8313;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8319, %r8295, %r8309, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8323, %r8302, %r8316, %r4383;
	// end inline asm
	shl.b32 	%r8330, %r8323, 4;
	// begin inline asm
	lop3.b32 %r8327, %r4389, %r8319, %r8330, 202;
	// end inline asm
	xor.b32  	%r16223, %r8327, -2004318072;
	// begin inline asm
	mov.b32 %r8334, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8332, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8333, %r8334, %r8332;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8336, %r8044, %r8333;
	// end inline asm
	// begin inline asm
	mov.b32 %r8339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8340, %r8334, %r8339;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8343, %r8052, %r8340;
	// end inline asm
	// begin inline asm
	mov.b32 %r8346, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8347, %r8334, %r8346;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8350, %r8060, %r8347;
	// end inline asm
	// begin inline asm
	mov.b32 %r8353, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8354, %r8334, %r8353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8357, %r8068, %r8354;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8360, %r8336, %r8350, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8364, %r8343, %r8357, %r4383;
	// end inline asm
	shl.b32 	%r8371, %r8364, 4;
	// begin inline asm
	lop3.b32 %r8368, %r4389, %r8360, %r8371, 202;
	// end inline asm
	xor.b32  	%r16224, %r8368, -2004318072;
	// begin inline asm
	mov.b32 %r8375, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8374, %r8375, %r8373;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8377, %r8076, %r8374;
	// end inline asm
	// begin inline asm
	mov.b32 %r8380, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8381, %r8375, %r8380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8384, %r8084, %r8381;
	// end inline asm
	// begin inline asm
	mov.b32 %r8387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8388, %r8375, %r8387;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8391, %r8092, %r8388;
	// end inline asm
	// begin inline asm
	mov.b32 %r8394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8395, %r8375, %r8394;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8398, %r8100, %r8395;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8401, %r8377, %r8391, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8405, %r8384, %r8398, %r4383;
	// end inline asm
	shl.b32 	%r8412, %r8405, 4;
	// begin inline asm
	lop3.b32 %r8409, %r4389, %r8401, %r8412, 202;
	// end inline asm
	xor.b32  	%r16225, %r8409, -2004318072;
	// begin inline asm
	mov.b32 %r8416, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8414, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8415, %r8416, %r8414;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8418, %r8108, %r8415;
	// end inline asm
	// begin inline asm
	mov.b32 %r8421, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8422, %r8416, %r8421;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8425, %r8116, %r8422;
	// end inline asm
	// begin inline asm
	mov.b32 %r8428, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8429, %r8416, %r8428;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8432, %r8124, %r8429;
	// end inline asm
	// begin inline asm
	mov.b32 %r8435, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8436, %r8416, %r8435;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8439, %r8132, %r8436;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8442, %r8418, %r8432, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8446, %r8425, %r8439, %r4383;
	// end inline asm
	shl.b32 	%r8453, %r8446, 4;
	// begin inline asm
	lop3.b32 %r8450, %r4389, %r8442, %r8453, 202;
	// end inline asm
	xor.b32  	%r16226, %r8450, -2004318072;
	// begin inline asm
	mov.b32 %r8457, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8456, %r8457, %r8455;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8459, %r8140, %r8456;
	// end inline asm
	// begin inline asm
	mov.b32 %r8462, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8463, %r8457, %r8462;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8466, %r8148, %r8463;
	// end inline asm
	// begin inline asm
	mov.b32 %r8469, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8470, %r8457, %r8469;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8473, %r8156, %r8470;
	// end inline asm
	// begin inline asm
	mov.b32 %r8476, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8477, %r8457, %r8476;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8480, %r8164, %r8477;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8483, %r8459, %r8473, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r8487, %r8466, %r8480, %r4383;
	// end inline asm
	shl.b32 	%r8494, %r8487, 4;
	// begin inline asm
	lop3.b32 %r8491, %r4389, %r8483, %r8494, 202;
	// end inline asm
	xor.b32  	%r16227, %r8491, -2004318072;
	st.shared.u32 	[%rd95], %r16220;
	st.shared.u32 	[%rd97], %r16221;
	st.shared.u32 	[%rd99], %r16222;
	st.shared.u32 	[%rd101], %r16223;
	st.shared.u32 	[%rd103], %r16224;
	st.shared.u32 	[%rd105], %r16225;
	st.shared.u32 	[%rd107], %r16226;
	st.shared.u32 	[%rd109], %r16227;
	ld.shared.u32 	%r16351, [%rd79];
	ld.shared.u32 	%r16352, [%rd81];
	ld.shared.u32 	%r16353, [%rd83];
	ld.shared.u32 	%r16354, [%rd85];
	ld.shared.u32 	%r16363, [%rd87];
	ld.shared.u32 	%r16364, [%rd89];
	ld.shared.u32 	%r16365, [%rd91];
	ld.shared.u32 	%r16366, [%rd93];
	// begin inline asm
	mov.b32 %r8500, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8511, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8499, %r16351, -2004318072;
	// begin inline asm
	lop3.b32 %r8497, %r866, %r8499, %r8500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8502, %r8500, %r8501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8505, %r8497, %r8502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8508, %r877, %r8499, %r8511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8513, %r8511, %r8512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8516, %r8508, %r8513;
	// end inline asm
	shr.u32 	%r8521, %r8499, 8;
	// begin inline asm
	lop3.b32 %r8519, %r866, %r8521, %r8500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8524, %r8500, %r8523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8527, %r8519, %r8524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8530, %r877, %r8521, %r8511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8535, %r8511, %r8534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8538, %r8530, %r8535;
	// end inline asm
	// begin inline asm
	mov.b32 %r8546, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8557, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8545, %r16352, -2004318072;
	// begin inline asm
	lop3.b32 %r8543, %r866, %r8545, %r8546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8548, %r8546, %r8547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8551, %r8543, %r8548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8554, %r877, %r8545, %r8557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8559, %r8557, %r8558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8562, %r8554, %r8559;
	// end inline asm
	shr.u32 	%r8567, %r8545, 8;
	// begin inline asm
	lop3.b32 %r8565, %r866, %r8567, %r8546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8570, %r8546, %r8569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8573, %r8565, %r8570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8576, %r877, %r8567, %r8557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8581, %r8557, %r8580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8584, %r8576, %r8581;
	// end inline asm
	// begin inline asm
	mov.b32 %r8592, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8603, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8591, %r16353, -2004318072;
	// begin inline asm
	lop3.b32 %r8589, %r866, %r8591, %r8592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8594, %r8592, %r8593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8597, %r8589, %r8594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8600, %r877, %r8591, %r8603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8605, %r8603, %r8604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8608, %r8600, %r8605;
	// end inline asm
	shr.u32 	%r8613, %r8591, 8;
	// begin inline asm
	lop3.b32 %r8611, %r866, %r8613, %r8592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8616, %r8592, %r8615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8619, %r8611, %r8616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8622, %r877, %r8613, %r8603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8627, %r8603, %r8626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8630, %r8622, %r8627;
	// end inline asm
	// begin inline asm
	mov.b32 %r8638, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8649, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8637, %r16354, -2004318072;
	// begin inline asm
	lop3.b32 %r8635, %r866, %r8637, %r8638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8640, %r8638, %r8639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8643, %r8635, %r8640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8646, %r877, %r8637, %r8649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8651, %r8649, %r8650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8654, %r8646, %r8651;
	// end inline asm
	shr.u32 	%r8659, %r8637, 8;
	// begin inline asm
	lop3.b32 %r8657, %r866, %r8659, %r8638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8662, %r8638, %r8661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8665, %r8657, %r8662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8668, %r877, %r8659, %r8649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8673, %r8649, %r8672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8676, %r8668, %r8673;
	// end inline asm
	// begin inline asm
	mov.b32 %r8684, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8695, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8683, %r16363, -2004318072;
	// begin inline asm
	lop3.b32 %r8681, %r866, %r8683, %r8684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8686, %r8684, %r8685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8689, %r8681, %r8686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8692, %r877, %r8683, %r8695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8697, %r8695, %r8696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8700, %r8692, %r8697;
	// end inline asm
	shr.u32 	%r8705, %r8683, 8;
	// begin inline asm
	lop3.b32 %r8703, %r866, %r8705, %r8684, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8707, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8708, %r8684, %r8707;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8711, %r8703, %r8708;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8714, %r877, %r8705, %r8695, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8718, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8719, %r8695, %r8718;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8722, %r8714, %r8719;
	// end inline asm
	// begin inline asm
	mov.b32 %r8730, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8741, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8729, %r16364, -2004318072;
	// begin inline asm
	lop3.b32 %r8727, %r866, %r8729, %r8730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8732, %r8730, %r8731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8735, %r8727, %r8732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8738, %r877, %r8729, %r8741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8743, %r8741, %r8742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8746, %r8738, %r8743;
	// end inline asm
	shr.u32 	%r8751, %r8729, 8;
	// begin inline asm
	lop3.b32 %r8749, %r866, %r8751, %r8730, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8753, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8754, %r8730, %r8753;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8757, %r8749, %r8754;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8760, %r877, %r8751, %r8741, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8764, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8765, %r8741, %r8764;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8768, %r8760, %r8765;
	// end inline asm
	// begin inline asm
	mov.b32 %r8776, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8787, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8775, %r16365, -2004318072;
	// begin inline asm
	lop3.b32 %r8773, %r866, %r8775, %r8776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8778, %r8776, %r8777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8781, %r8773, %r8778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8784, %r877, %r8775, %r8787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8789, %r8787, %r8788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8792, %r8784, %r8789;
	// end inline asm
	shr.u32 	%r8797, %r8775, 8;
	// begin inline asm
	lop3.b32 %r8795, %r866, %r8797, %r8776, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8799, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8800, %r8776, %r8799;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8803, %r8795, %r8800;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8806, %r877, %r8797, %r8787, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8810, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8811, %r8787, %r8810;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8814, %r8806, %r8811;
	// end inline asm
	// begin inline asm
	mov.b32 %r8822, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r8833, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r8821, %r16366, -2004318072;
	// begin inline asm
	lop3.b32 %r8819, %r866, %r8821, %r8822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8824, %r8822, %r8823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8827, %r8819, %r8824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8830, %r877, %r8821, %r8833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8835, %r8833, %r8834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8838, %r8830, %r8835;
	// end inline asm
	shr.u32 	%r8843, %r8821, 8;
	// begin inline asm
	lop3.b32 %r8841, %r866, %r8843, %r8822, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8846, %r8822, %r8845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8849, %r8841, %r8846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r8852, %r877, %r8843, %r8833, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r8856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r8857, %r8833, %r8856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r8860, %r8852, %r8857;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8863, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8865, %r8863, %r8505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8868, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8870, %r8868, %r8516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8873, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8875, %r8873, %r8527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8878, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8880, %r8878, %r8538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8883, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8885, %r8883, %r8551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8888, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8890, %r8888, %r8562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8893, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8895, %r8893, %r8573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8898, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8900, %r8898, %r8584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8903, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8905, %r8903, %r8597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8908, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8910, %r8908, %r8608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8913, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8915, %r8913, %r8619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8918, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8920, %r8918, %r8630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8923, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8925, %r8923, %r8643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8928, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8930, %r8928, %r8654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8933, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8935, %r8933, %r8665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8938, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8940, %r8938, %r8676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8943, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8945, %r8943, %r8689;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8948, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8950, %r8948, %r8700;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8953, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8955, %r8953, %r8711;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8958, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8960, %r8958, %r8722;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8963, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8965, %r8963, %r8735;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8968, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8970, %r8968, %r8746;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8973, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8975, %r8973, %r8757;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8978, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8980, %r8978, %r8768;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8983, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8985, %r8983, %r8781;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8988, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8990, %r8988, %r8792;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8993, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r8995, %r8993, %r8803;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r8998, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9000, %r8998, %r8814;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9003, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9005, %r9003, %r8827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9008, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9010, %r9008, %r8838;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9013, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9015, %r9013, %r8849;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9018, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r9020, %r9018, %r8860;
	// end inline asm
	// begin inline asm
	mov.b32 %r9028, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9039, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9025, %r866, %r2451, %r9028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9030, %r9028, %r9029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9033, %r9025, %r9030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9036, %r877, %r2451, %r9039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9041, %r9039, %r9040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9044, %r9036, %r9041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9047, %r866, %r2473, %r9028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9052, %r9028, %r9051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9055, %r9047, %r9052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9058, %r877, %r2473, %r9039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9063, %r9039, %r9062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9066, %r9058, %r9063;
	// end inline asm
	// begin inline asm
	mov.b32 %r9074, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9085, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9071, %r866, %r2497, %r9074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9076, %r9074, %r9075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9079, %r9071, %r9076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9082, %r877, %r2497, %r9085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9087, %r9085, %r9086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9090, %r9082, %r9087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9093, %r866, %r2519, %r9074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9098, %r9074, %r9097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9101, %r9093, %r9098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9104, %r877, %r2519, %r9085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9109, %r9085, %r9108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9112, %r9104, %r9109;
	// end inline asm
	// begin inline asm
	mov.b32 %r9120, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9131, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9117, %r866, %r2543, %r9120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9122, %r9120, %r9121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9125, %r9117, %r9122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9128, %r877, %r2543, %r9131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9133, %r9131, %r9132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9136, %r9128, %r9133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9139, %r866, %r2565, %r9120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9144, %r9120, %r9143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9147, %r9139, %r9144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9150, %r877, %r2565, %r9131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9155, %r9131, %r9154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9158, %r9150, %r9155;
	// end inline asm
	// begin inline asm
	mov.b32 %r9166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9177, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9163, %r866, %r2589, %r9166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9168, %r9166, %r9167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9171, %r9163, %r9168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9174, %r877, %r2589, %r9177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9179, %r9177, %r9178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9182, %r9174, %r9179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9185, %r866, %r2611, %r9166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9190, %r9166, %r9189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9193, %r9185, %r9190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9196, %r877, %r2611, %r9177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9201, %r9177, %r9200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9204, %r9196, %r9201;
	// end inline asm
	// begin inline asm
	mov.b32 %r9212, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9223, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9209, %r866, %r2635, %r9212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9213, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9214, %r9212, %r9213;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9217, %r9209, %r9214;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9220, %r877, %r2635, %r9223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9224, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9225, %r9223, %r9224;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9228, %r9220, %r9225;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9231, %r866, %r2657, %r9212, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9235, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9236, %r9212, %r9235;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9239, %r9231, %r9236;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9242, %r877, %r2657, %r9223, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9246, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9247, %r9223, %r9246;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9250, %r9242, %r9247;
	// end inline asm
	// begin inline asm
	mov.b32 %r9258, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9269, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9255, %r866, %r2681, %r9258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9259, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9260, %r9258, %r9259;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9263, %r9255, %r9260;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9266, %r877, %r2681, %r9269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9270, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9271, %r9269, %r9270;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9274, %r9266, %r9271;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9277, %r866, %r2703, %r9258, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9281, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9282, %r9258, %r9281;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9285, %r9277, %r9282;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9288, %r877, %r2703, %r9269, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9293, %r9269, %r9292;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9296, %r9288, %r9293;
	// end inline asm
	// begin inline asm
	mov.b32 %r9304, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9315, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9301, %r866, %r2727, %r9304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9305, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9306, %r9304, %r9305;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9309, %r9301, %r9306;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9312, %r877, %r2727, %r9315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9316, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9317, %r9315, %r9316;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9320, %r9312, %r9317;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9323, %r866, %r2749, %r9304, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9327, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9328, %r9304, %r9327;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9331, %r9323, %r9328;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9334, %r877, %r2749, %r9315, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9338, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9339, %r9315, %r9338;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9342, %r9334, %r9339;
	// end inline asm
	// begin inline asm
	mov.b32 %r9350, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9361, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9347, %r866, %r2773, %r9350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9351, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9352, %r9350, %r9351;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9355, %r9347, %r9352;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9358, %r877, %r2773, %r9361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9362, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9363, %r9361, %r9362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9366, %r9358, %r9363;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9369, %r866, %r2795, %r9350, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9373, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9374, %r9350, %r9373;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9377, %r9369, %r9374;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9380, %r877, %r2795, %r9361, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9384, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9385, %r9361, %r9384;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9388, %r9380, %r9385;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9391, %r254, %r9033, %r8865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9395, %r254, %r9044, %r8870;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9399, %r254, %r9055, %r8875;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9403, %r254, %r9066, %r8880;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9407, %r254, %r9079, %r8885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9411, %r254, %r9090, %r8890;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9415, %r254, %r9101, %r8895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9419, %r254, %r9112, %r8900;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9423, %r254, %r9125, %r8905;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9427, %r254, %r9136, %r8910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9431, %r254, %r9147, %r8915;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9435, %r254, %r9158, %r8920;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9439, %r254, %r9171, %r8925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9443, %r254, %r9182, %r8930;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9447, %r254, %r9193, %r8935;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9451, %r254, %r9204, %r8940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9455, %r285, %r9217, %r8945;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9459, %r285, %r9228, %r8950;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9463, %r285, %r9239, %r8955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9467, %r285, %r9250, %r8960;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9471, %r285, %r9263, %r8965;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9475, %r285, %r9274, %r8970;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9479, %r285, %r9285, %r8975;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9483, %r285, %r9296, %r8980;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9487, %r285, %r9309, %r8985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9491, %r285, %r9320, %r8990;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9495, %r285, %r9331, %r8995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9499, %r285, %r9342, %r9000;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9503, %r285, %r9355, %r9005;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9507, %r285, %r9366, %r9010;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9511, %r285, %r9377, %r9015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9515, %r285, %r9388, %r9020;
	// end inline asm
	// begin inline asm
	mov.b32 %r9524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9535, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9521, %r866, %r867, %r9524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9526, %r9524, %r9525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9529, %r9521, %r9526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9532, %r877, %r867, %r9535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9537, %r9535, %r9536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9540, %r9532, %r9537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9543, %r866, %r889, %r9524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9548, %r9524, %r9547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9551, %r9543, %r9548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9554, %r877, %r889, %r9535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9559, %r9535, %r9558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9562, %r9554, %r9559;
	// end inline asm
	// begin inline asm
	mov.b32 %r9570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9581, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9567, %r866, %r913, %r9570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9572, %r9570, %r9571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9575, %r9567, %r9572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9578, %r877, %r913, %r9581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9583, %r9581, %r9582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9586, %r9578, %r9583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9589, %r866, %r935, %r9570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9594, %r9570, %r9593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9597, %r9589, %r9594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9600, %r877, %r935, %r9581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9605, %r9581, %r9604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9608, %r9600, %r9605;
	// end inline asm
	// begin inline asm
	mov.b32 %r9616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9627, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9613, %r866, %r959, %r9616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9618, %r9616, %r9617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9621, %r9613, %r9618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9624, %r877, %r959, %r9627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9629, %r9627, %r9628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9632, %r9624, %r9629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9635, %r866, %r981, %r9616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9640, %r9616, %r9639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9643, %r9635, %r9640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9646, %r877, %r981, %r9627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9651, %r9627, %r9650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9654, %r9646, %r9651;
	// end inline asm
	// begin inline asm
	mov.b32 %r9662, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9673, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9659, %r866, %r1005, %r9662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9664, %r9662, %r9663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9667, %r9659, %r9664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9670, %r877, %r1005, %r9673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9675, %r9673, %r9674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9678, %r9670, %r9675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9681, %r866, %r1027, %r9662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9686, %r9662, %r9685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9689, %r9681, %r9686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9692, %r877, %r1027, %r9673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9697, %r9673, %r9696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9700, %r9692, %r9697;
	// end inline asm
	// begin inline asm
	mov.b32 %r9708, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9719, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9705, %r866, %r1051, %r9708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9709, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9710, %r9708, %r9709;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9713, %r9705, %r9710;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9716, %r877, %r1051, %r9719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9720, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9721, %r9719, %r9720;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9724, %r9716, %r9721;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9727, %r866, %r1073, %r9708, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9731, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9732, %r9708, %r9731;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9735, %r9727, %r9732;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9738, %r877, %r1073, %r9719, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9742, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9743, %r9719, %r9742;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9746, %r9738, %r9743;
	// end inline asm
	// begin inline asm
	mov.b32 %r9754, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9765, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9751, %r866, %r1097, %r9754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9755, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9756, %r9754, %r9755;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9759, %r9751, %r9756;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9762, %r877, %r1097, %r9765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9766, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9767, %r9765, %r9766;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9770, %r9762, %r9767;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9773, %r866, %r1119, %r9754, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9777, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9778, %r9754, %r9777;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9781, %r9773, %r9778;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9784, %r877, %r1119, %r9765, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9788, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9789, %r9765, %r9788;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9792, %r9784, %r9789;
	// end inline asm
	// begin inline asm
	mov.b32 %r9800, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9811, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9797, %r866, %r1143, %r9800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9801, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9802, %r9800, %r9801;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9805, %r9797, %r9802;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9808, %r877, %r1143, %r9811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9812, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9813, %r9811, %r9812;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9816, %r9808, %r9813;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9819, %r866, %r1165, %r9800, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9823, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9824, %r9800, %r9823;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9827, %r9819, %r9824;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9830, %r877, %r1165, %r9811, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9834, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9835, %r9811, %r9834;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9838, %r9830, %r9835;
	// end inline asm
	// begin inline asm
	mov.b32 %r9846, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r9857, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r9843, %r866, %r1189, %r9846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9847, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9848, %r9846, %r9847;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9851, %r9843, %r9848;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9854, %r877, %r1189, %r9857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9858, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9859, %r9857, %r9858;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9862, %r9854, %r9859;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9865, %r866, %r1211, %r9846, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9869, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9870, %r9846, %r9869;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9873, %r9865, %r9870;
	// end inline asm
	// begin inline asm
	lop3.b32 %r9876, %r877, %r1211, %r9857, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r9880, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r9881, %r9857, %r9880;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r9884, %r9876, %r9881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9887, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9889, %r9887, %r9529, %r9391;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9893, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9895, %r9893, %r9540, %r9395;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9899, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9901, %r9899, %r9551, %r9399;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9905, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9907, %r9905, %r9562, %r9403;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9911, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9913, %r9911, %r9575, %r9407;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9917, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9919, %r9917, %r9586, %r9411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9923, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9925, %r9923, %r9597, %r9415;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9929, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9931, %r9929, %r9608, %r9419;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9935, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9937, %r9935, %r9621, %r9423;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9941, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9943, %r9941, %r9632, %r9427;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9947, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9949, %r9947, %r9643, %r9431;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9953, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9955, %r9953, %r9654, %r9435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9959, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9961, %r9959, %r9667, %r9439;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9965, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9967, %r9965, %r9678, %r9443;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9971, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9973, %r9971, %r9689, %r9447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9977, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9979, %r9977, %r9700, %r9451;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9983, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9985, %r9983, %r9713, %r9455;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9989, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9991, %r9989, %r9724, %r9459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r9995, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r9997, %r9995, %r9735, %r9463;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10001, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10003, %r10001, %r9746, %r9467;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10007, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10009, %r10007, %r9759, %r9471;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10013, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10015, %r10013, %r9770, %r9475;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10019, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10021, %r10019, %r9781, %r9479;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10025, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10027, %r10025, %r9792, %r9483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10031, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10033, %r10031, %r9805, %r9487;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10037, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10039, %r10037, %r9816, %r9491;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10043, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10045, %r10043, %r9827, %r9495;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10049, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10051, %r10049, %r9838, %r9499;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10055, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10057, %r10055, %r9851, %r9503;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10061, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10063, %r10061, %r9862, %r9507;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10067, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10069, %r10067, %r9873, %r9511;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10073, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10075, %r10073, %r9884, %r9515;
	// end inline asm
	// begin inline asm
	mov.b32 %r10084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10095, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10081, %r866, %r4683, %r10084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10086, %r10084, %r10085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10089, %r10081, %r10086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10092, %r877, %r4683, %r10095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10097, %r10095, %r10096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10100, %r10092, %r10097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10103, %r866, %r4705, %r10084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10108, %r10084, %r10107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10111, %r10103, %r10108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10114, %r877, %r4705, %r10095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10119, %r10095, %r10118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10122, %r10114, %r10119;
	// end inline asm
	// begin inline asm
	mov.b32 %r10130, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10141, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10127, %r866, %r4729, %r10130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10132, %r10130, %r10131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10135, %r10127, %r10132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10138, %r877, %r4729, %r10141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10143, %r10141, %r10142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10146, %r10138, %r10143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10149, %r866, %r4751, %r10130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10154, %r10130, %r10153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10157, %r10149, %r10154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10160, %r877, %r4751, %r10141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10165, %r10141, %r10164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10168, %r10160, %r10165;
	// end inline asm
	// begin inline asm
	mov.b32 %r10176, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10187, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10173, %r866, %r4775, %r10176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10178, %r10176, %r10177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10181, %r10173, %r10178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10184, %r877, %r4775, %r10187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10189, %r10187, %r10188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10192, %r10184, %r10189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10195, %r866, %r4797, %r10176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10200, %r10176, %r10199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10203, %r10195, %r10200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10206, %r877, %r4797, %r10187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10211, %r10187, %r10210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10214, %r10206, %r10211;
	// end inline asm
	// begin inline asm
	mov.b32 %r10222, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10233, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10219, %r866, %r4821, %r10222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10224, %r10222, %r10223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10227, %r10219, %r10224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10230, %r877, %r4821, %r10233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10235, %r10233, %r10234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10238, %r10230, %r10235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10241, %r866, %r4843, %r10222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10246, %r10222, %r10245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10249, %r10241, %r10246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10252, %r877, %r4843, %r10233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10257, %r10233, %r10256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10260, %r10252, %r10257;
	// end inline asm
	// begin inline asm
	mov.b32 %r10268, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10279, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10265, %r866, %r4867, %r10268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10269, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10270, %r10268, %r10269;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10273, %r10265, %r10270;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10276, %r877, %r4867, %r10279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10280, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10281, %r10279, %r10280;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10284, %r10276, %r10281;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10287, %r866, %r4889, %r10268, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10291, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10292, %r10268, %r10291;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10295, %r10287, %r10292;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10298, %r877, %r4889, %r10279, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10302, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10303, %r10279, %r10302;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10306, %r10298, %r10303;
	// end inline asm
	// begin inline asm
	mov.b32 %r10314, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10325, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10311, %r866, %r4913, %r10314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10315, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10316, %r10314, %r10315;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10319, %r10311, %r10316;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10322, %r877, %r4913, %r10325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10326, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10327, %r10325, %r10326;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10330, %r10322, %r10327;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10333, %r866, %r4935, %r10314, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10337, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10338, %r10314, %r10337;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10341, %r10333, %r10338;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10344, %r877, %r4935, %r10325, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10348, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10349, %r10325, %r10348;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10352, %r10344, %r10349;
	// end inline asm
	// begin inline asm
	mov.b32 %r10360, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10371, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10357, %r866, %r4959, %r10360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10361, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10362, %r10360, %r10361;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10365, %r10357, %r10362;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10368, %r877, %r4959, %r10371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10372, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10373, %r10371, %r10372;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10376, %r10368, %r10373;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10379, %r866, %r4981, %r10360, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10383, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10384, %r10360, %r10383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10387, %r10379, %r10384;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10390, %r877, %r4981, %r10371, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10394, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10395, %r10371, %r10394;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10398, %r10390, %r10395;
	// end inline asm
	// begin inline asm
	mov.b32 %r10406, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r10417, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r10403, %r866, %r5005, %r10406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10407, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10408, %r10406, %r10407;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10411, %r10403, %r10408;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10414, %r877, %r5005, %r10417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10418, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10419, %r10417, %r10418;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10422, %r10414, %r10419;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10425, %r866, %r5027, %r10406, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10429, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10430, %r10406, %r10429;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10433, %r10425, %r10430;
	// end inline asm
	// begin inline asm
	lop3.b32 %r10436, %r877, %r5027, %r10417, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r10440, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r10441, %r10417, %r10440;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r10444, %r10436, %r10441;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10582, %r378, %r10089, %r9889;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10579, %r378, %r10100, %r9895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10591, %r378, %r10111, %r9901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10588, %r378, %r10122, %r9907;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10600, %r378, %r10135, %r9913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10597, %r378, %r10146, %r9919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10609, %r378, %r10157, %r9925;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10606, %r378, %r10168, %r9931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10618, %r378, %r10181, %r9937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10615, %r378, %r10192, %r9943;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10627, %r378, %r10203, %r9949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10624, %r378, %r10214, %r9955;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10636, %r378, %r10227, %r9961;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10633, %r378, %r10238, %r9967;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10645, %r378, %r10249, %r9973;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10642, %r378, %r10260, %r9979;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10654, %r409, %r10273, %r9985;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10651, %r409, %r10284, %r9991;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10663, %r409, %r10295, %r9997;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10660, %r409, %r10306, %r10003;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10672, %r409, %r10319, %r10009;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10669, %r409, %r10330, %r10015;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10681, %r409, %r10341, %r10021;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10678, %r409, %r10352, %r10027;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10690, %r409, %r10365, %r10033;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10687, %r409, %r10376, %r10039;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10699, %r409, %r10387, %r10045;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10696, %r409, %r10398, %r10051;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10708, %r409, %r10411, %r10057;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10705, %r409, %r10422, %r10063;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10717, %r409, %r10433, %r10069;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10714, %r409, %r10444, %r10075;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10575, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10577, %r10575, %r10579;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10580, %r474, %r10582, %r10577;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10584, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10586, %r10584, %r10588;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10589, %r474, %r10591, %r10586;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10593, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10595, %r10593, %r10597;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10598, %r474, %r10600, %r10595;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10602, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10604, %r10602, %r10606;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10607, %r474, %r10609, %r10604;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10611, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10613, %r10611, %r10615;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10616, %r474, %r10618, %r10613;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10620, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10622, %r10620, %r10624;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10625, %r474, %r10627, %r10622;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10629, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10631, %r10629, %r10633;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10634, %r474, %r10636, %r10631;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10638, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10640, %r10638, %r10642;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10643, %r474, %r10645, %r10640;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10647, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10649, %r10647, %r10651;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10652, %r477, %r10654, %r10649;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10656, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10658, %r10656, %r10660;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10661, %r477, %r10663, %r10658;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10665, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10667, %r10665, %r10669;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10670, %r477, %r10672, %r10667;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10674, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10676, %r10674, %r10678;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10679, %r477, %r10681, %r10676;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10683, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10685, %r10683, %r10687;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10688, %r477, %r10690, %r10685;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10692, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10694, %r10692, %r10696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10697, %r477, %r10699, %r10694;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10701, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10703, %r10701, %r10705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10706, %r477, %r10708, %r10703;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10710, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10712, %r10710, %r10714;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10715, %r477, %r10717, %r10712;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10719, %r480, %r10582;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10722, %r474, %r10579, %r10719;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10726, %r480, %r10591;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10729, %r474, %r10588, %r10726;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10733, %r480, %r10600;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10736, %r474, %r10597, %r10733;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10740, %r480, %r10609;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10743, %r474, %r10606, %r10740;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10747, %r480, %r10618;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10750, %r474, %r10615, %r10747;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10754, %r480, %r10627;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10757, %r474, %r10624, %r10754;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10761, %r480, %r10636;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10764, %r474, %r10633, %r10761;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10768, %r480, %r10645;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10771, %r474, %r10642, %r10768;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10775, %r483, %r10654;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10778, %r477, %r10651, %r10775;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10782, %r483, %r10663;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10785, %r477, %r10660, %r10782;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10789, %r483, %r10672;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10792, %r477, %r10669, %r10789;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10796, %r483, %r10681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10799, %r477, %r10678, %r10796;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10803, %r483, %r10690;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10806, %r477, %r10687, %r10803;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10810, %r483, %r10699;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10813, %r477, %r10696, %r10810;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10817, %r483, %r10708;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10820, %r477, %r10705, %r10817;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10824, %r483, %r10717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10827, %r477, %r10714, %r10824;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r10998, %r10995}, {%r486, %r492, %r489, %r495}, {%r10580, %r10722}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11007, %r11004}, {%r486, %r492, %r489, %r495}, {%r10589, %r10729}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11016, %r11013}, {%r486, %r492, %r489, %r495}, {%r10598, %r10736}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11025, %r11022}, {%r486, %r492, %r489, %r495}, {%r10607, %r10743}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11034, %r11031}, {%r486, %r492, %r489, %r495}, {%r10616, %r10750}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11043, %r11040}, {%r486, %r492, %r489, %r495}, {%r10625, %r10757}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11052, %r11049}, {%r486, %r492, %r489, %r495}, {%r10634, %r10764}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11061, %r11058}, {%r486, %r492, %r489, %r495}, {%r10643, %r10771}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11070, %r11067}, {%r486, %r492, %r489, %r495}, {%r10652, %r10778}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11079, %r11076}, {%r486, %r492, %r489, %r495}, {%r10661, %r10785}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11088, %r11085}, {%r486, %r492, %r489, %r495}, {%r10670, %r10792}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11097, %r11094}, {%r486, %r492, %r489, %r495}, {%r10679, %r10799}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11106, %r11103}, {%r486, %r492, %r489, %r495}, {%r10688, %r10806}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11115, %r11112}, {%r486, %r492, %r489, %r495}, {%r10697, %r10813}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11124, %r11121}, {%r486, %r492, %r489, %r495}, {%r10706, %r10820}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11133, %r11130}, {%r486, %r492, %r489, %r495}, {%r10715, %r10827}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r10991, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r10993, %r10991, %r10995;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r10996, %r498, %r10998, %r10993;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11000, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11002, %r11000, %r11004;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11005, %r498, %r11007, %r11002;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11009, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11011, %r11009, %r11013;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11014, %r498, %r11016, %r11011;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11018, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11020, %r11018, %r11022;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11023, %r498, %r11025, %r11020;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11027, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11029, %r11027, %r11031;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11032, %r498, %r11034, %r11029;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11036, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11038, %r11036, %r11040;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11041, %r498, %r11043, %r11038;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11045, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11047, %r11045, %r11049;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11050, %r498, %r11052, %r11047;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11054, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11056, %r11054, %r11058;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11059, %r498, %r11061, %r11056;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11063, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11065, %r11063, %r11067;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11068, %r498, %r11070, %r11065;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11072, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11074, %r11072, %r11076;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11077, %r498, %r11079, %r11074;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11081, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11083, %r11081, %r11085;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11086, %r498, %r11088, %r11083;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11090, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11092, %r11090, %r11094;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11095, %r498, %r11097, %r11092;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11099, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11101, %r11099, %r11103;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11104, %r498, %r11106, %r11101;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11108, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11110, %r11108, %r11112;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11113, %r498, %r11115, %r11110;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11117, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11119, %r11117, %r11121;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11122, %r498, %r11124, %r11119;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r11126, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11128, %r11126, %r11130;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11131, %r498, %r11133, %r11128;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11135, %r501, %r10998;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11138, %r498, %r10995, %r11135;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11142, %r501, %r11007;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11145, %r498, %r11004, %r11142;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11149, %r501, %r11016;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11152, %r498, %r11013, %r11149;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11156, %r501, %r11025;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11159, %r498, %r11022, %r11156;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11163, %r501, %r11034;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11166, %r498, %r11031, %r11163;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11170, %r501, %r11043;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11173, %r498, %r11040, %r11170;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11177, %r501, %r11052;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11180, %r498, %r11049, %r11177;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11184, %r501, %r11061;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11187, %r498, %r11058, %r11184;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11191, %r501, %r11070;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11194, %r498, %r11067, %r11191;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11198, %r501, %r11079;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11201, %r498, %r11076, %r11198;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11205, %r501, %r11088;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11208, %r498, %r11085, %r11205;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11212, %r501, %r11097;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11215, %r498, %r11094, %r11212;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11219, %r501, %r11106;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11222, %r498, %r11103, %r11219;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11226, %r501, %r11115;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11229, %r498, %r11112, %r11226;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11233, %r501, %r11124;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11236, %r498, %r11121, %r11233;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11240, %r501, %r11133;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r11243, %r498, %r11130, %r11240;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11536, %r11539}, {%r504, %r510, %r507, %r513}, {%r10996, %r11138}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11542, %r11545}, {%r504, %r510, %r507, %r513}, {%r11005, %r11145}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11548, %r11551}, {%r504, %r510, %r507, %r513}, {%r11014, %r11152}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11554, %r11557}, {%r504, %r510, %r507, %r513}, {%r11023, %r11159}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11560, %r11563}, {%r504, %r510, %r507, %r513}, {%r11032, %r11166}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11566, %r11569}, {%r504, %r510, %r507, %r513}, {%r11041, %r11173}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11572, %r11575}, {%r504, %r510, %r507, %r513}, {%r11050, %r11180}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11578, %r11581}, {%r504, %r510, %r507, %r513}, {%r11059, %r11187}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11537, %r11540}, {%r504, %r510, %r507, %r513}, {%r11068, %r11194}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11543, %r11546}, {%r504, %r510, %r507, %r513}, {%r11077, %r11201}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11549, %r11552}, {%r504, %r510, %r507, %r513}, {%r11086, %r11208}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11555, %r11558}, {%r504, %r510, %r507, %r513}, {%r11095, %r11215}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11561, %r11564}, {%r504, %r510, %r507, %r513}, {%r11104, %r11222}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11567, %r11570}, {%r504, %r510, %r507, %r513}, {%r11113, %r11229}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11573, %r11576}, {%r504, %r510, %r507, %r513}, {%r11122, %r11236}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r11579, %r11582}, {%r504, %r510, %r507, %r513}, {%r11131, %r11243}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11535, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11538, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11541, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11544, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11547, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11550, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11553, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11556, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11559, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11562, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11565, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11568, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11571, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11574, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11577, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11580, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11583, %r11536, %r11537;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11586, %r11539, %r11540;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11589, %r11542, %r11543;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11592, %r11545, %r11546;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11595, %r11548, %r11549;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11598, %r11551, %r11552;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11601, %r11554, %r11555;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11604, %r11557, %r11558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11607, %r11560, %r11561;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11610, %r11563, %r11564;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11613, %r11566, %r11567;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11616, %r11569, %r11570;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11619, %r11572, %r11573;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11622, %r11575, %r11576;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11625, %r11578, %r11579;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r11628, %r11581, %r11582;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11631, %r148, %r11535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11634, %r148, %r11538;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11637, %r148, %r11541;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11640, %r148, %r11544;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11643, %r148, %r11547;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11646, %r148, %r11550;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11649, %r148, %r11553;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11652, %r148, %r11556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11655, %r148, %r11559;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11658, %r148, %r11562;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11661, %r148, %r11565;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11664, %r148, %r11568;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11667, %r148, %r11571;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11670, %r148, %r11574;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11673, %r148, %r11577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11676, %r148, %r11580;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11679, %r150, %r11583;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11682, %r150, %r11586;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11685, %r150, %r11589;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11688, %r150, %r11592;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11691, %r150, %r11595;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11694, %r150, %r11598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11697, %r150, %r11601;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11700, %r150, %r11604;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11703, %r150, %r11607;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11706, %r150, %r11610;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11709, %r150, %r11613;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11712, %r150, %r11616;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11715, %r150, %r11619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11718, %r150, %r11622;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11721, %r150, %r11625;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r11724, %r150, %r11628;
	// end inline asm
	// begin inline asm
	mov.b32 %r11727, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11728, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11729, %r11631, %r11727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11732, %r11729, %r11728;
	// end inline asm
	// begin inline asm
	mov.b32 %r11735, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11736, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11737, %r11634, %r11735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11740, %r11737, %r11736;
	// end inline asm
	// begin inline asm
	mov.b32 %r11743, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11744, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11745, %r11637, %r11743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11748, %r11745, %r11744;
	// end inline asm
	// begin inline asm
	mov.b32 %r11751, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11752, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11753, %r11640, %r11751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11756, %r11753, %r11752;
	// end inline asm
	// begin inline asm
	mov.b32 %r11759, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11760, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11761, %r11643, %r11759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11764, %r11761, %r11760;
	// end inline asm
	// begin inline asm
	mov.b32 %r11767, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11768, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11769, %r11646, %r11767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11772, %r11769, %r11768;
	// end inline asm
	// begin inline asm
	mov.b32 %r11775, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11776, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11777, %r11649, %r11775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11780, %r11777, %r11776;
	// end inline asm
	// begin inline asm
	mov.b32 %r11783, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11784, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11785, %r11652, %r11783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11788, %r11785, %r11784;
	// end inline asm
	// begin inline asm
	mov.b32 %r11791, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11792, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11793, %r11655, %r11791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11796, %r11793, %r11792;
	// end inline asm
	// begin inline asm
	mov.b32 %r11799, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11800, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11801, %r11658, %r11799;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11804, %r11801, %r11800;
	// end inline asm
	// begin inline asm
	mov.b32 %r11807, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11808, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11809, %r11661, %r11807;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11812, %r11809, %r11808;
	// end inline asm
	// begin inline asm
	mov.b32 %r11815, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11816, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11817, %r11664, %r11815;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11820, %r11817, %r11816;
	// end inline asm
	// begin inline asm
	mov.b32 %r11823, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11824, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11825, %r11667, %r11823;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11828, %r11825, %r11824;
	// end inline asm
	// begin inline asm
	mov.b32 %r11831, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11832, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11833, %r11670, %r11831;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11836, %r11833, %r11832;
	// end inline asm
	// begin inline asm
	mov.b32 %r11839, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11840, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11841, %r11673, %r11839;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11844, %r11841, %r11840;
	// end inline asm
	// begin inline asm
	mov.b32 %r11847, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11848, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11849, %r11676, %r11847;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11852, %r11849, %r11848;
	// end inline asm
	// begin inline asm
	mov.b32 %r11855, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11856, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11857, %r11679, %r11855;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11860, %r11857, %r11856;
	// end inline asm
	// begin inline asm
	mov.b32 %r11863, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11864, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11865, %r11682, %r11863;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11868, %r11865, %r11864;
	// end inline asm
	// begin inline asm
	mov.b32 %r11871, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11872, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11873, %r11685, %r11871;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11876, %r11873, %r11872;
	// end inline asm
	// begin inline asm
	mov.b32 %r11879, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11880, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11881, %r11688, %r11879;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11884, %r11881, %r11880;
	// end inline asm
	// begin inline asm
	mov.b32 %r11887, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11888, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11889, %r11691, %r11887;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11892, %r11889, %r11888;
	// end inline asm
	// begin inline asm
	mov.b32 %r11895, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11896, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11897, %r11694, %r11895;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11900, %r11897, %r11896;
	// end inline asm
	// begin inline asm
	mov.b32 %r11903, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11904, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11905, %r11697, %r11903;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11908, %r11905, %r11904;
	// end inline asm
	// begin inline asm
	mov.b32 %r11911, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11912, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11913, %r11700, %r11911;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11916, %r11913, %r11912;
	// end inline asm
	// begin inline asm
	mov.b32 %r11919, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11920, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11921, %r11703, %r11919;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11924, %r11921, %r11920;
	// end inline asm
	// begin inline asm
	mov.b32 %r11927, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11928, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11929, %r11706, %r11927;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11932, %r11929, %r11928;
	// end inline asm
	// begin inline asm
	mov.b32 %r11935, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11936, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11937, %r11709, %r11935;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11940, %r11937, %r11936;
	// end inline asm
	// begin inline asm
	mov.b32 %r11943, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11944, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11945, %r11712, %r11943;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11948, %r11945, %r11944;
	// end inline asm
	// begin inline asm
	mov.b32 %r11951, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11952, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11953, %r11715, %r11951;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11956, %r11953, %r11952;
	// end inline asm
	// begin inline asm
	mov.b32 %r11959, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11960, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11961, %r11718, %r11959;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11964, %r11961, %r11960;
	// end inline asm
	// begin inline asm
	mov.b32 %r11967, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11968, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11969, %r11721, %r11967;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11972, %r11969, %r11968;
	// end inline asm
	// begin inline asm
	mov.b32 %r11975, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r11976, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r11977, %r11724, %r11975;
	// end inline asm
	// begin inline asm
	min.f16x2 %r11980, %r11977, %r11976;
	// end inline asm
	// begin inline asm
	mov.b32 %r11986, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r11984, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11985, %r11986, %r11984;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11988, %r11732, %r11985;
	// end inline asm
	// begin inline asm
	mov.b32 %r11991, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11992, %r11986, %r11991;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11995, %r11740, %r11992;
	// end inline asm
	// begin inline asm
	mov.b32 %r11998, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r11999, %r11986, %r11998;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12002, %r11748, %r11999;
	// end inline asm
	// begin inline asm
	mov.b32 %r12005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12006, %r11986, %r12005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12009, %r11756, %r12006;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12012, %r11988, %r12002, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12016, %r11995, %r12009, %r4383;
	// end inline asm
	shl.b32 	%r12023, %r12016, 4;
	// begin inline asm
	lop3.b32 %r12020, %r4389, %r12012, %r12023, 202;
	// end inline asm
	xor.b32  	%r16228, %r12020, -2004318072;
	// begin inline asm
	mov.b32 %r12027, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12025, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12026, %r12027, %r12025;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12029, %r11764, %r12026;
	// end inline asm
	// begin inline asm
	mov.b32 %r12032, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12033, %r12027, %r12032;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12036, %r11772, %r12033;
	// end inline asm
	// begin inline asm
	mov.b32 %r12039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12040, %r12027, %r12039;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12043, %r11780, %r12040;
	// end inline asm
	// begin inline asm
	mov.b32 %r12046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12047, %r12027, %r12046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12050, %r11788, %r12047;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12053, %r12029, %r12043, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12057, %r12036, %r12050, %r4383;
	// end inline asm
	shl.b32 	%r12064, %r12057, 4;
	// begin inline asm
	lop3.b32 %r12061, %r4389, %r12053, %r12064, 202;
	// end inline asm
	xor.b32  	%r16229, %r12061, -2004318072;
	// begin inline asm
	mov.b32 %r12068, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12066, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12067, %r12068, %r12066;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12070, %r11796, %r12067;
	// end inline asm
	// begin inline asm
	mov.b32 %r12073, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12074, %r12068, %r12073;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12077, %r11804, %r12074;
	// end inline asm
	// begin inline asm
	mov.b32 %r12080, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12081, %r12068, %r12080;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12084, %r11812, %r12081;
	// end inline asm
	// begin inline asm
	mov.b32 %r12087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12088, %r12068, %r12087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12091, %r11820, %r12088;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12094, %r12070, %r12084, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12098, %r12077, %r12091, %r4383;
	// end inline asm
	shl.b32 	%r12105, %r12098, 4;
	// begin inline asm
	lop3.b32 %r12102, %r4389, %r12094, %r12105, 202;
	// end inline asm
	xor.b32  	%r16230, %r12102, -2004318072;
	// begin inline asm
	mov.b32 %r12109, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12108, %r12109, %r12107;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12111, %r11828, %r12108;
	// end inline asm
	// begin inline asm
	mov.b32 %r12114, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12115, %r12109, %r12114;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12118, %r11836, %r12115;
	// end inline asm
	// begin inline asm
	mov.b32 %r12121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12122, %r12109, %r12121;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12125, %r11844, %r12122;
	// end inline asm
	// begin inline asm
	mov.b32 %r12128, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12129, %r12109, %r12128;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12132, %r11852, %r12129;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12135, %r12111, %r12125, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12139, %r12118, %r12132, %r4383;
	// end inline asm
	shl.b32 	%r12146, %r12139, 4;
	// begin inline asm
	lop3.b32 %r12143, %r4389, %r12135, %r12146, 202;
	// end inline asm
	xor.b32  	%r16231, %r12143, -2004318072;
	// begin inline asm
	mov.b32 %r12150, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12148, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12149, %r12150, %r12148;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12152, %r11860, %r12149;
	// end inline asm
	// begin inline asm
	mov.b32 %r12155, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12156, %r12150, %r12155;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12159, %r11868, %r12156;
	// end inline asm
	// begin inline asm
	mov.b32 %r12162, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12163, %r12150, %r12162;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12166, %r11876, %r12163;
	// end inline asm
	// begin inline asm
	mov.b32 %r12169, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12170, %r12150, %r12169;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12173, %r11884, %r12170;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12176, %r12152, %r12166, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12180, %r12159, %r12173, %r4383;
	// end inline asm
	shl.b32 	%r12187, %r12180, 4;
	// begin inline asm
	lop3.b32 %r12184, %r4389, %r12176, %r12187, 202;
	// end inline asm
	xor.b32  	%r16232, %r12184, -2004318072;
	// begin inline asm
	mov.b32 %r12191, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12190, %r12191, %r12189;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12193, %r11892, %r12190;
	// end inline asm
	// begin inline asm
	mov.b32 %r12196, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12197, %r12191, %r12196;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12200, %r11900, %r12197;
	// end inline asm
	// begin inline asm
	mov.b32 %r12203, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12204, %r12191, %r12203;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12207, %r11908, %r12204;
	// end inline asm
	// begin inline asm
	mov.b32 %r12210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12211, %r12191, %r12210;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12214, %r11916, %r12211;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12217, %r12193, %r12207, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12221, %r12200, %r12214, %r4383;
	// end inline asm
	shl.b32 	%r12228, %r12221, 4;
	// begin inline asm
	lop3.b32 %r12225, %r4389, %r12217, %r12228, 202;
	// end inline asm
	xor.b32  	%r16233, %r12225, -2004318072;
	// begin inline asm
	mov.b32 %r12232, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12230, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12231, %r12232, %r12230;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12234, %r11924, %r12231;
	// end inline asm
	// begin inline asm
	mov.b32 %r12237, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12238, %r12232, %r12237;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12241, %r11932, %r12238;
	// end inline asm
	// begin inline asm
	mov.b32 %r12244, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12245, %r12232, %r12244;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12248, %r11940, %r12245;
	// end inline asm
	// begin inline asm
	mov.b32 %r12251, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12252, %r12232, %r12251;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12255, %r11948, %r12252;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12258, %r12234, %r12248, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12262, %r12241, %r12255, %r4383;
	// end inline asm
	shl.b32 	%r12269, %r12262, 4;
	// begin inline asm
	lop3.b32 %r12266, %r4389, %r12258, %r12269, 202;
	// end inline asm
	xor.b32  	%r16234, %r12266, -2004318072;
	// begin inline asm
	mov.b32 %r12273, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12271, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12272, %r12273, %r12271;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12275, %r11956, %r12272;
	// end inline asm
	// begin inline asm
	mov.b32 %r12278, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12279, %r12273, %r12278;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12282, %r11964, %r12279;
	// end inline asm
	// begin inline asm
	mov.b32 %r12285, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12286, %r12273, %r12285;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12289, %r11972, %r12286;
	// end inline asm
	// begin inline asm
	mov.b32 %r12292, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12293, %r12273, %r12292;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12296, %r11980, %r12293;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12299, %r12275, %r12289, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r12303, %r12282, %r12296, %r4383;
	// end inline asm
	shl.b32 	%r12310, %r12303, 4;
	// begin inline asm
	lop3.b32 %r12307, %r4389, %r12299, %r12310, 202;
	// end inline asm
	xor.b32  	%r16235, %r12307, -2004318072;
	st.shared.u32 	[%rd95], %r16228;
	st.shared.u32 	[%rd97], %r16229;
	st.shared.u32 	[%rd99], %r16230;
	st.shared.u32 	[%rd101], %r16231;
	st.shared.u32 	[%rd103], %r16232;
	st.shared.u32 	[%rd105], %r16233;
	st.shared.u32 	[%rd107], %r16234;
	st.shared.u32 	[%rd109], %r16235;
	ld.shared.u32 	%r16355, [%rd79];
	ld.shared.u32 	%r16356, [%rd81];
	ld.shared.u32 	%r16357, [%rd83];
	ld.shared.u32 	%r16358, [%rd85];
	ld.shared.u32 	%r16367, [%rd87];
	ld.shared.u32 	%r16368, [%rd89];
	ld.shared.u32 	%r16369, [%rd91];
	ld.shared.u32 	%r16370, [%rd93];
	// begin inline asm
	mov.b32 %r12316, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12327, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12315, %r16355, -2004318072;
	// begin inline asm
	lop3.b32 %r12313, %r866, %r12315, %r12316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12317, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12318, %r12316, %r12317;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12321, %r12313, %r12318;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12324, %r877, %r12315, %r12327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12328, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12329, %r12327, %r12328;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12332, %r12324, %r12329;
	// end inline asm
	shr.u32 	%r12337, %r12315, 8;
	// begin inline asm
	lop3.b32 %r12335, %r866, %r12337, %r12316, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12339, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12340, %r12316, %r12339;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12343, %r12335, %r12340;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12346, %r877, %r12337, %r12327, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12350, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12351, %r12327, %r12350;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12354, %r12346, %r12351;
	// end inline asm
	// begin inline asm
	mov.b32 %r12362, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12373, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12361, %r16356, -2004318072;
	// begin inline asm
	lop3.b32 %r12359, %r866, %r12361, %r12362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12364, %r12362, %r12363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12367, %r12359, %r12364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12370, %r877, %r12361, %r12373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12375, %r12373, %r12374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12378, %r12370, %r12375;
	// end inline asm
	shr.u32 	%r12383, %r12361, 8;
	// begin inline asm
	lop3.b32 %r12381, %r866, %r12383, %r12362, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12385, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12386, %r12362, %r12385;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12389, %r12381, %r12386;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12392, %r877, %r12383, %r12373, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12396, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12397, %r12373, %r12396;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12400, %r12392, %r12397;
	// end inline asm
	// begin inline asm
	mov.b32 %r12408, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12419, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12407, %r16357, -2004318072;
	// begin inline asm
	lop3.b32 %r12405, %r866, %r12407, %r12408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12410, %r12408, %r12409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12413, %r12405, %r12410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12416, %r877, %r12407, %r12419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12421, %r12419, %r12420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12424, %r12416, %r12421;
	// end inline asm
	shr.u32 	%r12429, %r12407, 8;
	// begin inline asm
	lop3.b32 %r12427, %r866, %r12429, %r12408, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12431, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12432, %r12408, %r12431;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12435, %r12427, %r12432;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12438, %r877, %r12429, %r12419, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12442, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12443, %r12419, %r12442;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12446, %r12438, %r12443;
	// end inline asm
	// begin inline asm
	mov.b32 %r12454, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12465, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12453, %r16358, -2004318072;
	// begin inline asm
	lop3.b32 %r12451, %r866, %r12453, %r12454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12456, %r12454, %r12455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12459, %r12451, %r12456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12462, %r877, %r12453, %r12465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12467, %r12465, %r12466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12470, %r12462, %r12467;
	// end inline asm
	shr.u32 	%r12475, %r12453, 8;
	// begin inline asm
	lop3.b32 %r12473, %r866, %r12475, %r12454, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12477, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12478, %r12454, %r12477;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12481, %r12473, %r12478;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12484, %r877, %r12475, %r12465, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12488, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12489, %r12465, %r12488;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12492, %r12484, %r12489;
	// end inline asm
	// begin inline asm
	mov.b32 %r12500, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12511, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12499, %r16367, -2004318072;
	// begin inline asm
	lop3.b32 %r12497, %r866, %r12499, %r12500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12502, %r12500, %r12501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12505, %r12497, %r12502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12508, %r877, %r12499, %r12511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12513, %r12511, %r12512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12516, %r12508, %r12513;
	// end inline asm
	shr.u32 	%r12521, %r12499, 8;
	// begin inline asm
	lop3.b32 %r12519, %r866, %r12521, %r12500, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12523, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12524, %r12500, %r12523;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12527, %r12519, %r12524;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12530, %r877, %r12521, %r12511, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12534, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12535, %r12511, %r12534;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12538, %r12530, %r12535;
	// end inline asm
	// begin inline asm
	mov.b32 %r12546, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12557, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12545, %r16368, -2004318072;
	// begin inline asm
	lop3.b32 %r12543, %r866, %r12545, %r12546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12548, %r12546, %r12547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12551, %r12543, %r12548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12554, %r877, %r12545, %r12557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12559, %r12557, %r12558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12562, %r12554, %r12559;
	// end inline asm
	shr.u32 	%r12567, %r12545, 8;
	// begin inline asm
	lop3.b32 %r12565, %r866, %r12567, %r12546, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12569, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12570, %r12546, %r12569;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12573, %r12565, %r12570;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12576, %r877, %r12567, %r12557, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12580, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12581, %r12557, %r12580;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12584, %r12576, %r12581;
	// end inline asm
	// begin inline asm
	mov.b32 %r12592, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12603, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12591, %r16369, -2004318072;
	// begin inline asm
	lop3.b32 %r12589, %r866, %r12591, %r12592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12594, %r12592, %r12593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12597, %r12589, %r12594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12600, %r877, %r12591, %r12603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12605, %r12603, %r12604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12608, %r12600, %r12605;
	// end inline asm
	shr.u32 	%r12613, %r12591, 8;
	// begin inline asm
	lop3.b32 %r12611, %r866, %r12613, %r12592, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12615, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12616, %r12592, %r12615;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12619, %r12611, %r12616;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12622, %r877, %r12613, %r12603, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12626, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12627, %r12603, %r12626;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12630, %r12622, %r12627;
	// end inline asm
	// begin inline asm
	mov.b32 %r12638, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12649, {%rs2173, %rs2173};
	// end inline asm
	xor.b32  	%r12637, %r16370, -2004318072;
	// begin inline asm
	lop3.b32 %r12635, %r866, %r12637, %r12638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12640, %r12638, %r12639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12643, %r12635, %r12640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12646, %r877, %r12637, %r12649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12651, %r12649, %r12650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12654, %r12646, %r12651;
	// end inline asm
	shr.u32 	%r12659, %r12637, 8;
	// begin inline asm
	lop3.b32 %r12657, %r866, %r12659, %r12638, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12661, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12662, %r12638, %r12661;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12665, %r12657, %r12662;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12668, %r877, %r12659, %r12649, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12672, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12673, %r12649, %r12672;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12676, %r12668, %r12673;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12679, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12681, %r12679, %r12321;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12684, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12686, %r12684, %r12332;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12689, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12691, %r12689, %r12343;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12694, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12696, %r12694, %r12354;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12699, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12701, %r12699, %r12367;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12704, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12706, %r12704, %r12378;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12709, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12711, %r12709, %r12389;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12714, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12716, %r12714, %r12400;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12719, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12721, %r12719, %r12413;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12724, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12726, %r12724, %r12424;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12729, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12731, %r12729, %r12435;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12734, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12736, %r12734, %r12446;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12739, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12741, %r12739, %r12459;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12744, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12746, %r12744, %r12470;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12749, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12751, %r12749, %r12481;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12754, %r440;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12756, %r12754, %r12492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12759, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12761, %r12759, %r12505;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12764, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12766, %r12764, %r12516;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12769, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12771, %r12769, %r12527;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12774, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12776, %r12774, %r12538;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12779, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12781, %r12779, %r12551;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12784, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12786, %r12784, %r12562;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12789, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12791, %r12789, %r12573;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12794, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12796, %r12794, %r12584;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12799, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12801, %r12799, %r12597;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12804, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12806, %r12804, %r12608;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12809, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12811, %r12809, %r12619;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12814, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12816, %r12814, %r12630;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12819, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12821, %r12819, %r12643;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12824, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12826, %r12824, %r12654;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12829, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12831, %r12829, %r12665;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r12834, %r471;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r12836, %r12834, %r12676;
	// end inline asm
	// begin inline asm
	mov.b32 %r12844, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12855, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12841, %r866, %r867, %r12844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12845, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12846, %r12844, %r12845;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12849, %r12841, %r12846;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12852, %r877, %r867, %r12855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12856, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12857, %r12855, %r12856;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12860, %r12852, %r12857;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12863, %r866, %r889, %r12844, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12867, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12868, %r12844, %r12867;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12871, %r12863, %r12868;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12874, %r877, %r889, %r12855, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12878, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12879, %r12855, %r12878;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12882, %r12874, %r12879;
	// end inline asm
	// begin inline asm
	mov.b32 %r12890, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12901, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12887, %r866, %r913, %r12890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12891, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12892, %r12890, %r12891;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12895, %r12887, %r12892;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12898, %r877, %r913, %r12901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12902, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12903, %r12901, %r12902;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12906, %r12898, %r12903;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12909, %r866, %r935, %r12890, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12913, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12914, %r12890, %r12913;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12917, %r12909, %r12914;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12920, %r877, %r935, %r12901, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12924, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12925, %r12901, %r12924;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12928, %r12920, %r12925;
	// end inline asm
	// begin inline asm
	mov.b32 %r12936, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12947, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12933, %r866, %r959, %r12936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12938, %r12936, %r12937;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12941, %r12933, %r12938;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12944, %r877, %r959, %r12947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12948, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12949, %r12947, %r12948;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12952, %r12944, %r12949;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12955, %r866, %r981, %r12936, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12959, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12960, %r12936, %r12959;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12963, %r12955, %r12960;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12966, %r877, %r981, %r12947, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12970, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12971, %r12947, %r12970;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12974, %r12966, %r12971;
	// end inline asm
	// begin inline asm
	mov.b32 %r12982, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r12993, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r12979, %r866, %r1005, %r12982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12983, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12984, %r12982, %r12983;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12987, %r12979, %r12984;
	// end inline asm
	// begin inline asm
	lop3.b32 %r12990, %r877, %r1005, %r12993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r12994, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r12995, %r12993, %r12994;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r12998, %r12990, %r12995;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13001, %r866, %r1027, %r12982, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13006, %r12982, %r13005;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13009, %r13001, %r13006;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13012, %r877, %r1027, %r12993, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13016, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13017, %r12993, %r13016;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13020, %r13012, %r13017;
	// end inline asm
	// begin inline asm
	mov.b32 %r13028, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13039, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13025, %r866, %r1051, %r13028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13029, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13030, %r13028, %r13029;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13033, %r13025, %r13030;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13036, %r877, %r1051, %r13039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13040, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13041, %r13039, %r13040;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13044, %r13036, %r13041;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13047, %r866, %r1073, %r13028, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13051, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13052, %r13028, %r13051;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13055, %r13047, %r13052;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13058, %r877, %r1073, %r13039, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13062, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13063, %r13039, %r13062;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13066, %r13058, %r13063;
	// end inline asm
	// begin inline asm
	mov.b32 %r13074, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13085, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13071, %r866, %r1097, %r13074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13075, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13076, %r13074, %r13075;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13079, %r13071, %r13076;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13082, %r877, %r1097, %r13085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13086, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13087, %r13085, %r13086;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13090, %r13082, %r13087;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13093, %r866, %r1119, %r13074, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13097, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13098, %r13074, %r13097;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13101, %r13093, %r13098;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13104, %r877, %r1119, %r13085, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13109, %r13085, %r13108;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13112, %r13104, %r13109;
	// end inline asm
	// begin inline asm
	mov.b32 %r13120, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13131, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13117, %r866, %r1143, %r13120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13121, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13122, %r13120, %r13121;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13125, %r13117, %r13122;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13128, %r877, %r1143, %r13131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13132, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13133, %r13131, %r13132;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13136, %r13128, %r13133;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13139, %r866, %r1165, %r13120, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13143, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13144, %r13120, %r13143;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13147, %r13139, %r13144;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13150, %r877, %r1165, %r13131, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13154, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13155, %r13131, %r13154;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13158, %r13150, %r13155;
	// end inline asm
	// begin inline asm
	mov.b32 %r13166, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13177, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13163, %r866, %r1189, %r13166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13167, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13168, %r13166, %r13167;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13171, %r13163, %r13168;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13174, %r877, %r1189, %r13177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13178, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13179, %r13177, %r13178;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13182, %r13174, %r13179;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13185, %r866, %r1211, %r13166, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13189, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13190, %r13166, %r13189;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13193, %r13185, %r13190;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13196, %r877, %r1211, %r13177, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13200, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13201, %r13177, %r13200;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13204, %r13196, %r13201;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13207, %r254, %r12849, %r12681;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13211, %r254, %r12860, %r12686;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13215, %r254, %r12871, %r12691;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13219, %r254, %r12882, %r12696;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13223, %r254, %r12895, %r12701;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13227, %r254, %r12906, %r12706;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13231, %r254, %r12917, %r12711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13235, %r254, %r12928, %r12716;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13239, %r254, %r12941, %r12721;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13243, %r254, %r12952, %r12726;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13247, %r254, %r12963, %r12731;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13251, %r254, %r12974, %r12736;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13255, %r254, %r12987, %r12741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13259, %r254, %r12998, %r12746;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13263, %r254, %r13009, %r12751;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13267, %r254, %r13020, %r12756;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13271, %r285, %r13033, %r12761;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13275, %r285, %r13044, %r12766;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13279, %r285, %r13055, %r12771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13283, %r285, %r13066, %r12776;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13287, %r285, %r13079, %r12781;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13291, %r285, %r13090, %r12786;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13295, %r285, %r13101, %r12791;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13299, %r285, %r13112, %r12796;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13303, %r285, %r13125, %r12801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13307, %r285, %r13136, %r12806;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13311, %r285, %r13147, %r12811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13315, %r285, %r13158, %r12816;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13319, %r285, %r13171, %r12821;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13323, %r285, %r13182, %r12826;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13327, %r285, %r13193, %r12831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13331, %r285, %r13204, %r12836;
	// end inline asm
	// begin inline asm
	mov.b32 %r13340, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13351, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13337, %r866, %r4683, %r13340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13341, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13342, %r13340, %r13341;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13345, %r13337, %r13342;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13348, %r877, %r4683, %r13351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13352, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13353, %r13351, %r13352;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13356, %r13348, %r13353;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13359, %r866, %r4705, %r13340, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13363, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13364, %r13340, %r13363;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13367, %r13359, %r13364;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13370, %r877, %r4705, %r13351, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13374, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13375, %r13351, %r13374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13378, %r13370, %r13375;
	// end inline asm
	// begin inline asm
	mov.b32 %r13386, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13397, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13383, %r866, %r4729, %r13386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13387, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13388, %r13386, %r13387;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13391, %r13383, %r13388;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13394, %r877, %r4729, %r13397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13398, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13399, %r13397, %r13398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13402, %r13394, %r13399;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13405, %r866, %r4751, %r13386, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13409, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13410, %r13386, %r13409;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13413, %r13405, %r13410;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13416, %r877, %r4751, %r13397, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13420, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13421, %r13397, %r13420;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13424, %r13416, %r13421;
	// end inline asm
	// begin inline asm
	mov.b32 %r13432, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13443, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13429, %r866, %r4775, %r13432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13433, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13434, %r13432, %r13433;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13437, %r13429, %r13434;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13440, %r877, %r4775, %r13443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13444, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13445, %r13443, %r13444;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13448, %r13440, %r13445;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13451, %r866, %r4797, %r13432, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13455, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13456, %r13432, %r13455;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13459, %r13451, %r13456;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13462, %r877, %r4797, %r13443, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13466, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13467, %r13443, %r13466;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13470, %r13462, %r13467;
	// end inline asm
	// begin inline asm
	mov.b32 %r13478, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13489, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13475, %r866, %r4821, %r13478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13479, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13480, %r13478, %r13479;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13483, %r13475, %r13480;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13486, %r877, %r4821, %r13489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13490, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13491, %r13489, %r13490;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13494, %r13486, %r13491;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13497, %r866, %r4843, %r13478, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13501, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13502, %r13478, %r13501;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13505, %r13497, %r13502;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13508, %r877, %r4843, %r13489, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13512, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13513, %r13489, %r13512;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13516, %r13508, %r13513;
	// end inline asm
	// begin inline asm
	mov.b32 %r13524, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13535, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13521, %r866, %r4867, %r13524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13525, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13526, %r13524, %r13525;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13529, %r13521, %r13526;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13532, %r877, %r4867, %r13535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13536, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13537, %r13535, %r13536;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13540, %r13532, %r13537;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13543, %r866, %r4889, %r13524, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13547, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13548, %r13524, %r13547;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13551, %r13543, %r13548;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13554, %r877, %r4889, %r13535, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13558, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13559, %r13535, %r13558;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13562, %r13554, %r13559;
	// end inline asm
	// begin inline asm
	mov.b32 %r13570, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13581, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13567, %r866, %r4913, %r13570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13571, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13572, %r13570, %r13571;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13575, %r13567, %r13572;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13578, %r877, %r4913, %r13581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13582, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13583, %r13581, %r13582;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13586, %r13578, %r13583;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13589, %r866, %r4935, %r13570, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13593, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13594, %r13570, %r13593;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13597, %r13589, %r13594;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13600, %r877, %r4935, %r13581, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13604, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13605, %r13581, %r13604;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13608, %r13600, %r13605;
	// end inline asm
	// begin inline asm
	mov.b32 %r13616, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13627, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13613, %r866, %r4959, %r13616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13617, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13618, %r13616, %r13617;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13621, %r13613, %r13618;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13624, %r877, %r4959, %r13627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13628, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13629, %r13627, %r13628;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13632, %r13624, %r13629;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13635, %r866, %r4981, %r13616, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13639, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13640, %r13616, %r13639;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13643, %r13635, %r13640;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13646, %r877, %r4981, %r13627, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13650, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13651, %r13627, %r13650;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13654, %r13646, %r13651;
	// end inline asm
	// begin inline asm
	mov.b32 %r13662, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13673, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13659, %r866, %r5005, %r13662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13663, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13664, %r13662, %r13663;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13667, %r13659, %r13664;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13670, %r877, %r5005, %r13673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13674, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13675, %r13673, %r13674;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13678, %r13670, %r13675;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13681, %r866, %r5027, %r13662, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13685, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13686, %r13662, %r13685;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13689, %r13681, %r13686;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13692, %r877, %r5027, %r13673, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13696, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13697, %r13673, %r13696;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13700, %r13692, %r13697;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13703, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13705, %r13703, %r13345, %r13207;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13709, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13711, %r13709, %r13356, %r13211;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13715, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13717, %r13715, %r13367, %r13215;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13721, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13723, %r13721, %r13378, %r13219;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13727, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13729, %r13727, %r13391, %r13223;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13733, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13735, %r13733, %r13402, %r13227;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13739, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13741, %r13739, %r13413, %r13231;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13745, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13747, %r13745, %r13424, %r13235;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13751, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13753, %r13751, %r13437, %r13239;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13757, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13759, %r13757, %r13448, %r13243;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13763, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13765, %r13763, %r13459, %r13247;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13769, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13771, %r13769, %r13470, %r13251;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13775, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13777, %r13775, %r13483, %r13255;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13781, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13783, %r13781, %r13494, %r13259;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13787, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13789, %r13787, %r13505, %r13263;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13793, %r316;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13795, %r13793, %r13516, %r13267;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13799, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13801, %r13799, %r13529, %r13271;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13805, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13807, %r13805, %r13540, %r13275;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13811, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13813, %r13811, %r13551, %r13279;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13817, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13819, %r13817, %r13562, %r13283;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13823, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13825, %r13823, %r13575, %r13287;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13829, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13831, %r13829, %r13586, %r13291;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13835, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13837, %r13835, %r13597, %r13295;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13841, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13843, %r13841, %r13608, %r13299;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13847, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13849, %r13847, %r13621, %r13303;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13853, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13855, %r13853, %r13632, %r13307;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13859, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13861, %r13859, %r13643, %r13311;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13865, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13867, %r13865, %r13654, %r13315;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13871, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13873, %r13871, %r13667, %r13319;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13877, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13879, %r13877, %r13678, %r13323;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13883, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13885, %r13883, %r13689, %r13327;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r13889, %r347;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r13891, %r13889, %r13700, %r13331;
	// end inline asm
	// begin inline asm
	mov.b32 %r13900, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13911, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13897, %r866, %r8499, %r13900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13901, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13902, %r13900, %r13901;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13905, %r13897, %r13902;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13908, %r877, %r8499, %r13911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13912, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13913, %r13911, %r13912;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13916, %r13908, %r13913;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13919, %r866, %r8521, %r13900, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13924, %r13900, %r13923;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13927, %r13919, %r13924;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13930, %r877, %r8521, %r13911, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13934, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13935, %r13911, %r13934;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13938, %r13930, %r13935;
	// end inline asm
	// begin inline asm
	mov.b32 %r13946, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r13957, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13943, %r866, %r8545, %r13946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13947, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13948, %r13946, %r13947;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13951, %r13943, %r13948;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13954, %r877, %r8545, %r13957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13958, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13959, %r13957, %r13958;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13962, %r13954, %r13959;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13965, %r866, %r8567, %r13946, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13969, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13970, %r13946, %r13969;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13973, %r13965, %r13970;
	// end inline asm
	// begin inline asm
	lop3.b32 %r13976, %r877, %r8567, %r13957, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13980, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13981, %r13957, %r13980;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13984, %r13976, %r13981;
	// end inline asm
	// begin inline asm
	mov.b32 %r13992, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14003, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r13989, %r866, %r8591, %r13992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r13993, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r13994, %r13992, %r13993;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r13997, %r13989, %r13994;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14000, %r877, %r8591, %r14003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14004, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14005, %r14003, %r14004;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14008, %r14000, %r14005;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14011, %r866, %r8613, %r13992, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14015, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14016, %r13992, %r14015;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14019, %r14011, %r14016;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14022, %r877, %r8613, %r14003, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14027, %r14003, %r14026;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14030, %r14022, %r14027;
	// end inline asm
	// begin inline asm
	mov.b32 %r14038, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14049, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14035, %r866, %r8637, %r14038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14039, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14040, %r14038, %r14039;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14043, %r14035, %r14040;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14046, %r877, %r8637, %r14049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14050, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14051, %r14049, %r14050;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14054, %r14046, %r14051;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14057, %r866, %r8659, %r14038, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14061, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14062, %r14038, %r14061;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14065, %r14057, %r14062;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14068, %r877, %r8659, %r14049, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14072, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14073, %r14049, %r14072;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14076, %r14068, %r14073;
	// end inline asm
	// begin inline asm
	mov.b32 %r14084, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14095, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14081, %r866, %r8683, %r14084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14085, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14086, %r14084, %r14085;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14089, %r14081, %r14086;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14092, %r877, %r8683, %r14095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14096, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14097, %r14095, %r14096;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14100, %r14092, %r14097;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14103, %r866, %r8705, %r14084, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14107, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14108, %r14084, %r14107;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14111, %r14103, %r14108;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14114, %r877, %r8705, %r14095, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14118, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14119, %r14095, %r14118;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14122, %r14114, %r14119;
	// end inline asm
	// begin inline asm
	mov.b32 %r14130, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14141, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14127, %r866, %r8729, %r14130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14131, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14132, %r14130, %r14131;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14135, %r14127, %r14132;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14138, %r877, %r8729, %r14141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14142, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14143, %r14141, %r14142;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14146, %r14138, %r14143;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14149, %r866, %r8751, %r14130, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14153, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14154, %r14130, %r14153;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14157, %r14149, %r14154;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14160, %r877, %r8751, %r14141, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14164, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14165, %r14141, %r14164;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14168, %r14160, %r14165;
	// end inline asm
	// begin inline asm
	mov.b32 %r14176, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14187, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14173, %r866, %r8775, %r14176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14177, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14178, %r14176, %r14177;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14181, %r14173, %r14178;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14184, %r877, %r8775, %r14187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14188, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14189, %r14187, %r14188;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14192, %r14184, %r14189;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14195, %r866, %r8797, %r14176, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14199, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14200, %r14176, %r14199;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14203, %r14195, %r14200;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14206, %r877, %r8797, %r14187, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14210, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14211, %r14187, %r14210;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14214, %r14206, %r14211;
	// end inline asm
	// begin inline asm
	mov.b32 %r14222, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r14233, {%rs2173, %rs2173};
	// end inline asm
	// begin inline asm
	lop3.b32 %r14219, %r866, %r8821, %r14222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14223, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14224, %r14222, %r14223;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14227, %r14219, %r14224;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14230, %r877, %r8821, %r14233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14234, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14235, %r14233, %r14234;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14238, %r14230, %r14235;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14241, %r866, %r8843, %r14222, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14245, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14246, %r14222, %r14245;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14249, %r14241, %r14246;
	// end inline asm
	// begin inline asm
	lop3.b32 %r14252, %r877, %r8843, %r14233, 202;
	// end inline asm
	// begin inline asm
	mov.b32 %r14256, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r14257, %r14233, %r14256;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r14260, %r14252, %r14257;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14398, %r378, %r13905, %r13705;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14395, %r378, %r13916, %r13711;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14407, %r378, %r13927, %r13717;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14404, %r378, %r13938, %r13723;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14416, %r378, %r13951, %r13729;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14413, %r378, %r13962, %r13735;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14425, %r378, %r13973, %r13741;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14422, %r378, %r13984, %r13747;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14434, %r378, %r13997, %r13753;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14431, %r378, %r14008, %r13759;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14443, %r378, %r14019, %r13765;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14440, %r378, %r14030, %r13771;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14452, %r378, %r14043, %r13777;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14449, %r378, %r14054, %r13783;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14461, %r378, %r14065, %r13789;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14458, %r378, %r14076, %r13795;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14470, %r409, %r14089, %r13801;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14467, %r409, %r14100, %r13807;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14479, %r409, %r14111, %r13813;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14476, %r409, %r14122, %r13819;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14488, %r409, %r14135, %r13825;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14485, %r409, %r14146, %r13831;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14497, %r409, %r14157, %r13837;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14494, %r409, %r14168, %r13843;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14506, %r409, %r14181, %r13849;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14503, %r409, %r14192, %r13855;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14515, %r409, %r14203, %r13861;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14512, %r409, %r14214, %r13867;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14524, %r409, %r14227, %r13873;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14521, %r409, %r14238, %r13879;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14533, %r409, %r14249, %r13885;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14530, %r409, %r14260, %r13891;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14391, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14393, %r14391, %r14395;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14396, %r474, %r14398, %r14393;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14400, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14402, %r14400, %r14404;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14405, %r474, %r14407, %r14402;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14409, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14411, %r14409, %r14413;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14414, %r474, %r14416, %r14411;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14418, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14420, %r14418, %r14422;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14423, %r474, %r14425, %r14420;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14427, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14429, %r14427, %r14431;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14432, %r474, %r14434, %r14429;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14436, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14438, %r14436, %r14440;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14441, %r474, %r14443, %r14438;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14445, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14447, %r14445, %r14449;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14450, %r474, %r14452, %r14447;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14454, %r480;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14456, %r14454, %r14458;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14459, %r474, %r14461, %r14456;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14463, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14465, %r14463, %r14467;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14468, %r477, %r14470, %r14465;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14472, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14474, %r14472, %r14476;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14477, %r477, %r14479, %r14474;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14481, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14483, %r14481, %r14485;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14486, %r477, %r14488, %r14483;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14490, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14492, %r14490, %r14494;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14495, %r477, %r14497, %r14492;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14499, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14501, %r14499, %r14503;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14504, %r477, %r14506, %r14501;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14508, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14510, %r14508, %r14512;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14513, %r477, %r14515, %r14510;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14517, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14519, %r14517, %r14521;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14522, %r477, %r14524, %r14519;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14526, %r483;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14528, %r14526, %r14530;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14531, %r477, %r14533, %r14528;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14535, %r480, %r14398;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14538, %r474, %r14395, %r14535;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14542, %r480, %r14407;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14545, %r474, %r14404, %r14542;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14549, %r480, %r14416;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14552, %r474, %r14413, %r14549;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14556, %r480, %r14425;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14559, %r474, %r14422, %r14556;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14563, %r480, %r14434;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14566, %r474, %r14431, %r14563;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14570, %r480, %r14443;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14573, %r474, %r14440, %r14570;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14577, %r480, %r14452;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14580, %r474, %r14449, %r14577;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14584, %r480, %r14461;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14587, %r474, %r14458, %r14584;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14591, %r483, %r14470;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14594, %r477, %r14467, %r14591;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14598, %r483, %r14479;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14601, %r477, %r14476, %r14598;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14605, %r483, %r14488;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14608, %r477, %r14485, %r14605;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14612, %r483, %r14497;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14615, %r477, %r14494, %r14612;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14619, %r483, %r14506;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14622, %r477, %r14503, %r14619;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14626, %r483, %r14515;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14629, %r477, %r14512, %r14626;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14633, %r483, %r14524;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14636, %r477, %r14521, %r14633;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14640, %r483, %r14533;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14643, %r477, %r14530, %r14640;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14814, %r14811}, {%r486, %r492, %r489, %r495}, {%r14396, %r14538}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14823, %r14820}, {%r486, %r492, %r489, %r495}, {%r14405, %r14545}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14832, %r14829}, {%r486, %r492, %r489, %r495}, {%r14414, %r14552}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14841, %r14838}, {%r486, %r492, %r489, %r495}, {%r14423, %r14559}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14850, %r14847}, {%r486, %r492, %r489, %r495}, {%r14432, %r14566}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14859, %r14856}, {%r486, %r492, %r489, %r495}, {%r14441, %r14573}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14868, %r14865}, {%r486, %r492, %r489, %r495}, {%r14450, %r14580}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14877, %r14874}, {%r486, %r492, %r489, %r495}, {%r14459, %r14587}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14886, %r14883}, {%r486, %r492, %r489, %r495}, {%r14468, %r14594}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14895, %r14892}, {%r486, %r492, %r489, %r495}, {%r14477, %r14601}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14904, %r14901}, {%r486, %r492, %r489, %r495}, {%r14486, %r14608}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14913, %r14910}, {%r486, %r492, %r489, %r495}, {%r14495, %r14615}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14922, %r14919}, {%r486, %r492, %r489, %r495}, {%r14504, %r14622}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14931, %r14928}, {%r486, %r492, %r489, %r495}, {%r14513, %r14629}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14940, %r14937}, {%r486, %r492, %r489, %r495}, {%r14522, %r14636}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r14949, %r14946}, {%r486, %r492, %r489, %r495}, {%r14531, %r14643}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14807, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14809, %r14807, %r14811;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14812, %r498, %r14814, %r14809;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14816, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14818, %r14816, %r14820;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14821, %r498, %r14823, %r14818;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14825, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14827, %r14825, %r14829;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14830, %r498, %r14832, %r14827;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14834, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14836, %r14834, %r14838;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14839, %r498, %r14841, %r14836;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14843, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14845, %r14843, %r14847;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14848, %r498, %r14850, %r14845;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14852, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14854, %r14852, %r14856;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14857, %r498, %r14859, %r14854;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14861, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14863, %r14861, %r14865;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14866, %r498, %r14868, %r14863;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14870, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14872, %r14870, %r14874;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14875, %r498, %r14877, %r14872;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14879, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14881, %r14879, %r14883;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14884, %r498, %r14886, %r14881;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14888, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14890, %r14888, %r14892;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14893, %r498, %r14895, %r14890;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14897, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14899, %r14897, %r14901;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14902, %r498, %r14904, %r14899;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14906, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14908, %r14906, %r14910;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14911, %r498, %r14913, %r14908;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14915, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14917, %r14915, %r14919;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14920, %r498, %r14922, %r14917;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14924, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14926, %r14924, %r14928;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14929, %r498, %r14931, %r14926;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14933, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14935, %r14933, %r14937;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14938, %r498, %r14940, %r14935;
	// end inline asm
	// begin inline asm
	neg.f16x2 %r14942, %r501;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14944, %r14942, %r14946;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14947, %r498, %r14949, %r14944;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14951, %r501, %r14814;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14954, %r498, %r14811, %r14951;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14958, %r501, %r14823;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14961, %r498, %r14820, %r14958;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14965, %r501, %r14832;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14968, %r498, %r14829, %r14965;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14972, %r501, %r14841;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14975, %r498, %r14838, %r14972;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14979, %r501, %r14850;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14982, %r498, %r14847, %r14979;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14986, %r501, %r14859;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14989, %r498, %r14856, %r14986;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r14993, %r501, %r14868;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r14996, %r498, %r14865, %r14993;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15000, %r501, %r14877;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15003, %r498, %r14874, %r15000;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15007, %r501, %r14886;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15010, %r498, %r14883, %r15007;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15014, %r501, %r14895;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15017, %r498, %r14892, %r15014;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15021, %r501, %r14904;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15024, %r498, %r14901, %r15021;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15028, %r501, %r14913;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15031, %r498, %r14910, %r15028;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15035, %r501, %r14922;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15038, %r498, %r14919, %r15035;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15042, %r501, %r14931;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15045, %r498, %r14928, %r15042;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15049, %r501, %r14940;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15052, %r498, %r14937, %r15049;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15056, %r501, %r14949;
	// end inline asm
	// begin inline asm
	fma.rn.f16x2 %r15059, %r498, %r14946, %r15056;
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15352, %r15355}, {%r504, %r510, %r507, %r513}, {%r14812, %r14954}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15358, %r15361}, {%r504, %r510, %r507, %r513}, {%r14821, %r14961}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15364, %r15367}, {%r504, %r510, %r507, %r513}, {%r14830, %r14968}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15370, %r15373}, {%r504, %r510, %r507, %r513}, {%r14839, %r14975}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15376, %r15379}, {%r504, %r510, %r507, %r513}, {%r14848, %r14982}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15382, %r15385}, {%r504, %r510, %r507, %r513}, {%r14857, %r14989}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15388, %r15391}, {%r504, %r510, %r507, %r513}, {%r14866, %r14996}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15394, %r15397}, {%r504, %r510, %r507, %r513}, {%r14875, %r15003}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15353, %r15356}, {%r504, %r510, %r507, %r513}, {%r14884, %r15010}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15359, %r15362}, {%r504, %r510, %r507, %r513}, {%r14893, %r15017}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15365, %r15368}, {%r504, %r510, %r507, %r513}, {%r14902, %r15024}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15371, %r15374}, {%r504, %r510, %r507, %r513}, {%r14911, %r15031}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15377, %r15380}, {%r504, %r510, %r507, %r513}, {%r14920, %r15038}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15383, %r15386}, {%r504, %r510, %r507, %r513}, {%r14929, %r15045}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15389, %r15392}, {%r504, %r510, %r507, %r513}, {%r14938, %r15052}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	mma.sync.aligned.m16n8k16.row.col.f16.f16.f16.f16 {%r15395, %r15398}, {%r504, %r510, %r507, %r513}, {%r14947, %r15059}, {%r780, %r780};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15351, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15354, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15357, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15360, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15363, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15366, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15369, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15372, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15375, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15378, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15381, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15384, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15387, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15390, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15393, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15396, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15399, %r15352, %r15353;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15402, %r15355, %r15356;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15405, %r15358, %r15359;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15408, %r15361, %r15362;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15411, %r15364, %r15365;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15414, %r15367, %r15368;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15417, %r15370, %r15371;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15420, %r15373, %r15374;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15423, %r15376, %r15377;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15426, %r15379, %r15380;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15429, %r15382, %r15383;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15432, %r15385, %r15386;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15435, %r15388, %r15389;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15438, %r15391, %r15392;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15441, %r15394, %r15395;
	// end inline asm
	// begin inline asm
	sub.rn.f16x2 %r15444, %r15397, %r15398;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15447, %r148, %r15351;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15450, %r148, %r15354;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15453, %r148, %r15357;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15456, %r148, %r15360;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15459, %r148, %r15363;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15462, %r148, %r15366;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15465, %r148, %r15369;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15468, %r148, %r15372;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15471, %r148, %r15375;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15474, %r148, %r15378;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15477, %r148, %r15381;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15480, %r148, %r15384;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15483, %r148, %r15387;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15486, %r148, %r15390;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15489, %r148, %r15393;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15492, %r148, %r15396;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15495, %r150, %r15399;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15498, %r150, %r15402;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15501, %r150, %r15405;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15504, %r150, %r15408;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15507, %r150, %r15411;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15510, %r150, %r15414;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15513, %r150, %r15417;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15516, %r150, %r15420;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15519, %r150, %r15423;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15522, %r150, %r15426;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15525, %r150, %r15429;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15528, %r150, %r15432;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15531, %r150, %r15435;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15534, %r150, %r15438;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15537, %r150, %r15441;
	// end inline asm
	// begin inline asm
	mul.rn.f16x2 %r15540, %r150, %r15444;
	// end inline asm
	// begin inline asm
	mov.b32 %r15543, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15544, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15545, %r15447, %r15543;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15548, %r15545, %r15544;
	// end inline asm
	// begin inline asm
	mov.b32 %r15551, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15552, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15553, %r15450, %r15551;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15556, %r15553, %r15552;
	// end inline asm
	// begin inline asm
	mov.b32 %r15559, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15560, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15561, %r15453, %r15559;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15564, %r15561, %r15560;
	// end inline asm
	// begin inline asm
	mov.b32 %r15567, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15568, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15569, %r15456, %r15567;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15572, %r15569, %r15568;
	// end inline asm
	// begin inline asm
	mov.b32 %r15575, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15576, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15577, %r15459, %r15575;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15580, %r15577, %r15576;
	// end inline asm
	// begin inline asm
	mov.b32 %r15583, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15584, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15585, %r15462, %r15583;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15588, %r15585, %r15584;
	// end inline asm
	// begin inline asm
	mov.b32 %r15591, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15592, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15593, %r15465, %r15591;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15596, %r15593, %r15592;
	// end inline asm
	// begin inline asm
	mov.b32 %r15599, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15600, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15601, %r15468, %r15599;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15604, %r15601, %r15600;
	// end inline asm
	// begin inline asm
	mov.b32 %r15607, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15608, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15609, %r15471, %r15607;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15612, %r15609, %r15608;
	// end inline asm
	// begin inline asm
	mov.b32 %r15615, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15616, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15617, %r15474, %r15615;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15620, %r15617, %r15616;
	// end inline asm
	// begin inline asm
	mov.b32 %r15623, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15624, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15625, %r15477, %r15623;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15628, %r15625, %r15624;
	// end inline asm
	// begin inline asm
	mov.b32 %r15631, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15632, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15633, %r15480, %r15631;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15636, %r15633, %r15632;
	// end inline asm
	// begin inline asm
	mov.b32 %r15639, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15640, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15641, %r15483, %r15639;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15644, %r15641, %r15640;
	// end inline asm
	// begin inline asm
	mov.b32 %r15647, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15648, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15649, %r15486, %r15647;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15652, %r15649, %r15648;
	// end inline asm
	// begin inline asm
	mov.b32 %r15655, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15656, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15657, %r15489, %r15655;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15660, %r15657, %r15656;
	// end inline asm
	// begin inline asm
	mov.b32 %r15663, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15664, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15665, %r15492, %r15663;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15668, %r15665, %r15664;
	// end inline asm
	// begin inline asm
	mov.b32 %r15671, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15672, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15673, %r15495, %r15671;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15676, %r15673, %r15672;
	// end inline asm
	// begin inline asm
	mov.b32 %r15679, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15680, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15681, %r15498, %r15679;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15684, %r15681, %r15680;
	// end inline asm
	// begin inline asm
	mov.b32 %r15687, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15688, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15689, %r15501, %r15687;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15692, %r15689, %r15688;
	// end inline asm
	// begin inline asm
	mov.b32 %r15695, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15696, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15697, %r15504, %r15695;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15700, %r15697, %r15696;
	// end inline asm
	// begin inline asm
	mov.b32 %r15703, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15704, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15705, %r15507, %r15703;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15708, %r15705, %r15704;
	// end inline asm
	// begin inline asm
	mov.b32 %r15711, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15712, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15713, %r15510, %r15711;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15716, %r15713, %r15712;
	// end inline asm
	// begin inline asm
	mov.b32 %r15719, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15720, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15721, %r15513, %r15719;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15724, %r15721, %r15720;
	// end inline asm
	// begin inline asm
	mov.b32 %r15727, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15728, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15729, %r15516, %r15727;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15732, %r15729, %r15728;
	// end inline asm
	// begin inline asm
	mov.b32 %r15735, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15736, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15737, %r15519, %r15735;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15740, %r15737, %r15736;
	// end inline asm
	// begin inline asm
	mov.b32 %r15743, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15744, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15745, %r15522, %r15743;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15748, %r15745, %r15744;
	// end inline asm
	// begin inline asm
	mov.b32 %r15751, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15752, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15753, %r15525, %r15751;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15756, %r15753, %r15752;
	// end inline asm
	// begin inline asm
	mov.b32 %r15759, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15760, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15761, %r15528, %r15759;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15764, %r15761, %r15760;
	// end inline asm
	// begin inline asm
	mov.b32 %r15767, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15768, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15769, %r15531, %r15767;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15772, %r15769, %r15768;
	// end inline asm
	// begin inline asm
	mov.b32 %r15775, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15776, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15777, %r15534, %r15775;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15780, %r15777, %r15776;
	// end inline asm
	// begin inline asm
	mov.b32 %r15783, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15784, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15785, %r15537, %r15783;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15788, %r15785, %r15784;
	// end inline asm
	// begin inline asm
	mov.b32 %r15791, {%rs2307, %rs2307};
	// end inline asm
	// begin inline asm
	mov.b32 %r15792, {%rs408, %rs408};
	// end inline asm
	// begin inline asm
	max.f16x2 %r15793, %r15540, %r15791;
	// end inline asm
	// begin inline asm
	min.f16x2 %r15796, %r15793, %r15792;
	// end inline asm
	// begin inline asm
	mov.b32 %r15802, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15800, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15801, %r15802, %r15800;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15804, %r15548, %r15801;
	// end inline asm
	// begin inline asm
	mov.b32 %r15807, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15808, %r15802, %r15807;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15811, %r15556, %r15808;
	// end inline asm
	// begin inline asm
	mov.b32 %r15814, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15815, %r15802, %r15814;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15818, %r15564, %r15815;
	// end inline asm
	// begin inline asm
	mov.b32 %r15821, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15822, %r15802, %r15821;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15825, %r15572, %r15822;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15828, %r15804, %r15818, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15832, %r15811, %r15825, %r4383;
	// end inline asm
	shl.b32 	%r15839, %r15832, 4;
	// begin inline asm
	lop3.b32 %r15836, %r4389, %r15828, %r15839, 202;
	// end inline asm
	xor.b32  	%r16236, %r15836, -2004318072;
	// begin inline asm
	mov.b32 %r15843, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15841, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15842, %r15843, %r15841;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15845, %r15580, %r15842;
	// end inline asm
	// begin inline asm
	mov.b32 %r15848, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15849, %r15843, %r15848;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15852, %r15588, %r15849;
	// end inline asm
	// begin inline asm
	mov.b32 %r15855, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15856, %r15843, %r15855;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15859, %r15596, %r15856;
	// end inline asm
	// begin inline asm
	mov.b32 %r15862, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15863, %r15843, %r15862;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15866, %r15604, %r15863;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15869, %r15845, %r15859, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15873, %r15852, %r15866, %r4383;
	// end inline asm
	shl.b32 	%r15880, %r15873, 4;
	// begin inline asm
	lop3.b32 %r15877, %r4389, %r15869, %r15880, 202;
	// end inline asm
	xor.b32  	%r16237, %r15877, -2004318072;
	// begin inline asm
	mov.b32 %r15884, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15882, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15883, %r15884, %r15882;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15886, %r15612, %r15883;
	// end inline asm
	// begin inline asm
	mov.b32 %r15889, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15890, %r15884, %r15889;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15893, %r15620, %r15890;
	// end inline asm
	// begin inline asm
	mov.b32 %r15896, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15897, %r15884, %r15896;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15900, %r15628, %r15897;
	// end inline asm
	// begin inline asm
	mov.b32 %r15903, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15904, %r15884, %r15903;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15907, %r15636, %r15904;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15910, %r15886, %r15900, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15914, %r15893, %r15907, %r4383;
	// end inline asm
	shl.b32 	%r15921, %r15914, 4;
	// begin inline asm
	lop3.b32 %r15918, %r4389, %r15910, %r15921, 202;
	// end inline asm
	xor.b32  	%r16238, %r15918, -2004318072;
	// begin inline asm
	mov.b32 %r15925, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15923, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15924, %r15925, %r15923;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15927, %r15644, %r15924;
	// end inline asm
	// begin inline asm
	mov.b32 %r15930, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15931, %r15925, %r15930;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15934, %r15652, %r15931;
	// end inline asm
	// begin inline asm
	mov.b32 %r15937, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15938, %r15925, %r15937;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15941, %r15660, %r15938;
	// end inline asm
	// begin inline asm
	mov.b32 %r15944, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15945, %r15925, %r15944;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15948, %r15668, %r15945;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15951, %r15927, %r15941, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15955, %r15934, %r15948, %r4383;
	// end inline asm
	shl.b32 	%r15962, %r15955, 4;
	// begin inline asm
	lop3.b32 %r15959, %r4389, %r15951, %r15962, 202;
	// end inline asm
	xor.b32  	%r16239, %r15959, -2004318072;
	// begin inline asm
	mov.b32 %r15966, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r15964, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15965, %r15966, %r15964;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15968, %r15676, %r15965;
	// end inline asm
	// begin inline asm
	mov.b32 %r15971, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15972, %r15966, %r15971;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15975, %r15684, %r15972;
	// end inline asm
	// begin inline asm
	mov.b32 %r15978, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15979, %r15966, %r15978;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15982, %r15692, %r15979;
	// end inline asm
	// begin inline asm
	mov.b32 %r15985, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15986, %r15966, %r15985;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r15989, %r15700, %r15986;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15992, %r15968, %r15982, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r15996, %r15975, %r15989, %r4383;
	// end inline asm
	shl.b32 	%r16003, %r15996, 4;
	// begin inline asm
	lop3.b32 %r16000, %r4389, %r15992, %r16003, 202;
	// end inline asm
	xor.b32  	%r16240, %r16000, -2004318072;
	// begin inline asm
	mov.b32 %r16007, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16005, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16006, %r16007, %r16005;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16009, %r15708, %r16006;
	// end inline asm
	// begin inline asm
	mov.b32 %r16012, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16013, %r16007, %r16012;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16016, %r15716, %r16013;
	// end inline asm
	// begin inline asm
	mov.b32 %r16019, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16020, %r16007, %r16019;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16023, %r15724, %r16020;
	// end inline asm
	// begin inline asm
	mov.b32 %r16026, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16027, %r16007, %r16026;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16030, %r15732, %r16027;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16033, %r16009, %r16023, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16037, %r16016, %r16030, %r4383;
	// end inline asm
	shl.b32 	%r16044, %r16037, 4;
	// begin inline asm
	lop3.b32 %r16041, %r4389, %r16033, %r16044, 202;
	// end inline asm
	xor.b32  	%r16241, %r16041, -2004318072;
	// begin inline asm
	mov.b32 %r16048, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16046, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16047, %r16048, %r16046;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16050, %r15740, %r16047;
	// end inline asm
	// begin inline asm
	mov.b32 %r16053, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16054, %r16048, %r16053;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16057, %r15748, %r16054;
	// end inline asm
	// begin inline asm
	mov.b32 %r16060, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16061, %r16048, %r16060;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16064, %r15756, %r16061;
	// end inline asm
	// begin inline asm
	mov.b32 %r16067, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16068, %r16048, %r16067;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16071, %r15764, %r16068;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16074, %r16050, %r16064, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16078, %r16057, %r16071, %r4383;
	// end inline asm
	shl.b32 	%r16085, %r16078, 4;
	// begin inline asm
	lop3.b32 %r16082, %r4389, %r16074, %r16085, 202;
	// end inline asm
	xor.b32  	%r16242, %r16082, -2004318072;
	// begin inline asm
	mov.b32 %r16089, {%rs2381, %rs2381};
	// end inline asm
	// begin inline asm
	mov.b32 %r16087, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16088, %r16089, %r16087;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16091, %r15772, %r16088;
	// end inline asm
	// begin inline asm
	mov.b32 %r16094, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16095, %r16089, %r16094;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16098, %r15780, %r16095;
	// end inline asm
	// begin inline asm
	mov.b32 %r16101, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16102, %r16089, %r16101;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16105, %r15788, %r16102;
	// end inline asm
	// begin inline asm
	mov.b32 %r16108, {%rs2389, %rs2389};
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16109, %r16089, %r16108;
	// end inline asm
	// begin inline asm
	add.rn.f16x2 %r16112, %r15796, %r16109;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16115, %r16091, %r16105, %r4383;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16119, %r16098, %r16112, %r4383;
	// end inline asm
	shl.b32 	%r16126, %r16119, 4;
	// begin inline asm
	lop3.b32 %r16123, %r4389, %r16115, %r16126, 202;
	// end inline asm
	xor.b32  	%r16243, %r16123, -2004318072;
	st.shared.u32 	[%rd95], %r16236;
	st.shared.u32 	[%rd97], %r16237;
	st.shared.u32 	[%rd99], %r16238;
	st.shared.u32 	[%rd101], %r16239;
	st.shared.u32 	[%rd103], %r16240;
	st.shared.u32 	[%rd105], %r16241;
	st.shared.u32 	[%rd107], %r16242;
	st.shared.u32 	[%rd109], %r16243;
	add.s32 	%r16396, %r16396, 128;
	setp.eq.s32 	%p301, %r16396, 256;
	@%p301 bra 	$L__BB0_65;
	bra.uni 	$L__BB0_64;
$L__BB0_65:                             // %guard_exit29785
                                        //   in Loop: Header=BB0_62 Depth=1
	bar.sync 	0;
	ld.shared.u32 	%r16249, [%rd5];
	ld.shared.u32 	%r16250, [%rd6+128];
	ld.shared.u32 	%r16257, [%rd6+4];
	ld.shared.u32 	%r16258, [%rd6+132];
	ld.shared.u32 	%r16265, [%rd7];
	ld.shared.u32 	%r16266, [%rd8+128];
	ld.shared.u32 	%r16273, [%rd8+4];
	ld.shared.u32 	%r16274, [%rd8+132];
	ld.shared.u32 	%r16281, [%rd5+16644];
	ld.shared.u32 	%r16282, [%rd6+16772];
	ld.shared.u32 	%r16289, [%rd6+16648];
	ld.shared.u32 	%r16290, [%rd6+16776];
	ld.shared.u32 	%r16297, [%rd7+16644];
	ld.shared.u32 	%r16298, [%rd22];
	ld.shared.u32 	%r16305, [%rd8+16648];
	ld.shared.u32 	%r16306, [%rd8+16776];
	// begin inline asm
	prmt.b32 %r16244, %r16249, %r16250, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16248, %r16249, %r16250, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16252, %r16257, %r16258, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16256, %r16257, %r16258, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16260, %r16265, %r16266, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16264, %r16265, %r16266, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16268, %r16273, %r16274, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16272, %r16273, %r16274, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16276, %r16281, %r16282, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16280, %r16281, %r16282, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16284, %r16289, %r16290, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16288, %r16289, %r16290, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16292, %r16297, %r16298, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16296, %r16297, %r16298, %r779;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16300, %r16305, %r16306, %r775;
	// end inline asm
	// begin inline asm
	prmt.b32 %r16304, %r16305, %r16306, %r779;
	// end inline asm
	selp.b32 	%r16308, %r16248, %r16244, %p287;
	shfl.sync.bfly.b32	%r180, %r16308, 8, 31, -1;
	selp.b32 	%r16309, %r16256, %r16252, %p287;
	shfl.sync.bfly.b32	%r181, %r16309, 8, 31, -1;
	selp.b32 	%r16310, %r16264, %r16260, %p287;
	shfl.sync.bfly.b32	%r182, %r16310, 8, 31, -1;
	selp.b32 	%r16311, %r16272, %r16268, %p287;
	shfl.sync.bfly.b32	%r183, %r16311, 8, 31, -1;
	selp.b32 	%r16312, %r16280, %r16276, %p287;
	shfl.sync.bfly.b32	%r16313, %r16312, 8, 31, -1;
	selp.b32 	%r16314, %r16288, %r16284, %p287;
	shfl.sync.bfly.b32	%r16315, %r16314, 8, 31, -1;
	selp.b32 	%r16316, %r16296, %r16292, %p287;
	shfl.sync.bfly.b32	%r16317, %r16316, 8, 31, -1;
	selp.b32 	%r16318, %r16304, %r16300, %p287;
	shfl.sync.bfly.b32	%r16319, %r16318, 8, 31, -1;
	setp.lt.u32 	%p303, %r16371, 512;
	@%p303 bra 	$L__BB0_67;
// %bb.66:                              // %pass28435
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r16320, %r183, %r16272, %p287;
	selp.b32 	%r16321, %r16268, %r183, %p287;
	selp.b32 	%r16322, %r182, %r16264, %p287;
	selp.b32 	%r16323, %r16260, %r182, %p287;
	selp.b32 	%r16324, %r181, %r16256, %p287;
	selp.b32 	%r16325, %r16252, %r181, %p287;
	selp.b32 	%r16326, %r180, %r16248, %p287;
	selp.b32 	%r16327, %r16244, %r180, %p287;
	shl.b32 	%r16328, %r16371, 13;
	or.b32  	%r16329, %r16328, %r53;
	or.b32  	%r16330, %r16329, %r39;
	or.b32  	%r16331, %r16330, %r40;
	cvt.s64.s32 	%rd110, %r16331;
	add.s64 	%rd111, %rd110, %rd9;
	shr.u64 	%rd112, %rd111, 36;
	add.s64 	%rd113, %rd111, %rd112;
	shr.s64 	%rd114, %rd113, 28;
	setp.lt.s64 	%p305, %rd111, 0;
	and.b64  	%rd115, %rd113, -268435456;
	setp.ne.s64 	%p306, %rd115, %rd111;
	and.pred  	%p307, %p305, %p306;
	selp.u64 	%rd116, 1, 0, %p307;
	sub.s64 	%rd117, %rd116, %rd114;
	shl.b64 	%rd118, %rd117, 28;
	add.s64 	%rd119, %rd118, %rd111;
	shl.b64 	%rd120, %rd119, 2;
	add.s64 	%rd121, %rd3, %rd120;
	st.global.v4.u32 	[%rd121], {%r16327, %r16325, %r16326, %r16324};
	or.b32  	%r16332, %r16328, %r54;
	or.b32  	%r16333, %r16332, %r39;
	or.b32  	%r16334, %r16333, %r40;
	cvt.s64.s32 	%rd122, %r16334;
	add.s64 	%rd123, %rd122, %rd9;
	shr.u64 	%rd124, %rd123, 36;
	add.s64 	%rd125, %rd123, %rd124;
	shr.u64 	%rd126, %rd125, 28;
	shr.u64 	%rd127, %rd123, 63;
	sub.s64 	%rd128, %rd127, %rd126;
	shl.b64 	%rd129, %rd128, 28;
	add.s64 	%rd130, %rd129, %rd123;
	shl.b64 	%rd131, %rd130, 2;
	add.s64 	%rd132, %rd3, %rd131;
	st.global.v4.u32 	[%rd132], {%r16323, %r16321, %r16322, %r16320};
$L__BB0_67:                             // %pass28626
                                        //   in Loop: Header=BB0_62 Depth=1
	or.b32  	%r171, %r16371, 128;
	setp.lt.u32 	%p308, %r171, 384;
	@%p308 bra 	$L__BB0_68;
// %bb.80:                              // %pass28649
                                        //   in Loop: Header=BB0_62 Depth=1
	selp.b32 	%r184, %r16276, %r16313, %p287;
	selp.b32 	%r185, %r16313, %r16280, %p287;
	selp.b32 	%r186, %r16284, %r16315, %p287;
	selp.b32 	%r187, %r16315, %r16288, %p287;
	selp.b32 	%r188, %r16292, %r16317, %p287;
	selp.b32 	%r189, %r16317, %r16296, %p287;
	selp.b32 	%r190, %r16300, %r16319, %p287;
	selp.b32 	%r191, %r16319, %r16304, %p287;
	shl.b32 	%r16335, %r171, 13;
	or.b32  	%r16336, %r16335, %r53;
	or.b32  	%r16337, %r16336, %r39;
	or.b32  	%r16338, %r16337, %r40;
	cvt.s64.s32 	%rd133, %r16338;
	add.s64 	%rd134, %rd133, %rd9;
	shr.u64 	%rd135, %rd134, 36;
	add.s64 	%rd136, %rd134, %rd135;
	shr.s64 	%rd137, %rd136, 28;
	setp.lt.s64 	%p309, %rd134, 0;
	and.b64  	%rd138, %rd136, -268435456;
	setp.ne.s64 	%p310, %rd138, %rd134;
	and.pred  	%p311, %p309, %p310;
	selp.u64 	%rd139, 1, 0, %p311;
	sub.s64 	%rd140, %rd139, %rd137;
	shl.b64 	%rd141, %rd140, 28;
	add.s64 	%rd142, %rd141, %rd134;
	shl.b64 	%rd143, %rd142, 2;
	add.s64 	%rd144, %rd3, %rd143;
	st.global.v4.u32 	[%rd144], {%r184, %r186, %r185, %r187};
	or.b32  	%r16339, %r16335, %r54;
	or.b32  	%r16340, %r16339, %r39;
	or.b32  	%r16341, %r16340, %r40;
	cvt.s64.s32 	%rd145, %r16341;
	add.s64 	%rd146, %rd145, %rd9;
	shr.u64 	%rd147, %rd146, 36;
	add.s64 	%rd148, %rd146, %rd147;
	shr.u64 	%rd149, %rd148, 28;
	shr.u64 	%rd150, %rd146, 63;
	sub.s64 	%rd151, %rd150, %rd149;
	shl.b64 	%rd152, %rd151, 28;
	add.s64 	%rd153, %rd152, %rd146;
	shl.b64 	%rd154, %rd153, 2;
	add.s64 	%rd155, %rd3, %rd154;
	st.global.v4.u32 	[%rd155], {%r188, %r190, %r189, %r191};
	bra.uni 	$L__BB0_68;
$L__BB0_69:                             // %L70808
	mov.u32 	%r16342, 0;
	st.global.u32 	[%rd4], %r16342;
	ret;
$L__BB0_7:                              // %L167
	mov.u32 	%r16344, 2;
	st.global.u32 	[%rd4], %r16344;
	mov.u64 	%rd158, exception5818;
	cvta.global.u64 	%rd159, %rd158;
	{ // callseq 4, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd159;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 4
	{ // callseq 5, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r192;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 5
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_10:                             // %L275
	mov.u32 	%r16343, 3;
	st.global.u32 	[%rd4], %r16343;
	mov.u64 	%rd156, exception5818;
	cvta.global.u64 	%rd157, %rd156;
	{ // callseq 2, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd157;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 2
	{ // callseq 3, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r192;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 3
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
$L__BB0_1:                              // %L8
	mov.u64 	%rd28, exception1;
	cvta.global.u64 	%rd29, %rd28;
	{ // callseq 0, 0
	.reg .b32 temp_param_reg;
	.param .b64 param0;
	st.param.b64 	[param0+0], %rd29;
	call.uni 
	gpu_report_exception, 
	(
	param0
	);
	} // callseq 0
	{ // callseq 1, 0
	.reg .b32 temp_param_reg;
	.param .align 8 .b8 param0[16];
	st.param.b64 	[param0+0], %rd23;
	st.param.b32 	[param0+8], %r192;
	call.uni 
	gpu_signal_exception, 
	(
	param0
	);
	} // callseq 1
	trap;
	trap;
	// begin inline asm
	exit;
	// end inline asm
                                        // -- End function
}
